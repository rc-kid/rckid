    TEST(gbcemu, opcode_cb_ae) {
        GBCEmu gbc{};
        uint8_t cartridge[0x8000];
        cartridge[0x149] = 0x02; // 8kb external RAM
        gbc.loadCartridge(new FlashGamePak(cartridge));
        // CB AE 0000
        gbc.setState(0x909b, 0xb4b8, 0x91b0, 0x12ec, 0xcfc5, 0x8a26, 0x0, 0x1);
        gbc.writeMem(0x8a26, { 0xa2 });
        gbc.writeMem(0x909b, { 0xcb, 0xae });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0xb4b8, gbc.sp());
        EXPECT(0x909d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x82, gbc.readMem(0x8a26));
        EXPECT(0xcb, gbc.readMem(0x909b));
        EXPECT(0xae, gbc.readMem(0x909c));
        // CB AE 0001
        gbc.setState(0x2332, 0xf547, 0x5610, 0x4c55, 0xeba2, 0x446d, 0x0, 0x0);
        gbc.writeMem(0x2332, { 0xcb, 0xae });
        gbc.writeMem(0x446d, { 0x81 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0xf547, gbc.sp());
        EXPECT(0x2334, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB AE 0002
        gbc.setState(0x799d, 0x8ee8, 0xcfa0, 0x553d, 0xea94, 0x8428, 0x0, 0x0);
        gbc.writeMem(0x799d, { 0xcb, 0xae });
        gbc.writeMem(0x8428, { 0xd9 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x8ee8, gbc.sp());
        EXPECT(0x799f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd9, gbc.readMem(0x8428));
        // CB AE 0005
        gbc.setState(0x9192, 0x32fd, 0xf8a0, 0xc484, 0x4ace, 0x942, 0x1, 0x0);
        gbc.writeMem(0x942, { 0x4d });
        gbc.writeMem(0x9192, { 0xcb, 0xae });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x32fd, gbc.sp());
        EXPECT(0x9194, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9192));
        EXPECT(0xae, gbc.readMem(0x9193));
        // CB AE 0006
        gbc.setState(0xe24f, 0xcff, 0x2cd0, 0x3b3, 0xe3ba, 0xd4a6, 0x1, 0x0);
        gbc.writeMem(0xd4a6, { 0xcf });
        gbc.writeMem(0xe24f, { 0xcb, 0xae });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0xcff, gbc.sp());
        EXPECT(0xe251, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcf, gbc.readMem(0xd4a6));
        EXPECT(0xcb, gbc.readMem(0xe24f));
        EXPECT(0xae, gbc.readMem(0xe250));
        // CB AE 0008
        gbc.setState(0x28c9, 0x81e4, 0x86e0, 0xc506, 0x3709, 0xac00, 0x0, 0x0);
        gbc.writeMem(0x28c9, { 0xcb, 0xae });
        gbc.writeMem(0xac00, { 0x72 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x81e4, gbc.sp());
        EXPECT(0x28cb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x52, gbc.readMem(0xac00));
        // CB AE 0009
        gbc.setState(0xe941, 0xbae2, 0x5a20, 0x3d2e, 0x41df, 0x882b, 0x0, 0x0);
        gbc.writeMem(0x882b, { 0x27 });
        gbc.writeMem(0xe941, { 0xcb, 0xae });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0xbae2, gbc.sp());
        EXPECT(0xe943, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7, gbc.readMem(0x882b));
        EXPECT(0xcb, gbc.readMem(0xe941));
        EXPECT(0xae, gbc.readMem(0xe942));
        // CB AE 000B
        gbc.setState(0x29a0, 0x4664, 0x9fa0, 0x4092, 0xee2e, 0xaa0a, 0x0, 0x0);
        gbc.writeMem(0x29a0, { 0xcb, 0xae });
        gbc.writeMem(0xaa0a, { 0x2d });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x4664, gbc.sp());
        EXPECT(0x29a2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd, gbc.readMem(0xaa0a));
        // CB AE 000C
        gbc.setState(0x1f76, 0xe598, 0xeec0, 0x5690, 0xfc99, 0x6781, 0x1, 0x1);
        gbc.writeMem(0x1f76, { 0xcb, 0xae });
        gbc.writeMem(0x6781, { 0xd1 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0xe598, gbc.sp());
        EXPECT(0x1f78, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB AE 000D
        gbc.setState(0x6ac9, 0x9d2a, 0xae50, 0xa660, 0xc0a9, 0x9eed, 0x0, 0x0);
        gbc.writeMem(0x6ac9, { 0xcb, 0xae });
        gbc.writeMem(0x9eed, { 0xc1 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x9d2a, gbc.sp());
        EXPECT(0x6acb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc1, gbc.readMem(0x9eed));
        // CB AE 000F
        gbc.setState(0x73f7, 0x95b8, 0x5d0, 0x706c, 0xae62, 0xa44b, 0x0, 0x0);
        gbc.writeMem(0x73f7, { 0xcb, 0xae });
        gbc.writeMem(0xa44b, { 0xdb });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x95b8, gbc.sp());
        EXPECT(0x73f9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xdb, gbc.readMem(0xa44b));
        // CB AE 0010
        gbc.setState(0x5bc1, 0x3650, 0xa4e0, 0x83da, 0x267c, 0xf1e6, 0x0, 0x0);
        gbc.writeMem(0x5bc1, { 0xcb, 0xae });
        gbc.writeMem(0xf1e6, { 0x1 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x3650, gbc.sp());
        EXPECT(0x5bc3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1, gbc.readMem(0xf1e6));
        // CB AE 0011
        gbc.setState(0xda56, 0xb329, 0xbe10, 0xfd00, 0x61d4, 0xaec4, 0x1, 0x1);
        gbc.writeMem(0xaec4, { 0xe5 });
        gbc.writeMem(0xda56, { 0xcb, 0xae });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0xb329, gbc.sp());
        EXPECT(0xda58, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc5, gbc.readMem(0xaec4));
        EXPECT(0xcb, gbc.readMem(0xda56));
        EXPECT(0xae, gbc.readMem(0xda57));
        // CB AE 0012
        gbc.setState(0x7a70, 0xdf3, 0x2d70, 0xe1b2, 0x8ade, 0x6b96, 0x0, 0x1);
        gbc.writeMem(0x6b96, { 0x1f });
        gbc.writeMem(0x7a70, { 0xcb, 0xae });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0xdf3, gbc.sp());
        EXPECT(0x7a72, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB AE 0013
        gbc.setState(0xb7e6, 0x122b, 0x2890, 0x7f9d, 0xd8c4, 0xac9b, 0x0, 0x1);
        gbc.writeMem(0xac9b, { 0x29 });
        gbc.writeMem(0xb7e6, { 0xcb, 0xae });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x122b, gbc.sp());
        EXPECT(0xb7e8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9, gbc.readMem(0xac9b));
        EXPECT(0xcb, gbc.readMem(0xb7e6));
        EXPECT(0xae, gbc.readMem(0xb7e7));
        // CB AE 0015
        gbc.setState(0x6226, 0xcec7, 0xc290, 0x43aa, 0x871d, 0xf018, 0x1, 0x0);
        gbc.writeMem(0x6226, { 0xcb, 0xae });
        gbc.writeMem(0xf018, { 0xe2 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0xcec7, gbc.sp());
        EXPECT(0x6228, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc2, gbc.readMem(0xf018));
        // CB AE 0016
        gbc.setState(0x491f, 0x3f02, 0x65f0, 0x763b, 0xe276, 0x896e, 0x1, 0x0);
        gbc.writeMem(0x491f, { 0xcb, 0xae });
        gbc.writeMem(0x896e, { 0x8b });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x3f02, gbc.sp());
        EXPECT(0x4921, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8b, gbc.readMem(0x896e));
        // CB AE 0017
        gbc.setState(0x1966, 0xb3b5, 0xfa50, 0xb208, 0xe01f, 0xb20c, 0x1, 0x0);
        gbc.writeMem(0x1966, { 0xcb, 0xae });
        gbc.writeMem(0xb20c, { 0x76 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0xb3b5, gbc.sp());
        EXPECT(0x1968, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x56, gbc.readMem(0xb20c));
        // CB AE 0018
        gbc.setState(0x65b6, 0xc68b, 0x2b80, 0xca4e, 0xcf73, 0xc51e, 0x1, 0x1);
        gbc.writeMem(0x65b6, { 0xcb, 0xae });
        gbc.writeMem(0xc51e, { 0xd2 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0xc68b, gbc.sp());
        EXPECT(0x65b8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd2, gbc.readMem(0xc51e));
        // CB AE 0019
        gbc.setState(0x2391, 0x76dc, 0x40b0, 0x27e5, 0x78e, 0x4e0, 0x1, 0x0);
        gbc.writeMem(0x4e0, { 0xc7 });
        gbc.writeMem(0x2391, { 0xcb, 0xae });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x76dc, gbc.sp());
        EXPECT(0x2393, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB AE 001A
        gbc.setState(0xd3c8, 0x2b, 0x6850, 0xc6e5, 0xec7e, 0x266f, 0x1, 0x1);
        gbc.writeMem(0x266f, { 0x6 });
        gbc.writeMem(0xd3c8, { 0xcb, 0xae });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x2b, gbc.sp());
        EXPECT(0xd3ca, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd3c8));
        EXPECT(0xae, gbc.readMem(0xd3c9));
        // CB AE 001B
        gbc.setState(0x39ea, 0x9b68, 0x8740, 0xc4fe, 0x51d8, 0xab41, 0x1, 0x1);
        gbc.writeMem(0x39ea, { 0xcb, 0xae });
        gbc.writeMem(0xab41, { 0x23 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x9b68, gbc.sp());
        EXPECT(0x39ec, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3, gbc.readMem(0xab41));
        // CB AE 001C
        gbc.setState(0xaa99, 0x82fc, 0x2ec0, 0xc4c5, 0x5a8c, 0xef33, 0x0, 0x0);
        gbc.writeMem(0xaa99, { 0xcb, 0xae });
        gbc.writeMem(0xef33, { 0x52 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x82fc, gbc.sp());
        EXPECT(0xaa9b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaa99));
        EXPECT(0xae, gbc.readMem(0xaa9a));
        EXPECT(0x52, gbc.readMem(0xef33));
        // CB AE 001D
        gbc.setState(0xab0f, 0x84b1, 0xbde0, 0x210a, 0xb277, 0xf7dd, 0x0, 0x0);
        gbc.writeMem(0xab0f, { 0xcb, 0xae });
        gbc.writeMem(0xf7dd, { 0x4f });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x84b1, gbc.sp());
        EXPECT(0xab11, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xab0f));
        EXPECT(0xae, gbc.readMem(0xab10));
        EXPECT(0x4f, gbc.readMem(0xf7dd));
        // CB AE 0020
        gbc.setState(0x44bc, 0x9cc5, 0x6cf0, 0xa373, 0x8d85, 0xf623, 0x1, 0x1);
        gbc.writeMem(0x44bc, { 0xcb, 0xae });
        gbc.writeMem(0xf623, { 0xd7 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x9cc5, gbc.sp());
        EXPECT(0x44be, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd7, gbc.readMem(0xf623));
        // CB AE 0022
        gbc.setState(0xd6cb, 0xe029, 0x5d20, 0xa152, 0xd525, 0xbf4a, 0x0, 0x0);
        gbc.writeMem(0xbf4a, { 0xa9 });
        gbc.writeMem(0xd6cb, { 0xcb, 0xae });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0xe029, gbc.sp());
        EXPECT(0xd6cd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x89, gbc.readMem(0xbf4a));
        EXPECT(0xcb, gbc.readMem(0xd6cb));
        EXPECT(0xae, gbc.readMem(0xd6cc));
        // CB AE 0023
        gbc.setState(0xc775, 0xb00b, 0xcc80, 0x6a83, 0xb6c6, 0xb2f1, 0x0, 0x1);
        gbc.writeMem(0xb2f1, { 0x18 });
        gbc.writeMem(0xc775, { 0xcb, 0xae });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0xb00b, gbc.sp());
        EXPECT(0xc777, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x18, gbc.readMem(0xb2f1));
        EXPECT(0xcb, gbc.readMem(0xc775));
        EXPECT(0xae, gbc.readMem(0xc776));
        // CB AE 0024
        gbc.setState(0xcb8, 0x5d1, 0x92c0, 0x7e67, 0xa6b, 0x36c1, 0x1, 0x1);
        gbc.writeMem(0xcb8, { 0xcb, 0xae });
        gbc.writeMem(0x36c1, { 0x5c });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x5d1, gbc.sp());
        EXPECT(0xcba, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB AE 0026
        gbc.setState(0x54cd, 0xb3eb, 0x2c10, 0x6fbb, 0x8b9b, 0xfc91, 0x1, 0x0);
        gbc.writeMem(0x54cd, { 0xcb, 0xae });
        gbc.writeMem(0xfc91, { 0x66 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0xb3eb, gbc.sp());
        EXPECT(0x54cf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x46, gbc.readMem(0xfc91));
        // CB AE 0027
        gbc.setState(0x218b, 0x8431, 0x94b0, 0x73b7, 0x17ef, 0xf995, 0x1, 0x1);
        gbc.writeMem(0x218b, { 0xcb, 0xae });
        gbc.writeMem(0xf995, { 0xa7 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x8431, gbc.sp());
        EXPECT(0x218d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x87, gbc.readMem(0xf995));
        // CB AE 0028
        gbc.setState(0xb2ac, 0xe336, 0xc7d0, 0x498b, 0xff5a, 0xe5d7, 0x0, 0x0);
        gbc.writeMem(0xb2ac, { 0xcb, 0xae });
        gbc.writeMem(0xe5d7, { 0x7e });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0xe336, gbc.sp());
        EXPECT(0xb2ae, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb2ac));
        EXPECT(0xae, gbc.readMem(0xb2ad));
        EXPECT(0x5e, gbc.readMem(0xe5d7));
        // CB AE 0029
        gbc.setState(0x9cae, 0xebf, 0xfc20, 0x2f50, 0xe6ea, 0x3479, 0x0, 0x0);
        gbc.writeMem(0x3479, { 0xca });
        gbc.writeMem(0x9cae, { 0xcb, 0xae });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0xebf, gbc.sp());
        EXPECT(0x9cb0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9cae));
        EXPECT(0xae, gbc.readMem(0x9caf));
        // CB AE 002B
        gbc.setState(0xe293, 0xb3e8, 0xb7b0, 0xe6b2, 0x6fd7, 0xf526, 0x1, 0x0);
        gbc.writeMem(0xe293, { 0xcb, 0xae });
        gbc.writeMem(0xf526, { 0x86 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0xb3e8, gbc.sp());
        EXPECT(0xe295, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe293));
        EXPECT(0xae, gbc.readMem(0xe294));
        EXPECT(0x86, gbc.readMem(0xf526));
        // CB AE 002E
        gbc.setState(0x96f5, 0xd0c5, 0x9600, 0xeffe, 0xcf1a, 0x6a6f, 0x0, 0x1);
        gbc.writeMem(0x6a6f, { 0x99 });
        gbc.writeMem(0x96f5, { 0xcb, 0xae });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0xd0c5, gbc.sp());
        EXPECT(0x96f7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x96f5));
        EXPECT(0xae, gbc.readMem(0x96f6));
        // CB AE 002F
        gbc.setState(0x90fc, 0x9300, 0xc170, 0x722e, 0x70a, 0x9d8e, 0x0, 0x1);
        gbc.writeMem(0x90fc, { 0xcb, 0xae });
        gbc.writeMem(0x9d8e, { 0x7b });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x9300, gbc.sp());
        EXPECT(0x90fe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x90fc));
        EXPECT(0xae, gbc.readMem(0x90fd));
        EXPECT(0x5b, gbc.readMem(0x9d8e));
        // CB AE 0031
        gbc.setState(0x637d, 0xccfb, 0x6ac0, 0x8f9c, 0xfdb9, 0xcb20, 0x1, 0x0);
        gbc.writeMem(0x637d, { 0xcb, 0xae });
        gbc.writeMem(0xcb20, { 0x68 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0xccfb, gbc.sp());
        EXPECT(0x637f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x48, gbc.readMem(0xcb20));
        // CB AE 0032
        gbc.setState(0x8757, 0x61c6, 0xd00, 0x41d6, 0x2be1, 0xfa6d, 0x1, 0x1);
        gbc.writeMem(0x8757, { 0xcb, 0xae });
        gbc.writeMem(0xfa6d, { 0xca });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x61c6, gbc.sp());
        EXPECT(0x8759, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8757));
        EXPECT(0xae, gbc.readMem(0x8758));
        EXPECT(0xca, gbc.readMem(0xfa6d));
        // CB AE 0033
        gbc.setState(0x275d, 0xd3a3, 0xefc0, 0x17a4, 0xeedd, 0x667b, 0x0, 0x0);
        gbc.writeMem(0x275d, { 0xcb, 0xae });
        gbc.writeMem(0x667b, { 0x83 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0xd3a3, gbc.sp());
        EXPECT(0x275f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB AE 0034
        gbc.setState(0x8260, 0x1df3, 0x3230, 0x8f6e, 0x2d22, 0x1751, 0x0, 0x1);
        gbc.writeMem(0x1751, { 0xb });
        gbc.writeMem(0x8260, { 0xcb, 0xae });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x1df3, gbc.sp());
        EXPECT(0x8262, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8260));
        EXPECT(0xae, gbc.readMem(0x8261));
        // CB AE 0036
        gbc.setState(0xba93, 0xf71e, 0x5800, 0x1a78, 0x47b0, 0xb903, 0x0, 0x1);
        gbc.writeMem(0xb903, { 0x15 });
        gbc.writeMem(0xba93, { 0xcb, 0xae });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0xf71e, gbc.sp());
        EXPECT(0xba95, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x15, gbc.readMem(0xb903));
        EXPECT(0xcb, gbc.readMem(0xba93));
        EXPECT(0xae, gbc.readMem(0xba94));
        // CB AE 0037
        gbc.setState(0x70e2, 0x46b8, 0x9f60, 0x19ae, 0x96dd, 0xb58e, 0x0, 0x1);
        gbc.writeMem(0x70e2, { 0xcb, 0xae });
        gbc.writeMem(0xb58e, { 0x56 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x46b8, gbc.sp());
        EXPECT(0x70e4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x56, gbc.readMem(0xb58e));
        // CB AE 003A
        gbc.setState(0x2120, 0x29c3, 0xe310, 0xa1e, 0xe9ff, 0x9b5a, 0x1, 0x1);
        gbc.writeMem(0x2120, { 0xcb, 0xae });
        gbc.writeMem(0x9b5a, { 0xb });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x29c3, gbc.sp());
        EXPECT(0x2122, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb, gbc.readMem(0x9b5a));
        // CB AE 003B
        gbc.setState(0xc44a, 0xc83d, 0x2ad0, 0x71a0, 0x4906, 0x84ed, 0x1, 0x0);
        gbc.writeMem(0x84ed, { 0x1a });
        gbc.writeMem(0xc44a, { 0xcb, 0xae });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0xc83d, gbc.sp());
        EXPECT(0xc44c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1a, gbc.readMem(0x84ed));
        EXPECT(0xcb, gbc.readMem(0xc44a));
        EXPECT(0xae, gbc.readMem(0xc44b));
        // CB AE 003C
        gbc.setState(0xe735, 0xd113, 0x5410, 0x7964, 0x5762, 0xb389, 0x0, 0x1);
        gbc.writeMem(0xb389, { 0x5f });
        gbc.writeMem(0xe735, { 0xcb, 0xae });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0xd113, gbc.sp());
        EXPECT(0xe737, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5f, gbc.readMem(0xb389));
        EXPECT(0xcb, gbc.readMem(0xe735));
        EXPECT(0xae, gbc.readMem(0xe736));
        // CB AE 003D
        gbc.setState(0x1742, 0x5fe3, 0x9940, 0x2101, 0x1303, 0xea51, 0x1, 0x1);
        gbc.writeMem(0x1742, { 0xcb, 0xae });
        gbc.writeMem(0xea51, { 0xe6 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x5fe3, gbc.sp());
        EXPECT(0x1744, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc6, gbc.readMem(0xea51));
        // CB AE 003E
        gbc.setState(0x51a4, 0x157, 0x6e60, 0xbc10, 0xbd59, 0xaf1, 0x0, 0x0);
        gbc.writeMem(0xaf1, { 0x87 });
        gbc.writeMem(0x51a4, { 0xcb, 0xae });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x157, gbc.sp());
        EXPECT(0x51a6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB AE 003F
        gbc.setState(0x66b1, 0x468d, 0xc360, 0xe9cc, 0x6bf, 0x9bed, 0x0, 0x0);
        gbc.writeMem(0x66b1, { 0xcb, 0xae });
        gbc.writeMem(0x9bed, { 0xe2 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x468d, gbc.sp());
        EXPECT(0x66b3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc2, gbc.readMem(0x9bed));
        // CB AE 0041
        gbc.setState(0x2ad, 0xce3f, 0x3240, 0xcc66, 0x166c, 0x5ee8, 0x0, 0x0);
        gbc.writeMem(0x2ad, { 0xcb, 0xae });
        gbc.writeMem(0x5ee8, { 0x1 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0xce3f, gbc.sp());
        EXPECT(0x2af, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB AE 0042
        gbc.setState(0x306f, 0xb4a5, 0x3f20, 0xd766, 0x615a, 0xd9c9, 0x0, 0x0);
        gbc.writeMem(0x306f, { 0xcb, 0xae });
        gbc.writeMem(0xd9c9, { 0xbe });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0xb4a5, gbc.sp());
        EXPECT(0x3071, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9e, gbc.readMem(0xd9c9));
        // CB AE 0043
        gbc.setState(0xdd0a, 0xd682, 0x7b20, 0xb9c4, 0x1a6f, 0xc6f2, 0x0, 0x0);
        gbc.writeMem(0xc6f2, { 0x65 });
        gbc.writeMem(0xdd0a, { 0xcb, 0xae });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0xd682, gbc.sp());
        EXPECT(0xdd0c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x45, gbc.readMem(0xc6f2));
        EXPECT(0xcb, gbc.readMem(0xdd0a));
        EXPECT(0xae, gbc.readMem(0xdd0b));
        // CB AE 0044
        gbc.setState(0x3325, 0x4a4a, 0x7d60, 0x3874, 0xe17, 0xf255, 0x0, 0x0);
        gbc.writeMem(0x3325, { 0xcb, 0xae });
        gbc.writeMem(0xf255, { 0x26 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x4a4a, gbc.sp());
        EXPECT(0x3327, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6, gbc.readMem(0xf255));
        // CB AE 0045
        gbc.setState(0x3921, 0xe010, 0xa90, 0x3c1e, 0x9ab0, 0x1519, 0x1, 0x1);
        gbc.writeMem(0x1519, { 0xda });
        gbc.writeMem(0x3921, { 0xcb, 0xae });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0xe010, gbc.sp());
        EXPECT(0x3923, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB AE 0047
        gbc.setState(0xecb9, 0x43ec, 0x6840, 0xa0f, 0xfb1b, 0xea89, 0x1, 0x1);
        gbc.writeMem(0xea89, { 0xa9 });
        gbc.writeMem(0xecb9, { 0xcb, 0xae });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x43ec, gbc.sp());
        EXPECT(0xecbb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x89, gbc.readMem(0xea89));
        EXPECT(0xcb, gbc.readMem(0xecb9));
        EXPECT(0xae, gbc.readMem(0xecba));
        // CB AE 0049
        gbc.setState(0x605d, 0xc047, 0x3a0, 0x8e5d, 0x9cb9, 0xd72b, 0x0, 0x1);
        gbc.writeMem(0x605d, { 0xcb, 0xae });
        gbc.writeMem(0xd72b, { 0x2 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0xc047, gbc.sp());
        EXPECT(0x605f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2, gbc.readMem(0xd72b));
        // CB AE 004A
        gbc.setState(0xd3b9, 0x677, 0xa090, 0x4e0b, 0x9c87, 0xa730, 0x0, 0x1);
        gbc.writeMem(0xa730, { 0x86 });
        gbc.writeMem(0xd3b9, { 0xcb, 0xae });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x677, gbc.sp());
        EXPECT(0xd3bb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x86, gbc.readMem(0xa730));
        EXPECT(0xcb, gbc.readMem(0xd3b9));
        EXPECT(0xae, gbc.readMem(0xd3ba));
        // CB AE 004C
        gbc.setState(0x36ba, 0xce18, 0xde0, 0x8256, 0x6404, 0xf151, 0x0, 0x0);
        gbc.writeMem(0x36ba, { 0xcb, 0xae });
        gbc.writeMem(0xf151, { 0x9d });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0xce18, gbc.sp());
        EXPECT(0x36bc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9d, gbc.readMem(0xf151));
        // CB AE 004D
        gbc.setState(0xcb81, 0x28ec, 0x420, 0x1201, 0x5cd4, 0xbf26, 0x0, 0x1);
        gbc.writeMem(0xbf26, { 0xd2 });
        gbc.writeMem(0xcb81, { 0xcb, 0xae });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x28ec, gbc.sp());
        EXPECT(0xcb83, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd2, gbc.readMem(0xbf26));
        EXPECT(0xcb, gbc.readMem(0xcb81));
        EXPECT(0xae, gbc.readMem(0xcb82));
        // CB AE 004F
        gbc.setState(0xa633, 0xb952, 0x30b0, 0x3927, 0xa85d, 0x1f06, 0x1, 0x1);
        gbc.writeMem(0x1f06, { 0x16 });
        gbc.writeMem(0xa633, { 0xcb, 0xae });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0xb952, gbc.sp());
        EXPECT(0xa635, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa633));
        EXPECT(0xae, gbc.readMem(0xa634));
        // CB AE 0052
        gbc.setState(0xc54c, 0x3307, 0x1800, 0x2744, 0x1600, 0x2bc0, 0x1, 0x1);
        gbc.writeMem(0x2bc0, { 0x85 });
        gbc.writeMem(0xc54c, { 0xcb, 0xae });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x3307, gbc.sp());
        EXPECT(0xc54e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc54c));
        EXPECT(0xae, gbc.readMem(0xc54d));
        // CB AE 0054
        gbc.setState(0x9171, 0xa1f0, 0xea30, 0xe885, 0x586c, 0x8d7a, 0x0, 0x0);
        gbc.writeMem(0x8d7a, { 0x5e });
        gbc.writeMem(0x9171, { 0xcb, 0xae });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0xa1f0, gbc.sp());
        EXPECT(0x9173, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5e, gbc.readMem(0x8d7a));
        EXPECT(0xcb, gbc.readMem(0x9171));
        EXPECT(0xae, gbc.readMem(0x9172));
        // CB AE 0055
        gbc.setState(0xd39f, 0x90f0, 0xcdd0, 0x68f3, 0x288d, 0xe5d6, 0x0, 0x1);
        gbc.writeMem(0xd39f, { 0xcb, 0xae });
        gbc.writeMem(0xe5d6, { 0x49 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x90f0, gbc.sp());
        EXPECT(0xd3a1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd39f));
        EXPECT(0xae, gbc.readMem(0xd3a0));
        EXPECT(0x49, gbc.readMem(0xe5d6));
        // CB AE 0056
        gbc.setState(0xd09b, 0xd658, 0x7000, 0x6fe5, 0xc3f9, 0xa572, 0x1, 0x0);
        gbc.writeMem(0xa572, { 0xa });
        gbc.writeMem(0xd09b, { 0xcb, 0xae });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0xd658, gbc.sp());
        EXPECT(0xd09d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa, gbc.readMem(0xa572));
        EXPECT(0xcb, gbc.readMem(0xd09b));
        EXPECT(0xae, gbc.readMem(0xd09c));
        // CB AE 0058
        gbc.setState(0x8b19, 0xf79, 0xa910, 0x8297, 0xc8f8, 0xe5ee, 0x0, 0x1);
        gbc.writeMem(0x8b19, { 0xcb, 0xae });
        gbc.writeMem(0xe5ee, { 0x4f });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0xf79, gbc.sp());
        EXPECT(0x8b1b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8b19));
        EXPECT(0xae, gbc.readMem(0x8b1a));
        EXPECT(0x4f, gbc.readMem(0xe5ee));
        // CB AE 0059
        gbc.setState(0xe55, 0x2886, 0xeeb0, 0x3239, 0x7de5, 0x9ed4, 0x0, 0x1);
        gbc.writeMem(0xe55, { 0xcb, 0xae });
        gbc.writeMem(0x9ed4, { 0x36 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x2886, gbc.sp());
        EXPECT(0xe57, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x16, gbc.readMem(0x9ed4));
        // CB AE 005C
        gbc.setState(0x3dfc, 0x4d4, 0xb980, 0x6e02, 0x3afa, 0xb717, 0x1, 0x0);
        gbc.writeMem(0x3dfc, { 0xcb, 0xae });
        gbc.writeMem(0xb717, { 0x98 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x4d4, gbc.sp());
        EXPECT(0x3dfe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x98, gbc.readMem(0xb717));
        // CB AE 005D
        gbc.setState(0x62ad, 0x96af, 0x4e80, 0x3e0a, 0xe166, 0x8b86, 0x1, 0x0);
        gbc.writeMem(0x62ad, { 0xcb, 0xae });
        gbc.writeMem(0x8b86, { 0xf4 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x96af, gbc.sp());
        EXPECT(0x62af, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd4, gbc.readMem(0x8b86));
        // CB AE 005E
        gbc.setState(0xb1, 0xa2b2, 0x5550, 0xbf66, 0xaa8f, 0x930b, 0x0, 0x0);
        gbc.writeMem(0xb1, { 0xcb, 0xae });
        gbc.writeMem(0x930b, { 0x7e });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0xa2b2, gbc.sp());
        EXPECT(0xb3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5e, gbc.readMem(0x930b));
        // CB AE 005F
        gbc.setState(0xad7f, 0xa50b, 0x1350, 0x6df1, 0x139c, 0x187f, 0x1, 0x1);
        gbc.writeMem(0x187f, { 0x1f });
        gbc.writeMem(0xad7f, { 0xcb, 0xae });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0xa50b, gbc.sp());
        EXPECT(0xad81, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xad7f));
        EXPECT(0xae, gbc.readMem(0xad80));
        // CB AE 0061
        gbc.setState(0x5f92, 0xd40b, 0xc240, 0x1a10, 0x8d65, 0xd814, 0x0, 0x1);
        gbc.writeMem(0x5f92, { 0xcb, 0xae });
        gbc.writeMem(0xd814, { 0x72 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0xd40b, gbc.sp());
        EXPECT(0x5f94, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x52, gbc.readMem(0xd814));
        // CB AE 0062
        gbc.setState(0x9188, 0xc764, 0x8bf0, 0xd863, 0x486d, 0x2456, 0x1, 0x0);
        gbc.writeMem(0x2456, { 0x83 });
        gbc.writeMem(0x9188, { 0xcb, 0xae });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0xc764, gbc.sp());
        EXPECT(0x918a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9188));
        EXPECT(0xae, gbc.readMem(0x9189));
        // CB AE 0063
        gbc.setState(0x97e5, 0xe92c, 0x92e0, 0x258a, 0xcf1b, 0xa871, 0x0, 0x1);
        gbc.writeMem(0x97e5, { 0xcb, 0xae });
        gbc.writeMem(0xa871, { 0x19 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0xe92c, gbc.sp());
        EXPECT(0x97e7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x97e5));
        EXPECT(0xae, gbc.readMem(0x97e6));
        EXPECT(0x19, gbc.readMem(0xa871));
        // CB AE 0066
        gbc.setState(0xc53c, 0xc368, 0x1080, 0x9619, 0x7cd, 0xa340, 0x0, 0x0);
        gbc.writeMem(0xa340, { 0xe2 });
        gbc.writeMem(0xc53c, { 0xcb, 0xae });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0xc368, gbc.sp());
        EXPECT(0xc53e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc2, gbc.readMem(0xa340));
        EXPECT(0xcb, gbc.readMem(0xc53c));
        EXPECT(0xae, gbc.readMem(0xc53d));
        // CB AE 0067
        gbc.setState(0x6a6c, 0x9e2c, 0x47a0, 0xfe13, 0x9dac, 0x63bd, 0x0, 0x1);
        gbc.writeMem(0x63bd, { 0x86 });
        gbc.writeMem(0x6a6c, { 0xcb, 0xae });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x9e2c, gbc.sp());
        EXPECT(0x6a6e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB AE 0068
        gbc.setState(0x3bd3, 0x75e9, 0xee30, 0x3a73, 0xe62b, 0x7a8d, 0x1, 0x1);
        gbc.writeMem(0x3bd3, { 0xcb, 0xae });
        gbc.writeMem(0x7a8d, { 0x17 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x75e9, gbc.sp());
        EXPECT(0x3bd5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB AE 0069
        gbc.setState(0xed41, 0xb0a1, 0x1ea0, 0xf4b1, 0x7ccc, 0xd818, 0x1, 0x0);
        gbc.writeMem(0xd818, { 0x41 });
        gbc.writeMem(0xed41, { 0xcb, 0xae });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0xb0a1, gbc.sp());
        EXPECT(0xed43, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x41, gbc.readMem(0xd818));
        EXPECT(0xcb, gbc.readMem(0xed41));
        EXPECT(0xae, gbc.readMem(0xed42));
        // CB AE 006A
        gbc.setState(0xd1dc, 0xa4a7, 0x5a40, 0x89a0, 0x680e, 0xcd9c, 0x1, 0x0);
        gbc.writeMem(0xcd9c, { 0x9b });
        gbc.writeMem(0xd1dc, { 0xcb, 0xae });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0xa4a7, gbc.sp());
        EXPECT(0xd1de, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9b, gbc.readMem(0xcd9c));
        EXPECT(0xcb, gbc.readMem(0xd1dc));
        EXPECT(0xae, gbc.readMem(0xd1dd));
        // CB AE 006B
        gbc.setState(0x6c89, 0x2fae, 0xd3c0, 0x3c, 0xa1cf, 0xa672, 0x0, 0x1);
        gbc.writeMem(0x6c89, { 0xcb, 0xae });
        gbc.writeMem(0xa672, { 0xa3 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x2fae, gbc.sp());
        EXPECT(0x6c8b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x83, gbc.readMem(0xa672));
        // CB AE 006C
        gbc.setState(0x82a2, 0xddfe, 0x35b0, 0xcce6, 0x47c7, 0xf768, 0x1, 0x0);
        gbc.writeMem(0x82a2, { 0xcb, 0xae });
        gbc.writeMem(0xf768, { 0xbd });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0xddfe, gbc.sp());
        EXPECT(0x82a4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x82a2));
        EXPECT(0xae, gbc.readMem(0x82a3));
        EXPECT(0x9d, gbc.readMem(0xf768));
        // CB AE 006F
        gbc.setState(0x61d9, 0x7698, 0xc7c0, 0xe07d, 0xd4b1, 0xb87c, 0x0, 0x1);
        gbc.writeMem(0x61d9, { 0xcb, 0xae });
        gbc.writeMem(0xb87c, { 0x3d });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x7698, gbc.sp());
        EXPECT(0x61db, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1d, gbc.readMem(0xb87c));
        // CB AE 0072
        gbc.setState(0x5ba4, 0xe3c8, 0x71a0, 0xc677, 0x8523, 0xf424, 0x0, 0x1);
        gbc.writeMem(0x5ba4, { 0xcb, 0xae });
        gbc.writeMem(0xf424, { 0xae });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0xe3c8, gbc.sp());
        EXPECT(0x5ba6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8e, gbc.readMem(0xf424));
        // CB AE 0073
        gbc.setState(0x2c97, 0xb135, 0x5b60, 0xa996, 0x94df, 0xcf45, 0x0, 0x1);
        gbc.writeMem(0x2c97, { 0xcb, 0xae });
        gbc.writeMem(0xcf45, { 0x3e });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0xb135, gbc.sp());
        EXPECT(0x2c99, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1e, gbc.readMem(0xcf45));
        // CB AE 0074
        gbc.setState(0x6ddb, 0x3763, 0xa200, 0x9fd5, 0xf65d, 0xaf87, 0x0, 0x1);
        gbc.writeMem(0x6ddb, { 0xcb, 0xae });
        gbc.writeMem(0xaf87, { 0xaa });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x3763, gbc.sp());
        EXPECT(0x6ddd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8a, gbc.readMem(0xaf87));
        // CB AE 0077
        gbc.setState(0xeb55, 0x3e8c, 0x55c0, 0xfa8f, 0x173e, 0x9b1a, 0x0, 0x0);
        gbc.writeMem(0x9b1a, { 0xa4 });
        gbc.writeMem(0xeb55, { 0xcb, 0xae });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x3e8c, gbc.sp());
        EXPECT(0xeb57, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x84, gbc.readMem(0x9b1a));
        EXPECT(0xcb, gbc.readMem(0xeb55));
        EXPECT(0xae, gbc.readMem(0xeb56));
        // CB AE 0078
        gbc.setState(0x3c37, 0x31d8, 0xaf00, 0x9703, 0xdd80, 0xd885, 0x1, 0x0);
        gbc.writeMem(0x3c37, { 0xcb, 0xae });
        gbc.writeMem(0xd885, { 0x57 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x31d8, gbc.sp());
        EXPECT(0x3c39, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x57, gbc.readMem(0xd885));
        // CB AE 0079
        gbc.setState(0xd686, 0xa85b, 0xf5e0, 0xbe19, 0xfee2, 0x1eb, 0x1, 0x0);
        gbc.writeMem(0x1eb, { 0x98 });
        gbc.writeMem(0xd686, { 0xcb, 0xae });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0xa85b, gbc.sp());
        EXPECT(0xd688, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd686));
        EXPECT(0xae, gbc.readMem(0xd687));
        // CB AE 007A
        gbc.setState(0xaa3, 0x6767, 0x2f50, 0x8efe, 0x9601, 0xaea8, 0x0, 0x1);
        gbc.writeMem(0xaa3, { 0xcb, 0xae });
        gbc.writeMem(0xaea8, { 0x95 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x6767, gbc.sp());
        EXPECT(0xaa5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x95, gbc.readMem(0xaea8));
        // CB AE 007C
        gbc.setState(0xb0a, 0xd48f, 0x5bf0, 0x1f5e, 0x6034, 0xcc7f, 0x1, 0x0);
        gbc.writeMem(0xb0a, { 0xcb, 0xae });
        gbc.writeMem(0xcc7f, { 0x18 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0xd48f, gbc.sp());
        EXPECT(0xb0c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x18, gbc.readMem(0xcc7f));
        // CB AE 007E
        gbc.setState(0x261e, 0xb976, 0x6e30, 0x5c65, 0x4498, 0x8209, 0x0, 0x1);
        gbc.writeMem(0x261e, { 0xcb, 0xae });
        gbc.writeMem(0x8209, { 0xc6 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0xb976, gbc.sp());
        EXPECT(0x2620, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc6, gbc.readMem(0x8209));
        // CB AE 007F
        gbc.setState(0x73bb, 0xd3f3, 0x4270, 0x8d91, 0xc131, 0xb7a1, 0x1, 0x1);
        gbc.writeMem(0x73bb, { 0xcb, 0xae });
        gbc.writeMem(0xb7a1, { 0x6c });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0xd3f3, gbc.sp());
        EXPECT(0x73bd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4c, gbc.readMem(0xb7a1));
        // CB AE 0084
        gbc.setState(0x5aaf, 0xb4ab, 0x9410, 0xcbc, 0xd971, 0x8ee6, 0x0, 0x1);
        gbc.writeMem(0x5aaf, { 0xcb, 0xae });
        gbc.writeMem(0x8ee6, { 0x7c });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0xb4ab, gbc.sp());
        EXPECT(0x5ab1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5c, gbc.readMem(0x8ee6));
        // CB AE 0085
        gbc.setState(0x8f29, 0x3bf3, 0xb190, 0x19b4, 0x33cc, 0x9a5b, 0x1, 0x0);
        gbc.writeMem(0x8f29, { 0xcb, 0xae });
        gbc.writeMem(0x9a5b, { 0xd9 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x3bf3, gbc.sp());
        EXPECT(0x8f2b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8f29));
        EXPECT(0xae, gbc.readMem(0x8f2a));
        EXPECT(0xd9, gbc.readMem(0x9a5b));
        // CB AE 0086
        gbc.setState(0x3741, 0x2dac, 0xe680, 0x94d5, 0xb8c5, 0xd81, 0x1, 0x1);
        gbc.writeMem(0xd81, { 0x1f });
        gbc.writeMem(0x3741, { 0xcb, 0xae });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x2dac, gbc.sp());
        EXPECT(0x3743, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB AE 0087
        gbc.setState(0x9a8c, 0x1e1f, 0xaf10, 0xddc, 0xc9a2, 0x4512, 0x1, 0x0);
        gbc.writeMem(0x4512, { 0x2 });
        gbc.writeMem(0x9a8c, { 0xcb, 0xae });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x1e1f, gbc.sp());
        EXPECT(0x9a8e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9a8c));
        EXPECT(0xae, gbc.readMem(0x9a8d));
        // CB AE 0088
        gbc.setState(0x7d53, 0x90aa, 0x7b20, 0xa9de, 0x8a92, 0xb568, 0x1, 0x0);
        gbc.writeMem(0x7d53, { 0xcb, 0xae });
        gbc.writeMem(0xb568, { 0xfc });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x90aa, gbc.sp());
        EXPECT(0x7d55, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xdc, gbc.readMem(0xb568));
        // CB AE 0089
        gbc.setState(0x2596, 0x6399, 0xe980, 0x732, 0x4480, 0x9605, 0x0, 0x1);
        gbc.writeMem(0x2596, { 0xcb, 0xae });
        gbc.writeMem(0x9605, { 0x56 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x6399, gbc.sp());
        EXPECT(0x2598, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x56, gbc.readMem(0x9605));
        // CB AE 008C
        gbc.setState(0x8337, 0xdcbf, 0xb480, 0x97c5, 0x12d, 0x279a, 0x1, 0x0);
        gbc.writeMem(0x279a, { 0x89 });
        gbc.writeMem(0x8337, { 0xcb, 0xae });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0xdcbf, gbc.sp());
        EXPECT(0x8339, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8337));
        EXPECT(0xae, gbc.readMem(0x8338));
        // CB AE 008D
        gbc.setState(0x85e5, 0xa8ff, 0xac20, 0xf11b, 0xbfb9, 0x952b, 0x0, 0x0);
        gbc.writeMem(0x85e5, { 0xcb, 0xae });
        gbc.writeMem(0x952b, { 0x7f });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0xa8ff, gbc.sp());
        EXPECT(0x85e7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x85e5));
        EXPECT(0xae, gbc.readMem(0x85e6));
        EXPECT(0x5f, gbc.readMem(0x952b));
        // CB AE 008E
        gbc.setState(0xb5dc, 0x38ab, 0x9130, 0xb857, 0x785d, 0xaf51, 0x1, 0x0);
        gbc.writeMem(0xaf51, { 0xff });
        gbc.writeMem(0xb5dc, { 0xcb, 0xae });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x38ab, gbc.sp());
        EXPECT(0xb5de, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xdf, gbc.readMem(0xaf51));
        EXPECT(0xcb, gbc.readMem(0xb5dc));
        EXPECT(0xae, gbc.readMem(0xb5dd));
        // CB AE 0091
        gbc.setState(0x9361, 0x9c61, 0x1cf0, 0x1090, 0x7db2, 0x95ce, 0x1, 0x0);
        gbc.writeMem(0x9361, { 0xcb, 0xae });
        gbc.writeMem(0x95ce, { 0x6a });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x9c61, gbc.sp());
        EXPECT(0x9363, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9361));
        EXPECT(0xae, gbc.readMem(0x9362));
        EXPECT(0x4a, gbc.readMem(0x95ce));
        // CB AE 0092
        gbc.setState(0xb4d, 0xc1a8, 0x60c0, 0x912e, 0x6b2c, 0xfa32, 0x0, 0x1);
        gbc.writeMem(0xb4d, { 0xcb, 0xae });
        gbc.writeMem(0xfa32, { 0xe9 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0xc1a8, gbc.sp());
        EXPECT(0xb4f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc9, gbc.readMem(0xfa32));
        // CB AE 0093
        gbc.setState(0xd239, 0xe379, 0xe580, 0xd745, 0x20aa, 0xb394, 0x1, 0x1);
        gbc.writeMem(0xb394, { 0xd6 });
        gbc.writeMem(0xd239, { 0xcb, 0xae });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0xe379, gbc.sp());
        EXPECT(0xd23b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd6, gbc.readMem(0xb394));
        EXPECT(0xcb, gbc.readMem(0xd239));
        EXPECT(0xae, gbc.readMem(0xd23a));
        // CB AE 0094
        gbc.setState(0x8294, 0xf955, 0xf400, 0x29c2, 0x894d, 0xfb0, 0x0, 0x1);
        gbc.writeMem(0xfb0, { 0x41 });
        gbc.writeMem(0x8294, { 0xcb, 0xae });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0xf955, gbc.sp());
        EXPECT(0x8296, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8294));
        EXPECT(0xae, gbc.readMem(0x8295));
        // CB AE 0096
        gbc.setState(0x1e5c, 0x1e38, 0x3c0, 0x708c, 0x62e3, 0x5063, 0x1, 0x1);
        gbc.writeMem(0x1e5c, { 0xcb, 0xae });
        gbc.writeMem(0x5063, { 0xde });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x1e38, gbc.sp());
        EXPECT(0x1e5e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB AE 0098
        gbc.setState(0x2e4b, 0x53fc, 0xf3e0, 0xd499, 0xde77, 0xdbbb, 0x1, 0x0);
        gbc.writeMem(0x2e4b, { 0xcb, 0xae });
        gbc.writeMem(0xdbbb, { 0x87 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x53fc, gbc.sp());
        EXPECT(0x2e4d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x87, gbc.readMem(0xdbbb));
        // CB AE 0099
        gbc.setState(0xe198, 0x6ea4, 0xf200, 0x968b, 0xc059, 0xa1e2, 0x0, 0x1);
        gbc.writeMem(0xa1e2, { 0x8e });
        gbc.writeMem(0xe198, { 0xcb, 0xae });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x6ea4, gbc.sp());
        EXPECT(0xe19a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8e, gbc.readMem(0xa1e2));
        EXPECT(0xcb, gbc.readMem(0xe198));
        EXPECT(0xae, gbc.readMem(0xe199));
        // CB AE 009A
        gbc.setState(0x84fd, 0x37c8, 0x9850, 0x3ed8, 0x3b8c, 0x6e10, 0x0, 0x1);
        gbc.writeMem(0x6e10, { 0x1b });
        gbc.writeMem(0x84fd, { 0xcb, 0xae });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x37c8, gbc.sp());
        EXPECT(0x84ff, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x84fd));
        EXPECT(0xae, gbc.readMem(0x84fe));
        // CB AE 009B
        gbc.setState(0xb135, 0xf673, 0x1a30, 0xd6b9, 0x647d, 0xb0e1, 0x1, 0x0);
        gbc.writeMem(0xb0e1, { 0x30 });
        gbc.writeMem(0xb135, { 0xcb, 0xae });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0xf673, gbc.sp());
        EXPECT(0xb137, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x10, gbc.readMem(0xb0e1));
        EXPECT(0xcb, gbc.readMem(0xb135));
        EXPECT(0xae, gbc.readMem(0xb136));
        // CB AE 009C
        gbc.setState(0xb5dc, 0x9f8d, 0x23d0, 0x42ed, 0xd33, 0xb606, 0x0, 0x1);
        gbc.writeMem(0xb5dc, { 0xcb, 0xae });
        gbc.writeMem(0xb606, { 0x9d });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x9f8d, gbc.sp());
        EXPECT(0xb5de, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb5dc));
        EXPECT(0xae, gbc.readMem(0xb5dd));
        EXPECT(0x9d, gbc.readMem(0xb606));
        // CB AE 009D
        gbc.setState(0x7a84, 0xce85, 0xd790, 0x3b32, 0x8340, 0xa61e, 0x0, 0x1);
        gbc.writeMem(0x7a84, { 0xcb, 0xae });
        gbc.writeMem(0xa61e, { 0x97 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0xce85, gbc.sp());
        EXPECT(0x7a86, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x97, gbc.readMem(0xa61e));
        // CB AE 009E
        gbc.setState(0x8eb7, 0x9a88, 0x2c00, 0x94e9, 0x1e7f, 0x5572, 0x1, 0x0);
        gbc.writeMem(0x5572, { 0x59 });
        gbc.writeMem(0x8eb7, { 0xcb, 0xae });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x9a88, gbc.sp());
        EXPECT(0x8eb9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8eb7));
        EXPECT(0xae, gbc.readMem(0x8eb8));
        // CB AE 009F
        gbc.setState(0x4e4e, 0x7399, 0x8ec0, 0x7bd9, 0x57ab, 0x606c, 0x0, 0x0);
        gbc.writeMem(0x4e4e, { 0xcb, 0xae });
        gbc.writeMem(0x606c, { 0x1e });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x7399, gbc.sp());
        EXPECT(0x4e50, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB AE 00A0
        gbc.setState(0x8d34, 0xa99e, 0xb00, 0x72a1, 0xe866, 0xa60f, 0x1, 0x0);
        gbc.writeMem(0x8d34, { 0xcb, 0xae });
        gbc.writeMem(0xa60f, { 0xf8 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0xa99e, gbc.sp());
        EXPECT(0x8d36, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8d34));
        EXPECT(0xae, gbc.readMem(0x8d35));
        EXPECT(0xd8, gbc.readMem(0xa60f));
        // CB AE 00A2
        gbc.setState(0xa2c3, 0x8c22, 0x1480, 0x1aaa, 0xcffc, 0x4413, 0x0, 0x1);
        gbc.writeMem(0x4413, { 0x54 });
        gbc.writeMem(0xa2c3, { 0xcb, 0xae });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x8c22, gbc.sp());
        EXPECT(0xa2c5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa2c3));
        EXPECT(0xae, gbc.readMem(0xa2c4));
        // CB AE 00A3
        gbc.setState(0x7d47, 0x83d1, 0x8e70, 0x1215, 0xde6e, 0x8f40, 0x0, 0x0);
        gbc.writeMem(0x7d47, { 0xcb, 0xae });
        gbc.writeMem(0x8f40, { 0x45 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x83d1, gbc.sp());
        EXPECT(0x7d49, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x45, gbc.readMem(0x8f40));
        // CB AE 00A4
        gbc.setState(0xb551, 0x45d0, 0x4bf0, 0xc27b, 0x2a0d, 0x4bf5, 0x0, 0x0);
        gbc.writeMem(0x4bf5, { 0xdf });
        gbc.writeMem(0xb551, { 0xcb, 0xae });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x45d0, gbc.sp());
        EXPECT(0xb553, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb551));
        EXPECT(0xae, gbc.readMem(0xb552));
        // CB AE 00A6
        gbc.setState(0xd1c, 0x77e, 0xb8b0, 0xa3e0, 0x8738, 0xd2c0, 0x0, 0x0);
        gbc.writeMem(0xd1c, { 0xcb, 0xae });
        gbc.writeMem(0xd2c0, { 0x67 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x77e, gbc.sp());
        EXPECT(0xd1e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x47, gbc.readMem(0xd2c0));
        // CB AE 00A7
        gbc.setState(0xadaf, 0xec45, 0xc4f0, 0xa1c5, 0xf2a7, 0x340c, 0x0, 0x0);
        gbc.writeMem(0x340c, { 0x89 });
        gbc.writeMem(0xadaf, { 0xcb, 0xae });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0xec45, gbc.sp());
        EXPECT(0xadb1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xadaf));
        EXPECT(0xae, gbc.readMem(0xadb0));
        // CB AE 00A8
        gbc.setState(0xadbd, 0xf878, 0xda80, 0x7f89, 0x93b, 0x256d, 0x1, 0x1);
        gbc.writeMem(0x256d, { 0x1e });
        gbc.writeMem(0xadbd, { 0xcb, 0xae });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0xf878, gbc.sp());
        EXPECT(0xadbf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xadbd));
        EXPECT(0xae, gbc.readMem(0xadbe));
        // CB AE 00AA
        gbc.setState(0xd6a4, 0x37c4, 0x5b30, 0xe7e, 0xf28b, 0x633e, 0x1, 0x1);
        gbc.writeMem(0x633e, { 0xcc });
        gbc.writeMem(0xd6a4, { 0xcb, 0xae });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x37c4, gbc.sp());
        EXPECT(0xd6a6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd6a4));
        EXPECT(0xae, gbc.readMem(0xd6a5));
        // CB AE 00AB
        gbc.setState(0x7931, 0xee5f, 0xf150, 0xe33c, 0x833d, 0x8767, 0x1, 0x0);
        gbc.writeMem(0x7931, { 0xcb, 0xae });
        gbc.writeMem(0x8767, { 0xda });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0xee5f, gbc.sp());
        EXPECT(0x7933, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xda, gbc.readMem(0x8767));
        // CB AE 00AC
        gbc.setState(0xdf4c, 0x4334, 0xa7c0, 0x81ef, 0x95be, 0x5066, 0x0, 0x0);
        gbc.writeMem(0x5066, { 0x54 });
        gbc.writeMem(0xdf4c, { 0xcb, 0xae });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x4334, gbc.sp());
        EXPECT(0xdf4e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdf4c));
        EXPECT(0xae, gbc.readMem(0xdf4d));
        // CB AE 00AE
        gbc.setState(0xd596, 0x4af2, 0x150, 0x4cd8, 0xdeb4, 0x81b6, 0x0, 0x1);
        gbc.writeMem(0x81b6, { 0x15 });
        gbc.writeMem(0xd596, { 0xcb, 0xae });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x4af2, gbc.sp());
        EXPECT(0xd598, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x15, gbc.readMem(0x81b6));
        EXPECT(0xcb, gbc.readMem(0xd596));
        EXPECT(0xae, gbc.readMem(0xd597));
        // CB AE 00AF
        gbc.setState(0x6f68, 0x924e, 0xf360, 0x5944, 0x2c42, 0x8a4c, 0x1, 0x1);
        gbc.writeMem(0x6f68, { 0xcb, 0xae });
        gbc.writeMem(0x8a4c, { 0xd2 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x924e, gbc.sp());
        EXPECT(0x6f6a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd2, gbc.readMem(0x8a4c));
        // CB AE 00B0
        gbc.setState(0x5417, 0x7179, 0xe1a0, 0x990d, 0x6067, 0x3057, 0x0, 0x0);
        gbc.writeMem(0x3057, { 0x18 });
        gbc.writeMem(0x5417, { 0xcb, 0xae });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x7179, gbc.sp());
        EXPECT(0x5419, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB AE 00B1
        gbc.setState(0x93ed, 0xe093, 0x8230, 0x2d7e, 0xc192, 0xed40, 0x0, 0x1);
        gbc.writeMem(0x93ed, { 0xcb, 0xae });
        gbc.writeMem(0xed40, { 0xc });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0xe093, gbc.sp());
        EXPECT(0x93ef, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x93ed));
        EXPECT(0xae, gbc.readMem(0x93ee));
        EXPECT(0xc, gbc.readMem(0xed40));
        // CB AE 00B3
        gbc.setState(0x6ffe, 0xbf9c, 0x4180, 0x1d73, 0xc49a, 0xebc6, 0x1, 0x0);
        gbc.writeMem(0x6ffe, { 0xcb, 0xae });
        gbc.writeMem(0xebc6, { 0x3 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0xbf9c, gbc.sp());
        EXPECT(0x7000, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3, gbc.readMem(0xebc6));
        // CB AE 00B4
        gbc.setState(0xc702, 0x794b, 0x73e0, 0x74bc, 0x2b3c, 0x824f, 0x1, 0x0);
        gbc.writeMem(0x824f, { 0xc3 });
        gbc.writeMem(0xc702, { 0xcb, 0xae });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x794b, gbc.sp());
        EXPECT(0xc704, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc3, gbc.readMem(0x824f));
        EXPECT(0xcb, gbc.readMem(0xc702));
        EXPECT(0xae, gbc.readMem(0xc703));
        // CB AE 00B5
        gbc.setState(0xa9c1, 0xfb1, 0x2190, 0xdd0e, 0x3693, 0xdfe3, 0x1, 0x1);
        gbc.writeMem(0xa9c1, { 0xcb, 0xae });
        gbc.writeMem(0xdfe3, { 0x5e });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0xfb1, gbc.sp());
        EXPECT(0xa9c3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa9c1));
        EXPECT(0xae, gbc.readMem(0xa9c2));
        EXPECT(0x5e, gbc.readMem(0xdfe3));
        // CB AE 00B6
        gbc.setState(0x8a0e, 0x7cda, 0xd920, 0xf644, 0x4c3, 0xfe6c, 0x1, 0x0);
        gbc.writeMem(0x8a0e, { 0xcb, 0xae });
        gbc.writeMem(0xfe6c, { 0x60 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x7cda, gbc.sp());
        EXPECT(0x8a10, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8a0e));
        EXPECT(0xae, gbc.readMem(0x8a0f));
        EXPECT(0x40, gbc.readMem(0xfe6c));
        // CB AE 00B9
        gbc.setState(0xc6da, 0x1d40, 0xc500, 0x57de, 0x7df5, 0xa42c, 0x0, 0x0);
        gbc.writeMem(0xa42c, { 0x4f });
        gbc.writeMem(0xc6da, { 0xcb, 0xae });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x1d40, gbc.sp());
        EXPECT(0xc6dc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4f, gbc.readMem(0xa42c));
        EXPECT(0xcb, gbc.readMem(0xc6da));
        EXPECT(0xae, gbc.readMem(0xc6db));
        // CB AE 00BA
        gbc.setState(0xc20d, 0xa321, 0x8700, 0xb0b1, 0x9fcc, 0xf47d, 0x0, 0x0);
        gbc.writeMem(0xc20d, { 0xcb, 0xae });
        gbc.writeMem(0xf47d, { 0x46 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0xa321, gbc.sp());
        EXPECT(0xc20f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc20d));
        EXPECT(0xae, gbc.readMem(0xc20e));
        EXPECT(0x46, gbc.readMem(0xf47d));
        // CB AE 00BB
        gbc.setState(0xd298, 0xe635, 0x5a60, 0x92a5, 0x650b, 0x83e7, 0x0, 0x1);
        gbc.writeMem(0x83e7, { 0xbe });
        gbc.writeMem(0xd298, { 0xcb, 0xae });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0xe635, gbc.sp());
        EXPECT(0xd29a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9e, gbc.readMem(0x83e7));
        EXPECT(0xcb, gbc.readMem(0xd298));
        EXPECT(0xae, gbc.readMem(0xd299));
        // CB AE 00BC
        gbc.setState(0xbb58, 0xd21f, 0x1fd0, 0xbbd3, 0xbc67, 0x3faf, 0x0, 0x0);
        gbc.writeMem(0x3faf, { 0x4 });
        gbc.writeMem(0xbb58, { 0xcb, 0xae });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0xd21f, gbc.sp());
        EXPECT(0xbb5a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbb58));
        EXPECT(0xae, gbc.readMem(0xbb59));
        // CB AE 00BD
        gbc.setState(0xd78e, 0x83e5, 0x2d00, 0xe974, 0x601d, 0xda09, 0x0, 0x0);
        gbc.writeMem(0xd78e, { 0xcb, 0xae });
        gbc.writeMem(0xda09, { 0x9d });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x83e5, gbc.sp());
        EXPECT(0xd790, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd78e));
        EXPECT(0xae, gbc.readMem(0xd78f));
        EXPECT(0x9d, gbc.readMem(0xda09));
        // CB AE 00BE
        gbc.setState(0x415a, 0xf42c, 0x3a0, 0x8613, 0x252f, 0xa136, 0x1, 0x1);
        gbc.writeMem(0x415a, { 0xcb, 0xae });
        gbc.writeMem(0xa136, { 0xe3 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0xf42c, gbc.sp());
        EXPECT(0x415c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc3, gbc.readMem(0xa136));
        // CB AE 00C0
        gbc.setState(0xd3a2, 0xad8a, 0x1af0, 0xb06f, 0x9cd, 0xe540, 0x1, 0x1);
        gbc.writeMem(0xd3a2, { 0xcb, 0xae });
        gbc.writeMem(0xe540, { 0x3b });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0xad8a, gbc.sp());
        EXPECT(0xd3a4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd3a2));
        EXPECT(0xae, gbc.readMem(0xd3a3));
        EXPECT(0x1b, gbc.readMem(0xe540));
        // CB AE 00C2
        gbc.setState(0x1afb, 0x58e5, 0x8550, 0xecf8, 0x6ed7, 0x18ff, 0x1, 0x1);
        gbc.writeMem(0x18ff, { 0x1a });
        gbc.writeMem(0x1afb, { 0xcb, 0xae });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x58e5, gbc.sp());
        EXPECT(0x1afd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB AE 00C3
        gbc.setState(0x7832, 0xcd27, 0xa930, 0x4b8e, 0xe41a, 0x6d0, 0x0, 0x1);
        gbc.writeMem(0x6d0, { 0x1e });
        gbc.writeMem(0x7832, { 0xcb, 0xae });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0xcd27, gbc.sp());
        EXPECT(0x7834, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB AE 00C4
        gbc.setState(0x5512, 0xc304, 0xa0, 0xc3eb, 0x9880, 0x65e1, 0x0, 0x1);
        gbc.writeMem(0x5512, { 0xcb, 0xae });
        gbc.writeMem(0x65e1, { 0x8f });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0xc304, gbc.sp());
        EXPECT(0x5514, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB AE 00C5
        gbc.setState(0x8391, 0x895e, 0x81e0, 0x235c, 0x34ea, 0x7d2c, 0x1, 0x0);
        gbc.writeMem(0x7d2c, { 0x44 });
        gbc.writeMem(0x8391, { 0xcb, 0xae });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x895e, gbc.sp());
        EXPECT(0x8393, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8391));
        EXPECT(0xae, gbc.readMem(0x8392));
        // CB AE 00C6
        gbc.setState(0xb228, 0xa84d, 0x7b50, 0x1744, 0x98da, 0xbced, 0x1, 0x1);
        gbc.writeMem(0xb228, { 0xcb, 0xae });
        gbc.writeMem(0xbced, { 0xbb });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0xa84d, gbc.sp());
        EXPECT(0xb22a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb228));
        EXPECT(0xae, gbc.readMem(0xb229));
        EXPECT(0x9b, gbc.readMem(0xbced));
        // CB AE 00C7
        gbc.setState(0x99c3, 0xd611, 0x62b0, 0x1795, 0xbc10, 0xcd32, 0x0, 0x0);
        gbc.writeMem(0x99c3, { 0xcb, 0xae });
        gbc.writeMem(0xcd32, { 0x9 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0xd611, gbc.sp());
        EXPECT(0x99c5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x99c3));
        EXPECT(0xae, gbc.readMem(0x99c4));
        EXPECT(0x9, gbc.readMem(0xcd32));
        // CB AE 00C8
        gbc.setState(0x6ae7, 0x551a, 0x7480, 0x168b, 0xc154, 0x87bc, 0x1, 0x0);
        gbc.writeMem(0x6ae7, { 0xcb, 0xae });
        gbc.writeMem(0x87bc, { 0xc6 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x551a, gbc.sp());
        EXPECT(0x6ae9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc6, gbc.readMem(0x87bc));
        // CB AE 00CA
        gbc.setState(0x88cd, 0x8012, 0x5130, 0x205c, 0x4e82, 0x9727, 0x1, 0x1);
        gbc.writeMem(0x88cd, { 0xcb, 0xae });
        gbc.writeMem(0x9727, { 0xad });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x8012, gbc.sp());
        EXPECT(0x88cf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x88cd));
        EXPECT(0xae, gbc.readMem(0x88ce));
        EXPECT(0x8d, gbc.readMem(0x9727));
        // CB AE 00CB
        gbc.setState(0x9df1, 0xec1d, 0x30a0, 0x890e, 0xd08c, 0xad8c, 0x1, 0x0);
        gbc.writeMem(0x9df1, { 0xcb, 0xae });
        gbc.writeMem(0xad8c, { 0x81 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0xec1d, gbc.sp());
        EXPECT(0x9df3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9df1));
        EXPECT(0xae, gbc.readMem(0x9df2));
        EXPECT(0x81, gbc.readMem(0xad8c));
        // CB AE 00CF
        gbc.setState(0xbf02, 0x6343, 0xa540, 0x4843, 0x6535, 0x9bcb, 0x1, 0x0);
        gbc.writeMem(0x9bcb, { 0x74 });
        gbc.writeMem(0xbf02, { 0xcb, 0xae });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x6343, gbc.sp());
        EXPECT(0xbf04, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x54, gbc.readMem(0x9bcb));
        EXPECT(0xcb, gbc.readMem(0xbf02));
        EXPECT(0xae, gbc.readMem(0xbf03));
        // CB AE 00D0
        gbc.setState(0xbf6d, 0xdd75, 0xd6a0, 0xde1a, 0x1ac2, 0xf46c, 0x0, 0x0);
        gbc.writeMem(0xbf6d, { 0xcb, 0xae });
        gbc.writeMem(0xf46c, { 0x5d });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0xdd75, gbc.sp());
        EXPECT(0xbf6f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbf6d));
        EXPECT(0xae, gbc.readMem(0xbf6e));
        EXPECT(0x5d, gbc.readMem(0xf46c));
        // CB AE 00D1
        gbc.setState(0x40a6, 0x8b04, 0x9c70, 0x1b07, 0x7314, 0x7b7a, 0x1, 0x0);
        gbc.writeMem(0x40a6, { 0xcb, 0xae });
        gbc.writeMem(0x7b7a, { 0xc });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x8b04, gbc.sp());
        EXPECT(0x40a8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB AE 00D2
        gbc.setState(0x5dc9, 0x8047, 0xf170, 0x4e2c, 0x7ac5, 0xb42d, 0x0, 0x1);
        gbc.writeMem(0x5dc9, { 0xcb, 0xae });
        gbc.writeMem(0xb42d, { 0x92 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x8047, gbc.sp());
        EXPECT(0x5dcb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x92, gbc.readMem(0xb42d));
        // CB AE 00D3
        gbc.setState(0x8d92, 0xba41, 0xa0d0, 0xf22b, 0x6742, 0xed3d, 0x0, 0x0);
        gbc.writeMem(0x8d92, { 0xcb, 0xae });
        gbc.writeMem(0xed3d, { 0x5 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0xba41, gbc.sp());
        EXPECT(0x8d94, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8d92));
        EXPECT(0xae, gbc.readMem(0x8d93));
        EXPECT(0x5, gbc.readMem(0xed3d));
        // CB AE 00D4
        gbc.setState(0x83f0, 0xbfb3, 0xe110, 0xcfe0, 0xd8c5, 0x6b2d, 0x0, 0x1);
        gbc.writeMem(0x6b2d, { 0x45 });
        gbc.writeMem(0x83f0, { 0xcb, 0xae });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0xbfb3, gbc.sp());
        EXPECT(0x83f2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x83f0));
        EXPECT(0xae, gbc.readMem(0x83f1));
        // CB AE 00D5
        gbc.setState(0xef2a, 0xf46b, 0x5520, 0x4f0b, 0x5b77, 0xb29c, 0x1, 0x0);
        gbc.writeMem(0xb29c, { 0x9f });
        gbc.writeMem(0xef2a, { 0xcb, 0xae });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0xf46b, gbc.sp());
        EXPECT(0xef2c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9f, gbc.readMem(0xb29c));
        EXPECT(0xcb, gbc.readMem(0xef2a));
        EXPECT(0xae, gbc.readMem(0xef2b));
        // CB AE 00D7
        gbc.setState(0x9944, 0xc7dd, 0xaea0, 0xa848, 0xb539, 0xab54, 0x1, 0x0);
        gbc.writeMem(0x9944, { 0xcb, 0xae });
        gbc.writeMem(0xab54, { 0xb1 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0xc7dd, gbc.sp());
        EXPECT(0x9946, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9944));
        EXPECT(0xae, gbc.readMem(0x9945));
        EXPECT(0x91, gbc.readMem(0xab54));
        // CB AE 00D8
        gbc.setState(0xe6, 0xcb0d, 0xdc40, 0xe929, 0xfb60, 0xdae5, 0x1, 0x0);
        gbc.writeMem(0xe6, { 0xcb, 0xae });
        gbc.writeMem(0xdae5, { 0x10 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0xcb0d, gbc.sp());
        EXPECT(0xe8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x10, gbc.readMem(0xdae5));
        // CB AE 00D9
        gbc.setState(0x70d3, 0x94c7, 0x1da0, 0xf9aa, 0xd8be, 0xd8e7, 0x1, 0x0);
        gbc.writeMem(0x70d3, { 0xcb, 0xae });
        gbc.writeMem(0xd8e7, { 0x86 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x94c7, gbc.sp());
        EXPECT(0x70d5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x86, gbc.readMem(0xd8e7));
        // CB AE 00DA
        gbc.setState(0x3ab7, 0xc714, 0x6210, 0x65ed, 0x5f1a, 0xb6c5, 0x0, 0x1);
        gbc.writeMem(0x3ab7, { 0xcb, 0xae });
        gbc.writeMem(0xb6c5, { 0x55 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0xc714, gbc.sp());
        EXPECT(0x3ab9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x55, gbc.readMem(0xb6c5));
        // CB AE 00DC
        gbc.setState(0x240e, 0xa122, 0x60e0, 0x1517, 0xc476, 0x8b8b, 0x1, 0x1);
        gbc.writeMem(0x240e, { 0xcb, 0xae });
        gbc.writeMem(0x8b8b, { 0x97 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0xa122, gbc.sp());
        EXPECT(0x2410, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x97, gbc.readMem(0x8b8b));
        // CB AE 00DE
        gbc.setState(0x61a1, 0x536, 0x7da0, 0x3614, 0x34d7, 0xd9f4, 0x1, 0x1);
        gbc.writeMem(0x61a1, { 0xcb, 0xae });
        gbc.writeMem(0xd9f4, { 0xf4 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x536, gbc.sp());
        EXPECT(0x61a3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd4, gbc.readMem(0xd9f4));
        // CB AE 00DF
        gbc.setState(0x1584, 0x15bb, 0xe920, 0x6ed, 0x7fc3, 0xeb71, 0x1, 0x1);
        gbc.writeMem(0x1584, { 0xcb, 0xae });
        gbc.writeMem(0xeb71, { 0x4c });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x15bb, gbc.sp());
        EXPECT(0x1586, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4c, gbc.readMem(0xeb71));
        // CB AE 00E1
        gbc.setState(0x2ed2, 0x7338, 0x5be0, 0x1a0, 0xe6ae, 0xf15e, 0x1, 0x0);
        gbc.writeMem(0x2ed2, { 0xcb, 0xae });
        gbc.writeMem(0xf15e, { 0xaf });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x7338, gbc.sp());
        EXPECT(0x2ed4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8f, gbc.readMem(0xf15e));
        // CB AE 00E2
        gbc.setState(0x4a8b, 0x7dbf, 0x3b70, 0x6a57, 0xb24c, 0xd861, 0x0, 0x0);
        gbc.writeMem(0x4a8b, { 0xcb, 0xae });
        gbc.writeMem(0xd861, { 0x6b });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x7dbf, gbc.sp());
        EXPECT(0x4a8d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4b, gbc.readMem(0xd861));
        // CB AE 00E4
        gbc.setState(0xa712, 0x71ad, 0x4950, 0x852b, 0x1e1c, 0xb9e9, 0x1, 0x0);
        gbc.writeMem(0xa712, { 0xcb, 0xae });
        gbc.writeMem(0xb9e9, { 0xc0 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x71ad, gbc.sp());
        EXPECT(0xa714, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa712));
        EXPECT(0xae, gbc.readMem(0xa713));
        EXPECT(0xc0, gbc.readMem(0xb9e9));
        // CB AE 00E5
        gbc.setState(0xc232, 0x9f0e, 0x1a90, 0x4b33, 0xdfb4, 0xdfb5, 0x1, 0x0);
        gbc.writeMem(0xc232, { 0xcb, 0xae });
        gbc.writeMem(0xdfb5, { 0x1d });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x9f0e, gbc.sp());
        EXPECT(0xc234, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc232));
        EXPECT(0xae, gbc.readMem(0xc233));
        EXPECT(0x1d, gbc.readMem(0xdfb5));
        // CB AE 00E6
        gbc.setState(0xb842, 0xd9ab, 0x85c0, 0x89f5, 0x565c, 0xfee, 0x1, 0x1);
        gbc.writeMem(0xfee, { 0x10 });
        gbc.writeMem(0xb842, { 0xcb, 0xae });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0xd9ab, gbc.sp());
        EXPECT(0xb844, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb842));
        EXPECT(0xae, gbc.readMem(0xb843));
        // CB AE 00E7
        gbc.setState(0x7bca, 0xd0c5, 0x5dc0, 0xcb9e, 0x51ef, 0xb2b5, 0x0, 0x1);
        gbc.writeMem(0x7bca, { 0xcb, 0xae });
        gbc.writeMem(0xb2b5, { 0x7b });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0xd0c5, gbc.sp());
        EXPECT(0x7bcc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5b, gbc.readMem(0xb2b5));
        // CB AE 00E9
        gbc.setState(0x9da6, 0x1061, 0x3d10, 0x6d9c, 0xf70, 0xc3ae, 0x0, 0x1);
        gbc.writeMem(0x9da6, { 0xcb, 0xae });
        gbc.writeMem(0xc3ae, { 0x33 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0x1061, gbc.sp());
        EXPECT(0x9da8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9da6));
        EXPECT(0xae, gbc.readMem(0x9da7));
        EXPECT(0x13, gbc.readMem(0xc3ae));
        // CB AE 00EA
        gbc.setState(0xb04e, 0xa238, 0x19a0, 0xfb3f, 0x4703, 0xb8e5, 0x1, 0x0);
        gbc.writeMem(0xb04e, { 0xcb, 0xae });
        gbc.writeMem(0xb8e5, { 0xd6 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0xa238, gbc.sp());
        EXPECT(0xb050, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb04e));
        EXPECT(0xae, gbc.readMem(0xb04f));
        EXPECT(0xd6, gbc.readMem(0xb8e5));
        // CB AE 00EB
        gbc.setState(0xe76a, 0x5641, 0x6660, 0xdfc6, 0x5209, 0x87fa, 0x0, 0x1);
        gbc.writeMem(0x87fa, { 0x4d });
        gbc.writeMem(0xe76a, { 0xcb, 0xae });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0x5641, gbc.sp());
        EXPECT(0xe76c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4d, gbc.readMem(0x87fa));
        EXPECT(0xcb, gbc.readMem(0xe76a));
        EXPECT(0xae, gbc.readMem(0xe76b));
        // CB AE 00EC
        gbc.setState(0xebae, 0x6632, 0x6dd0, 0xf345, 0x651d, 0xefb0, 0x1, 0x1);
        gbc.writeMem(0xebae, { 0xcb, 0xae });
        gbc.writeMem(0xefb0, { 0xa });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x6632, gbc.sp());
        EXPECT(0xebb0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xebae));
        EXPECT(0xae, gbc.readMem(0xebaf));
        EXPECT(0xa, gbc.readMem(0xefb0));
        // CB AE 00EE
        gbc.setState(0x5d, 0xa80, 0x8a50, 0x5730, 0xee6a, 0xe4af, 0x1, 0x0);
        gbc.writeMem(0x5d, { 0xcb, 0xae });
        gbc.writeMem(0xe4af, { 0x8f });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0xa80, gbc.sp());
        EXPECT(0x5f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8f, gbc.readMem(0xe4af));
        // CB AE 00F0
        gbc.setState(0xd343, 0xede9, 0x7380, 0x8266, 0x54ce, 0xd8bc, 0x1, 0x0);
        gbc.writeMem(0xd343, { 0xcb, 0xae });
        gbc.writeMem(0xd8bc, { 0x84 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0xede9, gbc.sp());
        EXPECT(0xd345, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd343));
        EXPECT(0xae, gbc.readMem(0xd344));
        EXPECT(0x84, gbc.readMem(0xd8bc));
        // CB AE 00F1
        gbc.setState(0xa50b, 0x6f88, 0xf980, 0x8e06, 0x21e2, 0x5a56, 0x0, 0x1);
        gbc.writeMem(0x5a56, { 0x85 });
        gbc.writeMem(0xa50b, { 0xcb, 0xae });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0x6f88, gbc.sp());
        EXPECT(0xa50d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa50b));
        EXPECT(0xae, gbc.readMem(0xa50c));
        // CB AE 00F2
        gbc.setState(0x2ae3, 0x354e, 0x3b30, 0x6dd4, 0xc0d, 0xb85c, 0x1, 0x0);
        gbc.writeMem(0x2ae3, { 0xcb, 0xae });
        gbc.writeMem(0xb85c, { 0x54 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x354e, gbc.sp());
        EXPECT(0x2ae5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x54, gbc.readMem(0xb85c));
        // CB AE 00F3
        gbc.setState(0xd49b, 0x62e2, 0x8d60, 0x98b1, 0x9763, 0x6cb9, 0x0, 0x1);
        gbc.writeMem(0x6cb9, { 0x4b });
        gbc.writeMem(0xd49b, { 0xcb, 0xae });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x62e2, gbc.sp());
        EXPECT(0xd49d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd49b));
        EXPECT(0xae, gbc.readMem(0xd49c));
        // CB AE 00F4
        gbc.setState(0x3715, 0xbb97, 0x5a30, 0xf9e9, 0xed7e, 0x53e4, 0x0, 0x0);
        gbc.writeMem(0x3715, { 0xcb, 0xae });
        gbc.writeMem(0x53e4, { 0x40 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0xbb97, gbc.sp());
        EXPECT(0x3717, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB AE 00F6
        gbc.setState(0x46f7, 0xaec6, 0xae40, 0xad46, 0xaef1, 0x45f3, 0x0, 0x0);
        gbc.writeMem(0x45f3, { 0x52 });
        gbc.writeMem(0x46f7, { 0xcb, 0xae });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0xaec6, gbc.sp());
        EXPECT(0x46f9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB AE 00F7
        gbc.setState(0x635, 0x919f, 0x83f0, 0x8328, 0x3f27, 0xbe19, 0x1, 0x1);
        gbc.writeMem(0x635, { 0xcb, 0xae });
        gbc.writeMem(0xbe19, { 0x35 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x919f, gbc.sp());
        EXPECT(0x637, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x15, gbc.readMem(0xbe19));
        // CB AE 00F8
        gbc.setState(0x763f, 0x5c37, 0xbc30, 0x2c5f, 0x753a, 0xd834, 0x0, 0x1);
        gbc.writeMem(0x763f, { 0xcb, 0xae });
        gbc.writeMem(0xd834, { 0x47 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x5c37, gbc.sp());
        EXPECT(0x7641, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x47, gbc.readMem(0xd834));
        // CB AE 00F9
        gbc.setState(0x3633, 0x1f94, 0x3ca0, 0x594d, 0x1ed2, 0x9649, 0x1, 0x0);
        gbc.writeMem(0x3633, { 0xcb, 0xae });
        gbc.writeMem(0x9649, { 0x2d });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x1f94, gbc.sp());
        EXPECT(0x3635, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd, gbc.readMem(0x9649));
        // CB AE 00FA
        gbc.setState(0x3649, 0x84df, 0x69b0, 0xd8a2, 0xc35c, 0xc0db, 0x0, 0x0);
        gbc.writeMem(0x3649, { 0xcb, 0xae });
        gbc.writeMem(0xc0db, { 0x62 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x84df, gbc.sp());
        EXPECT(0x364b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x42, gbc.readMem(0xc0db));
        // CB AE 00FB
        gbc.setState(0x299b, 0x760f, 0xe770, 0x1868, 0xd3e1, 0x29c1, 0x1, 0x1);
        gbc.writeMem(0x299b, { 0xcb, 0xae });
        gbc.writeMem(0x29c1, { 0x49 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x760f, gbc.sp());
        EXPECT(0x299d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB AE 00FC
        gbc.setState(0x342, 0xbde1, 0xf5c0, 0x42e, 0x333c, 0xcf5e, 0x0, 0x1);
        gbc.writeMem(0x342, { 0xcb, 0xae });
        gbc.writeMem(0xcf5e, { 0xf0 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0xbde1, gbc.sp());
        EXPECT(0x344, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd0, gbc.readMem(0xcf5e));
        // CB AE 00FD
        gbc.setState(0x9044, 0x83d0, 0x3790, 0xbc85, 0xe3b5, 0xe151, 0x1, 0x1);
        gbc.writeMem(0x9044, { 0xcb, 0xae });
        gbc.writeMem(0xe151, { 0x17 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x83d0, gbc.sp());
        EXPECT(0x9046, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9044));
        EXPECT(0xae, gbc.readMem(0x9045));
        EXPECT(0x17, gbc.readMem(0xe151));
        // CB AE 00FE
        gbc.setState(0xbaae, 0xc21f, 0x930, 0x23a2, 0x60d0, 0xcb9a, 0x1, 0x1);
        gbc.writeMem(0xbaae, { 0xcb, 0xae });
        gbc.writeMem(0xcb9a, { 0x48 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0xc21f, gbc.sp());
        EXPECT(0xbab0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbaae));
        EXPECT(0xae, gbc.readMem(0xbaaf));
        EXPECT(0x48, gbc.readMem(0xcb9a));
        // CB AE 0100
        gbc.setState(0x9a10, 0x56ee, 0xb7c0, 0x7980, 0x5374, 0x4e6a, 0x0, 0x0);
        gbc.writeMem(0x4e6a, { 0x42 });
        gbc.writeMem(0x9a10, { 0xcb, 0xae });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x56ee, gbc.sp());
        EXPECT(0x9a12, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9a10));
        EXPECT(0xae, gbc.readMem(0x9a11));
        // CB AE 0102
        gbc.setState(0x6967, 0x6bdc, 0xe020, 0x40cf, 0x15cb, 0x8e85, 0x0, 0x1);
        gbc.writeMem(0x6967, { 0xcb, 0xae });
        gbc.writeMem(0x8e85, { 0x9 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x6bdc, gbc.sp());
        EXPECT(0x6969, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9, gbc.readMem(0x8e85));
        // CB AE 0103
        gbc.setState(0x8023, 0x3c85, 0xef00, 0x96c6, 0x8d65, 0xe9e9, 0x0, 0x0);
        gbc.writeMem(0x8023, { 0xcb, 0xae });
        gbc.writeMem(0xe9e9, { 0x57 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x3c85, gbc.sp());
        EXPECT(0x8025, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8023));
        EXPECT(0xae, gbc.readMem(0x8024));
        EXPECT(0x57, gbc.readMem(0xe9e9));
        // CB AE 0106
        gbc.setState(0xea3a, 0xb7d5, 0x70, 0x8e74, 0x10f9, 0x142e, 0x0, 0x0);
        gbc.writeMem(0x142e, { 0xd3 });
        gbc.writeMem(0xea3a, { 0xcb, 0xae });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0xb7d5, gbc.sp());
        EXPECT(0xea3c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xea3a));
        EXPECT(0xae, gbc.readMem(0xea3b));
        // CB AE 0108
        gbc.setState(0x665f, 0xcb45, 0x5040, 0xc116, 0x8be9, 0x544b, 0x0, 0x0);
        gbc.writeMem(0x544b, { 0x7 });
        gbc.writeMem(0x665f, { 0xcb, 0xae });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0xcb45, gbc.sp());
        EXPECT(0x6661, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB AE 0109
        gbc.setState(0x2a39, 0xa59a, 0x94b0, 0xbc71, 0xda32, 0xc5ed, 0x0, 0x0);
        gbc.writeMem(0x2a39, { 0xcb, 0xae });
        gbc.writeMem(0xc5ed, { 0x4 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0xa59a, gbc.sp());
        EXPECT(0x2a3b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4, gbc.readMem(0xc5ed));
        // CB AE 010A
        gbc.setState(0xdc19, 0x1c63, 0xb9a0, 0x585f, 0x38a1, 0xff55, 0x0, 0x1);
        gbc.writeMem(0xdc19, { 0xcb, 0xae });
        gbc.writeMem(0xff55, { 0x21 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x1c63, gbc.sp());
        EXPECT(0xdc1b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdc19));
        EXPECT(0xae, gbc.readMem(0xdc1a));
        EXPECT(0x1, gbc.readMem(0xff55));
        // CB AE 010B
        gbc.setState(0x3313, 0xa62c, 0x74c0, 0xa60e, 0xe16e, 0x99eb, 0x0, 0x1);
        gbc.writeMem(0x3313, { 0xcb, 0xae });
        gbc.writeMem(0x99eb, { 0xaa });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0xa62c, gbc.sp());
        EXPECT(0x3315, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8a, gbc.readMem(0x99eb));
        // CB AE 010D
        gbc.setState(0xacae, 0x757e, 0x47b0, 0xad44, 0x9288, 0xbf18, 0x0, 0x1);
        gbc.writeMem(0xacae, { 0xcb, 0xae });
        gbc.writeMem(0xbf18, { 0x56 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x757e, gbc.sp());
        EXPECT(0xacb0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xacae));
        EXPECT(0xae, gbc.readMem(0xacaf));
        EXPECT(0x56, gbc.readMem(0xbf18));
        // CB AE 010E
        gbc.setState(0xa0ce, 0x8214, 0x5a10, 0x3b7f, 0xbfcf, 0xd0c6, 0x1, 0x1);
        gbc.writeMem(0xa0ce, { 0xcb, 0xae });
        gbc.writeMem(0xd0c6, { 0x6e });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x8214, gbc.sp());
        EXPECT(0xa0d0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa0ce));
        EXPECT(0xae, gbc.readMem(0xa0cf));
        EXPECT(0x4e, gbc.readMem(0xd0c6));
        // CB AE 010F
        gbc.setState(0x42f8, 0x805e, 0x1de0, 0x619c, 0xce26, 0xb3ac, 0x0, 0x0);
        gbc.writeMem(0x42f8, { 0xcb, 0xae });
        gbc.writeMem(0xb3ac, { 0x14 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x805e, gbc.sp());
        EXPECT(0x42fa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x14, gbc.readMem(0xb3ac));
        // CB AE 0112
        gbc.setState(0xdb64, 0xee7a, 0xf410, 0x968f, 0x4ec2, 0xae42, 0x1, 0x1);
        gbc.writeMem(0xae42, { 0xe8 });
        gbc.writeMem(0xdb64, { 0xcb, 0xae });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0xee7a, gbc.sp());
        EXPECT(0xdb66, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc8, gbc.readMem(0xae42));
        EXPECT(0xcb, gbc.readMem(0xdb64));
        EXPECT(0xae, gbc.readMem(0xdb65));
        // CB AE 0113
        gbc.setState(0x46ba, 0xf521, 0x6ca0, 0x494, 0x8195, 0xa119, 0x0, 0x0);
        gbc.writeMem(0x46ba, { 0xcb, 0xae });
        gbc.writeMem(0xa119, { 0x3c });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0xf521, gbc.sp());
        EXPECT(0x46bc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1c, gbc.readMem(0xa119));
        // CB AE 0114
        gbc.setState(0x1098, 0xedaa, 0xd1d0, 0x1764, 0x3786, 0xf37f, 0x0, 0x1);
        gbc.writeMem(0x1098, { 0xcb, 0xae });
        gbc.writeMem(0xf37f, { 0xf6 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0xedaa, gbc.sp());
        EXPECT(0x109a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd6, gbc.readMem(0xf37f));
        // CB AE 0116
        gbc.setState(0xcf5f, 0xfec9, 0x5030, 0x58d9, 0x3933, 0xa1b4, 0x0, 0x1);
        gbc.writeMem(0xa1b4, { 0xff });
        gbc.writeMem(0xcf5f, { 0xcb, 0xae });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0xfec9, gbc.sp());
        EXPECT(0xcf61, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xdf, gbc.readMem(0xa1b4));
        EXPECT(0xcb, gbc.readMem(0xcf5f));
        EXPECT(0xae, gbc.readMem(0xcf60));
        // CB AE 0117
        gbc.setState(0xd500, 0xed7b, 0xb420, 0x6167, 0xbe5, 0x9033, 0x1, 0x1);
        gbc.writeMem(0x9033, { 0xc8 });
        gbc.writeMem(0xd500, { 0xcb, 0xae });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0xed7b, gbc.sp());
        EXPECT(0xd502, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc8, gbc.readMem(0x9033));
        EXPECT(0xcb, gbc.readMem(0xd500));
        EXPECT(0xae, gbc.readMem(0xd501));
        // CB AE 0119
        gbc.setState(0x6671, 0xf8a, 0xab70, 0xd3c8, 0x1b0a, 0x529d, 0x1, 0x0);
        gbc.writeMem(0x529d, { 0x15 });
        gbc.writeMem(0x6671, { 0xcb, 0xae });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0xf8a, gbc.sp());
        EXPECT(0x6673, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB AE 011B
        gbc.setState(0xc2e0, 0x45c3, 0xe9c0, 0xe16, 0x9f21, 0xb660, 0x0, 0x1);
        gbc.writeMem(0xb660, { 0x3e });
        gbc.writeMem(0xc2e0, { 0xcb, 0xae });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x45c3, gbc.sp());
        EXPECT(0xc2e2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1e, gbc.readMem(0xb660));
        EXPECT(0xcb, gbc.readMem(0xc2e0));
        EXPECT(0xae, gbc.readMem(0xc2e1));
        // CB AE 011C
        gbc.setState(0xd98c, 0x4207, 0xbd90, 0xad5e, 0x7880, 0xede1, 0x0, 0x0);
        gbc.writeMem(0xd98c, { 0xcb, 0xae });
        gbc.writeMem(0xede1, { 0xe6 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0x4207, gbc.sp());
        EXPECT(0xd98e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd98c));
        EXPECT(0xae, gbc.readMem(0xd98d));
        EXPECT(0xc6, gbc.readMem(0xede1));
        // CB AE 011D
        gbc.setState(0x3322, 0x37d5, 0x6250, 0x6fd7, 0x9b12, 0xa1a9, 0x0, 0x1);
        gbc.writeMem(0x3322, { 0xcb, 0xae });
        gbc.writeMem(0xa1a9, { 0x61 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x37d5, gbc.sp());
        EXPECT(0x3324, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x41, gbc.readMem(0xa1a9));
        // CB AE 011E
        gbc.setState(0xb596, 0xca6c, 0xb660, 0xc5a6, 0x8720, 0x5e5e, 0x0, 0x1);
        gbc.writeMem(0x5e5e, { 0x58 });
        gbc.writeMem(0xb596, { 0xcb, 0xae });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0xca6c, gbc.sp());
        EXPECT(0xb598, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb596));
        EXPECT(0xae, gbc.readMem(0xb597));
        // CB AE 011F
        gbc.setState(0xc2b, 0x335d, 0x24e0, 0xcf14, 0xdec4, 0x9cc7, 0x0, 0x0);
        gbc.writeMem(0xc2b, { 0xcb, 0xae });
        gbc.writeMem(0x9cc7, { 0xe0 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x335d, gbc.sp());
        EXPECT(0xc2d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc0, gbc.readMem(0x9cc7));
        // CB AE 0120
        gbc.setState(0x4c8e, 0x47cc, 0x29e0, 0xe0a6, 0xcd8c, 0xf6bc, 0x1, 0x1);
        gbc.writeMem(0x4c8e, { 0xcb, 0xae });
        gbc.writeMem(0xf6bc, { 0xf2 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x47cc, gbc.sp());
        EXPECT(0x4c90, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd2, gbc.readMem(0xf6bc));
        // CB AE 0121
        gbc.setState(0x5f09, 0x27b1, 0xf2f0, 0x73db, 0xc508, 0xf8e3, 0x0, 0x0);
        gbc.writeMem(0x5f09, { 0xcb, 0xae });
        gbc.writeMem(0xf8e3, { 0xce });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x27b1, gbc.sp());
        EXPECT(0x5f0b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xce, gbc.readMem(0xf8e3));
        // CB AE 0122
        gbc.setState(0x5ebc, 0x8e95, 0xfc00, 0x3f8d, 0x439e, 0x3879, 0x0, 0x0);
        gbc.writeMem(0x3879, { 0x48 });
        gbc.writeMem(0x5ebc, { 0xcb, 0xae });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x8e95, gbc.sp());
        EXPECT(0x5ebe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB AE 0123
        gbc.setState(0x3a18, 0xa623, 0x7950, 0x72ed, 0x6788, 0xc8a7, 0x1, 0x0);
        gbc.writeMem(0x3a18, { 0xcb, 0xae });
        gbc.writeMem(0xc8a7, { 0xa6 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0xa623, gbc.sp());
        EXPECT(0x3a1a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x86, gbc.readMem(0xc8a7));
        // CB AE 0124
        gbc.setState(0x1169, 0xa278, 0xc320, 0x9840, 0x25a9, 0x3a62, 0x0, 0x1);
        gbc.writeMem(0x1169, { 0xcb, 0xae });
        gbc.writeMem(0x3a62, { 0x56 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0xa278, gbc.sp());
        EXPECT(0x116b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB AE 0126
        gbc.setState(0xd090, 0x530c, 0xf310, 0x6315, 0x6f1d, 0xc7d7, 0x1, 0x1);
        gbc.writeMem(0xc7d7, { 0xeb });
        gbc.writeMem(0xd090, { 0xcb, 0xae });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0x530c, gbc.sp());
        EXPECT(0xd092, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc7d7));
        EXPECT(0xcb, gbc.readMem(0xd090));
        EXPECT(0xae, gbc.readMem(0xd091));
        // CB AE 0128
        gbc.setState(0x3dcb, 0xca27, 0xca20, 0x47cd, 0x572a, 0xf526, 0x1, 0x0);
        gbc.writeMem(0x3dcb, { 0xcb, 0xae });
        gbc.writeMem(0xf526, { 0x86 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0xca27, gbc.sp());
        EXPECT(0x3dcd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x86, gbc.readMem(0xf526));
        // CB AE 0129
        gbc.setState(0x5c16, 0x6829, 0x4ec0, 0x236d, 0xc365, 0x8182, 0x1, 0x0);
        gbc.writeMem(0x5c16, { 0xcb, 0xae });
        gbc.writeMem(0x8182, { 0x6e });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x6829, gbc.sp());
        EXPECT(0x5c18, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4e, gbc.readMem(0x8182));
        // CB AE 012A
        gbc.setState(0xd40a, 0xd81b, 0x5bb0, 0xf539, 0x7f2b, 0xfdda, 0x0, 0x1);
        gbc.writeMem(0xd40a, { 0xcb, 0xae });
        gbc.writeMem(0xfdda, { 0xd3 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0xd81b, gbc.sp());
        EXPECT(0xd40c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd40a));
        EXPECT(0xae, gbc.readMem(0xd40b));
        EXPECT(0xd3, gbc.readMem(0xfdda));
        // CB AE 012C
        gbc.setState(0x263, 0x60be, 0xbe00, 0x9bfc, 0x6a63, 0xc7b4, 0x0, 0x1);
        gbc.writeMem(0x263, { 0xcb, 0xae });
        gbc.writeMem(0xc7b4, { 0x57 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x60be, gbc.sp());
        EXPECT(0x265, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x57, gbc.readMem(0xc7b4));
        // CB AE 012D
        gbc.setState(0x83f8, 0x928b, 0x5540, 0x50f3, 0xfe5f, 0xf1, 0x1, 0x0);
        gbc.writeMem(0xf1, { 0x1 });
        gbc.writeMem(0x83f8, { 0xcb, 0xae });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x928b, gbc.sp());
        EXPECT(0x83fa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x83f8));
        EXPECT(0xae, gbc.readMem(0x83f9));
        // CB AE 012F
        gbc.setState(0x1538, 0xc937, 0xac00, 0x5006, 0x91a4, 0xca6a, 0x1, 0x1);
        gbc.writeMem(0x1538, { 0xcb, 0xae });
        gbc.writeMem(0xca6a, { 0x3e });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0xc937, gbc.sp());
        EXPECT(0x153a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1e, gbc.readMem(0xca6a));
        // CB AE 0130
        gbc.setState(0xc67a, 0xaba6, 0x5570, 0xf2a9, 0xa841, 0xf9e1, 0x1, 0x1);
        gbc.writeMem(0xc67a, { 0xcb, 0xae });
        gbc.writeMem(0xf9e1, { 0x2 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0xaba6, gbc.sp());
        EXPECT(0xc67c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc67a));
        EXPECT(0xae, gbc.readMem(0xc67b));
        EXPECT(0x2, gbc.readMem(0xf9e1));
        // CB AE 0131
        gbc.setState(0x554c, 0x4335, 0xf9d0, 0x9b92, 0xd95d, 0x298, 0x1, 0x1);
        gbc.writeMem(0x298, { 0x44 });
        gbc.writeMem(0x554c, { 0xcb, 0xae });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x4335, gbc.sp());
        EXPECT(0x554e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB AE 0134
        gbc.setState(0x1391, 0x91ee, 0x2640, 0x818e, 0xe779, 0x3a85, 0x1, 0x1);
        gbc.writeMem(0x1391, { 0xcb, 0xae });
        gbc.writeMem(0x3a85, { 0x97 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x91ee, gbc.sp());
        EXPECT(0x1393, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB AE 0135
        gbc.setState(0xc301, 0xda87, 0x6d20, 0xef92, 0x2306, 0x2333, 0x0, 0x0);
        gbc.writeMem(0x2333, { 0x44 });
        gbc.writeMem(0xc301, { 0xcb, 0xae });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0xda87, gbc.sp());
        EXPECT(0xc303, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc301));
        EXPECT(0xae, gbc.readMem(0xc302));
        // CB AE 0136
        gbc.setState(0xaa2b, 0x4a2b, 0xaa40, 0x12f7, 0x8d11, 0xa317, 0x0, 0x1);
        gbc.writeMem(0xa317, { 0xbd });
        gbc.writeMem(0xaa2b, { 0xcb, 0xae });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x4a2b, gbc.sp());
        EXPECT(0xaa2d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9d, gbc.readMem(0xa317));
        EXPECT(0xcb, gbc.readMem(0xaa2b));
        EXPECT(0xae, gbc.readMem(0xaa2c));
        // CB AE 0137
        gbc.setState(0x3e12, 0x9046, 0xdf50, 0xad55, 0x3005, 0x5c5f, 0x0, 0x1);
        gbc.writeMem(0x3e12, { 0xcb, 0xae });
        gbc.writeMem(0x5c5f, { 0x18 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x9046, gbc.sp());
        EXPECT(0x3e14, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB AE 0138
        gbc.setState(0xce92, 0x5ca8, 0x1020, 0xbf5b, 0xd50a, 0xc29, 0x1, 0x0);
        gbc.writeMem(0xc29, { 0xdb });
        gbc.writeMem(0xce92, { 0xcb, 0xae });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x5ca8, gbc.sp());
        EXPECT(0xce94, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xce92));
        EXPECT(0xae, gbc.readMem(0xce93));
        // CB AE 0139
        gbc.setState(0xa259, 0x1721, 0x23a0, 0xf867, 0x6e20, 0x28b1, 0x1, 0x0);
        gbc.writeMem(0x28b1, { 0x87 });
        gbc.writeMem(0xa259, { 0xcb, 0xae });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x1721, gbc.sp());
        EXPECT(0xa25b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa259));
        EXPECT(0xae, gbc.readMem(0xa25a));
        // CB AE 013B
        gbc.setState(0x6b06, 0x4860, 0xc630, 0xc2f2, 0x3f2c, 0x94fa, 0x1, 0x0);
        gbc.writeMem(0x6b06, { 0xcb, 0xae });
        gbc.writeMem(0x94fa, { 0xeb });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0x4860, gbc.sp());
        EXPECT(0x6b08, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x94fa));
        // CB AE 013E
        gbc.setState(0xd83f, 0x8fb, 0xad70, 0x69d7, 0xb251, 0x8096, 0x0, 0x1);
        gbc.writeMem(0x8096, { 0x1 });
        gbc.writeMem(0xd83f, { 0xcb, 0xae });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x8fb, gbc.sp());
        EXPECT(0xd841, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1, gbc.readMem(0x8096));
        EXPECT(0xcb, gbc.readMem(0xd83f));
        EXPECT(0xae, gbc.readMem(0xd840));
        // CB AE 0141
        gbc.setState(0x3cc, 0xd258, 0x7b60, 0x9603, 0x72a3, 0x7054, 0x0, 0x0);
        gbc.writeMem(0x3cc, { 0xcb, 0xae });
        gbc.writeMem(0x7054, { 0x84 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0xd258, gbc.sp());
        EXPECT(0x3ce, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB AE 0142
        gbc.setState(0x3af5, 0x51b0, 0x87d0, 0x27cd, 0xd643, 0x90b7, 0x0, 0x1);
        gbc.writeMem(0x3af5, { 0xcb, 0xae });
        gbc.writeMem(0x90b7, { 0xe0 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x51b0, gbc.sp());
        EXPECT(0x3af7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc0, gbc.readMem(0x90b7));
        // CB AE 0145
        gbc.setState(0xc7fd, 0xdad8, 0xdc10, 0xccfb, 0x3d33, 0xb717, 0x0, 0x0);
        gbc.writeMem(0xb717, { 0x98 });
        gbc.writeMem(0xc7fd, { 0xcb, 0xae });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0xdad8, gbc.sp());
        EXPECT(0xc7ff, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x98, gbc.readMem(0xb717));
        EXPECT(0xcb, gbc.readMem(0xc7fd));
        EXPECT(0xae, gbc.readMem(0xc7fe));
        // CB AE 0146
        gbc.setState(0x68b4, 0x7530, 0x67b0, 0x70ce, 0x4da3, 0xd622, 0x1, 0x1);
        gbc.writeMem(0x68b4, { 0xcb, 0xae });
        gbc.writeMem(0xd622, { 0xe8 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x7530, gbc.sp());
        EXPECT(0x68b6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc8, gbc.readMem(0xd622));
        // CB AE 0148
        gbc.setState(0x9b3b, 0x87cb, 0xf6e0, 0x9997, 0xd903, 0x6301, 0x0, 0x0);
        gbc.writeMem(0x6301, { 0x16 });
        gbc.writeMem(0x9b3b, { 0xcb, 0xae });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x87cb, gbc.sp());
        EXPECT(0x9b3d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9b3b));
        EXPECT(0xae, gbc.readMem(0x9b3c));
        // CB AE 0149
        gbc.setState(0x1049, 0xe165, 0x7af0, 0xfb9b, 0xf44, 0xb19e, 0x0, 0x0);
        gbc.writeMem(0x1049, { 0xcb, 0xae });
        gbc.writeMem(0xb19e, { 0x9d });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0xe165, gbc.sp());
        EXPECT(0x104b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9d, gbc.readMem(0xb19e));
        // CB AE 014A
        gbc.setState(0x9052, 0xca72, 0x610, 0x3705, 0xb9b3, 0xb358, 0x0, 0x0);
        gbc.writeMem(0x9052, { 0xcb, 0xae });
        gbc.writeMem(0xb358, { 0x24 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0xca72, gbc.sp());
        EXPECT(0x9054, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9052));
        EXPECT(0xae, gbc.readMem(0x9053));
        EXPECT(0x4, gbc.readMem(0xb358));
        // CB AE 014B
        gbc.setState(0xd80b, 0xd3ae, 0x2340, 0xc475, 0xb18a, 0xf855, 0x0, 0x0);
        gbc.writeMem(0xd80b, { 0xcb, 0xae });
        gbc.writeMem(0xf855, { 0xc2 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0xd3ae, gbc.sp());
        EXPECT(0xd80d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd80b));
        EXPECT(0xae, gbc.readMem(0xd80c));
        EXPECT(0xc2, gbc.readMem(0xf855));
        // CB AE 014C
        gbc.setState(0x5bec, 0xb909, 0xb310, 0x60f3, 0xf09b, 0x2a0f, 0x1, 0x0);
        gbc.writeMem(0x2a0f, { 0x4b });
        gbc.writeMem(0x5bec, { 0xcb, 0xae });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0xb909, gbc.sp());
        EXPECT(0x5bee, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB AE 014D
        gbc.setState(0x19ba, 0x1dac, 0x41a0, 0x6291, 0x227c, 0xad5b, 0x0, 0x0);
        gbc.writeMem(0x19ba, { 0xcb, 0xae });
        gbc.writeMem(0xad5b, { 0xdb });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x1dac, gbc.sp());
        EXPECT(0x19bc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xdb, gbc.readMem(0xad5b));
        // CB AE 014E
        gbc.setState(0xcb28, 0x9462, 0x5ae0, 0x87b6, 0xaa10, 0x8ffe, 0x1, 0x1);
        gbc.writeMem(0x8ffe, { 0xc });
        gbc.writeMem(0xcb28, { 0xcb, 0xae });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x9462, gbc.sp());
        EXPECT(0xcb2a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc, gbc.readMem(0x8ffe));
        EXPECT(0xcb, gbc.readMem(0xcb28));
        EXPECT(0xae, gbc.readMem(0xcb29));
        // CB AE 014F
        gbc.setState(0x6ef9, 0xd595, 0xf920, 0xb72d, 0xd809, 0x1e08, 0x0, 0x0);
        gbc.writeMem(0x1e08, { 0xcc });
        gbc.writeMem(0x6ef9, { 0xcb, 0xae });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0xd595, gbc.sp());
        EXPECT(0x6efb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB AE 0150
        gbc.setState(0x60d9, 0x29fb, 0xe140, 0x40bc, 0x8a6f, 0xc2a2, 0x0, 0x0);
        gbc.writeMem(0x60d9, { 0xcb, 0xae });
        gbc.writeMem(0xc2a2, { 0x28 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x29fb, gbc.sp());
        EXPECT(0x60db, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8, gbc.readMem(0xc2a2));
        // CB AE 0151
        gbc.setState(0xe675, 0xef3c, 0xe300, 0xd75d, 0x605f, 0xccec, 0x0, 0x0);
        gbc.writeMem(0xccec, { 0x4b });
        gbc.writeMem(0xe675, { 0xcb, 0xae });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0xef3c, gbc.sp());
        EXPECT(0xe677, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4b, gbc.readMem(0xccec));
        EXPECT(0xcb, gbc.readMem(0xe675));
        EXPECT(0xae, gbc.readMem(0xe676));
        // CB AE 0153
        gbc.setState(0x2664, 0x2d68, 0x2da0, 0xddac, 0xb50d, 0xa3be, 0x1, 0x0);
        gbc.writeMem(0x2664, { 0xcb, 0xae });
        gbc.writeMem(0xa3be, { 0xe9 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0x2d68, gbc.sp());
        EXPECT(0x2666, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc9, gbc.readMem(0xa3be));
        // CB AE 0154
        gbc.setState(0x878e, 0x71a4, 0x55d0, 0xf9de, 0x1b7a, 0xacef, 0x1, 0x0);
        gbc.writeMem(0x878e, { 0xcb, 0xae });
        gbc.writeMem(0xacef, { 0x52 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x71a4, gbc.sp());
        EXPECT(0x8790, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x878e));
        EXPECT(0xae, gbc.readMem(0x878f));
        EXPECT(0x52, gbc.readMem(0xacef));
        // CB AE 0155
        gbc.setState(0x2f3a, 0xc9c8, 0x7af0, 0xcefd, 0x3764, 0x3c58, 0x1, 0x0);
        gbc.writeMem(0x2f3a, { 0xcb, 0xae });
        gbc.writeMem(0x3c58, { 0xde });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0xc9c8, gbc.sp());
        EXPECT(0x2f3c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB AE 0157
        gbc.setState(0x9951, 0x70bc, 0xbb50, 0xcfae, 0xeedd, 0xd193, 0x1, 0x1);
        gbc.writeMem(0x9951, { 0xcb, 0xae });
        gbc.writeMem(0xd193, { 0xe });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0x70bc, gbc.sp());
        EXPECT(0x9953, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9951));
        EXPECT(0xae, gbc.readMem(0x9952));
        EXPECT(0xe, gbc.readMem(0xd193));
        // CB AE 0158
        gbc.setState(0x953c, 0x10e9, 0x8f0, 0xb3fd, 0x3cde, 0x32a8, 0x1, 0x0);
        gbc.writeMem(0x32a8, { 0x16 });
        gbc.writeMem(0x953c, { 0xcb, 0xae });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x10e9, gbc.sp());
        EXPECT(0x953e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x953c));
        EXPECT(0xae, gbc.readMem(0x953d));
        // CB AE 015A
        gbc.setState(0x5558, 0xf5d4, 0xf500, 0xffee, 0x8a68, 0xa7be, 0x1, 0x1);
        gbc.writeMem(0x5558, { 0xcb, 0xae });
        gbc.writeMem(0xa7be, { 0x2 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0xf5d4, gbc.sp());
        EXPECT(0x555a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2, gbc.readMem(0xa7be));
        // CB AE 015C
        gbc.setState(0x98ed, 0xa5e4, 0xc2e0, 0x404c, 0xc9a1, 0x9bf3, 0x0, 0x1);
        gbc.writeMem(0x98ed, { 0xcb, 0xae });
        gbc.writeMem(0x9bf3, { 0x30 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0xa5e4, gbc.sp());
        EXPECT(0x98ef, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x98ed));
        EXPECT(0xae, gbc.readMem(0x98ee));
        EXPECT(0x10, gbc.readMem(0x9bf3));
        // CB AE 015E
        gbc.setState(0x64fa, 0x64f2, 0xbe00, 0xf5b7, 0x311d, 0xcb1d, 0x0, 0x1);
        gbc.writeMem(0x64fa, { 0xcb, 0xae });
        gbc.writeMem(0xcb1d, { 0x24 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x64f2, gbc.sp());
        EXPECT(0x64fc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4, gbc.readMem(0xcb1d));
        // CB AE 015F
        gbc.setState(0x8e35, 0x21c3, 0xdda0, 0x39a1, 0x9868, 0x87c6, 0x1, 0x0);
        gbc.writeMem(0x87c6, { 0xf0 });
        gbc.writeMem(0x8e35, { 0xcb, 0xae });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x21c3, gbc.sp());
        EXPECT(0x8e37, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd0, gbc.readMem(0x87c6));
        EXPECT(0xcb, gbc.readMem(0x8e35));
        EXPECT(0xae, gbc.readMem(0x8e36));
        // CB AE 0160
        gbc.setState(0x23b, 0xd6d2, 0x9e40, 0xbad5, 0x60c5, 0xe772, 0x0, 0x1);
        gbc.writeMem(0x23b, { 0xcb, 0xae });
        gbc.writeMem(0xe772, { 0x60 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0xd6d2, gbc.sp());
        EXPECT(0x23d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x40, gbc.readMem(0xe772));
        // CB AE 0163
        gbc.setState(0xd7, 0xe983, 0x8410, 0x4720, 0xcbcc, 0x9718, 0x0, 0x0);
        gbc.writeMem(0xd7, { 0xcb, 0xae });
        gbc.writeMem(0x9718, { 0x8e });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0xe983, gbc.sp());
        EXPECT(0xd9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8e, gbc.readMem(0x9718));
        // CB AE 0165
        gbc.setState(0x6be3, 0x66b1, 0x3b00, 0xde08, 0x3974, 0x5aec, 0x0, 0x0);
        gbc.writeMem(0x5aec, { 0x13 });
        gbc.writeMem(0x6be3, { 0xcb, 0xae });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x66b1, gbc.sp());
        EXPECT(0x6be5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB AE 0166
        gbc.setState(0x7743, 0xa82a, 0xba70, 0x9445, 0xfab1, 0xca25, 0x0, 0x1);
        gbc.writeMem(0x7743, { 0xcb, 0xae });
        gbc.writeMem(0xca25, { 0x9e });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0xa82a, gbc.sp());
        EXPECT(0x7745, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9e, gbc.readMem(0xca25));
        // CB AE 0167
        gbc.setState(0x9251, 0xc2d4, 0xc7c0, 0x253, 0x7fa5, 0xe3a7, 0x1, 0x0);
        gbc.writeMem(0x9251, { 0xcb, 0xae });
        gbc.writeMem(0xe3a7, { 0xcd });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0xc2d4, gbc.sp());
        EXPECT(0x9253, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9251));
        EXPECT(0xae, gbc.readMem(0x9252));
        EXPECT(0xcd, gbc.readMem(0xe3a7));
        // CB AE 0168
        gbc.setState(0xe4f6, 0x646c, 0xac50, 0xe6cd, 0x79bd, 0xdefa, 0x0, 0x1);
        gbc.writeMem(0xdefa, { 0x79 });
        gbc.writeMem(0xe4f6, { 0xcb, 0xae });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0x646c, gbc.sp());
        EXPECT(0xe4f8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x59, gbc.readMem(0xdefa));
        EXPECT(0xcb, gbc.readMem(0xe4f6));
        EXPECT(0xae, gbc.readMem(0xe4f7));
        // CB AE 016A
        gbc.setState(0x7a6e, 0x6ae6, 0x27f0, 0xd60c, 0x6310, 0x9b05, 0x0, 0x0);
        gbc.writeMem(0x7a6e, { 0xcb, 0xae });
        gbc.writeMem(0x9b05, { 0x3 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x6ae6, gbc.sp());
        EXPECT(0x7a70, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3, gbc.readMem(0x9b05));
        // CB AE 016B
        gbc.setState(0x37cb, 0x5b49, 0x4e30, 0x1729, 0x1030, 0x7924, 0x0, 0x1);
        gbc.writeMem(0x37cb, { 0xcb, 0xae });
        gbc.writeMem(0x7924, { 0x4d });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x5b49, gbc.sp());
        EXPECT(0x37cd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB AE 016C
        gbc.setState(0x775a, 0x5b2c, 0xc730, 0x8d2c, 0xfb32, 0x5609, 0x1, 0x0);
        gbc.writeMem(0x5609, { 0x4a });
        gbc.writeMem(0x775a, { 0xcb, 0xae });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x5b2c, gbc.sp());
        EXPECT(0x775c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB AE 016D
        gbc.setState(0x221a, 0xfee4, 0x52d0, 0xf67, 0x45e7, 0x466a, 0x1, 0x0);
        gbc.writeMem(0x221a, { 0xcb, 0xae });
        gbc.writeMem(0x466a, { 0x80 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0xfee4, gbc.sp());
        EXPECT(0x221c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB AE 016E
        gbc.setState(0x6b7c, 0xd1ec, 0x2880, 0x1085, 0xbba9, 0xc334, 0x0, 0x0);
        gbc.writeMem(0x6b7c, { 0xcb, 0xae });
        gbc.writeMem(0xc334, { 0xef });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0xd1ec, gbc.sp());
        EXPECT(0x6b7e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcf, gbc.readMem(0xc334));
        // CB AE 016F
        gbc.setState(0x1de9, 0x85a9, 0xf4b0, 0x2efc, 0x8b94, 0xe8bc, 0x1, 0x1);
        gbc.writeMem(0x1de9, { 0xcb, 0xae });
        gbc.writeMem(0xe8bc, { 0x7e });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x85a9, gbc.sp());
        EXPECT(0x1deb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5e, gbc.readMem(0xe8bc));
        // CB AE 0171
        gbc.setState(0xa8fb, 0x71e5, 0x93c0, 0xce9d, 0xc986, 0xcdc5, 0x0, 0x1);
        gbc.writeMem(0xa8fb, { 0xcb, 0xae });
        gbc.writeMem(0xcdc5, { 0x64 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x71e5, gbc.sp());
        EXPECT(0xa8fd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa8fb));
        EXPECT(0xae, gbc.readMem(0xa8fc));
        EXPECT(0x44, gbc.readMem(0xcdc5));
        // CB AE 0172
        gbc.setState(0x2f59, 0xdeb9, 0xaa70, 0x5358, 0x1b16, 0x8e1a, 0x1, 0x1);
        gbc.writeMem(0x2f59, { 0xcb, 0xae });
        gbc.writeMem(0x8e1a, { 0x2c });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0xdeb9, gbc.sp());
        EXPECT(0x2f5b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc, gbc.readMem(0x8e1a));
        // CB AE 0174
        gbc.setState(0x2034, 0x4328, 0xfb0, 0xa779, 0x8449, 0xff88, 0x0, 0x1);
        gbc.writeMem(0x2034, { 0xcb, 0xae });
        gbc.writeMem(0xff88, { 0x49 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x4328, gbc.sp());
        EXPECT(0x2036, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x49, gbc.readMem(0xff88));
        // CB AE 0175
        gbc.setState(0x2092, 0xc202, 0x3de0, 0x63b9, 0xde5d, 0x68a4, 0x0, 0x1);
        gbc.writeMem(0x2092, { 0xcb, 0xae });
        gbc.writeMem(0x68a4, { 0x91 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0xc202, gbc.sp());
        EXPECT(0x2094, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB AE 0176
        gbc.setState(0xe422, 0x8fe9, 0x9cf0, 0x88ca, 0xac4d, 0x1c7f, 0x0, 0x0);
        gbc.writeMem(0x1c7f, { 0x80 });
        gbc.writeMem(0xe422, { 0xcb, 0xae });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x8fe9, gbc.sp());
        EXPECT(0xe424, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe422));
        EXPECT(0xae, gbc.readMem(0xe423));
        // CB AE 0178
        gbc.setState(0x63a2, 0xe206, 0x6320, 0xd2a, 0xd695, 0x302, 0x1, 0x0);
        gbc.writeMem(0x302, { 0x52 });
        gbc.writeMem(0x63a2, { 0xcb, 0xae });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0xe206, gbc.sp());
        EXPECT(0x63a4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB AE 0179
        gbc.setState(0x4040, 0xcacb, 0x34d0, 0x3eff, 0x5c52, 0xb047, 0x1, 0x0);
        gbc.writeMem(0x4040, { 0xcb, 0xae });
        gbc.writeMem(0xb047, { 0xb });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0xcacb, gbc.sp());
        EXPECT(0x4042, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb, gbc.readMem(0xb047));
        // CB AE 017C
        gbc.setState(0x2f15, 0xb05e, 0xf690, 0x9cab, 0xfb1c, 0xa934, 0x1, 0x1);
        gbc.writeMem(0x2f15, { 0xcb, 0xae });
        gbc.writeMem(0xa934, { 0xb1 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0xb05e, gbc.sp());
        EXPECT(0x2f17, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x91, gbc.readMem(0xa934));
        // CB AE 017D
        gbc.setState(0xa037, 0x8de1, 0x73c0, 0x46f3, 0xd075, 0xea84, 0x1, 0x1);
        gbc.writeMem(0xa037, { 0xcb, 0xae });
        gbc.writeMem(0xea84, { 0xb2 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x8de1, gbc.sp());
        EXPECT(0xa039, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa037));
        EXPECT(0xae, gbc.readMem(0xa038));
        EXPECT(0x92, gbc.readMem(0xea84));
        // CB AE 017E
        gbc.setState(0x1ad, 0x3156, 0x29c0, 0x873f, 0x926c, 0x7b5a, 0x0, 0x1);
        gbc.writeMem(0x1ad, { 0xcb, 0xae });
        gbc.writeMem(0x7b5a, { 0x5c });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x3156, gbc.sp());
        EXPECT(0x1af, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB AE 017F
        gbc.setState(0x9760, 0xfe3e, 0x9aa0, 0x8de5, 0x5f8f, 0xe0c3, 0x0, 0x0);
        gbc.writeMem(0x9760, { 0xcb, 0xae });
        gbc.writeMem(0xe0c3, { 0x71 });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0xfe3e, gbc.sp());
        EXPECT(0x9762, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9760));
        EXPECT(0xae, gbc.readMem(0x9761));
        EXPECT(0x51, gbc.readMem(0xe0c3));
        // CB AE 0181
        gbc.setState(0x14a, 0x3c40, 0xf1b0, 0x8e6c, 0x178a, 0x10a6, 0x1, 0x0);
        gbc.writeMem(0x14a, { 0xcb, 0xae });
        gbc.writeMem(0x10a6, { 0x50 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x3c40, gbc.sp());
        EXPECT(0x14c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB AE 0182
        gbc.setState(0x1638, 0x938f, 0xe0f0, 0x38e5, 0xce4e, 0xca29, 0x1, 0x0);
        gbc.writeMem(0x1638, { 0xcb, 0xae });
        gbc.writeMem(0xca29, { 0x82 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x938f, gbc.sp());
        EXPECT(0x163a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x82, gbc.readMem(0xca29));
        // CB AE 0184
        gbc.setState(0x9e60, 0xe65d, 0x45a0, 0x1d34, 0xf8c1, 0xeef6, 0x1, 0x0);
        gbc.writeMem(0x9e60, { 0xcb, 0xae });
        gbc.writeMem(0xeef6, { 0x39 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0xe65d, gbc.sp());
        EXPECT(0x9e62, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9e60));
        EXPECT(0xae, gbc.readMem(0x9e61));
        EXPECT(0x19, gbc.readMem(0xeef6));
        // CB AE 0185
        gbc.setState(0x5ab0, 0x2744, 0xf9e0, 0x990b, 0xde1a, 0x1398, 0x0, 0x0);
        gbc.writeMem(0x1398, { 0x8a });
        gbc.writeMem(0x5ab0, { 0xcb, 0xae });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x2744, gbc.sp());
        EXPECT(0x5ab2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB AE 0186
        gbc.setState(0x27a4, 0xc306, 0x8860, 0x8acd, 0x76d4, 0x7b29, 0x1, 0x1);
        gbc.writeMem(0x27a4, { 0xcb, 0xae });
        gbc.writeMem(0x7b29, { 0x48 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0xc306, gbc.sp());
        EXPECT(0x27a6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB AE 0187
        gbc.setState(0x86bf, 0x3fea, 0xfb80, 0xeee6, 0x76bd, 0xd42, 0x1, 0x0);
        gbc.writeMem(0xd42, { 0x8f });
        gbc.writeMem(0x86bf, { 0xcb, 0xae });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x3fea, gbc.sp());
        EXPECT(0x86c1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x86bf));
        EXPECT(0xae, gbc.readMem(0x86c0));
        // CB AE 0188
        gbc.setState(0x8d65, 0x5dc, 0x77c0, 0x85c3, 0xae28, 0x1d50, 0x0, 0x0);
        gbc.writeMem(0x1d50, { 0x5e });
        gbc.writeMem(0x8d65, { 0xcb, 0xae });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x5dc, gbc.sp());
        EXPECT(0x8d67, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8d65));
        EXPECT(0xae, gbc.readMem(0x8d66));
        // CB AE 0189
        gbc.setState(0x5cb2, 0x5d7, 0x2b80, 0x4d71, 0xf1f5, 0xb14d, 0x0, 0x0);
        gbc.writeMem(0x5cb2, { 0xcb, 0xae });
        gbc.writeMem(0xb14d, { 0x9c });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x5d7, gbc.sp());
        EXPECT(0x5cb4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9c, gbc.readMem(0xb14d));
        // CB AE 018A
        gbc.setState(0x64bb, 0xf5d4, 0x58f0, 0x9f97, 0xe100, 0xe942, 0x0, 0x1);
        gbc.writeMem(0x64bb, { 0xcb, 0xae });
        gbc.writeMem(0xe942, { 0x7d });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0xf5d4, gbc.sp());
        EXPECT(0x64bd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5d, gbc.readMem(0xe942));
        // CB AE 0190
        gbc.setState(0x175, 0xf710, 0xf7e0, 0xc849, 0xdaa7, 0x596, 0x0, 0x0);
        gbc.writeMem(0x175, { 0xcb, 0xae });
        gbc.writeMem(0x596, { 0xcd });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0xf710, gbc.sp());
        EXPECT(0x177, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB AE 0191
        gbc.setState(0x1aa5, 0xa663, 0xe4c0, 0x3f5c, 0x353c, 0xf3cf, 0x0, 0x0);
        gbc.writeMem(0x1aa5, { 0xcb, 0xae });
        gbc.writeMem(0xf3cf, { 0x85 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0xa663, gbc.sp());
        EXPECT(0x1aa7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x85, gbc.readMem(0xf3cf));
        // CB AE 0192
        gbc.setState(0xbe40, 0xe8f6, 0x2740, 0x2ee2, 0xe346, 0x36a4, 0x1, 0x1);
        gbc.writeMem(0x36a4, { 0x91 });
        gbc.writeMem(0xbe40, { 0xcb, 0xae });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0xe8f6, gbc.sp());
        EXPECT(0xbe42, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbe40));
        EXPECT(0xae, gbc.readMem(0xbe41));
        // CB AE 0193
        gbc.setState(0xcb14, 0xf947, 0xa520, 0x89ba, 0x7ccd, 0x5d76, 0x1, 0x0);
        gbc.writeMem(0x5d76, { 0x86 });
        gbc.writeMem(0xcb14, { 0xcb, 0xae });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0xf947, gbc.sp());
        EXPECT(0xcb16, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcb14));
        EXPECT(0xae, gbc.readMem(0xcb15));
        // CB AE 0195
        gbc.setState(0x6c00, 0x6589, 0x7230, 0xb463, 0x8de5, 0xa8f4, 0x1, 0x0);
        gbc.writeMem(0x6c00, { 0xcb, 0xae });
        gbc.writeMem(0xa8f4, { 0xc8 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x6589, gbc.sp());
        EXPECT(0x6c02, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc8, gbc.readMem(0xa8f4));
        // CB AE 019A
        gbc.setState(0x2cfb, 0x2ffb, 0x3690, 0x1d68, 0xa40d, 0x1ceb, 0x1, 0x0);
        gbc.writeMem(0x1ceb, { 0x5d });
        gbc.writeMem(0x2cfb, { 0xcb, 0xae });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x2ffb, gbc.sp());
        EXPECT(0x2cfd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB AE 019C
        gbc.setState(0x9be3, 0xfd5a, 0x1590, 0xa872, 0x57b9, 0xb218, 0x1, 0x0);
        gbc.writeMem(0x9be3, { 0xcb, 0xae });
        gbc.writeMem(0xb218, { 0xd0 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0xfd5a, gbc.sp());
        EXPECT(0x9be5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9be3));
        EXPECT(0xae, gbc.readMem(0x9be4));
        EXPECT(0xd0, gbc.readMem(0xb218));
        // CB AE 019D
        gbc.setState(0xcfcd, 0xd18, 0x4ab0, 0x24cf, 0xdd01, 0x8e56, 0x1, 0x0);
        gbc.writeMem(0x8e56, { 0x1d });
        gbc.writeMem(0xcfcd, { 0xcb, 0xae });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0xd18, gbc.sp());
        EXPECT(0xcfcf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1d, gbc.readMem(0x8e56));
        EXPECT(0xcb, gbc.readMem(0xcfcd));
        EXPECT(0xae, gbc.readMem(0xcfce));
        // CB AE 019E
        gbc.setState(0xdcdd, 0xde03, 0x3bd0, 0x48c, 0xb41b, 0xe667, 0x0, 0x0);
        gbc.writeMem(0xdcdd, { 0xcb, 0xae });
        gbc.writeMem(0xe667, { 0xa6 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0xde03, gbc.sp());
        EXPECT(0xdcdf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdcdd));
        EXPECT(0xae, gbc.readMem(0xdcde));
        EXPECT(0x86, gbc.readMem(0xe667));
        // CB AE 01A0
        gbc.setState(0xf99, 0xf743, 0x7fc0, 0xc6fd, 0x761, 0x6d52, 0x1, 0x0);
        gbc.writeMem(0xf99, { 0xcb, 0xae });
        gbc.writeMem(0x6d52, { 0xdd });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0xf743, gbc.sp());
        EXPECT(0xf9b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB AE 01A1
        gbc.setState(0x6358, 0xc788, 0x4d70, 0xf9e1, 0x99f6, 0x81dc, 0x0, 0x1);
        gbc.writeMem(0x6358, { 0xcb, 0xae });
        gbc.writeMem(0x81dc, { 0x4c });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0xc788, gbc.sp());
        EXPECT(0x635a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4c, gbc.readMem(0x81dc));
        // CB AE 01A3
        gbc.setState(0x1f59, 0x374f, 0xca30, 0xc2d2, 0xfe2b, 0x1e4d, 0x1, 0x1);
        gbc.writeMem(0x1e4d, { 0x97 });
        gbc.writeMem(0x1f59, { 0xcb, 0xae });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x374f, gbc.sp());
        EXPECT(0x1f5b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB AE 01A4
        gbc.setState(0x906e, 0x9f79, 0xa280, 0x9ba7, 0x2d57, 0x2f27, 0x0, 0x0);
        gbc.writeMem(0x2f27, { 0x4 });
        gbc.writeMem(0x906e, { 0xcb, 0xae });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x9f79, gbc.sp());
        EXPECT(0x9070, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x906e));
        EXPECT(0xae, gbc.readMem(0x906f));
        // CB AE 01A5
        gbc.setState(0x5cb3, 0x3c27, 0x7170, 0x5130, 0x1aeb, 0x5b46, 0x0, 0x1);
        gbc.writeMem(0x5b46, { 0x3 });
        gbc.writeMem(0x5cb3, { 0xcb, 0xae });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x3c27, gbc.sp());
        EXPECT(0x5cb5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB AE 01A6
        gbc.setState(0x15e6, 0xf874, 0x19d0, 0xd9a1, 0x30b8, 0xeeb9, 0x0, 0x0);
        gbc.writeMem(0x15e6, { 0xcb, 0xae });
        gbc.writeMem(0xeeb9, { 0x60 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0xf874, gbc.sp());
        EXPECT(0x15e8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x40, gbc.readMem(0xeeb9));
        // CB AE 01A8
        gbc.setState(0x50b1, 0x8c0d, 0x6d90, 0xe39, 0xa9bf, 0xac46, 0x0, 0x1);
        gbc.writeMem(0x50b1, { 0xcb, 0xae });
        gbc.writeMem(0xac46, { 0xca });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x8c0d, gbc.sp());
        EXPECT(0x50b3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xca, gbc.readMem(0xac46));
        // CB AE 01A9
        gbc.setState(0xa788, 0xe9ad, 0x3f40, 0xda6a, 0xdea1, 0xb6eb, 0x0, 0x1);
        gbc.writeMem(0xa788, { 0xcb, 0xae });
        gbc.writeMem(0xb6eb, { 0x4 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0xe9ad, gbc.sp());
        EXPECT(0xa78a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa788));
        EXPECT(0xae, gbc.readMem(0xa789));
        EXPECT(0x4, gbc.readMem(0xb6eb));
        // CB AE 01AA
        gbc.setState(0xa14, 0xa7c0, 0x5dd0, 0x99a4, 0x5fc, 0xa1c0, 0x1, 0x0);
        gbc.writeMem(0xa14, { 0xcb, 0xae });
        gbc.writeMem(0xa1c0, { 0x82 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0xa7c0, gbc.sp());
        EXPECT(0xa16, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x82, gbc.readMem(0xa1c0));
        // CB AE 01AB
        gbc.setState(0x74b3, 0x22a9, 0xa110, 0xe7a0, 0x1694, 0x8697, 0x0, 0x0);
        gbc.writeMem(0x74b3, { 0xcb, 0xae });
        gbc.writeMem(0x8697, { 0x41 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0x22a9, gbc.sp());
        EXPECT(0x74b5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x41, gbc.readMem(0x8697));
        // CB AE 01AC
        gbc.setState(0xc2aa, 0x52ed, 0x3940, 0xbfe6, 0xd7c9, 0xfffe, 0x1, 0x1);
        gbc.writeMem(0xc2aa, { 0xcb, 0xae });
        gbc.writeMem(0xfffe, { 0x1b });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x52ed, gbc.sp());
        EXPECT(0xc2ac, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc2aa));
        EXPECT(0xae, gbc.readMem(0xc2ab));
        EXPECT(0x1b, gbc.readMem(0xfffe));
        // CB AE 01AD
        gbc.setState(0xc05a, 0x3ffe, 0x2a90, 0x82cd, 0x1748, 0xfac, 0x1, 0x0);
        gbc.writeMem(0xfac, { 0xdd });
        gbc.writeMem(0xc05a, { 0xcb, 0xae });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x3ffe, gbc.sp());
        EXPECT(0xc05c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc05a));
        EXPECT(0xae, gbc.readMem(0xc05b));
        // CB AE 01AE
        gbc.setState(0x1ad9, 0x719, 0x49b0, 0x33ab, 0x6ebe, 0xe256, 0x1, 0x0);
        gbc.writeMem(0x1ad9, { 0xcb, 0xae });
        gbc.writeMem(0xe256, { 0x9c });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0x719, gbc.sp());
        EXPECT(0x1adb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9c, gbc.readMem(0xe256));
        // CB AE 01B1
        gbc.setState(0xa663, 0xfa39, 0x8cc0, 0x2cc2, 0x21f6, 0x7bd5, 0x1, 0x1);
        gbc.writeMem(0x7bd5, { 0x93 });
        gbc.writeMem(0xa663, { 0xcb, 0xae });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0xfa39, gbc.sp());
        EXPECT(0xa665, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa663));
        EXPECT(0xae, gbc.readMem(0xa664));
        // CB AE 01B2
        gbc.setState(0xa010, 0xeaa, 0xadd0, 0xdb8, 0xce46, 0xafa3, 0x0, 0x0);
        gbc.writeMem(0xa010, { 0xcb, 0xae });
        gbc.writeMem(0xafa3, { 0xb0 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0xeaa, gbc.sp());
        EXPECT(0xa012, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa010));
        EXPECT(0xae, gbc.readMem(0xa011));
        EXPECT(0x90, gbc.readMem(0xafa3));
        // CB AE 01B5
        gbc.setState(0x1a77, 0x498f, 0x52c0, 0x2890, 0x6527, 0xbbec, 0x0, 0x0);
        gbc.writeMem(0x1a77, { 0xcb, 0xae });
        gbc.writeMem(0xbbec, { 0x18 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x498f, gbc.sp());
        EXPECT(0x1a79, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x18, gbc.readMem(0xbbec));
        // CB AE 01B6
        gbc.setState(0x2e1, 0xc06c, 0xa950, 0x16c0, 0x5e5d, 0xfe3f, 0x0, 0x1);
        gbc.writeMem(0x2e1, { 0xcb, 0xae });
        gbc.writeMem(0xfe3f, { 0xa4 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0xc06c, gbc.sp());
        EXPECT(0x2e3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x84, gbc.readMem(0xfe3f));
        // CB AE 01B7
        gbc.setState(0x1b6f, 0x1b74, 0xc000, 0xae0b, 0x81e3, 0xc399, 0x0, 0x0);
        gbc.writeMem(0x1b6f, { 0xcb, 0xae });
        gbc.writeMem(0xc399, { 0x71 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x1b74, gbc.sp());
        EXPECT(0x1b71, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x51, gbc.readMem(0xc399));
        // CB AE 01B9
        gbc.setState(0xe277, 0xc1ea, 0xa890, 0x499f, 0x5ea3, 0x93ab, 0x0, 0x1);
        gbc.writeMem(0x93ab, { 0xea });
        gbc.writeMem(0xe277, { 0xcb, 0xae });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0xc1ea, gbc.sp());
        EXPECT(0xe279, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xca, gbc.readMem(0x93ab));
        EXPECT(0xcb, gbc.readMem(0xe277));
        EXPECT(0xae, gbc.readMem(0xe278));
        // CB AE 01BA
        gbc.setState(0x6a6c, 0xf30c, 0x4920, 0x9802, 0x21d3, 0xfcbd, 0x1, 0x0);
        gbc.writeMem(0x6a6c, { 0xcb, 0xae });
        gbc.writeMem(0xfcbd, { 0x6b });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0xf30c, gbc.sp());
        EXPECT(0x6a6e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4b, gbc.readMem(0xfcbd));
        // CB AE 01BB
        gbc.setState(0x86d2, 0xc259, 0x5850, 0x7971, 0xcaa4, 0xac36, 0x0, 0x1);
        gbc.writeMem(0x86d2, { 0xcb, 0xae });
        gbc.writeMem(0xac36, { 0x38 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0xc259, gbc.sp());
        EXPECT(0x86d4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x86d2));
        EXPECT(0xae, gbc.readMem(0x86d3));
        EXPECT(0x18, gbc.readMem(0xac36));
        // CB AE 01BC
        gbc.setState(0x5ee5, 0x1c9d, 0x8820, 0xcaef, 0x18c0, 0x127, 0x1, 0x1);
        gbc.writeMem(0x127, { 0x5c });
        gbc.writeMem(0x5ee5, { 0xcb, 0xae });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x1c9d, gbc.sp());
        EXPECT(0x5ee7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB AE 01BD
        gbc.setState(0x3fa3, 0x720, 0xb630, 0xd78c, 0xd5c7, 0xd721, 0x1, 0x1);
        gbc.writeMem(0x3fa3, { 0xcb, 0xae });
        gbc.writeMem(0xd721, { 0x83 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x720, gbc.sp());
        EXPECT(0x3fa5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x83, gbc.readMem(0xd721));
        // CB AE 01BE
        gbc.setState(0x52fe, 0xab83, 0x2f00, 0x8f84, 0x1cd5, 0x6ee2, 0x1, 0x1);
        gbc.writeMem(0x52fe, { 0xcb, 0xae });
        gbc.writeMem(0x6ee2, { 0x84 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0xab83, gbc.sp());
        EXPECT(0x5300, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB AE 01BF
        gbc.setState(0xa93, 0x4e97, 0x2a90, 0xae63, 0x65e2, 0x7892, 0x1, 0x0);
        gbc.writeMem(0xa93, { 0xcb, 0xae });
        gbc.writeMem(0x7892, { 0x93 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x4e97, gbc.sp());
        EXPECT(0xa95, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB AE 01C0
        gbc.setState(0x2d49, 0x499f, 0xaa70, 0xe031, 0x3eb8, 0x3e93, 0x1, 0x1);
        gbc.writeMem(0x2d49, { 0xcb, 0xae });
        gbc.writeMem(0x3e93, { 0x8 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0x499f, gbc.sp());
        EXPECT(0x2d4b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB AE 01C1
        gbc.setState(0x2e53, 0x19e3, 0xb830, 0xee6e, 0x199e, 0x905, 0x0, 0x0);
        gbc.writeMem(0x905, { 0x88 });
        gbc.writeMem(0x2e53, { 0xcb, 0xae });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x19e3, gbc.sp());
        EXPECT(0x2e55, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB AE 01C3
        gbc.setState(0x344a, 0x4342, 0x2980, 0x1ac, 0x6bf7, 0x853c, 0x0, 0x1);
        gbc.writeMem(0x344a, { 0xcb, 0xae });
        gbc.writeMem(0x853c, { 0x1d });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x4342, gbc.sp());
        EXPECT(0x344c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1d, gbc.readMem(0x853c));
        // CB AE 01C6
        gbc.setState(0xc08c, 0x6ee7, 0x7720, 0x1cd2, 0x9af0, 0x8d53, 0x1, 0x0);
        gbc.writeMem(0x8d53, { 0xc7 });
        gbc.writeMem(0xc08c, { 0xcb, 0xae });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x6ee7, gbc.sp());
        EXPECT(0xc08e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc7, gbc.readMem(0x8d53));
        EXPECT(0xcb, gbc.readMem(0xc08c));
        EXPECT(0xae, gbc.readMem(0xc08d));
        // CB AE 01C7
        gbc.setState(0xe49a, 0x8a4b, 0x55f0, 0xab42, 0x44c3, 0xdfc6, 0x1, 0x0);
        gbc.writeMem(0xdfc6, { 0x9f });
        gbc.writeMem(0xe49a, { 0xcb, 0xae });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x8a4b, gbc.sp());
        EXPECT(0xe49c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9f, gbc.readMem(0xdfc6));
        EXPECT(0xcb, gbc.readMem(0xe49a));
        EXPECT(0xae, gbc.readMem(0xe49b));
        // CB AE 01C9
        gbc.setState(0x55e4, 0xa041, 0xd8e0, 0xf56b, 0xe374, 0x32d5, 0x1, 0x1);
        gbc.writeMem(0x32d5, { 0xde });
        gbc.writeMem(0x55e4, { 0xcb, 0xae });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0xa041, gbc.sp());
        EXPECT(0x55e6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB AE 01CA
        gbc.setState(0xa55f, 0xf1d9, 0x8400, 0x4c6c, 0x97f7, 0xe63c, 0x1, 0x0);
        gbc.writeMem(0xa55f, { 0xcb, 0xae });
        gbc.writeMem(0xe63c, { 0x5b });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0xf1d9, gbc.sp());
        EXPECT(0xa561, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa55f));
        EXPECT(0xae, gbc.readMem(0xa560));
        EXPECT(0x5b, gbc.readMem(0xe63c));
        // CB AE 01CC
        gbc.setState(0x3627, 0xe0a8, 0x4e50, 0xc245, 0x139e, 0xadce, 0x0, 0x0);
        gbc.writeMem(0x3627, { 0xcb, 0xae });
        gbc.writeMem(0xadce, { 0xa5 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0xe0a8, gbc.sp());
        EXPECT(0x3629, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x85, gbc.readMem(0xadce));
        // CB AE 01CE
        gbc.setState(0x4873, 0x7e4a, 0xb9c0, 0x443d, 0xcc74, 0x9b5f, 0x0, 0x1);
        gbc.writeMem(0x4873, { 0xcb, 0xae });
        gbc.writeMem(0x9b5f, { 0x9a });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x7e4a, gbc.sp());
        EXPECT(0x4875, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9a, gbc.readMem(0x9b5f));
        // CB AE 01D0
        gbc.setState(0xbfe7, 0x8106, 0x9f30, 0x3978, 0xba27, 0x9292, 0x0, 0x0);
        gbc.writeMem(0x9292, { 0xa4 });
        gbc.writeMem(0xbfe7, { 0xcb, 0xae });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x8106, gbc.sp());
        EXPECT(0xbfe9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x84, gbc.readMem(0x9292));
        EXPECT(0xcb, gbc.readMem(0xbfe7));
        EXPECT(0xae, gbc.readMem(0xbfe8));
        // CB AE 01D2
        gbc.setState(0x6f6a, 0x917f, 0x3290, 0x95e6, 0xdad5, 0x848c, 0x1, 0x0);
        gbc.writeMem(0x6f6a, { 0xcb, 0xae });
        gbc.writeMem(0x848c, { 0xff });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x917f, gbc.sp());
        EXPECT(0x6f6c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xdf, gbc.readMem(0x848c));
        // CB AE 01D4
        gbc.setState(0x87a0, 0x1d68, 0x1100, 0xe07b, 0x6085, 0xbe31, 0x0, 0x1);
        gbc.writeMem(0x87a0, { 0xcb, 0xae });
        gbc.writeMem(0xbe31, { 0xf5 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x1d68, gbc.sp());
        EXPECT(0x87a2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x87a0));
        EXPECT(0xae, gbc.readMem(0x87a1));
        EXPECT(0xd5, gbc.readMem(0xbe31));
        // CB AE 01D7
        gbc.setState(0x69d9, 0x8b6b, 0x4700, 0x57d0, 0xa976, 0xbd31, 0x1, 0x0);
        gbc.writeMem(0x69d9, { 0xcb, 0xae });
        gbc.writeMem(0xbd31, { 0x79 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x8b6b, gbc.sp());
        EXPECT(0x69db, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x59, gbc.readMem(0xbd31));
        // CB AE 01D8
        gbc.setState(0x40c4, 0x211a, 0x2730, 0x22b5, 0x34, 0xe19a, 0x1, 0x1);
        gbc.writeMem(0x40c4, { 0xcb, 0xae });
        gbc.writeMem(0xe19a, { 0x47 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x211a, gbc.sp());
        EXPECT(0x40c6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x47, gbc.readMem(0xe19a));
        // CB AE 01D9
        gbc.setState(0xa690, 0x9dd7, 0x9450, 0x82ad, 0xf729, 0x129a, 0x1, 0x1);
        gbc.writeMem(0x129a, { 0x9f });
        gbc.writeMem(0xa690, { 0xcb, 0xae });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x9dd7, gbc.sp());
        EXPECT(0xa692, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa690));
        EXPECT(0xae, gbc.readMem(0xa691));
        // CB AE 01DA
        gbc.setState(0xc30a, 0x6bc8, 0xce10, 0x2ad9, 0xe5ae, 0x60bd, 0x0, 0x0);
        gbc.writeMem(0x60bd, { 0xe });
        gbc.writeMem(0xc30a, { 0xcb, 0xae });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x6bc8, gbc.sp());
        EXPECT(0xc30c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc30a));
        EXPECT(0xae, gbc.readMem(0xc30b));
        // CB AE 01DB
        gbc.setState(0xcd61, 0xf66e, 0x10b0, 0xe91b, 0x6b27, 0x7568, 0x1, 0x0);
        gbc.writeMem(0x7568, { 0x1a });
        gbc.writeMem(0xcd61, { 0xcb, 0xae });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0xf66e, gbc.sp());
        EXPECT(0xcd63, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcd61));
        EXPECT(0xae, gbc.readMem(0xcd62));
        // CB AE 01DD
        gbc.setState(0xcf9c, 0xed2, 0xe2a0, 0xcf80, 0x62cf, 0xdd1f, 0x0, 0x0);
        gbc.writeMem(0xcf9c, { 0xcb, 0xae });
        gbc.writeMem(0xdd1f, { 0x5d });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0xed2, gbc.sp());
        EXPECT(0xcf9e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcf9c));
        EXPECT(0xae, gbc.readMem(0xcf9d));
        EXPECT(0x5d, gbc.readMem(0xdd1f));
        // CB AE 01DE
        gbc.setState(0x4808, 0x30a, 0x7c0, 0xec86, 0x5997, 0x6b7c, 0x1, 0x0);
        gbc.writeMem(0x4808, { 0xcb, 0xae });
        gbc.writeMem(0x6b7c, { 0xc0 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x30a, gbc.sp());
        EXPECT(0x480a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB AE 01DF
        gbc.setState(0xbd7d, 0x9fde, 0xe810, 0x7fbe, 0x3334, 0x58ce, 0x1, 0x1);
        gbc.writeMem(0x58ce, { 0xd7 });
        gbc.writeMem(0xbd7d, { 0xcb, 0xae });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x9fde, gbc.sp());
        EXPECT(0xbd7f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbd7d));
        EXPECT(0xae, gbc.readMem(0xbd7e));
        // CB AE 01E0
        gbc.setState(0x56ef, 0xef48, 0x77e0, 0x7290, 0xa569, 0x2aba, 0x1, 0x1);
        gbc.writeMem(0x2aba, { 0x4d });
        gbc.writeMem(0x56ef, { 0xcb, 0xae });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0xef48, gbc.sp());
        EXPECT(0x56f1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB AE 01E1
        gbc.setState(0xc741, 0x3dba, 0x3620, 0xe2c7, 0x7640, 0x56aa, 0x0, 0x1);
        gbc.writeMem(0x56aa, { 0x96 });
        gbc.writeMem(0xc741, { 0xcb, 0xae });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x3dba, gbc.sp());
        EXPECT(0xc743, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc741));
        EXPECT(0xae, gbc.readMem(0xc742));
        // CB AE 01E2
        gbc.setState(0xabea, 0x1dc, 0x36d0, 0xfc7f, 0x1c4d, 0x3c42, 0x0, 0x1);
        gbc.writeMem(0x3c42, { 0xe });
        gbc.writeMem(0xabea, { 0xcb, 0xae });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x1dc, gbc.sp());
        EXPECT(0xabec, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xabea));
        EXPECT(0xae, gbc.readMem(0xabeb));
        // CB AE 01E3
        gbc.setState(0x5145, 0xf343, 0x6890, 0x3cc3, 0x46bd, 0x8c24, 0x1, 0x1);
        gbc.writeMem(0x5145, { 0xcb, 0xae });
        gbc.writeMem(0x8c24, { 0xe5 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0xf343, gbc.sp());
        EXPECT(0x5147, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc5, gbc.readMem(0x8c24));
        // CB AE 01E4
        gbc.setState(0xc0cc, 0xc66f, 0xa9c0, 0xaa5c, 0xe779, 0xdb49, 0x0, 0x0);
        gbc.writeMem(0xc0cc, { 0xcb, 0xae });
        gbc.writeMem(0xdb49, { 0x32 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0xc66f, gbc.sp());
        EXPECT(0xc0ce, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc0cc));
        EXPECT(0xae, gbc.readMem(0xc0cd));
        EXPECT(0x12, gbc.readMem(0xdb49));
        // CB AE 01E5
        gbc.setState(0x4f1b, 0xe529, 0xead0, 0xf98d, 0xeb46, 0x18d0, 0x1, 0x0);
        gbc.writeMem(0x18d0, { 0x7 });
        gbc.writeMem(0x4f1b, { 0xcb, 0xae });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0xe529, gbc.sp());
        EXPECT(0x4f1d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB AE 01E6
        gbc.setState(0x381a, 0x60c7, 0x1d50, 0x37e0, 0x6032, 0xbc6e, 0x1, 0x0);
        gbc.writeMem(0x381a, { 0xcb, 0xae });
        gbc.writeMem(0xbc6e, { 0xe5 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x60c7, gbc.sp());
        EXPECT(0x381c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc5, gbc.readMem(0xbc6e));
        // CB AE 01E7
        gbc.setState(0x551a, 0x6043, 0x3b40, 0xcd93, 0x2b0, 0x18be, 0x1, 0x0);
        gbc.writeMem(0x18be, { 0x40 });
        gbc.writeMem(0x551a, { 0xcb, 0xae });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0x6043, gbc.sp());
        EXPECT(0x551c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB AE 01E8
        gbc.setState(0xeb4e, 0x8a9d, 0x5820, 0x15ef, 0xbafe, 0x3524, 0x0, 0x0);
        gbc.writeMem(0x3524, { 0xca });
        gbc.writeMem(0xeb4e, { 0xcb, 0xae });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x8a9d, gbc.sp());
        EXPECT(0xeb50, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeb4e));
        EXPECT(0xae, gbc.readMem(0xeb4f));
        // CB AE 01E9
        gbc.setState(0xb1ca, 0x5caa, 0x1060, 0x8727, 0x1739, 0x1a35, 0x1, 0x1);
        gbc.writeMem(0x1a35, { 0x14 });
        gbc.writeMem(0xb1ca, { 0xcb, 0xae });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x5caa, gbc.sp());
        EXPECT(0xb1cc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb1ca));
        EXPECT(0xae, gbc.readMem(0xb1cb));
        // CB AE 01EB
        gbc.setState(0x6991, 0xcbab, 0xde90, 0xbacb, 0xa502, 0x233e, 0x1, 0x1);
        gbc.writeMem(0x233e, { 0xd });
        gbc.writeMem(0x6991, { 0xcb, 0xae });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0xcbab, gbc.sp());
        EXPECT(0x6993, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB AE 01EC
        gbc.setState(0x39b0, 0x9867, 0x6dc0, 0x1c37, 0x656b, 0x94fe, 0x0, 0x0);
        gbc.writeMem(0x39b0, { 0xcb, 0xae });
        gbc.writeMem(0x94fe, { 0xe3 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x9867, gbc.sp());
        EXPECT(0x39b2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc3, gbc.readMem(0x94fe));
        // CB AE 01EE
        gbc.setState(0x40ba, 0x68d9, 0x48e0, 0x9d0e, 0x83, 0xc772, 0x0, 0x0);
        gbc.writeMem(0x40ba, { 0xcb, 0xae });
        gbc.writeMem(0xc772, { 0xe0 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x68d9, gbc.sp());
        EXPECT(0x40bc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc0, gbc.readMem(0xc772));
        // CB AE 01F1
        gbc.setState(0xcab, 0x3b25, 0xb160, 0xc9e2, 0xd1de, 0x1a7d, 0x0, 0x0);
        gbc.writeMem(0xcab, { 0xcb, 0xae });
        gbc.writeMem(0x1a7d, { 0x47 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x3b25, gbc.sp());
        EXPECT(0xcad, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB AE 01F2
        gbc.setState(0x2d6f, 0xc546, 0xd4a0, 0x40d7, 0xb5eb, 0xbdc1, 0x0, 0x1);
        gbc.writeMem(0x2d6f, { 0xcb, 0xae });
        gbc.writeMem(0xbdc1, { 0xd6 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0xc546, gbc.sp());
        EXPECT(0x2d71, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd6, gbc.readMem(0xbdc1));
        // CB AE 01F4
        gbc.setState(0x6cef, 0xdf21, 0xe5d0, 0xf783, 0x3154, 0x61e2, 0x1, 0x0);
        gbc.writeMem(0x61e2, { 0x15 });
        gbc.writeMem(0x6cef, { 0xcb, 0xae });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0xdf21, gbc.sp());
        EXPECT(0x6cf1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB AE 01F6
        gbc.setState(0xb7b8, 0xd32b, 0xd880, 0x6a20, 0x6656, 0xadbb, 0x0, 0x0);
        gbc.writeMem(0xadbb, { 0x35 });
        gbc.writeMem(0xb7b8, { 0xcb, 0xae });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0xd32b, gbc.sp());
        EXPECT(0xb7ba, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x15, gbc.readMem(0xadbb));
        EXPECT(0xcb, gbc.readMem(0xb7b8));
        EXPECT(0xae, gbc.readMem(0xb7b9));
        // CB AE 01F7
        gbc.setState(0xd27e, 0x492e, 0xac50, 0xe540, 0x5066, 0xcea3, 0x1, 0x1);
        gbc.writeMem(0xcea3, { 0xfc });
        gbc.writeMem(0xd27e, { 0xcb, 0xae });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0x492e, gbc.sp());
        EXPECT(0xd280, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xdc, gbc.readMem(0xcea3));
        EXPECT(0xcb, gbc.readMem(0xd27e));
        EXPECT(0xae, gbc.readMem(0xd27f));
        // CB AE 01FE
        gbc.setState(0xe0b1, 0xdee6, 0xf900, 0x5044, 0xda1f, 0x465c, 0x1, 0x1);
        gbc.writeMem(0x465c, { 0x5b });
        gbc.writeMem(0xe0b1, { 0xcb, 0xae });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0xdee6, gbc.sp());
        EXPECT(0xe0b3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe0b1));
        EXPECT(0xae, gbc.readMem(0xe0b2));
        // CB AE 01FF
        gbc.setState(0x245b, 0x1495, 0xfce0, 0xacce, 0x9d72, 0xf9b3, 0x0, 0x0);
        gbc.writeMem(0x245b, { 0xcb, 0xae });
        gbc.writeMem(0xf9b3, { 0x45 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x1495, gbc.sp());
        EXPECT(0x245d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x45, gbc.readMem(0xf9b3));
        // CB AE 0200
        gbc.setState(0x1cea, 0x6673, 0xafe0, 0xb88c, 0x6a65, 0xf016, 0x1, 0x1);
        gbc.writeMem(0x1cea, { 0xcb, 0xae });
        gbc.writeMem(0xf016, { 0xe7 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x6673, gbc.sp());
        EXPECT(0x1cec, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc7, gbc.readMem(0xf016));
        // CB AE 0203
        gbc.setState(0x5571, 0xd38, 0x3aa0, 0x593c, 0xb24, 0xc458, 0x1, 0x0);
        gbc.writeMem(0x5571, { 0xcb, 0xae });
        gbc.writeMem(0xc458, { 0x3e });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0xd38, gbc.sp());
        EXPECT(0x5573, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1e, gbc.readMem(0xc458));
        // CB AE 0204
        gbc.setState(0xa405, 0x27a7, 0xa790, 0x48d1, 0x7543, 0xebe3, 0x0, 0x0);
        gbc.writeMem(0xa405, { 0xcb, 0xae });
        gbc.writeMem(0xebe3, { 0x32 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x27a7, gbc.sp());
        EXPECT(0xa407, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa405));
        EXPECT(0xae, gbc.readMem(0xa406));
        EXPECT(0x12, gbc.readMem(0xebe3));
        // CB AE 0206
        gbc.setState(0x6deb, 0xf39d, 0x2ed0, 0x987b, 0xfb85, 0xb08b, 0x0, 0x1);
        gbc.writeMem(0x6deb, { 0xcb, 0xae });
        gbc.writeMem(0xb08b, { 0xcc });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0xf39d, gbc.sp());
        EXPECT(0x6ded, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcc, gbc.readMem(0xb08b));
        // CB AE 0207
        gbc.setState(0xd653, 0xf249, 0x4e70, 0x451f, 0x24f7, 0xf592, 0x1, 0x1);
        gbc.writeMem(0xd653, { 0xcb, 0xae });
        gbc.writeMem(0xf592, { 0xbd });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0xf249, gbc.sp());
        EXPECT(0xd655, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd653));
        EXPECT(0xae, gbc.readMem(0xd654));
        EXPECT(0x9d, gbc.readMem(0xf592));
        // CB AE 0208
        gbc.setState(0xbdc4, 0x5872, 0x4630, 0xbb7d, 0x8602, 0xc7e1, 0x1, 0x1);
        gbc.writeMem(0xbdc4, { 0xcb, 0xae });
        gbc.writeMem(0xc7e1, { 0xef });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0x5872, gbc.sp());
        EXPECT(0xbdc6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbdc4));
        EXPECT(0xae, gbc.readMem(0xbdc5));
        EXPECT(0xcf, gbc.readMem(0xc7e1));
        // CB AE 020A
        gbc.setState(0xc3b8, 0x8e3b, 0x7a40, 0x25b, 0x865f, 0x578b, 0x0, 0x1);
        gbc.writeMem(0x578b, { 0x15 });
        gbc.writeMem(0xc3b8, { 0xcb, 0xae });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x8e3b, gbc.sp());
        EXPECT(0xc3ba, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc3b8));
        EXPECT(0xae, gbc.readMem(0xc3b9));
        // CB AE 020B
        gbc.setState(0x75c4, 0xf0b4, 0x6440, 0x99df, 0xc101, 0xe2bb, 0x0, 0x0);
        gbc.writeMem(0x75c4, { 0xcb, 0xae });
        gbc.writeMem(0xe2bb, { 0x5c });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0xf0b4, gbc.sp());
        EXPECT(0x75c6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5c, gbc.readMem(0xe2bb));
        // CB AE 020C
        gbc.setState(0x2815, 0x2d9b, 0xf980, 0x1f8f, 0x7253, 0x27ea, 0x0, 0x0);
        gbc.writeMem(0x27ea, { 0x40 });
        gbc.writeMem(0x2815, { 0xcb, 0xae });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x2d9b, gbc.sp());
        EXPECT(0x2817, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB AE 020D
        gbc.setState(0xdab, 0x60da, 0x1480, 0x1043, 0x8dc9, 0xeada, 0x1, 0x1);
        gbc.writeMem(0xdab, { 0xcb, 0xae });
        gbc.writeMem(0xeada, { 0xd });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x60da, gbc.sp());
        EXPECT(0xdad, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd, gbc.readMem(0xeada));
        // CB AE 020E
        gbc.setState(0x5bfa, 0x6043, 0x89f0, 0x39e7, 0x72b3, 0x8b8f, 0x1, 0x1);
        gbc.writeMem(0x5bfa, { 0xcb, 0xae });
        gbc.writeMem(0x8b8f, { 0x9a });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x6043, gbc.sp());
        EXPECT(0x5bfc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9a, gbc.readMem(0x8b8f));
        // CB AE 020F
        gbc.setState(0xe0c9, 0xb1b7, 0xe0b0, 0x5d6b, 0xf42e, 0xc577, 0x0, 0x0);
        gbc.writeMem(0xc577, { 0x9a });
        gbc.writeMem(0xe0c9, { 0xcb, 0xae });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0xb1b7, gbc.sp());
        EXPECT(0xe0cb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9a, gbc.readMem(0xc577));
        EXPECT(0xcb, gbc.readMem(0xe0c9));
        EXPECT(0xae, gbc.readMem(0xe0ca));
        // CB AE 0210
        gbc.setState(0x14ba, 0x6f51, 0x4e90, 0x4706, 0xc9ee, 0x485a, 0x1, 0x1);
        gbc.writeMem(0x14ba, { 0xcb, 0xae });
        gbc.writeMem(0x485a, { 0x90 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x6f51, gbc.sp());
        EXPECT(0x14bc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB AE 0213
        gbc.setState(0xb147, 0x7d80, 0x1e20, 0xcd51, 0xc08f, 0x76c5, 0x1, 0x0);
        gbc.writeMem(0x76c5, { 0xd6 });
        gbc.writeMem(0xb147, { 0xcb, 0xae });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x7d80, gbc.sp());
        EXPECT(0xb149, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb147));
        EXPECT(0xae, gbc.readMem(0xb148));
        // CB AE 0214
        gbc.setState(0xe2bb, 0xacd5, 0x7d80, 0xb600, 0xf8c6, 0x93fa, 0x0, 0x0);
        gbc.writeMem(0x93fa, { 0xfe });
        gbc.writeMem(0xe2bb, { 0xcb, 0xae });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0xacd5, gbc.sp());
        EXPECT(0xe2bd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xde, gbc.readMem(0x93fa));
        EXPECT(0xcb, gbc.readMem(0xe2bb));
        EXPECT(0xae, gbc.readMem(0xe2bc));
        // CB AE 0215
        gbc.setState(0x94cb, 0xb3f6, 0xb320, 0x60fc, 0xa2d1, 0xd74a, 0x1, 0x0);
        gbc.writeMem(0x94cb, { 0xcb, 0xae });
        gbc.writeMem(0xd74a, { 0x6e });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0xb3f6, gbc.sp());
        EXPECT(0x94cd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x94cb));
        EXPECT(0xae, gbc.readMem(0x94cc));
        EXPECT(0x4e, gbc.readMem(0xd74a));
        // CB AE 0217
        gbc.setState(0x2d43, 0x3cb7, 0x6a10, 0x9df6, 0xf5d5, 0xa2c8, 0x1, 0x0);
        gbc.writeMem(0x2d43, { 0xcb, 0xae });
        gbc.writeMem(0xa2c8, { 0x50 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x3cb7, gbc.sp());
        EXPECT(0x2d45, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x50, gbc.readMem(0xa2c8));
        // CB AE 0218
        gbc.setState(0x3846, 0x265b, 0xf510, 0xbaf3, 0xc60d, 0x67f2, 0x1, 0x0);
        gbc.writeMem(0x3846, { 0xcb, 0xae });
        gbc.writeMem(0x67f2, { 0xdc });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x265b, gbc.sp());
        EXPECT(0x3848, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB AE 0219
        gbc.setState(0xc83a, 0x8c6d, 0xe110, 0x97a0, 0x5caa, 0xf2fa, 0x0, 0x1);
        gbc.writeMem(0xc83a, { 0xcb, 0xae });
        gbc.writeMem(0xf2fa, { 0xef });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0x8c6d, gbc.sp());
        EXPECT(0xc83c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc83a));
        EXPECT(0xae, gbc.readMem(0xc83b));
        EXPECT(0xcf, gbc.readMem(0xf2fa));
        // CB AE 021A
        gbc.setState(0xe7c7, 0x7893, 0x5eb0, 0x8f21, 0x87f5, 0xeb8c, 0x1, 0x1);
        gbc.writeMem(0xe7c7, { 0xcb, 0xae });
        gbc.writeMem(0xeb8c, { 0xfe });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x7893, gbc.sp());
        EXPECT(0xe7c9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe7c7));
        EXPECT(0xae, gbc.readMem(0xe7c8));
        EXPECT(0xde, gbc.readMem(0xeb8c));
        // CB AE 021B
        gbc.setState(0x956d, 0xb2c5, 0xd060, 0xd826, 0x9b8, 0x82b1, 0x1, 0x1);
        gbc.writeMem(0x82b1, { 0x8e });
        gbc.writeMem(0x956d, { 0xcb, 0xae });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0xb2c5, gbc.sp());
        EXPECT(0x956f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8e, gbc.readMem(0x82b1));
        EXPECT(0xcb, gbc.readMem(0x956d));
        EXPECT(0xae, gbc.readMem(0x956e));
        // CB AE 021C
        gbc.setState(0x71ba, 0xc82d, 0xebc0, 0x8412, 0x5d58, 0x56ac, 0x0, 0x0);
        gbc.writeMem(0x56ac, { 0x47 });
        gbc.writeMem(0x71ba, { 0xcb, 0xae });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0xc82d, gbc.sp());
        EXPECT(0x71bc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB AE 021E
        gbc.setState(0x6044, 0x53d4, 0xbd0, 0x4647, 0x5cfc, 0x3861, 0x0, 0x1);
        gbc.writeMem(0x3861, { 0xdb });
        gbc.writeMem(0x6044, { 0xcb, 0xae });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x53d4, gbc.sp());
        EXPECT(0x6046, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB AE 021F
        gbc.setState(0x128b, 0x571, 0x1b80, 0xc3a1, 0xeacf, 0x8453, 0x1, 0x1);
        gbc.writeMem(0x128b, { 0xcb, 0xae });
        gbc.writeMem(0x8453, { 0xfb });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x571, gbc.sp());
        EXPECT(0x128d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xdb, gbc.readMem(0x8453));
        // CB AE 0221
        gbc.setState(0x9113, 0xa8dc, 0x76d0, 0x2c4d, 0x3dc1, 0xc310, 0x0, 0x0);
        gbc.writeMem(0x9113, { 0xcb, 0xae });
        gbc.writeMem(0xc310, { 0x21 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0xa8dc, gbc.sp());
        EXPECT(0x9115, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9113));
        EXPECT(0xae, gbc.readMem(0x9114));
        EXPECT(0x1, gbc.readMem(0xc310));
        // CB AE 0222
        gbc.setState(0x9abf, 0x929f, 0x7180, 0x2614, 0x89f3, 0xbf8c, 0x1, 0x1);
        gbc.writeMem(0x9abf, { 0xcb, 0xae });
        gbc.writeMem(0xbf8c, { 0x4c });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x929f, gbc.sp());
        EXPECT(0x9ac1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9abf));
        EXPECT(0xae, gbc.readMem(0x9ac0));
        EXPECT(0x4c, gbc.readMem(0xbf8c));
        // CB AE 0224
        gbc.setState(0x5ae0, 0x6b38, 0x6910, 0xecee, 0x1c98, 0x3941, 0x0, 0x1);
        gbc.writeMem(0x3941, { 0x46 });
        gbc.writeMem(0x5ae0, { 0xcb, 0xae });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x6b38, gbc.sp());
        EXPECT(0x5ae2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB AE 0225
        gbc.setState(0x9634, 0xf0b, 0x720, 0xc618, 0x7ad7, 0xf835, 0x0, 0x1);
        gbc.writeMem(0x9634, { 0xcb, 0xae });
        gbc.writeMem(0xf835, { 0xb });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0xf0b, gbc.sp());
        EXPECT(0x9636, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9634));
        EXPECT(0xae, gbc.readMem(0x9635));
        EXPECT(0xb, gbc.readMem(0xf835));
        // CB AE 0227
        gbc.setState(0xc419, 0x74b4, 0x15f0, 0x59b0, 0x46b5, 0xa04b, 0x1, 0x0);
        gbc.writeMem(0xa04b, { 0xc1 });
        gbc.writeMem(0xc419, { 0xcb, 0xae });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x74b4, gbc.sp());
        EXPECT(0xc41b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc1, gbc.readMem(0xa04b));
        EXPECT(0xcb, gbc.readMem(0xc419));
        EXPECT(0xae, gbc.readMem(0xc41a));
        // CB AE 0228
        gbc.setState(0xe09d, 0x6e96, 0x70f0, 0xcedd, 0x65c0, 0x8219, 0x0, 0x0);
        gbc.writeMem(0x8219, { 0x27 });
        gbc.writeMem(0xe09d, { 0xcb, 0xae });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x6e96, gbc.sp());
        EXPECT(0xe09f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7, gbc.readMem(0x8219));
        EXPECT(0xcb, gbc.readMem(0xe09d));
        EXPECT(0xae, gbc.readMem(0xe09e));
        // CB AE 022A
        gbc.setState(0x7494, 0x7ac8, 0xb330, 0xa4ee, 0x3241, 0xeb16, 0x1, 0x1);
        gbc.writeMem(0x7494, { 0xcb, 0xae });
        gbc.writeMem(0xeb16, { 0x59 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x7ac8, gbc.sp());
        EXPECT(0x7496, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x59, gbc.readMem(0xeb16));
        // CB AE 022C
        gbc.setState(0x9b51, 0x91d9, 0x5e00, 0xc171, 0xd7d2, 0x291e, 0x0, 0x1);
        gbc.writeMem(0x291e, { 0xc7 });
        gbc.writeMem(0x9b51, { 0xcb, 0xae });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x91d9, gbc.sp());
        EXPECT(0x9b53, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9b51));
        EXPECT(0xae, gbc.readMem(0x9b52));
        // CB AE 0231
        gbc.setState(0x7f43, 0xa486, 0x3660, 0x6018, 0xff6, 0x393f, 0x0, 0x1);
        gbc.writeMem(0x393f, { 0x13 });
        gbc.writeMem(0x7f43, { 0xcb, 0xae });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0xa486, gbc.sp());
        EXPECT(0x7f45, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB AE 0233
        gbc.setState(0xdd58, 0x2030, 0xbeb0, 0x8249, 0x2be7, 0xdcfe, 0x1, 0x0);
        gbc.writeMem(0xdcfe, { 0xe2 });
        gbc.writeMem(0xdd58, { 0xcb, 0xae });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x2030, gbc.sp());
        EXPECT(0xdd5a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc2, gbc.readMem(0xdcfe));
        EXPECT(0xcb, gbc.readMem(0xdd58));
        EXPECT(0xae, gbc.readMem(0xdd59));
        // CB AE 0234
        gbc.setState(0x34d9, 0xbcc9, 0x6510, 0x1a, 0x9615, 0x9eda, 0x1, 0x1);
        gbc.writeMem(0x34d9, { 0xcb, 0xae });
        gbc.writeMem(0x9eda, { 0x1 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0xbcc9, gbc.sp());
        EXPECT(0x34db, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1, gbc.readMem(0x9eda));
        // CB AE 0235
        gbc.setState(0x7e52, 0x506a, 0x9ee0, 0x7d11, 0x4c06, 0xdd6d, 0x0, 0x0);
        gbc.writeMem(0x7e52, { 0xcb, 0xae });
        gbc.writeMem(0xdd6d, { 0xe0 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x506a, gbc.sp());
        EXPECT(0x7e54, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc0, gbc.readMem(0xdd6d));
        // CB AE 0236
        gbc.setState(0x2704, 0xfaf0, 0xb4b0, 0x7463, 0x3efe, 0x2b8, 0x0, 0x0);
        gbc.writeMem(0x2b8, { 0x91 });
        gbc.writeMem(0x2704, { 0xcb, 0xae });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0xfaf0, gbc.sp());
        EXPECT(0x2706, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB AE 0237
        gbc.setState(0xea27, 0x6223, 0xb4b0, 0xfe18, 0xad1d, 0x51bc, 0x1, 0x1);
        gbc.writeMem(0x51bc, { 0x8b });
        gbc.writeMem(0xea27, { 0xcb, 0xae });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x6223, gbc.sp());
        EXPECT(0xea29, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xea27));
        EXPECT(0xae, gbc.readMem(0xea28));
        // CB AE 0238
        gbc.setState(0xe543, 0xe4d7, 0x5550, 0x7b46, 0xcc8c, 0xf97d, 0x1, 0x1);
        gbc.writeMem(0xe543, { 0xcb, 0xae });
        gbc.writeMem(0xf97d, { 0xc6 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0xe4d7, gbc.sp());
        EXPECT(0xe545, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe543));
        EXPECT(0xae, gbc.readMem(0xe544));
        EXPECT(0xc6, gbc.readMem(0xf97d));
        // CB AE 0239
        gbc.setState(0xa293, 0x3365, 0xaae0, 0x8dc6, 0x3ccd, 0xb11d, 0x0, 0x0);
        gbc.writeMem(0xa293, { 0xcb, 0xae });
        gbc.writeMem(0xb11d, { 0x66 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x3365, gbc.sp());
        EXPECT(0xa295, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa293));
        EXPECT(0xae, gbc.readMem(0xa294));
        EXPECT(0x46, gbc.readMem(0xb11d));
        // CB AE 023C
        gbc.setState(0x9b9, 0x6bb, 0xdbf0, 0xf27a, 0x193c, 0x6bbb, 0x0, 0x1);
        gbc.writeMem(0x9b9, { 0xcb, 0xae });
        gbc.writeMem(0x6bbb, { 0x8b });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x6bb, gbc.sp());
        EXPECT(0x9bb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB AE 023D
        gbc.setState(0x41ae, 0xa170, 0xe190, 0x4fd, 0x5e5d, 0xceb2, 0x1, 0x0);
        gbc.writeMem(0x41ae, { 0xcb, 0xae });
        gbc.writeMem(0xceb2, { 0x11 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0xa170, gbc.sp());
        EXPECT(0x41b0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x11, gbc.readMem(0xceb2));
        // CB AE 023E
        gbc.setState(0x2a5, 0xff42, 0xb610, 0xffc5, 0xd788, 0xc2a, 0x0, 0x0);
        gbc.writeMem(0x2a5, { 0xcb, 0xae });
        gbc.writeMem(0xc2a, { 0x47 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0xff42, gbc.sp());
        EXPECT(0x2a7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB AE 023F
        gbc.setState(0x6bee, 0x6d53, 0x6910, 0x73e3, 0x1709, 0xaea6, 0x0, 0x0);
        gbc.writeMem(0x6bee, { 0xcb, 0xae });
        gbc.writeMem(0xaea6, { 0x75 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x6d53, gbc.sp());
        EXPECT(0x6bf0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x55, gbc.readMem(0xaea6));
        // CB AE 0240
        gbc.setState(0xb387, 0x4827, 0x3930, 0x5b9b, 0x2439, 0x6057, 0x1, 0x1);
        gbc.writeMem(0x6057, { 0x4a });
        gbc.writeMem(0xb387, { 0xcb, 0xae });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x4827, gbc.sp());
        EXPECT(0xb389, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb387));
        EXPECT(0xae, gbc.readMem(0xb388));
        // CB AE 0241
        gbc.setState(0xa1a6, 0xc67d, 0xe550, 0xe65, 0x90a6, 0x19dd, 0x0, 0x1);
        gbc.writeMem(0x19dd, { 0x4a });
        gbc.writeMem(0xa1a6, { 0xcb, 0xae });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0xc67d, gbc.sp());
        EXPECT(0xa1a8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa1a6));
        EXPECT(0xae, gbc.readMem(0xa1a7));
        // CB AE 0242
        gbc.setState(0x514, 0x4f33, 0xff60, 0xcf40, 0xcc96, 0xdecd, 0x0, 0x1);
        gbc.writeMem(0x514, { 0xcb, 0xae });
        gbc.writeMem(0xdecd, { 0xf8 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x4f33, gbc.sp());
        EXPECT(0x516, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd8, gbc.readMem(0xdecd));
        // CB AE 0243
        gbc.setState(0x3514, 0x2d98, 0x9940, 0x1de5, 0x1472, 0xdb98, 0x1, 0x0);
        gbc.writeMem(0x3514, { 0xcb, 0xae });
        gbc.writeMem(0xdb98, { 0x9f });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x2d98, gbc.sp());
        EXPECT(0x3516, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9f, gbc.readMem(0xdb98));
        // CB AE 0246
        gbc.setState(0x4b7f, 0xdc50, 0x1930, 0xf25b, 0x676b, 0x75ba, 0x1, 0x0);
        gbc.writeMem(0x4b7f, { 0xcb, 0xae });
        gbc.writeMem(0x75ba, { 0xc5 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0xdc50, gbc.sp());
        EXPECT(0x4b81, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB AE 0247
        gbc.setState(0xc561, 0xcdd3, 0xb1f0, 0x85ec, 0x9fe5, 0x9c3e, 0x0, 0x0);
        gbc.writeMem(0x9c3e, { 0xd9 });
        gbc.writeMem(0xc561, { 0xcb, 0xae });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0xcdd3, gbc.sp());
        EXPECT(0xc563, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd9, gbc.readMem(0x9c3e));
        EXPECT(0xcb, gbc.readMem(0xc561));
        EXPECT(0xae, gbc.readMem(0xc562));
        // CB AE 0249
        gbc.setState(0x76ac, 0xeb59, 0x7c00, 0xd289, 0x6011, 0x39a2, 0x1, 0x0);
        gbc.writeMem(0x39a2, { 0xc0 });
        gbc.writeMem(0x76ac, { 0xcb, 0xae });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0xeb59, gbc.sp());
        EXPECT(0x76ae, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB AE 024A
        gbc.setState(0xa38d, 0x8ee0, 0xe50, 0x7b4c, 0xbfb4, 0xe571, 0x1, 0x0);
        gbc.writeMem(0xa38d, { 0xcb, 0xae });
        gbc.writeMem(0xe571, { 0x46 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x8ee0, gbc.sp());
        EXPECT(0xa38f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa38d));
        EXPECT(0xae, gbc.readMem(0xa38e));
        EXPECT(0x46, gbc.readMem(0xe571));
        // CB AE 024D
        gbc.setState(0x4cc5, 0x6533, 0x3ee0, 0x1ee5, 0xd59c, 0xe0a7, 0x1, 0x1);
        gbc.writeMem(0x4cc5, { 0xcb, 0xae });
        gbc.writeMem(0xe0a7, { 0x8b });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x6533, gbc.sp());
        EXPECT(0x4cc7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8b, gbc.readMem(0xe0a7));
        // CB AE 024F
        gbc.setState(0xc2d9, 0xc3e6, 0xd6b0, 0x9630, 0xb9f6, 0x351d, 0x1, 0x0);
        gbc.writeMem(0x351d, { 0xe });
        gbc.writeMem(0xc2d9, { 0xcb, 0xae });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0xc3e6, gbc.sp());
        EXPECT(0xc2db, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc2d9));
        EXPECT(0xae, gbc.readMem(0xc2da));
        // CB AE 0250
        gbc.setState(0xce32, 0x6f11, 0x6260, 0x1eb9, 0xe8a5, 0xc6b3, 0x0, 0x0);
        gbc.writeMem(0xc6b3, { 0x14 });
        gbc.writeMem(0xce32, { 0xcb, 0xae });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x6f11, gbc.sp());
        EXPECT(0xce34, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x14, gbc.readMem(0xc6b3));
        EXPECT(0xcb, gbc.readMem(0xce32));
        EXPECT(0xae, gbc.readMem(0xce33));
        // CB AE 0251
        gbc.setState(0xe90, 0x3e7c, 0xec20, 0xae10, 0xd52e, 0xec92, 0x1, 0x0);
        gbc.writeMem(0xe90, { 0xcb, 0xae });
        gbc.writeMem(0xec92, { 0x8f });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x3e7c, gbc.sp());
        EXPECT(0xe92, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8f, gbc.readMem(0xec92));
        // CB AE 0252
        gbc.setState(0x6e62, 0xc09c, 0xf4e0, 0xb25d, 0x2851, 0x85b0, 0x1, 0x1);
        gbc.writeMem(0x6e62, { 0xcb, 0xae });
        gbc.writeMem(0x85b0, { 0x9c });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0xc09c, gbc.sp());
        EXPECT(0x6e64, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9c, gbc.readMem(0x85b0));
        // CB AE 0253
        gbc.setState(0xb991, 0x65ce, 0xd970, 0xdf65, 0x955, 0xb863, 0x0, 0x0);
        gbc.writeMem(0xb863, { 0xc4 });
        gbc.writeMem(0xb991, { 0xcb, 0xae });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x65ce, gbc.sp());
        EXPECT(0xb993, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc4, gbc.readMem(0xb863));
        EXPECT(0xcb, gbc.readMem(0xb991));
        EXPECT(0xae, gbc.readMem(0xb992));
        // CB AE 0255
        gbc.setState(0x72af, 0x16a1, 0x3340, 0xdff9, 0x75e3, 0x70c0, 0x1, 0x1);
        gbc.writeMem(0x70c0, { 0x92 });
        gbc.writeMem(0x72af, { 0xcb, 0xae });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x16a1, gbc.sp());
        EXPECT(0x72b1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB AE 0256
        gbc.setState(0xeb94, 0x78a2, 0x410, 0xd0bb, 0x398c, 0x8cc7, 0x0, 0x0);
        gbc.writeMem(0x8cc7, { 0xb8 });
        gbc.writeMem(0xeb94, { 0xcb, 0xae });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x78a2, gbc.sp());
        EXPECT(0xeb96, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x98, gbc.readMem(0x8cc7));
        EXPECT(0xcb, gbc.readMem(0xeb94));
        EXPECT(0xae, gbc.readMem(0xeb95));
        // CB AE 0258
        gbc.setState(0xc0ec, 0xccda, 0x4350, 0xb9b8, 0x94ee, 0x9904, 0x1, 0x1);
        gbc.writeMem(0x9904, { 0xdb });
        gbc.writeMem(0xc0ec, { 0xcb, 0xae });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0xccda, gbc.sp());
        EXPECT(0xc0ee, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xdb, gbc.readMem(0x9904));
        EXPECT(0xcb, gbc.readMem(0xc0ec));
        EXPECT(0xae, gbc.readMem(0xc0ed));
        // CB AE 025A
        gbc.setState(0x7a22, 0x92db, 0x3c20, 0x8921, 0x68bd, 0x649d, 0x1, 0x0);
        gbc.writeMem(0x649d, { 0x45 });
        gbc.writeMem(0x7a22, { 0xcb, 0xae });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x92db, gbc.sp());
        EXPECT(0x7a24, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB AE 025C
        gbc.setState(0x2255, 0x3639, 0xb820, 0x4902, 0xd88e, 0x9a91, 0x1, 0x0);
        gbc.writeMem(0x2255, { 0xcb, 0xae });
        gbc.writeMem(0x9a91, { 0xf2 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x3639, gbc.sp());
        EXPECT(0x2257, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd2, gbc.readMem(0x9a91));
        // CB AE 025D
        gbc.setState(0x6376, 0x8ede, 0x1ba0, 0xcf, 0x4586, 0xfa9a, 0x0, 0x1);
        gbc.writeMem(0x6376, { 0xcb, 0xae });
        gbc.writeMem(0xfa9a, { 0xb3 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x8ede, gbc.sp());
        EXPECT(0x6378, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x93, gbc.readMem(0xfa9a));
        // CB AE 025E
        gbc.setState(0x2056, 0x5c42, 0x7060, 0x7f04, 0x3dc, 0xb1e8, 0x1, 0x0);
        gbc.writeMem(0x2056, { 0xcb, 0xae });
        gbc.writeMem(0xb1e8, { 0xca });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x5c42, gbc.sp());
        EXPECT(0x2058, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xca, gbc.readMem(0xb1e8));
        // CB AE 025F
        gbc.setState(0xb940, 0x51f7, 0x18d0, 0x2481, 0x3178, 0x5404, 0x1, 0x0);
        gbc.writeMem(0x5404, { 0x8e });
        gbc.writeMem(0xb940, { 0xcb, 0xae });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x51f7, gbc.sp());
        EXPECT(0xb942, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb940));
        EXPECT(0xae, gbc.readMem(0xb941));
        // CB AE 0260
        gbc.setState(0xb170, 0x95b8, 0xf700, 0xe917, 0x11be, 0x2f89, 0x0, 0x1);
        gbc.writeMem(0x2f89, { 0xdf });
        gbc.writeMem(0xb170, { 0xcb, 0xae });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x95b8, gbc.sp());
        EXPECT(0xb172, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb170));
        EXPECT(0xae, gbc.readMem(0xb171));
        // CB AE 0262
        gbc.setState(0x73d5, 0xcfaa, 0xaad0, 0x3a74, 0x4cf1, 0xca25, 0x0, 0x1);
        gbc.writeMem(0x73d5, { 0xcb, 0xae });
        gbc.writeMem(0xca25, { 0x9e });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0xcfaa, gbc.sp());
        EXPECT(0x73d7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9e, gbc.readMem(0xca25));
        // CB AE 0263
        gbc.setState(0x2c84, 0x2ad9, 0xaaa0, 0x50e1, 0xed2e, 0x204f, 0x0, 0x1);
        gbc.writeMem(0x204f, { 0x84 });
        gbc.writeMem(0x2c84, { 0xcb, 0xae });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x2ad9, gbc.sp());
        EXPECT(0x2c86, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB AE 0264
        gbc.setState(0x99f1, 0xdac0, 0x8980, 0x4e21, 0xbc71, 0x9e3b, 0x0, 0x1);
        gbc.writeMem(0x99f1, { 0xcb, 0xae });
        gbc.writeMem(0x9e3b, { 0x33 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0xdac0, gbc.sp());
        EXPECT(0x99f3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x99f1));
        EXPECT(0xae, gbc.readMem(0x99f2));
        EXPECT(0x13, gbc.readMem(0x9e3b));
        // CB AE 0265
        gbc.setState(0xa0d, 0xe132, 0xe000, 0x1e89, 0x6c52, 0x8c91, 0x1, 0x1);
        gbc.writeMem(0xa0d, { 0xcb, 0xae });
        gbc.writeMem(0x8c91, { 0x1a });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0xe132, gbc.sp());
        EXPECT(0xa0f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1a, gbc.readMem(0x8c91));
        // CB AE 0267
        gbc.setState(0xbeae, 0x5b30, 0xf580, 0xad19, 0xf22e, 0xdee9, 0x0, 0x1);
        gbc.writeMem(0xbeae, { 0xcb, 0xae });
        gbc.writeMem(0xdee9, { 0x1e });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x5b30, gbc.sp());
        EXPECT(0xbeb0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbeae));
        EXPECT(0xae, gbc.readMem(0xbeaf));
        EXPECT(0x1e, gbc.readMem(0xdee9));
        // CB AE 0269
        gbc.setState(0x6188, 0xfd7a, 0xe5d0, 0xb662, 0xb7ef, 0xfd0e, 0x1, 0x1);
        gbc.writeMem(0x6188, { 0xcb, 0xae });
        gbc.writeMem(0xfd0e, { 0x9c });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0xfd7a, gbc.sp());
        EXPECT(0x618a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9c, gbc.readMem(0xfd0e));
        // CB AE 026A
        gbc.setState(0xabc4, 0x4960, 0xcea0, 0x2700, 0xa0c0, 0xdf34, 0x0, 0x0);
        gbc.writeMem(0xabc4, { 0xcb, 0xae });
        gbc.writeMem(0xdf34, { 0xcb });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x4960, gbc.sp());
        EXPECT(0xabc6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xabc4));
        EXPECT(0xae, gbc.readMem(0xabc5));
        EXPECT(0xcb, gbc.readMem(0xdf34));
        // CB AE 026B
        gbc.setState(0x8d13, 0x78d3, 0x8850, 0x466d, 0xb35, 0x477c, 0x0, 0x0);
        gbc.writeMem(0x477c, { 0x0 });
        gbc.writeMem(0x8d13, { 0xcb, 0xae });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x78d3, gbc.sp());
        EXPECT(0x8d15, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8d13));
        EXPECT(0xae, gbc.readMem(0x8d14));
        // CB AE 026C
        gbc.setState(0x5b3, 0xc074, 0xac50, 0xeb0, 0xde4e, 0x864d, 0x0, 0x1);
        gbc.writeMem(0x5b3, { 0xcb, 0xae });
        gbc.writeMem(0x864d, { 0xd4 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0xc074, gbc.sp());
        EXPECT(0x5b5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd4, gbc.readMem(0x864d));
        // CB AE 026D
        gbc.setState(0x7944, 0x1302, 0x8ab0, 0x69d, 0xa3d5, 0xf3f7, 0x0, 0x0);
        gbc.writeMem(0x7944, { 0xcb, 0xae });
        gbc.writeMem(0xf3f7, { 0x93 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x1302, gbc.sp());
        EXPECT(0x7946, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x93, gbc.readMem(0xf3f7));
        // CB AE 026E
        gbc.setState(0x44c8, 0x83d7, 0xf9e0, 0x3fba, 0x6d5a, 0x781a, 0x0, 0x0);
        gbc.writeMem(0x44c8, { 0xcb, 0xae });
        gbc.writeMem(0x781a, { 0xd0 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x83d7, gbc.sp());
        EXPECT(0x44ca, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB AE 026F
        gbc.setState(0xa290, 0x355a, 0xd070, 0x1318, 0x59cc, 0xe47c, 0x1, 0x0);
        gbc.writeMem(0xa290, { 0xcb, 0xae });
        gbc.writeMem(0xe47c, { 0x72 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x355a, gbc.sp());
        EXPECT(0xa292, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa290));
        EXPECT(0xae, gbc.readMem(0xa291));
        EXPECT(0x52, gbc.readMem(0xe47c));
        // CB AE 0270
        gbc.setState(0xa6f, 0x7235, 0x36a0, 0x69d7, 0x4216, 0xc2cd, 0x1, 0x0);
        gbc.writeMem(0xa6f, { 0xcb, 0xae });
        gbc.writeMem(0xc2cd, { 0x79 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x7235, gbc.sp());
        EXPECT(0xa71, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x59, gbc.readMem(0xc2cd));
        // CB AE 0271
        gbc.setState(0x95b6, 0x38f0, 0x6d50, 0x1c3f, 0xcb3c, 0x9df, 0x0, 0x1);
        gbc.writeMem(0x9df, { 0x14 });
        gbc.writeMem(0x95b6, { 0xcb, 0xae });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x38f0, gbc.sp());
        EXPECT(0x95b8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x95b6));
        EXPECT(0xae, gbc.readMem(0x95b7));
        // CB AE 0272
        gbc.setState(0x8ad2, 0x7ba3, 0xf260, 0xf876, 0x9942, 0xed84, 0x0, 0x1);
        gbc.writeMem(0x8ad2, { 0xcb, 0xae });
        gbc.writeMem(0xed84, { 0x18 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x7ba3, gbc.sp());
        EXPECT(0x8ad4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8ad2));
        EXPECT(0xae, gbc.readMem(0x8ad3));
        EXPECT(0x18, gbc.readMem(0xed84));
        // CB AE 0273
        gbc.setState(0x4b75, 0xbe82, 0xb040, 0x427d, 0x200c, 0x5d0d, 0x0, 0x1);
        gbc.writeMem(0x4b75, { 0xcb, 0xae });
        gbc.writeMem(0x5d0d, { 0x87 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0xbe82, gbc.sp());
        EXPECT(0x4b77, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB AE 0274
        gbc.setState(0x9553, 0x70b6, 0xe8f0, 0x6339, 0x811f, 0x8ac2, 0x1, 0x0);
        gbc.writeMem(0x8ac2, { 0xfc });
        gbc.writeMem(0x9553, { 0xcb, 0xae });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x70b6, gbc.sp());
        EXPECT(0x9555, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xdc, gbc.readMem(0x8ac2));
        EXPECT(0xcb, gbc.readMem(0x9553));
        EXPECT(0xae, gbc.readMem(0x9554));
        // CB AE 0276
        gbc.setState(0x2231, 0xd12b, 0xdc30, 0x37eb, 0x5133, 0xf3b5, 0x0, 0x0);
        gbc.writeMem(0x2231, { 0xcb, 0xae });
        gbc.writeMem(0xf3b5, { 0x4e });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0xd12b, gbc.sp());
        EXPECT(0x2233, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4e, gbc.readMem(0xf3b5));
        // CB AE 0277
        gbc.setState(0x4579, 0x655b, 0x8d70, 0xf8d1, 0x5cc3, 0x6afe, 0x0, 0x1);
        gbc.writeMem(0x4579, { 0xcb, 0xae });
        gbc.writeMem(0x6afe, { 0x90 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x655b, gbc.sp());
        EXPECT(0x457b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB AE 0278
        gbc.setState(0x7f41, 0xae3b, 0x6e20, 0xb16f, 0x8795, 0xfdc6, 0x0, 0x0);
        gbc.writeMem(0x7f41, { 0xcb, 0xae });
        gbc.writeMem(0xfdc6, { 0x3e });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0xae3b, gbc.sp());
        EXPECT(0x7f43, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1e, gbc.readMem(0xfdc6));
        // CB AE 027A
        gbc.setState(0x989a, 0xdc23, 0xe6e0, 0x4457, 0x3170, 0x38a2, 0x1, 0x0);
        gbc.writeMem(0x38a2, { 0xc6 });
        gbc.writeMem(0x989a, { 0xcb, 0xae });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0xdc23, gbc.sp());
        EXPECT(0x989c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x989a));
        EXPECT(0xae, gbc.readMem(0x989b));
        // CB AE 027B
        gbc.setState(0xbad0, 0xd4d7, 0x3480, 0x3222, 0x3f51, 0x8275, 0x0, 0x0);
        gbc.writeMem(0x8275, { 0x95 });
        gbc.writeMem(0xbad0, { 0xcb, 0xae });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0xd4d7, gbc.sp());
        EXPECT(0xbad2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x95, gbc.readMem(0x8275));
        EXPECT(0xcb, gbc.readMem(0xbad0));
        EXPECT(0xae, gbc.readMem(0xbad1));
        // CB AE 027C
        gbc.setState(0x7066, 0x6a6d, 0xace0, 0xd537, 0xe077, 0xe3a1, 0x0, 0x0);
        gbc.writeMem(0x7066, { 0xcb, 0xae });
        gbc.writeMem(0xe3a1, { 0x3d });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x6a6d, gbc.sp());
        EXPECT(0x7068, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1d, gbc.readMem(0xe3a1));
        // CB AE 027E
        gbc.setState(0xdfd1, 0x7772, 0x100, 0x21d3, 0xbcc1, 0xf744, 0x1, 0x0);
        gbc.writeMem(0xdfd1, { 0xcb, 0xae });
        gbc.writeMem(0xf744, { 0xe4 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x7772, gbc.sp());
        EXPECT(0xdfd3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdfd1));
        EXPECT(0xae, gbc.readMem(0xdfd2));
        EXPECT(0xc4, gbc.readMem(0xf744));
        // CB AE 0281
        gbc.setState(0xf53, 0x17c8, 0x3e10, 0x1882, 0xd684, 0x99f5, 0x0, 0x1);
        gbc.writeMem(0xf53, { 0xcb, 0xae });
        gbc.writeMem(0x99f5, { 0xc2 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x17c8, gbc.sp());
        EXPECT(0xf55, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc2, gbc.readMem(0x99f5));
        // CB AE 0283
        gbc.setState(0xc02c, 0x383d, 0x1c60, 0x1138, 0x53e9, 0xee38, 0x0, 0x1);
        gbc.writeMem(0xc02c, { 0xcb, 0xae });
        gbc.writeMem(0xee38, { 0xc4 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x383d, gbc.sp());
        EXPECT(0xc02e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc02c));
        EXPECT(0xae, gbc.readMem(0xc02d));
        EXPECT(0xc4, gbc.readMem(0xee38));
        // CB AE 0284
        gbc.setState(0xd604, 0xec47, 0xdc00, 0xb937, 0x497d, 0xb49c, 0x0, 0x0);
        gbc.writeMem(0xb49c, { 0xad });
        gbc.writeMem(0xd604, { 0xcb, 0xae });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0xec47, gbc.sp());
        EXPECT(0xd606, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8d, gbc.readMem(0xb49c));
        EXPECT(0xcb, gbc.readMem(0xd604));
        EXPECT(0xae, gbc.readMem(0xd605));
        // CB AE 0285
        gbc.setState(0x58f8, 0x5d2a, 0x70, 0x75f6, 0xc05c, 0x3ab7, 0x0, 0x0);
        gbc.writeMem(0x3ab7, { 0x4a });
        gbc.writeMem(0x58f8, { 0xcb, 0xae });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x5d2a, gbc.sp());
        EXPECT(0x58fa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB AE 0286
        gbc.setState(0x539e, 0x29c6, 0xad30, 0x8c4b, 0xf70c, 0xcd2e, 0x0, 0x1);
        gbc.writeMem(0x539e, { 0xcb, 0xae });
        gbc.writeMem(0xcd2e, { 0x4d });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x29c6, gbc.sp());
        EXPECT(0x53a0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4d, gbc.readMem(0xcd2e));
        // CB AE 0287
        gbc.setState(0xa30b, 0xa05a, 0xd330, 0x7d09, 0xcf6b, 0x8f9a, 0x0, 0x0);
        gbc.writeMem(0x8f9a, { 0x6e });
        gbc.writeMem(0xa30b, { 0xcb, 0xae });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0xa05a, gbc.sp());
        EXPECT(0xa30d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4e, gbc.readMem(0x8f9a));
        EXPECT(0xcb, gbc.readMem(0xa30b));
        EXPECT(0xae, gbc.readMem(0xa30c));
        // CB AE 0289
        gbc.setState(0xb196, 0xee49, 0xe0f0, 0xbc71, 0x8825, 0x870d, 0x1, 0x0);
        gbc.writeMem(0x870d, { 0x63 });
        gbc.writeMem(0xb196, { 0xcb, 0xae });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0xee49, gbc.sp());
        EXPECT(0xb198, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x43, gbc.readMem(0x870d));
        EXPECT(0xcb, gbc.readMem(0xb196));
        EXPECT(0xae, gbc.readMem(0xb197));
        // CB AE 028A
        gbc.setState(0xd733, 0x9d5e, 0x4550, 0xee89, 0x463d, 0x6db2, 0x0, 0x1);
        gbc.writeMem(0x6db2, { 0x2 });
        gbc.writeMem(0xd733, { 0xcb, 0xae });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x9d5e, gbc.sp());
        EXPECT(0xd735, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd733));
        EXPECT(0xae, gbc.readMem(0xd734));
        // CB AE 028B
        gbc.setState(0x6333, 0x9507, 0x220, 0x66af, 0x669f, 0xcc92, 0x1, 0x1);
        gbc.writeMem(0x6333, { 0xcb, 0xae });
        gbc.writeMem(0xcc92, { 0xca });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x9507, gbc.sp());
        EXPECT(0x6335, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xca, gbc.readMem(0xcc92));
        // CB AE 028D
        gbc.setState(0xc138, 0x3f84, 0x6f00, 0xa07, 0x5f8c, 0x48c4, 0x1, 0x1);
        gbc.writeMem(0x48c4, { 0x59 });
        gbc.writeMem(0xc138, { 0xcb, 0xae });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x3f84, gbc.sp());
        EXPECT(0xc13a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc138));
        EXPECT(0xae, gbc.readMem(0xc139));
        // CB AE 028F
        gbc.setState(0xd0ac, 0xd73a, 0x4d50, 0xf772, 0x119e, 0x6931, 0x0, 0x1);
        gbc.writeMem(0x6931, { 0x40 });
        gbc.writeMem(0xd0ac, { 0xcb, 0xae });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0xd73a, gbc.sp());
        EXPECT(0xd0ae, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd0ac));
        EXPECT(0xae, gbc.readMem(0xd0ad));
        // CB AE 0290
        gbc.setState(0xb85, 0x73d2, 0xce20, 0x6caf, 0x3e52, 0xb9e1, 0x1, 0x0);
        gbc.writeMem(0xb85, { 0xcb, 0xae });
        gbc.writeMem(0xb9e1, { 0x17 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0x73d2, gbc.sp());
        EXPECT(0xb87, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x17, gbc.readMem(0xb9e1));
        // CB AE 0291
        gbc.setState(0xe40, 0x6d4d, 0x1130, 0xe318, 0x3be7, 0xcf7d, 0x1, 0x1);
        gbc.writeMem(0xe40, { 0xcb, 0xae });
        gbc.writeMem(0xcf7d, { 0x19 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x6d4d, gbc.sp());
        EXPECT(0xe42, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x19, gbc.readMem(0xcf7d));
        // CB AE 0292
        gbc.setState(0x582a, 0xdbc3, 0x650, 0x82dc, 0x1ff2, 0x9606, 0x0, 0x1);
        gbc.writeMem(0x582a, { 0xcb, 0xae });
        gbc.writeMem(0x9606, { 0x84 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0xdbc3, gbc.sp());
        EXPECT(0x582c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x84, gbc.readMem(0x9606));
        // CB AE 0294
        gbc.setState(0x3162, 0x4292, 0xdad0, 0xe814, 0x4ca2, 0xef0f, 0x1, 0x1);
        gbc.writeMem(0x3162, { 0xcb, 0xae });
        gbc.writeMem(0xef0f, { 0xd1 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x4292, gbc.sp());
        EXPECT(0x3164, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd1, gbc.readMem(0xef0f));
        // CB AE 0296
        gbc.setState(0x3e20, 0x63d3, 0xd620, 0x81c8, 0x3d91, 0xf0fc, 0x0, 0x0);
        gbc.writeMem(0x3e20, { 0xcb, 0xae });
        gbc.writeMem(0xf0fc, { 0xf7 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x63d3, gbc.sp());
        EXPECT(0x3e22, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd7, gbc.readMem(0xf0fc));
        // CB AE 0297
        gbc.setState(0x8283, 0x79ee, 0xe740, 0xcf72, 0xeff1, 0x3a92, 0x1, 0x1);
        gbc.writeMem(0x3a92, { 0xcd });
        gbc.writeMem(0x8283, { 0xcb, 0xae });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x79ee, gbc.sp());
        EXPECT(0x8285, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8283));
        EXPECT(0xae, gbc.readMem(0x8284));
        // CB AE 0299
        gbc.setState(0xdd0c, 0x4c99, 0x8020, 0x43ff, 0xe85e, 0xdc62, 0x0, 0x1);
        gbc.writeMem(0xdc62, { 0x6e });
        gbc.writeMem(0xdd0c, { 0xcb, 0xae });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x4c99, gbc.sp());
        EXPECT(0xdd0e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4e, gbc.readMem(0xdc62));
        EXPECT(0xcb, gbc.readMem(0xdd0c));
        EXPECT(0xae, gbc.readMem(0xdd0d));
        // CB AE 029A
        gbc.setState(0xed7b, 0x2f94, 0x2a0, 0xcc9e, 0x3b7b, 0xcd6c, 0x1, 0x0);
        gbc.writeMem(0xcd6c, { 0x1c });
        gbc.writeMem(0xed7b, { 0xcb, 0xae });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x2f94, gbc.sp());
        EXPECT(0xed7d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1c, gbc.readMem(0xcd6c));
        EXPECT(0xcb, gbc.readMem(0xed7b));
        EXPECT(0xae, gbc.readMem(0xed7c));
        // CB AE 029C
        gbc.setState(0xce4a, 0x1e7d, 0xe430, 0x68a6, 0x6b98, 0xe2ca, 0x1, 0x0);
        gbc.writeMem(0xce4a, { 0xcb, 0xae });
        gbc.writeMem(0xe2ca, { 0xc7 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x1e7d, gbc.sp());
        EXPECT(0xce4c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xce4a));
        EXPECT(0xae, gbc.readMem(0xce4b));
        EXPECT(0xc7, gbc.readMem(0xe2ca));
        // CB AE 029E
        gbc.setState(0xe5da, 0xfa5e, 0xc970, 0xa356, 0x2495, 0xcc3a, 0x0, 0x1);
        gbc.writeMem(0xcc3a, { 0x19 });
        gbc.writeMem(0xe5da, { 0xcb, 0xae });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0xfa5e, gbc.sp());
        EXPECT(0xe5dc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x19, gbc.readMem(0xcc3a));
        EXPECT(0xcb, gbc.readMem(0xe5da));
        EXPECT(0xae, gbc.readMem(0xe5db));
        // CB AE 029F
        gbc.setState(0xc335, 0x75b0, 0x230, 0xb15b, 0xb95d, 0xa446, 0x1, 0x0);
        gbc.writeMem(0xa446, { 0x96 });
        gbc.writeMem(0xc335, { 0xcb, 0xae });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x75b0, gbc.sp());
        EXPECT(0xc337, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x96, gbc.readMem(0xa446));
        EXPECT(0xcb, gbc.readMem(0xc335));
        EXPECT(0xae, gbc.readMem(0xc336));
        // CB AE 02A3
        gbc.setState(0x6a9d, 0x838c, 0xab40, 0x925, 0xa2e3, 0x2a8d, 0x1, 0x1);
        gbc.writeMem(0x2a8d, { 0xce });
        gbc.writeMem(0x6a9d, { 0xcb, 0xae });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x838c, gbc.sp());
        EXPECT(0x6a9f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB AE 02A5
        gbc.setState(0xdeff, 0x8941, 0xbf0, 0x40c1, 0x43d6, 0x94be, 0x1, 0x0);
        gbc.writeMem(0x94be, { 0x53 });
        gbc.writeMem(0xdeff, { 0xcb, 0xae });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0x8941, gbc.sp());
        EXPECT(0xdf01, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x53, gbc.readMem(0x94be));
        EXPECT(0xcb, gbc.readMem(0xdeff));
        EXPECT(0xae, gbc.readMem(0xdf00));
        // CB AE 02A6
        gbc.setState(0x41c6, 0xa4ef, 0x70a0, 0x1bbf, 0x455, 0x8baf, 0x0, 0x0);
        gbc.writeMem(0x41c6, { 0xcb, 0xae });
        gbc.writeMem(0x8baf, { 0xaa });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0xa4ef, gbc.sp());
        EXPECT(0x41c8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8a, gbc.readMem(0x8baf));
        // CB AE 02A8
        gbc.setState(0x276e, 0x6ee7, 0xc230, 0x34bd, 0xdcd, 0x1621, 0x1, 0x1);
        gbc.writeMem(0x1621, { 0x53 });
        gbc.writeMem(0x276e, { 0xcb, 0xae });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x6ee7, gbc.sp());
        EXPECT(0x2770, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB AE 02A9
        gbc.setState(0x5843, 0x5d5f, 0x3820, 0x7aa3, 0xfcd7, 0xdb69, 0x0, 0x1);
        gbc.writeMem(0x5843, { 0xcb, 0xae });
        gbc.writeMem(0xdb69, { 0x44 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0x5d5f, gbc.sp());
        EXPECT(0x5845, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x44, gbc.readMem(0xdb69));
        // CB AE 02AB
        gbc.setState(0x8004, 0x44cd, 0x6f0, 0x2653, 0x282b, 0xbf8c, 0x1, 0x0);
        gbc.writeMem(0x8004, { 0xcb, 0xae });
        gbc.writeMem(0xbf8c, { 0x4c });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x44cd, gbc.sp());
        EXPECT(0x8006, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8004));
        EXPECT(0xae, gbc.readMem(0x8005));
        EXPECT(0x4c, gbc.readMem(0xbf8c));
        // CB AE 02AC
        gbc.setState(0x9c33, 0x64fe, 0x6ed0, 0x408f, 0x6fd4, 0x9a86, 0x1, 0x1);
        gbc.writeMem(0x9a86, { 0x38 });
        gbc.writeMem(0x9c33, { 0xcb, 0xae });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x64fe, gbc.sp());
        EXPECT(0x9c35, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x18, gbc.readMem(0x9a86));
        EXPECT(0xcb, gbc.readMem(0x9c33));
        EXPECT(0xae, gbc.readMem(0x9c34));
        // CB AE 02AD
        gbc.setState(0x44a5, 0xcb60, 0xf790, 0x8889, 0x22d0, 0x17c0, 0x0, 0x1);
        gbc.writeMem(0x17c0, { 0x1f });
        gbc.writeMem(0x44a5, { 0xcb, 0xae });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0xcb60, gbc.sp());
        EXPECT(0x44a7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB AE 02AE
        gbc.setState(0xad85, 0x6318, 0xc370, 0xa040, 0x4bff, 0xeb3, 0x1, 0x1);
        gbc.writeMem(0xeb3, { 0xc2 });
        gbc.writeMem(0xad85, { 0xcb, 0xae });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x6318, gbc.sp());
        EXPECT(0xad87, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xad85));
        EXPECT(0xae, gbc.readMem(0xad86));
        // CB AE 02B1
        gbc.setState(0xa3ba, 0x6ec3, 0x4c40, 0xd203, 0xa40b, 0xe506, 0x0, 0x0);
        gbc.writeMem(0xa3ba, { 0xcb, 0xae });
        gbc.writeMem(0xe506, { 0xb5 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x6ec3, gbc.sp());
        EXPECT(0xa3bc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa3ba));
        EXPECT(0xae, gbc.readMem(0xa3bb));
        EXPECT(0x95, gbc.readMem(0xe506));
        // CB AE 02B6
        gbc.setState(0xb6d0, 0x71b3, 0x2440, 0x37f1, 0x57b, 0xa92f, 0x0, 0x1);
        gbc.writeMem(0xa92f, { 0x99 });
        gbc.writeMem(0xb6d0, { 0xcb, 0xae });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x71b3, gbc.sp());
        EXPECT(0xb6d2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x99, gbc.readMem(0xa92f));
        EXPECT(0xcb, gbc.readMem(0xb6d0));
        EXPECT(0xae, gbc.readMem(0xb6d1));
        // CB AE 02B8
        gbc.setState(0x758f, 0x614b, 0x70, 0xb06b, 0xff28, 0xad02, 0x0, 0x0);
        gbc.writeMem(0x758f, { 0xcb, 0xae });
        gbc.writeMem(0xad02, { 0x4f });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x614b, gbc.sp());
        EXPECT(0x7591, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4f, gbc.readMem(0xad02));
        // CB AE 02B9
        gbc.setState(0xa4ee, 0x8045, 0xd300, 0xb4cf, 0xeb4, 0xfb89, 0x1, 0x0);
        gbc.writeMem(0xa4ee, { 0xcb, 0xae });
        gbc.writeMem(0xfb89, { 0x7d });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x8045, gbc.sp());
        EXPECT(0xa4f0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa4ee));
        EXPECT(0xae, gbc.readMem(0xa4ef));
        EXPECT(0x5d, gbc.readMem(0xfb89));
        // CB AE 02BA
        gbc.setState(0x300e, 0xa489, 0xacf0, 0x49ab, 0xd08, 0x93ad, 0x1, 0x1);
        gbc.writeMem(0x300e, { 0xcb, 0xae });
        gbc.writeMem(0x93ad, { 0x28 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0xa489, gbc.sp());
        EXPECT(0x3010, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8, gbc.readMem(0x93ad));
        // CB AE 02BC
        gbc.setState(0xe8f9, 0xf94d, 0xe410, 0x1cac, 0x355d, 0xafc6, 0x0, 0x0);
        gbc.writeMem(0xafc6, { 0x46 });
        gbc.writeMem(0xe8f9, { 0xcb, 0xae });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0xf94d, gbc.sp());
        EXPECT(0xe8fb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x46, gbc.readMem(0xafc6));
        EXPECT(0xcb, gbc.readMem(0xe8f9));
        EXPECT(0xae, gbc.readMem(0xe8fa));
        // CB AE 02BD
        gbc.setState(0xebda, 0x61c1, 0x5970, 0x2752, 0x7fd3, 0xaf58, 0x0, 0x1);
        gbc.writeMem(0xaf58, { 0x7e });
        gbc.writeMem(0xebda, { 0xcb, 0xae });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x61c1, gbc.sp());
        EXPECT(0xebdc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5e, gbc.readMem(0xaf58));
        EXPECT(0xcb, gbc.readMem(0xebda));
        EXPECT(0xae, gbc.readMem(0xebdb));
        // CB AE 02C0
        gbc.setState(0x941a, 0x5f23, 0x31d0, 0x623e, 0xf299, 0x294c, 0x1, 0x1);
        gbc.writeMem(0x294c, { 0xc6 });
        gbc.writeMem(0x941a, { 0xcb, 0xae });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x5f23, gbc.sp());
        EXPECT(0x941c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x941a));
        EXPECT(0xae, gbc.readMem(0x941b));
        // CB AE 02C1
        gbc.setState(0x30f4, 0xa701, 0x4fc0, 0xfff7, 0xd312, 0xcab, 0x0, 0x0);
        gbc.writeMem(0xcab, { 0x97 });
        gbc.writeMem(0x30f4, { 0xcb, 0xae });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0xa701, gbc.sp());
        EXPECT(0x30f6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB AE 02C3
        gbc.setState(0xbfc3, 0x762b, 0xf930, 0x3621, 0xd911, 0xc7c9, 0x1, 0x0);
        gbc.writeMem(0xbfc3, { 0xcb, 0xae });
        gbc.writeMem(0xc7c9, { 0x55 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x762b, gbc.sp());
        EXPECT(0xbfc5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbfc3));
        EXPECT(0xae, gbc.readMem(0xbfc4));
        EXPECT(0x55, gbc.readMem(0xc7c9));
        // CB AE 02C4
        gbc.setState(0x7dac, 0xd0da, 0x8be0, 0x6126, 0x3085, 0x828e, 0x0, 0x1);
        gbc.writeMem(0x7dac, { 0xcb, 0xae });
        gbc.writeMem(0x828e, { 0x6a });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0xd0da, gbc.sp());
        EXPECT(0x7dae, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4a, gbc.readMem(0x828e));
        // CB AE 02C6
        gbc.setState(0xe32, 0xb16b, 0xfb30, 0xa0fd, 0x33a7, 0xb059, 0x0, 0x1);
        gbc.writeMem(0xe32, { 0xcb, 0xae });
        gbc.writeMem(0xb059, { 0x5d });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0xb16b, gbc.sp());
        EXPECT(0xe34, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5d, gbc.readMem(0xb059));
        // CB AE 02C7
        gbc.setState(0xa834, 0xa71e, 0xff90, 0x43d9, 0x32b1, 0xfb07, 0x0, 0x1);
        gbc.writeMem(0xa834, { 0xcb, 0xae });
        gbc.writeMem(0xfb07, { 0x7a });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0xa71e, gbc.sp());
        EXPECT(0xa836, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa834));
        EXPECT(0xae, gbc.readMem(0xa835));
        EXPECT(0x5a, gbc.readMem(0xfb07));
        // CB AE 02C8
        gbc.setState(0xa815, 0xec84, 0xd310, 0x6956, 0x7616, 0xb781, 0x0, 0x0);
        gbc.writeMem(0xa815, { 0xcb, 0xae });
        gbc.writeMem(0xb781, { 0xc2 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0xec84, gbc.sp());
        EXPECT(0xa817, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa815));
        EXPECT(0xae, gbc.readMem(0xa816));
        EXPECT(0xc2, gbc.readMem(0xb781));
        // CB AE 02C9
        gbc.setState(0x6b11, 0xd4, 0xa430, 0x6eb9, 0x7a29, 0x4066, 0x1, 0x1);
        gbc.writeMem(0x4066, { 0x1f });
        gbc.writeMem(0x6b11, { 0xcb, 0xae });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0xd4, gbc.sp());
        EXPECT(0x6b13, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB AE 02CB
        gbc.setState(0x1ddd, 0x9423, 0xa0d0, 0xf446, 0x728d, 0xdb40, 0x0, 0x0);
        gbc.writeMem(0x1ddd, { 0xcb, 0xae });
        gbc.writeMem(0xdb40, { 0xd8 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x9423, gbc.sp());
        EXPECT(0x1ddf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd8, gbc.readMem(0xdb40));
        // CB AE 02CC
        gbc.setState(0xbafc, 0xc780, 0x6800, 0x2922, 0xf736, 0x1f39, 0x1, 0x1);
        gbc.writeMem(0x1f39, { 0x96 });
        gbc.writeMem(0xbafc, { 0xcb, 0xae });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0xc780, gbc.sp());
        EXPECT(0xbafe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbafc));
        EXPECT(0xae, gbc.readMem(0xbafd));
        // CB AE 02CD
        gbc.setState(0xbd2, 0xf33f, 0xd4c0, 0xb1fa, 0xca18, 0xce54, 0x0, 0x1);
        gbc.writeMem(0xbd2, { 0xcb, 0xae });
        gbc.writeMem(0xce54, { 0xa9 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0xf33f, gbc.sp());
        EXPECT(0xbd4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x89, gbc.readMem(0xce54));
        // CB AE 02CF
        gbc.setState(0x6d40, 0xd97c, 0x7d0, 0x19b9, 0x9445, 0x985d, 0x0, 0x0);
        gbc.writeMem(0x6d40, { 0xcb, 0xae });
        gbc.writeMem(0x985d, { 0xed });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0xd97c, gbc.sp());
        EXPECT(0x6d42, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcd, gbc.readMem(0x985d));
        // CB AE 02D0
        gbc.setState(0x127f, 0x1042, 0xa030, 0xec42, 0x20c5, 0x831a, 0x1, 0x1);
        gbc.writeMem(0x127f, { 0xcb, 0xae });
        gbc.writeMem(0x831a, { 0x99 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x1042, gbc.sp());
        EXPECT(0x1281, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x99, gbc.readMem(0x831a));
        // CB AE 02D1
        gbc.setState(0xd80f, 0x14c, 0xbaa0, 0x261e, 0x49dd, 0xf17b, 0x1, 0x1);
        gbc.writeMem(0xd80f, { 0xcb, 0xae });
        gbc.writeMem(0xf17b, { 0x2e });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x14c, gbc.sp());
        EXPECT(0xd811, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd80f));
        EXPECT(0xae, gbc.readMem(0xd810));
        EXPECT(0xe, gbc.readMem(0xf17b));
        // CB AE 02D2
        gbc.setState(0x1991, 0xe4c2, 0x13f0, 0xf2c9, 0x4250, 0xdfff, 0x0, 0x1);
        gbc.writeMem(0x1991, { 0xcb, 0xae });
        gbc.writeMem(0xdfff, { 0xe3 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0xe4c2, gbc.sp());
        EXPECT(0x1993, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc3, gbc.readMem(0xdfff));
        // CB AE 02D3
        gbc.setState(0xc09b, 0x4d1, 0x68a0, 0xb12e, 0xae36, 0x820f, 0x1, 0x0);
        gbc.writeMem(0x820f, { 0x5 });
        gbc.writeMem(0xc09b, { 0xcb, 0xae });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x4d1, gbc.sp());
        EXPECT(0xc09d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5, gbc.readMem(0x820f));
        EXPECT(0xcb, gbc.readMem(0xc09b));
        EXPECT(0xae, gbc.readMem(0xc09c));
        // CB AE 02D5
        gbc.setState(0xaadf, 0xfac3, 0xa190, 0x2ee5, 0xbfbf, 0xdbe6, 0x0, 0x1);
        gbc.writeMem(0xaadf, { 0xcb, 0xae });
        gbc.writeMem(0xdbe6, { 0x5f });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0xfac3, gbc.sp());
        EXPECT(0xaae1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaadf));
        EXPECT(0xae, gbc.readMem(0xaae0));
        EXPECT(0x5f, gbc.readMem(0xdbe6));
        // CB AE 02D6
        gbc.setState(0xb0ad, 0xc855, 0x80b0, 0x4172, 0xbcd2, 0xcfc9, 0x0, 0x1);
        gbc.writeMem(0xb0ad, { 0xcb, 0xae });
        gbc.writeMem(0xcfc9, { 0xdf });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0xc855, gbc.sp());
        EXPECT(0xb0af, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb0ad));
        EXPECT(0xae, gbc.readMem(0xb0ae));
        EXPECT(0xdf, gbc.readMem(0xcfc9));
        // CB AE 02D7
        gbc.setState(0x461f, 0x8397, 0xebd0, 0x427a, 0x60a7, 0x62f0, 0x1, 0x0);
        gbc.writeMem(0x461f, { 0xcb, 0xae });
        gbc.writeMem(0x62f0, { 0x10 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x8397, gbc.sp());
        EXPECT(0x4621, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB AE 02D8
        gbc.setState(0xd195, 0xb2c5, 0x6330, 0xa39c, 0x967e, 0xedd8, 0x1, 0x1);
        gbc.writeMem(0xd195, { 0xcb, 0xae });
        gbc.writeMem(0xedd8, { 0x7c });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0xb2c5, gbc.sp());
        EXPECT(0xd197, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd195));
        EXPECT(0xae, gbc.readMem(0xd196));
        EXPECT(0x5c, gbc.readMem(0xedd8));
        // CB AE 02D9
        gbc.setState(0xa92, 0x93cf, 0x34a0, 0x7423, 0xb436, 0x2226, 0x0, 0x1);
        gbc.writeMem(0xa92, { 0xcb, 0xae });
        gbc.writeMem(0x2226, { 0x48 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x93cf, gbc.sp());
        EXPECT(0xa94, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB AE 02DA
        gbc.setState(0x85a4, 0xe503, 0x7330, 0x78c3, 0xee43, 0x5d04, 0x0, 0x0);
        gbc.writeMem(0x5d04, { 0x5 });
        gbc.writeMem(0x85a4, { 0xcb, 0xae });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0xe503, gbc.sp());
        EXPECT(0x85a6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x85a4));
        EXPECT(0xae, gbc.readMem(0x85a5));
        // CB AE 02DB
        gbc.setState(0xe7bc, 0xc2ad, 0xdd00, 0x100f, 0x3734, 0x8729, 0x0, 0x0);
        gbc.writeMem(0x8729, { 0x45 });
        gbc.writeMem(0xe7bc, { 0xcb, 0xae });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0xc2ad, gbc.sp());
        EXPECT(0xe7be, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x45, gbc.readMem(0x8729));
        EXPECT(0xcb, gbc.readMem(0xe7bc));
        EXPECT(0xae, gbc.readMem(0xe7bd));
        // CB AE 02DC
        gbc.setState(0xc0d8, 0x7297, 0x5500, 0x772a, 0xc3d3, 0xb49f, 0x0, 0x1);
        gbc.writeMem(0xb49f, { 0x41 });
        gbc.writeMem(0xc0d8, { 0xcb, 0xae });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x7297, gbc.sp());
        EXPECT(0xc0da, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x41, gbc.readMem(0xb49f));
        EXPECT(0xcb, gbc.readMem(0xc0d8));
        EXPECT(0xae, gbc.readMem(0xc0d9));
        // CB AE 02DE
        gbc.setState(0x28e9, 0xd234, 0xfe90, 0x3779, 0x360f, 0x3dcc, 0x1, 0x1);
        gbc.writeMem(0x28e9, { 0xcb, 0xae });
        gbc.writeMem(0x3dcc, { 0x5e });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0xd234, gbc.sp());
        EXPECT(0x28eb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB AE 02DF
        gbc.setState(0xe468, 0x75bb, 0xcd40, 0x7d24, 0xd159, 0x8a5f, 0x0, 0x0);
        gbc.writeMem(0x8a5f, { 0x32 });
        gbc.writeMem(0xe468, { 0xcb, 0xae });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x75bb, gbc.sp());
        EXPECT(0xe46a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x12, gbc.readMem(0x8a5f));
        EXPECT(0xcb, gbc.readMem(0xe468));
        EXPECT(0xae, gbc.readMem(0xe469));
        // CB AE 02E0
        gbc.setState(0x21ae, 0xaa8a, 0x7a60, 0x8f5f, 0xa93c, 0x8bb1, 0x0, 0x1);
        gbc.writeMem(0x21ae, { 0xcb, 0xae });
        gbc.writeMem(0x8bb1, { 0x5e });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0xaa8a, gbc.sp());
        EXPECT(0x21b0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5e, gbc.readMem(0x8bb1));
        // CB AE 02E1
        gbc.setState(0x8940, 0x6ca8, 0x8960, 0xd139, 0xd05d, 0x6d3e, 0x0, 0x0);
        gbc.writeMem(0x6d3e, { 0xc2 });
        gbc.writeMem(0x8940, { 0xcb, 0xae });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x6ca8, gbc.sp());
        EXPECT(0x8942, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8940));
        EXPECT(0xae, gbc.readMem(0x8941));
        // CB AE 02E2
        gbc.setState(0x4273, 0x4138, 0xc8e0, 0xf030, 0xdf63, 0x3932, 0x0, 0x0);
        gbc.writeMem(0x3932, { 0xe });
        gbc.writeMem(0x4273, { 0xcb, 0xae });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x4138, gbc.sp());
        EXPECT(0x4275, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB AE 02E3
        gbc.setState(0xdc54, 0xc63e, 0x18c0, 0xc71e, 0xec34, 0x9b66, 0x1, 0x0);
        gbc.writeMem(0x9b66, { 0xe1 });
        gbc.writeMem(0xdc54, { 0xcb, 0xae });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0xc63e, gbc.sp());
        EXPECT(0xdc56, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc1, gbc.readMem(0x9b66));
        EXPECT(0xcb, gbc.readMem(0xdc54));
        EXPECT(0xae, gbc.readMem(0xdc55));
        // CB AE 02E4
        gbc.setState(0x14b0, 0x54b3, 0x4ed0, 0x2edc, 0x2c84, 0x1d1f, 0x1, 0x1);
        gbc.writeMem(0x14b0, { 0xcb, 0xae });
        gbc.writeMem(0x1d1f, { 0x6 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x54b3, gbc.sp());
        EXPECT(0x14b2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB AE 02E5
        gbc.setState(0x80, 0x98fd, 0x8d90, 0x6758, 0x80c5, 0x576c, 0x0, 0x0);
        gbc.writeMem(0x80, { 0xcb, 0xae });
        gbc.writeMem(0x576c, { 0xc0 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x98fd, gbc.sp());
        EXPECT(0x82, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB AE 02E6
        gbc.setState(0x8309, 0xec88, 0x80c0, 0x94de, 0x247d, 0x1aa0, 0x1, 0x1);
        gbc.writeMem(0x1aa0, { 0x19 });
        gbc.writeMem(0x8309, { 0xcb, 0xae });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0xec88, gbc.sp());
        EXPECT(0x830b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8309));
        EXPECT(0xae, gbc.readMem(0x830a));
        // CB AE 02E7
        gbc.setState(0x258, 0xd50, 0x1120, 0x3154, 0xd2f4, 0xd5ed, 0x0, 0x0);
        gbc.writeMem(0x258, { 0xcb, 0xae });
        gbc.writeMem(0xd5ed, { 0xbb });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0xd50, gbc.sp());
        EXPECT(0x25a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9b, gbc.readMem(0xd5ed));
        // CB AE 02E8
        gbc.setState(0xe47f, 0xaeb8, 0x8760, 0x5183, 0xd83b, 0x75fd, 0x0, 0x0);
        gbc.writeMem(0x75fd, { 0x4d });
        gbc.writeMem(0xe47f, { 0xcb, 0xae });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0xaeb8, gbc.sp());
        EXPECT(0xe481, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe47f));
        EXPECT(0xae, gbc.readMem(0xe480));
        // CB AE 02E9
        gbc.setState(0x91ac, 0xaff6, 0x3af0, 0xd6e4, 0x2764, 0x6a1c, 0x0, 0x0);
        gbc.writeMem(0x6a1c, { 0xd });
        gbc.writeMem(0x91ac, { 0xcb, 0xae });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0xaff6, gbc.sp());
        EXPECT(0x91ae, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x91ac));
        EXPECT(0xae, gbc.readMem(0x91ad));
        // CB AE 02EA
        gbc.setState(0x7bae, 0xb6dc, 0xf8a0, 0x28a6, 0xcc0d, 0xee16, 0x0, 0x0);
        gbc.writeMem(0x7bae, { 0xcb, 0xae });
        gbc.writeMem(0xee16, { 0xf });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0xb6dc, gbc.sp());
        EXPECT(0x7bb0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf, gbc.readMem(0xee16));
        // CB AE 02EB
        gbc.setState(0x8377, 0x1968, 0xe870, 0xe729, 0xe236, 0x13a8, 0x0, 0x1);
        gbc.writeMem(0x13a8, { 0x96 });
        gbc.writeMem(0x8377, { 0xcb, 0xae });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x1968, gbc.sp());
        EXPECT(0x8379, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8377));
        EXPECT(0xae, gbc.readMem(0x8378));
        // CB AE 02EC
        gbc.setState(0x3874, 0xf22, 0x6e40, 0x2902, 0x4b36, 0xe7ea, 0x1, 0x0);
        gbc.writeMem(0x3874, { 0xcb, 0xae });
        gbc.writeMem(0xe7ea, { 0x6b });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0xf22, gbc.sp());
        EXPECT(0x3876, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4b, gbc.readMem(0xe7ea));
        // CB AE 02ED
        gbc.setState(0xd47b, 0x58a, 0x65a0, 0x3e96, 0x60cb, 0x1a5, 0x0, 0x0);
        gbc.writeMem(0x1a5, { 0x1a });
        gbc.writeMem(0xd47b, { 0xcb, 0xae });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x58a, gbc.sp());
        EXPECT(0xd47d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd47b));
        EXPECT(0xae, gbc.readMem(0xd47c));
        // CB AE 02EF
        gbc.setState(0x3f01, 0x1dcf, 0xa610, 0x8574, 0xd40a, 0xf723, 0x1, 0x1);
        gbc.writeMem(0x3f01, { 0xcb, 0xae });
        gbc.writeMem(0xf723, { 0x4e });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x1dcf, gbc.sp());
        EXPECT(0x3f03, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4e, gbc.readMem(0xf723));
        // CB AE 02F1
        gbc.setState(0x550d, 0xc0ce, 0x7670, 0xaee1, 0xac64, 0xb48, 0x1, 0x0);
        gbc.writeMem(0xb48, { 0x55 });
        gbc.writeMem(0x550d, { 0xcb, 0xae });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0xc0ce, gbc.sp());
        EXPECT(0x550f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB AE 02F2
        gbc.setState(0x1a50, 0xa300, 0x7050, 0x51c7, 0x7795, 0x3702, 0x1, 0x0);
        gbc.writeMem(0x1a50, { 0xcb, 0xae });
        gbc.writeMem(0x3702, { 0x9b });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0xa300, gbc.sp());
        EXPECT(0x1a52, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB AE 02F3
        gbc.setState(0x61b8, 0x31e, 0x7d50, 0x4464, 0x105c, 0xd640, 0x1, 0x0);
        gbc.writeMem(0x61b8, { 0xcb, 0xae });
        gbc.writeMem(0xd640, { 0x25 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x31e, gbc.sp());
        EXPECT(0x61ba, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5, gbc.readMem(0xd640));
        // CB AE 02F4
        gbc.setState(0xacda, 0x7301, 0xd9d0, 0x823b, 0x869d, 0xe5b4, 0x1, 0x1);
        gbc.writeMem(0xacda, { 0xcb, 0xae });
        gbc.writeMem(0xe5b4, { 0x1c });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x7301, gbc.sp());
        EXPECT(0xacdc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xacda));
        EXPECT(0xae, gbc.readMem(0xacdb));
        EXPECT(0x1c, gbc.readMem(0xe5b4));
        // CB AE 02F5
        gbc.setState(0xebe3, 0x183a, 0xf9c0, 0x164f, 0x1678, 0xc1e5, 0x1, 0x1);
        gbc.writeMem(0xc1e5, { 0x79 });
        gbc.writeMem(0xebe3, { 0xcb, 0xae });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x183a, gbc.sp());
        EXPECT(0xebe5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x59, gbc.readMem(0xc1e5));
        EXPECT(0xcb, gbc.readMem(0xebe3));
        EXPECT(0xae, gbc.readMem(0xebe4));
        // CB AE 02F6
        gbc.setState(0x675a, 0xee9f, 0xc430, 0x28e2, 0x1767, 0x5e8, 0x1, 0x1);
        gbc.writeMem(0x5e8, { 0x16 });
        gbc.writeMem(0x675a, { 0xcb, 0xae });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0xee9f, gbc.sp());
        EXPECT(0x675c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB AE 02F8
        gbc.setState(0x94c, 0x5dfd, 0xf700, 0x18f9, 0xa1f, 0xf8c8, 0x0, 0x1);
        gbc.writeMem(0x94c, { 0xcb, 0xae });
        gbc.writeMem(0xf8c8, { 0xcb });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x5dfd, gbc.sp());
        EXPECT(0x94e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xf8c8));
        // CB AE 02F9
        gbc.setState(0x8bd, 0x4460, 0xfac0, 0x2800, 0x9aa3, 0xa0ab, 0x0, 0x1);
        gbc.writeMem(0x8bd, { 0xcb, 0xae });
        gbc.writeMem(0xa0ab, { 0xc2 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x4460, gbc.sp());
        EXPECT(0x8bf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc2, gbc.readMem(0xa0ab));
        // CB AE 02FA
        gbc.setState(0xc6ef, 0x850d, 0x18a0, 0xb714, 0xbf31, 0xb94c, 0x1, 0x0);
        gbc.writeMem(0xb94c, { 0xcc });
        gbc.writeMem(0xc6ef, { 0xcb, 0xae });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x850d, gbc.sp());
        EXPECT(0xc6f1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcc, gbc.readMem(0xb94c));
        EXPECT(0xcb, gbc.readMem(0xc6ef));
        EXPECT(0xae, gbc.readMem(0xc6f0));
        // CB AE 02FB
        gbc.setState(0x4818, 0xe6fa, 0xde70, 0xd2de, 0xa21c, 0x426c, 0x0, 0x0);
        gbc.writeMem(0x426c, { 0x17 });
        gbc.writeMem(0x4818, { 0xcb, 0xae });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0xe6fa, gbc.sp());
        EXPECT(0x481a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB AE 02FC
        gbc.setState(0xb109, 0xe714, 0xf7f0, 0xa8b9, 0xe2e9, 0xd37a, 0x0, 0x0);
        gbc.writeMem(0xb109, { 0xcb, 0xae });
        gbc.writeMem(0xd37a, { 0x81 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0xe714, gbc.sp());
        EXPECT(0xb10b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb109));
        EXPECT(0xae, gbc.readMem(0xb10a));
        EXPECT(0x81, gbc.readMem(0xd37a));
        // CB AE 02FD
        gbc.setState(0xbd4f, 0xc715, 0x79c0, 0x5664, 0xe250, 0x4dfc, 0x1, 0x0);
        gbc.writeMem(0x4dfc, { 0x43 });
        gbc.writeMem(0xbd4f, { 0xcb, 0xae });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0xc715, gbc.sp());
        EXPECT(0xbd51, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbd4f));
        EXPECT(0xae, gbc.readMem(0xbd50));
        // CB AE 02FE
        gbc.setState(0xe2d6, 0x1daf, 0x3a70, 0xf393, 0x605f, 0x7179, 0x0, 0x0);
        gbc.writeMem(0x7179, { 0xd5 });
        gbc.writeMem(0xe2d6, { 0xcb, 0xae });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x1daf, gbc.sp());
        EXPECT(0xe2d8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe2d6));
        EXPECT(0xae, gbc.readMem(0xe2d7));
        // CB AE 02FF
        gbc.setState(0x361f, 0xa814, 0xc620, 0xcf18, 0xa6c6, 0x2dcd, 0x1, 0x1);
        gbc.writeMem(0x2dcd, { 0xd4 });
        gbc.writeMem(0x361f, { 0xcb, 0xae });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0xa814, gbc.sp());
        EXPECT(0x3621, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB AE 0302
        gbc.setState(0x3f03, 0x5b54, 0x3cb0, 0x9b29, 0x56a, 0xeb7a, 0x1, 0x0);
        gbc.writeMem(0x3f03, { 0xcb, 0xae });
        gbc.writeMem(0xeb7a, { 0x7 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x5b54, gbc.sp());
        EXPECT(0x3f05, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7, gbc.readMem(0xeb7a));
        // CB AE 0303
        gbc.setState(0xe202, 0xcd0b, 0xbc0, 0xbc7, 0xe92b, 0xffe1, 0x1, 0x0);
        gbc.writeMem(0xe202, { 0xcb, 0xae });
        gbc.writeMem(0xffe1, { 0x88 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0xcd0b, gbc.sp());
        EXPECT(0xe204, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe202));
        EXPECT(0xae, gbc.readMem(0xe203));
        EXPECT(0x88, gbc.readMem(0xffe1));
        // CB AE 0304
        gbc.setState(0x59ae, 0x5ba5, 0x5a10, 0x5f1, 0x1907, 0x967f, 0x0, 0x1);
        gbc.writeMem(0x59ae, { 0xcb, 0xae });
        gbc.writeMem(0x967f, { 0x27 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x5ba5, gbc.sp());
        EXPECT(0x59b0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7, gbc.readMem(0x967f));
        // CB AE 0307
        gbc.setState(0xe946, 0x7629, 0x2970, 0xad3b, 0xfbf1, 0x5b73, 0x1, 0x0);
        gbc.writeMem(0x5b73, { 0xd4 });
        gbc.writeMem(0xe946, { 0xcb, 0xae });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x7629, gbc.sp());
        EXPECT(0xe948, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe946));
        EXPECT(0xae, gbc.readMem(0xe947));
        // CB AE 0308
        gbc.setState(0x82eb, 0x347f, 0x4ff0, 0x6a1a, 0x4a4f, 0x46d4, 0x0, 0x1);
        gbc.writeMem(0x46d4, { 0x83 });
        gbc.writeMem(0x82eb, { 0xcb, 0xae });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x347f, gbc.sp());
        EXPECT(0x82ed, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x82eb));
        EXPECT(0xae, gbc.readMem(0x82ec));
        // CB AE 0309
        gbc.setState(0xdf89, 0x2031, 0x3b80, 0xe174, 0x7330, 0x86d0, 0x0, 0x1);
        gbc.writeMem(0x86d0, { 0x1e });
        gbc.writeMem(0xdf89, { 0xcb, 0xae });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x2031, gbc.sp());
        EXPECT(0xdf8b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1e, gbc.readMem(0x86d0));
        EXPECT(0xcb, gbc.readMem(0xdf89));
        EXPECT(0xae, gbc.readMem(0xdf8a));
        // CB AE 030A
        gbc.setState(0x7805, 0x37a6, 0x9f10, 0xe285, 0xb078, 0xec52, 0x0, 0x0);
        gbc.writeMem(0x7805, { 0xcb, 0xae });
        gbc.writeMem(0xec52, { 0x7a });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x37a6, gbc.sp());
        EXPECT(0x7807, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5a, gbc.readMem(0xec52));
        // CB AE 030B
        gbc.setState(0x3059, 0xdcbc, 0x8c30, 0x3e95, 0xe95, 0xaf4e, 0x1, 0x1);
        gbc.writeMem(0x3059, { 0xcb, 0xae });
        gbc.writeMem(0xaf4e, { 0x16 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0xdcbc, gbc.sp());
        EXPECT(0x305b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x16, gbc.readMem(0xaf4e));
        // CB AE 030C
        gbc.setState(0x1efb, 0xd019, 0x1840, 0xe70b, 0x31f9, 0x39d8, 0x1, 0x0);
        gbc.writeMem(0x1efb, { 0xcb, 0xae });
        gbc.writeMem(0x39d8, { 0xb });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0xd019, gbc.sp());
        EXPECT(0x1efd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB AE 030D
        gbc.setState(0xc695, 0x71d0, 0xe2b0, 0x7d6, 0x7fb2, 0x6ce9, 0x1, 0x0);
        gbc.writeMem(0x6ce9, { 0x40 });
        gbc.writeMem(0xc695, { 0xcb, 0xae });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x71d0, gbc.sp());
        EXPECT(0xc697, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc695));
        EXPECT(0xae, gbc.readMem(0xc696));
        // CB AE 030E
        gbc.setState(0xcb0d, 0x1633, 0xbb70, 0x2f59, 0xc10b, 0x5b44, 0x0, 0x1);
        gbc.writeMem(0x5b44, { 0x14 });
        gbc.writeMem(0xcb0d, { 0xcb, 0xae });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x1633, gbc.sp());
        EXPECT(0xcb0f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcb0d));
        EXPECT(0xae, gbc.readMem(0xcb0e));
        // CB AE 030F
        gbc.setState(0x69e1, 0x86b7, 0xcdb0, 0xed8a, 0xc8b3, 0x68da, 0x1, 0x0);
        gbc.writeMem(0x68da, { 0xd4 });
        gbc.writeMem(0x69e1, { 0xcb, 0xae });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x86b7, gbc.sp());
        EXPECT(0x69e3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB AE 0310
        gbc.setState(0x1c2b, 0x1951, 0xeda0, 0xa7d5, 0xc70c, 0xba9c, 0x1, 0x0);
        gbc.writeMem(0x1c2b, { 0xcb, 0xae });
        gbc.writeMem(0xba9c, { 0xec });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x1951, gbc.sp());
        EXPECT(0x1c2d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcc, gbc.readMem(0xba9c));
        // CB AE 0311
        gbc.setState(0x1862, 0x3bea, 0xa250, 0x1aae, 0xcd01, 0xab6e, 0x0, 0x1);
        gbc.writeMem(0x1862, { 0xcb, 0xae });
        gbc.writeMem(0xab6e, { 0xff });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x3bea, gbc.sp());
        EXPECT(0x1864, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xdf, gbc.readMem(0xab6e));
        // CB AE 0312
        gbc.setState(0x2a89, 0x485f, 0xdc30, 0x481b, 0xe567, 0xb019, 0x1, 0x1);
        gbc.writeMem(0x2a89, { 0xcb, 0xae });
        gbc.writeMem(0xb019, { 0xee });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x485f, gbc.sp());
        EXPECT(0x2a8b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xce, gbc.readMem(0xb019));
        // CB AE 0314
        gbc.setState(0x4cf5, 0xdd5b, 0x3480, 0x5877, 0x655f, 0x84ed, 0x0, 0x1);
        gbc.writeMem(0x4cf5, { 0xcb, 0xae });
        gbc.writeMem(0x84ed, { 0x1a });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0xdd5b, gbc.sp());
        EXPECT(0x4cf7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1a, gbc.readMem(0x84ed));
        // CB AE 0315
        gbc.setState(0x336a, 0x4aa2, 0x7a0, 0xec39, 0x84ec, 0x11f2, 0x0, 0x0);
        gbc.writeMem(0x11f2, { 0x8a });
        gbc.writeMem(0x336a, { 0xcb, 0xae });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x4aa2, gbc.sp());
        EXPECT(0x336c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB AE 0316
        gbc.setState(0x3f07, 0x6171, 0x98a0, 0xeda9, 0xe9bc, 0x4f01, 0x0, 0x0);
        gbc.writeMem(0x3f07, { 0xcb, 0xae });
        gbc.writeMem(0x4f01, { 0xc1 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x6171, gbc.sp());
        EXPECT(0x3f09, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB AE 0317
        gbc.setState(0x5d5e, 0x2a4b, 0x9c50, 0x28c0, 0xd419, 0x395c, 0x1, 0x0);
        gbc.writeMem(0x395c, { 0x9c });
        gbc.writeMem(0x5d5e, { 0xcb, 0xae });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x2a4b, gbc.sp());
        EXPECT(0x5d60, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB AE 0318
        gbc.setState(0xb30d, 0xaf03, 0x6460, 0xbcee, 0x7de1, 0xc0d8, 0x0, 0x1);
        gbc.writeMem(0xb30d, { 0xcb, 0xae });
        gbc.writeMem(0xc0d8, { 0x38 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0xaf03, gbc.sp());
        EXPECT(0xb30f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb30d));
        EXPECT(0xae, gbc.readMem(0xb30e));
        EXPECT(0x18, gbc.readMem(0xc0d8));
        // CB AE 0319
        gbc.setState(0xe57b, 0x81e8, 0xed00, 0x89c7, 0x170, 0x5a1f, 0x1, 0x1);
        gbc.writeMem(0x5a1f, { 0x8b });
        gbc.writeMem(0xe57b, { 0xcb, 0xae });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x81e8, gbc.sp());
        EXPECT(0xe57d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe57b));
        EXPECT(0xae, gbc.readMem(0xe57c));
        // CB AE 031A
        gbc.setState(0xda37, 0xc386, 0xe990, 0x8d61, 0x538, 0xc017, 0x0, 0x1);
        gbc.writeMem(0xc017, { 0xda });
        gbc.writeMem(0xda37, { 0xcb, 0xae });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0xc386, gbc.sp());
        EXPECT(0xda39, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xda, gbc.readMem(0xc017));
        EXPECT(0xcb, gbc.readMem(0xda37));
        EXPECT(0xae, gbc.readMem(0xda38));
        // CB AE 031B
        gbc.setState(0x583e, 0x84b1, 0xed20, 0x6cc8, 0x534d, 0x402f, 0x0, 0x1);
        gbc.writeMem(0x402f, { 0x55 });
        gbc.writeMem(0x583e, { 0xcb, 0xae });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x84b1, gbc.sp());
        EXPECT(0x5840, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB AE 031C
        gbc.setState(0xeb22, 0xee7d, 0xa040, 0x3cd4, 0x1966, 0x67c, 0x0, 0x1);
        gbc.writeMem(0x67c, { 0x9b });
        gbc.writeMem(0xeb22, { 0xcb, 0xae });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0xee7d, gbc.sp());
        EXPECT(0xeb24, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeb22));
        EXPECT(0xae, gbc.readMem(0xeb23));
        // CB AE 031D
        gbc.setState(0x5a5d, 0xb52e, 0x8860, 0x4d64, 0xcaf4, 0xa1d4, 0x1, 0x0);
        gbc.writeMem(0x5a5d, { 0xcb, 0xae });
        gbc.writeMem(0xa1d4, { 0x6e });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0xb52e, gbc.sp());
        EXPECT(0x5a5f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4e, gbc.readMem(0xa1d4));
        // CB AE 031E
        gbc.setState(0x69fe, 0x9bde, 0xb010, 0xd995, 0xe14b, 0xfd4c, 0x1, 0x1);
        gbc.writeMem(0x69fe, { 0xcb, 0xae });
        gbc.writeMem(0xfd4c, { 0xc9 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x9bde, gbc.sp());
        EXPECT(0x6a00, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc9, gbc.readMem(0xfd4c));
        // CB AE 031F
        gbc.setState(0x8929, 0x3174, 0x6b70, 0xe329, 0x85fe, 0xd930, 0x0, 0x1);
        gbc.writeMem(0x8929, { 0xcb, 0xae });
        gbc.writeMem(0xd930, { 0x48 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x3174, gbc.sp());
        EXPECT(0x892b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8929));
        EXPECT(0xae, gbc.readMem(0x892a));
        EXPECT(0x48, gbc.readMem(0xd930));
        // CB AE 0322
        gbc.setState(0xb7a9, 0xd60c, 0x7da0, 0x5a56, 0xcdbe, 0xfec4, 0x1, 0x1);
        gbc.writeMem(0xb7a9, { 0xcb, 0xae });
        gbc.writeMem(0xfec4, { 0xe9 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0xd60c, gbc.sp());
        EXPECT(0xb7ab, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb7a9));
        EXPECT(0xae, gbc.readMem(0xb7aa));
        EXPECT(0xc9, gbc.readMem(0xfec4));
        // CB AE 0323
        gbc.setState(0xd6dc, 0xb8ba, 0xcd40, 0x41e4, 0xf013, 0x703d, 0x1, 0x1);
        gbc.writeMem(0x703d, { 0x94 });
        gbc.writeMem(0xd6dc, { 0xcb, 0xae });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0xb8ba, gbc.sp());
        EXPECT(0xd6de, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd6dc));
        EXPECT(0xae, gbc.readMem(0xd6dd));
        // CB AE 0324
        gbc.setState(0x1353, 0x7576, 0xaab0, 0x200d, 0x807e, 0xc82e, 0x1, 0x1);
        gbc.writeMem(0x1353, { 0xcb, 0xae });
        gbc.writeMem(0xc82e, { 0xbe });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x7576, gbc.sp());
        EXPECT(0x1355, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9e, gbc.readMem(0xc82e));
        // CB AE 0326
        gbc.setState(0x4282, 0xe901, 0xc2d0, 0x2e08, 0x55e3, 0x3269, 0x0, 0x0);
        gbc.writeMem(0x3269, { 0x8e });
        gbc.writeMem(0x4282, { 0xcb, 0xae });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0xe901, gbc.sp());
        EXPECT(0x4284, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB AE 0327
        gbc.setState(0x130d, 0xf394, 0x58e0, 0xb31e, 0x4b1c, 0xf284, 0x0, 0x1);
        gbc.writeMem(0x130d, { 0xcb, 0xae });
        gbc.writeMem(0xf284, { 0xa0 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0xf394, gbc.sp());
        EXPECT(0x130f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x80, gbc.readMem(0xf284));
        // CB AE 0328
        gbc.setState(0x3fc5, 0xb25e, 0x22f0, 0xf8b5, 0x22e7, 0x80c7, 0x1, 0x0);
        gbc.writeMem(0x3fc5, { 0xcb, 0xae });
        gbc.writeMem(0x80c7, { 0x14 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0xb25e, gbc.sp());
        EXPECT(0x3fc7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x14, gbc.readMem(0x80c7));
        // CB AE 0329
        gbc.setState(0xbe95, 0xa411, 0x1af0, 0x4ca3, 0x7493, 0x4078, 0x0, 0x0);
        gbc.writeMem(0x4078, { 0xf });
        gbc.writeMem(0xbe95, { 0xcb, 0xae });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0xa411, gbc.sp());
        EXPECT(0xbe97, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbe95));
        EXPECT(0xae, gbc.readMem(0xbe96));
        // CB AE 032A
        gbc.setState(0x86fd, 0xf78b, 0x3e00, 0x7e8e, 0xc919, 0x98ba, 0x0, 0x0);
        gbc.writeMem(0x86fd, { 0xcb, 0xae });
        gbc.writeMem(0x98ba, { 0x28 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0xf78b, gbc.sp());
        EXPECT(0x86ff, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x86fd));
        EXPECT(0xae, gbc.readMem(0x86fe));
        EXPECT(0x8, gbc.readMem(0x98ba));
        // CB AE 032B
        gbc.setState(0x3dce, 0x5b83, 0x91d0, 0x5013, 0x2a4b, 0xd517, 0x0, 0x1);
        gbc.writeMem(0x3dce, { 0xcb, 0xae });
        gbc.writeMem(0xd517, { 0xc3 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x5b83, gbc.sp());
        EXPECT(0x3dd0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc3, gbc.readMem(0xd517));
        // CB AE 032C
        gbc.setState(0x5f72, 0x7505, 0x4550, 0xfa92, 0xb7d8, 0x967c, 0x1, 0x0);
        gbc.writeMem(0x5f72, { 0xcb, 0xae });
        gbc.writeMem(0x967c, { 0x5c });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x7505, gbc.sp());
        EXPECT(0x5f74, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5c, gbc.readMem(0x967c));
        // CB AE 032D
        gbc.setState(0x6034, 0x829a, 0x6e10, 0xa4e8, 0x7369, 0x96d1, 0x0, 0x1);
        gbc.writeMem(0x6034, { 0xcb, 0xae });
        gbc.writeMem(0x96d1, { 0x4a });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x829a, gbc.sp());
        EXPECT(0x6036, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4a, gbc.readMem(0x96d1));
        // CB AE 032E
        gbc.setState(0xdf4f, 0x4856, 0x36a0, 0xa736, 0xaba9, 0x7507, 0x1, 0x1);
        gbc.writeMem(0x7507, { 0x53 });
        gbc.writeMem(0xdf4f, { 0xcb, 0xae });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x4856, gbc.sp());
        EXPECT(0xdf51, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdf4f));
        EXPECT(0xae, gbc.readMem(0xdf50));
        // CB AE 0330
        gbc.setState(0x2167, 0xbc90, 0xabb0, 0xd047, 0x496, 0x971e, 0x1, 0x0);
        gbc.writeMem(0x2167, { 0xcb, 0xae });
        gbc.writeMem(0x971e, { 0x28 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0xbc90, gbc.sp());
        EXPECT(0x2169, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8, gbc.readMem(0x971e));
        // CB AE 0331
        gbc.setState(0x830c, 0xc68f, 0xc0f0, 0xa308, 0x539c, 0x8b77, 0x1, 0x1);
        gbc.writeMem(0x830c, { 0xcb, 0xae });
        gbc.writeMem(0x8b77, { 0xd9 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0xc68f, gbc.sp());
        EXPECT(0x830e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x830c));
        EXPECT(0xae, gbc.readMem(0x830d));
        EXPECT(0xd9, gbc.readMem(0x8b77));
        // CB AE 0332
        gbc.setState(0x3956, 0xce88, 0x3a50, 0x3c4a, 0x743f, 0xd609, 0x0, 0x0);
        gbc.writeMem(0x3956, { 0xcb, 0xae });
        gbc.writeMem(0xd609, { 0x1d });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0xce88, gbc.sp());
        EXPECT(0x3958, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1d, gbc.readMem(0xd609));
        // CB AE 0334
        gbc.setState(0x296b, 0x6ad6, 0x1360, 0x5b3c, 0x4c1a, 0xf674, 0x0, 0x1);
        gbc.writeMem(0x296b, { 0xcb, 0xae });
        gbc.writeMem(0xf674, { 0x83 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x6ad6, gbc.sp());
        EXPECT(0x296d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x83, gbc.readMem(0xf674));
        // CB AE 0335
        gbc.setState(0xc22d, 0xe70a, 0xe660, 0xc8b9, 0x9f9, 0xe7ff, 0x1, 0x1);
        gbc.writeMem(0xc22d, { 0xcb, 0xae });
        gbc.writeMem(0xe7ff, { 0x7b });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0xe70a, gbc.sp());
        EXPECT(0xc22f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc22d));
        EXPECT(0xae, gbc.readMem(0xc22e));
        EXPECT(0x5b, gbc.readMem(0xe7ff));
        // CB AE 0336
        gbc.setState(0x3b44, 0x53af, 0x95b0, 0x8881, 0xebed, 0xd239, 0x0, 0x1);
        gbc.writeMem(0x3b44, { 0xcb, 0xae });
        gbc.writeMem(0xd239, { 0xd0 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x53af, gbc.sp());
        EXPECT(0x3b46, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd0, gbc.readMem(0xd239));
        // CB AE 0337
        gbc.setState(0xd98b, 0xcfb9, 0x6fe0, 0x39e1, 0x2084, 0x55ae, 0x1, 0x1);
        gbc.writeMem(0x55ae, { 0xc5 });
        gbc.writeMem(0xd98b, { 0xcb, 0xae });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0xcfb9, gbc.sp());
        EXPECT(0xd98d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd98b));
        EXPECT(0xae, gbc.readMem(0xd98c));
        // CB AE 033A
        gbc.setState(0xb4aa, 0x3796, 0x5230, 0x2611, 0xd6ce, 0xb38d, 0x1, 0x0);
        gbc.writeMem(0xb38d, { 0xd2 });
        gbc.writeMem(0xb4aa, { 0xcb, 0xae });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x3796, gbc.sp());
        EXPECT(0xb4ac, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd2, gbc.readMem(0xb38d));
        EXPECT(0xcb, gbc.readMem(0xb4aa));
        EXPECT(0xae, gbc.readMem(0xb4ab));
        // CB AE 033B
        gbc.setState(0x874b, 0x2fac, 0x8b20, 0xf23e, 0x2307, 0xdeef, 0x0, 0x0);
        gbc.writeMem(0x874b, { 0xcb, 0xae });
        gbc.writeMem(0xdeef, { 0xc1 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x2fac, gbc.sp());
        EXPECT(0x874d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x874b));
        EXPECT(0xae, gbc.readMem(0x874c));
        EXPECT(0xc1, gbc.readMem(0xdeef));
        // CB AE 033C
        gbc.setState(0xef38, 0x790e, 0x1720, 0x7619, 0xf5fa, 0x7e3d, 0x1, 0x0);
        gbc.writeMem(0x7e3d, { 0x4 });
        gbc.writeMem(0xef38, { 0xcb, 0xae });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x790e, gbc.sp());
        EXPECT(0xef3a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xef38));
        EXPECT(0xae, gbc.readMem(0xef39));
        // CB AE 033D
        gbc.setState(0x2099, 0xb24c, 0xa470, 0xd39c, 0x1b65, 0xa87e, 0x0, 0x0);
        gbc.writeMem(0x2099, { 0xcb, 0xae });
        gbc.writeMem(0xa87e, { 0x2c });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0xb24c, gbc.sp());
        EXPECT(0x209b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc, gbc.readMem(0xa87e));
        // CB AE 033E
        gbc.setState(0x8d55, 0xc99a, 0xaa80, 0xaff8, 0x472e, 0x7eb, 0x0, 0x0);
        gbc.writeMem(0x7eb, { 0xd1 });
        gbc.writeMem(0x8d55, { 0xcb, 0xae });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0xc99a, gbc.sp());
        EXPECT(0x8d57, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8d55));
        EXPECT(0xae, gbc.readMem(0x8d56));
        // CB AE 033F
        gbc.setState(0xdd54, 0x4593, 0x8100, 0x64aa, 0x5666, 0xe4d6, 0x1, 0x0);
        gbc.writeMem(0xdd54, { 0xcb, 0xae });
        gbc.writeMem(0xe4d6, { 0x40 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x4593, gbc.sp());
        EXPECT(0xdd56, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdd54));
        EXPECT(0xae, gbc.readMem(0xdd55));
        EXPECT(0x40, gbc.readMem(0xe4d6));
        // CB AE 0341
        gbc.setState(0x8c75, 0x19dd, 0x100, 0x2a2e, 0x9039, 0x842f, 0x0, 0x1);
        gbc.writeMem(0x842f, { 0xdc });
        gbc.writeMem(0x8c75, { 0xcb, 0xae });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x19dd, gbc.sp());
        EXPECT(0x8c77, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xdc, gbc.readMem(0x842f));
        EXPECT(0xcb, gbc.readMem(0x8c75));
        EXPECT(0xae, gbc.readMem(0x8c76));
        // CB AE 0342
        gbc.setState(0x1eac, 0xeac0, 0xffa0, 0xba1b, 0xe563, 0xc00f, 0x0, 0x1);
        gbc.writeMem(0x1eac, { 0xcb, 0xae });
        gbc.writeMem(0xc00f, { 0xa6 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0xeac0, gbc.sp());
        EXPECT(0x1eae, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x86, gbc.readMem(0xc00f));
        // CB AE 0343
        gbc.setState(0x141d, 0x5860, 0x4ff0, 0xf17a, 0x1e58, 0xebd4, 0x0, 0x0);
        gbc.writeMem(0x141d, { 0xcb, 0xae });
        gbc.writeMem(0xebd4, { 0x1b });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x5860, gbc.sp());
        EXPECT(0x141f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1b, gbc.readMem(0xebd4));
        // CB AE 0344
        gbc.setState(0xdad8, 0x36cd, 0x2420, 0x2d73, 0x5d47, 0xa1c1, 0x0, 0x0);
        gbc.writeMem(0xa1c1, { 0xf8 });
        gbc.writeMem(0xdad8, { 0xcb, 0xae });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x36cd, gbc.sp());
        EXPECT(0xdada, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd8, gbc.readMem(0xa1c1));
        EXPECT(0xcb, gbc.readMem(0xdad8));
        EXPECT(0xae, gbc.readMem(0xdad9));
        // CB AE 0345
        gbc.setState(0x122b, 0x38, 0xc140, 0x258a, 0xa001, 0xb5cf, 0x1, 0x1);
        gbc.writeMem(0x122b, { 0xcb, 0xae });
        gbc.writeMem(0xb5cf, { 0xc7 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x38, gbc.sp());
        EXPECT(0x122d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc7, gbc.readMem(0xb5cf));
        // CB AE 0346
        gbc.setState(0x9509, 0x7a4a, 0x5790, 0x5023, 0x63bc, 0x8b32, 0x0, 0x1);
        gbc.writeMem(0x8b32, { 0xe1 });
        gbc.writeMem(0x9509, { 0xcb, 0xae });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x7a4a, gbc.sp());
        EXPECT(0x950b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc1, gbc.readMem(0x8b32));
        EXPECT(0xcb, gbc.readMem(0x9509));
        EXPECT(0xae, gbc.readMem(0x950a));
        // CB AE 0347
        gbc.setState(0x4e42, 0xb663, 0x9ea0, 0xd427, 0xd044, 0x430f, 0x1, 0x1);
        gbc.writeMem(0x430f, { 0xca });
        gbc.writeMem(0x4e42, { 0xcb, 0xae });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0xb663, gbc.sp());
        EXPECT(0x4e44, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB AE 0348
        gbc.setState(0x1f91, 0x193b, 0xb8a0, 0xd410, 0x6d40, 0x1a48, 0x1, 0x0);
        gbc.writeMem(0x1a48, { 0xde });
        gbc.writeMem(0x1f91, { 0xcb, 0xae });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0x193b, gbc.sp());
        EXPECT(0x1f93, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB AE 0349
        gbc.setState(0x824, 0x3503, 0x2900, 0xb53f, 0x3085, 0xd82f, 0x0, 0x0);
        gbc.writeMem(0x824, { 0xcb, 0xae });
        gbc.writeMem(0xd82f, { 0xe8 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x3503, gbc.sp());
        EXPECT(0x826, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc8, gbc.readMem(0xd82f));
        // CB AE 034A
        gbc.setState(0x4bca, 0xa396, 0x3e00, 0xebd4, 0xfa2c, 0x69a1, 0x1, 0x1);
        gbc.writeMem(0x4bca, { 0xcb, 0xae });
        gbc.writeMem(0x69a1, { 0x45 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0xa396, gbc.sp());
        EXPECT(0x4bcc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB AE 034B
        gbc.setState(0xb6cb, 0x35c4, 0xca10, 0x231a, 0x8089, 0x32b5, 0x1, 0x0);
        gbc.writeMem(0x32b5, { 0xd8 });
        gbc.writeMem(0xb6cb, { 0xcb, 0xae });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x35c4, gbc.sp());
        EXPECT(0xb6cd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb6cb));
        EXPECT(0xae, gbc.readMem(0xb6cc));
        // CB AE 034C
        gbc.setState(0x5005, 0xacea, 0xc070, 0x73a9, 0xc1bc, 0x48d6, 0x0, 0x0);
        gbc.writeMem(0x48d6, { 0x1e });
        gbc.writeMem(0x5005, { 0xcb, 0xae });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0xacea, gbc.sp());
        EXPECT(0x5007, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB AE 034D
        gbc.setState(0x4d7b, 0xb8d4, 0xac30, 0x12c2, 0xa2c6, 0xb63b, 0x0, 0x1);
        gbc.writeMem(0x4d7b, { 0xcb, 0xae });
        gbc.writeMem(0xb63b, { 0x22 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0xb8d4, gbc.sp());
        EXPECT(0x4d7d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2, gbc.readMem(0xb63b));
        // CB AE 034E
        gbc.setState(0x9968, 0x54f9, 0x6bf0, 0xc352, 0xd76f, 0xf26e, 0x0, 0x1);
        gbc.writeMem(0x9968, { 0xcb, 0xae });
        gbc.writeMem(0xf26e, { 0x17 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x54f9, gbc.sp());
        EXPECT(0x996a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9968));
        EXPECT(0xae, gbc.readMem(0x9969));
        EXPECT(0x17, gbc.readMem(0xf26e));
        // CB AE 034F
        gbc.setState(0xe864, 0x8f0b, 0x3cb0, 0x9ab3, 0xdb3, 0x5b50, 0x1, 0x1);
        gbc.writeMem(0x5b50, { 0x95 });
        gbc.writeMem(0xe864, { 0xcb, 0xae });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x8f0b, gbc.sp());
        EXPECT(0xe866, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe864));
        EXPECT(0xae, gbc.readMem(0xe865));
        // CB AE 0350
        gbc.setState(0x79a9, 0xc388, 0x9a30, 0xab1f, 0xd063, 0x89be, 0x0, 0x0);
        gbc.writeMem(0x79a9, { 0xcb, 0xae });
        gbc.writeMem(0x89be, { 0xa2 });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0xc388, gbc.sp());
        EXPECT(0x79ab, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x82, gbc.readMem(0x89be));
        // CB AE 0351
        gbc.setState(0x3ce2, 0x6194, 0x9ea0, 0x47af, 0x26f7, 0xad3f, 0x1, 0x1);
        gbc.writeMem(0x3ce2, { 0xcb, 0xae });
        gbc.writeMem(0xad3f, { 0x73 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0x6194, gbc.sp());
        EXPECT(0x3ce4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x53, gbc.readMem(0xad3f));
        // CB AE 0353
        gbc.setState(0x5c64, 0x3a3, 0xc2a0, 0xfaa8, 0x1e3c, 0xf1a1, 0x0, 0x0);
        gbc.writeMem(0x5c64, { 0xcb, 0xae });
        gbc.writeMem(0xf1a1, { 0xd });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x3a3, gbc.sp());
        EXPECT(0x5c66, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd, gbc.readMem(0xf1a1));
        // CB AE 0354
        gbc.setState(0x436a, 0x74a0, 0x5540, 0x6334, 0xa4f0, 0x9b54, 0x0, 0x1);
        gbc.writeMem(0x436a, { 0xcb, 0xae });
        gbc.writeMem(0x9b54, { 0x93 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x74a0, gbc.sp());
        EXPECT(0x436c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x93, gbc.readMem(0x9b54));
        // CB AE 0355
        gbc.setState(0x949f, 0x2736, 0x1910, 0x3e8e, 0xd357, 0xb2f0, 0x0, 0x0);
        gbc.writeMem(0x949f, { 0xcb, 0xae });
        gbc.writeMem(0xb2f0, { 0xde });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x2736, gbc.sp());
        EXPECT(0x94a1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x949f));
        EXPECT(0xae, gbc.readMem(0x94a0));
        EXPECT(0xde, gbc.readMem(0xb2f0));
        // CB AE 0357
        gbc.setState(0xdadf, 0xedc1, 0xaeb0, 0x3b91, 0x9f78, 0xbe24, 0x1, 0x1);
        gbc.writeMem(0xbe24, { 0xcf });
        gbc.writeMem(0xdadf, { 0xcb, 0xae });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0xedc1, gbc.sp());
        EXPECT(0xdae1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcf, gbc.readMem(0xbe24));
        EXPECT(0xcb, gbc.readMem(0xdadf));
        EXPECT(0xae, gbc.readMem(0xdae0));
        // CB AE 0358
        gbc.setState(0xee55, 0xd7c9, 0x7790, 0x7f8e, 0x79d3, 0xc180, 0x0, 0x0);
        gbc.writeMem(0xc180, { 0x99 });
        gbc.writeMem(0xee55, { 0xcb, 0xae });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0xd7c9, gbc.sp());
        EXPECT(0xee57, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x99, gbc.readMem(0xc180));
        EXPECT(0xcb, gbc.readMem(0xee55));
        EXPECT(0xae, gbc.readMem(0xee56));
        // CB AE 035A
        gbc.setState(0xe0ec, 0x4611, 0xe8a0, 0x85f2, 0xf304, 0x1763, 0x0, 0x0);
        gbc.writeMem(0x1763, { 0x5 });
        gbc.writeMem(0xe0ec, { 0xcb, 0xae });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x4611, gbc.sp());
        EXPECT(0xe0ee, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe0ec));
        EXPECT(0xae, gbc.readMem(0xe0ed));
        // CB AE 035C
        gbc.setState(0x4293, 0x5ee7, 0x8e30, 0x1220, 0xd3a7, 0xf7a8, 0x0, 0x1);
        gbc.writeMem(0x4293, { 0xcb, 0xae });
        gbc.writeMem(0xf7a8, { 0x3f });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x5ee7, gbc.sp());
        EXPECT(0x4295, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1f, gbc.readMem(0xf7a8));
        // CB AE 035D
        gbc.setState(0xd253, 0xe061, 0x3830, 0xa054, 0x5d08, 0x1c5e, 0x0, 0x1);
        gbc.writeMem(0x1c5e, { 0xde });
        gbc.writeMem(0xd253, { 0xcb, 0xae });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0xe061, gbc.sp());
        EXPECT(0xd255, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd253));
        EXPECT(0xae, gbc.readMem(0xd254));
        // CB AE 035E
        gbc.setState(0xbecf, 0xf369, 0x4b0, 0x155f, 0x831d, 0x86d5, 0x1, 0x1);
        gbc.writeMem(0x86d5, { 0x85 });
        gbc.writeMem(0xbecf, { 0xcb, 0xae });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0xf369, gbc.sp());
        EXPECT(0xbed1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x85, gbc.readMem(0x86d5));
        EXPECT(0xcb, gbc.readMem(0xbecf));
        EXPECT(0xae, gbc.readMem(0xbed0));
        // CB AE 035F
        gbc.setState(0x9d9c, 0x5ff0, 0xa6b0, 0x1ac, 0x8bd3, 0xab00, 0x1, 0x0);
        gbc.writeMem(0x9d9c, { 0xcb, 0xae });
        gbc.writeMem(0xab00, { 0x51 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x5ff0, gbc.sp());
        EXPECT(0x9d9e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9d9c));
        EXPECT(0xae, gbc.readMem(0x9d9d));
        EXPECT(0x51, gbc.readMem(0xab00));
        // CB AE 0360
        gbc.setState(0xd5ec, 0x2830, 0x76a0, 0xc51b, 0xa106, 0xc362, 0x0, 0x0);
        gbc.writeMem(0xc362, { 0x19 });
        gbc.writeMem(0xd5ec, { 0xcb, 0xae });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x2830, gbc.sp());
        EXPECT(0xd5ee, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x19, gbc.readMem(0xc362));
        EXPECT(0xcb, gbc.readMem(0xd5ec));
        EXPECT(0xae, gbc.readMem(0xd5ed));
        // CB AE 0361
        gbc.setState(0x68f1, 0x364f, 0x8580, 0x3c1a, 0xa672, 0x3a84, 0x1, 0x1);
        gbc.writeMem(0x3a84, { 0xe });
        gbc.writeMem(0x68f1, { 0xcb, 0xae });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x364f, gbc.sp());
        EXPECT(0x68f3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB AE 0364
        gbc.setState(0x470f, 0x87ef, 0x1d50, 0xebca, 0xd51e, 0xafd4, 0x1, 0x1);
        gbc.writeMem(0x470f, { 0xcb, 0xae });
        gbc.writeMem(0xafd4, { 0x78 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x87ef, gbc.sp());
        EXPECT(0x4711, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x58, gbc.readMem(0xafd4));
        // CB AE 0365
        gbc.setState(0xe3dc, 0x3eea, 0x200, 0xdabb, 0xb981, 0x563e, 0x1, 0x0);
        gbc.writeMem(0x563e, { 0xd4 });
        gbc.writeMem(0xe3dc, { 0xcb, 0xae });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x3eea, gbc.sp());
        EXPECT(0xe3de, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe3dc));
        EXPECT(0xae, gbc.readMem(0xe3dd));
        // CB AE 0366
        gbc.setState(0xbb37, 0x4c51, 0xae00, 0xd272, 0xd43b, 0x5412, 0x0, 0x0);
        gbc.writeMem(0x5412, { 0xb });
        gbc.writeMem(0xbb37, { 0xcb, 0xae });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x4c51, gbc.sp());
        EXPECT(0xbb39, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbb37));
        EXPECT(0xae, gbc.readMem(0xbb38));
        // CB AE 0367
        gbc.setState(0xa715, 0x88cb, 0xeb00, 0xed4a, 0xf6dc, 0xdbe6, 0x0, 0x1);
        gbc.writeMem(0xa715, { 0xcb, 0xae });
        gbc.writeMem(0xdbe6, { 0x5f });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x88cb, gbc.sp());
        EXPECT(0xa717, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa715));
        EXPECT(0xae, gbc.readMem(0xa716));
        EXPECT(0x5f, gbc.readMem(0xdbe6));
        // CB AE 0368
        gbc.setState(0x6e10, 0x2e89, 0x400, 0xcf07, 0xe06f, 0xa78c, 0x1, 0x1);
        gbc.writeMem(0x6e10, { 0xcb, 0xae });
        gbc.writeMem(0xa78c, { 0xb });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x2e89, gbc.sp());
        EXPECT(0x6e12, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb, gbc.readMem(0xa78c));
        // CB AE 0369
        gbc.setState(0x7c2c, 0xe504, 0x61e0, 0xe689, 0x3e6b, 0xab08, 0x1, 0x0);
        gbc.writeMem(0x7c2c, { 0xcb, 0xae });
        gbc.writeMem(0xab08, { 0x65 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0xe504, gbc.sp());
        EXPECT(0x7c2e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x45, gbc.readMem(0xab08));
        // CB AE 036C
        gbc.setState(0xc3f1, 0x512d, 0x91d0, 0x42d2, 0xd1a4, 0xb759, 0x0, 0x1);
        gbc.writeMem(0xb759, { 0xb3 });
        gbc.writeMem(0xc3f1, { 0xcb, 0xae });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x512d, gbc.sp());
        EXPECT(0xc3f3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x93, gbc.readMem(0xb759));
        EXPECT(0xcb, gbc.readMem(0xc3f1));
        EXPECT(0xae, gbc.readMem(0xc3f2));
        // CB AE 036D
        gbc.setState(0x10f9, 0x9f, 0x4ed0, 0xb025, 0x4e37, 0xbb0c, 0x0, 0x1);
        gbc.writeMem(0x10f9, { 0xcb, 0xae });
        gbc.writeMem(0xbb0c, { 0xf });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x9f, gbc.sp());
        EXPECT(0x10fb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf, gbc.readMem(0xbb0c));
        // CB AE 036E
        gbc.setState(0xa1d0, 0x26e0, 0x8ec0, 0x9820, 0x6c4, 0xb8c9, 0x0, 0x0);
        gbc.writeMem(0xa1d0, { 0xcb, 0xae });
        gbc.writeMem(0xb8c9, { 0x51 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x26e0, gbc.sp());
        EXPECT(0xa1d2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa1d0));
        EXPECT(0xae, gbc.readMem(0xa1d1));
        EXPECT(0x51, gbc.readMem(0xb8c9));
        // CB AE 036F
        gbc.setState(0x6fb4, 0xf3e4, 0x37b0, 0x2b9b, 0x65bf, 0x813c, 0x1, 0x0);
        gbc.writeMem(0x6fb4, { 0xcb, 0xae });
        gbc.writeMem(0x813c, { 0xc4 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0xf3e4, gbc.sp());
        EXPECT(0x6fb6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc4, gbc.readMem(0x813c));
        // CB AE 0370
        gbc.setState(0x24dc, 0x9778, 0x9560, 0x1445, 0x73e, 0xd14c, 0x0, 0x0);
        gbc.writeMem(0x24dc, { 0xcb, 0xae });
        gbc.writeMem(0xd14c, { 0x37 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x9778, gbc.sp());
        EXPECT(0x24de, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x17, gbc.readMem(0xd14c));
        // CB AE 0371
        gbc.setState(0x6df, 0x2d05, 0x2cf0, 0xafe1, 0xbb44, 0xe24e, 0x1, 0x0);
        gbc.writeMem(0x6df, { 0xcb, 0xae });
        gbc.writeMem(0xe24e, { 0xc8 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x2d05, gbc.sp());
        EXPECT(0x6e1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc8, gbc.readMem(0xe24e));
        // CB AE 0372
        gbc.setState(0xc395, 0xe20, 0xaaf0, 0x3036, 0x77a3, 0x360, 0x1, 0x1);
        gbc.writeMem(0x360, { 0x90 });
        gbc.writeMem(0xc395, { 0xcb, 0xae });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0xe20, gbc.sp());
        EXPECT(0xc397, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc395));
        EXPECT(0xae, gbc.readMem(0xc396));
        // CB AE 0373
        gbc.setState(0x38ef, 0xd06, 0x12e0, 0xc6ff, 0xcff5, 0xd13e, 0x0, 0x0);
        gbc.writeMem(0x38ef, { 0xcb, 0xae });
        gbc.writeMem(0xd13e, { 0xd0 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0xd06, gbc.sp());
        EXPECT(0x38f1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd0, gbc.readMem(0xd13e));
        // CB AE 0374
        gbc.setState(0x9cca, 0x30f, 0x50f0, 0x2df2, 0x5215, 0xca4f, 0x0, 0x0);
        gbc.writeMem(0x9cca, { 0xcb, 0xae });
        gbc.writeMem(0xca4f, { 0xc6 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x30f, gbc.sp());
        EXPECT(0x9ccc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9cca));
        EXPECT(0xae, gbc.readMem(0x9ccb));
        EXPECT(0xc6, gbc.readMem(0xca4f));
        // CB AE 0375
        gbc.setState(0xb9da, 0xd6c3, 0x8120, 0x7ad1, 0xdb71, 0x59ce, 0x0, 0x1);
        gbc.writeMem(0x59ce, { 0xc9 });
        gbc.writeMem(0xb9da, { 0xcb, 0xae });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0xd6c3, gbc.sp());
        EXPECT(0xb9dc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb9da));
        EXPECT(0xae, gbc.readMem(0xb9db));
        // CB AE 0376
        gbc.setState(0xcfe2, 0x3b80, 0x8390, 0xd7ae, 0x12ed, 0x22b, 0x1, 0x0);
        gbc.writeMem(0x22b, { 0x1e });
        gbc.writeMem(0xcfe2, { 0xcb, 0xae });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x3b80, gbc.sp());
        EXPECT(0xcfe4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcfe2));
        EXPECT(0xae, gbc.readMem(0xcfe3));
        // CB AE 0377
        gbc.setState(0xc733, 0x6301, 0x4640, 0x711e, 0x65e8, 0xa075, 0x1, 0x0);
        gbc.writeMem(0xa075, { 0xc0 });
        gbc.writeMem(0xc733, { 0xcb, 0xae });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x6301, gbc.sp());
        EXPECT(0xc735, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc0, gbc.readMem(0xa075));
        EXPECT(0xcb, gbc.readMem(0xc733));
        EXPECT(0xae, gbc.readMem(0xc734));
        // CB AE 037A
        gbc.setState(0x99b, 0x53ce, 0x9820, 0xe0ac, 0xfb62, 0xb6b4, 0x0, 0x1);
        gbc.writeMem(0x99b, { 0xcb, 0xae });
        gbc.writeMem(0xb6b4, { 0x15 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x53ce, gbc.sp());
        EXPECT(0x99d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x15, gbc.readMem(0xb6b4));
        // CB AE 037B
        gbc.setState(0xbae, 0x4bdb, 0x2980, 0x4021, 0xcd13, 0x628c, 0x0, 0x1);
        gbc.writeMem(0xbae, { 0xcb, 0xae });
        gbc.writeMem(0x628c, { 0xc0 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x4bdb, gbc.sp());
        EXPECT(0xbb0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB AE 037D
        gbc.setState(0x486, 0xbdd4, 0x4ba0, 0x2def, 0x586a, 0x26c, 0x1, 0x1);
        gbc.writeMem(0x26c, { 0x9d });
        gbc.writeMem(0x486, { 0xcb, 0xae });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0xbdd4, gbc.sp());
        EXPECT(0x488, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB AE 037E
        gbc.setState(0x4dd3, 0xe3a, 0x4e30, 0xc19b, 0x47b3, 0xd830, 0x1, 0x1);
        gbc.writeMem(0x4dd3, { 0xcb, 0xae });
        gbc.writeMem(0xd830, { 0xfb });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0xe3a, gbc.sp());
        EXPECT(0x4dd5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xdb, gbc.readMem(0xd830));
        // CB AE 037F
        gbc.setState(0x4dfd, 0x2f1d, 0x3e10, 0x61c1, 0xc1e0, 0xd674, 0x0, 0x1);
        gbc.writeMem(0x4dfd, { 0xcb, 0xae });
        gbc.writeMem(0xd674, { 0xda });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x2f1d, gbc.sp());
        EXPECT(0x4dff, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xda, gbc.readMem(0xd674));
        // CB AE 0380
        gbc.setState(0x66bd, 0xf008, 0xdf50, 0x44b5, 0xa7b0, 0x4f7d, 0x0, 0x1);
        gbc.writeMem(0x4f7d, { 0xe });
        gbc.writeMem(0x66bd, { 0xcb, 0xae });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0xf008, gbc.sp());
        EXPECT(0x66bf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB AE 0381
        gbc.setState(0x5c71, 0x12cd, 0xca90, 0x4a4c, 0x30ff, 0x8975, 0x0, 0x0);
        gbc.writeMem(0x5c71, { 0xcb, 0xae });
        gbc.writeMem(0x8975, { 0xc9 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x12cd, gbc.sp());
        EXPECT(0x5c73, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc9, gbc.readMem(0x8975));
        // CB AE 0384
        gbc.setState(0xcf84, 0x3f1a, 0x2f50, 0x1c6, 0xde13, 0xa31c, 0x1, 0x1);
        gbc.writeMem(0xa31c, { 0xe9 });
        gbc.writeMem(0xcf84, { 0xcb, 0xae });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x3f1a, gbc.sp());
        EXPECT(0xcf86, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc9, gbc.readMem(0xa31c));
        EXPECT(0xcb, gbc.readMem(0xcf84));
        EXPECT(0xae, gbc.readMem(0xcf85));
        // CB AE 0386
        gbc.setState(0xaad1, 0x3636, 0xa8a0, 0x9bdc, 0xa463, 0xb033, 0x1, 0x0);
        gbc.writeMem(0xaad1, { 0xcb, 0xae });
        gbc.writeMem(0xb033, { 0xd6 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x3636, gbc.sp());
        EXPECT(0xaad3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaad1));
        EXPECT(0xae, gbc.readMem(0xaad2));
        EXPECT(0xd6, gbc.readMem(0xb033));
        // CB AE 0387
        gbc.setState(0xe3fc, 0x28, 0xdb60, 0xe65e, 0x551c, 0x7dfd, 0x1, 0x0);
        gbc.writeMem(0x7dfd, { 0x91 });
        gbc.writeMem(0xe3fc, { 0xcb, 0xae });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x28, gbc.sp());
        EXPECT(0xe3fe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe3fc));
        EXPECT(0xae, gbc.readMem(0xe3fd));
        // CB AE 0388
        gbc.setState(0x17e9, 0x2868, 0x1c0, 0x810, 0xd82f, 0x8a58, 0x1, 0x1);
        gbc.writeMem(0x17e9, { 0xcb, 0xae });
        gbc.writeMem(0x8a58, { 0xc3 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x2868, gbc.sp());
        EXPECT(0x17eb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc3, gbc.readMem(0x8a58));
        // CB AE 0389
        gbc.setState(0x9abc, 0xff4c, 0x4120, 0x629a, 0x27f9, 0xbd13, 0x1, 0x1);
        gbc.writeMem(0x9abc, { 0xcb, 0xae });
        gbc.writeMem(0xbd13, { 0x33 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0xff4c, gbc.sp());
        EXPECT(0x9abe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9abc));
        EXPECT(0xae, gbc.readMem(0x9abd));
        EXPECT(0x13, gbc.readMem(0xbd13));
        // CB AE 038A
        gbc.setState(0xc17a, 0x4be7, 0xf080, 0x3c8a, 0xc524, 0x1caa, 0x0, 0x0);
        gbc.writeMem(0x1caa, { 0xc7 });
        gbc.writeMem(0xc17a, { 0xcb, 0xae });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x4be7, gbc.sp());
        EXPECT(0xc17c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc17a));
        EXPECT(0xae, gbc.readMem(0xc17b));
        // CB AE 038C
        gbc.setState(0x2cad, 0x631b, 0xa3a0, 0x812a, 0x34f4, 0xa648, 0x1, 0x1);
        gbc.writeMem(0x2cad, { 0xcb, 0xae });
        gbc.writeMem(0xa648, { 0x7 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0x631b, gbc.sp());
        EXPECT(0x2caf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7, gbc.readMem(0xa648));
        // CB AE 038D
        gbc.setState(0xd6b8, 0x2296, 0x4920, 0x5e4c, 0x694a, 0x7b86, 0x1, 0x0);
        gbc.writeMem(0x7b86, { 0x9f });
        gbc.writeMem(0xd6b8, { 0xcb, 0xae });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x2296, gbc.sp());
        EXPECT(0xd6ba, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd6b8));
        EXPECT(0xae, gbc.readMem(0xd6b9));
        // CB AE 038E
        gbc.setState(0x954b, 0x434a, 0xd820, 0x3d05, 0x2564, 0x990a, 0x0, 0x0);
        gbc.writeMem(0x954b, { 0xcb, 0xae });
        gbc.writeMem(0x990a, { 0x4f });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x434a, gbc.sp());
        EXPECT(0x954d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x954b));
        EXPECT(0xae, gbc.readMem(0x954c));
        EXPECT(0x4f, gbc.readMem(0x990a));
        // CB AE 038F
        gbc.setState(0x15e5, 0x888c, 0xb200, 0x89e7, 0x2294, 0xf1ef, 0x1, 0x0);
        gbc.writeMem(0x15e5, { 0xcb, 0xae });
        gbc.writeMem(0xf1ef, { 0xed });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x888c, gbc.sp());
        EXPECT(0x15e7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcd, gbc.readMem(0xf1ef));
        // CB AE 0390
        gbc.setState(0x71a8, 0x92a9, 0x890, 0x3657, 0x1e03, 0xb800, 0x1, 0x1);
        gbc.writeMem(0x71a8, { 0xcb, 0xae });
        gbc.writeMem(0xb800, { 0xa2 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x92a9, gbc.sp());
        EXPECT(0x71aa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x82, gbc.readMem(0xb800));
        // CB AE 0391
        gbc.setState(0xbfb0, 0x37df, 0xd210, 0x354d, 0xd32d, 0xa064, 0x0, 0x0);
        gbc.writeMem(0xa064, { 0x1c });
        gbc.writeMem(0xbfb0, { 0xcb, 0xae });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x37df, gbc.sp());
        EXPECT(0xbfb2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1c, gbc.readMem(0xa064));
        EXPECT(0xcb, gbc.readMem(0xbfb0));
        EXPECT(0xae, gbc.readMem(0xbfb1));
        // CB AE 0393
        gbc.setState(0xd1ab, 0xdb9a, 0x2440, 0x5551, 0xb700, 0x317c, 0x1, 0x0);
        gbc.writeMem(0x317c, { 0x59 });
        gbc.writeMem(0xd1ab, { 0xcb, 0xae });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0xdb9a, gbc.sp());
        EXPECT(0xd1ad, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd1ab));
        EXPECT(0xae, gbc.readMem(0xd1ac));
        // CB AE 0397
        gbc.setState(0x1096, 0xb7ee, 0xef0, 0xc767, 0x9f21, 0x9523, 0x1, 0x0);
        gbc.writeMem(0x1096, { 0xcb, 0xae });
        gbc.writeMem(0x9523, { 0xac });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0xb7ee, gbc.sp());
        EXPECT(0x1098, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8c, gbc.readMem(0x9523));
        // CB AE 0398
        gbc.setState(0x829c, 0xf85b, 0x3d20, 0xc7e7, 0x54eb, 0xed9e, 0x1, 0x0);
        gbc.writeMem(0x829c, { 0xcb, 0xae });
        gbc.writeMem(0xed9e, { 0xfd });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0xf85b, gbc.sp());
        EXPECT(0x829e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x829c));
        EXPECT(0xae, gbc.readMem(0x829d));
        EXPECT(0xdd, gbc.readMem(0xed9e));
        // CB AE 039A
        gbc.setState(0x3a28, 0xc572, 0xab00, 0xca29, 0x2780, 0x3913, 0x0, 0x0);
        gbc.writeMem(0x3913, { 0x86 });
        gbc.writeMem(0x3a28, { 0xcb, 0xae });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0xc572, gbc.sp());
        EXPECT(0x3a2a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB AE 039C
        gbc.setState(0x78fb, 0xd4af, 0x11c0, 0x245b, 0x7fb8, 0xdf97, 0x0, 0x1);
        gbc.writeMem(0x78fb, { 0xcb, 0xae });
        gbc.writeMem(0xdf97, { 0x97 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0xd4af, gbc.sp());
        EXPECT(0x78fd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x97, gbc.readMem(0xdf97));
        // CB AE 039D
        gbc.setState(0x76f7, 0x6601, 0xb40, 0x6415, 0xddbd, 0xaf71, 0x1, 0x1);
        gbc.writeMem(0x76f7, { 0xcb, 0xae });
        gbc.writeMem(0xaf71, { 0x4e });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x6601, gbc.sp());
        EXPECT(0x76f9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4e, gbc.readMem(0xaf71));
        // CB AE 039E
        gbc.setState(0xe26e, 0x52cf, 0x2e60, 0xd54e, 0x7c5d, 0xfd69, 0x1, 0x0);
        gbc.writeMem(0xe26e, { 0xcb, 0xae });
        gbc.writeMem(0xfd69, { 0xcc });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0x52cf, gbc.sp());
        EXPECT(0xe270, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe26e));
        EXPECT(0xae, gbc.readMem(0xe26f));
        EXPECT(0xcc, gbc.readMem(0xfd69));
        // CB AE 039F
        gbc.setState(0xd60d, 0x915a, 0x9440, 0xc7fc, 0xc036, 0xc45c, 0x1, 0x1);
        gbc.writeMem(0xc45c, { 0x4b });
        gbc.writeMem(0xd60d, { 0xcb, 0xae });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x915a, gbc.sp());
        EXPECT(0xd60f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4b, gbc.readMem(0xc45c));
        EXPECT(0xcb, gbc.readMem(0xd60d));
        EXPECT(0xae, gbc.readMem(0xd60e));
        // CB AE 03A0
        gbc.setState(0x98be, 0x2f60, 0x3f00, 0x9d18, 0x70d4, 0xbd44, 0x0, 0x0);
        gbc.writeMem(0x98be, { 0xcb, 0xae });
        gbc.writeMem(0xbd44, { 0xfc });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x2f60, gbc.sp());
        EXPECT(0x98c0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x98be));
        EXPECT(0xae, gbc.readMem(0x98bf));
        EXPECT(0xdc, gbc.readMem(0xbd44));
        // CB AE 03A3
        gbc.setState(0x133f, 0x27a1, 0x3f00, 0xa383, 0x5172, 0xf251, 0x0, 0x1);
        gbc.writeMem(0x133f, { 0xcb, 0xae });
        gbc.writeMem(0xf251, { 0x20 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x27a1, gbc.sp());
        EXPECT(0x1341, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x0, gbc.readMem(0xf251));
        // CB AE 03A5
        gbc.setState(0x6bab, 0x7917, 0x25a0, 0x9e4, 0x808d, 0x592b, 0x1, 0x0);
        gbc.writeMem(0x592b, { 0x42 });
        gbc.writeMem(0x6bab, { 0xcb, 0xae });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x7917, gbc.sp());
        EXPECT(0x6bad, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB AE 03A6
        gbc.setState(0xb917, 0x7e3d, 0x27b0, 0xb958, 0x1bf3, 0xab8b, 0x1, 0x1);
        gbc.writeMem(0xab8b, { 0x87 });
        gbc.writeMem(0xb917, { 0xcb, 0xae });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x7e3d, gbc.sp());
        EXPECT(0xb919, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x87, gbc.readMem(0xab8b));
        EXPECT(0xcb, gbc.readMem(0xb917));
        EXPECT(0xae, gbc.readMem(0xb918));
        // CB AE 03A7
        gbc.setState(0xceed, 0xa649, 0x4ed0, 0x3d2, 0x65c9, 0xd767, 0x1, 0x1);
        gbc.writeMem(0xceed, { 0xcb, 0xae });
        gbc.writeMem(0xd767, { 0x49 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0xa649, gbc.sp());
        EXPECT(0xceef, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xceed));
        EXPECT(0xae, gbc.readMem(0xceee));
        EXPECT(0x49, gbc.readMem(0xd767));
        // CB AE 03A8
        gbc.setState(0x42ff, 0x6e0e, 0xc10, 0xf857, 0xc981, 0xd7f9, 0x0, 0x0);
        gbc.writeMem(0x42ff, { 0xcb, 0xae });
        gbc.writeMem(0xd7f9, { 0x32 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x6e0e, gbc.sp());
        EXPECT(0x4301, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x12, gbc.readMem(0xd7f9));
        // CB AE 03A9
        gbc.setState(0x9656, 0xdbc8, 0xd9d0, 0x60e4, 0x2439, 0x6f9a, 0x1, 0x0);
        gbc.writeMem(0x6f9a, { 0xca });
        gbc.writeMem(0x9656, { 0xcb, 0xae });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0xdbc8, gbc.sp());
        EXPECT(0x9658, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9656));
        EXPECT(0xae, gbc.readMem(0x9657));
        // CB AE 03AA
        gbc.setState(0xad3, 0x4104, 0x22e0, 0x4ae1, 0x7f, 0x4e05, 0x1, 0x0);
        gbc.writeMem(0xad3, { 0xcb, 0xae });
        gbc.writeMem(0x4e05, { 0x45 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x4104, gbc.sp());
        EXPECT(0xad5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB AE 03AC
        gbc.setState(0x9d50, 0x40cc, 0x3280, 0x2600, 0x46ba, 0x2fcd, 0x1, 0x1);
        gbc.writeMem(0x2fcd, { 0x8d });
        gbc.writeMem(0x9d50, { 0xcb, 0xae });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x40cc, gbc.sp());
        EXPECT(0x9d52, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9d50));
        EXPECT(0xae, gbc.readMem(0x9d51));
        // CB AE 03AD
        gbc.setState(0xcc3d, 0xe868, 0x9440, 0x381f, 0xc219, 0xf326, 0x0, 0x1);
        gbc.writeMem(0xcc3d, { 0xcb, 0xae });
        gbc.writeMem(0xf326, { 0x9d });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0xe868, gbc.sp());
        EXPECT(0xcc3f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcc3d));
        EXPECT(0xae, gbc.readMem(0xcc3e));
        EXPECT(0x9d, gbc.readMem(0xf326));
        // CB AE 03AF
        gbc.setState(0x5586, 0xd4b0, 0xfdf0, 0x8458, 0xc0f4, 0xf4a1, 0x1, 0x0);
        gbc.writeMem(0x5586, { 0xcb, 0xae });
        gbc.writeMem(0xf4a1, { 0x59 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0xd4b0, gbc.sp());
        EXPECT(0x5588, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x59, gbc.readMem(0xf4a1));
        // CB AE 03B0
        gbc.setState(0xedaa, 0x68ee, 0x9aa0, 0x4bbe, 0x141b, 0xf66f, 0x0, 0x0);
        gbc.writeMem(0xedaa, { 0xcb, 0xae });
        gbc.writeMem(0xf66f, { 0x74 });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x68ee, gbc.sp());
        EXPECT(0xedac, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xedaa));
        EXPECT(0xae, gbc.readMem(0xedab));
        EXPECT(0x54, gbc.readMem(0xf66f));
        // CB AE 03B1
        gbc.setState(0xa652, 0xf9c3, 0x35d0, 0xa993, 0xa0ca, 0xba1, 0x0, 0x1);
        gbc.writeMem(0xba1, { 0xd8 });
        gbc.writeMem(0xa652, { 0xcb, 0xae });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0xf9c3, gbc.sp());
        EXPECT(0xa654, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa652));
        EXPECT(0xae, gbc.readMem(0xa653));
        // CB AE 03B3
        gbc.setState(0xd476, 0x1889, 0xd320, 0xf160, 0xb4fb, 0x9fb6, 0x0, 0x0);
        gbc.writeMem(0x9fb6, { 0x17 });
        gbc.writeMem(0xd476, { 0xcb, 0xae });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x1889, gbc.sp());
        EXPECT(0xd478, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x17, gbc.readMem(0x9fb6));
        EXPECT(0xcb, gbc.readMem(0xd476));
        EXPECT(0xae, gbc.readMem(0xd477));
        // CB AE 03B4
        gbc.setState(0xb97c, 0x7cac, 0x25b0, 0x9331, 0xbad3, 0x9849, 0x1, 0x0);
        gbc.writeMem(0x9849, { 0xe });
        gbc.writeMem(0xb97c, { 0xcb, 0xae });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x7cac, gbc.sp());
        EXPECT(0xb97e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe, gbc.readMem(0x9849));
        EXPECT(0xcb, gbc.readMem(0xb97c));
        EXPECT(0xae, gbc.readMem(0xb97d));
        // CB AE 03B6
        gbc.setState(0x1f21, 0xd158, 0x380, 0x33df, 0xa366, 0xeb60, 0x0, 0x1);
        gbc.writeMem(0x1f21, { 0xcb, 0xae });
        gbc.writeMem(0xeb60, { 0xa4 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0xd158, gbc.sp());
        EXPECT(0x1f23, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x84, gbc.readMem(0xeb60));
        // CB AE 03B7
        gbc.setState(0x571d, 0xd6d0, 0xb130, 0x324d, 0x989e, 0x5de0, 0x1, 0x1);
        gbc.writeMem(0x571d, { 0xcb, 0xae });
        gbc.writeMem(0x5de0, { 0x18 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0xd6d0, gbc.sp());
        EXPECT(0x571f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB AE 03B9
        gbc.setState(0x631f, 0xaf4d, 0x4880, 0x730b, 0x3f23, 0x3f1a, 0x1, 0x1);
        gbc.writeMem(0x3f1a, { 0x97 });
        gbc.writeMem(0x631f, { 0xcb, 0xae });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0xaf4d, gbc.sp());
        EXPECT(0x6321, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB AE 03BA
        gbc.setState(0xe92f, 0x15be, 0x8570, 0x1915, 0x4197, 0xeb4f, 0x1, 0x0);
        gbc.writeMem(0xe92f, { 0xcb, 0xae });
        gbc.writeMem(0xeb4f, { 0x60 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x15be, gbc.sp());
        EXPECT(0xe931, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe92f));
        EXPECT(0xae, gbc.readMem(0xe930));
        EXPECT(0x40, gbc.readMem(0xeb4f));
        // CB AE 03BB
        gbc.setState(0xd311, 0x2e5f, 0xe560, 0x1482, 0xeb95, 0xb583, 0x1, 0x0);
        gbc.writeMem(0xb583, { 0x50 });
        gbc.writeMem(0xd311, { 0xcb, 0xae });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x2e5f, gbc.sp());
        EXPECT(0xd313, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x50, gbc.readMem(0xb583));
        EXPECT(0xcb, gbc.readMem(0xd311));
        EXPECT(0xae, gbc.readMem(0xd312));
        // CB AE 03BC
        gbc.setState(0x1258, 0x7f2e, 0x7ec0, 0x6ec4, 0xda36, 0xd48d, 0x0, 0x1);
        gbc.writeMem(0x1258, { 0xcb, 0xae });
        gbc.writeMem(0xd48d, { 0xda });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x7f2e, gbc.sp());
        EXPECT(0x125a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xda, gbc.readMem(0xd48d));
        // CB AE 03BD
        gbc.setState(0x8925, 0x8298, 0x9350, 0x7dec, 0x73fc, 0x2446, 0x1, 0x1);
        gbc.writeMem(0x2446, { 0x5 });
        gbc.writeMem(0x8925, { 0xcb, 0xae });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x8298, gbc.sp());
        EXPECT(0x8927, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8925));
        EXPECT(0xae, gbc.readMem(0x8926));
        // CB AE 03BE
        gbc.setState(0x40be, 0xef63, 0x56c0, 0x5f8c, 0x49cd, 0xd983, 0x1, 0x1);
        gbc.writeMem(0x40be, { 0xcb, 0xae });
        gbc.writeMem(0xd983, { 0xd0 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0xef63, gbc.sp());
        EXPECT(0x40c0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd0, gbc.readMem(0xd983));
        // CB AE 03BF
        gbc.setState(0x9732, 0x4192, 0xbd70, 0x552, 0xe1bf, 0x8052, 0x0, 0x0);
        gbc.writeMem(0x8052, { 0xd });
        gbc.writeMem(0x9732, { 0xcb, 0xae });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x4192, gbc.sp());
        EXPECT(0x9734, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd, gbc.readMem(0x8052));
        EXPECT(0xcb, gbc.readMem(0x9732));
        EXPECT(0xae, gbc.readMem(0x9733));
        // CB AE 03C0
        gbc.setState(0x9e0a, 0x6ed7, 0x8970, 0xf196, 0xeb1e, 0x4aa9, 0x0, 0x0);
        gbc.writeMem(0x4aa9, { 0xc4 });
        gbc.writeMem(0x9e0a, { 0xcb, 0xae });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x6ed7, gbc.sp());
        EXPECT(0x9e0c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9e0a));
        EXPECT(0xae, gbc.readMem(0x9e0b));
        // CB AE 03C2
        gbc.setState(0x3f7b, 0x5805, 0xfc80, 0xb57c, 0x1566, 0x6d9c, 0x1, 0x0);
        gbc.writeMem(0x3f7b, { 0xcb, 0xae });
        gbc.writeMem(0x6d9c, { 0x8f });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x5805, gbc.sp());
        EXPECT(0x3f7d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB AE 03C3
        gbc.setState(0x5e5b, 0xadfa, 0x1ee0, 0x869b, 0x872b, 0xcf48, 0x0, 0x1);
        gbc.writeMem(0x5e5b, { 0xcb, 0xae });
        gbc.writeMem(0xcf48, { 0xa4 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0xadfa, gbc.sp());
        EXPECT(0x5e5d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x84, gbc.readMem(0xcf48));
        // CB AE 03C6
        gbc.setState(0x5cff, 0x86fb, 0x1a90, 0x1bee, 0xd2e3, 0x3ec, 0x1, 0x1);
        gbc.writeMem(0x3ec, { 0x52 });
        gbc.writeMem(0x5cff, { 0xcb, 0xae });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x86fb, gbc.sp());
        EXPECT(0x5d01, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB AE 03C7
        gbc.setState(0x4fe7, 0x6347, 0xd640, 0x41a0, 0x78c0, 0x8663, 0x0, 0x1);
        gbc.writeMem(0x4fe7, { 0xcb, 0xae });
        gbc.writeMem(0x8663, { 0x7d });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x6347, gbc.sp());
        EXPECT(0x4fe9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5d, gbc.readMem(0x8663));
        // CB AE 03C8
        gbc.setState(0xc65d, 0x8f2b, 0xf6e0, 0xaff, 0x89d9, 0xbc6b, 0x1, 0x1);
        gbc.writeMem(0xbc6b, { 0xa4 });
        gbc.writeMem(0xc65d, { 0xcb, 0xae });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x8f2b, gbc.sp());
        EXPECT(0xc65f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x84, gbc.readMem(0xbc6b));
        EXPECT(0xcb, gbc.readMem(0xc65d));
        EXPECT(0xae, gbc.readMem(0xc65e));
        // CB AE 03C9
        gbc.setState(0x7e86, 0xeea3, 0x9960, 0xbc52, 0x7ac3, 0xdc9c, 0x0, 0x1);
        gbc.writeMem(0x7e86, { 0xcb, 0xae });
        gbc.writeMem(0xdc9c, { 0xc4 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0xeea3, gbc.sp());
        EXPECT(0x7e88, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc4, gbc.readMem(0xdc9c));
        // CB AE 03CB
        gbc.setState(0x26e7, 0xfc68, 0xfb0, 0xd3eb, 0x558c, 0xbd, 0x1, 0x0);
        gbc.writeMem(0xbd, { 0xc5 });
        gbc.writeMem(0x26e7, { 0xcb, 0xae });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0xfc68, gbc.sp());
        EXPECT(0x26e9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB AE 03CC
        gbc.setState(0xecee, 0x9b5f, 0xc1a0, 0x7d49, 0x7141, 0x6045, 0x0, 0x0);
        gbc.writeMem(0x6045, { 0x52 });
        gbc.writeMem(0xecee, { 0xcb, 0xae });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x9b5f, gbc.sp());
        EXPECT(0xecf0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xecee));
        EXPECT(0xae, gbc.readMem(0xecef));
        // CB AE 03CD
        gbc.setState(0x3d9c, 0x2f2f, 0x4fe0, 0x161f, 0x954f, 0xd24c, 0x1, 0x0);
        gbc.writeMem(0x3d9c, { 0xcb, 0xae });
        gbc.writeMem(0xd24c, { 0x91 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x2f2f, gbc.sp());
        EXPECT(0x3d9e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x91, gbc.readMem(0xd24c));
        // CB AE 03CE
        gbc.setState(0xb8a2, 0x9dec, 0x6fc0, 0x47ce, 0x8530, 0x9d9c, 0x1, 0x1);
        gbc.writeMem(0x9d9c, { 0xaf });
        gbc.writeMem(0xb8a2, { 0xcb, 0xae });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x9dec, gbc.sp());
        EXPECT(0xb8a4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8f, gbc.readMem(0x9d9c));
        EXPECT(0xcb, gbc.readMem(0xb8a2));
        EXPECT(0xae, gbc.readMem(0xb8a3));
        // CB AE 03CF
        gbc.setState(0x4dfb, 0x9e0d, 0xbd0, 0xdf3b, 0xac37, 0xd43b, 0x0, 0x0);
        gbc.writeMem(0x4dfb, { 0xcb, 0xae });
        gbc.writeMem(0xd43b, { 0x5b });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x9e0d, gbc.sp());
        EXPECT(0x4dfd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5b, gbc.readMem(0xd43b));
        // CB AE 03D0
        gbc.setState(0x8f77, 0xc5b5, 0x2580, 0x6d9c, 0x9347, 0xca1d, 0x0, 0x0);
        gbc.writeMem(0x8f77, { 0xcb, 0xae });
        gbc.writeMem(0xca1d, { 0x9a });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0xc5b5, gbc.sp());
        EXPECT(0x8f79, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8f77));
        EXPECT(0xae, gbc.readMem(0x8f78));
        EXPECT(0x9a, gbc.readMem(0xca1d));
        // CB AE 03D3
        gbc.setState(0x7f0f, 0x63eb, 0xe0d0, 0x9cf2, 0x8c0e, 0xa9c, 0x0, 0x1);
        gbc.writeMem(0xa9c, { 0xd8 });
        gbc.writeMem(0x7f0f, { 0xcb, 0xae });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x63eb, gbc.sp());
        EXPECT(0x7f11, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB AE 03D4
        gbc.setState(0xa882, 0xfea5, 0xb570, 0xa5c2, 0x5b19, 0x3035, 0x1, 0x1);
        gbc.writeMem(0x3035, { 0x1a });
        gbc.writeMem(0xa882, { 0xcb, 0xae });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0xfea5, gbc.sp());
        EXPECT(0xa884, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa882));
        EXPECT(0xae, gbc.readMem(0xa883));
        // CB AE 03D5
        gbc.setState(0x59da, 0xeb44, 0x61d0, 0x9316, 0x9345, 0x3b71, 0x1, 0x0);
        gbc.writeMem(0x3b71, { 0x55 });
        gbc.writeMem(0x59da, { 0xcb, 0xae });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0xeb44, gbc.sp());
        EXPECT(0x59dc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB AE 03D6
        gbc.setState(0xbac5, 0x3f53, 0x91f0, 0x2adf, 0xe7fd, 0x3cf9, 0x1, 0x1);
        gbc.writeMem(0x3cf9, { 0xc9 });
        gbc.writeMem(0xbac5, { 0xcb, 0xae });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x3f53, gbc.sp());
        EXPECT(0xbac7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbac5));
        EXPECT(0xae, gbc.readMem(0xbac6));
        // CB AE 03D9
        gbc.setState(0x201d, 0x33f0, 0x5b50, 0x69b2, 0xf247, 0x802d, 0x1, 0x1);
        gbc.writeMem(0x201d, { 0xcb, 0xae });
        gbc.writeMem(0x802d, { 0x63 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x33f0, gbc.sp());
        EXPECT(0x201f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x43, gbc.readMem(0x802d));
        // CB AE 03DA
        gbc.setState(0xaf83, 0xe431, 0x7280, 0xcf72, 0xcad7, 0xc2cd, 0x1, 0x1);
        gbc.writeMem(0xaf83, { 0xcb, 0xae });
        gbc.writeMem(0xc2cd, { 0x79 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0xe431, gbc.sp());
        EXPECT(0xaf85, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaf83));
        EXPECT(0xae, gbc.readMem(0xaf84));
        EXPECT(0x59, gbc.readMem(0xc2cd));
        // CB AE 03DB
        gbc.setState(0x7fe9, 0x38bf, 0x5bf0, 0xd7d0, 0x519a, 0x51f3, 0x0, 0x0);
        gbc.writeMem(0x51f3, { 0x4a });
        gbc.writeMem(0x7fe9, { 0xcb, 0xae });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x38bf, gbc.sp());
        EXPECT(0x7feb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB AE 03DC
        gbc.setState(0x740b, 0x5208, 0xfd80, 0x3d94, 0x6eec, 0x315, 0x1, 0x1);
        gbc.writeMem(0x315, { 0x9a });
        gbc.writeMem(0x740b, { 0xcb, 0xae });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x5208, gbc.sp());
        EXPECT(0x740d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB AE 03DD
        gbc.setState(0x299c, 0x101c, 0xeb50, 0xa72a, 0xfb9e, 0x92f8, 0x1, 0x0);
        gbc.writeMem(0x299c, { 0xcb, 0xae });
        gbc.writeMem(0x92f8, { 0x87 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x101c, gbc.sp());
        EXPECT(0x299e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x87, gbc.readMem(0x92f8));
        // CB AE 03DE
        gbc.setState(0xa605, 0x4236, 0xe930, 0x9cd7, 0xc2cd, 0xe7d4, 0x1, 0x0);
        gbc.writeMem(0xa605, { 0xcb, 0xae });
        gbc.writeMem(0xe7d4, { 0xd0 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x4236, gbc.sp());
        EXPECT(0xa607, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa605));
        EXPECT(0xae, gbc.readMem(0xa606));
        EXPECT(0xd0, gbc.readMem(0xe7d4));
        // CB AE 03DF
        gbc.setState(0x1d9e, 0x6e7a, 0xc10, 0x6a6d, 0x90ae, 0x7464, 0x1, 0x1);
        gbc.writeMem(0x1d9e, { 0xcb, 0xae });
        gbc.writeMem(0x7464, { 0x1c });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x6e7a, gbc.sp());
        EXPECT(0x1da0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB AE 03E0
        gbc.setState(0x7663, 0xcfcb, 0x6760, 0xfc25, 0xf509, 0x272, 0x1, 0x1);
        gbc.writeMem(0x272, { 0xc8 });
        gbc.writeMem(0x7663, { 0xcb, 0xae });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0xcfcb, gbc.sp());
        EXPECT(0x7665, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB AE 03E1
        gbc.setState(0x8df7, 0x3568, 0x970, 0x41f1, 0x1b6d, 0xf0f8, 0x0, 0x0);
        gbc.writeMem(0x8df7, { 0xcb, 0xae });
        gbc.writeMem(0xf0f8, { 0x75 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x3568, gbc.sp());
        EXPECT(0x8df9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8df7));
        EXPECT(0xae, gbc.readMem(0x8df8));
        EXPECT(0x55, gbc.readMem(0xf0f8));
        // CB AE 03E3
        gbc.setState(0x925, 0x1a7a, 0xf9d0, 0xcea0, 0x2dc, 0xd4f, 0x0, 0x1);
        gbc.writeMem(0x925, { 0xcb, 0xae });
        gbc.writeMem(0xd4f, { 0x8f });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x1a7a, gbc.sp());
        EXPECT(0x927, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB AE 03E4
        gbc.setState(0x529d, 0x5fa7, 0xe6f0, 0x2062, 0xeef8, 0xb6f1, 0x1, 0x1);
        gbc.writeMem(0x529d, { 0xcb, 0xae });
        gbc.writeMem(0xb6f1, { 0x93 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x5fa7, gbc.sp());
        EXPECT(0x529f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x93, gbc.readMem(0xb6f1));
        // CB AE 03E5
        gbc.setState(0x1a95, 0xf5a0, 0xb330, 0x46d5, 0x5195, 0xa881, 0x0, 0x1);
        gbc.writeMem(0x1a95, { 0xcb, 0xae });
        gbc.writeMem(0xa881, { 0x25 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0xf5a0, gbc.sp());
        EXPECT(0x1a97, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5, gbc.readMem(0xa881));
        // CB AE 03E6
        gbc.setState(0x8000, 0x372a, 0xa460, 0x4180, 0x45f9, 0x863b, 0x0, 0x1);
        gbc.writeMem(0x8000, { 0xcb, 0xae });
        gbc.writeMem(0x863b, { 0x73 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x372a, gbc.sp());
        EXPECT(0x8002, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8000));
        EXPECT(0xae, gbc.readMem(0x8001));
        EXPECT(0x53, gbc.readMem(0x863b));
        // CB AE 03E7
        gbc.setState(0x1929, 0xb19e, 0x2700, 0x304a, 0xdc4a, 0xfd14, 0x0, 0x1);
        gbc.writeMem(0x1929, { 0xcb, 0xae });
        gbc.writeMem(0xfd14, { 0x5e });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0xb19e, gbc.sp());
        EXPECT(0x192b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5e, gbc.readMem(0xfd14));
    }
