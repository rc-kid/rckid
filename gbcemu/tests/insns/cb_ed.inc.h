    TEST(gbcemu, opcode_cb_ed) {
        GBCEmu gbc{};
        uint8_t cartridge[0x8000];
        cartridge[0x149] = 0x02; // 8kb external RAM
        gbc.loadCartridge(new FlashGamePak(cartridge));
        // CB ED 0001
        gbc.setState(0x60cc, 0x3029, 0x28f0, 0x42e3, 0x39cc, 0xb891, 0x1, 0x1);
        gbc.writeMem(0x60cc, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x3029, gbc.sp());
        EXPECT(0x60ce, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB ED 0002
        gbc.setState(0x4535, 0xd9a7, 0x4190, 0xfdc0, 0xc6e1, 0x886e, 0x0, 0x1);
        gbc.writeMem(0x4535, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0xd9a7, gbc.sp());
        EXPECT(0x4537, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB ED 0003
        gbc.setState(0x180f, 0xafcb, 0xd2c0, 0x4ce1, 0xea2d, 0xb43c, 0x0, 0x1);
        gbc.writeMem(0x180f, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0xafcb, gbc.sp());
        EXPECT(0x1811, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB ED 0004
        gbc.setState(0x40d2, 0x3611, 0x1610, 0x328f, 0xe686, 0xdbed, 0x1, 0x0);
        gbc.writeMem(0x40d2, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x3611, gbc.sp());
        EXPECT(0x40d4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB ED 0006
        gbc.setState(0xd200, 0x28af, 0xc6a0, 0x841b, 0xf553, 0x6440, 0x0, 0x0);
        gbc.writeMem(0xd200, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x28af, gbc.sp());
        EXPECT(0xd202, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd200));
        EXPECT(0xed, gbc.readMem(0xd201));
        // CB ED 0007
        gbc.setState(0x4f61, 0x5fcf, 0x4ea0, 0x836, 0x5334, 0x785d, 0x0, 0x1);
        gbc.writeMem(0x4f61, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x5fcf, gbc.sp());
        EXPECT(0x4f63, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB ED 0008
        gbc.setState(0xe7c5, 0x986, 0x2930, 0x6330, 0x2432, 0x1d2c, 0x0, 0x0);
        gbc.writeMem(0xe7c5, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x986, gbc.sp());
        EXPECT(0xe7c7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe7c5));
        EXPECT(0xed, gbc.readMem(0xe7c6));
        // CB ED 0009
        gbc.setState(0x62a, 0x66d6, 0x1d0, 0x6591, 0xb71f, 0x48ec, 0x1, 0x1);
        gbc.writeMem(0x62a, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x66d6, gbc.sp());
        EXPECT(0x62c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB ED 000A
        gbc.setState(0x9eec, 0xda97, 0x7220, 0x9124, 0x4114, 0xf427, 0x1, 0x0);
        gbc.writeMem(0x9eec, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0xda97, gbc.sp());
        EXPECT(0x9eee, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9eec));
        EXPECT(0xed, gbc.readMem(0x9eed));
        // CB ED 000B
        gbc.setState(0xc28f, 0xc017, 0x8240, 0x18e1, 0xef68, 0xbf04, 0x1, 0x1);
        gbc.writeMem(0xc28f, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0xc017, gbc.sp());
        EXPECT(0xc291, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc28f));
        EXPECT(0xed, gbc.readMem(0xc290));
        // CB ED 000C
        gbc.setState(0xc683, 0xe64, 0x7a50, 0x46f5, 0xf434, 0x42ca, 0x1, 0x1);
        gbc.writeMem(0xc683, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0xe64, gbc.sp());
        EXPECT(0xc685, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc683));
        EXPECT(0xed, gbc.readMem(0xc684));
        // CB ED 000D
        gbc.setState(0x29eb, 0x820d, 0x46d0, 0x7f9d, 0x5701, 0x81ad, 0x0, 0x1);
        gbc.writeMem(0x29eb, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x820d, gbc.sp());
        EXPECT(0x29ed, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB ED 000E
        gbc.setState(0x783d, 0x641c, 0x6fe0, 0x43fc, 0xd2ad, 0x1704, 0x0, 0x0);
        gbc.writeMem(0x783d, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x641c, gbc.sp());
        EXPECT(0x783f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB ED 000F
        gbc.setState(0xca0c, 0xe74d, 0xa70, 0xba4c, 0x4bde, 0xcd19, 0x0, 0x1);
        gbc.writeMem(0xca0c, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0xe74d, gbc.sp());
        EXPECT(0xca0e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xca0c));
        EXPECT(0xed, gbc.readMem(0xca0d));
        // CB ED 0010
        gbc.setState(0xcf24, 0x57c0, 0x2050, 0x8393, 0x5fe2, 0x8d44, 0x1, 0x1);
        gbc.writeMem(0xcf24, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x57c0, gbc.sp());
        EXPECT(0xcf26, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcf24));
        EXPECT(0xed, gbc.readMem(0xcf25));
        // CB ED 0011
        gbc.setState(0x7c56, 0xf96c, 0xbef0, 0xcefa, 0xb21b, 0x4159, 0x1, 0x1);
        gbc.writeMem(0x7c56, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0xf96c, gbc.sp());
        EXPECT(0x7c58, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB ED 0012
        gbc.setState(0xedd6, 0xf2f5, 0xfa10, 0x2251, 0x2ad6, 0x6430, 0x1, 0x1);
        gbc.writeMem(0xedd6, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0xf2f5, gbc.sp());
        EXPECT(0xedd8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xedd6));
        EXPECT(0xed, gbc.readMem(0xedd7));
        // CB ED 0013
        gbc.setState(0x539a, 0x7cf8, 0xe3d0, 0xc3ba, 0x114a, 0xfe67, 0x1, 0x0);
        gbc.writeMem(0x539a, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x7cf8, gbc.sp());
        EXPECT(0x539c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB ED 0014
        gbc.setState(0x2911, 0x85e5, 0xc230, 0x2d92, 0x9c7b, 0x8949, 0x1, 0x1);
        gbc.writeMem(0x2911, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0x85e5, gbc.sp());
        EXPECT(0x2913, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB ED 0015
        gbc.setState(0x699f, 0x4d5b, 0x4110, 0xa7af, 0xcb70, 0x39e9, 0x0, 0x0);
        gbc.writeMem(0x699f, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x4d5b, gbc.sp());
        EXPECT(0x69a1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB ED 0016
        gbc.setState(0xd7d8, 0x6450, 0xa250, 0x4b7, 0x7cc8, 0xa06d, 0x0, 0x1);
        gbc.writeMem(0xd7d8, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x6450, gbc.sp());
        EXPECT(0xd7da, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd7d8));
        EXPECT(0xed, gbc.readMem(0xd7d9));
        // CB ED 0017
        gbc.setState(0x88c4, 0x2831, 0x7dc0, 0x5fbf, 0x2fe, 0x3ae0, 0x1, 0x1);
        gbc.writeMem(0x88c4, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x2831, gbc.sp());
        EXPECT(0x88c6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x88c4));
        EXPECT(0xed, gbc.readMem(0x88c5));
        // CB ED 0018
        gbc.setState(0x3bf9, 0xe3c, 0xe290, 0x35b2, 0x215b, 0x6e6e, 0x1, 0x1);
        gbc.writeMem(0x3bf9, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0xe3c, gbc.sp());
        EXPECT(0x3bfb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB ED 0019
        gbc.setState(0x8406, 0x984c, 0x4070, 0x6f3e, 0x4174, 0xa677, 0x1, 0x1);
        gbc.writeMem(0x8406, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x984c, gbc.sp());
        EXPECT(0x8408, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8406));
        EXPECT(0xed, gbc.readMem(0x8407));
        // CB ED 001A
        gbc.setState(0xe585, 0xc893, 0xf0f0, 0x2ca, 0xefc3, 0xcab1, 0x1, 0x1);
        gbc.writeMem(0xe585, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0xc893, gbc.sp());
        EXPECT(0xe587, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe585));
        EXPECT(0xed, gbc.readMem(0xe586));
        // CB ED 001B
        gbc.setState(0xbfaf, 0xda9f, 0x7d00, 0xa811, 0xca55, 0x73b, 0x0, 0x0);
        gbc.writeMem(0xbfaf, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0xda9f, gbc.sp());
        EXPECT(0xbfb1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbfaf));
        EXPECT(0xed, gbc.readMem(0xbfb0));
        // CB ED 001C
        gbc.setState(0xb43e, 0x10fb, 0xd370, 0x6f1a, 0x91ef, 0x4fd8, 0x1, 0x1);
        gbc.writeMem(0xb43e, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x10fb, gbc.sp());
        EXPECT(0xb440, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb43e));
        EXPECT(0xed, gbc.readMem(0xb43f));
        // CB ED 001D
        gbc.setState(0x1089, 0x69d, 0x8580, 0x1aa2, 0x783c, 0x2504, 0x0, 0x1);
        gbc.writeMem(0x1089, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x69d, gbc.sp());
        EXPECT(0x108b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB ED 001E
        gbc.setState(0x98d3, 0x2c4, 0xcfe0, 0x6a2e, 0xe3ce, 0xfa7, 0x0, 0x1);
        gbc.writeMem(0x98d3, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x2c4, gbc.sp());
        EXPECT(0x98d5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x98d3));
        EXPECT(0xed, gbc.readMem(0x98d4));
        // CB ED 001F
        gbc.setState(0xd3a3, 0x8fdb, 0xfc80, 0x79dc, 0xdd26, 0x4d2d, 0x1, 0x1);
        gbc.writeMem(0xd3a3, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x8fdb, gbc.sp());
        EXPECT(0xd3a5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd3a3));
        EXPECT(0xed, gbc.readMem(0xd3a4));
        // CB ED 0021
        gbc.setState(0x3b4c, 0x2d8, 0x4190, 0xe6a8, 0xb5ec, 0x7529, 0x0, 0x0);
        gbc.writeMem(0x3b4c, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x2d8, gbc.sp());
        EXPECT(0x3b4e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB ED 0022
        gbc.setState(0x8710, 0x2620, 0x56a0, 0xe68d, 0xae42, 0x78ba, 0x0, 0x1);
        gbc.writeMem(0x8710, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0x2620, gbc.sp());
        EXPECT(0x8712, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8710));
        EXPECT(0xed, gbc.readMem(0x8711));
        // CB ED 0023
        gbc.setState(0xa845, 0xd28f, 0x8670, 0xfb9b, 0xd9e8, 0xbe51, 0x0, 0x0);
        gbc.writeMem(0xa845, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0xd28f, gbc.sp());
        EXPECT(0xa847, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa845));
        EXPECT(0xed, gbc.readMem(0xa846));
        // CB ED 0024
        gbc.setState(0x8ce8, 0x4ff2, 0xf6e0, 0xc2b5, 0xb59d, 0xceea, 0x0, 0x1);
        gbc.writeMem(0x8ce8, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x4ff2, gbc.sp());
        EXPECT(0x8cea, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8ce8));
        EXPECT(0xed, gbc.readMem(0x8ce9));
        // CB ED 0026
        gbc.setState(0x4dec, 0x258f, 0xdf40, 0x3318, 0xf9b6, 0xe49e, 0x0, 0x1);
        gbc.writeMem(0x4dec, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0x258f, gbc.sp());
        EXPECT(0x4dee, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB ED 0027
        gbc.setState(0x5e7c, 0xdf68, 0x6a50, 0x52a7, 0x217, 0x801e, 0x0, 0x1);
        gbc.writeMem(0x5e7c, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0xdf68, gbc.sp());
        EXPECT(0x5e7e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB ED 0028
        gbc.setState(0x1c2f, 0x3ff4, 0xa0c0, 0x4904, 0x50c4, 0x5446, 0x0, 0x1);
        gbc.writeMem(0x1c2f, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x3ff4, gbc.sp());
        EXPECT(0x1c31, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB ED 0029
        gbc.setState(0x6a56, 0xbc4f, 0x3850, 0x26b6, 0xfe2b, 0x6b8c, 0x1, 0x0);
        gbc.writeMem(0x6a56, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0xbc4f, gbc.sp());
        EXPECT(0x6a58, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB ED 002A
        gbc.setState(0x7aac, 0xc8b5, 0x7ae0, 0xc11a, 0xfd03, 0xf1d1, 0x1, 0x0);
        gbc.writeMem(0x7aac, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0xc8b5, gbc.sp());
        EXPECT(0x7aae, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB ED 002B
        gbc.setState(0xaafb, 0xca76, 0x9180, 0x3928, 0x555a, 0x97d6, 0x0, 0x0);
        gbc.writeMem(0xaafb, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0xca76, gbc.sp());
        EXPECT(0xaafd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaafb));
        EXPECT(0xed, gbc.readMem(0xaafc));
        // CB ED 002C
        gbc.setState(0xc231, 0x8800, 0x6fa0, 0x16ee, 0x911c, 0x58cb, 0x1, 0x0);
        gbc.writeMem(0xc231, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x8800, gbc.sp());
        EXPECT(0xc233, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc231));
        EXPECT(0xed, gbc.readMem(0xc232));
        // CB ED 002D
        gbc.setState(0xbddc, 0x144f, 0x6500, 0xb9fc, 0x87e5, 0x4b14, 0x0, 0x0);
        gbc.writeMem(0xbddc, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x144f, gbc.sp());
        EXPECT(0xbdde, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbddc));
        EXPECT(0xed, gbc.readMem(0xbddd));
        // CB ED 002E
        gbc.setState(0x4b0e, 0xa575, 0xb500, 0x2cdd, 0x419e, 0x46bc, 0x1, 0x0);
        gbc.writeMem(0x4b0e, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0xa575, gbc.sp());
        EXPECT(0x4b10, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB ED 0030
        gbc.setState(0x3aaa, 0xd55b, 0xe8f0, 0x5a4d, 0xe850, 0x44c2, 0x1, 0x1);
        gbc.writeMem(0x3aaa, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0xd55b, gbc.sp());
        EXPECT(0x3aac, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB ED 0031
        gbc.setState(0x3214, 0x95ff, 0x5950, 0xd747, 0x8ef2, 0x3d2b, 0x0, 0x1);
        gbc.writeMem(0x3214, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x95ff, gbc.sp());
        EXPECT(0x3216, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB ED 0032
        gbc.setState(0xe35e, 0x9f04, 0xcc30, 0x4816, 0x98ef, 0xfdfa, 0x1, 0x0);
        gbc.writeMem(0xe35e, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0x9f04, gbc.sp());
        EXPECT(0xe360, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe35e));
        EXPECT(0xed, gbc.readMem(0xe35f));
        // CB ED 0033
        gbc.setState(0x5691, 0x2ecc, 0x2290, 0x68de, 0x90c8, 0xd7b2, 0x0, 0x0);
        gbc.writeMem(0x5691, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x2ecc, gbc.sp());
        EXPECT(0x5693, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB ED 0034
        gbc.setState(0x6411, 0xe9af, 0x3350, 0xaf0c, 0x2911, 0xacda, 0x1, 0x0);
        gbc.writeMem(0x6411, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0xe9af, gbc.sp());
        EXPECT(0x6413, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB ED 0035
        gbc.setState(0x9efa, 0xdf95, 0x8ce0, 0xefe8, 0xaa80, 0x1511, 0x0, 0x1);
        gbc.writeMem(0x9efa, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0xdf95, gbc.sp());
        EXPECT(0x9efc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9efa));
        EXPECT(0xed, gbc.readMem(0x9efb));
        // CB ED 0036
        gbc.setState(0xd6ee, 0xeee1, 0xcda0, 0x48ad, 0x12e7, 0xc6d, 0x1, 0x1);
        gbc.writeMem(0xd6ee, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0xeee1, gbc.sp());
        EXPECT(0xd6f0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd6ee));
        EXPECT(0xed, gbc.readMem(0xd6ef));
        // CB ED 0037
        gbc.setState(0x3ee5, 0xd6a9, 0xbab0, 0xecec, 0xf5a2, 0x75e5, 0x1, 0x1);
        gbc.writeMem(0x3ee5, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0xd6a9, gbc.sp());
        EXPECT(0x3ee7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB ED 0038
        gbc.setState(0x557b, 0x5f3c, 0xff20, 0xfd4c, 0xba45, 0xf447, 0x1, 0x1);
        gbc.writeMem(0x557b, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x5f3c, gbc.sp());
        EXPECT(0x557d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB ED 0039
        gbc.setState(0x4fdc, 0x604c, 0x2ea0, 0xa7b2, 0x970e, 0xdf8a, 0x1, 0x1);
        gbc.writeMem(0x4fdc, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x604c, gbc.sp());
        EXPECT(0x4fde, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB ED 003A
        gbc.setState(0x761c, 0x3d02, 0x72d0, 0x54c6, 0xe09d, 0x6599, 0x0, 0x1);
        gbc.writeMem(0x761c, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x3d02, gbc.sp());
        EXPECT(0x761e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB ED 003B
        gbc.setState(0x211e, 0xd817, 0xe210, 0xad2e, 0xe82c, 0x9d29, 0x0, 0x0);
        gbc.writeMem(0x211e, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0xd817, gbc.sp());
        EXPECT(0x2120, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB ED 003C
        gbc.setState(0x4741, 0x8304, 0x22a0, 0x6ea6, 0x4748, 0xb6d8, 0x0, 0x1);
        gbc.writeMem(0x4741, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x8304, gbc.sp());
        EXPECT(0x4743, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB ED 003D
        gbc.setState(0xa70b, 0x8f82, 0xf660, 0x582c, 0x10a3, 0xc044, 0x0, 0x0);
        gbc.writeMem(0xa70b, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x8f82, gbc.sp());
        EXPECT(0xa70d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa70b));
        EXPECT(0xed, gbc.readMem(0xa70c));
        // CB ED 003E
        gbc.setState(0x98c, 0xadc2, 0xd540, 0x30b3, 0x7de5, 0xf3b3, 0x0, 0x0);
        gbc.writeMem(0x98c, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0xadc2, gbc.sp());
        EXPECT(0x98e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB ED 003F
        gbc.setState(0x8658, 0xefe, 0x38e0, 0xf611, 0xfcef, 0xa4e, 0x0, 0x0);
        gbc.writeMem(0x8658, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0xefe, gbc.sp());
        EXPECT(0x865a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8658));
        EXPECT(0xed, gbc.readMem(0x8659));
        // CB ED 0040
        gbc.setState(0x7735, 0x2fd5, 0x1980, 0x830, 0x1dad, 0x4f4b, 0x1, 0x1);
        gbc.writeMem(0x7735, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x2fd5, gbc.sp());
        EXPECT(0x7737, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB ED 0041
        gbc.setState(0x686d, 0xb10a, 0xac00, 0x5f98, 0xf215, 0x2934, 0x1, 0x1);
        gbc.writeMem(0x686d, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0xb10a, gbc.sp());
        EXPECT(0x686f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB ED 0042
        gbc.setState(0x356f, 0x7762, 0xc610, 0xab4e, 0xa0c4, 0x1af, 0x1, 0x1);
        gbc.writeMem(0x356f, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x7762, gbc.sp());
        EXPECT(0x3571, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB ED 0043
        gbc.setState(0x7a84, 0xc093, 0x6290, 0x3b1f, 0xa3ff, 0xe52, 0x1, 0x1);
        gbc.writeMem(0x7a84, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0xc093, gbc.sp());
        EXPECT(0x7a86, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB ED 0044
        gbc.setState(0x7f8c, 0xfdab, 0xbf0, 0x5c67, 0x2fdb, 0x20cb, 0x0, 0x0);
        gbc.writeMem(0x7f8c, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0xfdab, gbc.sp());
        EXPECT(0x7f8e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB ED 0045
        gbc.setState(0x4a3, 0x74e1, 0x60a0, 0x3657, 0x7843, 0x844d, 0x1, 0x1);
        gbc.writeMem(0x4a3, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x74e1, gbc.sp());
        EXPECT(0x4a5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB ED 0046
        gbc.setState(0xabf6, 0x91be, 0xd380, 0xd95c, 0xadd7, 0x735c, 0x1, 0x1);
        gbc.writeMem(0xabf6, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x91be, gbc.sp());
        EXPECT(0xabf8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xabf6));
        EXPECT(0xed, gbc.readMem(0xabf7));
        // CB ED 0047
        gbc.setState(0xc3de, 0x29bd, 0xd670, 0x8527, 0x312, 0x9664, 0x1, 0x0);
        gbc.writeMem(0xc3de, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x29bd, gbc.sp());
        EXPECT(0xc3e0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc3de));
        EXPECT(0xed, gbc.readMem(0xc3df));
        // CB ED 0048
        gbc.setState(0xa44d, 0x9998, 0x2310, 0x90c6, 0x22e6, 0xebe4, 0x0, 0x1);
        gbc.writeMem(0xa44d, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x9998, gbc.sp());
        EXPECT(0xa44f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa44d));
        EXPECT(0xed, gbc.readMem(0xa44e));
        // CB ED 0049
        gbc.setState(0x6508, 0x2a5a, 0xe980, 0x93ba, 0xfd7d, 0x76a2, 0x0, 0x0);
        gbc.writeMem(0x6508, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x2a5a, gbc.sp());
        EXPECT(0x650a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB ED 004A
        gbc.setState(0x958e, 0x2f9a, 0xee10, 0xbf9a, 0xde80, 0x1c30, 0x0, 0x1);
        gbc.writeMem(0x958e, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x2f9a, gbc.sp());
        EXPECT(0x9590, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x958e));
        EXPECT(0xed, gbc.readMem(0x958f));
        // CB ED 004B
        gbc.setState(0x3943, 0x744e, 0x3400, 0x5ef1, 0xb55a, 0xdc9, 0x0, 0x0);
        gbc.writeMem(0x3943, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x744e, gbc.sp());
        EXPECT(0x3945, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB ED 004C
        gbc.setState(0x251c, 0x2d0f, 0x9cb0, 0xf675, 0x2072, 0x5e3a, 0x1, 0x0);
        gbc.writeMem(0x251c, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x2d0f, gbc.sp());
        EXPECT(0x251e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB ED 004D
        gbc.setState(0x2eb5, 0xa91f, 0x5330, 0x8770, 0xf34b, 0x8152, 0x1, 0x1);
        gbc.writeMem(0x2eb5, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0xa91f, gbc.sp());
        EXPECT(0x2eb7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB ED 004E
        gbc.setState(0xdbf, 0xc37a, 0x7dd0, 0x3632, 0x40df, 0x2c18, 0x0, 0x1);
        gbc.writeMem(0xdbf, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0xc37a, gbc.sp());
        EXPECT(0xdc1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB ED 004F
        gbc.setState(0x1794, 0x8745, 0x6ad0, 0xefdc, 0xc515, 0xe1b3, 0x1, 0x0);
        gbc.writeMem(0x1794, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x8745, gbc.sp());
        EXPECT(0x1796, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB ED 0050
        gbc.setState(0x2999, 0x3ca1, 0xb0a0, 0x4caf, 0x7b0, 0x623, 0x0, 0x0);
        gbc.writeMem(0x2999, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x3ca1, gbc.sp());
        EXPECT(0x299b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB ED 0051
        gbc.setState(0x2585, 0x9dbc, 0x7630, 0x7d35, 0xfa9f, 0x9dab, 0x0, 0x0);
        gbc.writeMem(0x2585, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x9dbc, gbc.sp());
        EXPECT(0x2587, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB ED 0052
        gbc.setState(0x73df, 0x3510, 0xac00, 0x86c5, 0x133f, 0x9b0b, 0x1, 0x1);
        gbc.writeMem(0x73df, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x3510, gbc.sp());
        EXPECT(0x73e1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB ED 0053
        gbc.setState(0xa27d, 0x8b16, 0xe1b0, 0xe6c9, 0x6032, 0xafe5, 0x1, 0x1);
        gbc.writeMem(0xa27d, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x8b16, gbc.sp());
        EXPECT(0xa27f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa27d));
        EXPECT(0xed, gbc.readMem(0xa27e));
        // CB ED 0054
        gbc.setState(0x4f99, 0x9d8f, 0xde0, 0xe1d4, 0x831d, 0x6fcc, 0x1, 0x1);
        gbc.writeMem(0x4f99, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x9d8f, gbc.sp());
        EXPECT(0x4f9b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB ED 0055
        gbc.setState(0xbd1a, 0xf33f, 0xf20, 0x8091, 0xd8a1, 0xb944, 0x0, 0x1);
        gbc.writeMem(0xbd1a, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0xf33f, gbc.sp());
        EXPECT(0xbd1c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbd1a));
        EXPECT(0xed, gbc.readMem(0xbd1b));
        // CB ED 0056
        gbc.setState(0xccec, 0x7f3e, 0xcc80, 0xdfab, 0xb3f1, 0x62cd, 0x1, 0x0);
        gbc.writeMem(0xccec, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x7f3e, gbc.sp());
        EXPECT(0xccee, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xccec));
        EXPECT(0xed, gbc.readMem(0xcced));
        // CB ED 0057
        gbc.setState(0x9b94, 0xbd9c, 0x76f0, 0xdceb, 0x9bbc, 0xd721, 0x1, 0x0);
        gbc.writeMem(0x9b94, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0xbd9c, gbc.sp());
        EXPECT(0x9b96, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9b94));
        EXPECT(0xed, gbc.readMem(0x9b95));
        // CB ED 0058
        gbc.setState(0x24c8, 0x4c0b, 0x1390, 0x1c74, 0x4a65, 0xcc3b, 0x0, 0x1);
        gbc.writeMem(0x24c8, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x4c0b, gbc.sp());
        EXPECT(0x24ca, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB ED 0059
        gbc.setState(0xd505, 0x6dc8, 0x1cb0, 0xa4f1, 0x3f7e, 0x65cb, 0x1, 0x0);
        gbc.writeMem(0xd505, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x6dc8, gbc.sp());
        EXPECT(0xd507, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd505));
        EXPECT(0xed, gbc.readMem(0xd506));
        // CB ED 005A
        gbc.setState(0x2f52, 0xe300, 0x4e20, 0x5834, 0xee1e, 0xd36b, 0x1, 0x0);
        gbc.writeMem(0x2f52, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0xe300, gbc.sp());
        EXPECT(0x2f54, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB ED 005B
        gbc.setState(0x593e, 0x3004, 0x2050, 0x6d65, 0x6d8d, 0xbf84, 0x0, 0x0);
        gbc.writeMem(0x593e, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x3004, gbc.sp());
        EXPECT(0x5940, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB ED 005C
        gbc.setState(0x2e54, 0x5975, 0xb430, 0xdab7, 0x3a3f, 0xaf3d, 0x1, 0x0);
        gbc.writeMem(0x2e54, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x5975, gbc.sp());
        EXPECT(0x2e56, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB ED 005D
        gbc.setState(0x4603, 0x7a26, 0x7ef0, 0x97f7, 0x3df7, 0x4cb4, 0x1, 0x0);
        gbc.writeMem(0x4603, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x7a26, gbc.sp());
        EXPECT(0x4605, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB ED 005E
        gbc.setState(0x4bf9, 0xfdbf, 0x3750, 0xce3b, 0xd60b, 0xc197, 0x0, 0x0);
        gbc.writeMem(0x4bf9, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0xfdbf, gbc.sp());
        EXPECT(0x4bfb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB ED 005F
        gbc.setState(0xd6ed, 0x1c3f, 0x67c0, 0x2b64, 0x594a, 0x5250, 0x1, 0x0);
        gbc.writeMem(0xd6ed, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x1c3f, gbc.sp());
        EXPECT(0xd6ef, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd6ed));
        EXPECT(0xed, gbc.readMem(0xd6ee));
        // CB ED 0060
        gbc.setState(0x91c, 0x759a, 0x5c30, 0xc18a, 0x9ed2, 0xc811, 0x0, 0x1);
        gbc.writeMem(0x91c, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x759a, gbc.sp());
        EXPECT(0x91e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB ED 0061
        gbc.setState(0x5c51, 0xef9c, 0xdd30, 0xb5a2, 0x9e30, 0xaa71, 0x1, 0x0);
        gbc.writeMem(0x5c51, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0xef9c, gbc.sp());
        EXPECT(0x5c53, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB ED 0062
        gbc.setState(0x41c5, 0x912a, 0xd540, 0x8ba7, 0xe48c, 0x304a, 0x1, 0x1);
        gbc.writeMem(0x41c5, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x912a, gbc.sp());
        EXPECT(0x41c7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB ED 0063
        gbc.setState(0xe8f5, 0xb931, 0x2850, 0xeaff, 0xa2c8, 0x17e, 0x1, 0x0);
        gbc.writeMem(0xe8f5, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0xb931, gbc.sp());
        EXPECT(0xe8f7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe8f5));
        EXPECT(0xed, gbc.readMem(0xe8f6));
        // CB ED 0064
        gbc.setState(0x6bfa, 0x8f42, 0xe430, 0xe1, 0xebc4, 0x5f1e, 0x1, 0x0);
        gbc.writeMem(0x6bfa, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x8f42, gbc.sp());
        EXPECT(0x6bfc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB ED 0065
        gbc.setState(0x4062, 0x70a0, 0x2a80, 0xd0b0, 0x4add, 0xd240, 0x0, 0x1);
        gbc.writeMem(0x4062, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x70a0, gbc.sp());
        EXPECT(0x4064, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB ED 0066
        gbc.setState(0x46cd, 0xf0ab, 0x6550, 0xc5fd, 0x6857, 0x3cca, 0x1, 0x0);
        gbc.writeMem(0x46cd, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0xf0ab, gbc.sp());
        EXPECT(0x46cf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB ED 0067
        gbc.setState(0x87be, 0x1ac9, 0x5350, 0x8da3, 0x5f59, 0xcd52, 0x1, 0x0);
        gbc.writeMem(0x87be, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x1ac9, gbc.sp());
        EXPECT(0x87c0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x87be));
        EXPECT(0xed, gbc.readMem(0x87bf));
        // CB ED 0068
        gbc.setState(0x8ea7, 0xe19a, 0xfa70, 0xc558, 0x1142, 0x6e28, 0x0, 0x1);
        gbc.writeMem(0x8ea7, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0xe19a, gbc.sp());
        EXPECT(0x8ea9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8ea7));
        EXPECT(0xed, gbc.readMem(0x8ea8));
        // CB ED 0069
        gbc.setState(0xd196, 0xf103, 0x7a0, 0x7c58, 0x70cb, 0x5f19, 0x1, 0x1);
        gbc.writeMem(0xd196, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0xf103, gbc.sp());
        EXPECT(0xd198, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd196));
        EXPECT(0xed, gbc.readMem(0xd197));
        // CB ED 006A
        gbc.setState(0xd23, 0xe29f, 0xdc80, 0xc4df, 0xf7af, 0x4e05, 0x0, 0x0);
        gbc.writeMem(0xd23, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0xe29f, gbc.sp());
        EXPECT(0xd25, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB ED 006B
        gbc.setState(0x7a6d, 0xd473, 0xdee0, 0xc0b4, 0x9187, 0x3226, 0x1, 0x0);
        gbc.writeMem(0x7a6d, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0xd473, gbc.sp());
        EXPECT(0x7a6f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB ED 006C
        gbc.setState(0xbc9, 0x77d1, 0x35a0, 0xc12b, 0xd1f6, 0x3362, 0x0, 0x0);
        gbc.writeMem(0xbc9, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x77d1, gbc.sp());
        EXPECT(0xbcb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB ED 006D
        gbc.setState(0xb4b0, 0xfe2e, 0xb340, 0xa0e7, 0x27f, 0x542b, 0x1, 0x1);
        gbc.writeMem(0xb4b0, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0xfe2e, gbc.sp());
        EXPECT(0xb4b2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb4b0));
        EXPECT(0xed, gbc.readMem(0xb4b1));
        // CB ED 006E
        gbc.setState(0x7598, 0x4cae, 0xa4b0, 0xd11c, 0x2634, 0x41b7, 0x1, 0x0);
        gbc.writeMem(0x7598, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x4cae, gbc.sp());
        EXPECT(0x759a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB ED 0070
        gbc.setState(0x7d22, 0x8322, 0x2c50, 0x6fdf, 0x7646, 0xbfcf, 0x0, 0x1);
        gbc.writeMem(0x7d22, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x8322, gbc.sp());
        EXPECT(0x7d24, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB ED 0071
        gbc.setState(0x4153, 0x1700, 0x4050, 0xe5fd, 0xdeac, 0x35, 0x1, 0x1);
        gbc.writeMem(0x4153, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x1700, gbc.sp());
        EXPECT(0x4155, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB ED 0072
        gbc.setState(0x256d, 0x99e8, 0xf800, 0x2d88, 0x759a, 0x1ece, 0x0, 0x0);
        gbc.writeMem(0x256d, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x99e8, gbc.sp());
        EXPECT(0x256f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB ED 0073
        gbc.setState(0x70e0, 0x5e0a, 0x6020, 0x1f29, 0x236f, 0x4051, 0x0, 0x1);
        gbc.writeMem(0x70e0, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x5e0a, gbc.sp());
        EXPECT(0x70e2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB ED 0074
        gbc.setState(0x8d65, 0x3286, 0x71e0, 0xc850, 0x49b9, 0xd04f, 0x1, 0x1);
        gbc.writeMem(0x8d65, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x3286, gbc.sp());
        EXPECT(0x8d67, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8d65));
        EXPECT(0xed, gbc.readMem(0x8d66));
        // CB ED 0076
        gbc.setState(0x3a62, 0x219e, 0x2d0, 0x2a51, 0xf287, 0xb39b, 0x0, 0x1);
        gbc.writeMem(0x3a62, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x219e, gbc.sp());
        EXPECT(0x3a64, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB ED 0077
        gbc.setState(0x469b, 0x4aab, 0x1a20, 0x5a55, 0xa2c3, 0x212d, 0x1, 0x1);
        gbc.writeMem(0x469b, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x4aab, gbc.sp());
        EXPECT(0x469d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB ED 0078
        gbc.setState(0x80d7, 0x124c, 0x5c60, 0x1d1c, 0x975e, 0x9f05, 0x1, 0x1);
        gbc.writeMem(0x80d7, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x124c, gbc.sp());
        EXPECT(0x80d9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x80d7));
        EXPECT(0xed, gbc.readMem(0x80d8));
        // CB ED 0079
        gbc.setState(0x2886, 0x704c, 0xf060, 0xf154, 0xe1ee, 0x3294, 0x0, 0x0);
        gbc.writeMem(0x2886, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x704c, gbc.sp());
        EXPECT(0x2888, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB ED 007A
        gbc.setState(0xde9a, 0xa0e8, 0xd2e0, 0x76ea, 0x7c0b, 0x7052, 0x0, 0x0);
        gbc.writeMem(0xde9a, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0xa0e8, gbc.sp());
        EXPECT(0xde9c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xde9a));
        EXPECT(0xed, gbc.readMem(0xde9b));
        // CB ED 007C
        gbc.setState(0xdbca, 0x7cda, 0x7170, 0xd6ff, 0xc9f1, 0xe1a4, 0x0, 0x1);
        gbc.writeMem(0xdbca, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x7cda, gbc.sp());
        EXPECT(0xdbcc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdbca));
        EXPECT(0xed, gbc.readMem(0xdbcb));
        // CB ED 007D
        gbc.setState(0x778f, 0x65a9, 0x2460, 0xe1f7, 0x52bc, 0x52cb, 0x0, 0x1);
        gbc.writeMem(0x778f, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x65a9, gbc.sp());
        EXPECT(0x7791, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB ED 007E
        gbc.setState(0xf27, 0x243f, 0xd320, 0x292c, 0xd806, 0x60ee, 0x1, 0x1);
        gbc.writeMem(0xf27, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x243f, gbc.sp());
        EXPECT(0xf29, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB ED 007F
        gbc.setState(0xb195, 0xbd02, 0xd700, 0x69c3, 0xdf5f, 0x1092, 0x1, 0x0);
        gbc.writeMem(0xb195, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0xbd02, gbc.sp());
        EXPECT(0xb197, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb195));
        EXPECT(0xed, gbc.readMem(0xb196));
        // CB ED 0080
        gbc.setState(0x5fab, 0x3edd, 0x2f10, 0xc8a6, 0x93f9, 0x4299, 0x1, 0x1);
        gbc.writeMem(0x5fab, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x3edd, gbc.sp());
        EXPECT(0x5fad, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB ED 0081
        gbc.setState(0x3786, 0x222a, 0xae60, 0xf4bd, 0x8df0, 0x9c16, 0x0, 0x0);
        gbc.writeMem(0x3786, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x222a, gbc.sp());
        EXPECT(0x3788, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB ED 0083
        gbc.setState(0xdd17, 0xf869, 0xf050, 0x9813, 0x5b44, 0x24b2, 0x1, 0x1);
        gbc.writeMem(0xdd17, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0xf869, gbc.sp());
        EXPECT(0xdd19, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdd17));
        EXPECT(0xed, gbc.readMem(0xdd18));
        // CB ED 0084
        gbc.setState(0x307f, 0xeca1, 0xbf60, 0xf092, 0x607, 0x8109, 0x1, 0x1);
        gbc.writeMem(0x307f, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0xeca1, gbc.sp());
        EXPECT(0x3081, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB ED 0085
        gbc.setState(0xd9f3, 0xebda, 0x8db0, 0x6fd9, 0x18c2, 0x7d1f, 0x1, 0x1);
        gbc.writeMem(0xd9f3, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0xebda, gbc.sp());
        EXPECT(0xd9f5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd9f3));
        EXPECT(0xed, gbc.readMem(0xd9f4));
        // CB ED 0086
        gbc.setState(0x1483, 0xa831, 0x9e00, 0xb0e0, 0xaad1, 0xf67b, 0x1, 0x1);
        gbc.writeMem(0x1483, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0xa831, gbc.sp());
        EXPECT(0x1485, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB ED 0087
        gbc.setState(0xaf3b, 0xb975, 0xbff0, 0xb985, 0xc0c4, 0x6992, 0x0, 0x1);
        gbc.writeMem(0xaf3b, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0xb975, gbc.sp());
        EXPECT(0xaf3d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaf3b));
        EXPECT(0xed, gbc.readMem(0xaf3c));
        // CB ED 0088
        gbc.setState(0x8ab5, 0xa32f, 0x6980, 0x1a04, 0x1432, 0x660b, 0x0, 0x0);
        gbc.writeMem(0x8ab5, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0xa32f, gbc.sp());
        EXPECT(0x8ab7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8ab5));
        EXPECT(0xed, gbc.readMem(0x8ab6));
        // CB ED 0089
        gbc.setState(0x34a6, 0x1ce, 0xb7f0, 0xee8f, 0x99a4, 0x275e, 0x1, 0x1);
        gbc.writeMem(0x34a6, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0x1ce, gbc.sp());
        EXPECT(0x34a8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB ED 008A
        gbc.setState(0x52bc, 0xe5aa, 0xf9f0, 0x24d5, 0xd5b1, 0x1df2, 0x1, 0x1);
        gbc.writeMem(0x52bc, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0xe5aa, gbc.sp());
        EXPECT(0x52be, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB ED 008B
        gbc.setState(0xe895, 0x6c35, 0xf870, 0x47c3, 0x9c96, 0x6f01, 0x1, 0x1);
        gbc.writeMem(0xe895, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x6c35, gbc.sp());
        EXPECT(0xe897, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe895));
        EXPECT(0xed, gbc.readMem(0xe896));
        // CB ED 008C
        gbc.setState(0xb28, 0xbb84, 0x9a40, 0xfcb2, 0xffdd, 0x3c5f, 0x1, 0x0);
        gbc.writeMem(0xb28, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0xbb84, gbc.sp());
        EXPECT(0xb2a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB ED 008D
        gbc.setState(0xba35, 0x3987, 0xb150, 0x44da, 0x31f8, 0x994d, 0x1, 0x1);
        gbc.writeMem(0xba35, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x3987, gbc.sp());
        EXPECT(0xba37, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xba35));
        EXPECT(0xed, gbc.readMem(0xba36));
        // CB ED 008E
        gbc.setState(0x51f7, 0x82f6, 0x7210, 0xf058, 0xb49f, 0x446e, 0x0, 0x1);
        gbc.writeMem(0x51f7, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x82f6, gbc.sp());
        EXPECT(0x51f9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB ED 008F
        gbc.setState(0x4d37, 0x3eaa, 0x7470, 0xad29, 0xef1c, 0x74ca, 0x1, 0x0);
        gbc.writeMem(0x4d37, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x3eaa, gbc.sp());
        EXPECT(0x4d39, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB ED 0090
        gbc.setState(0xcae8, 0xf5e3, 0x8d90, 0xac6f, 0x2326, 0x31d2, 0x1, 0x1);
        gbc.writeMem(0xcae8, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0xf5e3, gbc.sp());
        EXPECT(0xcaea, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcae8));
        EXPECT(0xed, gbc.readMem(0xcae9));
        // CB ED 0091
        gbc.setState(0xefa1, 0xfc00, 0x2440, 0x5528, 0xf929, 0x4ed6, 0x0, 0x1);
        gbc.writeMem(0xefa1, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0xfc00, gbc.sp());
        EXPECT(0xefa3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xefa1));
        EXPECT(0xed, gbc.readMem(0xefa2));
        // CB ED 0092
        gbc.setState(0x8aa4, 0xdcf6, 0x9b70, 0x2dd, 0x68ba, 0x31f3, 0x1, 0x1);
        gbc.writeMem(0x8aa4, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0xdcf6, gbc.sp());
        EXPECT(0x8aa6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8aa4));
        EXPECT(0xed, gbc.readMem(0x8aa5));
        // CB ED 0093
        gbc.setState(0x93df, 0xdcd3, 0x8830, 0x9e3a, 0xed31, 0xe903, 0x1, 0x1);
        gbc.writeMem(0x93df, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0xdcd3, gbc.sp());
        EXPECT(0x93e1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x93df));
        EXPECT(0xed, gbc.readMem(0x93e0));
        // CB ED 0094
        gbc.setState(0xdc09, 0x92f0, 0xe660, 0xc9c5, 0x7acc, 0xdbb2, 0x0, 0x0);
        gbc.writeMem(0xdc09, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x92f0, gbc.sp());
        EXPECT(0xdc0b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdc09));
        EXPECT(0xed, gbc.readMem(0xdc0a));
        // CB ED 0095
        gbc.setState(0x84a7, 0xbc07, 0x290, 0x30b8, 0xd6c2, 0xd910, 0x0, 0x0);
        gbc.writeMem(0x84a7, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0xbc07, gbc.sp());
        EXPECT(0x84a9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x84a7));
        EXPECT(0xed, gbc.readMem(0x84a8));
        // CB ED 0097
        gbc.setState(0xa279, 0xf692, 0xd5b0, 0x67c5, 0x6200, 0x6a79, 0x1, 0x1);
        gbc.writeMem(0xa279, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0xf692, gbc.sp());
        EXPECT(0xa27b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa279));
        EXPECT(0xed, gbc.readMem(0xa27a));
        // CB ED 0098
        gbc.setState(0xebf7, 0x9551, 0x6c00, 0xb9d0, 0xd194, 0xf8f1, 0x1, 0x0);
        gbc.writeMem(0xebf7, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x9551, gbc.sp());
        EXPECT(0xebf9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xebf7));
        EXPECT(0xed, gbc.readMem(0xebf8));
        // CB ED 0099
        gbc.setState(0x5d39, 0x7e70, 0xc890, 0x1bf1, 0x3e02, 0x7e92, 0x0, 0x0);
        gbc.writeMem(0x5d39, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x7e70, gbc.sp());
        EXPECT(0x5d3b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB ED 009A
        gbc.setState(0x89fb, 0x8b9f, 0x4600, 0xd17c, 0xb51b, 0x436e, 0x1, 0x0);
        gbc.writeMem(0x89fb, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x8b9f, gbc.sp());
        EXPECT(0x89fd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x89fb));
        EXPECT(0xed, gbc.readMem(0x89fc));
        // CB ED 009B
        gbc.setState(0x91be, 0xad9a, 0x5780, 0xf97a, 0xd98d, 0xe0c0, 0x0, 0x0);
        gbc.writeMem(0x91be, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0xad9a, gbc.sp());
        EXPECT(0x91c0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x91be));
        EXPECT(0xed, gbc.readMem(0x91bf));
        // CB ED 009C
        gbc.setState(0x53f6, 0x2c0b, 0x460, 0x8868, 0xbcdb, 0xcfc1, 0x1, 0x0);
        gbc.writeMem(0x53f6, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0x2c0b, gbc.sp());
        EXPECT(0x53f8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB ED 009D
        gbc.setState(0x2a76, 0xe703, 0x3360, 0x36a5, 0xe11f, 0xef68, 0x0, 0x1);
        gbc.writeMem(0x2a76, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0xe703, gbc.sp());
        EXPECT(0x2a78, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB ED 009E
        gbc.setState(0xd114, 0x879f, 0x6f00, 0x8493, 0x3eb9, 0xcf12, 0x0, 0x0);
        gbc.writeMem(0xd114, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x879f, gbc.sp());
        EXPECT(0xd116, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd114));
        EXPECT(0xed, gbc.readMem(0xd115));
        // CB ED 00A0
        gbc.setState(0xa907, 0x5fbf, 0x45d0, 0xaf17, 0x29da, 0x59b9, 0x1, 0x0);
        gbc.writeMem(0xa907, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x5fbf, gbc.sp());
        EXPECT(0xa909, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa907));
        EXPECT(0xed, gbc.readMem(0xa908));
        // CB ED 00A1
        gbc.setState(0xd57e, 0x10, 0x29d0, 0xb0f7, 0x78f0, 0xd3f, 0x1, 0x1);
        gbc.writeMem(0xd57e, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0x10, gbc.sp());
        EXPECT(0xd580, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd57e));
        EXPECT(0xed, gbc.readMem(0xd57f));
        // CB ED 00A2
        gbc.setState(0x414e, 0x43f1, 0xda50, 0x28a4, 0x6625, 0x9569, 0x0, 0x1);
        gbc.writeMem(0x414e, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0x43f1, gbc.sp());
        EXPECT(0x4150, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB ED 00A3
        gbc.setState(0x79f1, 0xebde, 0xcf30, 0x870f, 0x9468, 0x96d5, 0x1, 0x1);
        gbc.writeMem(0x79f1, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0xebde, gbc.sp());
        EXPECT(0x79f3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB ED 00A4
        gbc.setState(0x372c, 0xc147, 0xff0, 0xa15f, 0x3019, 0x6e7, 0x0, 0x1);
        gbc.writeMem(0x372c, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0xc147, gbc.sp());
        EXPECT(0x372e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB ED 00A6
        gbc.setState(0x5b03, 0xec55, 0xb70, 0xacbf, 0x8f24, 0xfd26, 0x1, 0x1);
        gbc.writeMem(0x5b03, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0xec55, gbc.sp());
        EXPECT(0x5b05, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB ED 00A7
        gbc.setState(0xeec6, 0x25ff, 0x57f0, 0x9a39, 0xb9c3, 0x7756, 0x0, 0x0);
        gbc.writeMem(0xeec6, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x25ff, gbc.sp());
        EXPECT(0xeec8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeec6));
        EXPECT(0xed, gbc.readMem(0xeec7));
        // CB ED 00A8
        gbc.setState(0x5ee8, 0xc797, 0x2c50, 0x1df1, 0x1c3d, 0xb244, 0x0, 0x0);
        gbc.writeMem(0x5ee8, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0xc797, gbc.sp());
        EXPECT(0x5eea, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB ED 00A9
        gbc.setState(0x7c9c, 0xdf2, 0x5580, 0x5c7b, 0xdae8, 0x97b, 0x0, 0x1);
        gbc.writeMem(0x7c9c, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0xdf2, gbc.sp());
        EXPECT(0x7c9e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB ED 00AA
        gbc.setState(0x5f16, 0xa18d, 0x5b10, 0x1000, 0xad7b, 0xe641, 0x1, 0x1);
        gbc.writeMem(0x5f16, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0xa18d, gbc.sp());
        EXPECT(0x5f18, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB ED 00AB
        gbc.setState(0x16b3, 0x225b, 0x63e0, 0x3445, 0xd4a3, 0x9c5a, 0x0, 0x1);
        gbc.writeMem(0x16b3, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x225b, gbc.sp());
        EXPECT(0x16b5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB ED 00AD
        gbc.setState(0x7891, 0x4591, 0xbc40, 0xf1c3, 0xafda, 0x5db7, 0x1, 0x0);
        gbc.writeMem(0x7891, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x4591, gbc.sp());
        EXPECT(0x7893, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB ED 00AE
        gbc.setState(0xe1ba, 0x6778, 0x9ad0, 0x87db, 0x21cb, 0x74b9, 0x0, 0x0);
        gbc.writeMem(0xe1ba, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x6778, gbc.sp());
        EXPECT(0xe1bc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe1ba));
        EXPECT(0xed, gbc.readMem(0xe1bb));
        // CB ED 00AF
        gbc.setState(0xefb0, 0x4029, 0xea50, 0x32e, 0x9830, 0x4dc7, 0x1, 0x1);
        gbc.writeMem(0xefb0, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x4029, gbc.sp());
        EXPECT(0xefb2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xefb0));
        EXPECT(0xed, gbc.readMem(0xefb1));
        // CB ED 00B0
        gbc.setState(0x2e9c, 0x107e, 0x1330, 0x327f, 0x4564, 0xfc7a, 0x1, 0x1);
        gbc.writeMem(0x2e9c, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x107e, gbc.sp());
        EXPECT(0x2e9e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB ED 00B1
        gbc.setState(0xdb76, 0x4860, 0x3370, 0xfc72, 0xb8ed, 0x4649, 0x1, 0x0);
        gbc.writeMem(0xdb76, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0x4860, gbc.sp());
        EXPECT(0xdb78, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdb76));
        EXPECT(0xed, gbc.readMem(0xdb77));
        // CB ED 00B2
        gbc.setState(0xa647, 0xe5a0, 0x5d00, 0x2742, 0x5f06, 0xc0f2, 0x1, 0x0);
        gbc.writeMem(0xa647, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0xe5a0, gbc.sp());
        EXPECT(0xa649, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa647));
        EXPECT(0xed, gbc.readMem(0xa648));
        // CB ED 00B3
        gbc.setState(0x7670, 0x5dbb, 0x56d0, 0xe8a2, 0xf583, 0xb5c, 0x0, 0x0);
        gbc.writeMem(0x7670, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x5dbb, gbc.sp());
        EXPECT(0x7672, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB ED 00B5
        gbc.setState(0x1fe7, 0x583a, 0x500, 0xb8d, 0xaf9b, 0xd59c, 0x0, 0x0);
        gbc.writeMem(0x1fe7, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x583a, gbc.sp());
        EXPECT(0x1fe9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB ED 00B6
        gbc.setState(0xe48c, 0xfb2d, 0x280, 0xea35, 0xf8c7, 0x4896, 0x0, 0x0);
        gbc.writeMem(0xe48c, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0xfb2d, gbc.sp());
        EXPECT(0xe48e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe48c));
        EXPECT(0xed, gbc.readMem(0xe48d));
        // CB ED 00B7
        gbc.setState(0x19b5, 0xa8e, 0xec00, 0x5a53, 0x9790, 0xaf66, 0x1, 0x0);
        gbc.writeMem(0x19b5, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0xa8e, gbc.sp());
        EXPECT(0x19b7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB ED 00B8
        gbc.setState(0xbe90, 0xb8e2, 0x9fc0, 0x4d12, 0x89bf, 0xcada, 0x1, 0x0);
        gbc.writeMem(0xbe90, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0xb8e2, gbc.sp());
        EXPECT(0xbe92, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbe90));
        EXPECT(0xed, gbc.readMem(0xbe91));
        // CB ED 00B9
        gbc.setState(0xa0a8, 0x2703, 0x3a00, 0xc85a, 0xa9ec, 0x9684, 0x1, 0x0);
        gbc.writeMem(0xa0a8, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x2703, gbc.sp());
        EXPECT(0xa0aa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa0a8));
        EXPECT(0xed, gbc.readMem(0xa0a9));
        // CB ED 00BA
        gbc.setState(0x7619, 0x245f, 0x9fa0, 0xb63e, 0x9a39, 0x26b4, 0x1, 0x0);
        gbc.writeMem(0x7619, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x245f, gbc.sp());
        EXPECT(0x761b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB ED 00BB
        gbc.setState(0xab76, 0xc04e, 0x6370, 0xa97a, 0xcbde, 0xcc4d, 0x1, 0x1);
        gbc.writeMem(0xab76, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0xc04e, gbc.sp());
        EXPECT(0xab78, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xab76));
        EXPECT(0xed, gbc.readMem(0xab77));
        // CB ED 00BC
        gbc.setState(0xae23, 0x5d0a, 0xd920, 0xf6ee, 0x7cd4, 0xdf68, 0x1, 0x1);
        gbc.writeMem(0xae23, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x5d0a, gbc.sp());
        EXPECT(0xae25, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xae23));
        EXPECT(0xed, gbc.readMem(0xae24));
        // CB ED 00BD
        gbc.setState(0x9e15, 0x3559, 0xcc40, 0x5fad, 0xf2c6, 0xe26c, 0x1, 0x1);
        gbc.writeMem(0x9e15, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x3559, gbc.sp());
        EXPECT(0x9e17, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9e15));
        EXPECT(0xed, gbc.readMem(0x9e16));
        // CB ED 00BE
        gbc.setState(0xc84e, 0x985a, 0x29b0, 0x9dd4, 0x2403, 0x5c61, 0x0, 0x0);
        gbc.writeMem(0xc84e, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x985a, gbc.sp());
        EXPECT(0xc850, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc84e));
        EXPECT(0xed, gbc.readMem(0xc84f));
        // CB ED 00BF
        gbc.setState(0x5a71, 0x5db7, 0x1b10, 0x4329, 0x3da8, 0x3fda, 0x0, 0x0);
        gbc.writeMem(0x5a71, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0x5db7, gbc.sp());
        EXPECT(0x5a73, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB ED 00C0
        gbc.setState(0x7f1, 0x63dd, 0x7ae0, 0x5561, 0x84a2, 0x5350, 0x1, 0x0);
        gbc.writeMem(0x7f1, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x63dd, gbc.sp());
        EXPECT(0x7f3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB ED 00C1
        gbc.setState(0x427e, 0x144b, 0xd940, 0x5182, 0x8c63, 0xc00, 0x1, 0x0);
        gbc.writeMem(0x427e, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x144b, gbc.sp());
        EXPECT(0x4280, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB ED 00C2
        gbc.setState(0x451, 0x3cbc, 0x2310, 0xd8e2, 0xda03, 0xd904, 0x1, 0x1);
        gbc.writeMem(0x451, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x3cbc, gbc.sp());
        EXPECT(0x453, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB ED 00C4
        gbc.setState(0xb96c, 0x2ec6, 0xe610, 0x79ed, 0xefd6, 0xcf28, 0x0, 0x1);
        gbc.writeMem(0xb96c, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x2ec6, gbc.sp());
        EXPECT(0xb96e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb96c));
        EXPECT(0xed, gbc.readMem(0xb96d));
        // CB ED 00C5
        gbc.setState(0x791b, 0xa380, 0xadb0, 0x2c21, 0x540d, 0xa5ba, 0x1, 0x1);
        gbc.writeMem(0x791b, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0xa380, gbc.sp());
        EXPECT(0x791d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB ED 00C6
        gbc.setState(0x5758, 0xa082, 0x4240, 0xf406, 0x3849, 0xc7ca, 0x0, 0x1);
        gbc.writeMem(0x5758, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0xa082, gbc.sp());
        EXPECT(0x575a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB ED 00C7
        gbc.setState(0xc2b5, 0x59d0, 0xa50, 0x697f, 0xe8be, 0x2c47, 0x0, 0x0);
        gbc.writeMem(0xc2b5, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x59d0, gbc.sp());
        EXPECT(0xc2b7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc2b5));
        EXPECT(0xed, gbc.readMem(0xc2b6));
        // CB ED 00C8
        gbc.setState(0x80d, 0x4340, 0x2030, 0x45bc, 0xd734, 0xbb1b, 0x0, 0x1);
        gbc.writeMem(0x80d, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x4340, gbc.sp());
        EXPECT(0x80f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB ED 00C9
        gbc.setState(0x3d65, 0x1b8c, 0xfe0, 0x18f7, 0x5257, 0x8f41, 0x1, 0x0);
        gbc.writeMem(0x3d65, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x1b8c, gbc.sp());
        EXPECT(0x3d67, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB ED 00CA
        gbc.setState(0xa9af, 0x97f3, 0x3c40, 0x1df1, 0x1394, 0x2708, 0x1, 0x1);
        gbc.writeMem(0xa9af, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x97f3, gbc.sp());
        EXPECT(0xa9b1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa9af));
        EXPECT(0xed, gbc.readMem(0xa9b0));
        // CB ED 00CB
        gbc.setState(0x5f74, 0xd8da, 0xda90, 0xe5da, 0x1202, 0xfc57, 0x1, 0x1);
        gbc.writeMem(0x5f74, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0xd8da, gbc.sp());
        EXPECT(0x5f76, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB ED 00CC
        gbc.setState(0x917c, 0x29c2, 0xbd50, 0xb8a, 0xda33, 0x98ad, 0x1, 0x1);
        gbc.writeMem(0x917c, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x29c2, gbc.sp());
        EXPECT(0x917e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x917c));
        EXPECT(0xed, gbc.readMem(0x917d));
        // CB ED 00CD
        gbc.setState(0x4765, 0x87db, 0xa7d0, 0xdb0f, 0x3602, 0x7a10, 0x1, 0x0);
        gbc.writeMem(0x4765, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x87db, gbc.sp());
        EXPECT(0x4767, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB ED 00CE
        gbc.setState(0x676, 0xb2d0, 0xd610, 0x896e, 0xbeb3, 0xac38, 0x1, 0x1);
        gbc.writeMem(0x676, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0xb2d0, gbc.sp());
        EXPECT(0x678, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB ED 00CF
        gbc.setState(0x63ee, 0x1554, 0x640, 0x2ada, 0x4eef, 0xafc2, 0x1, 0x0);
        gbc.writeMem(0x63ee, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x1554, gbc.sp());
        EXPECT(0x63f0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB ED 00D1
        gbc.setState(0x4709, 0x5d98, 0x2110, 0x17d0, 0x586f, 0x2af7, 0x0, 0x0);
        gbc.writeMem(0x4709, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x5d98, gbc.sp());
        EXPECT(0x470b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB ED 00D2
        gbc.setState(0x1cb7, 0xfae9, 0x4b0, 0x35c0, 0xc32d, 0xa716, 0x1, 0x0);
        gbc.writeMem(0x1cb7, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0xfae9, gbc.sp());
        EXPECT(0x1cb9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB ED 00D3
        gbc.setState(0x43b3, 0x6ada, 0x6360, 0xc380, 0x497f, 0x17fe, 0x1, 0x1);
        gbc.writeMem(0x43b3, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x6ada, gbc.sp());
        EXPECT(0x43b5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB ED 00D4
        gbc.setState(0x714c, 0x8811, 0x4fa0, 0x2b9d, 0x1f17, 0x10f1, 0x1, 0x1);
        gbc.writeMem(0x714c, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x8811, gbc.sp());
        EXPECT(0x714e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB ED 00D6
        gbc.setState(0x5b90, 0x3756, 0x8940, 0x5ccf, 0x9fa2, 0x556a, 0x0, 0x0);
        gbc.writeMem(0x5b90, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x3756, gbc.sp());
        EXPECT(0x5b92, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB ED 00D8
        gbc.setState(0x8a71, 0xbf42, 0x2ae0, 0x4936, 0x785, 0xb5e7, 0x0, 0x0);
        gbc.writeMem(0x8a71, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0xbf42, gbc.sp());
        EXPECT(0x8a73, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8a71));
        EXPECT(0xed, gbc.readMem(0x8a72));
        // CB ED 00D9
        gbc.setState(0xb17f, 0x59b0, 0xfc60, 0x376c, 0x66fc, 0x3322, 0x1, 0x0);
        gbc.writeMem(0xb17f, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x59b0, gbc.sp());
        EXPECT(0xb181, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb17f));
        EXPECT(0xed, gbc.readMem(0xb180));
        // CB ED 00DA
        gbc.setState(0xb5e3, 0x60b, 0xe0c0, 0xe2d8, 0xdcfd, 0x5aeb, 0x0, 0x1);
        gbc.writeMem(0xb5e3, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x60b, gbc.sp());
        EXPECT(0xb5e5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb5e3));
        EXPECT(0xed, gbc.readMem(0xb5e4));
        // CB ED 00DB
        gbc.setState(0xa98d, 0x253a, 0xebf0, 0x689c, 0xa328, 0x8981, 0x0, 0x0);
        gbc.writeMem(0xa98d, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x253a, gbc.sp());
        EXPECT(0xa98f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa98d));
        EXPECT(0xed, gbc.readMem(0xa98e));
        // CB ED 00DC
        gbc.setState(0x7dca, 0xe61a, 0x4fc0, 0x727a, 0x7aea, 0x9d2e, 0x1, 0x1);
        gbc.writeMem(0x7dca, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0xe61a, gbc.sp());
        EXPECT(0x7dcc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB ED 00DD
        gbc.setState(0x85d7, 0x1a70, 0x1ac0, 0x3459, 0xe556, 0xe8e5, 0x0, 0x0);
        gbc.writeMem(0x85d7, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x1a70, gbc.sp());
        EXPECT(0x85d9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x85d7));
        EXPECT(0xed, gbc.readMem(0x85d8));
        // CB ED 00DE
        gbc.setState(0x8812, 0x4a31, 0xab70, 0xef17, 0xc3fb, 0xce1b, 0x0, 0x1);
        gbc.writeMem(0x8812, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x4a31, gbc.sp());
        EXPECT(0x8814, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8812));
        EXPECT(0xed, gbc.readMem(0x8813));
        // CB ED 00DF
        gbc.setState(0x1abd, 0x5085, 0x3f40, 0xa9ec, 0xcdc9, 0xb0bb, 0x0, 0x0);
        gbc.writeMem(0x1abd, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x5085, gbc.sp());
        EXPECT(0x1abf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB ED 00E0
        gbc.setState(0x3157, 0x853e, 0xc0b0, 0x1d94, 0xa78e, 0x376e, 0x0, 0x0);
        gbc.writeMem(0x3157, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x853e, gbc.sp());
        EXPECT(0x3159, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB ED 00E1
        gbc.setState(0x6d94, 0x3580, 0x68e0, 0x5cd3, 0xe3a1, 0xeb2c, 0x0, 0x0);
        gbc.writeMem(0x6d94, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x3580, gbc.sp());
        EXPECT(0x6d96, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB ED 00E3
        gbc.setState(0xd8bc, 0xc4f0, 0x7b90, 0xa36e, 0xb957, 0x21bd, 0x1, 0x0);
        gbc.writeMem(0xd8bc, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0xc4f0, gbc.sp());
        EXPECT(0xd8be, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd8bc));
        EXPECT(0xed, gbc.readMem(0xd8bd));
        // CB ED 00E4
        gbc.setState(0x94f0, 0x82bb, 0xd060, 0x894b, 0x1d40, 0x69ad, 0x0, 0x0);
        gbc.writeMem(0x94f0, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x82bb, gbc.sp());
        EXPECT(0x94f2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x94f0));
        EXPECT(0xed, gbc.readMem(0x94f1));
        // CB ED 00E6
        gbc.setState(0x744b, 0xb590, 0x3470, 0xa96f, 0x7bbd, 0x9070, 0x0, 0x0);
        gbc.writeMem(0x744b, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0xb590, gbc.sp());
        EXPECT(0x744d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB ED 00E7
        gbc.setState(0x2ebf, 0xb1f, 0x7380, 0xc209, 0x4149, 0x3bf1, 0x1, 0x1);
        gbc.writeMem(0x2ebf, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0xb1f, gbc.sp());
        EXPECT(0x2ec1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB ED 00E8
        gbc.setState(0x162e, 0xe3a3, 0x4180, 0xfaac, 0x1017, 0x9eed, 0x0, 0x0);
        gbc.writeMem(0x162e, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0xe3a3, gbc.sp());
        EXPECT(0x1630, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB ED 00E9
        gbc.setState(0xd01d, 0xa171, 0x37a0, 0xd8cb, 0x2234, 0xaa0e, 0x1, 0x1);
        gbc.writeMem(0xd01d, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0xa171, gbc.sp());
        EXPECT(0xd01f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd01d));
        EXPECT(0xed, gbc.readMem(0xd01e));
        // CB ED 00EA
        gbc.setState(0xdee0, 0xa8ed, 0x6f50, 0x346, 0x7cc, 0xfafa, 0x1, 0x1);
        gbc.writeMem(0xdee0, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0xa8ed, gbc.sp());
        EXPECT(0xdee2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdee0));
        EXPECT(0xed, gbc.readMem(0xdee1));
        // CB ED 00EB
        gbc.setState(0x425c, 0x311, 0x4fe0, 0x6dac, 0x94df, 0xef95, 0x0, 0x1);
        gbc.writeMem(0x425c, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x311, gbc.sp());
        EXPECT(0x425e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB ED 00EC
        gbc.setState(0x7258, 0xd909, 0xe0c0, 0x21b3, 0x3fb, 0xa8a0, 0x0, 0x1);
        gbc.writeMem(0x7258, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0xd909, gbc.sp());
        EXPECT(0x725a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB ED 00ED
        gbc.setState(0x6bd6, 0x1ee5, 0xb200, 0xe107, 0xd374, 0xc313, 0x1, 0x1);
        gbc.writeMem(0x6bd6, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x1ee5, gbc.sp());
        EXPECT(0x6bd8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB ED 00EE
        gbc.setState(0xe63, 0x8b9, 0xd420, 0xfd2a, 0x96ca, 0x2354, 0x1, 0x1);
        gbc.writeMem(0xe63, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x8b9, gbc.sp());
        EXPECT(0xe65, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB ED 00EF
        gbc.setState(0x9cae, 0x5235, 0x25f0, 0xc69c, 0xf10f, 0xa17c, 0x1, 0x0);
        gbc.writeMem(0x9cae, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x5235, gbc.sp());
        EXPECT(0x9cb0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9cae));
        EXPECT(0xed, gbc.readMem(0x9caf));
        // CB ED 00F0
        gbc.setState(0x7e87, 0x51ee, 0xea00, 0x1043, 0x8346, 0xdf3a, 0x0, 0x0);
        gbc.writeMem(0x7e87, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x51ee, gbc.sp());
        EXPECT(0x7e89, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB ED 00F1
        gbc.setState(0x6c22, 0x2159, 0x6a20, 0x7235, 0x6dd7, 0x9020, 0x1, 0x1);
        gbc.writeMem(0x6c22, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x2159, gbc.sp());
        EXPECT(0x6c24, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB ED 00F2
        gbc.setState(0xe21b, 0x85d2, 0x4360, 0x2862, 0xead9, 0x4385, 0x0, 0x0);
        gbc.writeMem(0xe21b, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x85d2, gbc.sp());
        EXPECT(0xe21d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe21b));
        EXPECT(0xed, gbc.readMem(0xe21c));
        // CB ED 00F3
        gbc.setState(0xcf14, 0xcd60, 0xb4e0, 0xe831, 0x38f4, 0xf724, 0x0, 0x0);
        gbc.writeMem(0xcf14, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0xcd60, gbc.sp());
        EXPECT(0xcf16, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcf14));
        EXPECT(0xed, gbc.readMem(0xcf15));
        // CB ED 00F4
        gbc.setState(0xcf1e, 0x9469, 0xf6d0, 0xa22c, 0xf4a2, 0x85b7, 0x0, 0x0);
        gbc.writeMem(0xcf1e, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x9469, gbc.sp());
        EXPECT(0xcf20, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcf1e));
        EXPECT(0xed, gbc.readMem(0xcf1f));
        // CB ED 00F5
        gbc.setState(0xd0bd, 0xb159, 0xb0d0, 0xba98, 0x359d, 0x3740, 0x1, 0x0);
        gbc.writeMem(0xd0bd, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0xb159, gbc.sp());
        EXPECT(0xd0bf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd0bd));
        EXPECT(0xed, gbc.readMem(0xd0be));
        // CB ED 00F6
        gbc.setState(0x405a, 0xf52a, 0xb720, 0x7fb3, 0xd5b2, 0x3ba8, 0x0, 0x1);
        gbc.writeMem(0x405a, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0xf52a, gbc.sp());
        EXPECT(0x405c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB ED 00F8
        gbc.setState(0x5ef3, 0x2690, 0xe8c0, 0xa10e, 0xc37b, 0xc161, 0x1, 0x0);
        gbc.writeMem(0x5ef3, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x2690, gbc.sp());
        EXPECT(0x5ef5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB ED 00F9
        gbc.setState(0xae7b, 0xcdd7, 0xbeb0, 0x70a4, 0x3d6b, 0xd48b, 0x1, 0x1);
        gbc.writeMem(0xae7b, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0xcdd7, gbc.sp());
        EXPECT(0xae7d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xae7b));
        EXPECT(0xed, gbc.readMem(0xae7c));
        // CB ED 00FA
        gbc.setState(0x375f, 0xe5d8, 0x5020, 0x3a9a, 0x4170, 0xe857, 0x0, 0x1);
        gbc.writeMem(0x375f, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0xe5d8, gbc.sp());
        EXPECT(0x3761, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB ED 00FB
        gbc.setState(0xe824, 0xee38, 0x9a00, 0x90b2, 0xf228, 0x14d5, 0x0, 0x0);
        gbc.writeMem(0xe824, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0xee38, gbc.sp());
        EXPECT(0xe826, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe824));
        EXPECT(0xed, gbc.readMem(0xe825));
        // CB ED 00FC
        gbc.setState(0x8b1f, 0x45f2, 0xf370, 0x1743, 0xfa0c, 0x95e1, 0x1, 0x1);
        gbc.writeMem(0x8b1f, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0x45f2, gbc.sp());
        EXPECT(0x8b21, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8b1f));
        EXPECT(0xed, gbc.readMem(0x8b20));
        // CB ED 00FD
        gbc.setState(0x3286, 0xf730, 0x23b0, 0x8a75, 0x1ef8, 0x778d, 0x0, 0x1);
        gbc.writeMem(0x3286, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0xf730, gbc.sp());
        EXPECT(0x3288, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB ED 00FE
        gbc.setState(0x189d, 0x369d, 0xe8d0, 0xc1a5, 0xd5ca, 0x1dcd, 0x0, 0x0);
        gbc.writeMem(0x189d, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x369d, gbc.sp());
        EXPECT(0x189f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB ED 00FF
        gbc.setState(0xd0c3, 0x3722, 0xa090, 0xf8d5, 0xe83d, 0xfe3c, 0x0, 0x0);
        gbc.writeMem(0xd0c3, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x3722, gbc.sp());
        EXPECT(0xd0c5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd0c3));
        EXPECT(0xed, gbc.readMem(0xd0c4));
        // CB ED 0100
        gbc.setState(0x924b, 0xfdb6, 0x72d0, 0x65ea, 0xb015, 0xef7e, 0x1, 0x1);
        gbc.writeMem(0x924b, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0xfdb6, gbc.sp());
        EXPECT(0x924d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x924b));
        EXPECT(0xed, gbc.readMem(0x924c));
        // CB ED 0101
        gbc.setState(0xe84c, 0x696c, 0xabf0, 0xab09, 0xd099, 0x871f, 0x1, 0x1);
        gbc.writeMem(0xe84c, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0x696c, gbc.sp());
        EXPECT(0xe84e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe84c));
        EXPECT(0xed, gbc.readMem(0xe84d));
        // CB ED 0102
        gbc.setState(0xea03, 0xb21, 0x570, 0x5043, 0x419a, 0xbe34, 0x0, 0x1);
        gbc.writeMem(0xea03, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0xb21, gbc.sp());
        EXPECT(0xea05, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xea03));
        EXPECT(0xed, gbc.readMem(0xea04));
        // CB ED 0103
        gbc.setState(0x5c5c, 0xe48d, 0xb370, 0xb176, 0xe63c, 0x5dd7, 0x1, 0x0);
        gbc.writeMem(0x5c5c, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0xe48d, gbc.sp());
        EXPECT(0x5c5e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB ED 0104
        gbc.setState(0x91b8, 0x393e, 0x2a10, 0xb03, 0x72ce, 0x8df7, 0x1, 0x1);
        gbc.writeMem(0x91b8, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x393e, gbc.sp());
        EXPECT(0x91ba, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x91b8));
        EXPECT(0xed, gbc.readMem(0x91b9));
        // CB ED 0105
        gbc.setState(0x212b, 0xee21, 0x6f00, 0xc15f, 0x49a7, 0xb31b, 0x0, 0x0);
        gbc.writeMem(0x212b, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0xee21, gbc.sp());
        EXPECT(0x212d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB ED 0106
        gbc.setState(0x4635, 0x4b0f, 0xc390, 0xfa16, 0xd249, 0x559c, 0x1, 0x1);
        gbc.writeMem(0x4635, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x4b0f, gbc.sp());
        EXPECT(0x4637, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB ED 0107
        gbc.setState(0xbf1c, 0xcbcc, 0x6260, 0x9b4e, 0x6582, 0x5234, 0x0, 0x0);
        gbc.writeMem(0xbf1c, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0xcbcc, gbc.sp());
        EXPECT(0xbf1e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbf1c));
        EXPECT(0xed, gbc.readMem(0xbf1d));
        // CB ED 0108
        gbc.setState(0x1974, 0xd67b, 0x2120, 0xe4ad, 0xe4ba, 0x2a20, 0x1, 0x0);
        gbc.writeMem(0x1974, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0xd67b, gbc.sp());
        EXPECT(0x1976, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB ED 0109
        gbc.setState(0x856e, 0x689d, 0x5cc0, 0x94b4, 0xf53d, 0xd9b9, 0x1, 0x0);
        gbc.writeMem(0x856e, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x689d, gbc.sp());
        EXPECT(0x8570, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x856e));
        EXPECT(0xed, gbc.readMem(0x856f));
        // CB ED 010A
        gbc.setState(0xaf31, 0x786c, 0x41a0, 0xc275, 0x68d3, 0xec82, 0x0, 0x0);
        gbc.writeMem(0xaf31, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x786c, gbc.sp());
        EXPECT(0xaf33, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaf31));
        EXPECT(0xed, gbc.readMem(0xaf32));
        // CB ED 010B
        gbc.setState(0x24f3, 0xefe5, 0x8070, 0xf2e9, 0xf8, 0x6098, 0x1, 0x1);
        gbc.writeMem(0x24f3, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0xefe5, gbc.sp());
        EXPECT(0x24f5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB ED 010C
        gbc.setState(0xb4bf, 0x1922, 0xfb70, 0x7539, 0xf120, 0x6511, 0x1, 0x0);
        gbc.writeMem(0xb4bf, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x1922, gbc.sp());
        EXPECT(0xb4c1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb4bf));
        EXPECT(0xed, gbc.readMem(0xb4c0));
        // CB ED 010D
        gbc.setState(0xe2cf, 0xf0f8, 0x10e0, 0x230d, 0x6af6, 0xba5b, 0x1, 0x0);
        gbc.writeMem(0xe2cf, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0xf0f8, gbc.sp());
        EXPECT(0xe2d1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe2cf));
        EXPECT(0xed, gbc.readMem(0xe2d0));
        // CB ED 010E
        gbc.setState(0xa50f, 0xbba, 0xbd90, 0xa9c4, 0xc278, 0xd5a7, 0x1, 0x1);
        gbc.writeMem(0xa50f, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0xbba, gbc.sp());
        EXPECT(0xa511, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa50f));
        EXPECT(0xed, gbc.readMem(0xa510));
        // CB ED 010F
        gbc.setState(0xaaa4, 0x39d7, 0x4630, 0x8583, 0x2c43, 0x38f5, 0x0, 0x1);
        gbc.writeMem(0xaaa4, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x39d7, gbc.sp());
        EXPECT(0xaaa6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaaa4));
        EXPECT(0xed, gbc.readMem(0xaaa5));
        // CB ED 0110
        gbc.setState(0x12de, 0xec92, 0x1b90, 0xb36b, 0xe5c7, 0x5c4d, 0x0, 0x1);
        gbc.writeMem(0x12de, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0xec92, gbc.sp());
        EXPECT(0x12e0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB ED 0111
        gbc.setState(0x94f5, 0xcc29, 0x24b0, 0x1ae5, 0xcbb0, 0x821a, 0x0, 0x1);
        gbc.writeMem(0x94f5, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0xcc29, gbc.sp());
        EXPECT(0x94f7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x94f5));
        EXPECT(0xed, gbc.readMem(0x94f6));
        // CB ED 0112
        gbc.setState(0xec0, 0xe0b0, 0x8c80, 0xa55a, 0xfcb5, 0xe63b, 0x1, 0x0);
        gbc.writeMem(0xec0, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0xe0b0, gbc.sp());
        EXPECT(0xec2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB ED 0113
        gbc.setState(0xbdb9, 0xca62, 0x4100, 0xcedc, 0x8817, 0xd276, 0x0, 0x1);
        gbc.writeMem(0xbdb9, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0xca62, gbc.sp());
        EXPECT(0xbdbb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbdb9));
        EXPECT(0xed, gbc.readMem(0xbdba));
        // CB ED 0114
        gbc.setState(0x6165, 0xf6a1, 0x5570, 0xf538, 0x7c09, 0x7b8b, 0x1, 0x0);
        gbc.writeMem(0x6165, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0xf6a1, gbc.sp());
        EXPECT(0x6167, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB ED 0115
        gbc.setState(0xa805, 0xaa27, 0xc040, 0x1fb7, 0x1f7f, 0xa33c, 0x1, 0x0);
        gbc.writeMem(0xa805, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0xaa27, gbc.sp());
        EXPECT(0xa807, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa805));
        EXPECT(0xed, gbc.readMem(0xa806));
        // CB ED 0116
        gbc.setState(0xb35f, 0x3cb9, 0x49b0, 0x41ce, 0x764c, 0xc5a6, 0x1, 0x1);
        gbc.writeMem(0xb35f, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x3cb9, gbc.sp());
        EXPECT(0xb361, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb35f));
        EXPECT(0xed, gbc.readMem(0xb360));
        // CB ED 0117
        gbc.setState(0x16fd, 0x3c34, 0x9230, 0x5783, 0xe69, 0xff20, 0x1, 0x0);
        gbc.writeMem(0x16fd, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x3c34, gbc.sp());
        EXPECT(0x16ff, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB ED 0118
        gbc.setState(0xec93, 0x1042, 0x1870, 0x60f9, 0xfd45, 0x18c, 0x1, 0x1);
        gbc.writeMem(0xec93, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x1042, gbc.sp());
        EXPECT(0xec95, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xec93));
        EXPECT(0xed, gbc.readMem(0xec94));
        // CB ED 011A
        gbc.setState(0x7db6, 0x1c49, 0x9d40, 0x3d81, 0x9cea, 0xafb8, 0x1, 0x1);
        gbc.writeMem(0x7db6, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x1c49, gbc.sp());
        EXPECT(0x7db8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB ED 011B
        gbc.setState(0x24f2, 0x8316, 0xbc00, 0x77b8, 0x9bb8, 0x6327, 0x1, 0x1);
        gbc.writeMem(0x24f2, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x8316, gbc.sp());
        EXPECT(0x24f4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB ED 011C
        gbc.setState(0x7f6d, 0xcdde, 0xcad0, 0xd65d, 0x3547, 0x338d, 0x1, 0x0);
        gbc.writeMem(0x7f6d, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0xcdde, gbc.sp());
        EXPECT(0x7f6f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB ED 011D
        gbc.setState(0xc3ea, 0xa164, 0x4dc0, 0xba87, 0x257, 0xe894, 0x1, 0x1);
        gbc.writeMem(0xc3ea, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0xa164, gbc.sp());
        EXPECT(0xc3ec, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc3ea));
        EXPECT(0xed, gbc.readMem(0xc3eb));
        // CB ED 011E
        gbc.setState(0xe6d2, 0x4c63, 0x8f0, 0x207f, 0xb915, 0xefd, 0x1, 0x0);
        gbc.writeMem(0xe6d2, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x4c63, gbc.sp());
        EXPECT(0xe6d4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe6d2));
        EXPECT(0xed, gbc.readMem(0xe6d3));
        // CB ED 011F
        gbc.setState(0xa0a6, 0xac15, 0xf940, 0xdf1d, 0x3d91, 0x20ce, 0x0, 0x0);
        gbc.writeMem(0xa0a6, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0xac15, gbc.sp());
        EXPECT(0xa0a8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa0a6));
        EXPECT(0xed, gbc.readMem(0xa0a7));
        // CB ED 0120
        gbc.setState(0xed0a, 0x5497, 0x7e20, 0x678b, 0x37c6, 0xbc51, 0x1, 0x1);
        gbc.writeMem(0xed0a, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x5497, gbc.sp());
        EXPECT(0xed0c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xed0a));
        EXPECT(0xed, gbc.readMem(0xed0b));
        // CB ED 0121
        gbc.setState(0x99d, 0xcc03, 0x3bf0, 0xc1c4, 0xef1, 0x1f62, 0x0, 0x1);
        gbc.writeMem(0x99d, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0xcc03, gbc.sp());
        EXPECT(0x99f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB ED 0122
        gbc.setState(0x27c8, 0xd47f, 0x7ea0, 0x6b63, 0x1bcb, 0x7e4b, 0x0, 0x1);
        gbc.writeMem(0x27c8, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0xd47f, gbc.sp());
        EXPECT(0x27ca, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB ED 0124
        gbc.setState(0x3fb5, 0x64c3, 0x7150, 0x8292, 0xb4bc, 0xef5c, 0x1, 0x1);
        gbc.writeMem(0x3fb5, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x64c3, gbc.sp());
        EXPECT(0x3fb7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB ED 0125
        gbc.setState(0x338d, 0xe84b, 0xca50, 0x3e46, 0xbf76, 0xdfcf, 0x1, 0x0);
        gbc.writeMem(0x338d, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0xe84b, gbc.sp());
        EXPECT(0x338f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB ED 0126
        gbc.setState(0xa484, 0xde27, 0x5430, 0x2ca8, 0x531d, 0xe6be, 0x1, 0x1);
        gbc.writeMem(0xa484, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0xde27, gbc.sp());
        EXPECT(0xa486, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa484));
        EXPECT(0xed, gbc.readMem(0xa485));
        // CB ED 0127
        gbc.setState(0x7e07, 0x2981, 0xd510, 0x2a88, 0x3cf5, 0x8d0e, 0x0, 0x1);
        gbc.writeMem(0x7e07, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x2981, gbc.sp());
        EXPECT(0x7e09, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB ED 0128
        gbc.setState(0x7cd8, 0x6541, 0xd030, 0xa1b2, 0x1017, 0x7446, 0x0, 0x1);
        gbc.writeMem(0x7cd8, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x6541, gbc.sp());
        EXPECT(0x7cda, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB ED 0129
        gbc.setState(0x1267, 0x915, 0x8020, 0xc28a, 0x42c7, 0xdebf, 0x1, 0x1);
        gbc.writeMem(0x1267, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x915, gbc.sp());
        EXPECT(0x1269, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB ED 012A
        gbc.setState(0xc085, 0xcb1b, 0x73e0, 0xebfa, 0xbeee, 0xef4e, 0x1, 0x0);
        gbc.writeMem(0xc085, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0xcb1b, gbc.sp());
        EXPECT(0xc087, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc085));
        EXPECT(0xed, gbc.readMem(0xc086));
        // CB ED 012B
        gbc.setState(0x2e53, 0x2b31, 0x70, 0xca2a, 0x20c9, 0x870e, 0x0, 0x0);
        gbc.writeMem(0x2e53, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x2b31, gbc.sp());
        EXPECT(0x2e55, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB ED 012C
        gbc.setState(0x2145, 0xb1e0, 0x48d0, 0xb936, 0xe2f8, 0x1d71, 0x1, 0x0);
        gbc.writeMem(0x2145, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0xb1e0, gbc.sp());
        EXPECT(0x2147, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB ED 012D
        gbc.setState(0x589f, 0x55bc, 0x1d30, 0x7f0e, 0xc56a, 0x8e46, 0x0, 0x1);
        gbc.writeMem(0x589f, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x55bc, gbc.sp());
        EXPECT(0x58a1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB ED 012F
        gbc.setState(0xecb3, 0x978d, 0x5b80, 0xb7, 0x4b28, 0x4e0, 0x1, 0x0);
        gbc.writeMem(0xecb3, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x978d, gbc.sp());
        EXPECT(0xecb5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xecb3));
        EXPECT(0xed, gbc.readMem(0xecb4));
        // CB ED 0130
        gbc.setState(0x49d, 0x709b, 0x5fa0, 0xb5a, 0x5923, 0x16f3, 0x1, 0x1);
        gbc.writeMem(0x49d, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x709b, gbc.sp());
        EXPECT(0x49f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB ED 0131
        gbc.setState(0x82b8, 0x2fbb, 0x1770, 0x448a, 0xf9e6, 0x8206, 0x0, 0x0);
        gbc.writeMem(0x82b8, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x2fbb, gbc.sp());
        EXPECT(0x82ba, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x82b8));
        EXPECT(0xed, gbc.readMem(0x82b9));
        // CB ED 0132
        gbc.setState(0xc646, 0xdee6, 0xe010, 0xda9, 0xe13f, 0x567b, 0x1, 0x1);
        gbc.writeMem(0xc646, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0xdee6, gbc.sp());
        EXPECT(0xc648, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc646));
        EXPECT(0xed, gbc.readMem(0xc647));
        // CB ED 0133
        gbc.setState(0xb177, 0x75a2, 0x1540, 0xd16d, 0xd55b, 0xf1e4, 0x1, 0x1);
        gbc.writeMem(0xb177, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x75a2, gbc.sp());
        EXPECT(0xb179, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb177));
        EXPECT(0xed, gbc.readMem(0xb178));
        // CB ED 0134
        gbc.setState(0x4327, 0xf92d, 0xbe00, 0x134f, 0x17f1, 0xf0e7, 0x1, 0x1);
        gbc.writeMem(0x4327, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0xf92d, gbc.sp());
        EXPECT(0x4329, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB ED 0135
        gbc.setState(0x7a3b, 0x65de, 0xece0, 0x986, 0xcaa0, 0x3309, 0x1, 0x1);
        gbc.writeMem(0x7a3b, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x65de, gbc.sp());
        EXPECT(0x7a3d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB ED 0136
        gbc.setState(0xc6d, 0xeed, 0xff10, 0xd5ed, 0x864d, 0x9e1a, 0x1, 0x0);
        gbc.writeMem(0xc6d, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0xeed, gbc.sp());
        EXPECT(0xc6f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB ED 0137
        gbc.setState(0x789a, 0x3ad2, 0x6a50, 0x3308, 0x7d63, 0x8d7f, 0x1, 0x1);
        gbc.writeMem(0x789a, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x3ad2, gbc.sp());
        EXPECT(0x789c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB ED 0138
        gbc.setState(0x7f3c, 0xcaac, 0x7a60, 0x8b68, 0x5f18, 0xc50e, 0x0, 0x0);
        gbc.writeMem(0x7f3c, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0xcaac, gbc.sp());
        EXPECT(0x7f3e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB ED 0139
        gbc.setState(0xcfd7, 0xf820, 0xac40, 0x4b41, 0x67b4, 0x41e2, 0x1, 0x0);
        gbc.writeMem(0xcfd7, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0xf820, gbc.sp());
        EXPECT(0xcfd9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcfd7));
        EXPECT(0xed, gbc.readMem(0xcfd8));
        // CB ED 013B
        gbc.setState(0xeb89, 0xe90a, 0x89f0, 0xc99e, 0xe1d5, 0x9d1f, 0x0, 0x0);
        gbc.writeMem(0xeb89, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0xe90a, gbc.sp());
        EXPECT(0xeb8b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeb89));
        EXPECT(0xed, gbc.readMem(0xeb8a));
        // CB ED 013C
        gbc.setState(0x5b4c, 0xd350, 0xb870, 0x46c3, 0x1718, 0x6512, 0x1, 0x1);
        gbc.writeMem(0x5b4c, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0xd350, gbc.sp());
        EXPECT(0x5b4e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB ED 013D
        gbc.setState(0x8442, 0x4f87, 0x67a0, 0x5402, 0xf0c2, 0xd886, 0x1, 0x1);
        gbc.writeMem(0x8442, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x4f87, gbc.sp());
        EXPECT(0x8444, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8442));
        EXPECT(0xed, gbc.readMem(0x8443));
        // CB ED 013F
        gbc.setState(0x8045, 0xf053, 0x8180, 0x5b87, 0x99c8, 0x6227, 0x1, 0x0);
        gbc.writeMem(0x8045, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0xf053, gbc.sp());
        EXPECT(0x8047, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8045));
        EXPECT(0xed, gbc.readMem(0x8046));
        // CB ED 0140
        gbc.setState(0x45f0, 0xe07e, 0x5a50, 0xd45, 0xcc42, 0xa7d4, 0x0, 0x0);
        gbc.writeMem(0x45f0, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0xe07e, gbc.sp());
        EXPECT(0x45f2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB ED 0141
        gbc.setState(0xd67, 0x6a67, 0x7680, 0x16cf, 0xa5aa, 0x296, 0x1, 0x1);
        gbc.writeMem(0xd67, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x6a67, gbc.sp());
        EXPECT(0xd69, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB ED 0142
        gbc.setState(0x7ee0, 0x384c, 0x1e30, 0xb800, 0xef85, 0x2498, 0x0, 0x1);
        gbc.writeMem(0x7ee0, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x384c, gbc.sp());
        EXPECT(0x7ee2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB ED 0143
        gbc.setState(0xa1a3, 0x8734, 0x86c0, 0x9656, 0x522e, 0x77e1, 0x0, 0x1);
        gbc.writeMem(0xa1a3, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0x8734, gbc.sp());
        EXPECT(0xa1a5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa1a3));
        EXPECT(0xed, gbc.readMem(0xa1a4));
        // CB ED 0144
        gbc.setState(0x8620, 0xf3f0, 0xe550, 0xf555, 0xcb88, 0xf750, 0x0, 0x0);
        gbc.writeMem(0x8620, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0xf3f0, gbc.sp());
        EXPECT(0x8622, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8620));
        EXPECT(0xed, gbc.readMem(0x8621));
        // CB ED 0145
        gbc.setState(0x7aaf, 0x8787, 0x1d30, 0xc781, 0x97b9, 0x35d7, 0x0, 0x0);
        gbc.writeMem(0x7aaf, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x8787, gbc.sp());
        EXPECT(0x7ab1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB ED 0146
        gbc.setState(0xd3d6, 0xf459, 0x5cf0, 0x75f5, 0xd826, 0xf11a, 0x1, 0x0);
        gbc.writeMem(0xd3d6, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0xf459, gbc.sp());
        EXPECT(0xd3d8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd3d6));
        EXPECT(0xed, gbc.readMem(0xd3d7));
        // CB ED 0147
        gbc.setState(0x8c8e, 0xc2c9, 0x9f20, 0x6a9a, 0x4be, 0x1ae0, 0x1, 0x0);
        gbc.writeMem(0x8c8e, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0xc2c9, gbc.sp());
        EXPECT(0x8c90, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8c8e));
        EXPECT(0xed, gbc.readMem(0x8c8f));
        // CB ED 0148
        gbc.setState(0xe318, 0x7cf2, 0x7df0, 0x78b7, 0x4f55, 0xb212, 0x0, 0x1);
        gbc.writeMem(0xe318, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x7cf2, gbc.sp());
        EXPECT(0xe31a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe318));
        EXPECT(0xed, gbc.readMem(0xe319));
        // CB ED 0149
        gbc.setState(0x8997, 0x7ebb, 0x6060, 0x219c, 0x9f1a, 0x9e34, 0x0, 0x0);
        gbc.writeMem(0x8997, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x7ebb, gbc.sp());
        EXPECT(0x8999, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8997));
        EXPECT(0xed, gbc.readMem(0x8998));
        // CB ED 014A
        gbc.setState(0x213d, 0x5450, 0xb250, 0xc836, 0x51ce, 0xf8e6, 0x0, 0x0);
        gbc.writeMem(0x213d, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x5450, gbc.sp());
        EXPECT(0x213f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB ED 014B
        gbc.setState(0x25ed, 0xcfb5, 0xffe0, 0x27a5, 0xc2e3, 0xc96, 0x0, 0x0);
        gbc.writeMem(0x25ed, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0xcfb5, gbc.sp());
        EXPECT(0x25ef, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB ED 014C
        gbc.setState(0x92d4, 0x262d, 0x3670, 0x88d0, 0x9565, 0x8e75, 0x0, 0x1);
        gbc.writeMem(0x92d4, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x262d, gbc.sp());
        EXPECT(0x92d6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x92d4));
        EXPECT(0xed, gbc.readMem(0x92d5));
        // CB ED 014D
        gbc.setState(0x4bb8, 0x520c, 0x6920, 0xe18b, 0x7641, 0xadc1, 0x0, 0x0);
        gbc.writeMem(0x4bb8, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0x520c, gbc.sp());
        EXPECT(0x4bba, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB ED 014E
        gbc.setState(0xe6fe, 0xc92, 0xc460, 0xc2b7, 0xe28e, 0x6037, 0x1, 0x0);
        gbc.writeMem(0xe6fe, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0xc92, gbc.sp());
        EXPECT(0xe700, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe6fe));
        EXPECT(0xed, gbc.readMem(0xe6ff));
        // CB ED 014F
        gbc.setState(0x89db, 0x220d, 0xff10, 0x1ad3, 0x8707, 0x476e, 0x1, 0x1);
        gbc.writeMem(0x89db, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x220d, gbc.sp());
        EXPECT(0x89dd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x89db));
        EXPECT(0xed, gbc.readMem(0x89dc));
        // CB ED 0150
        gbc.setState(0x77a0, 0x2fb9, 0x47f0, 0x19, 0xe2a2, 0xb249, 0x0, 0x0);
        gbc.writeMem(0x77a0, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0x2fb9, gbc.sp());
        EXPECT(0x77a2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB ED 0151
        gbc.setState(0xae8, 0xc49c, 0xc770, 0xadba, 0x672f, 0x398c, 0x1, 0x0);
        gbc.writeMem(0xae8, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0xc49c, gbc.sp());
        EXPECT(0xaea, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB ED 0152
        gbc.setState(0xbb6e, 0x16b2, 0x90a0, 0x7445, 0xa3b1, 0x5d2b, 0x1, 0x1);
        gbc.writeMem(0xbb6e, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x16b2, gbc.sp());
        EXPECT(0xbb70, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbb6e));
        EXPECT(0xed, gbc.readMem(0xbb6f));
        // CB ED 0153
        gbc.setState(0xae5d, 0x50f1, 0x1af0, 0x2944, 0xf50, 0xcc0a, 0x0, 0x0);
        gbc.writeMem(0xae5d, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x50f1, gbc.sp());
        EXPECT(0xae5f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xae5d));
        EXPECT(0xed, gbc.readMem(0xae5e));
        // CB ED 0154
        gbc.setState(0x4f62, 0x7041, 0x3b50, 0x8d4b, 0x1558, 0x536e, 0x1, 0x1);
        gbc.writeMem(0x4f62, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x7041, gbc.sp());
        EXPECT(0x4f64, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB ED 0156
        gbc.setState(0x50aa, 0xaacc, 0x2c0, 0xc239, 0xa6f3, 0xcad0, 0x0, 0x1);
        gbc.writeMem(0x50aa, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0xaacc, gbc.sp());
        EXPECT(0x50ac, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB ED 0157
        gbc.setState(0x678a, 0xa129, 0xe870, 0x1ca, 0xe137, 0x3060, 0x0, 0x0);
        gbc.writeMem(0x678a, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0xa129, gbc.sp());
        EXPECT(0x678c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB ED 0158
        gbc.setState(0x4d20, 0xfc10, 0x92f0, 0xb7a8, 0x5523, 0xb020, 0x1, 0x1);
        gbc.writeMem(0x4d20, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0xfc10, gbc.sp());
        EXPECT(0x4d22, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB ED 0159
        gbc.setState(0x5b90, 0xe4ff, 0xf170, 0x3d16, 0xbe1b, 0xedd4, 0x1, 0x0);
        gbc.writeMem(0x5b90, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0xe4ff, gbc.sp());
        EXPECT(0x5b92, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB ED 015A
        gbc.setState(0xbdb6, 0xe64e, 0xd0, 0x5bcc, 0x8de6, 0x2498, 0x1, 0x0);
        gbc.writeMem(0xbdb6, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0xe64e, gbc.sp());
        EXPECT(0xbdb8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbdb6));
        EXPECT(0xed, gbc.readMem(0xbdb7));
        // CB ED 015B
        gbc.setState(0xdc1, 0x77a3, 0x7f80, 0xf574, 0x820, 0x4bea, 0x1, 0x0);
        gbc.writeMem(0xdc1, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x77a3, gbc.sp());
        EXPECT(0xdc3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB ED 015C
        gbc.setState(0x3d17, 0x9ac, 0xaf0, 0x33c5, 0x19b2, 0x8ee1, 0x0, 0x0);
        gbc.writeMem(0x3d17, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0x9ac, gbc.sp());
        EXPECT(0x3d19, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB ED 015D
        gbc.setState(0x6048, 0xab5d, 0xf750, 0xb83d, 0x9bb3, 0x9c06, 0x1, 0x1);
        gbc.writeMem(0x6048, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0xab5d, gbc.sp());
        EXPECT(0x604a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB ED 015E
        gbc.setState(0xbb94, 0xed2a, 0xe940, 0x6f4b, 0xef11, 0xea0d, 0x0, 0x1);
        gbc.writeMem(0xbb94, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0xed2a, gbc.sp());
        EXPECT(0xbb96, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbb94));
        EXPECT(0xed, gbc.readMem(0xbb95));
        // CB ED 015F
        gbc.setState(0xb6d6, 0xdb64, 0x7c0, 0xa39, 0x788c, 0x1dec, 0x0, 0x0);
        gbc.writeMem(0xb6d6, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0xdb64, gbc.sp());
        EXPECT(0xb6d8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb6d6));
        EXPECT(0xed, gbc.readMem(0xb6d7));
        // CB ED 0160
        gbc.setState(0x574, 0x622a, 0x5c30, 0xf800, 0x38f3, 0xe4dc, 0x0, 0x0);
        gbc.writeMem(0x574, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x622a, gbc.sp());
        EXPECT(0x576, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB ED 0161
        gbc.setState(0x8be3, 0x8ba5, 0xdc30, 0x9a5b, 0x81f9, 0x2cd2, 0x1, 0x1);
        gbc.writeMem(0x8be3, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x8ba5, gbc.sp());
        EXPECT(0x8be5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8be3));
        EXPECT(0xed, gbc.readMem(0x8be4));
        // CB ED 0162
        gbc.setState(0x82b1, 0x22f1, 0x5200, 0xd913, 0x1954, 0x3606, 0x0, 0x1);
        gbc.writeMem(0x82b1, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x22f1, gbc.sp());
        EXPECT(0x82b3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x82b1));
        EXPECT(0xed, gbc.readMem(0x82b2));
        // CB ED 0163
        gbc.setState(0xa678, 0x319c, 0x19d0, 0x7e9b, 0x4372, 0x340c, 0x1, 0x1);
        gbc.writeMem(0xa678, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x319c, gbc.sp());
        EXPECT(0xa67a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa678));
        EXPECT(0xed, gbc.readMem(0xa679));
        // CB ED 0165
        gbc.setState(0x9f97, 0x509e, 0xcfc0, 0x5da6, 0xb70f, 0x47ff, 0x1, 0x0);
        gbc.writeMem(0x9f97, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x509e, gbc.sp());
        EXPECT(0x9f99, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9f97));
        EXPECT(0xed, gbc.readMem(0x9f98));
        // CB ED 0166
        gbc.setState(0xc782, 0x4319, 0xecb0, 0x47ee, 0xef63, 0x641b, 0x0, 0x1);
        gbc.writeMem(0xc782, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x4319, gbc.sp());
        EXPECT(0xc784, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc782));
        EXPECT(0xed, gbc.readMem(0xc783));
        // CB ED 0167
        gbc.setState(0xa8f3, 0xc3cd, 0x8090, 0xff77, 0x671f, 0x8ab, 0x1, 0x1);
        gbc.writeMem(0xa8f3, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0xc3cd, gbc.sp());
        EXPECT(0xa8f5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa8f3));
        EXPECT(0xed, gbc.readMem(0xa8f4));
        // CB ED 0168
        gbc.setState(0x51f7, 0x700d, 0xcb00, 0xb2db, 0x22a3, 0x682a, 0x0, 0x1);
        gbc.writeMem(0x51f7, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x700d, gbc.sp());
        EXPECT(0x51f9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB ED 0169
        gbc.setState(0x62eb, 0xb80a, 0x2c30, 0xeeeb, 0xb0a9, 0x7db8, 0x1, 0x1);
        gbc.writeMem(0x62eb, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0xb80a, gbc.sp());
        EXPECT(0x62ed, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB ED 016A
        gbc.setState(0xe5be, 0xed12, 0xda00, 0xd427, 0x4b4a, 0xd98e, 0x1, 0x1);
        gbc.writeMem(0xe5be, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0xed12, gbc.sp());
        EXPECT(0xe5c0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe5be));
        EXPECT(0xed, gbc.readMem(0xe5bf));
        // CB ED 016B
        gbc.setState(0x8a39, 0x6e08, 0x5ad0, 0x6420, 0x563a, 0x9451, 0x0, 0x1);
        gbc.writeMem(0x8a39, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x6e08, gbc.sp());
        EXPECT(0x8a3b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8a39));
        EXPECT(0xed, gbc.readMem(0x8a3a));
        // CB ED 016C
        gbc.setState(0x12fd, 0xaaf0, 0x3320, 0xb1b3, 0xd52e, 0xfe13, 0x0, 0x0);
        gbc.writeMem(0x12fd, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0xaaf0, gbc.sp());
        EXPECT(0x12ff, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB ED 016D
        gbc.setState(0xcba0, 0x22d2, 0xf840, 0x60ce, 0x7433, 0x5a0d, 0x1, 0x1);
        gbc.writeMem(0xcba0, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x22d2, gbc.sp());
        EXPECT(0xcba2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcba0));
        EXPECT(0xed, gbc.readMem(0xcba1));
        // CB ED 016E
        gbc.setState(0x6b4d, 0xdfd4, 0x7a90, 0x9e76, 0xcdab, 0xc15c, 0x0, 0x1);
        gbc.writeMem(0x6b4d, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0xdfd4, gbc.sp());
        EXPECT(0x6b4f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB ED 016F
        gbc.setState(0x91fc, 0x83be, 0xd920, 0xca30, 0x3439, 0x6f7d, 0x0, 0x0);
        gbc.writeMem(0x91fc, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x83be, gbc.sp());
        EXPECT(0x91fe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x91fc));
        EXPECT(0xed, gbc.readMem(0x91fd));
        // CB ED 0170
        gbc.setState(0x2389, 0x93a9, 0xdb10, 0x6897, 0x57e8, 0x6cbb, 0x1, 0x1);
        gbc.writeMem(0x2389, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x93a9, gbc.sp());
        EXPECT(0x238b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB ED 0171
        gbc.setState(0x6610, 0xe326, 0xdbb0, 0xeb6, 0x6fe3, 0x2aee, 0x1, 0x1);
        gbc.writeMem(0x6610, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0xe326, gbc.sp());
        EXPECT(0x6612, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB ED 0172
        gbc.setState(0x7eb3, 0x6fa8, 0x980, 0x8555, 0xac53, 0x6dfd, 0x1, 0x0);
        gbc.writeMem(0x7eb3, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x6fa8, gbc.sp());
        EXPECT(0x7eb5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB ED 0173
        gbc.setState(0x8de1, 0x358, 0x96f0, 0xf9b5, 0x9144, 0x8c66, 0x0, 0x0);
        gbc.writeMem(0x8de1, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x358, gbc.sp());
        EXPECT(0x8de3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8de1));
        EXPECT(0xed, gbc.readMem(0x8de2));
        // CB ED 0174
        gbc.setState(0x4374, 0x6b59, 0x5480, 0x4fdf, 0x517f, 0xab63, 0x1, 0x0);
        gbc.writeMem(0x4374, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x6b59, gbc.sp());
        EXPECT(0x4376, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB ED 0175
        gbc.setState(0x1762, 0xf871, 0x78d0, 0xfd84, 0xbabd, 0x92e2, 0x0, 0x1);
        gbc.writeMem(0x1762, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0xf871, gbc.sp());
        EXPECT(0x1764, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB ED 0176
        gbc.setState(0xea8c, 0x98b0, 0xaea0, 0x1cab, 0xd3, 0x57d2, 0x0, 0x1);
        gbc.writeMem(0xea8c, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x98b0, gbc.sp());
        EXPECT(0xea8e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xea8c));
        EXPECT(0xed, gbc.readMem(0xea8d));
        // CB ED 0177
        gbc.setState(0x618f, 0x6929, 0x1340, 0x7044, 0xbc71, 0x3904, 0x1, 0x1);
        gbc.writeMem(0x618f, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x6929, gbc.sp());
        EXPECT(0x6191, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB ED 0178
        gbc.setState(0x5b7a, 0x74f1, 0xbf60, 0xd518, 0x7e67, 0x8612, 0x0, 0x1);
        gbc.writeMem(0x5b7a, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x74f1, gbc.sp());
        EXPECT(0x5b7c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB ED 0179
        gbc.setState(0x231c, 0xcc09, 0x100, 0x5787, 0xcb5, 0xc303, 0x0, 0x0);
        gbc.writeMem(0x231c, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0xcc09, gbc.sp());
        EXPECT(0x231e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB ED 017A
        gbc.setState(0x453d, 0x5fb7, 0x9460, 0xd827, 0x87f8, 0x4477, 0x0, 0x1);
        gbc.writeMem(0x453d, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x5fb7, gbc.sp());
        EXPECT(0x453f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB ED 017B
        gbc.setState(0x6dd3, 0xd018, 0x46e0, 0xf6fd, 0x2121, 0x8649, 0x0, 0x1);
        gbc.writeMem(0x6dd3, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0xd018, gbc.sp());
        EXPECT(0x6dd5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB ED 017D
        gbc.setState(0x311c, 0xe0a8, 0xa110, 0xa32e, 0x349e, 0x150, 0x0, 0x0);
        gbc.writeMem(0x311c, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0xe0a8, gbc.sp());
        EXPECT(0x311e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB ED 017E
        gbc.setState(0xd86e, 0xd0e3, 0x6140, 0xa8d6, 0x7d61, 0x1813, 0x0, 0x0);
        gbc.writeMem(0xd86e, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0xd0e3, gbc.sp());
        EXPECT(0xd870, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd86e));
        EXPECT(0xed, gbc.readMem(0xd86f));
        // CB ED 017F
        gbc.setState(0x508e, 0x8598, 0x20f0, 0x3046, 0x3416, 0xcb0c, 0x1, 0x0);
        gbc.writeMem(0x508e, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x8598, gbc.sp());
        EXPECT(0x5090, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB ED 0180
        gbc.setState(0xd94e, 0xff57, 0x8bf0, 0xdffb, 0x457f, 0x9239, 0x1, 0x1);
        gbc.writeMem(0xd94e, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0xff57, gbc.sp());
        EXPECT(0xd950, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd94e));
        EXPECT(0xed, gbc.readMem(0xd94f));
        // CB ED 0181
        gbc.setState(0xc8d8, 0xddea, 0xdd40, 0x5ccb, 0xe09c, 0x718f, 0x1, 0x0);
        gbc.writeMem(0xc8d8, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0xddea, gbc.sp());
        EXPECT(0xc8da, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc8d8));
        EXPECT(0xed, gbc.readMem(0xc8d9));
        // CB ED 0182
        gbc.setState(0xac22, 0x12e1, 0x49a0, 0x9e0, 0x4be4, 0x7efc, 0x1, 0x1);
        gbc.writeMem(0xac22, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x12e1, gbc.sp());
        EXPECT(0xac24, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xac22));
        EXPECT(0xed, gbc.readMem(0xac23));
        // CB ED 0183
        gbc.setState(0x56c8, 0x9c71, 0xc480, 0xb5ad, 0x5efd, 0x837, 0x0, 0x1);
        gbc.writeMem(0x56c8, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x9c71, gbc.sp());
        EXPECT(0x56ca, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB ED 0184
        gbc.setState(0x2a7b, 0xcd7f, 0x99f0, 0xb348, 0x5381, 0xbd52, 0x0, 0x0);
        gbc.writeMem(0x2a7b, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0xcd7f, gbc.sp());
        EXPECT(0x2a7d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB ED 0185
        gbc.setState(0xb72, 0xcdc4, 0x3510, 0x2f83, 0x3fd, 0x9dd, 0x0, 0x1);
        gbc.writeMem(0xb72, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0xcdc4, gbc.sp());
        EXPECT(0xb74, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB ED 0186
        gbc.setState(0xa4f7, 0x7ca8, 0x56e0, 0xc7e5, 0x9bd9, 0x9081, 0x0, 0x0);
        gbc.writeMem(0xa4f7, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x7ca8, gbc.sp());
        EXPECT(0xa4f9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa4f7));
        EXPECT(0xed, gbc.readMem(0xa4f8));
        // CB ED 0187
        gbc.setState(0x20bc, 0x92d0, 0x6020, 0x8dc4, 0x6177, 0x55f9, 0x0, 0x0);
        gbc.writeMem(0x20bc, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x92d0, gbc.sp());
        EXPECT(0x20be, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB ED 0188
        gbc.setState(0x5b11, 0x71a, 0x3720, 0xd638, 0x25d8, 0x7dc8, 0x0, 0x0);
        gbc.writeMem(0x5b11, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x71a, gbc.sp());
        EXPECT(0x5b13, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB ED 0189
        gbc.setState(0xafdf, 0xcb7, 0xb270, 0xcef, 0xa3aa, 0x65df, 0x0, 0x1);
        gbc.writeMem(0xafdf, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0xcb7, gbc.sp());
        EXPECT(0xafe1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xafdf));
        EXPECT(0xed, gbc.readMem(0xafe0));
        // CB ED 018A
        gbc.setState(0xe522, 0x4ab6, 0x41c0, 0x8daf, 0xe2b7, 0xd9e3, 0x1, 0x0);
        gbc.writeMem(0xe522, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x4ab6, gbc.sp());
        EXPECT(0xe524, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe522));
        EXPECT(0xed, gbc.readMem(0xe523));
        // CB ED 018B
        gbc.setState(0xe933, 0xae38, 0x2cf0, 0x9725, 0x7fc6, 0x2b22, 0x1, 0x0);
        gbc.writeMem(0xe933, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0xae38, gbc.sp());
        EXPECT(0xe935, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe933));
        EXPECT(0xed, gbc.readMem(0xe934));
        // CB ED 018C
        gbc.setState(0x31c2, 0x3d65, 0x2d20, 0x653c, 0x196d, 0xbfef, 0x1, 0x1);
        gbc.writeMem(0x31c2, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x3d65, gbc.sp());
        EXPECT(0x31c4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB ED 018D
        gbc.setState(0xed9, 0x7982, 0x310, 0x2176, 0x283e, 0xea16, 0x1, 0x1);
        gbc.writeMem(0xed9, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x7982, gbc.sp());
        EXPECT(0xedb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB ED 018E
        gbc.setState(0x6f34, 0xb48f, 0xb00, 0xefb1, 0x7356, 0x38da, 0x0, 0x1);
        gbc.writeMem(0x6f34, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0xb48f, gbc.sp());
        EXPECT(0x6f36, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB ED 018F
        gbc.setState(0x9db3, 0x33d0, 0xfb20, 0x5009, 0x55c4, 0xf18c, 0x0, 0x1);
        gbc.writeMem(0x9db3, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x33d0, gbc.sp());
        EXPECT(0x9db5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9db3));
        EXPECT(0xed, gbc.readMem(0x9db4));
        // CB ED 0190
        gbc.setState(0x730, 0x2f89, 0x9fd0, 0x7569, 0x68cc, 0x9ba5, 0x0, 0x0);
        gbc.writeMem(0x730, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x2f89, gbc.sp());
        EXPECT(0x732, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB ED 0191
        gbc.setState(0xaeeb, 0x7ba1, 0x64a0, 0x14be, 0xcc62, 0x58ad, 0x0, 0x0);
        gbc.writeMem(0xaeeb, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x7ba1, gbc.sp());
        EXPECT(0xaeed, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaeeb));
        EXPECT(0xed, gbc.readMem(0xaeec));
        // CB ED 0192
        gbc.setState(0xb002, 0xe6cb, 0xe5b0, 0x871d, 0x3ead, 0xe113, 0x1, 0x1);
        gbc.writeMem(0xb002, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0xe6cb, gbc.sp());
        EXPECT(0xb004, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb002));
        EXPECT(0xed, gbc.readMem(0xb003));
        // CB ED 0193
        gbc.setState(0xa3cc, 0x1ac, 0xd300, 0xf148, 0x980f, 0x7dcd, 0x0, 0x0);
        gbc.writeMem(0xa3cc, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x1ac, gbc.sp());
        EXPECT(0xa3ce, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa3cc));
        EXPECT(0xed, gbc.readMem(0xa3cd));
        // CB ED 0194
        gbc.setState(0x25a7, 0x1717, 0x8f40, 0x198c, 0x3d3f, 0x7ba5, 0x1, 0x0);
        gbc.writeMem(0x25a7, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x1717, gbc.sp());
        EXPECT(0x25a9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB ED 0195
        gbc.setState(0x33d, 0x1da7, 0xa3b0, 0x3101, 0x73e3, 0x1050, 0x1, 0x1);
        gbc.writeMem(0x33d, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x1da7, gbc.sp());
        EXPECT(0x33f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB ED 0196
        gbc.setState(0x6351, 0x3e55, 0x7d80, 0xb14, 0x4c5b, 0xfe11, 0x1, 0x1);
        gbc.writeMem(0x6351, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x3e55, gbc.sp());
        EXPECT(0x6353, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB ED 0197
        gbc.setState(0x31c2, 0xb4ce, 0x3e30, 0x76dc, 0x5c06, 0x63c, 0x0, 0x1);
        gbc.writeMem(0x31c2, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0xb4ce, gbc.sp());
        EXPECT(0x31c4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB ED 0199
        gbc.setState(0x5172, 0xc321, 0xf750, 0x7780, 0x5a1b, 0x3822, 0x0, 0x1);
        gbc.writeMem(0x5172, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0xc321, gbc.sp());
        EXPECT(0x5174, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB ED 019A
        gbc.setState(0x8539, 0x6135, 0xa290, 0xdd7f, 0xaa71, 0x5cda, 0x1, 0x0);
        gbc.writeMem(0x8539, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0x6135, gbc.sp());
        EXPECT(0x853b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8539));
        EXPECT(0xed, gbc.readMem(0x853a));
        // CB ED 019B
        gbc.setState(0x2c99, 0x4d6f, 0xe9b0, 0x331a, 0x32ec, 0xbf85, 0x1, 0x0);
        gbc.writeMem(0x2c99, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x4d6f, gbc.sp());
        EXPECT(0x2c9b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB ED 019D
        gbc.setState(0x30ab, 0xe50, 0xb80, 0xb1eb, 0x8704, 0x5b05, 0x0, 0x1);
        gbc.writeMem(0x30ab, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0xe50, gbc.sp());
        EXPECT(0x30ad, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB ED 019E
        gbc.setState(0xcc19, 0xd7c1, 0x22c0, 0xfd60, 0xbb10, 0x81e8, 0x0, 0x0);
        gbc.writeMem(0xcc19, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0xd7c1, gbc.sp());
        EXPECT(0xcc1b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcc19));
        EXPECT(0xed, gbc.readMem(0xcc1a));
        // CB ED 019F
        gbc.setState(0xd3d2, 0x74aa, 0x1890, 0x95d4, 0x2f3e, 0xb165, 0x0, 0x1);
        gbc.writeMem(0xd3d2, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x74aa, gbc.sp());
        EXPECT(0xd3d4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd3d2));
        EXPECT(0xed, gbc.readMem(0xd3d3));
        // CB ED 01A0
        gbc.setState(0x8faf, 0xa669, 0x63f0, 0x44e5, 0xac2e, 0x7c66, 0x0, 0x0);
        gbc.writeMem(0x8faf, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0xa669, gbc.sp());
        EXPECT(0x8fb1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8faf));
        EXPECT(0xed, gbc.readMem(0x8fb0));
        // CB ED 01A1
        gbc.setState(0xc32f, 0xbc7a, 0x25b0, 0x2f1a, 0xc3c5, 0x2463, 0x0, 0x1);
        gbc.writeMem(0xc32f, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0xbc7a, gbc.sp());
        EXPECT(0xc331, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc32f));
        EXPECT(0xed, gbc.readMem(0xc330));
        // CB ED 01A3
        gbc.setState(0x24e2, 0x1ea7, 0xb440, 0xa231, 0x13f, 0x57e, 0x1, 0x1);
        gbc.writeMem(0x24e2, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0x1ea7, gbc.sp());
        EXPECT(0x24e4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB ED 01A4
        gbc.setState(0xc1a3, 0x9e54, 0xf850, 0x1b16, 0x82e8, 0x2660, 0x0, 0x0);
        gbc.writeMem(0xc1a3, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x9e54, gbc.sp());
        EXPECT(0xc1a5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc1a3));
        EXPECT(0xed, gbc.readMem(0xc1a4));
        // CB ED 01A5
        gbc.setState(0xc701, 0x6944, 0xbba0, 0x754e, 0xe3d9, 0x80ab, 0x0, 0x1);
        gbc.writeMem(0xc701, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x6944, gbc.sp());
        EXPECT(0xc703, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc701));
        EXPECT(0xed, gbc.readMem(0xc702));
        // CB ED 01A7
        gbc.setState(0xef2d, 0x2030, 0x22e0, 0x94f, 0x90c3, 0xc7f7, 0x0, 0x0);
        gbc.writeMem(0xef2d, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x2030, gbc.sp());
        EXPECT(0xef2f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xef2d));
        EXPECT(0xed, gbc.readMem(0xef2e));
        // CB ED 01A8
        gbc.setState(0x79b4, 0xac17, 0x7030, 0x3889, 0x34fa, 0xa90c, 0x1, 0x1);
        gbc.writeMem(0x79b4, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0xac17, gbc.sp());
        EXPECT(0x79b6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB ED 01A9
        gbc.setState(0x7d59, 0x30ed, 0x4350, 0x1f9f, 0xa7fc, 0xc946, 0x1, 0x1);
        gbc.writeMem(0x7d59, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x30ed, gbc.sp());
        EXPECT(0x7d5b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB ED 01AA
        gbc.setState(0x2aff, 0xb393, 0xa990, 0x2eb3, 0x943c, 0xddf8, 0x1, 0x1);
        gbc.writeMem(0x2aff, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0xb393, gbc.sp());
        EXPECT(0x2b01, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB ED 01AB
        gbc.setState(0xb2d3, 0xee88, 0x8490, 0xf2a1, 0xe278, 0x1abc, 0x1, 0x0);
        gbc.writeMem(0xb2d3, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0xee88, gbc.sp());
        EXPECT(0xb2d5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb2d3));
        EXPECT(0xed, gbc.readMem(0xb2d4));
        // CB ED 01AD
        gbc.setState(0x416f, 0xf200, 0xddf0, 0xf344, 0xbdca, 0x89a6, 0x0, 0x1);
        gbc.writeMem(0x416f, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0xf200, gbc.sp());
        EXPECT(0x4171, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB ED 01AE
        gbc.setState(0xc195, 0xb1d5, 0xe670, 0x5be7, 0xa775, 0x241a, 0x1, 0x1);
        gbc.writeMem(0xc195, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0xb1d5, gbc.sp());
        EXPECT(0xc197, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc195));
        EXPECT(0xed, gbc.readMem(0xc196));
        // CB ED 01AF
        gbc.setState(0xaadf, 0xbebd, 0x1f00, 0x7bef, 0xa800, 0xce5e, 0x0, 0x1);
        gbc.writeMem(0xaadf, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0xbebd, gbc.sp());
        EXPECT(0xaae1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaadf));
        EXPECT(0xed, gbc.readMem(0xaae0));
        // CB ED 01B0
        gbc.setState(0x80a0, 0x8ceb, 0xd5c0, 0x9289, 0x779b, 0xf154, 0x1, 0x0);
        gbc.writeMem(0x80a0, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x8ceb, gbc.sp());
        EXPECT(0x80a2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x80a0));
        EXPECT(0xed, gbc.readMem(0x80a1));
        // CB ED 01B1
        gbc.setState(0xb712, 0x251d, 0xa330, 0xb583, 0xbfa0, 0x303a, 0x0, 0x1);
        gbc.writeMem(0xb712, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x251d, gbc.sp());
        EXPECT(0xb714, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb712));
        EXPECT(0xed, gbc.readMem(0xb713));
        // CB ED 01B2
        gbc.setState(0xa344, 0xa4ec, 0x9a40, 0xf5bd, 0xc8c, 0xef0f, 0x1, 0x0);
        gbc.writeMem(0xa344, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0xa4ec, gbc.sp());
        EXPECT(0xa346, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa344));
        EXPECT(0xed, gbc.readMem(0xa345));
        // CB ED 01B3
        gbc.setState(0x9ec8, 0x706d, 0xa640, 0xab4d, 0xcd05, 0xb9cc, 0x1, 0x0);
        gbc.writeMem(0x9ec8, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x706d, gbc.sp());
        EXPECT(0x9eca, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9ec8));
        EXPECT(0xed, gbc.readMem(0x9ec9));
        // CB ED 01B4
        gbc.setState(0x7b7d, 0x4c0, 0xea60, 0x9e9c, 0xcd8b, 0x6b95, 0x0, 0x0);
        gbc.writeMem(0x7b7d, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x4c0, gbc.sp());
        EXPECT(0x7b7f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB ED 01B5
        gbc.setState(0x2a7f, 0xdc7f, 0xd220, 0xb9fc, 0x4f1a, 0xd456, 0x0, 0x0);
        gbc.writeMem(0x2a7f, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0xdc7f, gbc.sp());
        EXPECT(0x2a81, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB ED 01B6
        gbc.setState(0x748c, 0x8757, 0xb790, 0x7293, 0x750c, 0xf90e, 0x0, 0x1);
        gbc.writeMem(0x748c, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x8757, gbc.sp());
        EXPECT(0x748e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB ED 01B7
        gbc.setState(0x1ade, 0x5f20, 0x1a90, 0x6c05, 0x5583, 0xff15, 0x1, 0x0);
        gbc.writeMem(0x1ade, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x5f20, gbc.sp());
        EXPECT(0x1ae0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB ED 01B8
        gbc.setState(0x7264, 0x2271, 0x6940, 0xd1ff, 0x6780, 0x94ee, 0x1, 0x0);
        gbc.writeMem(0x7264, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x2271, gbc.sp());
        EXPECT(0x7266, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB ED 01B9
        gbc.setState(0x8efb, 0x3481, 0xea80, 0x9588, 0xaac3, 0xd55d, 0x1, 0x0);
        gbc.writeMem(0x8efb, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x3481, gbc.sp());
        EXPECT(0x8efd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8efb));
        EXPECT(0xed, gbc.readMem(0x8efc));
        // CB ED 01BA
        gbc.setState(0xc58, 0x8f4b, 0xa260, 0x284d, 0x8f49, 0x6a83, 0x0, 0x0);
        gbc.writeMem(0xc58, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0x8f4b, gbc.sp());
        EXPECT(0xc5a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB ED 01BB
        gbc.setState(0x3ebf, 0x6be6, 0x2700, 0x1130, 0xba01, 0x55cb, 0x1, 0x0);
        gbc.writeMem(0x3ebf, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x6be6, gbc.sp());
        EXPECT(0x3ec1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB ED 01BC
        gbc.setState(0x2582, 0x48e1, 0x6930, 0x2dd2, 0xe07c, 0xce17, 0x0, 0x0);
        gbc.writeMem(0x2582, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x48e1, gbc.sp());
        EXPECT(0x2584, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB ED 01BD
        gbc.setState(0x6656, 0x75fb, 0xe170, 0x6362, 0x81fc, 0xbc21, 0x1, 0x0);
        gbc.writeMem(0x6656, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x75fb, gbc.sp());
        EXPECT(0x6658, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB ED 01BE
        gbc.setState(0xe3df, 0xc2cd, 0x7f30, 0x5c92, 0x26aa, 0xc334, 0x1, 0x0);
        gbc.writeMem(0xe3df, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0xc2cd, gbc.sp());
        EXPECT(0xe3e1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe3df));
        EXPECT(0xed, gbc.readMem(0xe3e0));
        // CB ED 01BF
        gbc.setState(0x6e45, 0xa5fc, 0xe80, 0x4b63, 0x548e, 0x54e4, 0x1, 0x0);
        gbc.writeMem(0x6e45, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0xa5fc, gbc.sp());
        EXPECT(0x6e47, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB ED 01C0
        gbc.setState(0x521c, 0x5100, 0x7e20, 0xb6b9, 0x1fd2, 0xa280, 0x1, 0x1);
        gbc.writeMem(0x521c, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x5100, gbc.sp());
        EXPECT(0x521e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB ED 01C1
        gbc.setState(0x2100, 0xaffc, 0x8290, 0x96a7, 0xbb66, 0xbd2, 0x1, 0x0);
        gbc.writeMem(0x2100, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0xaffc, gbc.sp());
        EXPECT(0x2102, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB ED 01C2
        gbc.setState(0xa75c, 0x7296, 0xa250, 0xd547, 0xffd5, 0x79d0, 0x0, 0x1);
        gbc.writeMem(0xa75c, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x7296, gbc.sp());
        EXPECT(0xa75e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa75c));
        EXPECT(0xed, gbc.readMem(0xa75d));
        // CB ED 01C3
        gbc.setState(0xb375, 0x60eb, 0x5390, 0x76b6, 0xa3ce, 0xc147, 0x0, 0x0);
        gbc.writeMem(0xb375, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x60eb, gbc.sp());
        EXPECT(0xb377, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb375));
        EXPECT(0xed, gbc.readMem(0xb376));
        // CB ED 01C4
        gbc.setState(0x5366, 0x7e2a, 0xfed0, 0x25f6, 0x15e1, 0xc87d, 0x1, 0x1);
        gbc.writeMem(0x5366, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x7e2a, gbc.sp());
        EXPECT(0x5368, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB ED 01C5
        gbc.setState(0x5973, 0xfacb, 0xd000, 0xc19a, 0x9e3a, 0x2bf7, 0x0, 0x0);
        gbc.writeMem(0x5973, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0xfacb, gbc.sp());
        EXPECT(0x5975, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB ED 01C6
        gbc.setState(0x3073, 0x8ae5, 0xce40, 0x43e7, 0xc689, 0x27dc, 0x1, 0x0);
        gbc.writeMem(0x3073, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x8ae5, gbc.sp());
        EXPECT(0x3075, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB ED 01C7
        gbc.setState(0xe3a8, 0x3566, 0xa000, 0x6857, 0x31f5, 0x73e6, 0x0, 0x1);
        gbc.writeMem(0xe3a8, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x3566, gbc.sp());
        EXPECT(0xe3aa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe3a8));
        EXPECT(0xed, gbc.readMem(0xe3a9));
        // CB ED 01C8
        gbc.setState(0x5073, 0xfcb3, 0xdd0, 0xd3c8, 0x7411, 0x384c, 0x1, 0x0);
        gbc.writeMem(0x5073, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0xfcb3, gbc.sp());
        EXPECT(0x5075, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB ED 01C9
        gbc.setState(0xa8db, 0xcc51, 0xc6d0, 0xd709, 0xdc9, 0x146e, 0x0, 0x1);
        gbc.writeMem(0xa8db, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0xcc51, gbc.sp());
        EXPECT(0xa8dd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa8db));
        EXPECT(0xed, gbc.readMem(0xa8dc));
        // CB ED 01CA
        gbc.setState(0x1be2, 0xb293, 0x3b60, 0x7799, 0xac05, 0xcaf5, 0x0, 0x1);
        gbc.writeMem(0x1be2, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0xb293, gbc.sp());
        EXPECT(0x1be4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB ED 01CB
        gbc.setState(0x7a99, 0xcd32, 0x9660, 0x5bcd, 0x6a6b, 0x496b, 0x0, 0x0);
        gbc.writeMem(0x7a99, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0xcd32, gbc.sp());
        EXPECT(0x7a9b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB ED 01CC
        gbc.setState(0x3a26, 0xf970, 0xb150, 0xb0b2, 0x6504, 0xfd7d, 0x0, 0x1);
        gbc.writeMem(0x3a26, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0xf970, gbc.sp());
        EXPECT(0x3a28, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB ED 01CD
        gbc.setState(0x6cb, 0xe342, 0x7810, 0x7352, 0x183d, 0x7408, 0x0, 0x1);
        gbc.writeMem(0x6cb, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0xe342, gbc.sp());
        EXPECT(0x6cd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB ED 01CE
        gbc.setState(0xa5a3, 0x24ce, 0xa590, 0x1f95, 0x8892, 0x3576, 0x0, 0x0);
        gbc.writeMem(0xa5a3, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x24ce, gbc.sp());
        EXPECT(0xa5a5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa5a3));
        EXPECT(0xed, gbc.readMem(0xa5a4));
        // CB ED 01CF
        gbc.setState(0x5d57, 0x2214, 0xec80, 0xd47, 0xf6a0, 0xc0ad, 0x1, 0x0);
        gbc.writeMem(0x5d57, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x2214, gbc.sp());
        EXPECT(0x5d59, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB ED 01D0
        gbc.setState(0xe2b3, 0x113d, 0xf3a0, 0x5841, 0x5c92, 0x34af, 0x1, 0x1);
        gbc.writeMem(0xe2b3, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x113d, gbc.sp());
        EXPECT(0xe2b5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe2b3));
        EXPECT(0xed, gbc.readMem(0xe2b4));
        // CB ED 01D1
        gbc.setState(0x4b21, 0xae59, 0x2df0, 0x8bc, 0xca2d, 0x6ba0, 0x0, 0x0);
        gbc.writeMem(0x4b21, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0xae59, gbc.sp());
        EXPECT(0x4b23, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB ED 01D2
        gbc.setState(0x9c20, 0x3af1, 0x1860, 0xd404, 0xcece, 0xe23f, 0x0, 0x0);
        gbc.writeMem(0x9c20, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0x3af1, gbc.sp());
        EXPECT(0x9c22, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9c20));
        EXPECT(0xed, gbc.readMem(0x9c21));
        // CB ED 01D3
        gbc.setState(0x29c8, 0xab13, 0xc4c0, 0x2494, 0x490d, 0xe3b1, 0x1, 0x1);
        gbc.writeMem(0x29c8, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0xab13, gbc.sp());
        EXPECT(0x29ca, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB ED 01D4
        gbc.setState(0x9264, 0x27a5, 0xba50, 0x9fd, 0x68b4, 0xb33e, 0x0, 0x1);
        gbc.writeMem(0x9264, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x27a5, gbc.sp());
        EXPECT(0x9266, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9264));
        EXPECT(0xed, gbc.readMem(0x9265));
        // CB ED 01D5
        gbc.setState(0xd45, 0x71aa, 0xf250, 0x14b9, 0x723a, 0x6152, 0x0, 0x0);
        gbc.writeMem(0xd45, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x71aa, gbc.sp());
        EXPECT(0xd47, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB ED 01D6
        gbc.setState(0x71ec, 0x3647, 0x4410, 0xf3bc, 0x9fc0, 0xcfd0, 0x1, 0x0);
        gbc.writeMem(0x71ec, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x3647, gbc.sp());
        EXPECT(0x71ee, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB ED 01D7
        gbc.setState(0x9b71, 0x1881, 0xb50, 0x3b33, 0x966d, 0x943, 0x0, 0x1);
        gbc.writeMem(0x9b71, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x1881, gbc.sp());
        EXPECT(0x9b73, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9b71));
        EXPECT(0xed, gbc.readMem(0x9b72));
        // CB ED 01D8
        gbc.setState(0xae5e, 0x4dfb, 0x9f20, 0x61c6, 0x339c, 0xeca1, 0x1, 0x1);
        gbc.writeMem(0xae5e, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x4dfb, gbc.sp());
        EXPECT(0xae60, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xae5e));
        EXPECT(0xed, gbc.readMem(0xae5f));
        // CB ED 01D9
        gbc.setState(0x1af9, 0xc50d, 0x8cf0, 0x6edf, 0xb710, 0x1136, 0x0, 0x0);
        gbc.writeMem(0x1af9, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0xc50d, gbc.sp());
        EXPECT(0x1afb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB ED 01DA
        gbc.setState(0x6eaa, 0x3e15, 0xb710, 0x2901, 0xef30, 0x2407, 0x0, 0x0);
        gbc.writeMem(0x6eaa, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x3e15, gbc.sp());
        EXPECT(0x6eac, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB ED 01DB
        gbc.setState(0x3fdf, 0xbf3a, 0xeca0, 0x5b95, 0x93d9, 0x4500, 0x0, 0x0);
        gbc.writeMem(0x3fdf, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0xbf3a, gbc.sp());
        EXPECT(0x3fe1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB ED 01DC
        gbc.setState(0x3a04, 0xbd11, 0x62d0, 0xea7, 0x4e09, 0xf72f, 0x1, 0x0);
        gbc.writeMem(0x3a04, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0xbd11, gbc.sp());
        EXPECT(0x3a06, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB ED 01DD
        gbc.setState(0xc38f, 0x797d, 0xe580, 0x4152, 0x7945, 0xce05, 0x0, 0x1);
        gbc.writeMem(0xc38f, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x797d, gbc.sp());
        EXPECT(0xc391, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc38f));
        EXPECT(0xed, gbc.readMem(0xc390));
        // CB ED 01DE
        gbc.setState(0xaa7e, 0x8668, 0x550, 0x2e6a, 0x145, 0xdc25, 0x1, 0x1);
        gbc.writeMem(0xaa7e, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x8668, gbc.sp());
        EXPECT(0xaa80, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaa7e));
        EXPECT(0xed, gbc.readMem(0xaa7f));
        // CB ED 01DF
        gbc.setState(0xd804, 0x5625, 0xddb0, 0xbd12, 0x6351, 0x6a91, 0x0, 0x0);
        gbc.writeMem(0xd804, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x5625, gbc.sp());
        EXPECT(0xd806, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd804));
        EXPECT(0xed, gbc.readMem(0xd805));
        // CB ED 01E0
        gbc.setState(0xd4e1, 0x44f8, 0xcd80, 0x3ee8, 0x29b2, 0x1dc8, 0x0, 0x1);
        gbc.writeMem(0xd4e1, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x44f8, gbc.sp());
        EXPECT(0xd4e3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd4e1));
        EXPECT(0xed, gbc.readMem(0xd4e2));
        // CB ED 01E1
        gbc.setState(0x5442, 0x401e, 0x8f50, 0xbde, 0xfee5, 0xcbd1, 0x0, 0x1);
        gbc.writeMem(0x5442, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x401e, gbc.sp());
        EXPECT(0x5444, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB ED 01E2
        gbc.setState(0xd37e, 0x1e81, 0x4ff0, 0x2a28, 0x8b86, 0x32a6, 0x0, 0x0);
        gbc.writeMem(0xd37e, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x1e81, gbc.sp());
        EXPECT(0xd380, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd37e));
        EXPECT(0xed, gbc.readMem(0xd37f));
        // CB ED 01E3
        gbc.setState(0xe475, 0x703e, 0x3db0, 0xc97d, 0xe257, 0xf56d, 0x1, 0x0);
        gbc.writeMem(0xe475, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x703e, gbc.sp());
        EXPECT(0xe477, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe475));
        EXPECT(0xed, gbc.readMem(0xe476));
        // CB ED 01E4
        gbc.setState(0x3ab3, 0x511a, 0xf6a0, 0xbb29, 0x4bf9, 0xe7ca, 0x0, 0x1);
        gbc.writeMem(0x3ab3, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x511a, gbc.sp());
        EXPECT(0x3ab5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB ED 01E5
        gbc.setState(0x3f0b, 0x6559, 0xfa80, 0xd8b2, 0xe628, 0xef92, 0x0, 0x0);
        gbc.writeMem(0x3f0b, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x6559, gbc.sp());
        EXPECT(0x3f0d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB ED 01E6
        gbc.setState(0x823d, 0x9ee9, 0x40b0, 0xa763, 0x7b6, 0xce06, 0x0, 0x0);
        gbc.writeMem(0x823d, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x9ee9, gbc.sp());
        EXPECT(0x823f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x823d));
        EXPECT(0xed, gbc.readMem(0x823e));
        // CB ED 01E7
        gbc.setState(0xb242, 0xc0c8, 0x7ee0, 0x569f, 0xbeb1, 0x69a3, 0x1, 0x1);
        gbc.writeMem(0xb242, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0xc0c8, gbc.sp());
        EXPECT(0xb244, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb242));
        EXPECT(0xed, gbc.readMem(0xb243));
        // CB ED 01E8
        gbc.setState(0xc9c0, 0x5d3a, 0xaa00, 0x1fce, 0x6631, 0x26e2, 0x0, 0x0);
        gbc.writeMem(0xc9c0, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x5d3a, gbc.sp());
        EXPECT(0xc9c2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc9c0));
        EXPECT(0xed, gbc.readMem(0xc9c1));
        // CB ED 01E9
        gbc.setState(0xc725, 0xe171, 0xaf40, 0xe486, 0x50a2, 0x1410, 0x1, 0x0);
        gbc.writeMem(0xc725, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0xe171, gbc.sp());
        EXPECT(0xc727, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc725));
        EXPECT(0xed, gbc.readMem(0xc726));
        // CB ED 01EA
        gbc.setState(0xae11, 0x6c9e, 0xba80, 0x338b, 0x28ac, 0x3c3c, 0x0, 0x0);
        gbc.writeMem(0xae11, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x6c9e, gbc.sp());
        EXPECT(0xae13, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xae11));
        EXPECT(0xed, gbc.readMem(0xae12));
        // CB ED 01EB
        gbc.setState(0x6b10, 0x4e39, 0x1230, 0x4fc0, 0x3738, 0xc335, 0x1, 0x1);
        gbc.writeMem(0x6b10, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x4e39, gbc.sp());
        EXPECT(0x6b12, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB ED 01EC
        gbc.setState(0x129, 0x7d7a, 0xe410, 0x9675, 0x6e5, 0x7d, 0x1, 0x0);
        gbc.writeMem(0x129, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x7d7a, gbc.sp());
        EXPECT(0x12b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB ED 01ED
        gbc.setState(0xc4c9, 0x2dba, 0x1590, 0xf802, 0xce9a, 0xdc32, 0x0, 0x1);
        gbc.writeMem(0xc4c9, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x2dba, gbc.sp());
        EXPECT(0xc4cb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc4c9));
        EXPECT(0xed, gbc.readMem(0xc4ca));
        // CB ED 01EE
        gbc.setState(0x491e, 0x5030, 0xe250, 0x27b, 0xe2a8, 0x5c2f, 0x0, 0x0);
        gbc.writeMem(0x491e, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x5030, gbc.sp());
        EXPECT(0x4920, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB ED 01EF
        gbc.setState(0xee, 0x63c, 0xcdd0, 0xdb36, 0xe641, 0x8e5d, 0x1, 0x1);
        gbc.writeMem(0xee, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x63c, gbc.sp());
        EXPECT(0xf0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB ED 01F0
        gbc.setState(0x95f7, 0xd93f, 0x6100, 0x6d62, 0xa946, 0xe571, 0x0, 0x0);
        gbc.writeMem(0x95f7, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0xd93f, gbc.sp());
        EXPECT(0x95f9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x95f7));
        EXPECT(0xed, gbc.readMem(0x95f8));
        // CB ED 01F1
        gbc.setState(0x44ec, 0x8043, 0x4f20, 0x4760, 0x4a, 0x7f1c, 0x1, 0x1);
        gbc.writeMem(0x44ec, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x8043, gbc.sp());
        EXPECT(0x44ee, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB ED 01F3
        gbc.setState(0xad29, 0x8590, 0xf190, 0x6cd5, 0x394c, 0x6f7e, 0x0, 0x1);
        gbc.writeMem(0xad29, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0x8590, gbc.sp());
        EXPECT(0xad2b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xad29));
        EXPECT(0xed, gbc.readMem(0xad2a));
        // CB ED 01F4
        gbc.setState(0xe5aa, 0xf560, 0x4210, 0xb539, 0xacd2, 0xd667, 0x0, 0x1);
        gbc.writeMem(0xe5aa, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0xf560, gbc.sp());
        EXPECT(0xe5ac, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe5aa));
        EXPECT(0xed, gbc.readMem(0xe5ab));
        // CB ED 01F5
        gbc.setState(0xefc6, 0x7023, 0xf450, 0x40df, 0x8770, 0xcb09, 0x0, 0x1);
        gbc.writeMem(0xefc6, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x7023, gbc.sp());
        EXPECT(0xefc8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xefc6));
        EXPECT(0xed, gbc.readMem(0xefc7));
        // CB ED 01F6
        gbc.setState(0xe55, 0xb21e, 0x7970, 0x74fd, 0x6767, 0xbe76, 0x1, 0x1);
        gbc.writeMem(0xe55, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0xb21e, gbc.sp());
        EXPECT(0xe57, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB ED 01F7
        gbc.setState(0x2050, 0x5bc4, 0xb150, 0x1216, 0x96a7, 0x46b6, 0x0, 0x1);
        gbc.writeMem(0x2050, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x5bc4, gbc.sp());
        EXPECT(0x2052, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB ED 01F8
        gbc.setState(0x1c96, 0x8a1, 0x3010, 0xefeb, 0xf528, 0x8306, 0x1, 0x0);
        gbc.writeMem(0x1c96, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x8a1, gbc.sp());
        EXPECT(0x1c98, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB ED 01F9
        gbc.setState(0xbb62, 0x1fe1, 0xbc10, 0x9922, 0x156a, 0xff9f, 0x1, 0x0);
        gbc.writeMem(0xbb62, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x1fe1, gbc.sp());
        EXPECT(0xbb64, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbb62));
        EXPECT(0xed, gbc.readMem(0xbb63));
        // CB ED 01FA
        gbc.setState(0xa584, 0xf915, 0x83d0, 0x7d6f, 0xbc5a, 0x506f, 0x0, 0x1);
        gbc.writeMem(0xa584, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0xf915, gbc.sp());
        EXPECT(0xa586, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa584));
        EXPECT(0xed, gbc.readMem(0xa585));
        // CB ED 01FB
        gbc.setState(0x8e01, 0xa270, 0x60c0, 0xe31d, 0xb8a6, 0xba11, 0x0, 0x1);
        gbc.writeMem(0x8e01, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0xa270, gbc.sp());
        EXPECT(0x8e03, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8e01));
        EXPECT(0xed, gbc.readMem(0x8e02));
        // CB ED 01FC
        gbc.setState(0x3013, 0x20c3, 0x67c0, 0x86a5, 0x632c, 0xc281, 0x0, 0x0);
        gbc.writeMem(0x3013, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x20c3, gbc.sp());
        EXPECT(0x3015, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB ED 01FD
        gbc.setState(0xb0b1, 0xc4f7, 0xc840, 0xe40e, 0x6331, 0xc666, 0x1, 0x0);
        gbc.writeMem(0xb0b1, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0xc4f7, gbc.sp());
        EXPECT(0xb0b3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb0b1));
        EXPECT(0xed, gbc.readMem(0xb0b2));
        // CB ED 01FE
        gbc.setState(0xd0e4, 0xa4d9, 0x7d70, 0x409b, 0x1362, 0x81a7, 0x0, 0x0);
        gbc.writeMem(0xd0e4, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0xa4d9, gbc.sp());
        EXPECT(0xd0e6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd0e4));
        EXPECT(0xed, gbc.readMem(0xd0e5));
        // CB ED 01FF
        gbc.setState(0x2641, 0xa595, 0xe620, 0xf7f, 0x6208, 0xeb3a, 0x1, 0x1);
        gbc.writeMem(0x2641, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0xa595, gbc.sp());
        EXPECT(0x2643, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB ED 0200
        gbc.setState(0xab2, 0xd1f5, 0xb200, 0x8677, 0xa23b, 0xcfd3, 0x1, 0x0);
        gbc.writeMem(0xab2, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0xd1f5, gbc.sp());
        EXPECT(0xab4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB ED 0201
        gbc.setState(0xcbf, 0x6a29, 0x94c0, 0x3f2b, 0xcc16, 0x4059, 0x1, 0x0);
        gbc.writeMem(0xcbf, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x6a29, gbc.sp());
        EXPECT(0xcc1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB ED 0202
        gbc.setState(0x36b8, 0xbd6d, 0xb040, 0xac0f, 0x4683, 0x6e25, 0x0, 0x1);
        gbc.writeMem(0x36b8, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0xbd6d, gbc.sp());
        EXPECT(0x36ba, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB ED 0203
        gbc.setState(0x39a1, 0x6f0e, 0xc110, 0x6d2b, 0x52c3, 0xb138, 0x1, 0x1);
        gbc.writeMem(0x39a1, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x6f0e, gbc.sp());
        EXPECT(0x39a3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB ED 0204
        gbc.setState(0xec87, 0x560f, 0xad0, 0xd3d9, 0x34d9, 0xcb91, 0x0, 0x1);
        gbc.writeMem(0xec87, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x560f, gbc.sp());
        EXPECT(0xec89, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xec87));
        EXPECT(0xed, gbc.readMem(0xec88));
        // CB ED 0205
        gbc.setState(0x2537, 0x23d7, 0xf880, 0xd75, 0x8bf6, 0xa542, 0x1, 0x1);
        gbc.writeMem(0x2537, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x23d7, gbc.sp());
        EXPECT(0x2539, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB ED 0206
        gbc.setState(0x4874, 0x7877, 0x4cf0, 0x4300, 0xe732, 0xde41, 0x1, 0x1);
        gbc.writeMem(0x4874, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x7877, gbc.sp());
        EXPECT(0x4876, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB ED 0207
        gbc.setState(0x439e, 0x7514, 0x6250, 0x9fc7, 0x2076, 0x1670, 0x1, 0x0);
        gbc.writeMem(0x439e, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x7514, gbc.sp());
        EXPECT(0x43a0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB ED 0208
        gbc.setState(0xdd18, 0x5716, 0x9850, 0xdcb9, 0x2507, 0xfed8, 0x0, 0x1);
        gbc.writeMem(0xdd18, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x5716, gbc.sp());
        EXPECT(0xdd1a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdd18));
        EXPECT(0xed, gbc.readMem(0xdd19));
        // CB ED 0209
        gbc.setState(0x4a41, 0x600a, 0x5c30, 0x8a98, 0xf90, 0xb991, 0x1, 0x1);
        gbc.writeMem(0x4a41, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x600a, gbc.sp());
        EXPECT(0x4a43, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB ED 020A
        gbc.setState(0xdbb6, 0x2e65, 0x9550, 0xca90, 0xf516, 0x31d1, 0x0, 0x0);
        gbc.writeMem(0xdbb6, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x2e65, gbc.sp());
        EXPECT(0xdbb8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdbb6));
        EXPECT(0xed, gbc.readMem(0xdbb7));
        // CB ED 020B
        gbc.setState(0xb60a, 0xfc25, 0x3380, 0x97aa, 0xe367, 0x66bf, 0x0, 0x0);
        gbc.writeMem(0xb60a, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0xfc25, gbc.sp());
        EXPECT(0xb60c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb60a));
        EXPECT(0xed, gbc.readMem(0xb60b));
        // CB ED 020C
        gbc.setState(0xdad3, 0x5873, 0xd600, 0x4a63, 0x5e5, 0xa535, 0x0, 0x1);
        gbc.writeMem(0xdad3, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x5873, gbc.sp());
        EXPECT(0xdad5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdad3));
        EXPECT(0xed, gbc.readMem(0xdad4));
        // CB ED 020D
        gbc.setState(0xa521, 0x63c7, 0x8730, 0x49dd, 0x492e, 0x637a, 0x1, 0x0);
        gbc.writeMem(0xa521, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x63c7, gbc.sp());
        EXPECT(0xa523, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa521));
        EXPECT(0xed, gbc.readMem(0xa522));
        // CB ED 020E
        gbc.setState(0x7617, 0x374c, 0x2a0, 0xdaf, 0x292f, 0x8271, 0x0, 0x1);
        gbc.writeMem(0x7617, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x374c, gbc.sp());
        EXPECT(0x7619, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB ED 020F
        gbc.setState(0xa521, 0x435c, 0xfd10, 0x8f35, 0xd77a, 0x241d, 0x1, 0x1);
        gbc.writeMem(0xa521, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x435c, gbc.sp());
        EXPECT(0xa523, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa521));
        EXPECT(0xed, gbc.readMem(0xa522));
        // CB ED 0210
        gbc.setState(0x2f77, 0xfc47, 0xac90, 0x36bd, 0x6dee, 0x9bf3, 0x1, 0x1);
        gbc.writeMem(0x2f77, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0xfc47, gbc.sp());
        EXPECT(0x2f79, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB ED 0211
        gbc.setState(0xe200, 0x8604, 0x8760, 0x92e, 0x312a, 0x3b7a, 0x0, 0x0);
        gbc.writeMem(0xe200, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x8604, gbc.sp());
        EXPECT(0xe202, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe200));
        EXPECT(0xed, gbc.readMem(0xe201));
        // CB ED 0212
        gbc.setState(0xaf0a, 0x598a, 0x7bd0, 0xcfa4, 0x776a, 0x61c4, 0x1, 0x1);
        gbc.writeMem(0xaf0a, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x598a, gbc.sp());
        EXPECT(0xaf0c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaf0a));
        EXPECT(0xed, gbc.readMem(0xaf0b));
        // CB ED 0213
        gbc.setState(0x42f4, 0xb85d, 0x5400, 0x53c7, 0x20ed, 0xc87, 0x0, 0x0);
        gbc.writeMem(0x42f4, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0xb85d, gbc.sp());
        EXPECT(0x42f6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB ED 0214
        gbc.setState(0x1606, 0xe902, 0xf910, 0x550f, 0x30ed, 0x5099, 0x0, 0x0);
        gbc.writeMem(0x1606, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0xe902, gbc.sp());
        EXPECT(0x1608, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB ED 0216
        gbc.setState(0x3002, 0xfda0, 0xb7e0, 0x5c26, 0x5cb2, 0x6082, 0x0, 0x1);
        gbc.writeMem(0x3002, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0xfda0, gbc.sp());
        EXPECT(0x3004, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB ED 0217
        gbc.setState(0xe9c9, 0xa8db, 0xe430, 0xe025, 0x5836, 0x7d47, 0x0, 0x1);
        gbc.writeMem(0xe9c9, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0xa8db, gbc.sp());
        EXPECT(0xe9cb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe9c9));
        EXPECT(0xed, gbc.readMem(0xe9ca));
        // CB ED 0218
        gbc.setState(0x8277, 0x39fc, 0x3ae0, 0xf54b, 0xf2ce, 0xbf51, 0x0, 0x1);
        gbc.writeMem(0x8277, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x39fc, gbc.sp());
        EXPECT(0x8279, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8277));
        EXPECT(0xed, gbc.readMem(0x8278));
        // CB ED 0219
        gbc.setState(0xe2ec, 0x5a31, 0x98b0, 0xd353, 0x891c, 0x6229, 0x0, 0x0);
        gbc.writeMem(0xe2ec, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x5a31, gbc.sp());
        EXPECT(0xe2ee, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe2ec));
        EXPECT(0xed, gbc.readMem(0xe2ed));
        // CB ED 021A
        gbc.setState(0x93, 0x1c2f, 0x56f0, 0xe1e6, 0x271f, 0x4839, 0x0, 0x0);
        gbc.writeMem(0x93, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x1c2f, gbc.sp());
        EXPECT(0x95, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB ED 021B
        gbc.setState(0xa696, 0x3c29, 0x64d0, 0xecf4, 0xc95b, 0xd202, 0x1, 0x0);
        gbc.writeMem(0xa696, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x3c29, gbc.sp());
        EXPECT(0xa698, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa696));
        EXPECT(0xed, gbc.readMem(0xa697));
        // CB ED 021C
        gbc.setState(0x4f94, 0x1128, 0xe130, 0x33d5, 0x2d8e, 0x6f40, 0x1, 0x1);
        gbc.writeMem(0x4f94, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x1128, gbc.sp());
        EXPECT(0x4f96, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB ED 021D
        gbc.setState(0x11c2, 0x3f3c, 0xdb20, 0xe562, 0x5c4c, 0xae4a, 0x0, 0x0);
        gbc.writeMem(0x11c2, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x3f3c, gbc.sp());
        EXPECT(0x11c4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB ED 021E
        gbc.setState(0x9fa, 0xafb2, 0x2c0, 0xd582, 0x1edc, 0xea00, 0x0, 0x0);
        gbc.writeMem(0x9fa, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0xafb2, gbc.sp());
        EXPECT(0x9fc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB ED 021F
        gbc.setState(0xdef0, 0x23aa, 0xc120, 0xa8a7, 0xe70d, 0xf5c7, 0x0, 0x0);
        gbc.writeMem(0xdef0, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x23aa, gbc.sp());
        EXPECT(0xdef2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdef0));
        EXPECT(0xed, gbc.readMem(0xdef1));
        // CB ED 0220
        gbc.setState(0x75f4, 0x297d, 0xc1f0, 0x7d87, 0xa736, 0x55da, 0x1, 0x0);
        gbc.writeMem(0x75f4, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0x297d, gbc.sp());
        EXPECT(0x75f6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB ED 0221
        gbc.setState(0x5290, 0x2b1b, 0x7780, 0xcc66, 0xfc8d, 0xdd18, 0x0, 0x1);
        gbc.writeMem(0x5290, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x2b1b, gbc.sp());
        EXPECT(0x5292, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB ED 0222
        gbc.setState(0xefa, 0x784b, 0x9260, 0x3647, 0xc1ff, 0xdcab, 0x0, 0x0);
        gbc.writeMem(0xefa, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x784b, gbc.sp());
        EXPECT(0xefc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB ED 0223
        gbc.setState(0x6ae9, 0x2e41, 0x9930, 0x213f, 0x9eb3, 0x1237, 0x0, 0x0);
        gbc.writeMem(0x6ae9, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x2e41, gbc.sp());
        EXPECT(0x6aeb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB ED 0224
        gbc.setState(0x4dcb, 0x7daf, 0x8350, 0x7319, 0x3356, 0x6132, 0x0, 0x1);
        gbc.writeMem(0x4dcb, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x7daf, gbc.sp());
        EXPECT(0x4dcd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB ED 0225
        gbc.setState(0xbe56, 0x3c7b, 0xfe10, 0xa776, 0x7ff3, 0x449d, 0x1, 0x1);
        gbc.writeMem(0xbe56, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x3c7b, gbc.sp());
        EXPECT(0xbe58, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbe56));
        EXPECT(0xed, gbc.readMem(0xbe57));
        // CB ED 0226
        gbc.setState(0x4e6d, 0x3ed7, 0xb7a0, 0xa36a, 0xeab1, 0x4909, 0x1, 0x0);
        gbc.writeMem(0x4e6d, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x3ed7, gbc.sp());
        EXPECT(0x4e6f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB ED 0228
        gbc.setState(0xfd8, 0x3946, 0x61a0, 0xf8ed, 0x1181, 0x228e, 0x1, 0x1);
        gbc.writeMem(0xfd8, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0x3946, gbc.sp());
        EXPECT(0xfda, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB ED 0229
        gbc.setState(0xdd35, 0xabf2, 0x9c90, 0x1bb2, 0xb6a4, 0xb868, 0x1, 0x0);
        gbc.writeMem(0xdd35, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0xabf2, gbc.sp());
        EXPECT(0xdd37, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdd35));
        EXPECT(0xed, gbc.readMem(0xdd36));
        // CB ED 022A
        gbc.setState(0x8273, 0xe53e, 0xda50, 0x7147, 0xd0b9, 0xf140, 0x1, 0x0);
        gbc.writeMem(0x8273, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0xe53e, gbc.sp());
        EXPECT(0x8275, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8273));
        EXPECT(0xed, gbc.readMem(0x8274));
        // CB ED 022B
        gbc.setState(0x60ef, 0x70ed, 0xc990, 0x368a, 0x1b53, 0xc523, 0x1, 0x1);
        gbc.writeMem(0x60ef, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x70ed, gbc.sp());
        EXPECT(0x60f1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB ED 022C
        gbc.setState(0xdee9, 0x5354, 0x21f0, 0x899, 0x2bf2, 0xaebb, 0x0, 0x1);
        gbc.writeMem(0xdee9, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x5354, gbc.sp());
        EXPECT(0xdeeb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdee9));
        EXPECT(0xed, gbc.readMem(0xdeea));
        // CB ED 022D
        gbc.setState(0x8326, 0xc38d, 0xc10, 0xf826, 0xbe37, 0x88e3, 0x1, 0x0);
        gbc.writeMem(0x8326, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0xc38d, gbc.sp());
        EXPECT(0x8328, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8326));
        EXPECT(0xed, gbc.readMem(0x8327));
        // CB ED 022E
        gbc.setState(0xacde, 0x6ba7, 0xcf90, 0x35e9, 0xcab2, 0x94d3, 0x1, 0x0);
        gbc.writeMem(0xacde, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x6ba7, gbc.sp());
        EXPECT(0xace0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xacde));
        EXPECT(0xed, gbc.readMem(0xacdf));
        // CB ED 022F
        gbc.setState(0xe02d, 0x4916, 0x8260, 0xe627, 0x457, 0x6ec1, 0x1, 0x0);
        gbc.writeMem(0xe02d, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0x4916, gbc.sp());
        EXPECT(0xe02f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe02d));
        EXPECT(0xed, gbc.readMem(0xe02e));
        // CB ED 0230
        gbc.setState(0x97ae, 0x585d, 0xf9d0, 0x9e01, 0xfbd5, 0x79cb, 0x0, 0x0);
        gbc.writeMem(0x97ae, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x585d, gbc.sp());
        EXPECT(0x97b0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x97ae));
        EXPECT(0xed, gbc.readMem(0x97af));
        // CB ED 0231
        gbc.setState(0x7e72, 0xbab3, 0x36f0, 0x4519, 0xd621, 0x6b19, 0x1, 0x1);
        gbc.writeMem(0x7e72, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0xbab3, gbc.sp());
        EXPECT(0x7e74, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB ED 0232
        gbc.setState(0xe36e, 0x47c9, 0x3180, 0x1bfe, 0xa901, 0x74e8, 0x1, 0x0);
        gbc.writeMem(0xe36e, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x47c9, gbc.sp());
        EXPECT(0xe370, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe36e));
        EXPECT(0xed, gbc.readMem(0xe36f));
        // CB ED 0233
        gbc.setState(0x5f0, 0x4f0c, 0x740, 0x10c6, 0x7a98, 0xe3e, 0x0, 0x1);
        gbc.writeMem(0x5f0, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x4f0c, gbc.sp());
        EXPECT(0x5f2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB ED 0234
        gbc.setState(0x26ba, 0xbc68, 0x8570, 0xe644, 0x561b, 0xe5a6, 0x0, 0x1);
        gbc.writeMem(0x26ba, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0xbc68, gbc.sp());
        EXPECT(0x26bc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB ED 0235
        gbc.setState(0x600c, 0x148d, 0x5c40, 0x5a7, 0x7dd1, 0x2822, 0x0, 0x0);
        gbc.writeMem(0x600c, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x148d, gbc.sp());
        EXPECT(0x600e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB ED 0236
        gbc.setState(0xd71d, 0xfb10, 0xd1b0, 0x6b71, 0x64b2, 0xb286, 0x0, 0x1);
        gbc.writeMem(0xd71d, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0xfb10, gbc.sp());
        EXPECT(0xd71f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd71d));
        EXPECT(0xed, gbc.readMem(0xd71e));
        // CB ED 0237
        gbc.setState(0x337d, 0xbc5f, 0x430, 0x4ccb, 0xbf79, 0x9009, 0x1, 0x0);
        gbc.writeMem(0x337d, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0xbc5f, gbc.sp());
        EXPECT(0x337f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB ED 0238
        gbc.setState(0xcdb9, 0xd206, 0x3de0, 0x9296, 0xeabc, 0xf25e, 0x0, 0x1);
        gbc.writeMem(0xcdb9, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0xd206, gbc.sp());
        EXPECT(0xcdbb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcdb9));
        EXPECT(0xed, gbc.readMem(0xcdba));
        // CB ED 0239
        gbc.setState(0x1a1a, 0x6c3c, 0xfa20, 0xdca0, 0x741a, 0xad94, 0x0, 0x1);
        gbc.writeMem(0x1a1a, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x6c3c, gbc.sp());
        EXPECT(0x1a1c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB ED 023A
        gbc.setState(0x2de2, 0x4e54, 0x7980, 0xfb10, 0xed36, 0xe879, 0x0, 0x1);
        gbc.writeMem(0x2de2, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x4e54, gbc.sp());
        EXPECT(0x2de4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB ED 023B
        gbc.setState(0xddda, 0x6772, 0xd5d0, 0x341f, 0x7d6f, 0x17dd, 0x0, 0x1);
        gbc.writeMem(0xddda, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x6772, gbc.sp());
        EXPECT(0xdddc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xddda));
        EXPECT(0xed, gbc.readMem(0xdddb));
        // CB ED 023C
        gbc.setState(0x6c87, 0x8d94, 0xd4a0, 0x38aa, 0x37eb, 0x8d44, 0x1, 0x1);
        gbc.writeMem(0x6c87, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x8d94, gbc.sp());
        EXPECT(0x6c89, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB ED 023D
        gbc.setState(0x9cc5, 0x43e9, 0x7640, 0x7b20, 0xd18e, 0x9a3, 0x0, 0x0);
        gbc.writeMem(0x9cc5, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0x43e9, gbc.sp());
        EXPECT(0x9cc7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9cc5));
        EXPECT(0xed, gbc.readMem(0x9cc6));
        // CB ED 023E
        gbc.setState(0x9587, 0x87ef, 0xd340, 0x8bd9, 0xfc6e, 0xdb0d, 0x1, 0x0);
        gbc.writeMem(0x9587, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x87ef, gbc.sp());
        EXPECT(0x9589, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9587));
        EXPECT(0xed, gbc.readMem(0x9588));
        // CB ED 023F
        gbc.setState(0xee3e, 0xc45e, 0x6ce0, 0x5cb, 0x2b54, 0xd6f2, 0x1, 0x0);
        gbc.writeMem(0xee3e, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0xc45e, gbc.sp());
        EXPECT(0xee40, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xee3e));
        EXPECT(0xed, gbc.readMem(0xee3f));
        // CB ED 0240
        gbc.setState(0x772d, 0xaa11, 0x7320, 0x7004, 0xd914, 0xc7cf, 0x0, 0x0);
        gbc.writeMem(0x772d, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0xaa11, gbc.sp());
        EXPECT(0x772f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB ED 0241
        gbc.setState(0x581d, 0x1709, 0x5c70, 0xb0e5, 0x540f, 0x5efa, 0x1, 0x0);
        gbc.writeMem(0x581d, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0x1709, gbc.sp());
        EXPECT(0x581f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB ED 0242
        gbc.setState(0x73a8, 0x29dc, 0x4cc0, 0xd061, 0x7db6, 0x7077, 0x0, 0x1);
        gbc.writeMem(0x73a8, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x29dc, gbc.sp());
        EXPECT(0x73aa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB ED 0243
        gbc.setState(0x7c6b, 0x8b5b, 0xd570, 0xaf14, 0xb3cd, 0xba1d, 0x0, 0x1);
        gbc.writeMem(0x7c6b, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x8b5b, gbc.sp());
        EXPECT(0x7c6d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB ED 0244
        gbc.setState(0x48b2, 0xcb26, 0xf730, 0x4529, 0xf5bc, 0xe014, 0x1, 0x1);
        gbc.writeMem(0x48b2, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0xcb26, gbc.sp());
        EXPECT(0x48b4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB ED 0245
        gbc.setState(0x7e8d, 0x8a0d, 0xaff0, 0x9eba, 0x6b4a, 0xab9e, 0x1, 0x0);
        gbc.writeMem(0x7e8d, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0x8a0d, gbc.sp());
        EXPECT(0x7e8f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB ED 0246
        gbc.setState(0x6257, 0x5be, 0xdfd0, 0xeb73, 0x6237, 0xda60, 0x0, 0x1);
        gbc.writeMem(0x6257, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x5be, gbc.sp());
        EXPECT(0x6259, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB ED 0248
        gbc.setState(0x8289, 0xdeeb, 0x99d0, 0xc69e, 0xf9ba, 0xb979, 0x0, 0x1);
        gbc.writeMem(0x8289, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0xdeeb, gbc.sp());
        EXPECT(0x828b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8289));
        EXPECT(0xed, gbc.readMem(0x828a));
        // CB ED 0249
        gbc.setState(0xcd06, 0xf0ea, 0xb6a0, 0xa0ef, 0x5bd9, 0xb8c1, 0x1, 0x0);
        gbc.writeMem(0xcd06, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0xf0ea, gbc.sp());
        EXPECT(0xcd08, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcd06));
        EXPECT(0xed, gbc.readMem(0xcd07));
        // CB ED 024A
        gbc.setState(0xca0a, 0x42e8, 0x1c10, 0xd573, 0x38e6, 0xad69, 0x1, 0x1);
        gbc.writeMem(0xca0a, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0x42e8, gbc.sp());
        EXPECT(0xca0c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xca0a));
        EXPECT(0xed, gbc.readMem(0xca0b));
        // CB ED 024B
        gbc.setState(0xbd35, 0x94ee, 0xf0, 0x4486, 0xd193, 0x28a8, 0x0, 0x1);
        gbc.writeMem(0xbd35, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x94ee, gbc.sp());
        EXPECT(0xbd37, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbd35));
        EXPECT(0xed, gbc.readMem(0xbd36));
        // CB ED 024C
        gbc.setState(0x979c, 0x65f5, 0x7210, 0xa422, 0xa210, 0xf462, 0x0, 0x1);
        gbc.writeMem(0x979c, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x65f5, gbc.sp());
        EXPECT(0x979e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x979c));
        EXPECT(0xed, gbc.readMem(0x979d));
        // CB ED 024D
        gbc.setState(0xc18e, 0xb87d, 0xb0, 0xd43a, 0x5899, 0x1465, 0x1, 0x0);
        gbc.writeMem(0xc18e, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0xb87d, gbc.sp());
        EXPECT(0xc190, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc18e));
        EXPECT(0xed, gbc.readMem(0xc18f));
        // CB ED 024E
        gbc.setState(0xa40f, 0x51ec, 0x6bf0, 0x5eed, 0x2f3b, 0x2629, 0x1, 0x1);
        gbc.writeMem(0xa40f, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x51ec, gbc.sp());
        EXPECT(0xa411, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa40f));
        EXPECT(0xed, gbc.readMem(0xa410));
        // CB ED 024F
        gbc.setState(0x2ad2, 0xe6d9, 0x46f0, 0xd037, 0x39bd, 0x5863, 0x1, 0x0);
        gbc.writeMem(0x2ad2, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0xe6d9, gbc.sp());
        EXPECT(0x2ad4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB ED 0252
        gbc.setState(0x7912, 0xa467, 0xbcb0, 0x75b7, 0x48ee, 0xf743, 0x1, 0x1);
        gbc.writeMem(0x7912, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0xa467, gbc.sp());
        EXPECT(0x7914, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB ED 0253
        gbc.setState(0xdb1f, 0xc65a, 0x5bf0, 0x1849, 0xbf07, 0xfa0b, 0x0, 0x1);
        gbc.writeMem(0xdb1f, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0xc65a, gbc.sp());
        EXPECT(0xdb21, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdb1f));
        EXPECT(0xed, gbc.readMem(0xdb20));
        // CB ED 0254
        gbc.setState(0x3da6, 0x360a, 0x7c20, 0x399, 0xb197, 0x6964, 0x1, 0x1);
        gbc.writeMem(0x3da6, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x360a, gbc.sp());
        EXPECT(0x3da8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB ED 0256
        gbc.setState(0x45de, 0xb3ec, 0x9d40, 0xcaa3, 0xe530, 0x9be, 0x0, 0x0);
        gbc.writeMem(0x45de, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0xb3ec, gbc.sp());
        EXPECT(0x45e0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB ED 0257
        gbc.setState(0xe0c6, 0x752, 0x5010, 0x35a3, 0x7e7b, 0xdb3b, 0x0, 0x0);
        gbc.writeMem(0xe0c6, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x752, gbc.sp());
        EXPECT(0xe0c8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe0c6));
        EXPECT(0xed, gbc.readMem(0xe0c7));
        // CB ED 0258
        gbc.setState(0xcc1e, 0x74b1, 0x55a0, 0xe875, 0x99d5, 0x11b6, 0x0, 0x0);
        gbc.writeMem(0xcc1e, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x74b1, gbc.sp());
        EXPECT(0xcc20, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcc1e));
        EXPECT(0xed, gbc.readMem(0xcc1f));
        // CB ED 0259
        gbc.setState(0x1076, 0x6666, 0xfe40, 0xdbf7, 0xd122, 0xb9f, 0x1, 0x1);
        gbc.writeMem(0x1076, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x6666, gbc.sp());
        EXPECT(0x1078, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB ED 025A
        gbc.setState(0x4bd6, 0xa590, 0xf8e0, 0xa19b, 0x2e8b, 0xca4d, 0x1, 0x1);
        gbc.writeMem(0x4bd6, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0xa590, gbc.sp());
        EXPECT(0x4bd8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB ED 025B
        gbc.setState(0x8f6c, 0x4541, 0x26d0, 0x8540, 0x5dc7, 0xecaf, 0x0, 0x1);
        gbc.writeMem(0x8f6c, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x4541, gbc.sp());
        EXPECT(0x8f6e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8f6c));
        EXPECT(0xed, gbc.readMem(0x8f6d));
        // CB ED 025C
        gbc.setState(0xad4f, 0x5c62, 0xabe0, 0x9d5a, 0x74da, 0x971, 0x1, 0x0);
        gbc.writeMem(0xad4f, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x5c62, gbc.sp());
        EXPECT(0xad51, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xad4f));
        EXPECT(0xed, gbc.readMem(0xad50));
        // CB ED 025D
        gbc.setState(0xdc7f, 0x79c9, 0x1c10, 0x6f, 0x3926, 0x15ad, 0x0, 0x0);
        gbc.writeMem(0xdc7f, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x79c9, gbc.sp());
        EXPECT(0xdc81, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdc7f));
        EXPECT(0xed, gbc.readMem(0xdc80));
        // CB ED 025E
        gbc.setState(0x77d3, 0x704c, 0x7410, 0x1062, 0x149b, 0xcafc, 0x1, 0x0);
        gbc.writeMem(0x77d3, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x704c, gbc.sp());
        EXPECT(0x77d5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB ED 025F
        gbc.setState(0xcd1d, 0x6c0, 0x4ad0, 0x43fe, 0xfd9f, 0x9757, 0x1, 0x0);
        gbc.writeMem(0xcd1d, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x6c0, gbc.sp());
        EXPECT(0xcd1f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcd1d));
        EXPECT(0xed, gbc.readMem(0xcd1e));
        // CB ED 0260
        gbc.setState(0x31a7, 0xe87e, 0x4d80, 0x4bdc, 0x62ce, 0xda62, 0x1, 0x1);
        gbc.writeMem(0x31a7, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0xe87e, gbc.sp());
        EXPECT(0x31a9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB ED 0261
        gbc.setState(0x1399, 0xf72d, 0x2720, 0x3671, 0x1dd3, 0xb2e4, 0x1, 0x0);
        gbc.writeMem(0x1399, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0xf72d, gbc.sp());
        EXPECT(0x139b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB ED 0262
        gbc.setState(0x2963, 0xd30c, 0x7130, 0x6d3d, 0x895b, 0xf6f4, 0x0, 0x1);
        gbc.writeMem(0x2963, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0xd30c, gbc.sp());
        EXPECT(0x2965, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB ED 0264
        gbc.setState(0x79f0, 0x5e72, 0x4470, 0x8cc, 0xcb79, 0x6672, 0x0, 0x1);
        gbc.writeMem(0x79f0, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x5e72, gbc.sp());
        EXPECT(0x79f2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB ED 0265
        gbc.setState(0x9a27, 0x11a9, 0x2790, 0xd04b, 0xd38, 0x50a8, 0x1, 0x0);
        gbc.writeMem(0x9a27, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x11a9, gbc.sp());
        EXPECT(0x9a29, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9a27));
        EXPECT(0xed, gbc.readMem(0x9a28));
        // CB ED 0266
        gbc.setState(0x61de, 0x80b5, 0x9a10, 0xf083, 0x236f, 0x6a0d, 0x0, 0x0);
        gbc.writeMem(0x61de, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x80b5, gbc.sp());
        EXPECT(0x61e0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB ED 0267
        gbc.setState(0x1d27, 0xda6, 0xc690, 0x43f1, 0xbcea, 0x2168, 0x0, 0x0);
        gbc.writeMem(0x1d27, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0xda6, gbc.sp());
        EXPECT(0x1d29, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB ED 0268
        gbc.setState(0xd20a, 0xbc1, 0x91b0, 0xec55, 0xa11f, 0x9a73, 0x1, 0x1);
        gbc.writeMem(0xd20a, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0xbc1, gbc.sp());
        EXPECT(0xd20c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd20a));
        EXPECT(0xed, gbc.readMem(0xd20b));
        // CB ED 0269
        gbc.setState(0x8c4f, 0x50e9, 0x5720, 0xa993, 0xa743, 0x8555, 0x1, 0x0);
        gbc.writeMem(0x8c4f, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x50e9, gbc.sp());
        EXPECT(0x8c51, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8c4f));
        EXPECT(0xed, gbc.readMem(0x8c50));
        // CB ED 026A
        gbc.setState(0xbf71, 0x254f, 0x6110, 0x3e43, 0x63e9, 0x3661, 0x1, 0x1);
        gbc.writeMem(0xbf71, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x254f, gbc.sp());
        EXPECT(0xbf73, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbf71));
        EXPECT(0xed, gbc.readMem(0xbf72));
        // CB ED 026B
        gbc.setState(0x5fa7, 0xd137, 0xd5d0, 0x9d6a, 0xcbe1, 0xbacc, 0x0, 0x1);
        gbc.writeMem(0x5fa7, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0xd137, gbc.sp());
        EXPECT(0x5fa9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB ED 026C
        gbc.setState(0x75bb, 0x6d38, 0x1d10, 0xdedb, 0x840d, 0xacfe, 0x0, 0x1);
        gbc.writeMem(0x75bb, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x6d38, gbc.sp());
        EXPECT(0x75bd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB ED 026E
        gbc.setState(0x44bb, 0xf1ea, 0x8790, 0xcabb, 0x3c49, 0xde86, 0x1, 0x0);
        gbc.writeMem(0x44bb, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0xf1ea, gbc.sp());
        EXPECT(0x44bd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB ED 026F
        gbc.setState(0xbcca, 0x88a9, 0xc3a0, 0x4ac3, 0x70d4, 0x59b6, 0x1, 0x0);
        gbc.writeMem(0xbcca, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x88a9, gbc.sp());
        EXPECT(0xbccc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbcca));
        EXPECT(0xed, gbc.readMem(0xbccb));
        // CB ED 0270
        gbc.setState(0x8cc6, 0xd01, 0x27a0, 0xe06d, 0x6844, 0x900, 0x0, 0x1);
        gbc.writeMem(0x8cc6, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0xd01, gbc.sp());
        EXPECT(0x8cc8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8cc6));
        EXPECT(0xed, gbc.readMem(0x8cc7));
        // CB ED 0271
        gbc.setState(0x31a0, 0xb7fc, 0x9170, 0x9ba9, 0xfd7a, 0x708a, 0x1, 0x1);
        gbc.writeMem(0x31a0, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0xb7fc, gbc.sp());
        EXPECT(0x31a2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB ED 0272
        gbc.setState(0xb98f, 0xfe98, 0x9b60, 0xccdf, 0xc0cf, 0x1ab2, 0x0, 0x0);
        gbc.writeMem(0xb98f, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0xfe98, gbc.sp());
        EXPECT(0xb991, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb98f));
        EXPECT(0xed, gbc.readMem(0xb990));
        // CB ED 0273
        gbc.setState(0xf8a, 0x37bd, 0x9c30, 0x6c98, 0xa356, 0x3f3a, 0x0, 0x1);
        gbc.writeMem(0xf8a, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x37bd, gbc.sp());
        EXPECT(0xf8c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB ED 0274
        gbc.setState(0xde8a, 0x5e8, 0x88e0, 0x1526, 0xc9b5, 0x171a, 0x1, 0x1);
        gbc.writeMem(0xde8a, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x5e8, gbc.sp());
        EXPECT(0xde8c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xde8a));
        EXPECT(0xed, gbc.readMem(0xde8b));
        // CB ED 0275
        gbc.setState(0xd2d2, 0xe24c, 0x47e0, 0x4cdb, 0xf21, 0x151b, 0x0, 0x1);
        gbc.writeMem(0xd2d2, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0xe24c, gbc.sp());
        EXPECT(0xd2d4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd2d2));
        EXPECT(0xed, gbc.readMem(0xd2d3));
        // CB ED 0276
        gbc.setState(0xeb15, 0x7579, 0xb870, 0x8ea6, 0xf944, 0x280c, 0x0, 0x0);
        gbc.writeMem(0xeb15, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x7579, gbc.sp());
        EXPECT(0xeb17, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeb15));
        EXPECT(0xed, gbc.readMem(0xeb16));
        // CB ED 0277
        gbc.setState(0x74ec, 0xa117, 0xb490, 0xc0d5, 0x116e, 0xf98b, 0x0, 0x1);
        gbc.writeMem(0x74ec, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0xa117, gbc.sp());
        EXPECT(0x74ee, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB ED 0278
        gbc.setState(0x8d13, 0x8ed, 0xce10, 0x95e, 0x4199, 0xba23, 0x1, 0x1);
        gbc.writeMem(0x8d13, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x8ed, gbc.sp());
        EXPECT(0x8d15, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8d13));
        EXPECT(0xed, gbc.readMem(0x8d14));
        // CB ED 0279
        gbc.setState(0x44b1, 0x3343, 0x9860, 0x5371, 0xf469, 0x1889, 0x0, 0x0);
        gbc.writeMem(0x44b1, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x3343, gbc.sp());
        EXPECT(0x44b3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB ED 027A
        gbc.setState(0x85ba, 0xd5ac, 0x7f30, 0x4c1, 0x3f55, 0xcc5c, 0x1, 0x1);
        gbc.writeMem(0x85ba, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0xd5ac, gbc.sp());
        EXPECT(0x85bc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x85ba));
        EXPECT(0xed, gbc.readMem(0x85bb));
        // CB ED 027B
        gbc.setState(0x4dc, 0x4551, 0x5210, 0x67a8, 0x74a9, 0x5ed, 0x0, 0x1);
        gbc.writeMem(0x4dc, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x4551, gbc.sp());
        EXPECT(0x4de, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB ED 027C
        gbc.setState(0x41, 0x1204, 0x8aa0, 0x8c9a, 0xcf02, 0xbece, 0x1, 0x1);
        gbc.writeMem(0x41, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x1204, gbc.sp());
        EXPECT(0x43, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB ED 027D
        gbc.setState(0xc647, 0xf10f, 0x72b0, 0x305a, 0xe498, 0x178e, 0x1, 0x0);
        gbc.writeMem(0xc647, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0xf10f, gbc.sp());
        EXPECT(0xc649, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc647));
        EXPECT(0xed, gbc.readMem(0xc648));
        // CB ED 027E
        gbc.setState(0xb395, 0xc513, 0x47f0, 0x47b2, 0xe3c9, 0xa0ef, 0x1, 0x0);
        gbc.writeMem(0xb395, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0xc513, gbc.sp());
        EXPECT(0xb397, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb395));
        EXPECT(0xed, gbc.readMem(0xb396));
        // CB ED 027F
        gbc.setState(0x6047, 0x2aca, 0xb60, 0x917f, 0xd0cc, 0x6e29, 0x1, 0x0);
        gbc.writeMem(0x6047, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x2aca, gbc.sp());
        EXPECT(0x6049, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB ED 0280
        gbc.setState(0xddf8, 0xb221, 0x8990, 0x4521, 0x404b, 0x96fe, 0x0, 0x0);
        gbc.writeMem(0xddf8, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0xb221, gbc.sp());
        EXPECT(0xddfa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xddf8));
        EXPECT(0xed, gbc.readMem(0xddf9));
        // CB ED 0281
        gbc.setState(0xe20f, 0x8dd, 0x9520, 0x35ef, 0xdfe0, 0x6d11, 0x0, 0x0);
        gbc.writeMem(0xe20f, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x8dd, gbc.sp());
        EXPECT(0xe211, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe20f));
        EXPECT(0xed, gbc.readMem(0xe210));
        // CB ED 0282
        gbc.setState(0xca3e, 0x9737, 0x3080, 0x2459, 0x6ef, 0xa8ac, 0x1, 0x0);
        gbc.writeMem(0xca3e, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x9737, gbc.sp());
        EXPECT(0xca40, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xca3e));
        EXPECT(0xed, gbc.readMem(0xca3f));
        // CB ED 0284
        gbc.setState(0xbcc9, 0x826e, 0x89d0, 0x5704, 0xcdf9, 0xd7e0, 0x1, 0x0);
        gbc.writeMem(0xbcc9, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x826e, gbc.sp());
        EXPECT(0xbccb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbcc9));
        EXPECT(0xed, gbc.readMem(0xbcca));
        // CB ED 0285
        gbc.setState(0x114d, 0x91f9, 0x99e0, 0xc267, 0x5720, 0x69b3, 0x0, 0x1);
        gbc.writeMem(0x114d, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x91f9, gbc.sp());
        EXPECT(0x114f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB ED 0286
        gbc.setState(0x3496, 0xb0f5, 0x4e60, 0x616, 0xb820, 0x7a50, 0x0, 0x1);
        gbc.writeMem(0x3496, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0xb0f5, gbc.sp());
        EXPECT(0x3498, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB ED 0287
        gbc.setState(0x8bfb, 0x6b5f, 0xe040, 0xeca5, 0xd4fd, 0x75db, 0x0, 0x0);
        gbc.writeMem(0x8bfb, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x6b5f, gbc.sp());
        EXPECT(0x8bfd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8bfb));
        EXPECT(0xed, gbc.readMem(0x8bfc));
        // CB ED 0288
        gbc.setState(0xd041, 0xf87f, 0xd2d0, 0xfd51, 0xfc83, 0xf76b, 0x1, 0x1);
        gbc.writeMem(0xd041, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0xf87f, gbc.sp());
        EXPECT(0xd043, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd041));
        EXPECT(0xed, gbc.readMem(0xd042));
        // CB ED 0289
        gbc.setState(0x8ece, 0xb2fb, 0x3280, 0x5703, 0xc79e, 0xced8, 0x1, 0x0);
        gbc.writeMem(0x8ece, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0xb2fb, gbc.sp());
        EXPECT(0x8ed0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8ece));
        EXPECT(0xed, gbc.readMem(0x8ecf));
        // CB ED 028A
        gbc.setState(0x53d7, 0x87d7, 0xda30, 0x7fe0, 0x3162, 0x9993, 0x0, 0x1);
        gbc.writeMem(0x53d7, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x87d7, gbc.sp());
        EXPECT(0x53d9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB ED 028B
        gbc.setState(0x9901, 0xc792, 0xa7a0, 0x2d37, 0x15a9, 0xeb09, 0x1, 0x1);
        gbc.writeMem(0x9901, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0xc792, gbc.sp());
        EXPECT(0x9903, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9901));
        EXPECT(0xed, gbc.readMem(0x9902));
        // CB ED 028C
        gbc.setState(0x88ec, 0x1f14, 0x7010, 0x1f9a, 0x4470, 0x84d8, 0x1, 0x1);
        gbc.writeMem(0x88ec, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x1f14, gbc.sp());
        EXPECT(0x88ee, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x88ec));
        EXPECT(0xed, gbc.readMem(0x88ed));
        // CB ED 028D
        gbc.setState(0xd4af, 0xca2f, 0x7c50, 0x7e98, 0x95df, 0xdf3e, 0x0, 0x1);
        gbc.writeMem(0xd4af, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0xca2f, gbc.sp());
        EXPECT(0xd4b1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd4af));
        EXPECT(0xed, gbc.readMem(0xd4b0));
        // CB ED 028F
        gbc.setState(0xd87b, 0xfdea, 0xb9a0, 0xbc2b, 0x1598, 0xa24d, 0x0, 0x1);
        gbc.writeMem(0xd87b, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0xfdea, gbc.sp());
        EXPECT(0xd87d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd87b));
        EXPECT(0xed, gbc.readMem(0xd87c));
        // CB ED 0291
        gbc.setState(0x9430, 0xcebb, 0xce50, 0x17cd, 0xf953, 0x7182, 0x0, 0x1);
        gbc.writeMem(0x9430, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0xcebb, gbc.sp());
        EXPECT(0x9432, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9430));
        EXPECT(0xed, gbc.readMem(0x9431));
        // CB ED 0292
        gbc.setState(0xeb77, 0x5d50, 0x5f80, 0x5d61, 0x57fc, 0x58b, 0x0, 0x1);
        gbc.writeMem(0xeb77, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x5d50, gbc.sp());
        EXPECT(0xeb79, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeb77));
        EXPECT(0xed, gbc.readMem(0xeb78));
        // CB ED 0293
        gbc.setState(0xbf64, 0xf0ea, 0x3a00, 0xc945, 0x9b73, 0xa63e, 0x1, 0x1);
        gbc.writeMem(0xbf64, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0xf0ea, gbc.sp());
        EXPECT(0xbf66, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbf64));
        EXPECT(0xed, gbc.readMem(0xbf65));
        // CB ED 0294
        gbc.setState(0xda54, 0x58e, 0x2960, 0xdec0, 0xae31, 0x1837, 0x1, 0x1);
        gbc.writeMem(0xda54, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x58e, gbc.sp());
        EXPECT(0xda56, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xda54));
        EXPECT(0xed, gbc.readMem(0xda55));
        // CB ED 0295
        gbc.setState(0xe89f, 0x8de5, 0x50c0, 0x5246, 0xe802, 0x9f91, 0x1, 0x0);
        gbc.writeMem(0xe89f, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x8de5, gbc.sp());
        EXPECT(0xe8a1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe89f));
        EXPECT(0xed, gbc.readMem(0xe8a0));
        // CB ED 0296
        gbc.setState(0xb354, 0x9092, 0xff30, 0xc5f3, 0xa63b, 0xda64, 0x0, 0x0);
        gbc.writeMem(0xb354, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x9092, gbc.sp());
        EXPECT(0xb356, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb354));
        EXPECT(0xed, gbc.readMem(0xb355));
        // CB ED 0297
        gbc.setState(0x165d, 0x59ae, 0x63a0, 0xc9fc, 0x72f3, 0x6207, 0x1, 0x1);
        gbc.writeMem(0x165d, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x59ae, gbc.sp());
        EXPECT(0x165f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB ED 0298
        gbc.setState(0x3510, 0xf5bb, 0x6540, 0xce26, 0xc6bb, 0x261f, 0x0, 0x1);
        gbc.writeMem(0x3510, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0xf5bb, gbc.sp());
        EXPECT(0x3512, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB ED 0299
        gbc.setState(0x65da, 0x9aee, 0x39d0, 0xc510, 0x56ce, 0xff46, 0x1, 0x1);
        gbc.writeMem(0x65da, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x9aee, gbc.sp());
        EXPECT(0x65dc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB ED 029A
        gbc.setState(0x9d05, 0x95e0, 0xb40, 0x8246, 0xb438, 0xf584, 0x0, 0x1);
        gbc.writeMem(0x9d05, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x95e0, gbc.sp());
        EXPECT(0x9d07, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9d05));
        EXPECT(0xed, gbc.readMem(0x9d06));
        // CB ED 029B
        gbc.setState(0x2ed8, 0x5a6b, 0x1620, 0xbb99, 0xba19, 0xd60a, 0x1, 0x0);
        gbc.writeMem(0x2ed8, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x5a6b, gbc.sp());
        EXPECT(0x2eda, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB ED 029C
        gbc.setState(0x1844, 0xbfd3, 0x8b70, 0xaa93, 0xe1d0, 0x9082, 0x0, 0x1);
        gbc.writeMem(0x1844, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0xbfd3, gbc.sp());
        EXPECT(0x1846, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB ED 029D
        gbc.setState(0x4777, 0x971e, 0x4130, 0x3e4a, 0xe20a, 0x6571, 0x1, 0x0);
        gbc.writeMem(0x4777, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x971e, gbc.sp());
        EXPECT(0x4779, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB ED 029E
        gbc.setState(0xc6c2, 0x6c68, 0x56f0, 0xca67, 0xc34f, 0x1a84, 0x1, 0x0);
        gbc.writeMem(0xc6c2, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x6c68, gbc.sp());
        EXPECT(0xc6c4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc6c2));
        EXPECT(0xed, gbc.readMem(0xc6c3));
        // CB ED 029F
        gbc.setState(0x9cc8, 0x894, 0x2a70, 0xc0a5, 0x9961, 0x11c3, 0x0, 0x0);
        gbc.writeMem(0x9cc8, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x894, gbc.sp());
        EXPECT(0x9cca, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9cc8));
        EXPECT(0xed, gbc.readMem(0x9cc9));
        // CB ED 02A0
        gbc.setState(0x6aa9, 0x36be, 0xd50, 0xf60f, 0xbe76, 0x8ac3, 0x0, 0x0);
        gbc.writeMem(0x6aa9, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x36be, gbc.sp());
        EXPECT(0x6aab, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB ED 02A1
        gbc.setState(0x6172, 0x5ee6, 0xf680, 0x6e72, 0xd487, 0xcca1, 0x1, 0x0);
        gbc.writeMem(0x6172, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x5ee6, gbc.sp());
        EXPECT(0x6174, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB ED 02A2
        gbc.setState(0x91b7, 0x60cd, 0xaf10, 0xfd0b, 0x71c2, 0xff80, 0x1, 0x1);
        gbc.writeMem(0x91b7, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x60cd, gbc.sp());
        EXPECT(0x91b9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x91b7));
        EXPECT(0xed, gbc.readMem(0x91b8));
        // CB ED 02A3
        gbc.setState(0x29a0, 0x6415, 0x89a0, 0xab24, 0x957c, 0x3ee2, 0x1, 0x1);
        gbc.writeMem(0x29a0, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x6415, gbc.sp());
        EXPECT(0x29a2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB ED 02A4
        gbc.setState(0x6dcf, 0xac6e, 0x51d0, 0x3ad5, 0x177b, 0x5cfc, 0x0, 0x0);
        gbc.writeMem(0x6dcf, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0xac6e, gbc.sp());
        EXPECT(0x6dd1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB ED 02A5
        gbc.setState(0x4058, 0xf3a0, 0x2ab0, 0x2002, 0x26a1, 0x52e0, 0x1, 0x0);
        gbc.writeMem(0x4058, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0xf3a0, gbc.sp());
        EXPECT(0x405a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB ED 02A6
        gbc.setState(0xc56f, 0x370d, 0x61e0, 0x5aec, 0xb6e6, 0x6464, 0x0, 0x1);
        gbc.writeMem(0xc56f, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x370d, gbc.sp());
        EXPECT(0xc571, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc56f));
        EXPECT(0xed, gbc.readMem(0xc570));
        // CB ED 02A7
        gbc.setState(0x6f9c, 0x13c7, 0x2a20, 0x2a61, 0x8e68, 0x7580, 0x0, 0x0);
        gbc.writeMem(0x6f9c, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x13c7, gbc.sp());
        EXPECT(0x6f9e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB ED 02A8
        gbc.setState(0xc1b3, 0xf0d8, 0x12f0, 0xd540, 0xf6a8, 0x1244, 0x1, 0x0);
        gbc.writeMem(0xc1b3, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0xf0d8, gbc.sp());
        EXPECT(0xc1b5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc1b3));
        EXPECT(0xed, gbc.readMem(0xc1b4));
        // CB ED 02A9
        gbc.setState(0x52d9, 0x2c5b, 0xbd70, 0xea24, 0xd3f5, 0x4b78, 0x1, 0x1);
        gbc.writeMem(0x52d9, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x2c5b, gbc.sp());
        EXPECT(0x52db, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB ED 02AA
        gbc.setState(0xee1e, 0x4134, 0xea0, 0xd460, 0x9a8e, 0x8424, 0x1, 0x0);
        gbc.writeMem(0xee1e, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x4134, gbc.sp());
        EXPECT(0xee20, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xee1e));
        EXPECT(0xed, gbc.readMem(0xee1f));
        // CB ED 02AB
        gbc.setState(0xae14, 0xcb7f, 0xa640, 0xd63f, 0x1efc, 0xac4, 0x0, 0x1);
        gbc.writeMem(0xae14, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0xcb7f, gbc.sp());
        EXPECT(0xae16, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xae14));
        EXPECT(0xed, gbc.readMem(0xae15));
        // CB ED 02AC
        gbc.setState(0xbb2a, 0x4d09, 0x22e0, 0x708e, 0xb209, 0x3da6, 0x1, 0x1);
        gbc.writeMem(0xbb2a, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x4d09, gbc.sp());
        EXPECT(0xbb2c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbb2a));
        EXPECT(0xed, gbc.readMem(0xbb2b));
        // CB ED 02AD
        gbc.setState(0xa67f, 0x7614, 0x9420, 0x8151, 0xd7ab, 0x560c, 0x0, 0x1);
        gbc.writeMem(0xa67f, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x7614, gbc.sp());
        EXPECT(0xa681, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa67f));
        EXPECT(0xed, gbc.readMem(0xa680));
        // CB ED 02AF
        gbc.setState(0xf5d, 0x4ce7, 0xa0e0, 0xd8d, 0x5867, 0x1145, 0x1, 0x1);
        gbc.writeMem(0xf5d, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x4ce7, gbc.sp());
        EXPECT(0xf5f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB ED 02B0
        gbc.setState(0x3258, 0x2bfa, 0x4d40, 0x1dcf, 0x2043, 0xcf2e, 0x1, 0x1);
        gbc.writeMem(0x3258, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x2bfa, gbc.sp());
        EXPECT(0x325a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB ED 02B1
        gbc.setState(0xde7d, 0x7a46, 0xfd50, 0x94ec, 0x5546, 0xd9b6, 0x1, 0x1);
        gbc.writeMem(0xde7d, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x7a46, gbc.sp());
        EXPECT(0xde7f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xde7d));
        EXPECT(0xed, gbc.readMem(0xde7e));
        // CB ED 02B2
        gbc.setState(0xb9de, 0x403a, 0x44c0, 0x1131, 0xeced, 0x1d33, 0x1, 0x0);
        gbc.writeMem(0xb9de, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x403a, gbc.sp());
        EXPECT(0xb9e0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb9de));
        EXPECT(0xed, gbc.readMem(0xb9df));
        // CB ED 02B3
        gbc.setState(0x5038, 0xbfc0, 0x3390, 0x4ec6, 0x75a8, 0x56fb, 0x1, 0x0);
        gbc.writeMem(0x5038, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0xbfc0, gbc.sp());
        EXPECT(0x503a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB ED 02B4
        gbc.setState(0x751b, 0xe705, 0x59c0, 0x2b70, 0x8c07, 0xc4ff, 0x1, 0x0);
        gbc.writeMem(0x751b, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0xe705, gbc.sp());
        EXPECT(0x751d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB ED 02B5
        gbc.setState(0x7095, 0x395c, 0xfc10, 0xe1, 0x120b, 0xfde9, 0x0, 0x0);
        gbc.writeMem(0x7095, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x395c, gbc.sp());
        EXPECT(0x7097, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB ED 02B6
        gbc.setState(0x42f6, 0x4671, 0xd170, 0x6c3c, 0x8969, 0x39ac, 0x0, 0x0);
        gbc.writeMem(0x42f6, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x4671, gbc.sp());
        EXPECT(0x42f8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB ED 02B7
        gbc.setState(0x92a8, 0x7ab, 0xc860, 0xe685, 0xcffb, 0x7c8, 0x0, 0x1);
        gbc.writeMem(0x92a8, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x7ab, gbc.sp());
        EXPECT(0x92aa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x92a8));
        EXPECT(0xed, gbc.readMem(0x92a9));
        // CB ED 02B8
        gbc.setState(0xc5aa, 0xd38a, 0x390, 0xaeef, 0x6cef, 0xad51, 0x0, 0x0);
        gbc.writeMem(0xc5aa, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0xd38a, gbc.sp());
        EXPECT(0xc5ac, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc5aa));
        EXPECT(0xed, gbc.readMem(0xc5ab));
        // CB ED 02B9
        gbc.setState(0x481, 0x5710, 0xb960, 0xb74b, 0x367f, 0xf489, 0x1, 0x0);
        gbc.writeMem(0x481, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x5710, gbc.sp());
        EXPECT(0x483, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB ED 02BA
        gbc.setState(0x9441, 0xa43f, 0x20c0, 0x8e41, 0x4b30, 0xe81, 0x0, 0x1);
        gbc.writeMem(0x9441, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0xa43f, gbc.sp());
        EXPECT(0x9443, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9441));
        EXPECT(0xed, gbc.readMem(0x9442));
        // CB ED 02BB
        gbc.setState(0xbe0, 0x9b27, 0xcbc0, 0x9e69, 0xae24, 0x5017, 0x1, 0x1);
        gbc.writeMem(0xbe0, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x9b27, gbc.sp());
        EXPECT(0xbe2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB ED 02BC
        gbc.setState(0xc445, 0xcc13, 0xdad0, 0x9e6b, 0x145f, 0x656, 0x0, 0x1);
        gbc.writeMem(0xc445, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0xcc13, gbc.sp());
        EXPECT(0xc447, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc445));
        EXPECT(0xed, gbc.readMem(0xc446));
        // CB ED 02BD
        gbc.setState(0xa463, 0x7038, 0xb000, 0xc37b, 0x1fa2, 0x9c31, 0x1, 0x1);
        gbc.writeMem(0xa463, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x7038, gbc.sp());
        EXPECT(0xa465, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa463));
        EXPECT(0xed, gbc.readMem(0xa464));
        // CB ED 02BE
        gbc.setState(0x6bdb, 0x37b2, 0xa680, 0xddd9, 0xf21d, 0xd88, 0x1, 0x0);
        gbc.writeMem(0x6bdb, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x37b2, gbc.sp());
        EXPECT(0x6bdd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB ED 02BF
        gbc.setState(0x63b5, 0x76c, 0x3b90, 0x32a, 0xf9b2, 0x57a7, 0x0, 0x1);
        gbc.writeMem(0x63b5, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x76c, gbc.sp());
        EXPECT(0x63b7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB ED 02C0
        gbc.setState(0x36e7, 0x38dc, 0xa780, 0xf414, 0x2190, 0x6cfc, 0x1, 0x1);
        gbc.writeMem(0x36e7, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x38dc, gbc.sp());
        EXPECT(0x36e9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB ED 02C1
        gbc.setState(0x6808, 0xc897, 0x1a60, 0x79d0, 0xb1d9, 0xd982, 0x0, 0x0);
        gbc.writeMem(0x6808, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0xc897, gbc.sp());
        EXPECT(0x680a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB ED 02C2
        gbc.setState(0xc06, 0x2bc9, 0x5a50, 0xf8d4, 0xb2a3, 0xf6aa, 0x0, 0x0);
        gbc.writeMem(0xc06, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x2bc9, gbc.sp());
        EXPECT(0xc08, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB ED 02C3
        gbc.setState(0xa841, 0x16c0, 0xe410, 0xe0d1, 0xce65, 0xfa5e, 0x0, 0x0);
        gbc.writeMem(0xa841, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0x16c0, gbc.sp());
        EXPECT(0xa843, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa841));
        EXPECT(0xed, gbc.readMem(0xa842));
        // CB ED 02C4
        gbc.setState(0x7811, 0xf9a7, 0xa2e0, 0x6f9d, 0x14dd, 0x4b80, 0x0, 0x0);
        gbc.writeMem(0x7811, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0xf9a7, gbc.sp());
        EXPECT(0x7813, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB ED 02C5
        gbc.setState(0x2452, 0xfa86, 0x3b00, 0x7026, 0x1b59, 0x1ce2, 0x0, 0x0);
        gbc.writeMem(0x2452, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0xfa86, gbc.sp());
        EXPECT(0x2454, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB ED 02C6
        gbc.setState(0x46b1, 0xbe2b, 0x37f0, 0x33c2, 0xcdf6, 0xb781, 0x0, 0x1);
        gbc.writeMem(0x46b1, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0xbe2b, gbc.sp());
        EXPECT(0x46b3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB ED 02C7
        gbc.setState(0x9bd5, 0x6084, 0x5410, 0xed34, 0x1135, 0x37cb, 0x0, 0x1);
        gbc.writeMem(0x9bd5, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x6084, gbc.sp());
        EXPECT(0x9bd7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9bd5));
        EXPECT(0xed, gbc.readMem(0x9bd6));
        // CB ED 02C8
        gbc.setState(0xdc54, 0x231a, 0x5510, 0x94c7, 0x87ac, 0xa2fb, 0x1, 0x1);
        gbc.writeMem(0xdc54, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x231a, gbc.sp());
        EXPECT(0xdc56, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdc54));
        EXPECT(0xed, gbc.readMem(0xdc55));
        // CB ED 02C9
        gbc.setState(0x74af, 0x5160, 0xa310, 0x24d6, 0xc316, 0x73b6, 0x0, 0x0);
        gbc.writeMem(0x74af, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x5160, gbc.sp());
        EXPECT(0x74b1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB ED 02CA
        gbc.setState(0xae62, 0x6caf, 0xf010, 0xd725, 0x8e0e, 0x5b5, 0x0, 0x0);
        gbc.writeMem(0xae62, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x6caf, gbc.sp());
        EXPECT(0xae64, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xae62));
        EXPECT(0xed, gbc.readMem(0xae63));
        // CB ED 02CB
        gbc.setState(0xa666, 0x3ac2, 0x1f40, 0x8a80, 0x8ebe, 0x586f, 0x1, 0x0);
        gbc.writeMem(0xa666, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x3ac2, gbc.sp());
        EXPECT(0xa668, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa666));
        EXPECT(0xed, gbc.readMem(0xa667));
        // CB ED 02CD
        gbc.setState(0x826c, 0xfd7, 0x4b40, 0x3fcb, 0x5c31, 0x21c1, 0x0, 0x1);
        gbc.writeMem(0x826c, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0xfd7, gbc.sp());
        EXPECT(0x826e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x826c));
        EXPECT(0xed, gbc.readMem(0x826d));
        // CB ED 02CF
        gbc.setState(0xe24c, 0xde8b, 0x1d00, 0x868b, 0xea7f, 0x6e87, 0x1, 0x0);
        gbc.writeMem(0xe24c, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0xde8b, gbc.sp());
        EXPECT(0xe24e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe24c));
        EXPECT(0xed, gbc.readMem(0xe24d));
        // CB ED 02D0
        gbc.setState(0x52ef, 0x7182, 0x4c70, 0x6689, 0xf9c5, 0x1d62, 0x0, 0x0);
        gbc.writeMem(0x52ef, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x7182, gbc.sp());
        EXPECT(0x52f1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB ED 02D1
        gbc.setState(0xbf67, 0xa22, 0x5b60, 0x8cff, 0x7303, 0x45c, 0x0, 0x1);
        gbc.writeMem(0xbf67, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0xa22, gbc.sp());
        EXPECT(0xbf69, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbf67));
        EXPECT(0xed, gbc.readMem(0xbf68));
        // CB ED 02D2
        gbc.setState(0x4a5e, 0x2ddd, 0x61f0, 0x15f4, 0xb2af, 0x95b1, 0x0, 0x1);
        gbc.writeMem(0x4a5e, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x2ddd, gbc.sp());
        EXPECT(0x4a60, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB ED 02D3
        gbc.setState(0xa297, 0xd1bf, 0x6010, 0x68ca, 0x4947, 0x9c43, 0x0, 0x1);
        gbc.writeMem(0xa297, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0xd1bf, gbc.sp());
        EXPECT(0xa299, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa297));
        EXPECT(0xed, gbc.readMem(0xa298));
        // CB ED 02D4
        gbc.setState(0x9fc3, 0x9245, 0x8dc0, 0xed6a, 0xc727, 0x5ef1, 0x0, 0x0);
        gbc.writeMem(0x9fc3, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x9245, gbc.sp());
        EXPECT(0x9fc5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9fc3));
        EXPECT(0xed, gbc.readMem(0x9fc4));
        // CB ED 02D5
        gbc.setState(0xa4ff, 0x4703, 0x5e30, 0x30d6, 0x5c9b, 0x57c1, 0x1, 0x1);
        gbc.writeMem(0xa4ff, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0x4703, gbc.sp());
        EXPECT(0xa501, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa4ff));
        EXPECT(0xed, gbc.readMem(0xa500));
        // CB ED 02D6
        gbc.setState(0x20e3, 0x5a68, 0xa390, 0x7a87, 0xcfec, 0x5e08, 0x1, 0x1);
        gbc.writeMem(0x20e3, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x5a68, gbc.sp());
        EXPECT(0x20e5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB ED 02D8
        gbc.setState(0x9661, 0xa983, 0x4bb0, 0x57b7, 0x90e4, 0xbda4, 0x1, 0x0);
        gbc.writeMem(0x9661, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0xa983, gbc.sp());
        EXPECT(0x9663, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9661));
        EXPECT(0xed, gbc.readMem(0x9662));
        // CB ED 02D9
        gbc.setState(0x4dcf, 0xb05, 0x90d0, 0x669, 0xec93, 0x2d06, 0x1, 0x1);
        gbc.writeMem(0x4dcf, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0xb05, gbc.sp());
        EXPECT(0x4dd1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB ED 02DA
        gbc.setState(0xa31, 0x9e03, 0xcd70, 0x1163, 0xe669, 0xca8a, 0x0, 0x1);
        gbc.writeMem(0xa31, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x9e03, gbc.sp());
        EXPECT(0xa33, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB ED 02DB
        gbc.setState(0x2457, 0xbc50, 0x5340, 0x35bb, 0xb710, 0x631b, 0x0, 0x0);
        gbc.writeMem(0x2457, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0xbc50, gbc.sp());
        EXPECT(0x2459, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB ED 02DC
        gbc.setState(0x2fbf, 0x4716, 0xc6c0, 0xc137, 0xe2c1, 0xeba4, 0x1, 0x0);
        gbc.writeMem(0x2fbf, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x4716, gbc.sp());
        EXPECT(0x2fc1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB ED 02DD
        gbc.setState(0xa749, 0xb2a6, 0x4b50, 0xcb16, 0x37da, 0x437a, 0x1, 0x1);
        gbc.writeMem(0xa749, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0xb2a6, gbc.sp());
        EXPECT(0xa74b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa749));
        EXPECT(0xed, gbc.readMem(0xa74a));
        // CB ED 02DE
        gbc.setState(0x7494, 0x7bd4, 0xe4d0, 0x62bb, 0x615, 0x7ae6, 0x0, 0x0);
        gbc.writeMem(0x7494, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x7bd4, gbc.sp());
        EXPECT(0x7496, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB ED 02DF
        gbc.setState(0xa, 0xf016, 0xfb80, 0x5cf6, 0x6c59, 0x7552, 0x0, 0x0);
        gbc.writeMem(0xa, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0xf016, gbc.sp());
        EXPECT(0xc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB ED 02E0
        gbc.setState(0xd73f, 0x745b, 0xe9d0, 0xb1ad, 0x5031, 0x1dc1, 0x1, 0x0);
        gbc.writeMem(0xd73f, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0x745b, gbc.sp());
        EXPECT(0xd741, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd73f));
        EXPECT(0xed, gbc.readMem(0xd740));
        // CB ED 02E1
        gbc.setState(0x17d6, 0x31d2, 0x5660, 0xf31b, 0x58c6, 0x6ec4, 0x1, 0x1);
        gbc.writeMem(0x17d6, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x31d2, gbc.sp());
        EXPECT(0x17d8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB ED 02E2
        gbc.setState(0xab4f, 0x314a, 0xa710, 0xf713, 0x9494, 0x4ca7, 0x1, 0x0);
        gbc.writeMem(0xab4f, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x314a, gbc.sp());
        EXPECT(0xab51, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xab4f));
        EXPECT(0xed, gbc.readMem(0xab50));
        // CB ED 02E4
        gbc.setState(0x50d6, 0x60aa, 0x6e10, 0xf142, 0xc2b0, 0x16f4, 0x0, 0x0);
        gbc.writeMem(0x50d6, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x60aa, gbc.sp());
        EXPECT(0x50d8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB ED 02E5
        gbc.setState(0xb209, 0x98ad, 0x8010, 0xe5f1, 0x7742, 0xce07, 0x0, 0x1);
        gbc.writeMem(0xb209, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x98ad, gbc.sp());
        EXPECT(0xb20b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb209));
        EXPECT(0xed, gbc.readMem(0xb20a));
        // CB ED 02E6
        gbc.setState(0xbe24, 0x8d38, 0x6d0, 0x46c3, 0xf19e, 0x217c, 0x1, 0x0);
        gbc.writeMem(0xbe24, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x8d38, gbc.sp());
        EXPECT(0xbe26, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbe24));
        EXPECT(0xed, gbc.readMem(0xbe25));
        // CB ED 02E7
        gbc.setState(0x60a3, 0xbdb2, 0x90a0, 0x1db4, 0x90f5, 0xafdb, 0x0, 0x1);
        gbc.writeMem(0x60a3, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0xbdb2, gbc.sp());
        EXPECT(0x60a5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB ED 02E8
        gbc.setState(0x8d39, 0x3f2c, 0x9b80, 0xbec5, 0xa7fc, 0xf2e5, 0x0, 0x1);
        gbc.writeMem(0x8d39, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x3f2c, gbc.sp());
        EXPECT(0x8d3b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8d39));
        EXPECT(0xed, gbc.readMem(0x8d3a));
        // CB ED 02E9
        gbc.setState(0xb27f, 0x2d59, 0x6cd0, 0x45ad, 0x8227, 0xca9b, 0x0, 0x0);
        gbc.writeMem(0xb27f, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x2d59, gbc.sp());
        EXPECT(0xb281, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb27f));
        EXPECT(0xed, gbc.readMem(0xb280));
        // CB ED 02EA
        gbc.setState(0x6d93, 0x8210, 0xfcd0, 0xadf6, 0x5890, 0xb68f, 0x1, 0x1);
        gbc.writeMem(0x6d93, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x8210, gbc.sp());
        EXPECT(0x6d95, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB ED 02EB
        gbc.setState(0x7686, 0xf4c8, 0x580, 0x20eb, 0x4929, 0x87e4, 0x0, 0x1);
        gbc.writeMem(0x7686, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0xf4c8, gbc.sp());
        EXPECT(0x7688, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB ED 02EC
        gbc.setState(0xd446, 0x8282, 0xd4c0, 0x2cc4, 0x7a89, 0xb958, 0x1, 0x1);
        gbc.writeMem(0xd446, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x8282, gbc.sp());
        EXPECT(0xd448, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd446));
        EXPECT(0xed, gbc.readMem(0xd447));
        // CB ED 02ED
        gbc.setState(0x6f9c, 0x23d7, 0x8f30, 0xee28, 0x5879, 0x8293, 0x0, 0x1);
        gbc.writeMem(0x6f9c, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x23d7, gbc.sp());
        EXPECT(0x6f9e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB ED 02EE
        gbc.setState(0xa67f, 0x3433, 0xe740, 0x4ec2, 0xbcc, 0x7983, 0x0, 0x1);
        gbc.writeMem(0xa67f, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0x3433, gbc.sp());
        EXPECT(0xa681, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa67f));
        EXPECT(0xed, gbc.readMem(0xa680));
        // CB ED 02EF
        gbc.setState(0x9b6b, 0xe1dd, 0xad80, 0xa3f7, 0x93ca, 0x14c7, 0x1, 0x0);
        gbc.writeMem(0x9b6b, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0xe1dd, gbc.sp());
        EXPECT(0x9b6d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9b6b));
        EXPECT(0xed, gbc.readMem(0x9b6c));
        // CB ED 02F1
        gbc.setState(0x1388, 0xc2a4, 0x1110, 0xc7c8, 0x713, 0x937e, 0x0, 0x1);
        gbc.writeMem(0x1388, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0xc2a4, gbc.sp());
        EXPECT(0x138a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB ED 02F2
        gbc.setState(0x2f22, 0xbae, 0x2e90, 0xb605, 0xf054, 0xcda4, 0x0, 0x1);
        gbc.writeMem(0x2f22, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0xbae, gbc.sp());
        EXPECT(0x2f24, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB ED 02F3
        gbc.setState(0x11b1, 0x3f36, 0x2f80, 0xe6e6, 0xee5d, 0xd81a, 0x0, 0x1);
        gbc.writeMem(0x11b1, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x3f36, gbc.sp());
        EXPECT(0x11b3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB ED 02F4
        gbc.setState(0xf70, 0xcc60, 0x1b90, 0x543a, 0x566b, 0x4395, 0x0, 0x0);
        gbc.writeMem(0xf70, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0xcc60, gbc.sp());
        EXPECT(0xf72, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB ED 02F5
        gbc.setState(0x7cf0, 0xf561, 0x4660, 0x6fd4, 0x3f2, 0xccba, 0x0, 0x1);
        gbc.writeMem(0x7cf0, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0xf561, gbc.sp());
        EXPECT(0x7cf2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB ED 02F6
        gbc.setState(0xf21, 0xd382, 0x2c00, 0x240d, 0x7f25, 0xa262, 0x0, 0x0);
        gbc.writeMem(0xf21, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0xd382, gbc.sp());
        EXPECT(0xf23, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB ED 02F7
        gbc.setState(0x8cf5, 0x69e0, 0x160, 0xb1c4, 0x7b8f, 0x92a4, 0x1, 0x1);
        gbc.writeMem(0x8cf5, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x69e0, gbc.sp());
        EXPECT(0x8cf7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8cf5));
        EXPECT(0xed, gbc.readMem(0x8cf6));
        // CB ED 02F8
        gbc.setState(0xeff2, 0xfb8e, 0x2d90, 0x118d, 0xb322, 0xa96e, 0x1, 0x1);
        gbc.writeMem(0xeff2, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0xfb8e, gbc.sp());
        EXPECT(0xeff4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeff2));
        EXPECT(0xed, gbc.readMem(0xeff3));
        // CB ED 02F9
        gbc.setState(0xa511, 0x6e4a, 0xb9a0, 0xcb93, 0x5060, 0x5f05, 0x0, 0x0);
        gbc.writeMem(0xa511, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x6e4a, gbc.sp());
        EXPECT(0xa513, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa511));
        EXPECT(0xed, gbc.readMem(0xa512));
        // CB ED 02FA
        gbc.setState(0xa906, 0xec19, 0x2150, 0x3289, 0x1ed1, 0xe2ab, 0x1, 0x1);
        gbc.writeMem(0xa906, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0xec19, gbc.sp());
        EXPECT(0xa908, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa906));
        EXPECT(0xed, gbc.readMem(0xa907));
        // CB ED 02FB
        gbc.setState(0x3395, 0xc9bf, 0xf010, 0xf0a2, 0xa734, 0xaa8e, 0x0, 0x0);
        gbc.writeMem(0x3395, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0xc9bf, gbc.sp());
        EXPECT(0x3397, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB ED 02FC
        gbc.setState(0x2ff, 0x4036, 0x30a0, 0xbeb6, 0x818c, 0xc35b, 0x1, 0x0);
        gbc.writeMem(0x2ff, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x4036, gbc.sp());
        EXPECT(0x301, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB ED 02FD
        gbc.setState(0x6982, 0xd54d, 0xc3f0, 0x3cc2, 0x950, 0x93ee, 0x1, 0x1);
        gbc.writeMem(0x6982, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0xd54d, gbc.sp());
        EXPECT(0x6984, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB ED 02FF
        gbc.setState(0x62b1, 0x3ec6, 0x8440, 0x86ca, 0xa222, 0x6f49, 0x1, 0x0);
        gbc.writeMem(0x62b1, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0x3ec6, gbc.sp());
        EXPECT(0x62b3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB ED 0300
        gbc.setState(0x954e, 0x4d9f, 0x2870, 0x8c1f, 0x6e6d, 0xee77, 0x0, 0x0);
        gbc.writeMem(0x954e, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x4d9f, gbc.sp());
        EXPECT(0x9550, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x954e));
        EXPECT(0xed, gbc.readMem(0x954f));
        // CB ED 0301
        gbc.setState(0xa160, 0x9fb1, 0xa7d0, 0x2124, 0xce21, 0xe4fd, 0x1, 0x0);
        gbc.writeMem(0xa160, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x9fb1, gbc.sp());
        EXPECT(0xa162, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa160));
        EXPECT(0xed, gbc.readMem(0xa161));
        // CB ED 0303
        gbc.setState(0x1718, 0x720c, 0xa0b0, 0x831e, 0x5ad6, 0x28bd, 0x0, 0x1);
        gbc.writeMem(0x1718, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x720c, gbc.sp());
        EXPECT(0x171a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB ED 0304
        gbc.setState(0xdda0, 0xa6c9, 0x31e0, 0x5d1a, 0x88d3, 0x76a8, 0x1, 0x0);
        gbc.writeMem(0xdda0, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0xa6c9, gbc.sp());
        EXPECT(0xdda2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdda0));
        EXPECT(0xed, gbc.readMem(0xdda1));
        // CB ED 0305
        gbc.setState(0x2d58, 0x4c52, 0x6100, 0x5966, 0x547c, 0x989b, 0x1, 0x0);
        gbc.writeMem(0x2d58, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x4c52, gbc.sp());
        EXPECT(0x2d5a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB ED 0306
        gbc.setState(0xbcaa, 0xfa2a, 0x7a60, 0x96df, 0xebbc, 0x4f9b, 0x1, 0x0);
        gbc.writeMem(0xbcaa, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0xfa2a, gbc.sp());
        EXPECT(0xbcac, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbcaa));
        EXPECT(0xed, gbc.readMem(0xbcab));
        // CB ED 0307
        gbc.setState(0xdec9, 0xaca1, 0xcad0, 0x75c3, 0x36d1, 0xf88c, 0x0, 0x0);
        gbc.writeMem(0xdec9, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0xaca1, gbc.sp());
        EXPECT(0xdecb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdec9));
        EXPECT(0xed, gbc.readMem(0xdeca));
        // CB ED 0308
        gbc.setState(0xd77e, 0x6c43, 0x3b40, 0xb33b, 0xe5ed, 0xedfa, 0x1, 0x1);
        gbc.writeMem(0xd77e, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0x6c43, gbc.sp());
        EXPECT(0xd780, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd77e));
        EXPECT(0xed, gbc.readMem(0xd77f));
        // CB ED 0309
        gbc.setState(0xe02b, 0x6478, 0x9240, 0xd77f, 0xa2f, 0x28e5, 0x0, 0x1);
        gbc.writeMem(0xe02b, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x6478, gbc.sp());
        EXPECT(0xe02d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe02b));
        EXPECT(0xed, gbc.readMem(0xe02c));
        // CB ED 030A
        gbc.setState(0x40ee, 0x3f4c, 0x8fb0, 0x36ab, 0xff80, 0x6601, 0x1, 0x0);
        gbc.writeMem(0x40ee, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x3f4c, gbc.sp());
        EXPECT(0x40f0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB ED 030B
        gbc.setState(0xbbd2, 0x6683, 0xc0a0, 0x4aa8, 0x55e3, 0xc76a, 0x1, 0x1);
        gbc.writeMem(0xbbd2, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x6683, gbc.sp());
        EXPECT(0xbbd4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbbd2));
        EXPECT(0xed, gbc.readMem(0xbbd3));
        // CB ED 030C
        gbc.setState(0x1a92, 0xa6eb, 0xaf70, 0x9701, 0xd903, 0x6fbb, 0x1, 0x1);
        gbc.writeMem(0x1a92, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0xa6eb, gbc.sp());
        EXPECT(0x1a94, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB ED 030D
        gbc.setState(0x6f40, 0xdceb, 0xffe0, 0x48e2, 0xd9cb, 0xf23f, 0x0, 0x0);
        gbc.writeMem(0x6f40, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0xdceb, gbc.sp());
        EXPECT(0x6f42, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB ED 030E
        gbc.setState(0x40f0, 0x180a, 0xfaf0, 0x2254, 0xa76b, 0x35fc, 0x0, 0x1);
        gbc.writeMem(0x40f0, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x180a, gbc.sp());
        EXPECT(0x40f2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB ED 0310
        gbc.setState(0x7d8c, 0xd3c7, 0x24a0, 0xeaa5, 0x31c7, 0x25a5, 0x0, 0x1);
        gbc.writeMem(0x7d8c, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0xd3c7, gbc.sp());
        EXPECT(0x7d8e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB ED 0311
        gbc.setState(0x6c77, 0xea4e, 0x8910, 0x2b1a, 0x796f, 0xb766, 0x1, 0x0);
        gbc.writeMem(0x6c77, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0xea4e, gbc.sp());
        EXPECT(0x6c79, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB ED 0312
        gbc.setState(0x9bd5, 0x50a8, 0x7ac0, 0x6663, 0xf226, 0xfc8d, 0x1, 0x1);
        gbc.writeMem(0x9bd5, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x50a8, gbc.sp());
        EXPECT(0x9bd7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9bd5));
        EXPECT(0xed, gbc.readMem(0x9bd6));
        // CB ED 0313
        gbc.setState(0x1042, 0xa4c8, 0xb5d0, 0x1, 0x2ccc, 0xf4e7, 0x0, 0x1);
        gbc.writeMem(0x1042, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0xa4c8, gbc.sp());
        EXPECT(0x1044, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB ED 0314
        gbc.setState(0x8e54, 0xc067, 0x61b0, 0xd5b8, 0x43b1, 0x7e05, 0x1, 0x0);
        gbc.writeMem(0x8e54, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0xc067, gbc.sp());
        EXPECT(0x8e56, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8e54));
        EXPECT(0xed, gbc.readMem(0x8e55));
        // CB ED 0315
        gbc.setState(0x4de2, 0x5cb2, 0x32e0, 0x4d1a, 0xb1f1, 0xb519, 0x0, 0x0);
        gbc.writeMem(0x4de2, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x5cb2, gbc.sp());
        EXPECT(0x4de4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB ED 0316
        gbc.setState(0x6342, 0x9be1, 0x13a0, 0xfae4, 0x168e, 0xfcf2, 0x1, 0x0);
        gbc.writeMem(0x6342, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x9be1, gbc.sp());
        EXPECT(0x6344, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB ED 0317
        gbc.setState(0xaeeb, 0x908c, 0x6670, 0xedcd, 0x9560, 0xba3c, 0x0, 0x0);
        gbc.writeMem(0xaeeb, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x908c, gbc.sp());
        EXPECT(0xaeed, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaeeb));
        EXPECT(0xed, gbc.readMem(0xaeec));
        // CB ED 0318
        gbc.setState(0x2f0d, 0x4afe, 0xbd10, 0x32d2, 0x7d37, 0x59bf, 0x0, 0x1);
        gbc.writeMem(0x2f0d, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x4afe, gbc.sp());
        EXPECT(0x2f0f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB ED 0319
        gbc.setState(0xba8a, 0xba18, 0xd570, 0x43fe, 0x6650, 0xa3bb, 0x0, 0x1);
        gbc.writeMem(0xba8a, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0xba18, gbc.sp());
        EXPECT(0xba8c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xba8a));
        EXPECT(0xed, gbc.readMem(0xba8b));
        // CB ED 031A
        gbc.setState(0xcfe0, 0x7386, 0x7200, 0x1868, 0xced3, 0x4e98, 0x0, 0x1);
        gbc.writeMem(0xcfe0, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x7386, gbc.sp());
        EXPECT(0xcfe2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcfe0));
        EXPECT(0xed, gbc.readMem(0xcfe1));
        // CB ED 031B
        gbc.setState(0x8324, 0x17e, 0x64a0, 0x6b78, 0x9cc0, 0xc8c, 0x1, 0x1);
        gbc.writeMem(0x8324, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x17e, gbc.sp());
        EXPECT(0x8326, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8324));
        EXPECT(0xed, gbc.readMem(0x8325));
        // CB ED 031C
        gbc.setState(0x3bcb, 0x5dcb, 0x86a0, 0xd581, 0x5348, 0xa0b2, 0x0, 0x1);
        gbc.writeMem(0x3bcb, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x5dcb, gbc.sp());
        EXPECT(0x3bcd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB ED 031D
        gbc.setState(0x56b8, 0xe7b6, 0xc740, 0x7dad, 0x6373, 0x392d, 0x0, 0x0);
        gbc.writeMem(0x56b8, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0xe7b6, gbc.sp());
        EXPECT(0x56ba, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB ED 031E
        gbc.setState(0x1d5b, 0x434f, 0x26f0, 0x31c7, 0xf64e, 0x3efe, 0x1, 0x1);
        gbc.writeMem(0x1d5b, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x434f, gbc.sp());
        EXPECT(0x1d5d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB ED 031F
        gbc.setState(0x1fe1, 0x6650, 0x7910, 0x6154, 0x201, 0x9de4, 0x0, 0x0);
        gbc.writeMem(0x1fe1, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x6650, gbc.sp());
        EXPECT(0x1fe3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB ED 0320
        gbc.setState(0x2853, 0x29b, 0xcff0, 0x4dc6, 0x1e0f, 0xb3bc, 0x0, 0x0);
        gbc.writeMem(0x2853, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x29b, gbc.sp());
        EXPECT(0x2855, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB ED 0321
        gbc.setState(0xdc2f, 0x8512, 0x7d20, 0xa60c, 0x4409, 0xd71d, 0x1, 0x1);
        gbc.writeMem(0xdc2f, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x8512, gbc.sp());
        EXPECT(0xdc31, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdc2f));
        EXPECT(0xed, gbc.readMem(0xdc30));
        // CB ED 0322
        gbc.setState(0xbf1d, 0x2e7d, 0xb250, 0xe17, 0x3c8, 0x23a3, 0x1, 0x1);
        gbc.writeMem(0xbf1d, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0x2e7d, gbc.sp());
        EXPECT(0xbf1f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbf1d));
        EXPECT(0xed, gbc.readMem(0xbf1e));
        // CB ED 0323
        gbc.setState(0x6b21, 0xf318, 0xbe20, 0x3027, 0xbbf, 0xaf3b, 0x0, 0x1);
        gbc.writeMem(0x6b21, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0xf318, gbc.sp());
        EXPECT(0x6b23, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB ED 0324
        gbc.setState(0x122b, 0xc8fc, 0x1790, 0x6e51, 0x3e8f, 0x8eb9, 0x1, 0x1);
        gbc.writeMem(0x122b, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0xc8fc, gbc.sp());
        EXPECT(0x122d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB ED 0325
        gbc.setState(0xdac, 0x96cb, 0x6c10, 0xc3c6, 0x218f, 0x428, 0x1, 0x0);
        gbc.writeMem(0xdac, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x96cb, gbc.sp());
        EXPECT(0xdae, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB ED 0326
        gbc.setState(0xe14b, 0x45ae, 0x46b0, 0x7298, 0xbeb3, 0xc70c, 0x1, 0x1);
        gbc.writeMem(0xe14b, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x45ae, gbc.sp());
        EXPECT(0xe14d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe14b));
        EXPECT(0xed, gbc.readMem(0xe14c));
        // CB ED 0327
        gbc.setState(0xad79, 0xa86d, 0x4680, 0xc750, 0x893d, 0x1e65, 0x0, 0x0);
        gbc.writeMem(0xad79, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0xa86d, gbc.sp());
        EXPECT(0xad7b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xad79));
        EXPECT(0xed, gbc.readMem(0xad7a));
        // CB ED 0328
        gbc.setState(0xeb3d, 0xc4b8, 0x78e0, 0xc5cd, 0x3d95, 0x6595, 0x0, 0x1);
        gbc.writeMem(0xeb3d, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0xc4b8, gbc.sp());
        EXPECT(0xeb3f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeb3d));
        EXPECT(0xed, gbc.readMem(0xeb3e));
        // CB ED 0329
        gbc.setState(0x9387, 0x2f5f, 0xade0, 0x6b17, 0x9fd9, 0x1090, 0x1, 0x1);
        gbc.writeMem(0x9387, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x2f5f, gbc.sp());
        EXPECT(0x9389, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9387));
        EXPECT(0xed, gbc.readMem(0x9388));
        // CB ED 032A
        gbc.setState(0x4bf0, 0xbc67, 0x1a40, 0x39ef, 0xadbf, 0x36c6, 0x0, 0x1);
        gbc.writeMem(0x4bf0, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0xbc67, gbc.sp());
        EXPECT(0x4bf2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB ED 032B
        gbc.setState(0x291a, 0x830c, 0x6440, 0xb6aa, 0xade4, 0xa90b, 0x0, 0x1);
        gbc.writeMem(0x291a, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x830c, gbc.sp());
        EXPECT(0x291c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB ED 032C
        gbc.setState(0x7140, 0x5761, 0x2380, 0xe548, 0x4099, 0x394e, 0x1, 0x0);
        gbc.writeMem(0x7140, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x5761, gbc.sp());
        EXPECT(0x7142, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB ED 032E
        gbc.setState(0xa0e0, 0x23e, 0x3f80, 0xae2, 0xf211, 0xa073, 0x1, 0x0);
        gbc.writeMem(0xa0e0, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x23e, gbc.sp());
        EXPECT(0xa0e2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa0e0));
        EXPECT(0xed, gbc.readMem(0xa0e1));
        // CB ED 032F
        gbc.setState(0x3a92, 0x3698, 0x5080, 0xf487, 0x5bf1, 0x98dd, 0x1, 0x1);
        gbc.writeMem(0x3a92, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x3698, gbc.sp());
        EXPECT(0x3a94, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB ED 0330
        gbc.setState(0x34c1, 0x7864, 0x2550, 0xa795, 0xe89d, 0x31fe, 0x1, 0x1);
        gbc.writeMem(0x34c1, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x7864, gbc.sp());
        EXPECT(0x34c3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB ED 0331
        gbc.setState(0x40ad, 0x28d1, 0x79d0, 0x20dd, 0x389e, 0xd34d, 0x1, 0x0);
        gbc.writeMem(0x40ad, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x28d1, gbc.sp());
        EXPECT(0x40af, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB ED 0332
        gbc.setState(0x92f2, 0xb2f7, 0xc830, 0x2522, 0xaa2e, 0x873f, 0x0, 0x0);
        gbc.writeMem(0x92f2, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0xb2f7, gbc.sp());
        EXPECT(0x92f4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x92f2));
        EXPECT(0xed, gbc.readMem(0x92f3));
        // CB ED 0333
        gbc.setState(0x321d, 0x4d5a, 0x7c00, 0x6b43, 0x7f3d, 0x2625, 0x1, 0x1);
        gbc.writeMem(0x321d, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x4d5a, gbc.sp());
        EXPECT(0x321f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB ED 0334
        gbc.setState(0x1bb6, 0xf4ac, 0x2190, 0x52ce, 0x896a, 0xbfac, 0x0, 0x0);
        gbc.writeMem(0x1bb6, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0xf4ac, gbc.sp());
        EXPECT(0x1bb8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB ED 0335
        gbc.setState(0x90d9, 0xfad, 0x81a0, 0x4734, 0x37fd, 0xb995, 0x0, 0x0);
        gbc.writeMem(0x90d9, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0xfad, gbc.sp());
        EXPECT(0x90db, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x90d9));
        EXPECT(0xed, gbc.readMem(0x90da));
        // CB ED 0336
        gbc.setState(0xdf0c, 0x4d8f, 0x10c0, 0x472f, 0xfa23, 0x806d, 0x1, 0x1);
        gbc.writeMem(0xdf0c, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x4d8f, gbc.sp());
        EXPECT(0xdf0e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdf0c));
        EXPECT(0xed, gbc.readMem(0xdf0d));
        // CB ED 0337
        gbc.setState(0x92c9, 0x5661, 0x47e0, 0xc144, 0x3049, 0xd643, 0x1, 0x0);
        gbc.writeMem(0x92c9, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x5661, gbc.sp());
        EXPECT(0x92cb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x92c9));
        EXPECT(0xed, gbc.readMem(0x92ca));
        // CB ED 0338
        gbc.setState(0xc977, 0xf754, 0x1710, 0xa94c, 0x7f80, 0x304f, 0x1, 0x1);
        gbc.writeMem(0xc977, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0xf754, gbc.sp());
        EXPECT(0xc979, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc977));
        EXPECT(0xed, gbc.readMem(0xc978));
        // CB ED 0339
        gbc.setState(0x98ae, 0x3027, 0xab50, 0xe352, 0x218f, 0x9b0d, 0x0, 0x0);
        gbc.writeMem(0x98ae, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x3027, gbc.sp());
        EXPECT(0x98b0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x98ae));
        EXPECT(0xed, gbc.readMem(0x98af));
        // CB ED 033A
        gbc.setState(0x612b, 0x87a2, 0xed00, 0xb51a, 0xf48f, 0x4561, 0x1, 0x1);
        gbc.writeMem(0x612b, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x87a2, gbc.sp());
        EXPECT(0x612d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB ED 033B
        gbc.setState(0xd6d1, 0x440d, 0xdbe0, 0x2061, 0xa6de, 0xadb0, 0x1, 0x1);
        gbc.writeMem(0xd6d1, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x440d, gbc.sp());
        EXPECT(0xd6d3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd6d1));
        EXPECT(0xed, gbc.readMem(0xd6d2));
        // CB ED 033C
        gbc.setState(0x50c7, 0x171a, 0xa280, 0xdc4d, 0x66ea, 0x99b, 0x0, 0x1);
        gbc.writeMem(0x50c7, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x171a, gbc.sp());
        EXPECT(0x50c9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB ED 033D
        gbc.setState(0x5cb6, 0x1c0e, 0xbfa0, 0x405a, 0x80da, 0xfec1, 0x1, 0x1);
        gbc.writeMem(0x5cb6, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0x1c0e, gbc.sp());
        EXPECT(0x5cb8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB ED 033E
        gbc.setState(0x1822, 0xa9d5, 0xb300, 0x7edb, 0x5eae, 0x5057, 0x0, 0x0);
        gbc.writeMem(0x1822, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0xa9d5, gbc.sp());
        EXPECT(0x1824, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB ED 033F
        gbc.setState(0x2adf, 0x3778, 0x7ac0, 0x31ec, 0xf60a, 0x4ee9, 0x1, 0x1);
        gbc.writeMem(0x2adf, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x3778, gbc.sp());
        EXPECT(0x2ae1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB ED 0340
        gbc.setState(0xd8bc, 0x3e02, 0x990, 0xeaa9, 0xf9bc, 0x2eb, 0x0, 0x0);
        gbc.writeMem(0xd8bc, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x3e02, gbc.sp());
        EXPECT(0xd8be, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd8bc));
        EXPECT(0xed, gbc.readMem(0xd8bd));
        // CB ED 0341
        gbc.setState(0x505a, 0x5d4, 0xb440, 0x968a, 0xd129, 0x777b, 0x0, 0x1);
        gbc.writeMem(0x505a, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x5d4, gbc.sp());
        EXPECT(0x505c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB ED 0342
        gbc.setState(0x33ed, 0x57fa, 0x54b0, 0x8d30, 0x7117, 0x67be, 0x1, 0x1);
        gbc.writeMem(0x33ed, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0x57fa, gbc.sp());
        EXPECT(0x33ef, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB ED 0343
        gbc.setState(0xd7e0, 0x4631, 0x5240, 0x170, 0xe0ad, 0x3f9b, 0x1, 0x1);
        gbc.writeMem(0xd7e0, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x4631, gbc.sp());
        EXPECT(0xd7e2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd7e0));
        EXPECT(0xed, gbc.readMem(0xd7e1));
        // CB ED 0344
        gbc.setState(0x1849, 0x1d44, 0x1de0, 0xc8a8, 0xfb45, 0x8b0d, 0x1, 0x1);
        gbc.writeMem(0x1849, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x1d44, gbc.sp());
        EXPECT(0x184b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB ED 0345
        gbc.setState(0x1fb6, 0x66f2, 0x4a30, 0x2bc, 0xae4, 0x4283, 0x0, 0x0);
        gbc.writeMem(0x1fb6, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0x66f2, gbc.sp());
        EXPECT(0x1fb8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB ED 0346
        gbc.setState(0x7d3c, 0x13e0, 0x6680, 0x8f5f, 0xfcc, 0x231a, 0x0, 0x0);
        gbc.writeMem(0x7d3c, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x13e0, gbc.sp());
        EXPECT(0x7d3e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB ED 0347
        gbc.setState(0x8afc, 0x2544, 0xd980, 0xcaf4, 0x1773, 0x1831, 0x0, 0x1);
        gbc.writeMem(0x8afc, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x2544, gbc.sp());
        EXPECT(0x8afe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8afc));
        EXPECT(0xed, gbc.readMem(0x8afd));
        // CB ED 0348
        gbc.setState(0xc3c5, 0x8b9e, 0x3b80, 0xb889, 0xa15, 0x2b41, 0x0, 0x0);
        gbc.writeMem(0xc3c5, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x8b9e, gbc.sp());
        EXPECT(0xc3c7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc3c5));
        EXPECT(0xed, gbc.readMem(0xc3c6));
        // CB ED 0349
        gbc.setState(0xd662, 0xf4ac, 0xb5c0, 0xa754, 0xac69, 0x402, 0x0, 0x1);
        gbc.writeMem(0xd662, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0xf4ac, gbc.sp());
        EXPECT(0xd664, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd662));
        EXPECT(0xed, gbc.readMem(0xd663));
        // CB ED 034A
        gbc.setState(0x242b, 0x7096, 0xb310, 0x500d, 0x37a3, 0x1071, 0x1, 0x0);
        gbc.writeMem(0x242b, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x7096, gbc.sp());
        EXPECT(0x242d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB ED 034B
        gbc.setState(0xe90d, 0x5134, 0xc970, 0x25c8, 0xd8c, 0xcfd5, 0x0, 0x0);
        gbc.writeMem(0xe90d, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x5134, gbc.sp());
        EXPECT(0xe90f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe90d));
        EXPECT(0xed, gbc.readMem(0xe90e));
        // CB ED 034C
        gbc.setState(0xc8d9, 0x5612, 0x57f0, 0xe8d4, 0x7bb8, 0xae47, 0x0, 0x0);
        gbc.writeMem(0xc8d9, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x5612, gbc.sp());
        EXPECT(0xc8db, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc8d9));
        EXPECT(0xed, gbc.readMem(0xc8da));
        // CB ED 034D
        gbc.setState(0x36e, 0xb3b3, 0x6db0, 0x54d8, 0x9dc0, 0x99c1, 0x1, 0x1);
        gbc.writeMem(0x36e, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0xb3b3, gbc.sp());
        EXPECT(0x370, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB ED 034E
        gbc.setState(0xd94a, 0x39e9, 0xb000, 0x72f9, 0x3e70, 0x51c2, 0x1, 0x0);
        gbc.writeMem(0xd94a, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x39e9, gbc.sp());
        EXPECT(0xd94c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd94a));
        EXPECT(0xed, gbc.readMem(0xd94b));
        // CB ED 0350
        gbc.setState(0xa6f0, 0x8111, 0x4480, 0xff6c, 0xf3cd, 0xb8f0, 0x0, 0x1);
        gbc.writeMem(0xa6f0, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x8111, gbc.sp());
        EXPECT(0xa6f2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa6f0));
        EXPECT(0xed, gbc.readMem(0xa6f1));
        // CB ED 0351
        gbc.setState(0xcd37, 0x5edb, 0x3c30, 0x846b, 0x5ee2, 0x87ad, 0x1, 0x1);
        gbc.writeMem(0xcd37, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x5edb, gbc.sp());
        EXPECT(0xcd39, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcd37));
        EXPECT(0xed, gbc.readMem(0xcd38));
        // CB ED 0352
        gbc.setState(0xa79a, 0x658f, 0xf310, 0x5fb5, 0x7531, 0xe6f2, 0x0, 0x0);
        gbc.writeMem(0xa79a, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x658f, gbc.sp());
        EXPECT(0xa79c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa79a));
        EXPECT(0xed, gbc.readMem(0xa79b));
        // CB ED 0353
        gbc.setState(0x642, 0x66a0, 0xa300, 0x832f, 0x2389, 0x8e2a, 0x0, 0x1);
        gbc.writeMem(0x642, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x66a0, gbc.sp());
        EXPECT(0x644, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB ED 0354
        gbc.setState(0x51af, 0xfcf8, 0x5b80, 0xeb09, 0x29a5, 0xd0fe, 0x1, 0x0);
        gbc.writeMem(0x51af, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0xfcf8, gbc.sp());
        EXPECT(0x51b1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB ED 0355
        gbc.setState(0xd49c, 0x7743, 0xb470, 0xa072, 0xcc99, 0x9c14, 0x0, 0x0);
        gbc.writeMem(0xd49c, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x7743, gbc.sp());
        EXPECT(0xd49e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd49c));
        EXPECT(0xed, gbc.readMem(0xd49d));
        // CB ED 0356
        gbc.setState(0x96bc, 0x8d2b, 0x4920, 0xad0d, 0x188f, 0xa98f, 0x0, 0x0);
        gbc.writeMem(0x96bc, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x8d2b, gbc.sp());
        EXPECT(0x96be, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x96bc));
        EXPECT(0xed, gbc.readMem(0x96bd));
        // CB ED 0357
        gbc.setState(0xd37a, 0x55c1, 0x9ab0, 0xd7b2, 0x497e, 0xc2b5, 0x0, 0x0);
        gbc.writeMem(0xd37a, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x55c1, gbc.sp());
        EXPECT(0xd37c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd37a));
        EXPECT(0xed, gbc.readMem(0xd37b));
        // CB ED 0358
        gbc.setState(0x5f65, 0x20d7, 0x3b60, 0x545, 0xbad8, 0x27b8, 0x0, 0x1);
        gbc.writeMem(0x5f65, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x20d7, gbc.sp());
        EXPECT(0x5f67, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB ED 0359
        gbc.setState(0xc705, 0x2ffc, 0x15d0, 0x5fd6, 0xb26c, 0x3e57, 0x0, 0x1);
        gbc.writeMem(0xc705, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x2ffc, gbc.sp());
        EXPECT(0xc707, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc705));
        EXPECT(0xed, gbc.readMem(0xc706));
        // CB ED 035B
        gbc.setState(0xe153, 0x99af, 0x60a0, 0x8faf, 0x2724, 0x8c59, 0x1, 0x0);
        gbc.writeMem(0xe153, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x99af, gbc.sp());
        EXPECT(0xe155, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe153));
        EXPECT(0xed, gbc.readMem(0xe154));
        // CB ED 035C
        gbc.setState(0xb48, 0x71af, 0xe0e0, 0xa273, 0x46b4, 0xb22e, 0x0, 0x0);
        gbc.writeMem(0xb48, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x71af, gbc.sp());
        EXPECT(0xb4a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB ED 035D
        gbc.setState(0x2525, 0xd2b3, 0x5e60, 0xc4af, 0x2d6, 0x4205, 0x0, 0x1);
        gbc.writeMem(0x2525, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0xd2b3, gbc.sp());
        EXPECT(0x2527, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB ED 035E
        gbc.setState(0x8111, 0x3029, 0xed40, 0x1bc7, 0x3137, 0x4ebd, 0x1, 0x1);
        gbc.writeMem(0x8111, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x3029, gbc.sp());
        EXPECT(0x8113, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8111));
        EXPECT(0xed, gbc.readMem(0x8112));
        // CB ED 035F
        gbc.setState(0xbc1f, 0x82a1, 0xf950, 0x6aa1, 0xf573, 0x424c, 0x1, 0x1);
        gbc.writeMem(0xbc1f, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x82a1, gbc.sp());
        EXPECT(0xbc21, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbc1f));
        EXPECT(0xed, gbc.readMem(0xbc20));
        // CB ED 0360
        gbc.setState(0xd775, 0x9cf4, 0x660, 0x5f7e, 0x499, 0x24b, 0x0, 0x0);
        gbc.writeMem(0xd775, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x9cf4, gbc.sp());
        EXPECT(0xd777, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd775));
        EXPECT(0xed, gbc.readMem(0xd776));
        // CB ED 0362
        gbc.setState(0x33e1, 0x71c6, 0xed80, 0x8f8a, 0x1db2, 0x3676, 0x0, 0x0);
        gbc.writeMem(0x33e1, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x71c6, gbc.sp());
        EXPECT(0x33e3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB ED 0363
        gbc.setState(0xdd25, 0x9dd6, 0x3020, 0xf9a7, 0xcad8, 0x18c, 0x0, 0x0);
        gbc.writeMem(0xdd25, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x9dd6, gbc.sp());
        EXPECT(0xdd27, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdd25));
        EXPECT(0xed, gbc.readMem(0xdd26));
        // CB ED 0364
        gbc.setState(0x186f, 0xdd0e, 0xa9c0, 0x1010, 0xeaaa, 0x478a, 0x1, 0x0);
        gbc.writeMem(0x186f, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0xdd0e, gbc.sp());
        EXPECT(0x1871, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB ED 0365
        gbc.setState(0x4609, 0x1219, 0xc950, 0x1f7f, 0x85a2, 0x5b5b, 0x1, 0x0);
        gbc.writeMem(0x4609, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x1219, gbc.sp());
        EXPECT(0x460b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB ED 0366
        gbc.setState(0xafde, 0xaf2c, 0x1e50, 0x56ca, 0x504c, 0x9696, 0x1, 0x0);
        gbc.writeMem(0xafde, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0xaf2c, gbc.sp());
        EXPECT(0xafe0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xafde));
        EXPECT(0xed, gbc.readMem(0xafdf));
        // CB ED 0367
        gbc.setState(0xc549, 0x7493, 0xf430, 0x78fd, 0x6cc4, 0x5ad7, 0x0, 0x1);
        gbc.writeMem(0xc549, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x7493, gbc.sp());
        EXPECT(0xc54b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc549));
        EXPECT(0xed, gbc.readMem(0xc54a));
        // CB ED 0368
        gbc.setState(0xd259, 0xff8f, 0xf6b0, 0xfc7e, 0x8f0f, 0x8841, 0x0, 0x0);
        gbc.writeMem(0xd259, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0xff8f, gbc.sp());
        EXPECT(0xd25b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd259));
        EXPECT(0xed, gbc.readMem(0xd25a));
        // CB ED 0369
        gbc.setState(0x78dd, 0xf81, 0x37f0, 0xd9f3, 0xdbdf, 0xae26, 0x0, 0x0);
        gbc.writeMem(0x78dd, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0xf81, gbc.sp());
        EXPECT(0x78df, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB ED 036A
        gbc.setState(0xb789, 0xeb88, 0x65f0, 0x6778, 0x92d9, 0x4f6c, 0x1, 0x0);
        gbc.writeMem(0xb789, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0xeb88, gbc.sp());
        EXPECT(0xb78b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb789));
        EXPECT(0xed, gbc.readMem(0xb78a));
        // CB ED 036B
        gbc.setState(0x1136, 0xcbe9, 0xa7f0, 0x5948, 0x8b05, 0x2d01, 0x0, 0x1);
        gbc.writeMem(0x1136, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0xcbe9, gbc.sp());
        EXPECT(0x1138, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB ED 036C
        gbc.setState(0x611f, 0xc15e, 0x31d0, 0xc779, 0x4334, 0xd4e6, 0x0, 0x0);
        gbc.writeMem(0x611f, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0xc15e, gbc.sp());
        EXPECT(0x6121, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB ED 036D
        gbc.setState(0x9138, 0x1d85, 0xab60, 0x452d, 0x9e72, 0x1dd6, 0x1, 0x1);
        gbc.writeMem(0x9138, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x1d85, gbc.sp());
        EXPECT(0x913a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9138));
        EXPECT(0xed, gbc.readMem(0x9139));
        // CB ED 036F
        gbc.setState(0x32de, 0xe4f7, 0xb1a0, 0x2db3, 0x5333, 0x288, 0x1, 0x1);
        gbc.writeMem(0x32de, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0xe4f7, gbc.sp());
        EXPECT(0x32e0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB ED 0370
        gbc.setState(0xb0bb, 0x3d3b, 0x8470, 0x81a2, 0xda66, 0x1815, 0x0, 0x0);
        gbc.writeMem(0xb0bb, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x3d3b, gbc.sp());
        EXPECT(0xb0bd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb0bb));
        EXPECT(0xed, gbc.readMem(0xb0bc));
        // CB ED 0371
        gbc.setState(0x212, 0x2c60, 0x2210, 0xdad3, 0x8e32, 0x2faf, 0x0, 0x0);
        gbc.writeMem(0x212, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x2c60, gbc.sp());
        EXPECT(0x214, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB ED 0372
        gbc.setState(0xac33, 0x3d4c, 0xee0, 0xb9fd, 0x8eaf, 0x9f43, 0x1, 0x0);
        gbc.writeMem(0xac33, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x3d4c, gbc.sp());
        EXPECT(0xac35, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xac33));
        EXPECT(0xed, gbc.readMem(0xac34));
        // CB ED 0373
        gbc.setState(0x1ce1, 0xc191, 0x73b0, 0x1c2, 0x8537, 0xd558, 0x0, 0x1);
        gbc.writeMem(0x1ce1, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0xc191, gbc.sp());
        EXPECT(0x1ce3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB ED 0374
        gbc.setState(0x49b1, 0xff9a, 0x3e90, 0xaf2a, 0xbc8b, 0x7f33, 0x1, 0x1);
        gbc.writeMem(0x49b1, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0xff9a, gbc.sp());
        EXPECT(0x49b3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB ED 0375
        gbc.setState(0x7960, 0x6616, 0x1840, 0x3608, 0x191c, 0xdc3f, 0x0, 0x0);
        gbc.writeMem(0x7960, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0x6616, gbc.sp());
        EXPECT(0x7962, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB ED 0376
        gbc.setState(0x396b, 0xa82e, 0x9f20, 0x342, 0x382a, 0x1757, 0x1, 0x0);
        gbc.writeMem(0x396b, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0xa82e, gbc.sp());
        EXPECT(0x396d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB ED 0377
        gbc.setState(0x436a, 0x8e90, 0xe0c0, 0xfe79, 0xe264, 0xf527, 0x1, 0x1);
        gbc.writeMem(0x436a, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x8e90, gbc.sp());
        EXPECT(0x436c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB ED 0378
        gbc.setState(0xa00f, 0xe3ae, 0x62e0, 0xab57, 0x6663, 0x2aaf, 0x0, 0x1);
        gbc.writeMem(0xa00f, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0xe3ae, gbc.sp());
        EXPECT(0xa011, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa00f));
        EXPECT(0xed, gbc.readMem(0xa010));
        // CB ED 0379
        gbc.setState(0x3df2, 0xe343, 0xea20, 0x77bd, 0xe96e, 0xddf, 0x1, 0x0);
        gbc.writeMem(0x3df2, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0xe343, gbc.sp());
        EXPECT(0x3df4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB ED 037A
        gbc.setState(0xef59, 0xea45, 0x3f80, 0xa921, 0xd3c0, 0xfbe1, 0x0, 0x0);
        gbc.writeMem(0xef59, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0xea45, gbc.sp());
        EXPECT(0xef5b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xef59));
        EXPECT(0xed, gbc.readMem(0xef5a));
        // CB ED 037B
        gbc.setState(0x7add, 0xc3e3, 0x7360, 0xa228, 0xe754, 0x1201, 0x1, 0x1);
        gbc.writeMem(0x7add, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0xc3e3, gbc.sp());
        EXPECT(0x7adf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB ED 037C
        gbc.setState(0x4de, 0x356c, 0x3500, 0xa155, 0xe8d9, 0x7802, 0x1, 0x0);
        gbc.writeMem(0x4de, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x356c, gbc.sp());
        EXPECT(0x4e0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB ED 037D
        gbc.setState(0xba6b, 0x85d7, 0x5780, 0x8792, 0xff96, 0x5f62, 0x0, 0x0);
        gbc.writeMem(0xba6b, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x85d7, gbc.sp());
        EXPECT(0xba6d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xba6b));
        EXPECT(0xed, gbc.readMem(0xba6c));
        // CB ED 037E
        gbc.setState(0xbe39, 0x47c2, 0xf520, 0xd3b7, 0x7162, 0xe48, 0x0, 0x1);
        gbc.writeMem(0xbe39, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x47c2, gbc.sp());
        EXPECT(0xbe3b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbe39));
        EXPECT(0xed, gbc.readMem(0xbe3a));
        // CB ED 037F
        gbc.setState(0x8ceb, 0x8805, 0xdf40, 0xa07a, 0x71cb, 0x5872, 0x0, 0x1);
        gbc.writeMem(0x8ceb, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x8805, gbc.sp());
        EXPECT(0x8ced, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8ceb));
        EXPECT(0xed, gbc.readMem(0x8cec));
        // CB ED 0380
        gbc.setState(0xade9, 0x167, 0xfa60, 0xfb5b, 0x42c4, 0x9367, 0x1, 0x1);
        gbc.writeMem(0xade9, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x167, gbc.sp());
        EXPECT(0xadeb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xade9));
        EXPECT(0xed, gbc.readMem(0xadea));
        // CB ED 0381
        gbc.setState(0x229a, 0xb71e, 0x6140, 0x9a8, 0xba56, 0x2a3d, 0x1, 0x1);
        gbc.writeMem(0x229a, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0xb71e, gbc.sp());
        EXPECT(0x229c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB ED 0382
        gbc.setState(0xeda1, 0x296f, 0x28d0, 0x8d41, 0xcc24, 0x2f12, 0x1, 0x1);
        gbc.writeMem(0xeda1, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x296f, gbc.sp());
        EXPECT(0xeda3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeda1));
        EXPECT(0xed, gbc.readMem(0xeda2));
        // CB ED 0383
        gbc.setState(0x8276, 0xcc5c, 0x79e0, 0xaeb, 0x50f9, 0x6b07, 0x0, 0x0);
        gbc.writeMem(0x8276, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0xcc5c, gbc.sp());
        EXPECT(0x8278, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8276));
        EXPECT(0xed, gbc.readMem(0x8277));
        // CB ED 0384
        gbc.setState(0x508d, 0xc988, 0xb080, 0x1d46, 0x1c33, 0x39c8, 0x0, 0x0);
        gbc.writeMem(0x508d, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0xc988, gbc.sp());
        EXPECT(0x508f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB ED 0385
        gbc.setState(0xa5e6, 0xd38f, 0x62c0, 0xd7fb, 0x922d, 0x6c5, 0x0, 0x1);
        gbc.writeMem(0xa5e6, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0xd38f, gbc.sp());
        EXPECT(0xa5e8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa5e6));
        EXPECT(0xed, gbc.readMem(0xa5e7));
        // CB ED 0386
        gbc.setState(0x4d76, 0x5175, 0xaf70, 0x8e4e, 0xbdd4, 0xa702, 0x1, 0x1);
        gbc.writeMem(0x4d76, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x5175, gbc.sp());
        EXPECT(0x4d78, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB ED 0387
        gbc.setState(0xd664, 0xceac, 0x4ea0, 0xe4cc, 0x713b, 0xa6da, 0x1, 0x0);
        gbc.writeMem(0xd664, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0xceac, gbc.sp());
        EXPECT(0xd666, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd664));
        EXPECT(0xed, gbc.readMem(0xd665));
        // CB ED 0388
        gbc.setState(0x1a1, 0xf500, 0x8b80, 0x35d2, 0x9aeb, 0xe60c, 0x0, 0x0);
        gbc.writeMem(0x1a1, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0xf500, gbc.sp());
        EXPECT(0x1a3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB ED 038A
        gbc.setState(0xbad2, 0x7076, 0xb7b0, 0xce61, 0x671c, 0xd856, 0x1, 0x1);
        gbc.writeMem(0xbad2, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x7076, gbc.sp());
        EXPECT(0xbad4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbad2));
        EXPECT(0xed, gbc.readMem(0xbad3));
        // CB ED 038B
        gbc.setState(0xb05f, 0xeaeb, 0x3300, 0x72a4, 0x8f70, 0x4e95, 0x1, 0x1);
        gbc.writeMem(0xb05f, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0xeaeb, gbc.sp());
        EXPECT(0xb061, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb05f));
        EXPECT(0xed, gbc.readMem(0xb060));
        // CB ED 038C
        gbc.setState(0x8f56, 0xf1f7, 0x2ab0, 0x2ecc, 0xdc89, 0x769a, 0x1, 0x0);
        gbc.writeMem(0x8f56, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0xf1f7, gbc.sp());
        EXPECT(0x8f58, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8f56));
        EXPECT(0xed, gbc.readMem(0x8f57));
        // CB ED 038D
        gbc.setState(0xbb60, 0xa1b6, 0x10b0, 0x3675, 0xdba1, 0x43ee, 0x1, 0x1);
        gbc.writeMem(0xbb60, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0xa1b6, gbc.sp());
        EXPECT(0xbb62, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbb60));
        EXPECT(0xed, gbc.readMem(0xbb61));
        // CB ED 038E
        gbc.setState(0x3195, 0xfbf5, 0x8b20, 0x1a44, 0x478b, 0xaced, 0x1, 0x1);
        gbc.writeMem(0x3195, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0xfbf5, gbc.sp());
        EXPECT(0x3197, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB ED 038F
        gbc.setState(0x2a40, 0x80e6, 0x6430, 0xec1, 0x5d30, 0x3582, 0x1, 0x1);
        gbc.writeMem(0x2a40, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x80e6, gbc.sp());
        EXPECT(0x2a42, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB ED 0390
        gbc.setState(0x97af, 0x95d2, 0xe750, 0xfdfa, 0xcb4a, 0xdab5, 0x0, 0x1);
        gbc.writeMem(0x97af, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x95d2, gbc.sp());
        EXPECT(0x97b1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x97af));
        EXPECT(0xed, gbc.readMem(0x97b0));
        // CB ED 0391
        gbc.setState(0x1113, 0x93cc, 0xf710, 0xa2bf, 0x206e, 0x1e4e, 0x0, 0x0);
        gbc.writeMem(0x1113, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x93cc, gbc.sp());
        EXPECT(0x1115, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB ED 0393
        gbc.setState(0x472f, 0x7462, 0x7250, 0x7890, 0x6cb7, 0xa14e, 0x1, 0x1);
        gbc.writeMem(0x472f, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x7462, gbc.sp());
        EXPECT(0x4731, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB ED 0394
        gbc.setState(0xd6bb, 0x23f8, 0xe6c0, 0x9370, 0xe691, 0x81a0, 0x1, 0x1);
        gbc.writeMem(0xd6bb, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x23f8, gbc.sp());
        EXPECT(0xd6bd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd6bb));
        EXPECT(0xed, gbc.readMem(0xd6bc));
        // CB ED 0395
        gbc.setState(0xb593, 0x89c2, 0x9f80, 0xa4d3, 0x2571, 0x610, 0x0, 0x1);
        gbc.writeMem(0xb593, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x89c2, gbc.sp());
        EXPECT(0xb595, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb593));
        EXPECT(0xed, gbc.readMem(0xb594));
        // CB ED 0396
        gbc.setState(0xb45, 0xef26, 0x88e0, 0x94c9, 0xd4cb, 0xbef1, 0x1, 0x1);
        gbc.writeMem(0xb45, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0xef26, gbc.sp());
        EXPECT(0xb47, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB ED 0397
        gbc.setState(0xe746, 0x92b9, 0xd400, 0xc59d, 0x411e, 0xe7a0, 0x1, 0x0);
        gbc.writeMem(0xe746, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x92b9, gbc.sp());
        EXPECT(0xe748, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe746));
        EXPECT(0xed, gbc.readMem(0xe747));
        // CB ED 0398
        gbc.setState(0x95d8, 0xbab2, 0x89d0, 0xc26a, 0xc6b3, 0x7af9, 0x1, 0x1);
        gbc.writeMem(0x95d8, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0xbab2, gbc.sp());
        EXPECT(0x95da, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x95d8));
        EXPECT(0xed, gbc.readMem(0x95d9));
        // CB ED 0399
        gbc.setState(0x2e0d, 0xbc00, 0x6ff0, 0x7f7f, 0x8c38, 0x6646, 0x1, 0x0);
        gbc.writeMem(0x2e0d, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0xbc00, gbc.sp());
        EXPECT(0x2e0f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB ED 039B
        gbc.setState(0xa0a3, 0xa9ec, 0x1600, 0xbd5f, 0x436f, 0xe0b0, 0x1, 0x1);
        gbc.writeMem(0xa0a3, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0xa9ec, gbc.sp());
        EXPECT(0xa0a5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa0a3));
        EXPECT(0xed, gbc.readMem(0xa0a4));
        // CB ED 039C
        gbc.setState(0x62e5, 0xf144, 0xe610, 0x3e77, 0xaecf, 0x2d65, 0x0, 0x1);
        gbc.writeMem(0x62e5, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0xf144, gbc.sp());
        EXPECT(0x62e7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB ED 039D
        gbc.setState(0xb61e, 0xdc39, 0x7bc0, 0x2fca, 0x90c, 0xb43b, 0x1, 0x1);
        gbc.writeMem(0xb61e, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0xdc39, gbc.sp());
        EXPECT(0xb620, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb61e));
        EXPECT(0xed, gbc.readMem(0xb61f));
        // CB ED 039E
        gbc.setState(0xecda, 0x99d0, 0x5130, 0x70d7, 0x93a1, 0xa1ee, 0x0, 0x0);
        gbc.writeMem(0xecda, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x99d0, gbc.sp());
        EXPECT(0xecdc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xecda));
        EXPECT(0xed, gbc.readMem(0xecdb));
        // CB ED 039F
        gbc.setState(0xaba8, 0xf7bb, 0x1800, 0x9ac1, 0xf928, 0x3127, 0x1, 0x0);
        gbc.writeMem(0xaba8, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0xf7bb, gbc.sp());
        EXPECT(0xabaa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaba8));
        EXPECT(0xed, gbc.readMem(0xaba9));
        // CB ED 03A0
        gbc.setState(0xec2c, 0xc373, 0x5bb0, 0xbb84, 0xd535, 0x1f05, 0x1, 0x0);
        gbc.writeMem(0xec2c, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0xc373, gbc.sp());
        EXPECT(0xec2e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xec2c));
        EXPECT(0xed, gbc.readMem(0xec2d));
        // CB ED 03A1
        gbc.setState(0x51e2, 0xf9bf, 0xdc0, 0xe301, 0xdf64, 0xcf50, 0x0, 0x0);
        gbc.writeMem(0x51e2, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0xf9bf, gbc.sp());
        EXPECT(0x51e4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB ED 03A2
        gbc.setState(0xa28e, 0x8116, 0xf810, 0x45ac, 0x96e, 0x4721, 0x1, 0x0);
        gbc.writeMem(0xa28e, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x8116, gbc.sp());
        EXPECT(0xa290, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa28e));
        EXPECT(0xed, gbc.readMem(0xa28f));
        // CB ED 03A3
        gbc.setState(0x1203, 0x61bd, 0x92b0, 0x8f5, 0xa5c9, 0x944f, 0x1, 0x1);
        gbc.writeMem(0x1203, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x61bd, gbc.sp());
        EXPECT(0x1205, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB ED 03A4
        gbc.setState(0x1e6, 0xeaef, 0xd5d0, 0x16ca, 0xd15, 0x5972, 0x1, 0x0);
        gbc.writeMem(0x1e6, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0xeaef, gbc.sp());
        EXPECT(0x1e8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB ED 03A5
        gbc.setState(0xd69a, 0x28ed, 0xb350, 0x269, 0x8bd4, 0xfa8d, 0x0, 0x0);
        gbc.writeMem(0xd69a, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x28ed, gbc.sp());
        EXPECT(0xd69c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd69a));
        EXPECT(0xed, gbc.readMem(0xd69b));
        // CB ED 03A6
        gbc.setState(0x7cb8, 0xcfcb, 0x3c00, 0x303e, 0x6f1b, 0x48ad, 0x0, 0x0);
        gbc.writeMem(0x7cb8, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0xcfcb, gbc.sp());
        EXPECT(0x7cba, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB ED 03A7
        gbc.setState(0xeb70, 0x9796, 0x4eb0, 0x1c2, 0x3206, 0x38cd, 0x0, 0x0);
        gbc.writeMem(0xeb70, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x9796, gbc.sp());
        EXPECT(0xeb72, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeb70));
        EXPECT(0xed, gbc.readMem(0xeb71));
        // CB ED 03A8
        gbc.setState(0xa95f, 0x43c, 0x3cc0, 0xd3fe, 0x1c71, 0x31a2, 0x1, 0x0);
        gbc.writeMem(0xa95f, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x43c, gbc.sp());
        EXPECT(0xa961, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa95f));
        EXPECT(0xed, gbc.readMem(0xa960));
        // CB ED 03A9
        gbc.setState(0xda80, 0x16d1, 0x34d0, 0xf06f, 0xd39a, 0x7811, 0x0, 0x0);
        gbc.writeMem(0xda80, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x16d1, gbc.sp());
        EXPECT(0xda82, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xda80));
        EXPECT(0xed, gbc.readMem(0xda81));
        // CB ED 03AA
        gbc.setState(0xdcb2, 0xa80b, 0xd440, 0x9c32, 0x35bc, 0x709, 0x1, 0x0);
        gbc.writeMem(0xdcb2, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0xa80b, gbc.sp());
        EXPECT(0xdcb4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdcb2));
        EXPECT(0xed, gbc.readMem(0xdcb3));
        // CB ED 03AB
        gbc.setState(0xe6c8, 0xed79, 0xc0f0, 0x5104, 0x873a, 0xcd74, 0x1, 0x0);
        gbc.writeMem(0xe6c8, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0xed79, gbc.sp());
        EXPECT(0xe6ca, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe6c8));
        EXPECT(0xed, gbc.readMem(0xe6c9));
        // CB ED 03AC
        gbc.setState(0x1306, 0x50fd, 0xea30, 0x68f1, 0x8158, 0x7a4d, 0x1, 0x0);
        gbc.writeMem(0x1306, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x50fd, gbc.sp());
        EXPECT(0x1308, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB ED 03AD
        gbc.setState(0xb043, 0x6a52, 0xc050, 0x91d0, 0x13ef, 0xcb5, 0x0, 0x0);
        gbc.writeMem(0xb043, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x6a52, gbc.sp());
        EXPECT(0xb045, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb043));
        EXPECT(0xed, gbc.readMem(0xb044));
        // CB ED 03AE
        gbc.setState(0x6444, 0x606c, 0x5080, 0xb77, 0xda77, 0x17ab, 0x1, 0x0);
        gbc.writeMem(0x6444, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x606c, gbc.sp());
        EXPECT(0x6446, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB ED 03AF
        gbc.setState(0x6b1e, 0x23d2, 0x8020, 0xaae4, 0xd70d, 0x6175, 0x1, 0x0);
        gbc.writeMem(0x6b1e, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x23d2, gbc.sp());
        EXPECT(0x6b20, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB ED 03B0
        gbc.setState(0x91eb, 0x49bb, 0xd40, 0x4d8e, 0x8a4e, 0x91f0, 0x1, 0x1);
        gbc.writeMem(0x91eb, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x49bb, gbc.sp());
        EXPECT(0x91ed, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x91eb));
        EXPECT(0xed, gbc.readMem(0x91ec));
        // CB ED 03B1
        gbc.setState(0xdf5d, 0xe9e0, 0xc60, 0x9784, 0x2021, 0xe448, 0x0, 0x1);
        gbc.writeMem(0xdf5d, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0xe9e0, gbc.sp());
        EXPECT(0xdf5f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdf5d));
        EXPECT(0xed, gbc.readMem(0xdf5e));
        // CB ED 03B2
        gbc.setState(0x8e0c, 0x7499, 0x21e0, 0x5701, 0x4f80, 0x3792, 0x0, 0x0);
        gbc.writeMem(0x8e0c, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x7499, gbc.sp());
        EXPECT(0x8e0e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8e0c));
        EXPECT(0xed, gbc.readMem(0x8e0d));
        // CB ED 03B3
        gbc.setState(0xdbe8, 0x84a, 0xf0, 0x5f22, 0xbbf3, 0x1582, 0x1, 0x0);
        gbc.writeMem(0xdbe8, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x84a, gbc.sp());
        EXPECT(0xdbea, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdbe8));
        EXPECT(0xed, gbc.readMem(0xdbe9));
        // CB ED 03B4
        gbc.setState(0x363d, 0xe632, 0x6300, 0x25b7, 0x43dd, 0x7a44, 0x0, 0x0);
        gbc.writeMem(0x363d, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0xe632, gbc.sp());
        EXPECT(0x363f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB ED 03B5
        gbc.setState(0xb652, 0xe6ad, 0x11d0, 0xc578, 0x7a89, 0xd20f, 0x1, 0x0);
        gbc.writeMem(0xb652, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0xe6ad, gbc.sp());
        EXPECT(0xb654, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb652));
        EXPECT(0xed, gbc.readMem(0xb653));
        // CB ED 03B6
        gbc.setState(0x6660, 0x1101, 0x2aa0, 0x5b40, 0xae50, 0x5704, 0x0, 0x1);
        gbc.writeMem(0x6660, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x1101, gbc.sp());
        EXPECT(0x6662, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB ED 03B7
        gbc.setState(0x7ef, 0xa42b, 0x8d00, 0x7cd6, 0xa17, 0x85a7, 0x0, 0x1);
        gbc.writeMem(0x7ef, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0xa42b, gbc.sp());
        EXPECT(0x7f1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB ED 03B8
        gbc.setState(0x5d8b, 0xb63, 0x2b60, 0xe3f7, 0x335, 0x1452, 0x1, 0x1);
        gbc.writeMem(0x5d8b, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0xb63, gbc.sp());
        EXPECT(0x5d8d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB ED 03B9
        gbc.setState(0x7e4e, 0xa29a, 0xfb10, 0xa1df, 0x7c58, 0x31d1, 0x0, 0x0);
        gbc.writeMem(0x7e4e, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0xa29a, gbc.sp());
        EXPECT(0x7e50, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB ED 03BA
        gbc.setState(0xe566, 0xc105, 0xe270, 0xbe5b, 0x72c, 0xea2b, 0x0, 0x0);
        gbc.writeMem(0xe566, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0xc105, gbc.sp());
        EXPECT(0xe568, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe566));
        EXPECT(0xed, gbc.readMem(0xe567));
        // CB ED 03BB
        gbc.setState(0x9126, 0x6450, 0xdbb0, 0xd234, 0xd585, 0x93d8, 0x0, 0x0);
        gbc.writeMem(0x9126, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x6450, gbc.sp());
        EXPECT(0x9128, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9126));
        EXPECT(0xed, gbc.readMem(0x9127));
        // CB ED 03BC
        gbc.setState(0x2dc0, 0x7fa1, 0x7b40, 0xda71, 0xb9c5, 0xae4f, 0x1, 0x1);
        gbc.writeMem(0x2dc0, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x7fa1, gbc.sp());
        EXPECT(0x2dc2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB ED 03BD
        gbc.setState(0xa560, 0xff22, 0x2f80, 0x88e3, 0xd5c3, 0x2683, 0x0, 0x0);
        gbc.writeMem(0xa560, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0xff22, gbc.sp());
        EXPECT(0xa562, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa560));
        EXPECT(0xed, gbc.readMem(0xa561));
        // CB ED 03BF
        gbc.setState(0x11fe, 0x67b3, 0x9810, 0x73cb, 0x571a, 0x4e1a, 0x0, 0x1);
        gbc.writeMem(0x11fe, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x67b3, gbc.sp());
        EXPECT(0x1200, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB ED 03C1
        gbc.setState(0x1ed4, 0x6044, 0xe30, 0xb922, 0x85e1, 0x1973, 0x0, 0x1);
        gbc.writeMem(0x1ed4, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x6044, gbc.sp());
        EXPECT(0x1ed6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB ED 03C2
        gbc.setState(0x581f, 0x4672, 0xcd50, 0x9b3d, 0x905, 0xb814, 0x0, 0x0);
        gbc.writeMem(0x581f, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x4672, gbc.sp());
        EXPECT(0x5821, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB ED 03C3
        gbc.setState(0xb9d6, 0x4e9d, 0xbcb0, 0xa0b8, 0xb661, 0x7014, 0x1, 0x1);
        gbc.writeMem(0xb9d6, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x4e9d, gbc.sp());
        EXPECT(0xb9d8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb9d6));
        EXPECT(0xed, gbc.readMem(0xb9d7));
        // CB ED 03C4
        gbc.setState(0xa8c5, 0xa7b0, 0x8880, 0xce4f, 0x3ce7, 0xf1f0, 0x1, 0x0);
        gbc.writeMem(0xa8c5, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0xa7b0, gbc.sp());
        EXPECT(0xa8c7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa8c5));
        EXPECT(0xed, gbc.readMem(0xa8c6));
        // CB ED 03C5
        gbc.setState(0xe2eb, 0xafc0, 0x12b0, 0x8c95, 0x72ef, 0x58ee, 0x1, 0x1);
        gbc.writeMem(0xe2eb, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0xafc0, gbc.sp());
        EXPECT(0xe2ed, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe2eb));
        EXPECT(0xed, gbc.readMem(0xe2ec));
        // CB ED 03C6
        gbc.setState(0xbe3a, 0x3ad4, 0xd940, 0xc0e3, 0x5d8e, 0x9cc6, 0x1, 0x0);
        gbc.writeMem(0xbe3a, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x3ad4, gbc.sp());
        EXPECT(0xbe3c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbe3a));
        EXPECT(0xed, gbc.readMem(0xbe3b));
        // CB ED 03C7
        gbc.setState(0x7d58, 0x7cc4, 0x7910, 0x707e, 0x8cca, 0x5c2f, 0x1, 0x1);
        gbc.writeMem(0x7d58, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x7cc4, gbc.sp());
        EXPECT(0x7d5a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB ED 03C8
        gbc.setState(0xe53c, 0x406a, 0x1c0, 0x5df6, 0xe3d7, 0xf9d5, 0x1, 0x1);
        gbc.writeMem(0xe53c, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x406a, gbc.sp());
        EXPECT(0xe53e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe53c));
        EXPECT(0xed, gbc.readMem(0xe53d));
        // CB ED 03C9
        gbc.setState(0x5917, 0xbc67, 0x80f0, 0xf345, 0xb366, 0x57be, 0x1, 0x1);
        gbc.writeMem(0x5917, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0xbc67, gbc.sp());
        EXPECT(0x5919, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB ED 03CA
        gbc.setState(0x5b75, 0xd339, 0x1ec0, 0x2792, 0x825b, 0x31b0, 0x1, 0x0);
        gbc.writeMem(0x5b75, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0xd339, gbc.sp());
        EXPECT(0x5b77, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB ED 03CB
        gbc.setState(0x91d4, 0x1b91, 0x1d30, 0x7f17, 0xc2b7, 0xd6e5, 0x1, 0x0);
        gbc.writeMem(0x91d4, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x1b91, gbc.sp());
        EXPECT(0x91d6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x91d4));
        EXPECT(0xed, gbc.readMem(0x91d5));
        // CB ED 03CC
        gbc.setState(0x543, 0x5c4, 0x29c0, 0x516f, 0x7074, 0x35bf, 0x1, 0x1);
        gbc.writeMem(0x543, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x5c4, gbc.sp());
        EXPECT(0x545, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB ED 03CD
        gbc.setState(0x9d67, 0xd4ed, 0x38c0, 0x53e2, 0x984d, 0xef08, 0x1, 0x1);
        gbc.writeMem(0x9d67, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0xd4ed, gbc.sp());
        EXPECT(0x9d69, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9d67));
        EXPECT(0xed, gbc.readMem(0x9d68));
        // CB ED 03CE
        gbc.setState(0x7db4, 0xeed4, 0x510, 0xf37b, 0x764d, 0xa977, 0x0, 0x1);
        gbc.writeMem(0x7db4, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0xeed4, gbc.sp());
        EXPECT(0x7db6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB ED 03CF
        gbc.setState(0x6399, 0xc075, 0xfca0, 0x96a4, 0xc22e, 0x6161, 0x0, 0x0);
        gbc.writeMem(0x6399, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0xc075, gbc.sp());
        EXPECT(0x639b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB ED 03D0
        gbc.setState(0x6a59, 0x90a9, 0x53e0, 0x7cfa, 0x6246, 0x63c0, 0x0, 0x1);
        gbc.writeMem(0x6a59, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x90a9, gbc.sp());
        EXPECT(0x6a5b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB ED 03D1
        gbc.setState(0xa253, 0x2d6, 0xfdc0, 0x600f, 0x6791, 0x6ef3, 0x1, 0x0);
        gbc.writeMem(0xa253, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x2d6, gbc.sp());
        EXPECT(0xa255, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa253));
        EXPECT(0xed, gbc.readMem(0xa254));
        // CB ED 03D2
        gbc.setState(0x1936, 0x12f8, 0xd8d0, 0xe0fe, 0xaca8, 0x69d7, 0x1, 0x1);
        gbc.writeMem(0x1936, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x12f8, gbc.sp());
        EXPECT(0x1938, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB ED 03D3
        gbc.setState(0x8c41, 0x9174, 0xa790, 0x2a66, 0x1fa2, 0xbdec, 0x0, 0x1);
        gbc.writeMem(0x8c41, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x9174, gbc.sp());
        EXPECT(0x8c43, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8c41));
        EXPECT(0xed, gbc.readMem(0x8c42));
        // CB ED 03D5
        gbc.setState(0xe528, 0x3f92, 0x83c0, 0x494, 0x5d99, 0xd3c2, 0x0, 0x1);
        gbc.writeMem(0xe528, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x3f92, gbc.sp());
        EXPECT(0xe52a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe528));
        EXPECT(0xed, gbc.readMem(0xe529));
        // CB ED 03D6
        gbc.setState(0x2a81, 0x2944, 0x6940, 0xe066, 0x1fc1, 0x252f, 0x1, 0x1);
        gbc.writeMem(0x2a81, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x2944, gbc.sp());
        EXPECT(0x2a83, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB ED 03D7
        gbc.setState(0x838, 0xd1c0, 0xb20, 0x38fb, 0x72ee, 0x9eaa, 0x1, 0x1);
        gbc.writeMem(0x838, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0xd1c0, gbc.sp());
        EXPECT(0x83a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB ED 03D8
        gbc.setState(0x74f7, 0x6dc, 0x80a0, 0x5456, 0x10ec, 0x74a7, 0x0, 0x1);
        gbc.writeMem(0x74f7, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x6dc, gbc.sp());
        EXPECT(0x74f9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB ED 03D9
        gbc.setState(0xaf3, 0x7418, 0x94e0, 0xe49d, 0xb0e, 0xe69e, 0x0, 0x1);
        gbc.writeMem(0xaf3, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0x7418, gbc.sp());
        EXPECT(0xaf5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB ED 03DA
        gbc.setState(0xd75, 0xe352, 0x75e0, 0x68a1, 0x2707, 0x13f8, 0x0, 0x1);
        gbc.writeMem(0xd75, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0xe352, gbc.sp());
        EXPECT(0xd77, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB ED 03DB
        gbc.setState(0x1e08, 0x5cda, 0x3d80, 0x33e1, 0x3727, 0x50c7, 0x0, 0x0);
        gbc.writeMem(0x1e08, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x5cda, gbc.sp());
        EXPECT(0x1e0a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB ED 03DC
        gbc.setState(0x57c2, 0x6bc4, 0xdbb0, 0x6986, 0x3789, 0xe1a9, 0x0, 0x0);
        gbc.writeMem(0x57c2, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x6bc4, gbc.sp());
        EXPECT(0x57c4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB ED 03DD
        gbc.setState(0x851c, 0xf895, 0xf10, 0xc372, 0x859a, 0x9cdb, 0x0, 0x1);
        gbc.writeMem(0x851c, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0xf895, gbc.sp());
        EXPECT(0x851e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x851c));
        EXPECT(0xed, gbc.readMem(0x851d));
        // CB ED 03DE
        gbc.setState(0x79e0, 0x1b33, 0x2d10, 0xe825, 0x5458, 0x534c, 0x0, 0x0);
        gbc.writeMem(0x79e0, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x1b33, gbc.sp());
        EXPECT(0x79e2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB ED 03DF
        gbc.setState(0xbb85, 0x3e4f, 0x2960, 0xaf5, 0xc5c7, 0x2b52, 0x1, 0x0);
        gbc.writeMem(0xbb85, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x3e4f, gbc.sp());
        EXPECT(0xbb87, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbb85));
        EXPECT(0xed, gbc.readMem(0xbb86));
        // CB ED 03E0
        gbc.setState(0xd6d, 0xe30d, 0x7470, 0x6a8b, 0x30c2, 0x5afc, 0x0, 0x1);
        gbc.writeMem(0xd6d, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0xe30d, gbc.sp());
        EXPECT(0xd6f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB ED 03E1
        gbc.setState(0x69e, 0x4f8a, 0x3d70, 0x91bb, 0x7696, 0x4485, 0x1, 0x0);
        gbc.writeMem(0x69e, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x4f8a, gbc.sp());
        EXPECT(0x6a0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB ED 03E2
        gbc.setState(0x64bf, 0xb0c4, 0x8870, 0xc682, 0x932, 0x8b58, 0x0, 0x1);
        gbc.writeMem(0x64bf, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0xb0c4, gbc.sp());
        EXPECT(0x64c1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB ED 03E3
        gbc.setState(0x9804, 0x1d2a, 0xb80, 0xaee3, 0x2a72, 0xc05e, 0x0, 0x1);
        gbc.writeMem(0x9804, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0x1d2a, gbc.sp());
        EXPECT(0x9806, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9804));
        EXPECT(0xed, gbc.readMem(0x9805));
        // CB ED 03E4
        gbc.setState(0xb9f, 0x921d, 0x700, 0x7df3, 0xebc5, 0x561d, 0x1, 0x1);
        gbc.writeMem(0xb9f, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x921d, gbc.sp());
        EXPECT(0xba1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB ED 03E5
        gbc.setState(0x5a8b, 0xf1c, 0xf9b0, 0x279a, 0xb15c, 0x2054, 0x0, 0x1);
        gbc.writeMem(0x5a8b, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0xf1c, gbc.sp());
        EXPECT(0x5a8d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB ED 03E6
        gbc.setState(0x4c1c, 0x82d3, 0xac70, 0x14c6, 0x62c3, 0x539c, 0x1, 0x0);
        gbc.writeMem(0x4c1c, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x82d3, gbc.sp());
        EXPECT(0x4c1e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB ED 03E7
        gbc.setState(0xc07d, 0xa63f, 0x1c80, 0xa3f5, 0x7f77, 0xd9d5, 0x0, 0x1);
        gbc.writeMem(0xc07d, { 0xcb, 0xed });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0xa63f, gbc.sp());
        EXPECT(0xc07f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc07d));
        EXPECT(0xed, gbc.readMem(0xc07e));
    }
