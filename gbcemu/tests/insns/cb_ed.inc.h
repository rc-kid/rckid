    TEST(gbcemu, opcode_cb_ed) {
        GBCEmu gbc{};
        uint8_t cartridge[0x8000];
        cartridge[0x149] = 0x02; // 8kb external RAM
        gbc.loadCartridge(new FlashGamePak(cartridge));
        // CB ED 0001
        gbc.setState(0x60cc, 0x3029, 0x28f0, 0x42e3, 0x39cc, 0xb891, 0x1, 0x1);
        gbc.writeMem(0x60cc, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0x39);
        EXPECT(gbc.e(),  0xcc);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0x3029);
        EXPECT(gbc.pc(), 0x60ce);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB ED 0002
        gbc.setState(0x4535, 0xd9a7, 0x4190, 0xfdc0, 0xc6e1, 0x886e, 0x0, 0x1);
        gbc.writeMem(0x4535, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0xe1);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0x6e);
        EXPECT(gbc.sp(), 0xd9a7);
        EXPECT(gbc.pc(), 0x4537);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB ED 0003
        gbc.setState(0x180f, 0xafcb, 0xd2c0, 0x4ce1, 0xea2d, 0xb43c, 0x0, 0x1);
        gbc.writeMem(0x180f, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0xe1);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0xafcb);
        EXPECT(gbc.pc(), 0x1811);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB ED 0004
        gbc.setState(0x40d2, 0x3611, 0x1610, 0x328f, 0xe686, 0xdbed, 0x1, 0x0);
        gbc.writeMem(0x40d2, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0x16);
        EXPECT(gbc.b(),  0x32);
        EXPECT(gbc.c(),  0x8f);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0xdb);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0x3611);
        EXPECT(gbc.pc(), 0x40d4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB ED 0006
        gbc.setState(0xd200, 0x28af, 0xc6a0, 0x841b, 0xf553, 0x6440, 0x0, 0x0);
        gbc.writeMem(0xd200, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0xc6);
        EXPECT(gbc.b(),  0x84);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0x53);
        EXPECT(gbc.h(),  0x64);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0x28af);
        EXPECT(gbc.pc(), 0xd202);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd200), 0xcb);
        EXPECT(gbc.readMem(0xd201), 0xed);
        // CB ED 0007
        gbc.setState(0x4f61, 0x5fcf, 0x4ea0, 0x836, 0x5334, 0x785d, 0x0, 0x1);
        gbc.writeMem(0x4f61, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0x8);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0x34);
        EXPECT(gbc.h(),  0x78);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0x5fcf);
        EXPECT(gbc.pc(), 0x4f63);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB ED 0008
        gbc.setState(0xe7c5, 0x986, 0x2930, 0x6330, 0x2432, 0x1d2c, 0x0, 0x0);
        gbc.writeMem(0xe7c5, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0x63);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0x2c);
        EXPECT(gbc.sp(), 0x986);
        EXPECT(gbc.pc(), 0xe7c7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe7c5), 0xcb);
        EXPECT(gbc.readMem(0xe7c6), 0xed);
        // CB ED 0009
        gbc.setState(0x62a, 0x66d6, 0x1d0, 0x6591, 0xb71f, 0x48ec, 0x1, 0x1);
        gbc.writeMem(0x62a, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0x1);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0x91);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0x1f);
        EXPECT(gbc.h(),  0x48);
        EXPECT(gbc.l(),  0xec);
        EXPECT(gbc.sp(), 0x66d6);
        EXPECT(gbc.pc(), 0x62c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB ED 000A
        gbc.setState(0x9eec, 0xda97, 0x7220, 0x9124, 0x4114, 0xf427, 0x1, 0x0);
        gbc.writeMem(0x9eec, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0x41);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0xf4);
        EXPECT(gbc.l(),  0x27);
        EXPECT(gbc.sp(), 0xda97);
        EXPECT(gbc.pc(), 0x9eee);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9eec), 0xcb);
        EXPECT(gbc.readMem(0x9eed), 0xed);
        // CB ED 000B
        gbc.setState(0xc28f, 0xc017, 0x8240, 0x18e1, 0xef68, 0xbf04, 0x1, 0x1);
        gbc.writeMem(0xc28f, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0x82);
        EXPECT(gbc.b(),  0x18);
        EXPECT(gbc.c(),  0xe1);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0xc017);
        EXPECT(gbc.pc(), 0xc291);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc28f), 0xcb);
        EXPECT(gbc.readMem(0xc290), 0xed);
        // CB ED 000C
        gbc.setState(0xc683, 0xe64, 0x7a50, 0x46f5, 0xf434, 0x42ca, 0x1, 0x1);
        gbc.writeMem(0xc683, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0x7a);
        EXPECT(gbc.b(),  0x46);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0xf4);
        EXPECT(gbc.e(),  0x34);
        EXPECT(gbc.h(),  0x42);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0xe64);
        EXPECT(gbc.pc(), 0xc685);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc683), 0xcb);
        EXPECT(gbc.readMem(0xc684), 0xed);
        // CB ED 000D
        gbc.setState(0x29eb, 0x820d, 0x46d0, 0x7f9d, 0x5701, 0x81ad, 0x0, 0x1);
        gbc.writeMem(0x29eb, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0x46);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0x9d);
        EXPECT(gbc.d(),  0x57);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0xad);
        EXPECT(gbc.sp(), 0x820d);
        EXPECT(gbc.pc(), 0x29ed);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB ED 000E
        gbc.setState(0x783d, 0x641c, 0x6fe0, 0x43fc, 0xd2ad, 0x1704, 0x0, 0x0);
        gbc.writeMem(0x783d, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0x43);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0x641c);
        EXPECT(gbc.pc(), 0x783f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB ED 000F
        gbc.setState(0xca0c, 0xe74d, 0xa70, 0xba4c, 0x4bde, 0xcd19, 0x0, 0x1);
        gbc.writeMem(0xca0c, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0xba);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0xcd);
        EXPECT(gbc.l(),  0x39);
        EXPECT(gbc.sp(), 0xe74d);
        EXPECT(gbc.pc(), 0xca0e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xca0c), 0xcb);
        EXPECT(gbc.readMem(0xca0d), 0xed);
        // CB ED 0010
        gbc.setState(0xcf24, 0x57c0, 0x2050, 0x8393, 0x5fe2, 0x8d44, 0x1, 0x1);
        gbc.writeMem(0xcf24, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0x20);
        EXPECT(gbc.b(),  0x83);
        EXPECT(gbc.c(),  0x93);
        EXPECT(gbc.d(),  0x5f);
        EXPECT(gbc.e(),  0xe2);
        EXPECT(gbc.h(),  0x8d);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0x57c0);
        EXPECT(gbc.pc(), 0xcf26);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcf24), 0xcb);
        EXPECT(gbc.readMem(0xcf25), 0xed);
        // CB ED 0011
        gbc.setState(0x7c56, 0xf96c, 0xbef0, 0xcefa, 0xb21b, 0x4159, 0x1, 0x1);
        gbc.writeMem(0x7c56, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0xce);
        EXPECT(gbc.c(),  0xfa);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0x1b);
        EXPECT(gbc.h(),  0x41);
        EXPECT(gbc.l(),  0x79);
        EXPECT(gbc.sp(), 0xf96c);
        EXPECT(gbc.pc(), 0x7c58);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB ED 0012
        gbc.setState(0xedd6, 0xf2f5, 0xfa10, 0x2251, 0x2ad6, 0x6430, 0x1, 0x1);
        gbc.writeMem(0xedd6, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0xfa);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0x2a);
        EXPECT(gbc.e(),  0xd6);
        EXPECT(gbc.h(),  0x64);
        EXPECT(gbc.l(),  0x30);
        EXPECT(gbc.sp(), 0xf2f5);
        EXPECT(gbc.pc(), 0xedd8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xedd6), 0xcb);
        EXPECT(gbc.readMem(0xedd7), 0xed);
        // CB ED 0013
        gbc.setState(0x539a, 0x7cf8, 0xe3d0, 0xc3ba, 0x114a, 0xfe67, 0x1, 0x0);
        gbc.writeMem(0x539a, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0xc3);
        EXPECT(gbc.c(),  0xba);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0x67);
        EXPECT(gbc.sp(), 0x7cf8);
        EXPECT(gbc.pc(), 0x539c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB ED 0014
        gbc.setState(0x2911, 0x85e5, 0xc230, 0x2d92, 0x9c7b, 0x8949, 0x1, 0x1);
        gbc.writeMem(0x2911, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0xc2);
        EXPECT(gbc.b(),  0x2d);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0x85e5);
        EXPECT(gbc.pc(), 0x2913);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB ED 0015
        gbc.setState(0x699f, 0x4d5b, 0x4110, 0xa7af, 0xcb70, 0x39e9, 0x0, 0x0);
        gbc.writeMem(0x699f, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0xa7);
        EXPECT(gbc.c(),  0xaf);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0xe9);
        EXPECT(gbc.sp(), 0x4d5b);
        EXPECT(gbc.pc(), 0x69a1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB ED 0016
        gbc.setState(0xd7d8, 0x6450, 0xa250, 0x4b7, 0x7cc8, 0xa06d, 0x0, 0x1);
        gbc.writeMem(0xd7d8, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0xb7);
        EXPECT(gbc.d(),  0x7c);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0xa0);
        EXPECT(gbc.l(),  0x6d);
        EXPECT(gbc.sp(), 0x6450);
        EXPECT(gbc.pc(), 0xd7da);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd7d8), 0xcb);
        EXPECT(gbc.readMem(0xd7d9), 0xed);
        // CB ED 0017
        gbc.setState(0x88c4, 0x2831, 0x7dc0, 0x5fbf, 0x2fe, 0x3ae0, 0x1, 0x1);
        gbc.writeMem(0x88c4, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0x7d);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0xbf);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0xfe);
        EXPECT(gbc.h(),  0x3a);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0x2831);
        EXPECT(gbc.pc(), 0x88c6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x88c4), 0xcb);
        EXPECT(gbc.readMem(0x88c5), 0xed);
        // CB ED 0018
        gbc.setState(0x3bf9, 0xe3c, 0xe290, 0x35b2, 0x215b, 0x6e6e, 0x1, 0x1);
        gbc.writeMem(0x3bf9, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0x21);
        EXPECT(gbc.e(),  0x5b);
        EXPECT(gbc.h(),  0x6e);
        EXPECT(gbc.l(),  0x6e);
        EXPECT(gbc.sp(), 0xe3c);
        EXPECT(gbc.pc(), 0x3bfb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB ED 0019
        gbc.setState(0x8406, 0x984c, 0x4070, 0x6f3e, 0x4174, 0xa677, 0x1, 0x1);
        gbc.writeMem(0x8406, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0x40);
        EXPECT(gbc.b(),  0x6f);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0x41);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0x984c);
        EXPECT(gbc.pc(), 0x8408);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8406), 0xcb);
        EXPECT(gbc.readMem(0x8407), 0xed);
        // CB ED 001A
        gbc.setState(0xe585, 0xc893, 0xf0f0, 0x2ca, 0xefc3, 0xcab1, 0x1, 0x1);
        gbc.writeMem(0xe585, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0xf0);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0xc3);
        EXPECT(gbc.h(),  0xca);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0xc893);
        EXPECT(gbc.pc(), 0xe587);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe585), 0xcb);
        EXPECT(gbc.readMem(0xe586), 0xed);
        // CB ED 001B
        gbc.setState(0xbfaf, 0xda9f, 0x7d00, 0xa811, 0xca55, 0x73b, 0x0, 0x0);
        gbc.writeMem(0xbfaf, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0x7d);
        EXPECT(gbc.b(),  0xa8);
        EXPECT(gbc.c(),  0x11);
        EXPECT(gbc.d(),  0xca);
        EXPECT(gbc.e(),  0x55);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0xda9f);
        EXPECT(gbc.pc(), 0xbfb1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbfaf), 0xcb);
        EXPECT(gbc.readMem(0xbfb0), 0xed);
        // CB ED 001C
        gbc.setState(0xb43e, 0x10fb, 0xd370, 0x6f1a, 0x91ef, 0x4fd8, 0x1, 0x1);
        gbc.writeMem(0xb43e, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0xd3);
        EXPECT(gbc.b(),  0x6f);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0xef);
        EXPECT(gbc.h(),  0x4f);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0x10fb);
        EXPECT(gbc.pc(), 0xb440);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb43e), 0xcb);
        EXPECT(gbc.readMem(0xb43f), 0xed);
        // CB ED 001D
        gbc.setState(0x1089, 0x69d, 0x8580, 0x1aa2, 0x783c, 0x2504, 0x0, 0x1);
        gbc.writeMem(0x1089, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0x85);
        EXPECT(gbc.b(),  0x1a);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0x78);
        EXPECT(gbc.e(),  0x3c);
        EXPECT(gbc.h(),  0x25);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0x69d);
        EXPECT(gbc.pc(), 0x108b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB ED 001E
        gbc.setState(0x98d3, 0x2c4, 0xcfe0, 0x6a2e, 0xe3ce, 0xfa7, 0x0, 0x1);
        gbc.writeMem(0x98d3, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0xcf);
        EXPECT(gbc.b(),  0x6a);
        EXPECT(gbc.c(),  0x2e);
        EXPECT(gbc.d(),  0xe3);
        EXPECT(gbc.e(),  0xce);
        EXPECT(gbc.h(),  0xf);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0x2c4);
        EXPECT(gbc.pc(), 0x98d5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x98d3), 0xcb);
        EXPECT(gbc.readMem(0x98d4), 0xed);
        // CB ED 001F
        gbc.setState(0xd3a3, 0x8fdb, 0xfc80, 0x79dc, 0xdd26, 0x4d2d, 0x1, 0x1);
        gbc.writeMem(0xd3a3, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0xdc);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0x4d);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0x8fdb);
        EXPECT(gbc.pc(), 0xd3a5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd3a3), 0xcb);
        EXPECT(gbc.readMem(0xd3a4), 0xed);
        // CB ED 0021
        gbc.setState(0x3b4c, 0x2d8, 0x4190, 0xe6a8, 0xb5ec, 0x7529, 0x0, 0x0);
        gbc.writeMem(0x3b4c, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0xa8);
        EXPECT(gbc.d(),  0xb5);
        EXPECT(gbc.e(),  0xec);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0x2d8);
        EXPECT(gbc.pc(), 0x3b4e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB ED 0022
        gbc.setState(0x8710, 0x2620, 0x56a0, 0xe68d, 0xae42, 0x78ba, 0x0, 0x1);
        gbc.writeMem(0x8710, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0x8d);
        EXPECT(gbc.d(),  0xae);
        EXPECT(gbc.e(),  0x42);
        EXPECT(gbc.h(),  0x78);
        EXPECT(gbc.l(),  0xba);
        EXPECT(gbc.sp(), 0x2620);
        EXPECT(gbc.pc(), 0x8712);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8710), 0xcb);
        EXPECT(gbc.readMem(0x8711), 0xed);
        // CB ED 0023
        gbc.setState(0xa845, 0xd28f, 0x8670, 0xfb9b, 0xd9e8, 0xbe51, 0x0, 0x0);
        gbc.writeMem(0xa845, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0xfb);
        EXPECT(gbc.c(),  0x9b);
        EXPECT(gbc.d(),  0xd9);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0xd28f);
        EXPECT(gbc.pc(), 0xa847);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa845), 0xcb);
        EXPECT(gbc.readMem(0xa846), 0xed);
        // CB ED 0024
        gbc.setState(0x8ce8, 0x4ff2, 0xf6e0, 0xc2b5, 0xb59d, 0xceea, 0x0, 0x1);
        gbc.writeMem(0x8ce8, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0xf6);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0xb5);
        EXPECT(gbc.e(),  0x9d);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0x4ff2);
        EXPECT(gbc.pc(), 0x8cea);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8ce8), 0xcb);
        EXPECT(gbc.readMem(0x8ce9), 0xed);
        // CB ED 0026
        gbc.setState(0x4dec, 0x258f, 0xdf40, 0x3318, 0xf9b6, 0xe49e, 0x0, 0x1);
        gbc.writeMem(0x4dec, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0xdf);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0xf9);
        EXPECT(gbc.e(),  0xb6);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0xbe);
        EXPECT(gbc.sp(), 0x258f);
        EXPECT(gbc.pc(), 0x4dee);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB ED 0027
        gbc.setState(0x5e7c, 0xdf68, 0x6a50, 0x52a7, 0x217, 0x801e, 0x0, 0x1);
        gbc.writeMem(0x5e7c, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0xa7);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0x17);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0xdf68);
        EXPECT(gbc.pc(), 0x5e7e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB ED 0028
        gbc.setState(0x1c2f, 0x3ff4, 0xa0c0, 0x4904, 0x50c4, 0x5446, 0x0, 0x1);
        gbc.writeMem(0x1c2f, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0x49);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0x50);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0x54);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0x3ff4);
        EXPECT(gbc.pc(), 0x1c31);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB ED 0029
        gbc.setState(0x6a56, 0xbc4f, 0x3850, 0x26b6, 0xfe2b, 0x6b8c, 0x1, 0x0);
        gbc.writeMem(0x6a56, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0xb6);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0x6b);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0xbc4f);
        EXPECT(gbc.pc(), 0x6a58);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB ED 002A
        gbc.setState(0x7aac, 0xc8b5, 0x7ae0, 0xc11a, 0xfd03, 0xf1d1, 0x1, 0x0);
        gbc.writeMem(0x7aac, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0x7a);
        EXPECT(gbc.b(),  0xc1);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0xfd);
        EXPECT(gbc.e(),  0x3);
        EXPECT(gbc.h(),  0xf1);
        EXPECT(gbc.l(),  0xf1);
        EXPECT(gbc.sp(), 0xc8b5);
        EXPECT(gbc.pc(), 0x7aae);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB ED 002B
        gbc.setState(0xaafb, 0xca76, 0x9180, 0x3928, 0x555a, 0x97d6, 0x0, 0x0);
        gbc.writeMem(0xaafb, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0x91);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0xf6);
        EXPECT(gbc.sp(), 0xca76);
        EXPECT(gbc.pc(), 0xaafd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaafb), 0xcb);
        EXPECT(gbc.readMem(0xaafc), 0xed);
        // CB ED 002C
        gbc.setState(0xc231, 0x8800, 0x6fa0, 0x16ee, 0x911c, 0x58cb, 0x1, 0x0);
        gbc.writeMem(0xc231, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0x58);
        EXPECT(gbc.l(),  0xeb);
        EXPECT(gbc.sp(), 0x8800);
        EXPECT(gbc.pc(), 0xc233);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc231), 0xcb);
        EXPECT(gbc.readMem(0xc232), 0xed);
        // CB ED 002D
        gbc.setState(0xbddc, 0x144f, 0x6500, 0xb9fc, 0x87e5, 0x4b14, 0x0, 0x0);
        gbc.writeMem(0xbddc, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0x65);
        EXPECT(gbc.b(),  0xb9);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0x87);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0x4b);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0x144f);
        EXPECT(gbc.pc(), 0xbdde);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbddc), 0xcb);
        EXPECT(gbc.readMem(0xbddd), 0xed);
        // CB ED 002E
        gbc.setState(0x4b0e, 0xa575, 0xb500, 0x2cdd, 0x419e, 0x46bc, 0x1, 0x0);
        gbc.writeMem(0x4b0e, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0xb5);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0xdd);
        EXPECT(gbc.d(),  0x41);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0x46);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0xa575);
        EXPECT(gbc.pc(), 0x4b10);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB ED 0030
        gbc.setState(0x3aaa, 0xd55b, 0xe8f0, 0x5a4d, 0xe850, 0x44c2, 0x1, 0x1);
        gbc.writeMem(0x3aaa, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0x5a);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0xe8);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0x44);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0xd55b);
        EXPECT(gbc.pc(), 0x3aac);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB ED 0031
        gbc.setState(0x3214, 0x95ff, 0x5950, 0xd747, 0x8ef2, 0x3d2b, 0x0, 0x1);
        gbc.writeMem(0x3214, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0x47);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0x3d);
        EXPECT(gbc.l(),  0x2b);
        EXPECT(gbc.sp(), 0x95ff);
        EXPECT(gbc.pc(), 0x3216);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB ED 0032
        gbc.setState(0xe35e, 0x9f04, 0xcc30, 0x4816, 0x98ef, 0xfdfa, 0x1, 0x0);
        gbc.writeMem(0xe35e, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0x98);
        EXPECT(gbc.e(),  0xef);
        EXPECT(gbc.h(),  0xfd);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0x9f04);
        EXPECT(gbc.pc(), 0xe360);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe35e), 0xcb);
        EXPECT(gbc.readMem(0xe35f), 0xed);
        // CB ED 0033
        gbc.setState(0x5691, 0x2ecc, 0x2290, 0x68de, 0x90c8, 0xd7b2, 0x0, 0x0);
        gbc.writeMem(0x5691, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0xd7);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0x2ecc);
        EXPECT(gbc.pc(), 0x5693);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB ED 0034
        gbc.setState(0x6411, 0xe9af, 0x3350, 0xaf0c, 0x2911, 0xacda, 0x1, 0x0);
        gbc.writeMem(0x6411, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0xaf);
        EXPECT(gbc.c(),  0xc);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0xe9af);
        EXPECT(gbc.pc(), 0x6413);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB ED 0035
        gbc.setState(0x9efa, 0xdf95, 0x8ce0, 0xefe8, 0xaa80, 0x1511, 0x0, 0x1);
        gbc.writeMem(0x9efa, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0xef);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0xdf95);
        EXPECT(gbc.pc(), 0x9efc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9efa), 0xcb);
        EXPECT(gbc.readMem(0x9efb), 0xed);
        // CB ED 0036
        gbc.setState(0xd6ee, 0xeee1, 0xcda0, 0x48ad, 0x12e7, 0xc6d, 0x1, 0x1);
        gbc.writeMem(0xd6ee, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0x6d);
        EXPECT(gbc.sp(), 0xeee1);
        EXPECT(gbc.pc(), 0xd6f0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd6ee), 0xcb);
        EXPECT(gbc.readMem(0xd6ef), 0xed);
        // CB ED 0037
        gbc.setState(0x3ee5, 0xd6a9, 0xbab0, 0xecec, 0xf5a2, 0x75e5, 0x1, 0x1);
        gbc.writeMem(0x3ee5, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0xec);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0xa2);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0xe5);
        EXPECT(gbc.sp(), 0xd6a9);
        EXPECT(gbc.pc(), 0x3ee7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB ED 0038
        gbc.setState(0x557b, 0x5f3c, 0xff20, 0xfd4c, 0xba45, 0xf447, 0x1, 0x1);
        gbc.writeMem(0x557b, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0xba);
        EXPECT(gbc.e(),  0x45);
        EXPECT(gbc.h(),  0xf4);
        EXPECT(gbc.l(),  0x67);
        EXPECT(gbc.sp(), 0x5f3c);
        EXPECT(gbc.pc(), 0x557d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB ED 0039
        gbc.setState(0x4fdc, 0x604c, 0x2ea0, 0xa7b2, 0x970e, 0xdf8a, 0x1, 0x1);
        gbc.writeMem(0x4fdc, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0xa7);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0xdf);
        EXPECT(gbc.l(),  0xaa);
        EXPECT(gbc.sp(), 0x604c);
        EXPECT(gbc.pc(), 0x4fde);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB ED 003A
        gbc.setState(0x761c, 0x3d02, 0x72d0, 0x54c6, 0xe09d, 0x6599, 0x0, 0x1);
        gbc.writeMem(0x761c, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0xc6);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0x9d);
        EXPECT(gbc.h(),  0x65);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0x3d02);
        EXPECT(gbc.pc(), 0x761e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB ED 003B
        gbc.setState(0x211e, 0xd817, 0xe210, 0xad2e, 0xe82c, 0x9d29, 0x0, 0x0);
        gbc.writeMem(0x211e, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0xad);
        EXPECT(gbc.c(),  0x2e);
        EXPECT(gbc.d(),  0xe8);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0xd817);
        EXPECT(gbc.pc(), 0x2120);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB ED 003C
        gbc.setState(0x4741, 0x8304, 0x22a0, 0x6ea6, 0x4748, 0xb6d8, 0x0, 0x1);
        gbc.writeMem(0x4741, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0xa6);
        EXPECT(gbc.d(),  0x47);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0x8304);
        EXPECT(gbc.pc(), 0x4743);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB ED 003D
        gbc.setState(0xa70b, 0x8f82, 0xf660, 0x582c, 0x10a3, 0xc044, 0x0, 0x0);
        gbc.writeMem(0xa70b, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0xf6);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0x10);
        EXPECT(gbc.e(),  0xa3);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0x8f82);
        EXPECT(gbc.pc(), 0xa70d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa70b), 0xcb);
        EXPECT(gbc.readMem(0xa70c), 0xed);
        // CB ED 003E
        gbc.setState(0x98c, 0xadc2, 0xd540, 0x30b3, 0x7de5, 0xf3b3, 0x0, 0x0);
        gbc.writeMem(0x98c, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0xd5);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0xb3);
        EXPECT(gbc.d(),  0x7d);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0xb3);
        EXPECT(gbc.sp(), 0xadc2);
        EXPECT(gbc.pc(), 0x98e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB ED 003F
        gbc.setState(0x8658, 0xefe, 0x38e0, 0xf611, 0xfcef, 0xa4e, 0x0, 0x0);
        gbc.writeMem(0x8658, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0x11);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0xef);
        EXPECT(gbc.h(),  0xa);
        EXPECT(gbc.l(),  0x6e);
        EXPECT(gbc.sp(), 0xefe);
        EXPECT(gbc.pc(), 0x865a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8658), 0xcb);
        EXPECT(gbc.readMem(0x8659), 0xed);
        // CB ED 0040
        gbc.setState(0x7735, 0x2fd5, 0x1980, 0x830, 0x1dad, 0x4f4b, 0x1, 0x1);
        gbc.writeMem(0x7735, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0x19);
        EXPECT(gbc.b(),  0x8);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0x4f);
        EXPECT(gbc.l(),  0x6b);
        EXPECT(gbc.sp(), 0x2fd5);
        EXPECT(gbc.pc(), 0x7737);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB ED 0041
        gbc.setState(0x686d, 0xb10a, 0xac00, 0x5f98, 0xf215, 0x2934, 0x1, 0x1);
        gbc.writeMem(0x686d, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0xac);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0xf2);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0x29);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0xb10a);
        EXPECT(gbc.pc(), 0x686f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB ED 0042
        gbc.setState(0x356f, 0x7762, 0xc610, 0xab4e, 0xa0c4, 0x1af, 0x1, 0x1);
        gbc.writeMem(0x356f, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0xc6);
        EXPECT(gbc.b(),  0xab);
        EXPECT(gbc.c(),  0x4e);
        EXPECT(gbc.d(),  0xa0);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0xaf);
        EXPECT(gbc.sp(), 0x7762);
        EXPECT(gbc.pc(), 0x3571);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB ED 0043
        gbc.setState(0x7a84, 0xc093, 0x6290, 0x3b1f, 0xa3ff, 0xe52, 0x1, 0x1);
        gbc.writeMem(0x7a84, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0x3b);
        EXPECT(gbc.c(),  0x1f);
        EXPECT(gbc.d(),  0xa3);
        EXPECT(gbc.e(),  0xff);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0x72);
        EXPECT(gbc.sp(), 0xc093);
        EXPECT(gbc.pc(), 0x7a86);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB ED 0044
        gbc.setState(0x7f8c, 0xfdab, 0xbf0, 0x5c67, 0x2fdb, 0x20cb, 0x0, 0x0);
        gbc.writeMem(0x7f8c, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0x5c);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0xdb);
        EXPECT(gbc.h(),  0x20);
        EXPECT(gbc.l(),  0xeb);
        EXPECT(gbc.sp(), 0xfdab);
        EXPECT(gbc.pc(), 0x7f8e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB ED 0045
        gbc.setState(0x4a3, 0x74e1, 0x60a0, 0x3657, 0x7843, 0x844d, 0x1, 0x1);
        gbc.writeMem(0x4a3, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0x36);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0x78);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0x6d);
        EXPECT(gbc.sp(), 0x74e1);
        EXPECT(gbc.pc(), 0x4a5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB ED 0046
        gbc.setState(0xabf6, 0x91be, 0xd380, 0xd95c, 0xadd7, 0x735c, 0x1, 0x1);
        gbc.writeMem(0xabf6, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0xd3);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0xad);
        EXPECT(gbc.e(),  0xd7);
        EXPECT(gbc.h(),  0x73);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0x91be);
        EXPECT(gbc.pc(), 0xabf8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xabf6), 0xcb);
        EXPECT(gbc.readMem(0xabf7), 0xed);
        // CB ED 0047
        gbc.setState(0xc3de, 0x29bd, 0xd670, 0x8527, 0x312, 0x9664, 0x1, 0x0);
        gbc.writeMem(0xc3de, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0x3);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0x29bd);
        EXPECT(gbc.pc(), 0xc3e0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc3de), 0xcb);
        EXPECT(gbc.readMem(0xc3df), 0xed);
        // CB ED 0048
        gbc.setState(0xa44d, 0x9998, 0x2310, 0x90c6, 0x22e6, 0xebe4, 0x0, 0x1);
        gbc.writeMem(0xa44d, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0xc6);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0xe6);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0x9998);
        EXPECT(gbc.pc(), 0xa44f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa44d), 0xcb);
        EXPECT(gbc.readMem(0xa44e), 0xed);
        // CB ED 0049
        gbc.setState(0x6508, 0x2a5a, 0xe980, 0x93ba, 0xfd7d, 0x76a2, 0x0, 0x0);
        gbc.writeMem(0x6508, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0xe9);
        EXPECT(gbc.b(),  0x93);
        EXPECT(gbc.c(),  0xba);
        EXPECT(gbc.d(),  0xfd);
        EXPECT(gbc.e(),  0x7d);
        EXPECT(gbc.h(),  0x76);
        EXPECT(gbc.l(),  0xa2);
        EXPECT(gbc.sp(), 0x2a5a);
        EXPECT(gbc.pc(), 0x650a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB ED 004A
        gbc.setState(0x958e, 0x2f9a, 0xee10, 0xbf9a, 0xde80, 0x1c30, 0x0, 0x1);
        gbc.writeMem(0x958e, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0xee);
        EXPECT(gbc.b(),  0xbf);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0x1c);
        EXPECT(gbc.l(),  0x30);
        EXPECT(gbc.sp(), 0x2f9a);
        EXPECT(gbc.pc(), 0x9590);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x958e), 0xcb);
        EXPECT(gbc.readMem(0x958f), 0xed);
        // CB ED 004B
        gbc.setState(0x3943, 0x744e, 0x3400, 0x5ef1, 0xb55a, 0xdc9, 0x0, 0x0);
        gbc.writeMem(0x3943, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0x34);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0xb5);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0xd);
        EXPECT(gbc.l(),  0xe9);
        EXPECT(gbc.sp(), 0x744e);
        EXPECT(gbc.pc(), 0x3945);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB ED 004C
        gbc.setState(0x251c, 0x2d0f, 0x9cb0, 0xf675, 0x2072, 0x5e3a, 0x1, 0x0);
        gbc.writeMem(0x251c, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0x9c);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0x5e);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0x2d0f);
        EXPECT(gbc.pc(), 0x251e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB ED 004D
        gbc.setState(0x2eb5, 0xa91f, 0x5330, 0x8770, 0xf34b, 0x8152, 0x1, 0x1);
        gbc.writeMem(0x2eb5, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0x53);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0x72);
        EXPECT(gbc.sp(), 0xa91f);
        EXPECT(gbc.pc(), 0x2eb7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB ED 004E
        gbc.setState(0xdbf, 0xc37a, 0x7dd0, 0x3632, 0x40df, 0x2c18, 0x0, 0x1);
        gbc.writeMem(0xdbf, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0x7d);
        EXPECT(gbc.b(),  0x36);
        EXPECT(gbc.c(),  0x32);
        EXPECT(gbc.d(),  0x40);
        EXPECT(gbc.e(),  0xdf);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0xc37a);
        EXPECT(gbc.pc(), 0xdc1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB ED 004F
        gbc.setState(0x1794, 0x8745, 0x6ad0, 0xefdc, 0xc515, 0xe1b3, 0x1, 0x0);
        gbc.writeMem(0x1794, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0xef);
        EXPECT(gbc.c(),  0xdc);
        EXPECT(gbc.d(),  0xc5);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0xe1);
        EXPECT(gbc.l(),  0xb3);
        EXPECT(gbc.sp(), 0x8745);
        EXPECT(gbc.pc(), 0x1796);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB ED 0050
        gbc.setState(0x2999, 0x3ca1, 0xb0a0, 0x4caf, 0x7b0, 0x623, 0x0, 0x0);
        gbc.writeMem(0x2999, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0xaf);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0x6);
        EXPECT(gbc.l(),  0x23);
        EXPECT(gbc.sp(), 0x3ca1);
        EXPECT(gbc.pc(), 0x299b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB ED 0051
        gbc.setState(0x2585, 0x9dbc, 0x7630, 0x7d35, 0xfa9f, 0x9dab, 0x0, 0x0);
        gbc.writeMem(0x2585, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0x7d);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0xfa);
        EXPECT(gbc.e(),  0x9f);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0x9dbc);
        EXPECT(gbc.pc(), 0x2587);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB ED 0052
        gbc.setState(0x73df, 0x3510, 0xac00, 0x86c5, 0x133f, 0x9b0b, 0x1, 0x1);
        gbc.writeMem(0x73df, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0xac);
        EXPECT(gbc.b(),  0x86);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0x2b);
        EXPECT(gbc.sp(), 0x3510);
        EXPECT(gbc.pc(), 0x73e1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB ED 0053
        gbc.setState(0xa27d, 0x8b16, 0xe1b0, 0xe6c9, 0x6032, 0xafe5, 0x1, 0x1);
        gbc.writeMem(0xa27d, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0xe1);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0xc9);
        EXPECT(gbc.d(),  0x60);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0xaf);
        EXPECT(gbc.l(),  0xe5);
        EXPECT(gbc.sp(), 0x8b16);
        EXPECT(gbc.pc(), 0xa27f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa27d), 0xcb);
        EXPECT(gbc.readMem(0xa27e), 0xed);
        // CB ED 0054
        gbc.setState(0x4f99, 0x9d8f, 0xde0, 0xe1d4, 0x831d, 0x6fcc, 0x1, 0x1);
        gbc.writeMem(0x4f99, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0xd);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0xd4);
        EXPECT(gbc.d(),  0x83);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0x6f);
        EXPECT(gbc.l(),  0xec);
        EXPECT(gbc.sp(), 0x9d8f);
        EXPECT(gbc.pc(), 0x4f9b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB ED 0055
        gbc.setState(0xbd1a, 0xf33f, 0xf20, 0x8091, 0xd8a1, 0xb944, 0x0, 0x1);
        gbc.writeMem(0xbd1a, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0xf);
        EXPECT(gbc.b(),  0x80);
        EXPECT(gbc.c(),  0x91);
        EXPECT(gbc.d(),  0xd8);
        EXPECT(gbc.e(),  0xa1);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0xf33f);
        EXPECT(gbc.pc(), 0xbd1c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbd1a), 0xcb);
        EXPECT(gbc.readMem(0xbd1b), 0xed);
        // CB ED 0056
        gbc.setState(0xccec, 0x7f3e, 0xcc80, 0xdfab, 0xb3f1, 0x62cd, 0x1, 0x0);
        gbc.writeMem(0xccec, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0xdf);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0xb3);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0x62);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0x7f3e);
        EXPECT(gbc.pc(), 0xccee);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xccec), 0xcb);
        EXPECT(gbc.readMem(0xcced), 0xed);
        // CB ED 0057
        gbc.setState(0x9b94, 0xbd9c, 0x76f0, 0xdceb, 0x9bbc, 0xd721, 0x1, 0x0);
        gbc.writeMem(0x9b94, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0xd7);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0xbd9c);
        EXPECT(gbc.pc(), 0x9b96);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9b94), 0xcb);
        EXPECT(gbc.readMem(0x9b95), 0xed);
        // CB ED 0058
        gbc.setState(0x24c8, 0x4c0b, 0x1390, 0x1c74, 0x4a65, 0xcc3b, 0x0, 0x1);
        gbc.writeMem(0x24c8, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0x13);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0x4a);
        EXPECT(gbc.e(),  0x65);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0x4c0b);
        EXPECT(gbc.pc(), 0x24ca);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB ED 0059
        gbc.setState(0xd505, 0x6dc8, 0x1cb0, 0xa4f1, 0x3f7e, 0x65cb, 0x1, 0x0);
        gbc.writeMem(0xd505, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0x1c);
        EXPECT(gbc.b(),  0xa4);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0x3f);
        EXPECT(gbc.e(),  0x7e);
        EXPECT(gbc.h(),  0x65);
        EXPECT(gbc.l(),  0xeb);
        EXPECT(gbc.sp(), 0x6dc8);
        EXPECT(gbc.pc(), 0xd507);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd505), 0xcb);
        EXPECT(gbc.readMem(0xd506), 0xed);
        // CB ED 005A
        gbc.setState(0x2f52, 0xe300, 0x4e20, 0x5834, 0xee1e, 0xd36b, 0x1, 0x0);
        gbc.writeMem(0x2f52, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0xee);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0xd3);
        EXPECT(gbc.l(),  0x6b);
        EXPECT(gbc.sp(), 0xe300);
        EXPECT(gbc.pc(), 0x2f54);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB ED 005B
        gbc.setState(0x593e, 0x3004, 0x2050, 0x6d65, 0x6d8d, 0xbf84, 0x0, 0x0);
        gbc.writeMem(0x593e, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0x20);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0x65);
        EXPECT(gbc.d(),  0x6d);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0xa4);
        EXPECT(gbc.sp(), 0x3004);
        EXPECT(gbc.pc(), 0x5940);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB ED 005C
        gbc.setState(0x2e54, 0x5975, 0xb430, 0xdab7, 0x3a3f, 0xaf3d, 0x1, 0x0);
        gbc.writeMem(0x2e54, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0xb4);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0xb7);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0xaf);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0x5975);
        EXPECT(gbc.pc(), 0x2e56);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB ED 005D
        gbc.setState(0x4603, 0x7a26, 0x7ef0, 0x97f7, 0x3df7, 0x4cb4, 0x1, 0x0);
        gbc.writeMem(0x4603, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0x97);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0xf7);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0x7a26);
        EXPECT(gbc.pc(), 0x4605);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB ED 005E
        gbc.setState(0x4bf9, 0xfdbf, 0x3750, 0xce3b, 0xd60b, 0xc197, 0x0, 0x0);
        gbc.writeMem(0x4bf9, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0xce);
        EXPECT(gbc.c(),  0x3b);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0xb);
        EXPECT(gbc.h(),  0xc1);
        EXPECT(gbc.l(),  0xb7);
        EXPECT(gbc.sp(), 0xfdbf);
        EXPECT(gbc.pc(), 0x4bfb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB ED 005F
        gbc.setState(0xd6ed, 0x1c3f, 0x67c0, 0x2b64, 0x594a, 0x5250, 0x1, 0x0);
        gbc.writeMem(0xd6ed, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0x67);
        EXPECT(gbc.b(),  0x2b);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0x59);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0x52);
        EXPECT(gbc.l(),  0x70);
        EXPECT(gbc.sp(), 0x1c3f);
        EXPECT(gbc.pc(), 0xd6ef);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd6ed), 0xcb);
        EXPECT(gbc.readMem(0xd6ee), 0xed);
        // CB ED 0060
        gbc.setState(0x91c, 0x759a, 0x5c30, 0xc18a, 0x9ed2, 0xc811, 0x0, 0x1);
        gbc.writeMem(0x91c, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0xc1);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0xc8);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0x759a);
        EXPECT(gbc.pc(), 0x91e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB ED 0061
        gbc.setState(0x5c51, 0xef9c, 0xdd30, 0xb5a2, 0x9e30, 0xaa71, 0x1, 0x0);
        gbc.writeMem(0x5c51, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0xdd);
        EXPECT(gbc.b(),  0xb5);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0xaa);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0xef9c);
        EXPECT(gbc.pc(), 0x5c53);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB ED 0062
        gbc.setState(0x41c5, 0x912a, 0xd540, 0x8ba7, 0xe48c, 0x304a, 0x1, 0x1);
        gbc.writeMem(0x41c5, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0xd5);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0xa7);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0x30);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0x912a);
        EXPECT(gbc.pc(), 0x41c7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB ED 0063
        gbc.setState(0xe8f5, 0xb931, 0x2850, 0xeaff, 0xa2c8, 0x17e, 0x1, 0x0);
        gbc.writeMem(0xe8f5, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0xff);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0x7e);
        EXPECT(gbc.sp(), 0xb931);
        EXPECT(gbc.pc(), 0xe8f7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe8f5), 0xcb);
        EXPECT(gbc.readMem(0xe8f6), 0xed);
        // CB ED 0064
        gbc.setState(0x6bfa, 0x8f42, 0xe430, 0xe1, 0xebc4, 0x5f1e, 0x1, 0x0);
        gbc.writeMem(0x6bfa, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0xe4);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0xe1);
        EXPECT(gbc.d(),  0xeb);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0x8f42);
        EXPECT(gbc.pc(), 0x6bfc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB ED 0065
        gbc.setState(0x4062, 0x70a0, 0x2a80, 0xd0b0, 0x4add, 0xd240, 0x0, 0x1);
        gbc.writeMem(0x4062, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0xd0);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0x4a);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0xd2);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0x70a0);
        EXPECT(gbc.pc(), 0x4064);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB ED 0066
        gbc.setState(0x46cd, 0xf0ab, 0x6550, 0xc5fd, 0x6857, 0x3cca, 0x1, 0x0);
        gbc.writeMem(0x46cd, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0x65);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0xfd);
        EXPECT(gbc.d(),  0x68);
        EXPECT(gbc.e(),  0x57);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0xf0ab);
        EXPECT(gbc.pc(), 0x46cf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB ED 0067
        gbc.setState(0x87be, 0x1ac9, 0x5350, 0x8da3, 0x5f59, 0xcd52, 0x1, 0x0);
        gbc.writeMem(0x87be, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0x53);
        EXPECT(gbc.b(),  0x8d);
        EXPECT(gbc.c(),  0xa3);
        EXPECT(gbc.d(),  0x5f);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0xcd);
        EXPECT(gbc.l(),  0x72);
        EXPECT(gbc.sp(), 0x1ac9);
        EXPECT(gbc.pc(), 0x87c0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x87be), 0xcb);
        EXPECT(gbc.readMem(0x87bf), 0xed);
        // CB ED 0068
        gbc.setState(0x8ea7, 0xe19a, 0xfa70, 0xc558, 0x1142, 0x6e28, 0x0, 0x1);
        gbc.writeMem(0x8ea7, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0xfa);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0x42);
        EXPECT(gbc.h(),  0x6e);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0xe19a);
        EXPECT(gbc.pc(), 0x8ea9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8ea7), 0xcb);
        EXPECT(gbc.readMem(0x8ea8), 0xed);
        // CB ED 0069
        gbc.setState(0xd196, 0xf103, 0x7a0, 0x7c58, 0x70cb, 0x5f19, 0x1, 0x1);
        gbc.writeMem(0xd196, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0x7c);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0x70);
        EXPECT(gbc.e(),  0xcb);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0x39);
        EXPECT(gbc.sp(), 0xf103);
        EXPECT(gbc.pc(), 0xd198);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd196), 0xcb);
        EXPECT(gbc.readMem(0xd197), 0xed);
        // CB ED 006A
        gbc.setState(0xd23, 0xe29f, 0xdc80, 0xc4df, 0xf7af, 0x4e05, 0x0, 0x0);
        gbc.writeMem(0xd23, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0xdc);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0xdf);
        EXPECT(gbc.d(),  0xf7);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0x4e);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0xe29f);
        EXPECT(gbc.pc(), 0xd25);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB ED 006B
        gbc.setState(0x7a6d, 0xd473, 0xdee0, 0xc0b4, 0x9187, 0x3226, 0x1, 0x0);
        gbc.writeMem(0x7a6d, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0xde);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0xb4);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0x87);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0xd473);
        EXPECT(gbc.pc(), 0x7a6f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB ED 006C
        gbc.setState(0xbc9, 0x77d1, 0x35a0, 0xc12b, 0xd1f6, 0x3362, 0x0, 0x0);
        gbc.writeMem(0xbc9, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0x35);
        EXPECT(gbc.b(),  0xc1);
        EXPECT(gbc.c(),  0x2b);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0xf6);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0x77d1);
        EXPECT(gbc.pc(), 0xbcb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB ED 006D
        gbc.setState(0xb4b0, 0xfe2e, 0xb340, 0xa0e7, 0x27f, 0x542b, 0x1, 0x1);
        gbc.writeMem(0xb4b0, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0xb3);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0xe7);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0x54);
        EXPECT(gbc.l(),  0x2b);
        EXPECT(gbc.sp(), 0xfe2e);
        EXPECT(gbc.pc(), 0xb4b2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb4b0), 0xcb);
        EXPECT(gbc.readMem(0xb4b1), 0xed);
        // CB ED 006E
        gbc.setState(0x7598, 0x4cae, 0xa4b0, 0xd11c, 0x2634, 0x41b7, 0x1, 0x0);
        gbc.writeMem(0x7598, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0xa4);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0x26);
        EXPECT(gbc.e(),  0x34);
        EXPECT(gbc.h(),  0x41);
        EXPECT(gbc.l(),  0xb7);
        EXPECT(gbc.sp(), 0x4cae);
        EXPECT(gbc.pc(), 0x759a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB ED 0070
        gbc.setState(0x7d22, 0x8322, 0x2c50, 0x6fdf, 0x7646, 0xbfcf, 0x0, 0x1);
        gbc.writeMem(0x7d22, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0x2c);
        EXPECT(gbc.b(),  0x6f);
        EXPECT(gbc.c(),  0xdf);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0xef);
        EXPECT(gbc.sp(), 0x8322);
        EXPECT(gbc.pc(), 0x7d24);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB ED 0071
        gbc.setState(0x4153, 0x1700, 0x4050, 0xe5fd, 0xdeac, 0x35, 0x1, 0x1);
        gbc.writeMem(0x4153, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0x40);
        EXPECT(gbc.b(),  0xe5);
        EXPECT(gbc.c(),  0xfd);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0x1700);
        EXPECT(gbc.pc(), 0x4155);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB ED 0072
        gbc.setState(0x256d, 0x99e8, 0xf800, 0x2d88, 0x759a, 0x1ece, 0x0, 0x0);
        gbc.writeMem(0x256d, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0x2d);
        EXPECT(gbc.c(),  0x88);
        EXPECT(gbc.d(),  0x75);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0xee);
        EXPECT(gbc.sp(), 0x99e8);
        EXPECT(gbc.pc(), 0x256f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB ED 0073
        gbc.setState(0x70e0, 0x5e0a, 0x6020, 0x1f29, 0x236f, 0x4051, 0x0, 0x1);
        gbc.writeMem(0x70e0, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0x29);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0x40);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0x5e0a);
        EXPECT(gbc.pc(), 0x70e2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB ED 0074
        gbc.setState(0x8d65, 0x3286, 0x71e0, 0xc850, 0x49b9, 0xd04f, 0x1, 0x1);
        gbc.writeMem(0x8d65, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0x71);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0x3286);
        EXPECT(gbc.pc(), 0x8d67);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8d65), 0xcb);
        EXPECT(gbc.readMem(0x8d66), 0xed);
        // CB ED 0076
        gbc.setState(0x3a62, 0x219e, 0x2d0, 0x2a51, 0xf287, 0xb39b, 0x0, 0x1);
        gbc.writeMem(0x3a62, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0xf2);
        EXPECT(gbc.e(),  0x87);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0xbb);
        EXPECT(gbc.sp(), 0x219e);
        EXPECT(gbc.pc(), 0x3a64);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB ED 0077
        gbc.setState(0x469b, 0x4aab, 0x1a20, 0x5a55, 0xa2c3, 0x212d, 0x1, 0x1);
        gbc.writeMem(0x469b, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0x1a);
        EXPECT(gbc.b(),  0x5a);
        EXPECT(gbc.c(),  0x55);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0xc3);
        EXPECT(gbc.h(),  0x21);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0x4aab);
        EXPECT(gbc.pc(), 0x469d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB ED 0078
        gbc.setState(0x80d7, 0x124c, 0x5c60, 0x1d1c, 0x975e, 0x9f05, 0x1, 0x1);
        gbc.writeMem(0x80d7, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0x124c);
        EXPECT(gbc.pc(), 0x80d9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x80d7), 0xcb);
        EXPECT(gbc.readMem(0x80d8), 0xed);
        // CB ED 0079
        gbc.setState(0x2886, 0x704c, 0xf060, 0xf154, 0xe1ee, 0x3294, 0x0, 0x0);
        gbc.writeMem(0x2886, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0xf0);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0x704c);
        EXPECT(gbc.pc(), 0x2888);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB ED 007A
        gbc.setState(0xde9a, 0xa0e8, 0xd2e0, 0x76ea, 0x7c0b, 0x7052, 0x0, 0x0);
        gbc.writeMem(0xde9a, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0xea);
        EXPECT(gbc.d(),  0x7c);
        EXPECT(gbc.e(),  0xb);
        EXPECT(gbc.h(),  0x70);
        EXPECT(gbc.l(),  0x72);
        EXPECT(gbc.sp(), 0xa0e8);
        EXPECT(gbc.pc(), 0xde9c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xde9a), 0xcb);
        EXPECT(gbc.readMem(0xde9b), 0xed);
        // CB ED 007C
        gbc.setState(0xdbca, 0x7cda, 0x7170, 0xd6ff, 0xc9f1, 0xe1a4, 0x0, 0x1);
        gbc.writeMem(0xdbca, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0x71);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0xff);
        EXPECT(gbc.d(),  0xc9);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0xe1);
        EXPECT(gbc.l(),  0xa4);
        EXPECT(gbc.sp(), 0x7cda);
        EXPECT(gbc.pc(), 0xdbcc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdbca), 0xcb);
        EXPECT(gbc.readMem(0xdbcb), 0xed);
        // CB ED 007D
        gbc.setState(0x778f, 0x65a9, 0x2460, 0xe1f7, 0x52bc, 0x52cb, 0x0, 0x1);
        gbc.writeMem(0x778f, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0x24);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0x52);
        EXPECT(gbc.l(),  0xeb);
        EXPECT(gbc.sp(), 0x65a9);
        EXPECT(gbc.pc(), 0x7791);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB ED 007E
        gbc.setState(0xf27, 0x243f, 0xd320, 0x292c, 0xd806, 0x60ee, 0x1, 0x1);
        gbc.writeMem(0xf27, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0xd3);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0xd8);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0x60);
        EXPECT(gbc.l(),  0xee);
        EXPECT(gbc.sp(), 0x243f);
        EXPECT(gbc.pc(), 0xf29);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB ED 007F
        gbc.setState(0xb195, 0xbd02, 0xd700, 0x69c3, 0xdf5f, 0x1092, 0x1, 0x0);
        gbc.writeMem(0xb195, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0xd7);
        EXPECT(gbc.b(),  0x69);
        EXPECT(gbc.c(),  0xc3);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0x10);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0xbd02);
        EXPECT(gbc.pc(), 0xb197);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb195), 0xcb);
        EXPECT(gbc.readMem(0xb196), 0xed);
        // CB ED 0080
        gbc.setState(0x5fab, 0x3edd, 0x2f10, 0xc8a6, 0x93f9, 0x4299, 0x1, 0x1);
        gbc.writeMem(0x5fab, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0x2f);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0xa6);
        EXPECT(gbc.d(),  0x93);
        EXPECT(gbc.e(),  0xf9);
        EXPECT(gbc.h(),  0x42);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0x3edd);
        EXPECT(gbc.pc(), 0x5fad);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB ED 0081
        gbc.setState(0x3786, 0x222a, 0xae60, 0xf4bd, 0x8df0, 0x9c16, 0x0, 0x0);
        gbc.writeMem(0x3786, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0xae);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0xbd);
        EXPECT(gbc.d(),  0x8d);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0x222a);
        EXPECT(gbc.pc(), 0x3788);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB ED 0083
        gbc.setState(0xdd17, 0xf869, 0xf050, 0x9813, 0x5b44, 0x24b2, 0x1, 0x1);
        gbc.writeMem(0xdd17, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0xf0);
        EXPECT(gbc.b(),  0x98);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0xf869);
        EXPECT(gbc.pc(), 0xdd19);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdd17), 0xcb);
        EXPECT(gbc.readMem(0xdd18), 0xed);
        // CB ED 0084
        gbc.setState(0x307f, 0xeca1, 0xbf60, 0xf092, 0x607, 0x8109, 0x1, 0x1);
        gbc.writeMem(0x307f, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0x6);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0xeca1);
        EXPECT(gbc.pc(), 0x3081);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB ED 0085
        gbc.setState(0xd9f3, 0xebda, 0x8db0, 0x6fd9, 0x18c2, 0x7d1f, 0x1, 0x1);
        gbc.writeMem(0xd9f3, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0x6f);
        EXPECT(gbc.c(),  0xd9);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0xc2);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0xebda);
        EXPECT(gbc.pc(), 0xd9f5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd9f3), 0xcb);
        EXPECT(gbc.readMem(0xd9f4), 0xed);
        // CB ED 0086
        gbc.setState(0x1483, 0xa831, 0x9e00, 0xb0e0, 0xaad1, 0xf67b, 0x1, 0x1);
        gbc.writeMem(0x1483, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0xb0);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0xd1);
        EXPECT(gbc.h(),  0xf6);
        EXPECT(gbc.l(),  0x7b);
        EXPECT(gbc.sp(), 0xa831);
        EXPECT(gbc.pc(), 0x1485);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB ED 0087
        gbc.setState(0xaf3b, 0xb975, 0xbff0, 0xb985, 0xc0c4, 0x6992, 0x0, 0x1);
        gbc.writeMem(0xaf3b, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0xb9);
        EXPECT(gbc.c(),  0x85);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0x69);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0xb975);
        EXPECT(gbc.pc(), 0xaf3d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaf3b), 0xcb);
        EXPECT(gbc.readMem(0xaf3c), 0xed);
        // CB ED 0088
        gbc.setState(0x8ab5, 0xa32f, 0x6980, 0x1a04, 0x1432, 0x660b, 0x0, 0x0);
        gbc.writeMem(0x8ab5, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0x1a);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0x14);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0x66);
        EXPECT(gbc.l(),  0x2b);
        EXPECT(gbc.sp(), 0xa32f);
        EXPECT(gbc.pc(), 0x8ab7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8ab5), 0xcb);
        EXPECT(gbc.readMem(0x8ab6), 0xed);
        // CB ED 0089
        gbc.setState(0x34a6, 0x1ce, 0xb7f0, 0xee8f, 0x99a4, 0x275e, 0x1, 0x1);
        gbc.writeMem(0x34a6, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0x8f);
        EXPECT(gbc.d(),  0x99);
        EXPECT(gbc.e(),  0xa4);
        EXPECT(gbc.h(),  0x27);
        EXPECT(gbc.l(),  0x7e);
        EXPECT(gbc.sp(), 0x1ce);
        EXPECT(gbc.pc(), 0x34a8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB ED 008A
        gbc.setState(0x52bc, 0xe5aa, 0xf9f0, 0x24d5, 0xd5b1, 0x1df2, 0x1, 0x1);
        gbc.writeMem(0x52bc, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0xf9);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0xb1);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0xf2);
        EXPECT(gbc.sp(), 0xe5aa);
        EXPECT(gbc.pc(), 0x52be);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB ED 008B
        gbc.setState(0xe895, 0x6c35, 0xf870, 0x47c3, 0x9c96, 0x6f01, 0x1, 0x1);
        gbc.writeMem(0xe895, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0xc3);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0x6f);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0x6c35);
        EXPECT(gbc.pc(), 0xe897);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe895), 0xcb);
        EXPECT(gbc.readMem(0xe896), 0xed);
        // CB ED 008C
        gbc.setState(0xb28, 0xbb84, 0x9a40, 0xfcb2, 0xffdd, 0x3c5f, 0x1, 0x0);
        gbc.writeMem(0xb28, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0x9a);
        EXPECT(gbc.b(),  0xfc);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0xff);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0xbb84);
        EXPECT(gbc.pc(), 0xb2a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB ED 008D
        gbc.setState(0xba35, 0x3987, 0xb150, 0x44da, 0x31f8, 0x994d, 0x1, 0x1);
        gbc.writeMem(0xba35, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0x44);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0xf8);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0x6d);
        EXPECT(gbc.sp(), 0x3987);
        EXPECT(gbc.pc(), 0xba37);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xba35), 0xcb);
        EXPECT(gbc.readMem(0xba36), 0xed);
        // CB ED 008E
        gbc.setState(0x51f7, 0x82f6, 0x7210, 0xf058, 0xb49f, 0x446e, 0x0, 0x1);
        gbc.writeMem(0x51f7, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0x9f);
        EXPECT(gbc.h(),  0x44);
        EXPECT(gbc.l(),  0x6e);
        EXPECT(gbc.sp(), 0x82f6);
        EXPECT(gbc.pc(), 0x51f9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB ED 008F
        gbc.setState(0x4d37, 0x3eaa, 0x7470, 0xad29, 0xef1c, 0x74ca, 0x1, 0x0);
        gbc.writeMem(0x4d37, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0x74);
        EXPECT(gbc.b(),  0xad);
        EXPECT(gbc.c(),  0x29);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0x74);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0x3eaa);
        EXPECT(gbc.pc(), 0x4d39);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB ED 0090
        gbc.setState(0xcae8, 0xf5e3, 0x8d90, 0xac6f, 0x2326, 0x31d2, 0x1, 0x1);
        gbc.writeMem(0xcae8, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0xac);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0xf2);
        EXPECT(gbc.sp(), 0xf5e3);
        EXPECT(gbc.pc(), 0xcaea);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcae8), 0xcb);
        EXPECT(gbc.readMem(0xcae9), 0xed);
        // CB ED 0091
        gbc.setState(0xefa1, 0xfc00, 0x2440, 0x5528, 0xf929, 0x4ed6, 0x0, 0x1);
        gbc.writeMem(0xefa1, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0x24);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0xf9);
        EXPECT(gbc.e(),  0x29);
        EXPECT(gbc.h(),  0x4e);
        EXPECT(gbc.l(),  0xf6);
        EXPECT(gbc.sp(), 0xfc00);
        EXPECT(gbc.pc(), 0xefa3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xefa1), 0xcb);
        EXPECT(gbc.readMem(0xefa2), 0xed);
        // CB ED 0092
        gbc.setState(0x8aa4, 0xdcf6, 0x9b70, 0x2dd, 0x68ba, 0x31f3, 0x1, 0x1);
        gbc.writeMem(0x8aa4, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0x9b);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0xdd);
        EXPECT(gbc.d(),  0x68);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0xdcf6);
        EXPECT(gbc.pc(), 0x8aa6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8aa4), 0xcb);
        EXPECT(gbc.readMem(0x8aa5), 0xed);
        // CB ED 0093
        gbc.setState(0x93df, 0xdcd3, 0x8830, 0x9e3a, 0xed31, 0xe903, 0x1, 0x1);
        gbc.writeMem(0x93df, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0x9e);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0xed);
        EXPECT(gbc.e(),  0x31);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0x23);
        EXPECT(gbc.sp(), 0xdcd3);
        EXPECT(gbc.pc(), 0x93e1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x93df), 0xcb);
        EXPECT(gbc.readMem(0x93e0), 0xed);
        // CB ED 0094
        gbc.setState(0xdc09, 0x92f0, 0xe660, 0xc9c5, 0x7acc, 0xdbb2, 0x0, 0x0);
        gbc.writeMem(0xdc09, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0xc9);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0xcc);
        EXPECT(gbc.h(),  0xdb);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0x92f0);
        EXPECT(gbc.pc(), 0xdc0b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdc09), 0xcb);
        EXPECT(gbc.readMem(0xdc0a), 0xed);
        // CB ED 0095
        gbc.setState(0x84a7, 0xbc07, 0x290, 0x30b8, 0xd6c2, 0xd910, 0x0, 0x0);
        gbc.writeMem(0x84a7, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0xb8);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0xc2);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0x30);
        EXPECT(gbc.sp(), 0xbc07);
        EXPECT(gbc.pc(), 0x84a9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x84a7), 0xcb);
        EXPECT(gbc.readMem(0x84a8), 0xed);
        // CB ED 0097
        gbc.setState(0xa279, 0xf692, 0xd5b0, 0x67c5, 0x6200, 0x6a79, 0x1, 0x1);
        gbc.writeMem(0xa279, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0xd5);
        EXPECT(gbc.b(),  0x67);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0x62);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0x6a);
        EXPECT(gbc.l(),  0x79);
        EXPECT(gbc.sp(), 0xf692);
        EXPECT(gbc.pc(), 0xa27b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa279), 0xcb);
        EXPECT(gbc.readMem(0xa27a), 0xed);
        // CB ED 0098
        gbc.setState(0xebf7, 0x9551, 0x6c00, 0xb9d0, 0xd194, 0xf8f1, 0x1, 0x0);
        gbc.writeMem(0xebf7, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0xb9);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0xf1);
        EXPECT(gbc.sp(), 0x9551);
        EXPECT(gbc.pc(), 0xebf9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xebf7), 0xcb);
        EXPECT(gbc.readMem(0xebf8), 0xed);
        // CB ED 0099
        gbc.setState(0x5d39, 0x7e70, 0xc890, 0x1bf1, 0x3e02, 0x7e92, 0x0, 0x0);
        gbc.writeMem(0x5d39, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0x7e);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0x7e70);
        EXPECT(gbc.pc(), 0x5d3b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB ED 009A
        gbc.setState(0x89fb, 0x8b9f, 0x4600, 0xd17c, 0xb51b, 0x436e, 0x1, 0x0);
        gbc.writeMem(0x89fb, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0x46);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0xb5);
        EXPECT(gbc.e(),  0x1b);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0x6e);
        EXPECT(gbc.sp(), 0x8b9f);
        EXPECT(gbc.pc(), 0x89fd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x89fb), 0xcb);
        EXPECT(gbc.readMem(0x89fc), 0xed);
        // CB ED 009B
        gbc.setState(0x91be, 0xad9a, 0x5780, 0xf97a, 0xd98d, 0xe0c0, 0x0, 0x0);
        gbc.writeMem(0x91be, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0x57);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0xd9);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0xad9a);
        EXPECT(gbc.pc(), 0x91c0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x91be), 0xcb);
        EXPECT(gbc.readMem(0x91bf), 0xed);
        // CB ED 009C
        gbc.setState(0x53f6, 0x2c0b, 0x460, 0x8868, 0xbcdb, 0xcfc1, 0x1, 0x0);
        gbc.writeMem(0x53f6, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0x4);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0x68);
        EXPECT(gbc.d(),  0xbc);
        EXPECT(gbc.e(),  0xdb);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0x2c0b);
        EXPECT(gbc.pc(), 0x53f8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB ED 009D
        gbc.setState(0x2a76, 0xe703, 0x3360, 0x36a5, 0xe11f, 0xef68, 0x0, 0x1);
        gbc.writeMem(0x2a76, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0x36);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0x1f);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0x68);
        EXPECT(gbc.sp(), 0xe703);
        EXPECT(gbc.pc(), 0x2a78);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB ED 009E
        gbc.setState(0xd114, 0x879f, 0x6f00, 0x8493, 0x3eb9, 0xcf12, 0x0, 0x0);
        gbc.writeMem(0xd114, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0x84);
        EXPECT(gbc.c(),  0x93);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0x879f);
        EXPECT(gbc.pc(), 0xd116);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd114), 0xcb);
        EXPECT(gbc.readMem(0xd115), 0xed);
        // CB ED 00A0
        gbc.setState(0xa907, 0x5fbf, 0x45d0, 0xaf17, 0x29da, 0x59b9, 0x1, 0x0);
        gbc.writeMem(0xa907, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0xaf);
        EXPECT(gbc.c(),  0x17);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0xda);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0x5fbf);
        EXPECT(gbc.pc(), 0xa909);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa907), 0xcb);
        EXPECT(gbc.readMem(0xa908), 0xed);
        // CB ED 00A1
        gbc.setState(0xd57e, 0x10, 0x29d0, 0xb0f7, 0x78f0, 0xd3f, 0x1, 0x1);
        gbc.writeMem(0xd57e, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0xb0);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0x78);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0xd);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0x10);
        EXPECT(gbc.pc(), 0xd580);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd57e), 0xcb);
        EXPECT(gbc.readMem(0xd57f), 0xed);
        // CB ED 00A2
        gbc.setState(0x414e, 0x43f1, 0xda50, 0x28a4, 0x6625, 0x9569, 0x0, 0x1);
        gbc.writeMem(0x414e, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0x28);
        EXPECT(gbc.c(),  0xa4);
        EXPECT(gbc.d(),  0x66);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0x43f1);
        EXPECT(gbc.pc(), 0x4150);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB ED 00A3
        gbc.setState(0x79f1, 0xebde, 0xcf30, 0x870f, 0x9468, 0x96d5, 0x1, 0x1);
        gbc.writeMem(0x79f1, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0xcf);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0xebde);
        EXPECT(gbc.pc(), 0x79f3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB ED 00A4
        gbc.setState(0x372c, 0xc147, 0xff0, 0xa15f, 0x3019, 0x6e7, 0x0, 0x1);
        gbc.writeMem(0x372c, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0xf);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0x19);
        EXPECT(gbc.h(),  0x6);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0xc147);
        EXPECT(gbc.pc(), 0x372e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB ED 00A6
        gbc.setState(0x5b03, 0xec55, 0xb70, 0xacbf, 0x8f24, 0xfd26, 0x1, 0x1);
        gbc.writeMem(0x5b03, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0xac);
        EXPECT(gbc.c(),  0xbf);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0x24);
        EXPECT(gbc.h(),  0xfd);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0xec55);
        EXPECT(gbc.pc(), 0x5b05);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB ED 00A7
        gbc.setState(0xeec6, 0x25ff, 0x57f0, 0x9a39, 0xb9c3, 0x7756, 0x0, 0x0);
        gbc.writeMem(0xeec6, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0x57);
        EXPECT(gbc.b(),  0x9a);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0xb9);
        EXPECT(gbc.e(),  0xc3);
        EXPECT(gbc.h(),  0x77);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0x25ff);
        EXPECT(gbc.pc(), 0xeec8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xeec6), 0xcb);
        EXPECT(gbc.readMem(0xeec7), 0xed);
        // CB ED 00A8
        gbc.setState(0x5ee8, 0xc797, 0x2c50, 0x1df1, 0x1c3d, 0xb244, 0x0, 0x0);
        gbc.writeMem(0x5ee8, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0x2c);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0xc797);
        EXPECT(gbc.pc(), 0x5eea);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB ED 00A9
        gbc.setState(0x7c9c, 0xdf2, 0x5580, 0x5c7b, 0xdae8, 0x97b, 0x0, 0x1);
        gbc.writeMem(0x7c9c, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0x5c);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0x9);
        EXPECT(gbc.l(),  0x7b);
        EXPECT(gbc.sp(), 0xdf2);
        EXPECT(gbc.pc(), 0x7c9e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB ED 00AA
        gbc.setState(0x5f16, 0xa18d, 0x5b10, 0x1000, 0xad7b, 0xe641, 0x1, 0x1);
        gbc.writeMem(0x5f16, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0xad);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0xe6);
        EXPECT(gbc.l(),  0x61);
        EXPECT(gbc.sp(), 0xa18d);
        EXPECT(gbc.pc(), 0x5f18);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB ED 00AB
        gbc.setState(0x16b3, 0x225b, 0x63e0, 0x3445, 0xd4a3, 0x9c5a, 0x0, 0x1);
        gbc.writeMem(0x16b3, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0x34);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0xa3);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0x7a);
        EXPECT(gbc.sp(), 0x225b);
        EXPECT(gbc.pc(), 0x16b5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB ED 00AD
        gbc.setState(0x7891, 0x4591, 0xbc40, 0xf1c3, 0xafda, 0x5db7, 0x1, 0x0);
        gbc.writeMem(0x7891, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0xc3);
        EXPECT(gbc.d(),  0xaf);
        EXPECT(gbc.e(),  0xda);
        EXPECT(gbc.h(),  0x5d);
        EXPECT(gbc.l(),  0xb7);
        EXPECT(gbc.sp(), 0x4591);
        EXPECT(gbc.pc(), 0x7893);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB ED 00AE
        gbc.setState(0xe1ba, 0x6778, 0x9ad0, 0x87db, 0x21cb, 0x74b9, 0x0, 0x0);
        gbc.writeMem(0xe1ba, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0x9a);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0x21);
        EXPECT(gbc.e(),  0xcb);
        EXPECT(gbc.h(),  0x74);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0x6778);
        EXPECT(gbc.pc(), 0xe1bc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe1ba), 0xcb);
        EXPECT(gbc.readMem(0xe1bb), 0xed);
        // CB ED 00AF
        gbc.setState(0xefb0, 0x4029, 0xea50, 0x32e, 0x9830, 0x4dc7, 0x1, 0x1);
        gbc.writeMem(0xefb0, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0x2e);
        EXPECT(gbc.d(),  0x98);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0x4d);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0x4029);
        EXPECT(gbc.pc(), 0xefb2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xefb0), 0xcb);
        EXPECT(gbc.readMem(0xefb1), 0xed);
        // CB ED 00B0
        gbc.setState(0x2e9c, 0x107e, 0x1330, 0x327f, 0x4564, 0xfc7a, 0x1, 0x1);
        gbc.writeMem(0x2e9c, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0x13);
        EXPECT(gbc.b(),  0x32);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0x64);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0x7a);
        EXPECT(gbc.sp(), 0x107e);
        EXPECT(gbc.pc(), 0x2e9e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB ED 00B1
        gbc.setState(0xdb76, 0x4860, 0x3370, 0xfc72, 0xb8ed, 0x4649, 0x1, 0x0);
        gbc.writeMem(0xdb76, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0xfc);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0xb8);
        EXPECT(gbc.e(),  0xed);
        EXPECT(gbc.h(),  0x46);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0x4860);
        EXPECT(gbc.pc(), 0xdb78);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdb76), 0xcb);
        EXPECT(gbc.readMem(0xdb77), 0xed);
        // CB ED 00B2
        gbc.setState(0xa647, 0xe5a0, 0x5d00, 0x2742, 0x5f06, 0xc0f2, 0x1, 0x0);
        gbc.writeMem(0xa647, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0x5d);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0x5f);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0xf2);
        EXPECT(gbc.sp(), 0xe5a0);
        EXPECT(gbc.pc(), 0xa649);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa647), 0xcb);
        EXPECT(gbc.readMem(0xa648), 0xed);
        // CB ED 00B3
        gbc.setState(0x7670, 0x5dbb, 0x56d0, 0xe8a2, 0xf583, 0xb5c, 0x0, 0x0);
        gbc.writeMem(0x7670, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0x83);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0x5dbb);
        EXPECT(gbc.pc(), 0x7672);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB ED 00B5
        gbc.setState(0x1fe7, 0x583a, 0x500, 0xb8d, 0xaf9b, 0xd59c, 0x0, 0x0);
        gbc.writeMem(0x1fe7, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0x5);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0x8d);
        EXPECT(gbc.d(),  0xaf);
        EXPECT(gbc.e(),  0x9b);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0x583a);
        EXPECT(gbc.pc(), 0x1fe9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB ED 00B6
        gbc.setState(0xe48c, 0xfb2d, 0x280, 0xea35, 0xf8c7, 0x4896, 0x0, 0x0);
        gbc.writeMem(0xe48c, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0x48);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0xfb2d);
        EXPECT(gbc.pc(), 0xe48e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe48c), 0xcb);
        EXPECT(gbc.readMem(0xe48d), 0xed);
        // CB ED 00B7
        gbc.setState(0x19b5, 0xa8e, 0xec00, 0x5a53, 0x9790, 0xaf66, 0x1, 0x0);
        gbc.writeMem(0x19b5, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0x5a);
        EXPECT(gbc.c(),  0x53);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0xaf);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0xa8e);
        EXPECT(gbc.pc(), 0x19b7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB ED 00B8
        gbc.setState(0xbe90, 0xb8e2, 0x9fc0, 0x4d12, 0x89bf, 0xcada, 0x1, 0x0);
        gbc.writeMem(0xbe90, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0x9f);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0x89);
        EXPECT(gbc.e(),  0xbf);
        EXPECT(gbc.h(),  0xca);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0xb8e2);
        EXPECT(gbc.pc(), 0xbe92);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbe90), 0xcb);
        EXPECT(gbc.readMem(0xbe91), 0xed);
        // CB ED 00B9
        gbc.setState(0xa0a8, 0x2703, 0x3a00, 0xc85a, 0xa9ec, 0x9684, 0x1, 0x0);
        gbc.writeMem(0xa0a8, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0x5a);
        EXPECT(gbc.d(),  0xa9);
        EXPECT(gbc.e(),  0xec);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0xa4);
        EXPECT(gbc.sp(), 0x2703);
        EXPECT(gbc.pc(), 0xa0aa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa0a8), 0xcb);
        EXPECT(gbc.readMem(0xa0a9), 0xed);
        // CB ED 00BA
        gbc.setState(0x7619, 0x245f, 0x9fa0, 0xb63e, 0x9a39, 0x26b4, 0x1, 0x0);
        gbc.writeMem(0x7619, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0x9f);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0x245f);
        EXPECT(gbc.pc(), 0x761b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB ED 00BB
        gbc.setState(0xab76, 0xc04e, 0x6370, 0xa97a, 0xcbde, 0xcc4d, 0x1, 0x1);
        gbc.writeMem(0xab76, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0xa9);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0x6d);
        EXPECT(gbc.sp(), 0xc04e);
        EXPECT(gbc.pc(), 0xab78);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xab76), 0xcb);
        EXPECT(gbc.readMem(0xab77), 0xed);
        // CB ED 00BC
        gbc.setState(0xae23, 0x5d0a, 0xd920, 0xf6ee, 0x7cd4, 0xdf68, 0x1, 0x1);
        gbc.writeMem(0xae23, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0xd9);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0x7c);
        EXPECT(gbc.e(),  0xd4);
        EXPECT(gbc.h(),  0xdf);
        EXPECT(gbc.l(),  0x68);
        EXPECT(gbc.sp(), 0x5d0a);
        EXPECT(gbc.pc(), 0xae25);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xae23), 0xcb);
        EXPECT(gbc.readMem(0xae24), 0xed);
        // CB ED 00BD
        gbc.setState(0x9e15, 0x3559, 0xcc40, 0x5fad, 0xf2c6, 0xe26c, 0x1, 0x1);
        gbc.writeMem(0x9e15, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0xf2);
        EXPECT(gbc.e(),  0xc6);
        EXPECT(gbc.h(),  0xe2);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0x3559);
        EXPECT(gbc.pc(), 0x9e17);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9e15), 0xcb);
        EXPECT(gbc.readMem(0x9e16), 0xed);
        // CB ED 00BE
        gbc.setState(0xc84e, 0x985a, 0x29b0, 0x9dd4, 0x2403, 0x5c61, 0x0, 0x0);
        gbc.writeMem(0xc84e, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0x9d);
        EXPECT(gbc.c(),  0xd4);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0x3);
        EXPECT(gbc.h(),  0x5c);
        EXPECT(gbc.l(),  0x61);
        EXPECT(gbc.sp(), 0x985a);
        EXPECT(gbc.pc(), 0xc850);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc84e), 0xcb);
        EXPECT(gbc.readMem(0xc84f), 0xed);
        // CB ED 00BF
        gbc.setState(0x5a71, 0x5db7, 0x1b10, 0x4329, 0x3da8, 0x3fda, 0x0, 0x0);
        gbc.writeMem(0x5a71, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0x43);
        EXPECT(gbc.c(),  0x29);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0x5db7);
        EXPECT(gbc.pc(), 0x5a73);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB ED 00C0
        gbc.setState(0x7f1, 0x63dd, 0x7ae0, 0x5561, 0x84a2, 0x5350, 0x1, 0x0);
        gbc.writeMem(0x7f1, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0x7a);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0x61);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0xa2);
        EXPECT(gbc.h(),  0x53);
        EXPECT(gbc.l(),  0x70);
        EXPECT(gbc.sp(), 0x63dd);
        EXPECT(gbc.pc(), 0x7f3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB ED 00C1
        gbc.setState(0x427e, 0x144b, 0xd940, 0x5182, 0x8c63, 0xc00, 0x1, 0x0);
        gbc.writeMem(0x427e, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0xd9);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0x63);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0x144b);
        EXPECT(gbc.pc(), 0x4280);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB ED 00C2
        gbc.setState(0x451, 0x3cbc, 0x2310, 0xd8e2, 0xda03, 0xd904, 0x1, 0x1);
        gbc.writeMem(0x451, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0x3);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0x3cbc);
        EXPECT(gbc.pc(), 0x453);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB ED 00C4
        gbc.setState(0xb96c, 0x2ec6, 0xe610, 0x79ed, 0xefd6, 0xcf28, 0x0, 0x1);
        gbc.writeMem(0xb96c, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0xed);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0xd6);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0x2ec6);
        EXPECT(gbc.pc(), 0xb96e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb96c), 0xcb);
        EXPECT(gbc.readMem(0xb96d), 0xed);
        // CB ED 00C5
        gbc.setState(0x791b, 0xa380, 0xadb0, 0x2c21, 0x540d, 0xa5ba, 0x1, 0x1);
        gbc.writeMem(0x791b, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0xad);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0x21);
        EXPECT(gbc.d(),  0x54);
        EXPECT(gbc.e(),  0xd);
        EXPECT(gbc.h(),  0xa5);
        EXPECT(gbc.l(),  0xba);
        EXPECT(gbc.sp(), 0xa380);
        EXPECT(gbc.pc(), 0x791d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB ED 00C6
        gbc.setState(0x5758, 0xa082, 0x4240, 0xf406, 0x3849, 0xc7ca, 0x0, 0x1);
        gbc.writeMem(0x5758, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0x42);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0x38);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0xa082);
        EXPECT(gbc.pc(), 0x575a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB ED 00C7
        gbc.setState(0xc2b5, 0x59d0, 0xa50, 0x697f, 0xe8be, 0x2c47, 0x0, 0x0);
        gbc.writeMem(0xc2b5, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0x69);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0xe8);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0x67);
        EXPECT(gbc.sp(), 0x59d0);
        EXPECT(gbc.pc(), 0xc2b7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc2b5), 0xcb);
        EXPECT(gbc.readMem(0xc2b6), 0xed);
        // CB ED 00C8
        gbc.setState(0x80d, 0x4340, 0x2030, 0x45bc, 0xd734, 0xbb1b, 0x0, 0x1);
        gbc.writeMem(0x80d, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0x20);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0xbc);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0x34);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0x4340);
        EXPECT(gbc.pc(), 0x80f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB ED 00C9
        gbc.setState(0x3d65, 0x1b8c, 0xfe0, 0x18f7, 0x5257, 0x8f41, 0x1, 0x0);
        gbc.writeMem(0x3d65, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0xf);
        EXPECT(gbc.b(),  0x18);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0x57);
        EXPECT(gbc.h(),  0x8f);
        EXPECT(gbc.l(),  0x61);
        EXPECT(gbc.sp(), 0x1b8c);
        EXPECT(gbc.pc(), 0x3d67);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB ED 00CA
        gbc.setState(0xa9af, 0x97f3, 0x3c40, 0x1df1, 0x1394, 0x2708, 0x1, 0x1);
        gbc.writeMem(0xa9af, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0x27);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0x97f3);
        EXPECT(gbc.pc(), 0xa9b1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa9af), 0xcb);
        EXPECT(gbc.readMem(0xa9b0), 0xed);
        // CB ED 00CB
        gbc.setState(0x5f74, 0xd8da, 0xda90, 0xe5da, 0x1202, 0xfc57, 0x1, 0x1);
        gbc.writeMem(0x5f74, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0xe5);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0xd8da);
        EXPECT(gbc.pc(), 0x5f76);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB ED 00CC
        gbc.setState(0x917c, 0x29c2, 0xbd50, 0xb8a, 0xda33, 0x98ad, 0x1, 0x1);
        gbc.writeMem(0x917c, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0xbd);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0x33);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0xad);
        EXPECT(gbc.sp(), 0x29c2);
        EXPECT(gbc.pc(), 0x917e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x917c), 0xcb);
        EXPECT(gbc.readMem(0x917d), 0xed);
        // CB ED 00CD
        gbc.setState(0x4765, 0x87db, 0xa7d0, 0xdb0f, 0x3602, 0x7a10, 0x1, 0x0);
        gbc.writeMem(0x4765, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0xa7);
        EXPECT(gbc.b(),  0xdb);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0x7a);
        EXPECT(gbc.l(),  0x30);
        EXPECT(gbc.sp(), 0x87db);
        EXPECT(gbc.pc(), 0x4767);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB ED 00CE
        gbc.setState(0x676, 0xb2d0, 0xd610, 0x896e, 0xbeb3, 0xac38, 0x1, 0x1);
        gbc.writeMem(0x676, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0xb3);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0xb2d0);
        EXPECT(gbc.pc(), 0x678);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB ED 00CF
        gbc.setState(0x63ee, 0x1554, 0x640, 0x2ada, 0x4eef, 0xafc2, 0x1, 0x0);
        gbc.writeMem(0x63ee, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0x4e);
        EXPECT(gbc.e(),  0xef);
        EXPECT(gbc.h(),  0xaf);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0x1554);
        EXPECT(gbc.pc(), 0x63f0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB ED 00D1
        gbc.setState(0x4709, 0x5d98, 0x2110, 0x17d0, 0x586f, 0x2af7, 0x0, 0x0);
        gbc.writeMem(0x4709, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0x17);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0x2a);
        EXPECT(gbc.l(),  0xf7);
        EXPECT(gbc.sp(), 0x5d98);
        EXPECT(gbc.pc(), 0x470b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB ED 00D2
        gbc.setState(0x1cb7, 0xfae9, 0x4b0, 0x35c0, 0xc32d, 0xa716, 0x1, 0x0);
        gbc.writeMem(0x1cb7, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0x4);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0xfae9);
        EXPECT(gbc.pc(), 0x1cb9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB ED 00D3
        gbc.setState(0x43b3, 0x6ada, 0x6360, 0xc380, 0x497f, 0x17fe, 0x1, 0x1);
        gbc.writeMem(0x43b3, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0xc3);
        EXPECT(gbc.c(),  0x80);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0xfe);
        EXPECT(gbc.sp(), 0x6ada);
        EXPECT(gbc.pc(), 0x43b5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB ED 00D4
        gbc.setState(0x714c, 0x8811, 0x4fa0, 0x2b9d, 0x1f17, 0x10f1, 0x1, 0x1);
        gbc.writeMem(0x714c, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0x2b);
        EXPECT(gbc.c(),  0x9d);
        EXPECT(gbc.d(),  0x1f);
        EXPECT(gbc.e(),  0x17);
        EXPECT(gbc.h(),  0x10);
        EXPECT(gbc.l(),  0xf1);
        EXPECT(gbc.sp(), 0x8811);
        EXPECT(gbc.pc(), 0x714e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB ED 00D6
        gbc.setState(0x5b90, 0x3756, 0x8940, 0x5ccf, 0x9fa2, 0x556a, 0x0, 0x0);
        gbc.writeMem(0x5b90, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0x5c);
        EXPECT(gbc.c(),  0xcf);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0xa2);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0x3756);
        EXPECT(gbc.pc(), 0x5b92);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB ED 00D8
        gbc.setState(0x8a71, 0xbf42, 0x2ae0, 0x4936, 0x785, 0xb5e7, 0x0, 0x0);
        gbc.writeMem(0x8a71, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0x49);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0x85);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0xbf42);
        EXPECT(gbc.pc(), 0x8a73);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8a71), 0xcb);
        EXPECT(gbc.readMem(0x8a72), 0xed);
        // CB ED 00D9
        gbc.setState(0xb17f, 0x59b0, 0xfc60, 0x376c, 0x66fc, 0x3322, 0x1, 0x0);
        gbc.writeMem(0xb17f, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0x66);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0x22);
        EXPECT(gbc.sp(), 0x59b0);
        EXPECT(gbc.pc(), 0xb181);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb17f), 0xcb);
        EXPECT(gbc.readMem(0xb180), 0xed);
        // CB ED 00DA
        gbc.setState(0xb5e3, 0x60b, 0xe0c0, 0xe2d8, 0xdcfd, 0x5aeb, 0x0, 0x1);
        gbc.writeMem(0xb5e3, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0xe0);
        EXPECT(gbc.b(),  0xe2);
        EXPECT(gbc.c(),  0xd8);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0xfd);
        EXPECT(gbc.h(),  0x5a);
        EXPECT(gbc.l(),  0xeb);
        EXPECT(gbc.sp(), 0x60b);
        EXPECT(gbc.pc(), 0xb5e5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb5e3), 0xcb);
        EXPECT(gbc.readMem(0xb5e4), 0xed);
        // CB ED 00DB
        gbc.setState(0xa98d, 0x253a, 0xebf0, 0x689c, 0xa328, 0x8981, 0x0, 0x0);
        gbc.writeMem(0xa98d, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0x9c);
        EXPECT(gbc.d(),  0xa3);
        EXPECT(gbc.e(),  0x28);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0x253a);
        EXPECT(gbc.pc(), 0xa98f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa98d), 0xcb);
        EXPECT(gbc.readMem(0xa98e), 0xed);
        // CB ED 00DC
        gbc.setState(0x7dca, 0xe61a, 0x4fc0, 0x727a, 0x7aea, 0x9d2e, 0x1, 0x1);
        gbc.writeMem(0x7dca, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0xe61a);
        EXPECT(gbc.pc(), 0x7dcc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB ED 00DD
        gbc.setState(0x85d7, 0x1a70, 0x1ac0, 0x3459, 0xe556, 0xe8e5, 0x0, 0x0);
        gbc.writeMem(0x85d7, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0x1a);
        EXPECT(gbc.b(),  0x34);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0x56);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0xe5);
        EXPECT(gbc.sp(), 0x1a70);
        EXPECT(gbc.pc(), 0x85d9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x85d7), 0xcb);
        EXPECT(gbc.readMem(0x85d8), 0xed);
        // CB ED 00DE
        gbc.setState(0x8812, 0x4a31, 0xab70, 0xef17, 0xc3fb, 0xce1b, 0x0, 0x1);
        gbc.writeMem(0x8812, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0xab);
        EXPECT(gbc.b(),  0xef);
        EXPECT(gbc.c(),  0x17);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0xfb);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0x4a31);
        EXPECT(gbc.pc(), 0x8814);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8812), 0xcb);
        EXPECT(gbc.readMem(0x8813), 0xed);
        // CB ED 00DF
        gbc.setState(0x1abd, 0x5085, 0x3f40, 0xa9ec, 0xcdc9, 0xb0bb, 0x0, 0x0);
        gbc.writeMem(0x1abd, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0xa9);
        EXPECT(gbc.c(),  0xec);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0xc9);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0xbb);
        EXPECT(gbc.sp(), 0x5085);
        EXPECT(gbc.pc(), 0x1abf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB ED 00E0
        gbc.setState(0x3157, 0x853e, 0xc0b0, 0x1d94, 0xa78e, 0x376e, 0x0, 0x0);
        gbc.writeMem(0x3157, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0xa7);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0x6e);
        EXPECT(gbc.sp(), 0x853e);
        EXPECT(gbc.pc(), 0x3159);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB ED 00E1
        gbc.setState(0x6d94, 0x3580, 0x68e0, 0x5cd3, 0xe3a1, 0xeb2c, 0x0, 0x0);
        gbc.writeMem(0x6d94, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0x68);
        EXPECT(gbc.b(),  0x5c);
        EXPECT(gbc.c(),  0xd3);
        EXPECT(gbc.d(),  0xe3);
        EXPECT(gbc.e(),  0xa1);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0x2c);
        EXPECT(gbc.sp(), 0x3580);
        EXPECT(gbc.pc(), 0x6d96);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB ED 00E3
        gbc.setState(0xd8bc, 0xc4f0, 0x7b90, 0xa36e, 0xb957, 0x21bd, 0x1, 0x0);
        gbc.writeMem(0xd8bc, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0xa3);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0xb9);
        EXPECT(gbc.e(),  0x57);
        EXPECT(gbc.h(),  0x21);
        EXPECT(gbc.l(),  0xbd);
        EXPECT(gbc.sp(), 0xc4f0);
        EXPECT(gbc.pc(), 0xd8be);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd8bc), 0xcb);
        EXPECT(gbc.readMem(0xd8bd), 0xed);
        // CB ED 00E4
        gbc.setState(0x94f0, 0x82bb, 0xd060, 0x894b, 0x1d40, 0x69ad, 0x0, 0x0);
        gbc.writeMem(0x94f0, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0xd0);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0x4b);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0x69);
        EXPECT(gbc.l(),  0xad);
        EXPECT(gbc.sp(), 0x82bb);
        EXPECT(gbc.pc(), 0x94f2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x94f0), 0xcb);
        EXPECT(gbc.readMem(0x94f1), 0xed);
        // CB ED 00E6
        gbc.setState(0x744b, 0xb590, 0x3470, 0xa96f, 0x7bbd, 0x9070, 0x0, 0x0);
        gbc.writeMem(0x744b, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0x34);
        EXPECT(gbc.b(),  0xa9);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0x7b);
        EXPECT(gbc.e(),  0xbd);
        EXPECT(gbc.h(),  0x90);
        EXPECT(gbc.l(),  0x70);
        EXPECT(gbc.sp(), 0xb590);
        EXPECT(gbc.pc(), 0x744d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB ED 00E7
        gbc.setState(0x2ebf, 0xb1f, 0x7380, 0xc209, 0x4149, 0x3bf1, 0x1, 0x1);
        gbc.writeMem(0x2ebf, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0x73);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0x41);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0x3b);
        EXPECT(gbc.l(),  0xf1);
        EXPECT(gbc.sp(), 0xb1f);
        EXPECT(gbc.pc(), 0x2ec1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB ED 00E8
        gbc.setState(0x162e, 0xe3a3, 0x4180, 0xfaac, 0x1017, 0x9eed, 0x0, 0x0);
        gbc.writeMem(0x162e, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0x10);
        EXPECT(gbc.e(),  0x17);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0xe3a3);
        EXPECT(gbc.pc(), 0x1630);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB ED 00E9
        gbc.setState(0xd01d, 0xa171, 0x37a0, 0xd8cb, 0x2234, 0xaa0e, 0x1, 0x1);
        gbc.writeMem(0xd01d, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0x34);
        EXPECT(gbc.h(),  0xaa);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0xa171);
        EXPECT(gbc.pc(), 0xd01f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd01d), 0xcb);
        EXPECT(gbc.readMem(0xd01e), 0xed);
        // CB ED 00EA
        gbc.setState(0xdee0, 0xa8ed, 0x6f50, 0x346, 0x7cc, 0xfafa, 0x1, 0x1);
        gbc.writeMem(0xdee0, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0xcc);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0xa8ed);
        EXPECT(gbc.pc(), 0xdee2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdee0), 0xcb);
        EXPECT(gbc.readMem(0xdee1), 0xed);
        // CB ED 00EB
        gbc.setState(0x425c, 0x311, 0x4fe0, 0x6dac, 0x94df, 0xef95, 0x0, 0x1);
        gbc.writeMem(0x425c, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0xdf);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0x311);
        EXPECT(gbc.pc(), 0x425e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB ED 00EC
        gbc.setState(0x7258, 0xd909, 0xe0c0, 0x21b3, 0x3fb, 0xa8a0, 0x0, 0x1);
        gbc.writeMem(0x7258, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0xe0);
        EXPECT(gbc.b(),  0x21);
        EXPECT(gbc.c(),  0xb3);
        EXPECT(gbc.d(),  0x3);
        EXPECT(gbc.e(),  0xfb);
        EXPECT(gbc.h(),  0xa8);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0xd909);
        EXPECT(gbc.pc(), 0x725a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB ED 00ED
        gbc.setState(0x6bd6, 0x1ee5, 0xb200, 0xe107, 0xd374, 0xc313, 0x1, 0x1);
        gbc.writeMem(0x6bd6, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0xb2);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0xc3);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0x1ee5);
        EXPECT(gbc.pc(), 0x6bd8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB ED 00EE
        gbc.setState(0xe63, 0x8b9, 0xd420, 0xfd2a, 0x96ca, 0x2354, 0x1, 0x1);
        gbc.writeMem(0xe63, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0xca);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0x8b9);
        EXPECT(gbc.pc(), 0xe65);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB ED 00EF
        gbc.setState(0x9cae, 0x5235, 0x25f0, 0xc69c, 0xf10f, 0xa17c, 0x1, 0x0);
        gbc.writeMem(0x9cae, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0x25);
        EXPECT(gbc.b(),  0xc6);
        EXPECT(gbc.c(),  0x9c);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0xa1);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0x5235);
        EXPECT(gbc.pc(), 0x9cb0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9cae), 0xcb);
        EXPECT(gbc.readMem(0x9caf), 0xed);
        // CB ED 00F0
        gbc.setState(0x7e87, 0x51ee, 0xea00, 0x1043, 0x8346, 0xdf3a, 0x0, 0x0);
        gbc.writeMem(0x7e87, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0x43);
        EXPECT(gbc.d(),  0x83);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0xdf);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0x51ee);
        EXPECT(gbc.pc(), 0x7e89);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB ED 00F1
        gbc.setState(0x6c22, 0x2159, 0x6a20, 0x7235, 0x6dd7, 0x9020, 0x1, 0x1);
        gbc.writeMem(0x6c22, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0x6d);
        EXPECT(gbc.e(),  0xd7);
        EXPECT(gbc.h(),  0x90);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0x2159);
        EXPECT(gbc.pc(), 0x6c24);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB ED 00F2
        gbc.setState(0xe21b, 0x85d2, 0x4360, 0x2862, 0xead9, 0x4385, 0x0, 0x0);
        gbc.writeMem(0xe21b, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0x43);
        EXPECT(gbc.b(),  0x28);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0x85d2);
        EXPECT(gbc.pc(), 0xe21d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe21b), 0xcb);
        EXPECT(gbc.readMem(0xe21c), 0xed);
        // CB ED 00F3
        gbc.setState(0xcf14, 0xcd60, 0xb4e0, 0xe831, 0x38f4, 0xf724, 0x0, 0x0);
        gbc.writeMem(0xcf14, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0xb4);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0x38);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0xf7);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0xcd60);
        EXPECT(gbc.pc(), 0xcf16);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcf14), 0xcb);
        EXPECT(gbc.readMem(0xcf15), 0xed);
        // CB ED 00F4
        gbc.setState(0xcf1e, 0x9469, 0xf6d0, 0xa22c, 0xf4a2, 0x85b7, 0x0, 0x0);
        gbc.writeMem(0xcf1e, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0xf6);
        EXPECT(gbc.b(),  0xa2);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0xf4);
        EXPECT(gbc.e(),  0xa2);
        EXPECT(gbc.h(),  0x85);
        EXPECT(gbc.l(),  0xb7);
        EXPECT(gbc.sp(), 0x9469);
        EXPECT(gbc.pc(), 0xcf20);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcf1e), 0xcb);
        EXPECT(gbc.readMem(0xcf1f), 0xed);
        // CB ED 00F5
        gbc.setState(0xd0bd, 0xb159, 0xb0d0, 0xba98, 0x359d, 0x3740, 0x1, 0x0);
        gbc.writeMem(0xd0bd, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0xba);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0x35);
        EXPECT(gbc.e(),  0x9d);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0xb159);
        EXPECT(gbc.pc(), 0xd0bf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd0bd), 0xcb);
        EXPECT(gbc.readMem(0xd0be), 0xed);
        // CB ED 00F6
        gbc.setState(0x405a, 0xf52a, 0xb720, 0x7fb3, 0xd5b2, 0x3ba8, 0x0, 0x1);
        gbc.writeMem(0x405a, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0xb3);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0x3b);
        EXPECT(gbc.l(),  0xa8);
        EXPECT(gbc.sp(), 0xf52a);
        EXPECT(gbc.pc(), 0x405c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB ED 00F8
        gbc.setState(0x5ef3, 0x2690, 0xe8c0, 0xa10e, 0xc37b, 0xc161, 0x1, 0x0);
        gbc.writeMem(0x5ef3, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0xc1);
        EXPECT(gbc.l(),  0x61);
        EXPECT(gbc.sp(), 0x2690);
        EXPECT(gbc.pc(), 0x5ef5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB ED 00F9
        gbc.setState(0xae7b, 0xcdd7, 0xbeb0, 0x70a4, 0x3d6b, 0xd48b, 0x1, 0x1);
        gbc.writeMem(0xae7b, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0xa4);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0x6b);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0xcdd7);
        EXPECT(gbc.pc(), 0xae7d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xae7b), 0xcb);
        EXPECT(gbc.readMem(0xae7c), 0xed);
        // CB ED 00FA
        gbc.setState(0x375f, 0xe5d8, 0x5020, 0x3a9a, 0x4170, 0xe857, 0x0, 0x1);
        gbc.writeMem(0x375f, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0x41);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0xe5d8);
        EXPECT(gbc.pc(), 0x3761);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB ED 00FB
        gbc.setState(0xe824, 0xee38, 0x9a00, 0x90b2, 0xf228, 0x14d5, 0x0, 0x0);
        gbc.writeMem(0xe824, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0x9a);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0xf2);
        EXPECT(gbc.e(),  0x28);
        EXPECT(gbc.h(),  0x14);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0xee38);
        EXPECT(gbc.pc(), 0xe826);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe824), 0xcb);
        EXPECT(gbc.readMem(0xe825), 0xed);
        // CB ED 00FC
        gbc.setState(0x8b1f, 0x45f2, 0xf370, 0x1743, 0xfa0c, 0x95e1, 0x1, 0x1);
        gbc.writeMem(0x8b1f, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0x17);
        EXPECT(gbc.c(),  0x43);
        EXPECT(gbc.d(),  0xfa);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0x45f2);
        EXPECT(gbc.pc(), 0x8b21);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8b1f), 0xcb);
        EXPECT(gbc.readMem(0x8b20), 0xed);
        // CB ED 00FD
        gbc.setState(0x3286, 0xf730, 0x23b0, 0x8a75, 0x1ef8, 0x778d, 0x0, 0x1);
        gbc.writeMem(0x3286, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0x1e);
        EXPECT(gbc.e(),  0xf8);
        EXPECT(gbc.h(),  0x77);
        EXPECT(gbc.l(),  0xad);
        EXPECT(gbc.sp(), 0xf730);
        EXPECT(gbc.pc(), 0x3288);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB ED 00FE
        gbc.setState(0x189d, 0x369d, 0xe8d0, 0xc1a5, 0xd5ca, 0x1dcd, 0x0, 0x0);
        gbc.writeMem(0x189d, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0xc1);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0xca);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0x369d);
        EXPECT(gbc.pc(), 0x189f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB ED 00FF
        gbc.setState(0xd0c3, 0x3722, 0xa090, 0xf8d5, 0xe83d, 0xfe3c, 0x0, 0x0);
        gbc.writeMem(0xd0c3, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0xe8);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0x3722);
        EXPECT(gbc.pc(), 0xd0c5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd0c3), 0xcb);
        EXPECT(gbc.readMem(0xd0c4), 0xed);
        // CB ED 0100
        gbc.setState(0x924b, 0xfdb6, 0x72d0, 0x65ea, 0xb015, 0xef7e, 0x1, 0x1);
        gbc.writeMem(0x924b, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0xea);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0x7e);
        EXPECT(gbc.sp(), 0xfdb6);
        EXPECT(gbc.pc(), 0x924d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x924b), 0xcb);
        EXPECT(gbc.readMem(0x924c), 0xed);
        // CB ED 0101
        gbc.setState(0xe84c, 0x696c, 0xabf0, 0xab09, 0xd099, 0x871f, 0x1, 0x1);
        gbc.writeMem(0xe84c, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0xab);
        EXPECT(gbc.b(),  0xab);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0x99);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0x696c);
        EXPECT(gbc.pc(), 0xe84e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe84c), 0xcb);
        EXPECT(gbc.readMem(0xe84d), 0xed);
        // CB ED 0102
        gbc.setState(0xea03, 0xb21, 0x570, 0x5043, 0x419a, 0xbe34, 0x0, 0x1);
        gbc.writeMem(0xea03, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0x5);
        EXPECT(gbc.b(),  0x50);
        EXPECT(gbc.c(),  0x43);
        EXPECT(gbc.d(),  0x41);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0xb21);
        EXPECT(gbc.pc(), 0xea05);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xea03), 0xcb);
        EXPECT(gbc.readMem(0xea04), 0xed);
        // CB ED 0103
        gbc.setState(0x5c5c, 0xe48d, 0xb370, 0xb176, 0xe63c, 0x5dd7, 0x1, 0x0);
        gbc.writeMem(0x5c5c, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0xb3);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0x3c);
        EXPECT(gbc.h(),  0x5d);
        EXPECT(gbc.l(),  0xf7);
        EXPECT(gbc.sp(), 0xe48d);
        EXPECT(gbc.pc(), 0x5c5e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB ED 0104
        gbc.setState(0x91b8, 0x393e, 0x2a10, 0xb03, 0x72ce, 0x8df7, 0x1, 0x1);
        gbc.writeMem(0x91b8, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0x3);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0xce);
        EXPECT(gbc.h(),  0x8d);
        EXPECT(gbc.l(),  0xf7);
        EXPECT(gbc.sp(), 0x393e);
        EXPECT(gbc.pc(), 0x91ba);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x91b8), 0xcb);
        EXPECT(gbc.readMem(0x91b9), 0xed);
        // CB ED 0105
        gbc.setState(0x212b, 0xee21, 0x6f00, 0xc15f, 0x49a7, 0xb31b, 0x0, 0x0);
        gbc.writeMem(0x212b, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0xc1);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0xa7);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0xee21);
        EXPECT(gbc.pc(), 0x212d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB ED 0106
        gbc.setState(0x4635, 0x4b0f, 0xc390, 0xfa16, 0xd249, 0x559c, 0x1, 0x1);
        gbc.writeMem(0x4635, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0xc3);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0x4b0f);
        EXPECT(gbc.pc(), 0x4637);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB ED 0107
        gbc.setState(0xbf1c, 0xcbcc, 0x6260, 0x9b4e, 0x6582, 0x5234, 0x0, 0x0);
        gbc.writeMem(0xbf1c, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0x9b);
        EXPECT(gbc.c(),  0x4e);
        EXPECT(gbc.d(),  0x65);
        EXPECT(gbc.e(),  0x82);
        EXPECT(gbc.h(),  0x52);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0xcbcc);
        EXPECT(gbc.pc(), 0xbf1e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbf1c), 0xcb);
        EXPECT(gbc.readMem(0xbf1d), 0xed);
        // CB ED 0108
        gbc.setState(0x1974, 0xd67b, 0x2120, 0xe4ad, 0xe4ba, 0x2a20, 0x1, 0x0);
        gbc.writeMem(0x1974, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0x2a);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0xd67b);
        EXPECT(gbc.pc(), 0x1976);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB ED 0109
        gbc.setState(0x856e, 0x689d, 0x5cc0, 0x94b4, 0xf53d, 0xd9b9, 0x1, 0x0);
        gbc.writeMem(0x856e, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0x94);
        EXPECT(gbc.c(),  0xb4);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0x689d);
        EXPECT(gbc.pc(), 0x8570);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x856e), 0xcb);
        EXPECT(gbc.readMem(0x856f), 0xed);
        // CB ED 010A
        gbc.setState(0xaf31, 0x786c, 0x41a0, 0xc275, 0x68d3, 0xec82, 0x0, 0x0);
        gbc.writeMem(0xaf31, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0x68);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0xa2);
        EXPECT(gbc.sp(), 0x786c);
        EXPECT(gbc.pc(), 0xaf33);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaf31), 0xcb);
        EXPECT(gbc.readMem(0xaf32), 0xed);
        // CB ED 010B
        gbc.setState(0x24f3, 0xefe5, 0x8070, 0xf2e9, 0xf8, 0x6098, 0x1, 0x1);
        gbc.writeMem(0x24f3, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0xf2);
        EXPECT(gbc.c(),  0xe9);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0xf8);
        EXPECT(gbc.h(),  0x60);
        EXPECT(gbc.l(),  0xb8);
        EXPECT(gbc.sp(), 0xefe5);
        EXPECT(gbc.pc(), 0x24f5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB ED 010C
        gbc.setState(0xb4bf, 0x1922, 0xfb70, 0x7539, 0xf120, 0x6511, 0x1, 0x0);
        gbc.writeMem(0xb4bf, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0xfb);
        EXPECT(gbc.b(),  0x75);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0x20);
        EXPECT(gbc.h(),  0x65);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0x1922);
        EXPECT(gbc.pc(), 0xb4c1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb4bf), 0xcb);
        EXPECT(gbc.readMem(0xb4c0), 0xed);
        // CB ED 010D
        gbc.setState(0xe2cf, 0xf0f8, 0x10e0, 0x230d, 0x6af6, 0xba5b, 0x1, 0x0);
        gbc.writeMem(0xe2cf, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0x10);
        EXPECT(gbc.b(),  0x23);
        EXPECT(gbc.c(),  0xd);
        EXPECT(gbc.d(),  0x6a);
        EXPECT(gbc.e(),  0xf6);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0x7b);
        EXPECT(gbc.sp(), 0xf0f8);
        EXPECT(gbc.pc(), 0xe2d1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe2cf), 0xcb);
        EXPECT(gbc.readMem(0xe2d0), 0xed);
        // CB ED 010E
        gbc.setState(0xa50f, 0xbba, 0xbd90, 0xa9c4, 0xc278, 0xd5a7, 0x1, 0x1);
        gbc.writeMem(0xa50f, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0xbd);
        EXPECT(gbc.b(),  0xa9);
        EXPECT(gbc.c(),  0xc4);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0xbba);
        EXPECT(gbc.pc(), 0xa511);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa50f), 0xcb);
        EXPECT(gbc.readMem(0xa510), 0xed);
        // CB ED 010F
        gbc.setState(0xaaa4, 0x39d7, 0x4630, 0x8583, 0x2c43, 0x38f5, 0x0, 0x1);
        gbc.writeMem(0xaaa4, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0x46);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0x2c);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0x38);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0x39d7);
        EXPECT(gbc.pc(), 0xaaa6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaaa4), 0xcb);
        EXPECT(gbc.readMem(0xaaa5), 0xed);
        // CB ED 0110
        gbc.setState(0x12de, 0xec92, 0x1b90, 0xb36b, 0xe5c7, 0x5c4d, 0x0, 0x1);
        gbc.writeMem(0x12de, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0xb3);
        EXPECT(gbc.c(),  0x6b);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0x5c);
        EXPECT(gbc.l(),  0x6d);
        EXPECT(gbc.sp(), 0xec92);
        EXPECT(gbc.pc(), 0x12e0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB ED 0111
        gbc.setState(0x94f5, 0xcc29, 0x24b0, 0x1ae5, 0xcbb0, 0x821a, 0x0, 0x1);
        gbc.writeMem(0x94f5, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0x24);
        EXPECT(gbc.b(),  0x1a);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0xcc29);
        EXPECT(gbc.pc(), 0x94f7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x94f5), 0xcb);
        EXPECT(gbc.readMem(0x94f6), 0xed);
        // CB ED 0112
        gbc.setState(0xec0, 0xe0b0, 0x8c80, 0xa55a, 0xfcb5, 0xe63b, 0x1, 0x0);
        gbc.writeMem(0xec0, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0xa5);
        EXPECT(gbc.c(),  0x5a);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0xb5);
        EXPECT(gbc.h(),  0xe6);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0xe0b0);
        EXPECT(gbc.pc(), 0xec2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB ED 0113
        gbc.setState(0xbdb9, 0xca62, 0x4100, 0xcedc, 0x8817, 0xd276, 0x0, 0x1);
        gbc.writeMem(0xbdb9, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0xce);
        EXPECT(gbc.c(),  0xdc);
        EXPECT(gbc.d(),  0x88);
        EXPECT(gbc.e(),  0x17);
        EXPECT(gbc.h(),  0xd2);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0xca62);
        EXPECT(gbc.pc(), 0xbdbb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbdb9), 0xcb);
        EXPECT(gbc.readMem(0xbdba), 0xed);
        // CB ED 0114
        gbc.setState(0x6165, 0xf6a1, 0x5570, 0xf538, 0x7c09, 0x7b8b, 0x1, 0x0);
        gbc.writeMem(0x6165, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0x38);
        EXPECT(gbc.d(),  0x7c);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0x7b);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0xf6a1);
        EXPECT(gbc.pc(), 0x6167);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB ED 0115
        gbc.setState(0xa805, 0xaa27, 0xc040, 0x1fb7, 0x1f7f, 0xa33c, 0x1, 0x0);
        gbc.writeMem(0xa805, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0xb7);
        EXPECT(gbc.d(),  0x1f);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0xaa27);
        EXPECT(gbc.pc(), 0xa807);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa805), 0xcb);
        EXPECT(gbc.readMem(0xa806), 0xed);
        // CB ED 0116
        gbc.setState(0xb35f, 0x3cb9, 0x49b0, 0x41ce, 0x764c, 0xc5a6, 0x1, 0x1);
        gbc.writeMem(0xb35f, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0xa6);
        EXPECT(gbc.sp(), 0x3cb9);
        EXPECT(gbc.pc(), 0xb361);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb35f), 0xcb);
        EXPECT(gbc.readMem(0xb360), 0xed);
        // CB ED 0117
        gbc.setState(0x16fd, 0x3c34, 0x9230, 0x5783, 0xe69, 0xff20, 0x1, 0x0);
        gbc.writeMem(0x16fd, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0xe);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0xff);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0x3c34);
        EXPECT(gbc.pc(), 0x16ff);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB ED 0118
        gbc.setState(0xec93, 0x1042, 0x1870, 0x60f9, 0xfd45, 0x18c, 0x1, 0x1);
        gbc.writeMem(0xec93, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0xf9);
        EXPECT(gbc.d(),  0xfd);
        EXPECT(gbc.e(),  0x45);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0x1042);
        EXPECT(gbc.pc(), 0xec95);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xec93), 0xcb);
        EXPECT(gbc.readMem(0xec94), 0xed);
        // CB ED 011A
        gbc.setState(0x7db6, 0x1c49, 0x9d40, 0x3d81, 0x9cea, 0xafb8, 0x1, 0x1);
        gbc.writeMem(0x7db6, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0x9d);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0x81);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0xaf);
        EXPECT(gbc.l(),  0xb8);
        EXPECT(gbc.sp(), 0x1c49);
        EXPECT(gbc.pc(), 0x7db8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB ED 011B
        gbc.setState(0x24f2, 0x8316, 0xbc00, 0x77b8, 0x9bb8, 0x6327, 0x1, 0x1);
        gbc.writeMem(0x24f2, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0x77);
        EXPECT(gbc.c(),  0xb8);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0xb8);
        EXPECT(gbc.h(),  0x63);
        EXPECT(gbc.l(),  0x27);
        EXPECT(gbc.sp(), 0x8316);
        EXPECT(gbc.pc(), 0x24f4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB ED 011C
        gbc.setState(0x7f6d, 0xcdde, 0xcad0, 0xd65d, 0x3547, 0x338d, 0x1, 0x0);
        gbc.writeMem(0x7f6d, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0xca);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0x35);
        EXPECT(gbc.e(),  0x47);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0xad);
        EXPECT(gbc.sp(), 0xcdde);
        EXPECT(gbc.pc(), 0x7f6f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB ED 011D
        gbc.setState(0xc3ea, 0xa164, 0x4dc0, 0xba87, 0x257, 0xe894, 0x1, 0x1);
        gbc.writeMem(0xc3ea, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0x4d);
        EXPECT(gbc.b(),  0xba);
        EXPECT(gbc.c(),  0x87);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0x57);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0xa164);
        EXPECT(gbc.pc(), 0xc3ec);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc3ea), 0xcb);
        EXPECT(gbc.readMem(0xc3eb), 0xed);
        // CB ED 011E
        gbc.setState(0xe6d2, 0x4c63, 0x8f0, 0x207f, 0xb915, 0xefd, 0x1, 0x0);
        gbc.writeMem(0xe6d2, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0xb9);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0x4c63);
        EXPECT(gbc.pc(), 0xe6d4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe6d2), 0xcb);
        EXPECT(gbc.readMem(0xe6d3), 0xed);
        // CB ED 011F
        gbc.setState(0xa0a6, 0xac15, 0xf940, 0xdf1d, 0x3d91, 0x20ce, 0x0, 0x0);
        gbc.writeMem(0xa0a6, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0xf9);
        EXPECT(gbc.b(),  0xdf);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0x91);
        EXPECT(gbc.h(),  0x20);
        EXPECT(gbc.l(),  0xee);
        EXPECT(gbc.sp(), 0xac15);
        EXPECT(gbc.pc(), 0xa0a8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa0a6), 0xcb);
        EXPECT(gbc.readMem(0xa0a7), 0xed);
        // CB ED 0120
        gbc.setState(0xed0a, 0x5497, 0x7e20, 0x678b, 0x37c6, 0xbc51, 0x1, 0x1);
        gbc.writeMem(0xed0a, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0x67);
        EXPECT(gbc.c(),  0x8b);
        EXPECT(gbc.d(),  0x37);
        EXPECT(gbc.e(),  0xc6);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0x5497);
        EXPECT(gbc.pc(), 0xed0c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xed0a), 0xcb);
        EXPECT(gbc.readMem(0xed0b), 0xed);
        // CB ED 0121
        gbc.setState(0x99d, 0xcc03, 0x3bf0, 0xc1c4, 0xef1, 0x1f62, 0x0, 0x1);
        gbc.writeMem(0x99d, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0xc1);
        EXPECT(gbc.c(),  0xc4);
        EXPECT(gbc.d(),  0xe);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0x1f);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0xcc03);
        EXPECT(gbc.pc(), 0x99f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB ED 0122
        gbc.setState(0x27c8, 0xd47f, 0x7ea0, 0x6b63, 0x1bcb, 0x7e4b, 0x0, 0x1);
        gbc.writeMem(0x27c8, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0x6b);
        EXPECT(gbc.c(),  0x63);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0xcb);
        EXPECT(gbc.h(),  0x7e);
        EXPECT(gbc.l(),  0x6b);
        EXPECT(gbc.sp(), 0xd47f);
        EXPECT(gbc.pc(), 0x27ca);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB ED 0124
        gbc.setState(0x3fb5, 0x64c3, 0x7150, 0x8292, 0xb4bc, 0xef5c, 0x1, 0x1);
        gbc.writeMem(0x3fb5, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0x71);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0x64c3);
        EXPECT(gbc.pc(), 0x3fb7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB ED 0125
        gbc.setState(0x338d, 0xe84b, 0xca50, 0x3e46, 0xbf76, 0xdfcf, 0x1, 0x0);
        gbc.writeMem(0x338d, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0xca);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0xbf);
        EXPECT(gbc.e(),  0x76);
        EXPECT(gbc.h(),  0xdf);
        EXPECT(gbc.l(),  0xef);
        EXPECT(gbc.sp(), 0xe84b);
        EXPECT(gbc.pc(), 0x338f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB ED 0126
        gbc.setState(0xa484, 0xde27, 0x5430, 0x2ca8, 0x531d, 0xe6be, 0x1, 0x1);
        gbc.writeMem(0xa484, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0x54);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0xa8);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0xe6);
        EXPECT(gbc.l(),  0xbe);
        EXPECT(gbc.sp(), 0xde27);
        EXPECT(gbc.pc(), 0xa486);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa484), 0xcb);
        EXPECT(gbc.readMem(0xa485), 0xed);
        // CB ED 0127
        gbc.setState(0x7e07, 0x2981, 0xd510, 0x2a88, 0x3cf5, 0x8d0e, 0x0, 0x1);
        gbc.writeMem(0x7e07, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0xd5);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0x88);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0x8d);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0x2981);
        EXPECT(gbc.pc(), 0x7e09);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB ED 0128
        gbc.setState(0x7cd8, 0x6541, 0xd030, 0xa1b2, 0x1017, 0x7446, 0x0, 0x1);
        gbc.writeMem(0x7cd8, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0xd0);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0x10);
        EXPECT(gbc.e(),  0x17);
        EXPECT(gbc.h(),  0x74);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0x6541);
        EXPECT(gbc.pc(), 0x7cda);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB ED 0129
        gbc.setState(0x1267, 0x915, 0x8020, 0xc28a, 0x42c7, 0xdebf, 0x1, 0x1);
        gbc.writeMem(0x1267, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0xbf);
        EXPECT(gbc.sp(), 0x915);
        EXPECT(gbc.pc(), 0x1269);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB ED 012A
        gbc.setState(0xc085, 0xcb1b, 0x73e0, 0xebfa, 0xbeee, 0xef4e, 0x1, 0x0);
        gbc.writeMem(0xc085, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0x73);
        EXPECT(gbc.b(),  0xeb);
        EXPECT(gbc.c(),  0xfa);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0x6e);
        EXPECT(gbc.sp(), 0xcb1b);
        EXPECT(gbc.pc(), 0xc087);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc085), 0xcb);
        EXPECT(gbc.readMem(0xc086), 0xed);
        // CB ED 012B
        gbc.setState(0x2e53, 0x2b31, 0x70, 0xca2a, 0x20c9, 0x870e, 0x0, 0x0);
        gbc.writeMem(0x2e53, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xca);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0xc9);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0x2b31);
        EXPECT(gbc.pc(), 0x2e55);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB ED 012C
        gbc.setState(0x2145, 0xb1e0, 0x48d0, 0xb936, 0xe2f8, 0x1d71, 0x1, 0x0);
        gbc.writeMem(0x2145, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0x48);
        EXPECT(gbc.b(),  0xb9);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0xe2);
        EXPECT(gbc.e(),  0xf8);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0xb1e0);
        EXPECT(gbc.pc(), 0x2147);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB ED 012D
        gbc.setState(0x589f, 0x55bc, 0x1d30, 0x7f0e, 0xc56a, 0x8e46, 0x0, 0x1);
        gbc.writeMem(0x589f, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0xc5);
        EXPECT(gbc.e(),  0x6a);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0x55bc);
        EXPECT(gbc.pc(), 0x58a1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB ED 012F
        gbc.setState(0xecb3, 0x978d, 0x5b80, 0xb7, 0x4b28, 0x4e0, 0x1, 0x0);
        gbc.writeMem(0xecb3, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0xb7);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0x28);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0x978d);
        EXPECT(gbc.pc(), 0xecb5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xecb3), 0xcb);
        EXPECT(gbc.readMem(0xecb4), 0xed);
        // CB ED 0130
        gbc.setState(0x49d, 0x709b, 0x5fa0, 0xb5a, 0x5923, 0x16f3, 0x1, 0x1);
        gbc.writeMem(0x49d, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0x5a);
        EXPECT(gbc.d(),  0x59);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0x16);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0x709b);
        EXPECT(gbc.pc(), 0x49f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB ED 0131
        gbc.setState(0x82b8, 0x2fbb, 0x1770, 0x448a, 0xf9e6, 0x8206, 0x0, 0x0);
        gbc.writeMem(0x82b8, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0x17);
        EXPECT(gbc.b(),  0x44);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0xf9);
        EXPECT(gbc.e(),  0xe6);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0x2fbb);
        EXPECT(gbc.pc(), 0x82ba);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x82b8), 0xcb);
        EXPECT(gbc.readMem(0x82b9), 0xed);
        // CB ED 0132
        gbc.setState(0xc646, 0xdee6, 0xe010, 0xda9, 0xe13f, 0x567b, 0x1, 0x1);
        gbc.writeMem(0xc646, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0xe0);
        EXPECT(gbc.b(),  0xd);
        EXPECT(gbc.c(),  0xa9);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0x7b);
        EXPECT(gbc.sp(), 0xdee6);
        EXPECT(gbc.pc(), 0xc648);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc646), 0xcb);
        EXPECT(gbc.readMem(0xc647), 0xed);
        // CB ED 0133
        gbc.setState(0xb177, 0x75a2, 0x1540, 0xd16d, 0xd55b, 0xf1e4, 0x1, 0x1);
        gbc.writeMem(0xb177, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0x15);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0x6d);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0x5b);
        EXPECT(gbc.h(),  0xf1);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0x75a2);
        EXPECT(gbc.pc(), 0xb179);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb177), 0xcb);
        EXPECT(gbc.readMem(0xb178), 0xed);
        // CB ED 0134
        gbc.setState(0x4327, 0xf92d, 0xbe00, 0x134f, 0x17f1, 0xf0e7, 0x1, 0x1);
        gbc.writeMem(0x4327, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0x17);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0xf92d);
        EXPECT(gbc.pc(), 0x4329);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB ED 0135
        gbc.setState(0x7a3b, 0x65de, 0xece0, 0x986, 0xcaa0, 0x3309, 0x1, 0x1);
        gbc.writeMem(0x7a3b, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0xca);
        EXPECT(gbc.e(),  0xa0);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0x65de);
        EXPECT(gbc.pc(), 0x7a3d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB ED 0136
        gbc.setState(0xc6d, 0xeed, 0xff10, 0xd5ed, 0x864d, 0x9e1a, 0x1, 0x0);
        gbc.writeMem(0xc6d, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0xd5);
        EXPECT(gbc.c(),  0xed);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0x4d);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0xeed);
        EXPECT(gbc.pc(), 0xc6f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB ED 0137
        gbc.setState(0x789a, 0x3ad2, 0x6a50, 0x3308, 0x7d63, 0x8d7f, 0x1, 0x1);
        gbc.writeMem(0x789a, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0x7d);
        EXPECT(gbc.e(),  0x63);
        EXPECT(gbc.h(),  0x8d);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0x3ad2);
        EXPECT(gbc.pc(), 0x789c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB ED 0138
        gbc.setState(0x7f3c, 0xcaac, 0x7a60, 0x8b68, 0x5f18, 0xc50e, 0x0, 0x0);
        gbc.writeMem(0x7f3c, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0x7a);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0x68);
        EXPECT(gbc.d(),  0x5f);
        EXPECT(gbc.e(),  0x18);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0xcaac);
        EXPECT(gbc.pc(), 0x7f3e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB ED 0139
        gbc.setState(0xcfd7, 0xf820, 0xac40, 0x4b41, 0x67b4, 0x41e2, 0x1, 0x0);
        gbc.writeMem(0xcfd7, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0xac);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0xb4);
        EXPECT(gbc.h(),  0x41);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0xf820);
        EXPECT(gbc.pc(), 0xcfd9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcfd7), 0xcb);
        EXPECT(gbc.readMem(0xcfd8), 0xed);
        // CB ED 013B
        gbc.setState(0xeb89, 0xe90a, 0x89f0, 0xc99e, 0xe1d5, 0x9d1f, 0x0, 0x0);
        gbc.writeMem(0xeb89, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0xc9);
        EXPECT(gbc.c(),  0x9e);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0xd5);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0xe90a);
        EXPECT(gbc.pc(), 0xeb8b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xeb89), 0xcb);
        EXPECT(gbc.readMem(0xeb8a), 0xed);
        // CB ED 013C
        gbc.setState(0x5b4c, 0xd350, 0xb870, 0x46c3, 0x1718, 0x6512, 0x1, 0x1);
        gbc.writeMem(0x5b4c, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0xb8);
        EXPECT(gbc.b(),  0x46);
        EXPECT(gbc.c(),  0xc3);
        EXPECT(gbc.d(),  0x17);
        EXPECT(gbc.e(),  0x18);
        EXPECT(gbc.h(),  0x65);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0xd350);
        EXPECT(gbc.pc(), 0x5b4e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB ED 013D
        gbc.setState(0x8442, 0x4f87, 0x67a0, 0x5402, 0xf0c2, 0xd886, 0x1, 0x1);
        gbc.writeMem(0x8442, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0x67);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0xc2);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0xa6);
        EXPECT(gbc.sp(), 0x4f87);
        EXPECT(gbc.pc(), 0x8444);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8442), 0xcb);
        EXPECT(gbc.readMem(0x8443), 0xed);
        // CB ED 013F
        gbc.setState(0x8045, 0xf053, 0x8180, 0x5b87, 0x99c8, 0x6227, 0x1, 0x0);
        gbc.writeMem(0x8045, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0x81);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0x87);
        EXPECT(gbc.d(),  0x99);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0x62);
        EXPECT(gbc.l(),  0x27);
        EXPECT(gbc.sp(), 0xf053);
        EXPECT(gbc.pc(), 0x8047);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8045), 0xcb);
        EXPECT(gbc.readMem(0x8046), 0xed);
        // CB ED 0140
        gbc.setState(0x45f0, 0xe07e, 0x5a50, 0xd45, 0xcc42, 0xa7d4, 0x0, 0x0);
        gbc.writeMem(0x45f0, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0xd);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0x42);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0xf4);
        EXPECT(gbc.sp(), 0xe07e);
        EXPECT(gbc.pc(), 0x45f2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB ED 0141
        gbc.setState(0xd67, 0x6a67, 0x7680, 0x16cf, 0xa5aa, 0x296, 0x1, 0x1);
        gbc.writeMem(0xd67, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0xcf);
        EXPECT(gbc.d(),  0xa5);
        EXPECT(gbc.e(),  0xaa);
        EXPECT(gbc.h(),  0x2);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0x6a67);
        EXPECT(gbc.pc(), 0xd69);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB ED 0142
        gbc.setState(0x7ee0, 0x384c, 0x1e30, 0xb800, 0xef85, 0x2498, 0x0, 0x1);
        gbc.writeMem(0x7ee0, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0x85);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0xb8);
        EXPECT(gbc.sp(), 0x384c);
        EXPECT(gbc.pc(), 0x7ee2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB ED 0143
        gbc.setState(0xa1a3, 0x8734, 0x86c0, 0x9656, 0x522e, 0x77e1, 0x0, 0x1);
        gbc.writeMem(0xa1a3, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0x96);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0x77);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0x8734);
        EXPECT(gbc.pc(), 0xa1a5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa1a3), 0xcb);
        EXPECT(gbc.readMem(0xa1a4), 0xed);
        // CB ED 0144
        gbc.setState(0x8620, 0xf3f0, 0xe550, 0xf555, 0xcb88, 0xf750, 0x0, 0x0);
        gbc.writeMem(0x8620, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0xe5);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0x55);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0x88);
        EXPECT(gbc.h(),  0xf7);
        EXPECT(gbc.l(),  0x70);
        EXPECT(gbc.sp(), 0xf3f0);
        EXPECT(gbc.pc(), 0x8622);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8620), 0xcb);
        EXPECT(gbc.readMem(0x8621), 0xed);
        // CB ED 0145
        gbc.setState(0x7aaf, 0x8787, 0x1d30, 0xc781, 0x97b9, 0x35d7, 0x0, 0x0);
        gbc.writeMem(0x7aaf, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0x81);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0xf7);
        EXPECT(gbc.sp(), 0x8787);
        EXPECT(gbc.pc(), 0x7ab1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB ED 0146
        gbc.setState(0xd3d6, 0xf459, 0x5cf0, 0x75f5, 0xd826, 0xf11a, 0x1, 0x0);
        gbc.writeMem(0xd3d6, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0x75);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0xd8);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0xf1);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0xf459);
        EXPECT(gbc.pc(), 0xd3d8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd3d6), 0xcb);
        EXPECT(gbc.readMem(0xd3d7), 0xed);
        // CB ED 0147
        gbc.setState(0x8c8e, 0xc2c9, 0x9f20, 0x6a9a, 0x4be, 0x1ae0, 0x1, 0x0);
        gbc.writeMem(0x8c8e, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0x9f);
        EXPECT(gbc.b(),  0x6a);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0x1a);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0xc2c9);
        EXPECT(gbc.pc(), 0x8c90);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8c8e), 0xcb);
        EXPECT(gbc.readMem(0x8c8f), 0xed);
        // CB ED 0148
        gbc.setState(0xe318, 0x7cf2, 0x7df0, 0x78b7, 0x4f55, 0xb212, 0x0, 0x1);
        gbc.writeMem(0xe318, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0x7d);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0xb7);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0x55);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0x7cf2);
        EXPECT(gbc.pc(), 0xe31a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe318), 0xcb);
        EXPECT(gbc.readMem(0xe319), 0xed);
        // CB ED 0149
        gbc.setState(0x8997, 0x7ebb, 0x6060, 0x219c, 0x9f1a, 0x9e34, 0x0, 0x0);
        gbc.writeMem(0x8997, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0x21);
        EXPECT(gbc.c(),  0x9c);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0x7ebb);
        EXPECT(gbc.pc(), 0x8999);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8997), 0xcb);
        EXPECT(gbc.readMem(0x8998), 0xed);
        // CB ED 014A
        gbc.setState(0x213d, 0x5450, 0xb250, 0xc836, 0x51ce, 0xf8e6, 0x0, 0x0);
        gbc.writeMem(0x213d, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0xb2);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0x51);
        EXPECT(gbc.e(),  0xce);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0x5450);
        EXPECT(gbc.pc(), 0x213f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB ED 014B
        gbc.setState(0x25ed, 0xcfb5, 0xffe0, 0x27a5, 0xc2e3, 0xc96, 0x0, 0x0);
        gbc.writeMem(0x25ed, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0xe3);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0xcfb5);
        EXPECT(gbc.pc(), 0x25ef);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB ED 014C
        gbc.setState(0x92d4, 0x262d, 0x3670, 0x88d0, 0x9565, 0x8e75, 0x0, 0x1);
        gbc.writeMem(0x92d4, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0x36);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0x95);
        EXPECT(gbc.e(),  0x65);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0x262d);
        EXPECT(gbc.pc(), 0x92d6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x92d4), 0xcb);
        EXPECT(gbc.readMem(0x92d5), 0xed);
        // CB ED 014D
        gbc.setState(0x4bb8, 0x520c, 0x6920, 0xe18b, 0x7641, 0xadc1, 0x0, 0x0);
        gbc.writeMem(0x4bb8, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0x8b);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0x41);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0x520c);
        EXPECT(gbc.pc(), 0x4bba);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB ED 014E
        gbc.setState(0xe6fe, 0xc92, 0xc460, 0xc2b7, 0xe28e, 0x6037, 0x1, 0x0);
        gbc.writeMem(0xe6fe, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0xc4);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0xb7);
        EXPECT(gbc.d(),  0xe2);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0x60);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0xc92);
        EXPECT(gbc.pc(), 0xe700);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe6fe), 0xcb);
        EXPECT(gbc.readMem(0xe6ff), 0xed);
        // CB ED 014F
        gbc.setState(0x89db, 0x220d, 0xff10, 0x1ad3, 0x8707, 0x476e, 0x1, 0x1);
        gbc.writeMem(0x89db, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0x1a);
        EXPECT(gbc.c(),  0xd3);
        EXPECT(gbc.d(),  0x87);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0x6e);
        EXPECT(gbc.sp(), 0x220d);
        EXPECT(gbc.pc(), 0x89dd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x89db), 0xcb);
        EXPECT(gbc.readMem(0x89dc), 0xed);
        // CB ED 0150
        gbc.setState(0x77a0, 0x2fb9, 0x47f0, 0x19, 0xe2a2, 0xb249, 0x0, 0x0);
        gbc.writeMem(0x77a0, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0xe2);
        EXPECT(gbc.e(),  0xa2);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0x2fb9);
        EXPECT(gbc.pc(), 0x77a2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB ED 0151
        gbc.setState(0xae8, 0xc49c, 0xc770, 0xadba, 0x672f, 0x398c, 0x1, 0x0);
        gbc.writeMem(0xae8, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0xc7);
        EXPECT(gbc.b(),  0xad);
        EXPECT(gbc.c(),  0xba);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0x2f);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0xc49c);
        EXPECT(gbc.pc(), 0xaea);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB ED 0152
        gbc.setState(0xbb6e, 0x16b2, 0x90a0, 0x7445, 0xa3b1, 0x5d2b, 0x1, 0x1);
        gbc.writeMem(0xbb6e, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0x90);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0xa3);
        EXPECT(gbc.e(),  0xb1);
        EXPECT(gbc.h(),  0x5d);
        EXPECT(gbc.l(),  0x2b);
        EXPECT(gbc.sp(), 0x16b2);
        EXPECT(gbc.pc(), 0xbb70);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbb6e), 0xcb);
        EXPECT(gbc.readMem(0xbb6f), 0xed);
        // CB ED 0153
        gbc.setState(0xae5d, 0x50f1, 0x1af0, 0x2944, 0xf50, 0xcc0a, 0x0, 0x0);
        gbc.writeMem(0xae5d, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0x1a);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0x2a);
        EXPECT(gbc.sp(), 0x50f1);
        EXPECT(gbc.pc(), 0xae5f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xae5d), 0xcb);
        EXPECT(gbc.readMem(0xae5e), 0xed);
        // CB ED 0154
        gbc.setState(0x4f62, 0x7041, 0x3b50, 0x8d4b, 0x1558, 0x536e, 0x1, 0x1);
        gbc.writeMem(0x4f62, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0x8d);
        EXPECT(gbc.c(),  0x4b);
        EXPECT(gbc.d(),  0x15);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0x53);
        EXPECT(gbc.l(),  0x6e);
        EXPECT(gbc.sp(), 0x7041);
        EXPECT(gbc.pc(), 0x4f64);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB ED 0156
        gbc.setState(0x50aa, 0xaacc, 0x2c0, 0xc239, 0xa6f3, 0xcad0, 0x0, 0x1);
        gbc.writeMem(0x50aa, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0xca);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0xaacc);
        EXPECT(gbc.pc(), 0x50ac);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB ED 0157
        gbc.setState(0x678a, 0xa129, 0xe870, 0x1ca, 0xe137, 0x3060, 0x0, 0x0);
        gbc.writeMem(0x678a, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0x30);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0xa129);
        EXPECT(gbc.pc(), 0x678c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB ED 0158
        gbc.setState(0x4d20, 0xfc10, 0x92f0, 0xb7a8, 0x5523, 0xb020, 0x1, 0x1);
        gbc.writeMem(0x4d20, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0xa8);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0xfc10);
        EXPECT(gbc.pc(), 0x4d22);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB ED 0159
        gbc.setState(0x5b90, 0xe4ff, 0xf170, 0x3d16, 0xbe1b, 0xedd4, 0x1, 0x0);
        gbc.writeMem(0x5b90, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0xf1);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0x1b);
        EXPECT(gbc.h(),  0xed);
        EXPECT(gbc.l(),  0xf4);
        EXPECT(gbc.sp(), 0xe4ff);
        EXPECT(gbc.pc(), 0x5b92);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB ED 015A
        gbc.setState(0xbdb6, 0xe64e, 0xd0, 0x5bcc, 0x8de6, 0x2498, 0x1, 0x0);
        gbc.writeMem(0xbdb6, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0xcc);
        EXPECT(gbc.d(),  0x8d);
        EXPECT(gbc.e(),  0xe6);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0xb8);
        EXPECT(gbc.sp(), 0xe64e);
        EXPECT(gbc.pc(), 0xbdb8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbdb6), 0xcb);
        EXPECT(gbc.readMem(0xbdb7), 0xed);
        // CB ED 015B
        gbc.setState(0xdc1, 0x77a3, 0x7f80, 0xf574, 0x820, 0x4bea, 0x1, 0x0);
        gbc.writeMem(0xdc1, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0x20);
        EXPECT(gbc.h(),  0x4b);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0x77a3);
        EXPECT(gbc.pc(), 0xdc3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB ED 015C
        gbc.setState(0x3d17, 0x9ac, 0xaf0, 0x33c5, 0x19b2, 0x8ee1, 0x0, 0x0);
        gbc.writeMem(0x3d17, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0x19);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0x9ac);
        EXPECT(gbc.pc(), 0x3d19);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB ED 015D
        gbc.setState(0x6048, 0xab5d, 0xf750, 0xb83d, 0x9bb3, 0x9c06, 0x1, 0x1);
        gbc.writeMem(0x6048, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0x3d);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0xb3);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0xab5d);
        EXPECT(gbc.pc(), 0x604a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB ED 015E
        gbc.setState(0xbb94, 0xed2a, 0xe940, 0x6f4b, 0xef11, 0xea0d, 0x0, 0x1);
        gbc.writeMem(0xbb94, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0xe9);
        EXPECT(gbc.b(),  0x6f);
        EXPECT(gbc.c(),  0x4b);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0xea);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0xed2a);
        EXPECT(gbc.pc(), 0xbb96);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbb94), 0xcb);
        EXPECT(gbc.readMem(0xbb95), 0xed);
        // CB ED 015F
        gbc.setState(0xb6d6, 0xdb64, 0x7c0, 0xa39, 0x788c, 0x1dec, 0x0, 0x0);
        gbc.writeMem(0xb6d6, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0x78);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0xec);
        EXPECT(gbc.sp(), 0xdb64);
        EXPECT(gbc.pc(), 0xb6d8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb6d6), 0xcb);
        EXPECT(gbc.readMem(0xb6d7), 0xed);
        // CB ED 0160
        gbc.setState(0x574, 0x622a, 0x5c30, 0xf800, 0x38f3, 0xe4dc, 0x0, 0x0);
        gbc.writeMem(0x574, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0x38);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0xfc);
        EXPECT(gbc.sp(), 0x622a);
        EXPECT(gbc.pc(), 0x576);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB ED 0161
        gbc.setState(0x8be3, 0x8ba5, 0xdc30, 0x9a5b, 0x81f9, 0x2cd2, 0x1, 0x1);
        gbc.writeMem(0x8be3, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0xdc);
        EXPECT(gbc.b(),  0x9a);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0x81);
        EXPECT(gbc.e(),  0xf9);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0xf2);
        EXPECT(gbc.sp(), 0x8ba5);
        EXPECT(gbc.pc(), 0x8be5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8be3), 0xcb);
        EXPECT(gbc.readMem(0x8be4), 0xed);
        // CB ED 0162
        gbc.setState(0x82b1, 0x22f1, 0x5200, 0xd913, 0x1954, 0x3606, 0x0, 0x1);
        gbc.writeMem(0x82b1, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0x19);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0x36);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0x22f1);
        EXPECT(gbc.pc(), 0x82b3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x82b1), 0xcb);
        EXPECT(gbc.readMem(0x82b2), 0xed);
        // CB ED 0163
        gbc.setState(0xa678, 0x319c, 0x19d0, 0x7e9b, 0x4372, 0x340c, 0x1, 0x1);
        gbc.writeMem(0xa678, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0x19);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0x9b);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0x34);
        EXPECT(gbc.l(),  0x2c);
        EXPECT(gbc.sp(), 0x319c);
        EXPECT(gbc.pc(), 0xa67a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa678), 0xcb);
        EXPECT(gbc.readMem(0xa679), 0xed);
        // CB ED 0165
        gbc.setState(0x9f97, 0x509e, 0xcfc0, 0x5da6, 0xb70f, 0x47ff, 0x1, 0x0);
        gbc.writeMem(0x9f97, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0xcf);
        EXPECT(gbc.b(),  0x5d);
        EXPECT(gbc.c(),  0xa6);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0xff);
        EXPECT(gbc.sp(), 0x509e);
        EXPECT(gbc.pc(), 0x9f99);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9f97), 0xcb);
        EXPECT(gbc.readMem(0x9f98), 0xed);
        // CB ED 0166
        gbc.setState(0xc782, 0x4319, 0xecb0, 0x47ee, 0xef63, 0x641b, 0x0, 0x1);
        gbc.writeMem(0xc782, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0x63);
        EXPECT(gbc.h(),  0x64);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0x4319);
        EXPECT(gbc.pc(), 0xc784);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc782), 0xcb);
        EXPECT(gbc.readMem(0xc783), 0xed);
        // CB ED 0167
        gbc.setState(0xa8f3, 0xc3cd, 0x8090, 0xff77, 0x671f, 0x8ab, 0x1, 0x1);
        gbc.writeMem(0xa8f3, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0xff);
        EXPECT(gbc.c(),  0x77);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0x1f);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0xc3cd);
        EXPECT(gbc.pc(), 0xa8f5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa8f3), 0xcb);
        EXPECT(gbc.readMem(0xa8f4), 0xed);
        // CB ED 0168
        gbc.setState(0x51f7, 0x700d, 0xcb00, 0xb2db, 0x22a3, 0x682a, 0x0, 0x1);
        gbc.writeMem(0x51f7, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0xcb);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0xa3);
        EXPECT(gbc.h(),  0x68);
        EXPECT(gbc.l(),  0x2a);
        EXPECT(gbc.sp(), 0x700d);
        EXPECT(gbc.pc(), 0x51f9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB ED 0169
        gbc.setState(0x62eb, 0xb80a, 0x2c30, 0xeeeb, 0xb0a9, 0x7db8, 0x1, 0x1);
        gbc.writeMem(0x62eb, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0x2c);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0xb8);
        EXPECT(gbc.sp(), 0xb80a);
        EXPECT(gbc.pc(), 0x62ed);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB ED 016A
        gbc.setState(0xe5be, 0xed12, 0xda00, 0xd427, 0x4b4a, 0xd98e, 0x1, 0x1);
        gbc.writeMem(0xe5be, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0xae);
        EXPECT(gbc.sp(), 0xed12);
        EXPECT(gbc.pc(), 0xe5c0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe5be), 0xcb);
        EXPECT(gbc.readMem(0xe5bf), 0xed);
        // CB ED 016B
        gbc.setState(0x8a39, 0x6e08, 0x5ad0, 0x6420, 0x563a, 0x9451, 0x0, 0x1);
        gbc.writeMem(0x8a39, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0x64);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0x56);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0x6e08);
        EXPECT(gbc.pc(), 0x8a3b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8a39), 0xcb);
        EXPECT(gbc.readMem(0x8a3a), 0xed);
        // CB ED 016C
        gbc.setState(0x12fd, 0xaaf0, 0x3320, 0xb1b3, 0xd52e, 0xfe13, 0x0, 0x0);
        gbc.writeMem(0x12fd, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0xb3);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0xaaf0);
        EXPECT(gbc.pc(), 0x12ff);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB ED 016D
        gbc.setState(0xcba0, 0x22d2, 0xf840, 0x60ce, 0x7433, 0x5a0d, 0x1, 0x1);
        gbc.writeMem(0xcba0, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0x74);
        EXPECT(gbc.e(),  0x33);
        EXPECT(gbc.h(),  0x5a);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0x22d2);
        EXPECT(gbc.pc(), 0xcba2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcba0), 0xcb);
        EXPECT(gbc.readMem(0xcba1), 0xed);
        // CB ED 016E
        gbc.setState(0x6b4d, 0xdfd4, 0x7a90, 0x9e76, 0xcdab, 0xc15c, 0x0, 0x1);
        gbc.writeMem(0x6b4d, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0x7a);
        EXPECT(gbc.b(),  0x9e);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0xc1);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0xdfd4);
        EXPECT(gbc.pc(), 0x6b4f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB ED 016F
        gbc.setState(0x91fc, 0x83be, 0xd920, 0xca30, 0x3439, 0x6f7d, 0x0, 0x0);
        gbc.writeMem(0x91fc, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0xd9);
        EXPECT(gbc.b(),  0xca);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0x34);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0x6f);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0x83be);
        EXPECT(gbc.pc(), 0x91fe);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x91fc), 0xcb);
        EXPECT(gbc.readMem(0x91fd), 0xed);
        // CB ED 0170
        gbc.setState(0x2389, 0x93a9, 0xdb10, 0x6897, 0x57e8, 0x6cbb, 0x1, 0x1);
        gbc.writeMem(0x2389, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0xdb);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0x97);
        EXPECT(gbc.d(),  0x57);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0x6c);
        EXPECT(gbc.l(),  0xbb);
        EXPECT(gbc.sp(), 0x93a9);
        EXPECT(gbc.pc(), 0x238b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB ED 0171
        gbc.setState(0x6610, 0xe326, 0xdbb0, 0xeb6, 0x6fe3, 0x2aee, 0x1, 0x1);
        gbc.writeMem(0x6610, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0xdb);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0xb6);
        EXPECT(gbc.d(),  0x6f);
        EXPECT(gbc.e(),  0xe3);
        EXPECT(gbc.h(),  0x2a);
        EXPECT(gbc.l(),  0xee);
        EXPECT(gbc.sp(), 0xe326);
        EXPECT(gbc.pc(), 0x6612);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB ED 0172
        gbc.setState(0x7eb3, 0x6fa8, 0x980, 0x8555, 0xac53, 0x6dfd, 0x1, 0x0);
        gbc.writeMem(0x7eb3, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0x55);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0x53);
        EXPECT(gbc.h(),  0x6d);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0x6fa8);
        EXPECT(gbc.pc(), 0x7eb5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB ED 0173
        gbc.setState(0x8de1, 0x358, 0x96f0, 0xf9b5, 0x9144, 0x8c66, 0x0, 0x0);
        gbc.writeMem(0x8de1, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0x96);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0x358);
        EXPECT(gbc.pc(), 0x8de3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8de1), 0xcb);
        EXPECT(gbc.readMem(0x8de2), 0xed);
        // CB ED 0174
        gbc.setState(0x4374, 0x6b59, 0x5480, 0x4fdf, 0x517f, 0xab63, 0x1, 0x0);
        gbc.writeMem(0x4374, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0x54);
        EXPECT(gbc.b(),  0x4f);
        EXPECT(gbc.c(),  0xdf);
        EXPECT(gbc.d(),  0x51);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0x63);
        EXPECT(gbc.sp(), 0x6b59);
        EXPECT(gbc.pc(), 0x4376);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB ED 0175
        gbc.setState(0x1762, 0xf871, 0x78d0, 0xfd84, 0xbabd, 0x92e2, 0x0, 0x1);
        gbc.writeMem(0x1762, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0xba);
        EXPECT(gbc.e(),  0xbd);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0xf871);
        EXPECT(gbc.pc(), 0x1764);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB ED 0176
        gbc.setState(0xea8c, 0x98b0, 0xaea0, 0x1cab, 0xd3, 0x57d2, 0x0, 0x1);
        gbc.writeMem(0xea8c, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0xae);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0x57);
        EXPECT(gbc.l(),  0xf2);
        EXPECT(gbc.sp(), 0x98b0);
        EXPECT(gbc.pc(), 0xea8e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xea8c), 0xcb);
        EXPECT(gbc.readMem(0xea8d), 0xed);
        // CB ED 0177
        gbc.setState(0x618f, 0x6929, 0x1340, 0x7044, 0xbc71, 0x3904, 0x1, 0x1);
        gbc.writeMem(0x618f, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0x13);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0xbc);
        EXPECT(gbc.e(),  0x71);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0x6929);
        EXPECT(gbc.pc(), 0x6191);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB ED 0178
        gbc.setState(0x5b7a, 0x74f1, 0xbf60, 0xd518, 0x7e67, 0x8612, 0x0, 0x1);
        gbc.writeMem(0x5b7a, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0xd5);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0x7e);
        EXPECT(gbc.e(),  0x67);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0x74f1);
        EXPECT(gbc.pc(), 0x5b7c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB ED 0179
        gbc.setState(0x231c, 0xcc09, 0x100, 0x5787, 0xcb5, 0xc303, 0x0, 0x0);
        gbc.writeMem(0x231c, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0x1);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0x87);
        EXPECT(gbc.d(),  0xc);
        EXPECT(gbc.e(),  0xb5);
        EXPECT(gbc.h(),  0xc3);
        EXPECT(gbc.l(),  0x23);
        EXPECT(gbc.sp(), 0xcc09);
        EXPECT(gbc.pc(), 0x231e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB ED 017A
        gbc.setState(0x453d, 0x5fb7, 0x9460, 0xd827, 0x87f8, 0x4477, 0x0, 0x1);
        gbc.writeMem(0x453d, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0x94);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0x87);
        EXPECT(gbc.e(),  0xf8);
        EXPECT(gbc.h(),  0x44);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0x5fb7);
        EXPECT(gbc.pc(), 0x453f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB ED 017B
        gbc.setState(0x6dd3, 0xd018, 0x46e0, 0xf6fd, 0x2121, 0x8649, 0x0, 0x1);
        gbc.writeMem(0x6dd3, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0x46);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0xfd);
        EXPECT(gbc.d(),  0x21);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0xd018);
        EXPECT(gbc.pc(), 0x6dd5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB ED 017D
        gbc.setState(0x311c, 0xe0a8, 0xa110, 0xa32e, 0x349e, 0x150, 0x0, 0x0);
        gbc.writeMem(0x311c, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0xa1);
        EXPECT(gbc.b(),  0xa3);
        EXPECT(gbc.c(),  0x2e);
        EXPECT(gbc.d(),  0x34);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0x70);
        EXPECT(gbc.sp(), 0xe0a8);
        EXPECT(gbc.pc(), 0x311e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB ED 017E
        gbc.setState(0xd86e, 0xd0e3, 0x6140, 0xa8d6, 0x7d61, 0x1813, 0x0, 0x0);
        gbc.writeMem(0xd86e, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0xa8);
        EXPECT(gbc.c(),  0xd6);
        EXPECT(gbc.d(),  0x7d);
        EXPECT(gbc.e(),  0x61);
        EXPECT(gbc.h(),  0x18);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0xd0e3);
        EXPECT(gbc.pc(), 0xd870);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd86e), 0xcb);
        EXPECT(gbc.readMem(0xd86f), 0xed);
        // CB ED 017F
        gbc.setState(0x508e, 0x8598, 0x20f0, 0x3046, 0x3416, 0xcb0c, 0x1, 0x0);
        gbc.writeMem(0x508e, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0x20);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0x34);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0x2c);
        EXPECT(gbc.sp(), 0x8598);
        EXPECT(gbc.pc(), 0x5090);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB ED 0180
        gbc.setState(0xd94e, 0xff57, 0x8bf0, 0xdffb, 0x457f, 0x9239, 0x1, 0x1);
        gbc.writeMem(0xd94e, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0xdf);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0x39);
        EXPECT(gbc.sp(), 0xff57);
        EXPECT(gbc.pc(), 0xd950);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd94e), 0xcb);
        EXPECT(gbc.readMem(0xd94f), 0xed);
        // CB ED 0181
        gbc.setState(0xc8d8, 0xddea, 0xdd40, 0x5ccb, 0xe09c, 0x718f, 0x1, 0x0);
        gbc.writeMem(0xc8d8, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0xdd);
        EXPECT(gbc.b(),  0x5c);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0x9c);
        EXPECT(gbc.h(),  0x71);
        EXPECT(gbc.l(),  0xaf);
        EXPECT(gbc.sp(), 0xddea);
        EXPECT(gbc.pc(), 0xc8da);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc8d8), 0xcb);
        EXPECT(gbc.readMem(0xc8d9), 0xed);
        // CB ED 0182
        gbc.setState(0xac22, 0x12e1, 0x49a0, 0x9e0, 0x4be4, 0x7efc, 0x1, 0x1);
        gbc.writeMem(0xac22, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0x7e);
        EXPECT(gbc.l(),  0xfc);
        EXPECT(gbc.sp(), 0x12e1);
        EXPECT(gbc.pc(), 0xac24);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xac22), 0xcb);
        EXPECT(gbc.readMem(0xac23), 0xed);
        // CB ED 0183
        gbc.setState(0x56c8, 0x9c71, 0xc480, 0xb5ad, 0x5efd, 0x837, 0x0, 0x1);
        gbc.writeMem(0x56c8, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0xc4);
        EXPECT(gbc.b(),  0xb5);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0xfd);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0x9c71);
        EXPECT(gbc.pc(), 0x56ca);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB ED 0184
        gbc.setState(0x2a7b, 0xcd7f, 0x99f0, 0xb348, 0x5381, 0xbd52, 0x0, 0x0);
        gbc.writeMem(0x2a7b, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0x99);
        EXPECT(gbc.b(),  0xb3);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0x81);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0x72);
        EXPECT(gbc.sp(), 0xcd7f);
        EXPECT(gbc.pc(), 0x2a7d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB ED 0185
        gbc.setState(0xb72, 0xcdc4, 0x3510, 0x2f83, 0x3fd, 0x9dd, 0x0, 0x1);
        gbc.writeMem(0xb72, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0x35);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0x3);
        EXPECT(gbc.e(),  0xfd);
        EXPECT(gbc.h(),  0x9);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0xcdc4);
        EXPECT(gbc.pc(), 0xb74);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB ED 0186
        gbc.setState(0xa4f7, 0x7ca8, 0x56e0, 0xc7e5, 0x9bd9, 0x9081, 0x0, 0x0);
        gbc.writeMem(0xa4f7, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0x90);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0x7ca8);
        EXPECT(gbc.pc(), 0xa4f9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa4f7), 0xcb);
        EXPECT(gbc.readMem(0xa4f8), 0xed);
        // CB ED 0187
        gbc.setState(0x20bc, 0x92d0, 0x6020, 0x8dc4, 0x6177, 0x55f9, 0x0, 0x0);
        gbc.writeMem(0x20bc, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0x8d);
        EXPECT(gbc.c(),  0xc4);
        EXPECT(gbc.d(),  0x61);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0x92d0);
        EXPECT(gbc.pc(), 0x20be);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB ED 0188
        gbc.setState(0x5b11, 0x71a, 0x3720, 0xd638, 0x25d8, 0x7dc8, 0x0, 0x0);
        gbc.writeMem(0x5b11, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0x38);
        EXPECT(gbc.d(),  0x25);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0xe8);
        EXPECT(gbc.sp(), 0x71a);
        EXPECT(gbc.pc(), 0x5b13);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB ED 0189
        gbc.setState(0xafdf, 0xcb7, 0xb270, 0xcef, 0xa3aa, 0x65df, 0x0, 0x1);
        gbc.writeMem(0xafdf, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0xb2);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0xa3);
        EXPECT(gbc.e(),  0xaa);
        EXPECT(gbc.h(),  0x65);
        EXPECT(gbc.l(),  0xff);
        EXPECT(gbc.sp(), 0xcb7);
        EXPECT(gbc.pc(), 0xafe1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xafdf), 0xcb);
        EXPECT(gbc.readMem(0xafe0), 0xed);
        // CB ED 018A
        gbc.setState(0xe522, 0x4ab6, 0x41c0, 0x8daf, 0xe2b7, 0xd9e3, 0x1, 0x0);
        gbc.writeMem(0xe522, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0x8d);
        EXPECT(gbc.c(),  0xaf);
        EXPECT(gbc.d(),  0xe2);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0xe3);
        EXPECT(gbc.sp(), 0x4ab6);
        EXPECT(gbc.pc(), 0xe524);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe522), 0xcb);
        EXPECT(gbc.readMem(0xe523), 0xed);
        // CB ED 018B
        gbc.setState(0xe933, 0xae38, 0x2cf0, 0x9725, 0x7fc6, 0x2b22, 0x1, 0x0);
        gbc.writeMem(0xe933, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0x2c);
        EXPECT(gbc.b(),  0x97);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0xc6);
        EXPECT(gbc.h(),  0x2b);
        EXPECT(gbc.l(),  0x22);
        EXPECT(gbc.sp(), 0xae38);
        EXPECT(gbc.pc(), 0xe935);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe933), 0xcb);
        EXPECT(gbc.readMem(0xe934), 0xed);
        // CB ED 018C
        gbc.setState(0x31c2, 0x3d65, 0x2d20, 0x653c, 0x196d, 0xbfef, 0x1, 0x1);
        gbc.writeMem(0x31c2, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0x19);
        EXPECT(gbc.e(),  0x6d);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0xef);
        EXPECT(gbc.sp(), 0x3d65);
        EXPECT(gbc.pc(), 0x31c4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB ED 018D
        gbc.setState(0xed9, 0x7982, 0x310, 0x2176, 0x283e, 0xea16, 0x1, 0x1);
        gbc.writeMem(0xed9, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0x21);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0x28);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0xea);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0x7982);
        EXPECT(gbc.pc(), 0xedb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB ED 018E
        gbc.setState(0x6f34, 0xb48f, 0xb00, 0xefb1, 0x7356, 0x38da, 0x0, 0x1);
        gbc.writeMem(0x6f34, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0xef);
        EXPECT(gbc.c(),  0xb1);
        EXPECT(gbc.d(),  0x73);
        EXPECT(gbc.e(),  0x56);
        EXPECT(gbc.h(),  0x38);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0xb48f);
        EXPECT(gbc.pc(), 0x6f36);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB ED 018F
        gbc.setState(0x9db3, 0x33d0, 0xfb20, 0x5009, 0x55c4, 0xf18c, 0x0, 0x1);
        gbc.writeMem(0x9db3, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0xfb);
        EXPECT(gbc.b(),  0x50);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0xf1);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0x33d0);
        EXPECT(gbc.pc(), 0x9db5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9db3), 0xcb);
        EXPECT(gbc.readMem(0x9db4), 0xed);
        // CB ED 0190
        gbc.setState(0x730, 0x2f89, 0x9fd0, 0x7569, 0x68cc, 0x9ba5, 0x0, 0x0);
        gbc.writeMem(0x730, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0x9f);
        EXPECT(gbc.b(),  0x75);
        EXPECT(gbc.c(),  0x69);
        EXPECT(gbc.d(),  0x68);
        EXPECT(gbc.e(),  0xcc);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0x2f89);
        EXPECT(gbc.pc(), 0x732);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB ED 0191
        gbc.setState(0xaeeb, 0x7ba1, 0x64a0, 0x14be, 0xcc62, 0x58ad, 0x0, 0x0);
        gbc.writeMem(0xaeeb, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0xbe);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0x58);
        EXPECT(gbc.l(),  0xad);
        EXPECT(gbc.sp(), 0x7ba1);
        EXPECT(gbc.pc(), 0xaeed);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaeeb), 0xcb);
        EXPECT(gbc.readMem(0xaeec), 0xed);
        // CB ED 0192
        gbc.setState(0xb002, 0xe6cb, 0xe5b0, 0x871d, 0x3ead, 0xe113, 0x1, 0x1);
        gbc.writeMem(0xb002, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0xe5);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0xe1);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0xe6cb);
        EXPECT(gbc.pc(), 0xb004);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb002), 0xcb);
        EXPECT(gbc.readMem(0xb003), 0xed);
        // CB ED 0193
        gbc.setState(0xa3cc, 0x1ac, 0xd300, 0xf148, 0x980f, 0x7dcd, 0x0, 0x0);
        gbc.writeMem(0xa3cc, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0xd3);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0x98);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0x1ac);
        EXPECT(gbc.pc(), 0xa3ce);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa3cc), 0xcb);
        EXPECT(gbc.readMem(0xa3cd), 0xed);
        // CB ED 0194
        gbc.setState(0x25a7, 0x1717, 0x8f40, 0x198c, 0x3d3f, 0x7ba5, 0x1, 0x0);
        gbc.writeMem(0x25a7, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0x8f);
        EXPECT(gbc.b(),  0x19);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0x7b);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0x1717);
        EXPECT(gbc.pc(), 0x25a9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB ED 0195
        gbc.setState(0x33d, 0x1da7, 0xa3b0, 0x3101, 0x73e3, 0x1050, 0x1, 0x1);
        gbc.writeMem(0x33d, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0xa3);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0x73);
        EXPECT(gbc.e(),  0xe3);
        EXPECT(gbc.h(),  0x10);
        EXPECT(gbc.l(),  0x70);
        EXPECT(gbc.sp(), 0x1da7);
        EXPECT(gbc.pc(), 0x33f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB ED 0196
        gbc.setState(0x6351, 0x3e55, 0x7d80, 0xb14, 0x4c5b, 0xfe11, 0x1, 0x1);
        gbc.writeMem(0x6351, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0x7d);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0x4c);
        EXPECT(gbc.e(),  0x5b);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0x3e55);
        EXPECT(gbc.pc(), 0x6353);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB ED 0197
        gbc.setState(0x31c2, 0xb4ce, 0x3e30, 0x76dc, 0x5c06, 0x63c, 0x0, 0x1);
        gbc.writeMem(0x31c2, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0xdc);
        EXPECT(gbc.d(),  0x5c);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0x6);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0xb4ce);
        EXPECT(gbc.pc(), 0x31c4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB ED 0199
        gbc.setState(0x5172, 0xc321, 0xf750, 0x7780, 0x5a1b, 0x3822, 0x0, 0x1);
        gbc.writeMem(0x5172, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0x77);
        EXPECT(gbc.c(),  0x80);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0x1b);
        EXPECT(gbc.h(),  0x38);
        EXPECT(gbc.l(),  0x22);
        EXPECT(gbc.sp(), 0xc321);
        EXPECT(gbc.pc(), 0x5174);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB ED 019A
        gbc.setState(0x8539, 0x6135, 0xa290, 0xdd7f, 0xaa71, 0x5cda, 0x1, 0x0);
        gbc.writeMem(0x8539, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0x71);
        EXPECT(gbc.h(),  0x5c);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0x6135);
        EXPECT(gbc.pc(), 0x853b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8539), 0xcb);
        EXPECT(gbc.readMem(0x853a), 0xed);
        // CB ED 019B
        gbc.setState(0x2c99, 0x4d6f, 0xe9b0, 0x331a, 0x32ec, 0xbf85, 0x1, 0x0);
        gbc.writeMem(0x2c99, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0xe9);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0xec);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0x4d6f);
        EXPECT(gbc.pc(), 0x2c9b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB ED 019D
        gbc.setState(0x30ab, 0xe50, 0xb80, 0xb1eb, 0x8704, 0x5b05, 0x0, 0x1);
        gbc.writeMem(0x30ab, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0x87);
        EXPECT(gbc.e(),  0x4);
        EXPECT(gbc.h(),  0x5b);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0xe50);
        EXPECT(gbc.pc(), 0x30ad);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB ED 019E
        gbc.setState(0xcc19, 0xd7c1, 0x22c0, 0xfd60, 0xbb10, 0x81e8, 0x0, 0x0);
        gbc.writeMem(0xcc19, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0x60);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0xe8);
        EXPECT(gbc.sp(), 0xd7c1);
        EXPECT(gbc.pc(), 0xcc1b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcc19), 0xcb);
        EXPECT(gbc.readMem(0xcc1a), 0xed);
        // CB ED 019F
        gbc.setState(0xd3d2, 0x74aa, 0x1890, 0x95d4, 0x2f3e, 0xb165, 0x0, 0x1);
        gbc.writeMem(0xd3d2, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0x95);
        EXPECT(gbc.c(),  0xd4);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0x65);
        EXPECT(gbc.sp(), 0x74aa);
        EXPECT(gbc.pc(), 0xd3d4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd3d2), 0xcb);
        EXPECT(gbc.readMem(0xd3d3), 0xed);
        // CB ED 01A0
        gbc.setState(0x8faf, 0xa669, 0x63f0, 0x44e5, 0xac2e, 0x7c66, 0x0, 0x0);
        gbc.writeMem(0x8faf, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0x44);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0x7c);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0xa669);
        EXPECT(gbc.pc(), 0x8fb1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8faf), 0xcb);
        EXPECT(gbc.readMem(0x8fb0), 0xed);
        // CB ED 01A1
        gbc.setState(0xc32f, 0xbc7a, 0x25b0, 0x2f1a, 0xc3c5, 0x2463, 0x0, 0x1);
        gbc.writeMem(0xc32f, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0x25);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0xc5);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0x63);
        EXPECT(gbc.sp(), 0xbc7a);
        EXPECT(gbc.pc(), 0xc331);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc32f), 0xcb);
        EXPECT(gbc.readMem(0xc330), 0xed);
        // CB ED 01A3
        gbc.setState(0x24e2, 0x1ea7, 0xb440, 0xa231, 0x13f, 0x57e, 0x1, 0x1);
        gbc.writeMem(0x24e2, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0xb4);
        EXPECT(gbc.b(),  0xa2);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0x1);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0x7e);
        EXPECT(gbc.sp(), 0x1ea7);
        EXPECT(gbc.pc(), 0x24e4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB ED 01A4
        gbc.setState(0xc1a3, 0x9e54, 0xf850, 0x1b16, 0x82e8, 0x2660, 0x0, 0x0);
        gbc.writeMem(0xc1a3, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0x9e54);
        EXPECT(gbc.pc(), 0xc1a5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc1a3), 0xcb);
        EXPECT(gbc.readMem(0xc1a4), 0xed);
        // CB ED 01A5
        gbc.setState(0xc701, 0x6944, 0xbba0, 0x754e, 0xe3d9, 0x80ab, 0x0, 0x1);
        gbc.writeMem(0xc701, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0x75);
        EXPECT(gbc.c(),  0x4e);
        EXPECT(gbc.d(),  0xe3);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0x6944);
        EXPECT(gbc.pc(), 0xc703);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc701), 0xcb);
        EXPECT(gbc.readMem(0xc702), 0xed);
        // CB ED 01A7
        gbc.setState(0xef2d, 0x2030, 0x22e0, 0x94f, 0x90c3, 0xc7f7, 0x0, 0x0);
        gbc.writeMem(0xef2d, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0xc3);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0xf7);
        EXPECT(gbc.sp(), 0x2030);
        EXPECT(gbc.pc(), 0xef2f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xef2d), 0xcb);
        EXPECT(gbc.readMem(0xef2e), 0xed);
        // CB ED 01A8
        gbc.setState(0x79b4, 0xac17, 0x7030, 0x3889, 0x34fa, 0xa90c, 0x1, 0x1);
        gbc.writeMem(0x79b4, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0x70);
        EXPECT(gbc.b(),  0x38);
        EXPECT(gbc.c(),  0x89);
        EXPECT(gbc.d(),  0x34);
        EXPECT(gbc.e(),  0xfa);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0x2c);
        EXPECT(gbc.sp(), 0xac17);
        EXPECT(gbc.pc(), 0x79b6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB ED 01A9
        gbc.setState(0x7d59, 0x30ed, 0x4350, 0x1f9f, 0xa7fc, 0xc946, 0x1, 0x1);
        gbc.writeMem(0x7d59, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0x43);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0x9f);
        EXPECT(gbc.d(),  0xa7);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0x30ed);
        EXPECT(gbc.pc(), 0x7d5b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB ED 01AA
        gbc.setState(0x2aff, 0xb393, 0xa990, 0x2eb3, 0x943c, 0xddf8, 0x1, 0x1);
        gbc.writeMem(0x2aff, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0xa9);
        EXPECT(gbc.b(),  0x2e);
        EXPECT(gbc.c(),  0xb3);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0x3c);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0xb393);
        EXPECT(gbc.pc(), 0x2b01);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB ED 01AB
        gbc.setState(0xb2d3, 0xee88, 0x8490, 0xf2a1, 0xe278, 0x1abc, 0x1, 0x0);
        gbc.writeMem(0xb2d3, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0x84);
        EXPECT(gbc.b(),  0xf2);
        EXPECT(gbc.c(),  0xa1);
        EXPECT(gbc.d(),  0xe2);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0x1a);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0xee88);
        EXPECT(gbc.pc(), 0xb2d5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb2d3), 0xcb);
        EXPECT(gbc.readMem(0xb2d4), 0xed);
        // CB ED 01AD
        gbc.setState(0x416f, 0xf200, 0xddf0, 0xf344, 0xbdca, 0x89a6, 0x0, 0x1);
        gbc.writeMem(0x416f, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0xdd);
        EXPECT(gbc.b(),  0xf3);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0xca);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0xa6);
        EXPECT(gbc.sp(), 0xf200);
        EXPECT(gbc.pc(), 0x4171);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB ED 01AE
        gbc.setState(0xc195, 0xb1d5, 0xe670, 0x5be7, 0xa775, 0x241a, 0x1, 0x1);
        gbc.writeMem(0xc195, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0xe7);
        EXPECT(gbc.d(),  0xa7);
        EXPECT(gbc.e(),  0x75);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0xb1d5);
        EXPECT(gbc.pc(), 0xc197);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc195), 0xcb);
        EXPECT(gbc.readMem(0xc196), 0xed);
        // CB ED 01AF
        gbc.setState(0xaadf, 0xbebd, 0x1f00, 0x7bef, 0xa800, 0xce5e, 0x0, 0x1);
        gbc.writeMem(0xaadf, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0x7b);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0x7e);
        EXPECT(gbc.sp(), 0xbebd);
        EXPECT(gbc.pc(), 0xaae1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaadf), 0xcb);
        EXPECT(gbc.readMem(0xaae0), 0xed);
        // CB ED 01B0
        gbc.setState(0x80a0, 0x8ceb, 0xd5c0, 0x9289, 0x779b, 0xf154, 0x1, 0x0);
        gbc.writeMem(0x80a0, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0xd5);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0x89);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0x9b);
        EXPECT(gbc.h(),  0xf1);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0x8ceb);
        EXPECT(gbc.pc(), 0x80a2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x80a0), 0xcb);
        EXPECT(gbc.readMem(0x80a1), 0xed);
        // CB ED 01B1
        gbc.setState(0xb712, 0x251d, 0xa330, 0xb583, 0xbfa0, 0x303a, 0x0, 0x1);
        gbc.writeMem(0xb712, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0xa3);
        EXPECT(gbc.b(),  0xb5);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0xbf);
        EXPECT(gbc.e(),  0xa0);
        EXPECT(gbc.h(),  0x30);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0x251d);
        EXPECT(gbc.pc(), 0xb714);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb712), 0xcb);
        EXPECT(gbc.readMem(0xb713), 0xed);
        // CB ED 01B2
        gbc.setState(0xa344, 0xa4ec, 0x9a40, 0xf5bd, 0xc8c, 0xef0f, 0x1, 0x0);
        gbc.writeMem(0xa344, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0x9a);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0xbd);
        EXPECT(gbc.d(),  0xc);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0xa4ec);
        EXPECT(gbc.pc(), 0xa346);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa344), 0xcb);
        EXPECT(gbc.readMem(0xa345), 0xed);
        // CB ED 01B3
        gbc.setState(0x9ec8, 0x706d, 0xa640, 0xab4d, 0xcd05, 0xb9cc, 0x1, 0x0);
        gbc.writeMem(0x9ec8, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0xa6);
        EXPECT(gbc.b(),  0xab);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0xec);
        EXPECT(gbc.sp(), 0x706d);
        EXPECT(gbc.pc(), 0x9eca);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9ec8), 0xcb);
        EXPECT(gbc.readMem(0x9ec9), 0xed);
        // CB ED 01B4
        gbc.setState(0x7b7d, 0x4c0, 0xea60, 0x9e9c, 0xcd8b, 0x6b95, 0x0, 0x0);
        gbc.writeMem(0x7b7d, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0x9e);
        EXPECT(gbc.c(),  0x9c);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0x8b);
        EXPECT(gbc.h(),  0x6b);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0x4c0);
        EXPECT(gbc.pc(), 0x7b7f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB ED 01B5
        gbc.setState(0x2a7f, 0xdc7f, 0xd220, 0xb9fc, 0x4f1a, 0xd456, 0x0, 0x0);
        gbc.writeMem(0x2a7f, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0xb9);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0xdc7f);
        EXPECT(gbc.pc(), 0x2a81);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB ED 01B6
        gbc.setState(0x748c, 0x8757, 0xb790, 0x7293, 0x750c, 0xf90e, 0x0, 0x1);
        gbc.writeMem(0x748c, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0x93);
        EXPECT(gbc.d(),  0x75);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0xf9);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0x8757);
        EXPECT(gbc.pc(), 0x748e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB ED 01B7
        gbc.setState(0x1ade, 0x5f20, 0x1a90, 0x6c05, 0x5583, 0xff15, 0x1, 0x0);
        gbc.writeMem(0x1ade, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0x1a);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0x83);
        EXPECT(gbc.h(),  0xff);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0x5f20);
        EXPECT(gbc.pc(), 0x1ae0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB ED 01B8
        gbc.setState(0x7264, 0x2271, 0x6940, 0xd1ff, 0x6780, 0x94ee, 0x1, 0x0);
        gbc.writeMem(0x7264, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0xff);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0xee);
        EXPECT(gbc.sp(), 0x2271);
        EXPECT(gbc.pc(), 0x7266);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB ED 01B9
        gbc.setState(0x8efb, 0x3481, 0xea80, 0x9588, 0xaac3, 0xd55d, 0x1, 0x0);
        gbc.writeMem(0x8efb, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0x95);
        EXPECT(gbc.c(),  0x88);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0xc3);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0x3481);
        EXPECT(gbc.pc(), 0x8efd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8efb), 0xcb);
        EXPECT(gbc.readMem(0x8efc), 0xed);
        // CB ED 01BA
        gbc.setState(0xc58, 0x8f4b, 0xa260, 0x284d, 0x8f49, 0x6a83, 0x0, 0x0);
        gbc.writeMem(0xc58, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0x28);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0x6a);
        EXPECT(gbc.l(),  0xa3);
        EXPECT(gbc.sp(), 0x8f4b);
        EXPECT(gbc.pc(), 0xc5a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB ED 01BB
        gbc.setState(0x3ebf, 0x6be6, 0x2700, 0x1130, 0xba01, 0x55cb, 0x1, 0x0);
        gbc.writeMem(0x3ebf, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0x27);
        EXPECT(gbc.b(),  0x11);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0xba);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0xeb);
        EXPECT(gbc.sp(), 0x6be6);
        EXPECT(gbc.pc(), 0x3ec1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB ED 01BC
        gbc.setState(0x2582, 0x48e1, 0x6930, 0x2dd2, 0xe07c, 0xce17, 0x0, 0x0);
        gbc.writeMem(0x2582, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0x2d);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0x48e1);
        EXPECT(gbc.pc(), 0x2584);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB ED 01BD
        gbc.setState(0x6656, 0x75fb, 0xe170, 0x6362, 0x81fc, 0xbc21, 0x1, 0x0);
        gbc.writeMem(0x6656, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0xe1);
        EXPECT(gbc.b(),  0x63);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0x81);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0x75fb);
        EXPECT(gbc.pc(), 0x6658);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB ED 01BE
        gbc.setState(0xe3df, 0xc2cd, 0x7f30, 0x5c92, 0x26aa, 0xc334, 0x1, 0x0);
        gbc.writeMem(0xe3df, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0x5c);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0x26);
        EXPECT(gbc.e(),  0xaa);
        EXPECT(gbc.h(),  0xc3);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0xc2cd);
        EXPECT(gbc.pc(), 0xe3e1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe3df), 0xcb);
        EXPECT(gbc.readMem(0xe3e0), 0xed);
        // CB ED 01BF
        gbc.setState(0x6e45, 0xa5fc, 0xe80, 0x4b63, 0x548e, 0x54e4, 0x1, 0x0);
        gbc.writeMem(0x6e45, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0x63);
        EXPECT(gbc.d(),  0x54);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0x54);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0xa5fc);
        EXPECT(gbc.pc(), 0x6e47);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB ED 01C0
        gbc.setState(0x521c, 0x5100, 0x7e20, 0xb6b9, 0x1fd2, 0xa280, 0x1, 0x1);
        gbc.writeMem(0x521c, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0x1f);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0x5100);
        EXPECT(gbc.pc(), 0x521e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB ED 01C1
        gbc.setState(0x2100, 0xaffc, 0x8290, 0x96a7, 0xbb66, 0xbd2, 0x1, 0x0);
        gbc.writeMem(0x2100, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0x82);
        EXPECT(gbc.b(),  0x96);
        EXPECT(gbc.c(),  0xa7);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0x66);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0xf2);
        EXPECT(gbc.sp(), 0xaffc);
        EXPECT(gbc.pc(), 0x2102);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB ED 01C2
        gbc.setState(0xa75c, 0x7296, 0xa250, 0xd547, 0xffd5, 0x79d0, 0x0, 0x1);
        gbc.writeMem(0xa75c, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0xd5);
        EXPECT(gbc.c(),  0x47);
        EXPECT(gbc.d(),  0xff);
        EXPECT(gbc.e(),  0xd5);
        EXPECT(gbc.h(),  0x79);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0x7296);
        EXPECT(gbc.pc(), 0xa75e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa75c), 0xcb);
        EXPECT(gbc.readMem(0xa75d), 0xed);
        // CB ED 01C3
        gbc.setState(0xb375, 0x60eb, 0x5390, 0x76b6, 0xa3ce, 0xc147, 0x0, 0x0);
        gbc.writeMem(0xb375, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0x53);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0xb6);
        EXPECT(gbc.d(),  0xa3);
        EXPECT(gbc.e(),  0xce);
        EXPECT(gbc.h(),  0xc1);
        EXPECT(gbc.l(),  0x67);
        EXPECT(gbc.sp(), 0x60eb);
        EXPECT(gbc.pc(), 0xb377);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb375), 0xcb);
        EXPECT(gbc.readMem(0xb376), 0xed);
        // CB ED 01C4
        gbc.setState(0x5366, 0x7e2a, 0xfed0, 0x25f6, 0x15e1, 0xc87d, 0x1, 0x1);
        gbc.writeMem(0x5366, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0xf6);
        EXPECT(gbc.d(),  0x15);
        EXPECT(gbc.e(),  0xe1);
        EXPECT(gbc.h(),  0xc8);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0x7e2a);
        EXPECT(gbc.pc(), 0x5368);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB ED 01C5
        gbc.setState(0x5973, 0xfacb, 0xd000, 0xc19a, 0x9e3a, 0x2bf7, 0x0, 0x0);
        gbc.writeMem(0x5973, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0xd0);
        EXPECT(gbc.b(),  0xc1);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0x2b);
        EXPECT(gbc.l(),  0xf7);
        EXPECT(gbc.sp(), 0xfacb);
        EXPECT(gbc.pc(), 0x5975);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB ED 01C6
        gbc.setState(0x3073, 0x8ae5, 0xce40, 0x43e7, 0xc689, 0x27dc, 0x1, 0x0);
        gbc.writeMem(0x3073, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0xce);
        EXPECT(gbc.b(),  0x43);
        EXPECT(gbc.c(),  0xe7);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0x27);
        EXPECT(gbc.l(),  0xfc);
        EXPECT(gbc.sp(), 0x8ae5);
        EXPECT(gbc.pc(), 0x3075);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB ED 01C7
        gbc.setState(0xe3a8, 0x3566, 0xa000, 0x6857, 0x31f5, 0x73e6, 0x0, 0x1);
        gbc.writeMem(0xe3a8, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0x73);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0x3566);
        EXPECT(gbc.pc(), 0xe3aa);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe3a8), 0xcb);
        EXPECT(gbc.readMem(0xe3a9), 0xed);
        // CB ED 01C8
        gbc.setState(0x5073, 0xfcb3, 0xdd0, 0xd3c8, 0x7411, 0x384c, 0x1, 0x0);
        gbc.writeMem(0x5073, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0xd);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0xc8);
        EXPECT(gbc.d(),  0x74);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0x38);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0xfcb3);
        EXPECT(gbc.pc(), 0x5075);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB ED 01C9
        gbc.setState(0xa8db, 0xcc51, 0xc6d0, 0xd709, 0xdc9, 0x146e, 0x0, 0x1);
        gbc.writeMem(0xa8db, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0xc6);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0xd);
        EXPECT(gbc.e(),  0xc9);
        EXPECT(gbc.h(),  0x14);
        EXPECT(gbc.l(),  0x6e);
        EXPECT(gbc.sp(), 0xcc51);
        EXPECT(gbc.pc(), 0xa8dd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa8db), 0xcb);
        EXPECT(gbc.readMem(0xa8dc), 0xed);
        // CB ED 01CA
        gbc.setState(0x1be2, 0xb293, 0x3b60, 0x7799, 0xac05, 0xcaf5, 0x0, 0x1);
        gbc.writeMem(0x1be2, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0x77);
        EXPECT(gbc.c(),  0x99);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0xca);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0xb293);
        EXPECT(gbc.pc(), 0x1be4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB ED 01CB
        gbc.setState(0x7a99, 0xcd32, 0x9660, 0x5bcd, 0x6a6b, 0x496b, 0x0, 0x0);
        gbc.writeMem(0x7a99, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0x96);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0xcd);
        EXPECT(gbc.d(),  0x6a);
        EXPECT(gbc.e(),  0x6b);
        EXPECT(gbc.h(),  0x49);
        EXPECT(gbc.l(),  0x6b);
        EXPECT(gbc.sp(), 0xcd32);
        EXPECT(gbc.pc(), 0x7a9b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB ED 01CC
        gbc.setState(0x3a26, 0xf970, 0xb150, 0xb0b2, 0x6504, 0xfd7d, 0x0, 0x1);
        gbc.writeMem(0x3a26, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0xb0);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0x65);
        EXPECT(gbc.e(),  0x4);
        EXPECT(gbc.h(),  0xfd);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0xf970);
        EXPECT(gbc.pc(), 0x3a28);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB ED 01CD
        gbc.setState(0x6cb, 0xe342, 0x7810, 0x7352, 0x183d, 0x7408, 0x0, 0x1);
        gbc.writeMem(0x6cb, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0x52);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0x74);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0xe342);
        EXPECT(gbc.pc(), 0x6cd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB ED 01CE
        gbc.setState(0xa5a3, 0x24ce, 0xa590, 0x1f95, 0x8892, 0x3576, 0x0, 0x0);
        gbc.writeMem(0xa5a3, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0xa5);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0x95);
        EXPECT(gbc.d(),  0x88);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0x24ce);
        EXPECT(gbc.pc(), 0xa5a5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa5a3), 0xcb);
        EXPECT(gbc.readMem(0xa5a4), 0xed);
        // CB ED 01CF
        gbc.setState(0x5d57, 0x2214, 0xec80, 0xd47, 0xf6a0, 0xc0ad, 0x1, 0x0);
        gbc.writeMem(0x5d57, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0xd);
        EXPECT(gbc.c(),  0x47);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0xa0);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0xad);
        EXPECT(gbc.sp(), 0x2214);
        EXPECT(gbc.pc(), 0x5d59);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB ED 01D0
        gbc.setState(0xe2b3, 0x113d, 0xf3a0, 0x5841, 0x5c92, 0x34af, 0x1, 0x1);
        gbc.writeMem(0xe2b3, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0x5c);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0x34);
        EXPECT(gbc.l(),  0xaf);
        EXPECT(gbc.sp(), 0x113d);
        EXPECT(gbc.pc(), 0xe2b5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe2b3), 0xcb);
        EXPECT(gbc.readMem(0xe2b4), 0xed);
        // CB ED 01D1
        gbc.setState(0x4b21, 0xae59, 0x2df0, 0x8bc, 0xca2d, 0x6ba0, 0x0, 0x0);
        gbc.writeMem(0x4b21, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0x8);
        EXPECT(gbc.c(),  0xbc);
        EXPECT(gbc.d(),  0xca);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0x6b);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0xae59);
        EXPECT(gbc.pc(), 0x4b23);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB ED 01D2
        gbc.setState(0x9c20, 0x3af1, 0x1860, 0xd404, 0xcece, 0xe23f, 0x0, 0x0);
        gbc.writeMem(0x9c20, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0xce);
        EXPECT(gbc.e(),  0xce);
        EXPECT(gbc.h(),  0xe2);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0x3af1);
        EXPECT(gbc.pc(), 0x9c22);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9c20), 0xcb);
        EXPECT(gbc.readMem(0x9c21), 0xed);
        // CB ED 01D3
        gbc.setState(0x29c8, 0xab13, 0xc4c0, 0x2494, 0x490d, 0xe3b1, 0x1, 0x1);
        gbc.writeMem(0x29c8, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0xc4);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0xd);
        EXPECT(gbc.h(),  0xe3);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0xab13);
        EXPECT(gbc.pc(), 0x29ca);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB ED 01D4
        gbc.setState(0x9264, 0x27a5, 0xba50, 0x9fd, 0x68b4, 0xb33e, 0x0, 0x1);
        gbc.writeMem(0x9264, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0xfd);
        EXPECT(gbc.d(),  0x68);
        EXPECT(gbc.e(),  0xb4);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0x27a5);
        EXPECT(gbc.pc(), 0x9266);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9264), 0xcb);
        EXPECT(gbc.readMem(0x9265), 0xed);
        // CB ED 01D5
        gbc.setState(0xd45, 0x71aa, 0xf250, 0x14b9, 0x723a, 0x6152, 0x0, 0x0);
        gbc.writeMem(0xd45, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0x61);
        EXPECT(gbc.l(),  0x72);
        EXPECT(gbc.sp(), 0x71aa);
        EXPECT(gbc.pc(), 0xd47);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB ED 01D6
        gbc.setState(0x71ec, 0x3647, 0x4410, 0xf3bc, 0x9fc0, 0xcfd0, 0x1, 0x0);
        gbc.writeMem(0x71ec, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0xf3);
        EXPECT(gbc.c(),  0xbc);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0xc0);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0x3647);
        EXPECT(gbc.pc(), 0x71ee);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB ED 01D7
        gbc.setState(0x9b71, 0x1881, 0xb50, 0x3b33, 0x966d, 0x943, 0x0, 0x1);
        gbc.writeMem(0x9b71, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0x3b);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0x6d);
        EXPECT(gbc.h(),  0x9);
        EXPECT(gbc.l(),  0x63);
        EXPECT(gbc.sp(), 0x1881);
        EXPECT(gbc.pc(), 0x9b73);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9b71), 0xcb);
        EXPECT(gbc.readMem(0x9b72), 0xed);
        // CB ED 01D8
        gbc.setState(0xae5e, 0x4dfb, 0x9f20, 0x61c6, 0x339c, 0xeca1, 0x1, 0x1);
        gbc.writeMem(0xae5e, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0x9f);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0xc6);
        EXPECT(gbc.d(),  0x33);
        EXPECT(gbc.e(),  0x9c);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0x4dfb);
        EXPECT(gbc.pc(), 0xae60);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xae5e), 0xcb);
        EXPECT(gbc.readMem(0xae5f), 0xed);
        // CB ED 01D9
        gbc.setState(0x1af9, 0xc50d, 0x8cf0, 0x6edf, 0xb710, 0x1136, 0x0, 0x0);
        gbc.writeMem(0x1af9, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0xdf);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0x11);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0xc50d);
        EXPECT(gbc.pc(), 0x1afb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB ED 01DA
        gbc.setState(0x6eaa, 0x3e15, 0xb710, 0x2901, 0xef30, 0x2407, 0x0, 0x0);
        gbc.writeMem(0x6eaa, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0x27);
        EXPECT(gbc.sp(), 0x3e15);
        EXPECT(gbc.pc(), 0x6eac);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB ED 01DB
        gbc.setState(0x3fdf, 0xbf3a, 0xeca0, 0x5b95, 0x93d9, 0x4500, 0x0, 0x0);
        gbc.writeMem(0x3fdf, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0x95);
        EXPECT(gbc.d(),  0x93);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0x45);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0xbf3a);
        EXPECT(gbc.pc(), 0x3fe1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB ED 01DC
        gbc.setState(0x3a04, 0xbd11, 0x62d0, 0xea7, 0x4e09, 0xf72f, 0x1, 0x0);
        gbc.writeMem(0x3a04, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0xa7);
        EXPECT(gbc.d(),  0x4e);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0xf7);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0xbd11);
        EXPECT(gbc.pc(), 0x3a06);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB ED 01DD
        gbc.setState(0xc38f, 0x797d, 0xe580, 0x4152, 0x7945, 0xce05, 0x0, 0x1);
        gbc.writeMem(0xc38f, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0xe5);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0x52);
        EXPECT(gbc.d(),  0x79);
        EXPECT(gbc.e(),  0x45);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0x797d);
        EXPECT(gbc.pc(), 0xc391);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc38f), 0xcb);
        EXPECT(gbc.readMem(0xc390), 0xed);
        // CB ED 01DE
        gbc.setState(0xaa7e, 0x8668, 0x550, 0x2e6a, 0x145, 0xdc25, 0x1, 0x1);
        gbc.writeMem(0xaa7e, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0x5);
        EXPECT(gbc.b(),  0x2e);
        EXPECT(gbc.c(),  0x6a);
        EXPECT(gbc.d(),  0x1);
        EXPECT(gbc.e(),  0x45);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0x8668);
        EXPECT(gbc.pc(), 0xaa80);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaa7e), 0xcb);
        EXPECT(gbc.readMem(0xaa7f), 0xed);
        // CB ED 01DF
        gbc.setState(0xd804, 0x5625, 0xddb0, 0xbd12, 0x6351, 0x6a91, 0x0, 0x0);
        gbc.writeMem(0xd804, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0xdd);
        EXPECT(gbc.b(),  0xbd);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0x63);
        EXPECT(gbc.e(),  0x51);
        EXPECT(gbc.h(),  0x6a);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0x5625);
        EXPECT(gbc.pc(), 0xd806);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd804), 0xcb);
        EXPECT(gbc.readMem(0xd805), 0xed);
        // CB ED 01E0
        gbc.setState(0xd4e1, 0x44f8, 0xcd80, 0x3ee8, 0x29b2, 0x1dc8, 0x0, 0x1);
        gbc.writeMem(0xd4e1, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0xe8);
        EXPECT(gbc.sp(), 0x44f8);
        EXPECT(gbc.pc(), 0xd4e3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd4e1), 0xcb);
        EXPECT(gbc.readMem(0xd4e2), 0xed);
        // CB ED 01E1
        gbc.setState(0x5442, 0x401e, 0x8f50, 0xbde, 0xfee5, 0xcbd1, 0x0, 0x1);
        gbc.writeMem(0x5442, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0x8f);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0xf1);
        EXPECT(gbc.sp(), 0x401e);
        EXPECT(gbc.pc(), 0x5444);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB ED 01E2
        gbc.setState(0xd37e, 0x1e81, 0x4ff0, 0x2a28, 0x8b86, 0x32a6, 0x0, 0x0);
        gbc.writeMem(0xd37e, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0xa6);
        EXPECT(gbc.sp(), 0x1e81);
        EXPECT(gbc.pc(), 0xd380);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd37e), 0xcb);
        EXPECT(gbc.readMem(0xd37f), 0xed);
        // CB ED 01E3
        gbc.setState(0xe475, 0x703e, 0x3db0, 0xc97d, 0xe257, 0xf56d, 0x1, 0x0);
        gbc.writeMem(0xe475, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0x3d);
        EXPECT(gbc.b(),  0xc9);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0xe2);
        EXPECT(gbc.e(),  0x57);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0x6d);
        EXPECT(gbc.sp(), 0x703e);
        EXPECT(gbc.pc(), 0xe477);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe475), 0xcb);
        EXPECT(gbc.readMem(0xe476), 0xed);
        // CB ED 01E4
        gbc.setState(0x3ab3, 0x511a, 0xf6a0, 0xbb29, 0x4bf9, 0xe7ca, 0x0, 0x1);
        gbc.writeMem(0x3ab3, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0xf6);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0x29);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0xf9);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0x511a);
        EXPECT(gbc.pc(), 0x3ab5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB ED 01E5
        gbc.setState(0x3f0b, 0x6559, 0xfa80, 0xd8b2, 0xe628, 0xef92, 0x0, 0x0);
        gbc.writeMem(0x3f0b, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0xfa);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0x28);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0x6559);
        EXPECT(gbc.pc(), 0x3f0d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB ED 01E6
        gbc.setState(0x823d, 0x9ee9, 0x40b0, 0xa763, 0x7b6, 0xce06, 0x0, 0x0);
        gbc.writeMem(0x823d, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0x40);
        EXPECT(gbc.b(),  0xa7);
        EXPECT(gbc.c(),  0x63);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0xb6);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0x9ee9);
        EXPECT(gbc.pc(), 0x823f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x823d), 0xcb);
        EXPECT(gbc.readMem(0x823e), 0xed);
        // CB ED 01E7
        gbc.setState(0xb242, 0xc0c8, 0x7ee0, 0x569f, 0xbeb1, 0x69a3, 0x1, 0x1);
        gbc.writeMem(0xb242, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0x56);
        EXPECT(gbc.c(),  0x9f);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0xb1);
        EXPECT(gbc.h(),  0x69);
        EXPECT(gbc.l(),  0xa3);
        EXPECT(gbc.sp(), 0xc0c8);
        EXPECT(gbc.pc(), 0xb244);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb242), 0xcb);
        EXPECT(gbc.readMem(0xb243), 0xed);
        // CB ED 01E8
        gbc.setState(0xc9c0, 0x5d3a, 0xaa00, 0x1fce, 0x6631, 0x26e2, 0x0, 0x0);
        gbc.writeMem(0xc9c0, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0xaa);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0x66);
        EXPECT(gbc.e(),  0x31);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0x5d3a);
        EXPECT(gbc.pc(), 0xc9c2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc9c0), 0xcb);
        EXPECT(gbc.readMem(0xc9c1), 0xed);
        // CB ED 01E9
        gbc.setState(0xc725, 0xe171, 0xaf40, 0xe486, 0x50a2, 0x1410, 0x1, 0x0);
        gbc.writeMem(0xc725, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0xaf);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0x50);
        EXPECT(gbc.e(),  0xa2);
        EXPECT(gbc.h(),  0x14);
        EXPECT(gbc.l(),  0x30);
        EXPECT(gbc.sp(), 0xe171);
        EXPECT(gbc.pc(), 0xc727);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc725), 0xcb);
        EXPECT(gbc.readMem(0xc726), 0xed);
        // CB ED 01EA
        gbc.setState(0xae11, 0x6c9e, 0xba80, 0x338b, 0x28ac, 0x3c3c, 0x0, 0x0);
        gbc.writeMem(0xae11, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0x8b);
        EXPECT(gbc.d(),  0x28);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0x6c9e);
        EXPECT(gbc.pc(), 0xae13);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xae11), 0xcb);
        EXPECT(gbc.readMem(0xae12), 0xed);
        // CB ED 01EB
        gbc.setState(0x6b10, 0x4e39, 0x1230, 0x4fc0, 0x3738, 0xc335, 0x1, 0x1);
        gbc.writeMem(0x6b10, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0x12);
        EXPECT(gbc.b(),  0x4f);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0x37);
        EXPECT(gbc.e(),  0x38);
        EXPECT(gbc.h(),  0xc3);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0x4e39);
        EXPECT(gbc.pc(), 0x6b12);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB ED 01EC
        gbc.setState(0x129, 0x7d7a, 0xe410, 0x9675, 0x6e5, 0x7d, 0x1, 0x0);
        gbc.writeMem(0x129, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0xe4);
        EXPECT(gbc.b(),  0x96);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0x6);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0x7d7a);
        EXPECT(gbc.pc(), 0x12b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB ED 01ED
        gbc.setState(0xc4c9, 0x2dba, 0x1590, 0xf802, 0xce9a, 0xdc32, 0x0, 0x1);
        gbc.writeMem(0xc4c9, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0x15);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0xce);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0x2dba);
        EXPECT(gbc.pc(), 0xc4cb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc4c9), 0xcb);
        EXPECT(gbc.readMem(0xc4ca), 0xed);
        // CB ED 01EE
        gbc.setState(0x491e, 0x5030, 0xe250, 0x27b, 0xe2a8, 0x5c2f, 0x0, 0x0);
        gbc.writeMem(0x491e, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0xe2);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0x5c);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0x5030);
        EXPECT(gbc.pc(), 0x4920);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB ED 01EF
        gbc.setState(0xee, 0x63c, 0xcdd0, 0xdb36, 0xe641, 0x8e5d, 0x1, 0x1);
        gbc.writeMem(0xee, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0xdb);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0x41);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0x63c);
        EXPECT(gbc.pc(), 0xf0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB ED 01F0
        gbc.setState(0x95f7, 0xd93f, 0x6100, 0x6d62, 0xa946, 0xe571, 0x0, 0x0);
        gbc.writeMem(0x95f7, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0xa9);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0xd93f);
        EXPECT(gbc.pc(), 0x95f9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x95f7), 0xcb);
        EXPECT(gbc.readMem(0x95f8), 0xed);
        // CB ED 01F1
        gbc.setState(0x44ec, 0x8043, 0x4f20, 0x4760, 0x4a, 0x7f1c, 0x1, 0x1);
        gbc.writeMem(0x44ec, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0x60);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0x7f);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0x8043);
        EXPECT(gbc.pc(), 0x44ee);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB ED 01F3
        gbc.setState(0xad29, 0x8590, 0xf190, 0x6cd5, 0x394c, 0x6f7e, 0x0, 0x1);
        gbc.writeMem(0xad29, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0xf1);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0x39);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0x6f);
        EXPECT(gbc.l(),  0x7e);
        EXPECT(gbc.sp(), 0x8590);
        EXPECT(gbc.pc(), 0xad2b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xad29), 0xcb);
        EXPECT(gbc.readMem(0xad2a), 0xed);
        // CB ED 01F4
        gbc.setState(0xe5aa, 0xf560, 0x4210, 0xb539, 0xacd2, 0xd667, 0x0, 0x1);
        gbc.writeMem(0xe5aa, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0x42);
        EXPECT(gbc.b(),  0xb5);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0x67);
        EXPECT(gbc.sp(), 0xf560);
        EXPECT(gbc.pc(), 0xe5ac);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe5aa), 0xcb);
        EXPECT(gbc.readMem(0xe5ab), 0xed);
        // CB ED 01F5
        gbc.setState(0xefc6, 0x7023, 0xf450, 0x40df, 0x8770, 0xcb09, 0x0, 0x1);
        gbc.writeMem(0xefc6, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0xdf);
        EXPECT(gbc.d(),  0x87);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0x7023);
        EXPECT(gbc.pc(), 0xefc8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xefc6), 0xcb);
        EXPECT(gbc.readMem(0xefc7), 0xed);
        // CB ED 01F6
        gbc.setState(0xe55, 0xb21e, 0x7970, 0x74fd, 0x6767, 0xbe76, 0x1, 0x1);
        gbc.writeMem(0xe55, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0xfd);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0x67);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0xb21e);
        EXPECT(gbc.pc(), 0xe57);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB ED 01F7
        gbc.setState(0x2050, 0x5bc4, 0xb150, 0x1216, 0x96a7, 0x46b6, 0x0, 0x1);
        gbc.writeMem(0x2050, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0xa7);
        EXPECT(gbc.h(),  0x46);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0x5bc4);
        EXPECT(gbc.pc(), 0x2052);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB ED 01F8
        gbc.setState(0x1c96, 0x8a1, 0x3010, 0xefeb, 0xf528, 0x8306, 0x1, 0x0);
        gbc.writeMem(0x1c96, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0xef);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0x28);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0x8a1);
        EXPECT(gbc.pc(), 0x1c98);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB ED 01F9
        gbc.setState(0xbb62, 0x1fe1, 0xbc10, 0x9922, 0x156a, 0xff9f, 0x1, 0x0);
        gbc.writeMem(0xbb62, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0x99);
        EXPECT(gbc.c(),  0x22);
        EXPECT(gbc.d(),  0x15);
        EXPECT(gbc.e(),  0x6a);
        EXPECT(gbc.h(),  0xff);
        EXPECT(gbc.l(),  0xbf);
        EXPECT(gbc.sp(), 0x1fe1);
        EXPECT(gbc.pc(), 0xbb64);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbb62), 0xcb);
        EXPECT(gbc.readMem(0xbb63), 0xed);
        // CB ED 01FA
        gbc.setState(0xa584, 0xf915, 0x83d0, 0x7d6f, 0xbc5a, 0x506f, 0x0, 0x1);
        gbc.writeMem(0xa584, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0x83);
        EXPECT(gbc.b(),  0x7d);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0xbc);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0xf915);
        EXPECT(gbc.pc(), 0xa586);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa584), 0xcb);
        EXPECT(gbc.readMem(0xa585), 0xed);
        // CB ED 01FB
        gbc.setState(0x8e01, 0xa270, 0x60c0, 0xe31d, 0xb8a6, 0xba11, 0x0, 0x1);
        gbc.writeMem(0x8e01, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0xb8);
        EXPECT(gbc.e(),  0xa6);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0xa270);
        EXPECT(gbc.pc(), 0x8e03);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8e01), 0xcb);
        EXPECT(gbc.readMem(0x8e02), 0xed);
        // CB ED 01FC
        gbc.setState(0x3013, 0x20c3, 0x67c0, 0x86a5, 0x632c, 0xc281, 0x0, 0x0);
        gbc.writeMem(0x3013, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0x67);
        EXPECT(gbc.b(),  0x86);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0x63);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0x20c3);
        EXPECT(gbc.pc(), 0x3015);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB ED 01FD
        gbc.setState(0xb0b1, 0xc4f7, 0xc840, 0xe40e, 0x6331, 0xc666, 0x1, 0x0);
        gbc.writeMem(0xb0b1, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0x63);
        EXPECT(gbc.e(),  0x31);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0xc4f7);
        EXPECT(gbc.pc(), 0xb0b3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb0b1), 0xcb);
        EXPECT(gbc.readMem(0xb0b2), 0xed);
        // CB ED 01FE
        gbc.setState(0xd0e4, 0xa4d9, 0x7d70, 0x409b, 0x1362, 0x81a7, 0x0, 0x0);
        gbc.writeMem(0xd0e4, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0x7d);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0x9b);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0xa4d9);
        EXPECT(gbc.pc(), 0xd0e6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd0e4), 0xcb);
        EXPECT(gbc.readMem(0xd0e5), 0xed);
        // CB ED 01FF
        gbc.setState(0x2641, 0xa595, 0xe620, 0xf7f, 0x6208, 0xeb3a, 0x1, 0x1);
        gbc.writeMem(0x2641, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0xf);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0x62);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0xa595);
        EXPECT(gbc.pc(), 0x2643);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB ED 0200
        gbc.setState(0xab2, 0xd1f5, 0xb200, 0x8677, 0xa23b, 0xcfd3, 0x1, 0x0);
        gbc.writeMem(0xab2, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0xb2);
        EXPECT(gbc.b(),  0x86);
        EXPECT(gbc.c(),  0x77);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0x3b);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0xd1f5);
        EXPECT(gbc.pc(), 0xab4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB ED 0201
        gbc.setState(0xcbf, 0x6a29, 0x94c0, 0x3f2b, 0xcc16, 0x4059, 0x1, 0x0);
        gbc.writeMem(0xcbf, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0x94);
        EXPECT(gbc.b(),  0x3f);
        EXPECT(gbc.c(),  0x2b);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0x40);
        EXPECT(gbc.l(),  0x79);
        EXPECT(gbc.sp(), 0x6a29);
        EXPECT(gbc.pc(), 0xcc1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB ED 0202
        gbc.setState(0x36b8, 0xbd6d, 0xb040, 0xac0f, 0x4683, 0x6e25, 0x0, 0x1);
        gbc.writeMem(0x36b8, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0xac);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0x46);
        EXPECT(gbc.e(),  0x83);
        EXPECT(gbc.h(),  0x6e);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0xbd6d);
        EXPECT(gbc.pc(), 0x36ba);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB ED 0203
        gbc.setState(0x39a1, 0x6f0e, 0xc110, 0x6d2b, 0x52c3, 0xb138, 0x1, 0x1);
        gbc.writeMem(0x39a1, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0xc1);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0x2b);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0xc3);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0x6f0e);
        EXPECT(gbc.pc(), 0x39a3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB ED 0204
        gbc.setState(0xec87, 0x560f, 0xad0, 0xd3d9, 0x34d9, 0xcb91, 0x0, 0x1);
        gbc.writeMem(0xec87, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0xd9);
        EXPECT(gbc.d(),  0x34);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0x560f);
        EXPECT(gbc.pc(), 0xec89);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xec87), 0xcb);
        EXPECT(gbc.readMem(0xec88), 0xed);
        // CB ED 0205
        gbc.setState(0x2537, 0x23d7, 0xf880, 0xd75, 0x8bf6, 0xa542, 0x1, 0x1);
        gbc.writeMem(0x2537, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0xd);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0xf6);
        EXPECT(gbc.h(),  0xa5);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0x23d7);
        EXPECT(gbc.pc(), 0x2539);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB ED 0206
        gbc.setState(0x4874, 0x7877, 0x4cf0, 0x4300, 0xe732, 0xde41, 0x1, 0x1);
        gbc.writeMem(0x4874, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0x4c);
        EXPECT(gbc.b(),  0x43);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0xe7);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0x61);
        EXPECT(gbc.sp(), 0x7877);
        EXPECT(gbc.pc(), 0x4876);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB ED 0207
        gbc.setState(0x439e, 0x7514, 0x6250, 0x9fc7, 0x2076, 0x1670, 0x1, 0x0);
        gbc.writeMem(0x439e, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0x9f);
        EXPECT(gbc.c(),  0xc7);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0x76);
        EXPECT(gbc.h(),  0x16);
        EXPECT(gbc.l(),  0x70);
        EXPECT(gbc.sp(), 0x7514);
        EXPECT(gbc.pc(), 0x43a0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB ED 0208
        gbc.setState(0xdd18, 0x5716, 0x9850, 0xdcb9, 0x2507, 0xfed8, 0x0, 0x1);
        gbc.writeMem(0xdd18, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0x98);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0x25);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0x5716);
        EXPECT(gbc.pc(), 0xdd1a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdd18), 0xcb);
        EXPECT(gbc.readMem(0xdd19), 0xed);
        // CB ED 0209
        gbc.setState(0x4a41, 0x600a, 0x5c30, 0x8a98, 0xf90, 0xb991, 0x1, 0x1);
        gbc.writeMem(0x4a41, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0x600a);
        EXPECT(gbc.pc(), 0x4a43);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB ED 020A
        gbc.setState(0xdbb6, 0x2e65, 0x9550, 0xca90, 0xf516, 0x31d1, 0x0, 0x0);
        gbc.writeMem(0xdbb6, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0x95);
        EXPECT(gbc.b(),  0xca);
        EXPECT(gbc.c(),  0x90);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0xf1);
        EXPECT(gbc.sp(), 0x2e65);
        EXPECT(gbc.pc(), 0xdbb8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdbb6), 0xcb);
        EXPECT(gbc.readMem(0xdbb7), 0xed);
        // CB ED 020B
        gbc.setState(0xb60a, 0xfc25, 0x3380, 0x97aa, 0xe367, 0x66bf, 0x0, 0x0);
        gbc.writeMem(0xb60a, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0x97);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0xe3);
        EXPECT(gbc.e(),  0x67);
        EXPECT(gbc.h(),  0x66);
        EXPECT(gbc.l(),  0xbf);
        EXPECT(gbc.sp(), 0xfc25);
        EXPECT(gbc.pc(), 0xb60c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb60a), 0xcb);
        EXPECT(gbc.readMem(0xb60b), 0xed);
        // CB ED 020C
        gbc.setState(0xdad3, 0x5873, 0xd600, 0x4a63, 0x5e5, 0xa535, 0x0, 0x1);
        gbc.writeMem(0xdad3, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0x4a);
        EXPECT(gbc.c(),  0x63);
        EXPECT(gbc.d(),  0x5);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0xa5);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0x5873);
        EXPECT(gbc.pc(), 0xdad5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdad3), 0xcb);
        EXPECT(gbc.readMem(0xdad4), 0xed);
        // CB ED 020D
        gbc.setState(0xa521, 0x63c7, 0x8730, 0x49dd, 0x492e, 0x637a, 0x1, 0x0);
        gbc.writeMem(0xa521, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0x87);
        EXPECT(gbc.b(),  0x49);
        EXPECT(gbc.c(),  0xdd);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0x63);
        EXPECT(gbc.l(),  0x7a);
        EXPECT(gbc.sp(), 0x63c7);
        EXPECT(gbc.pc(), 0xa523);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa521), 0xcb);
        EXPECT(gbc.readMem(0xa522), 0xed);
        // CB ED 020E
        gbc.setState(0x7617, 0x374c, 0x2a0, 0xdaf, 0x292f, 0x8271, 0x0, 0x1);
        gbc.writeMem(0x7617, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0xd);
        EXPECT(gbc.c(),  0xaf);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0x2f);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0x374c);
        EXPECT(gbc.pc(), 0x7619);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB ED 020F
        gbc.setState(0xa521, 0x435c, 0xfd10, 0x8f35, 0xd77a, 0x241d, 0x1, 0x1);
        gbc.writeMem(0xa521, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0xfd);
        EXPECT(gbc.b(),  0x8f);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0x7a);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0x435c);
        EXPECT(gbc.pc(), 0xa523);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa521), 0xcb);
        EXPECT(gbc.readMem(0xa522), 0xed);
        // CB ED 0210
        gbc.setState(0x2f77, 0xfc47, 0xac90, 0x36bd, 0x6dee, 0x9bf3, 0x1, 0x1);
        gbc.writeMem(0x2f77, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0xac);
        EXPECT(gbc.b(),  0x36);
        EXPECT(gbc.c(),  0xbd);
        EXPECT(gbc.d(),  0x6d);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0xfc47);
        EXPECT(gbc.pc(), 0x2f79);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB ED 0211
        gbc.setState(0xe200, 0x8604, 0x8760, 0x92e, 0x312a, 0x3b7a, 0x0, 0x0);
        gbc.writeMem(0xe200, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0x87);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0x2e);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0x3b);
        EXPECT(gbc.l(),  0x7a);
        EXPECT(gbc.sp(), 0x8604);
        EXPECT(gbc.pc(), 0xe202);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe200), 0xcb);
        EXPECT(gbc.readMem(0xe201), 0xed);
        // CB ED 0212
        gbc.setState(0xaf0a, 0x598a, 0x7bd0, 0xcfa4, 0x776a, 0x61c4, 0x1, 0x1);
        gbc.writeMem(0xaf0a, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0xcf);
        EXPECT(gbc.c(),  0xa4);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0x6a);
        EXPECT(gbc.h(),  0x61);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0x598a);
        EXPECT(gbc.pc(), 0xaf0c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaf0a), 0xcb);
        EXPECT(gbc.readMem(0xaf0b), 0xed);
        // CB ED 0213
        gbc.setState(0x42f4, 0xb85d, 0x5400, 0x53c7, 0x20ed, 0xc87, 0x0, 0x0);
        gbc.writeMem(0x42f4, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0x54);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0xc7);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0xed);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0xb85d);
        EXPECT(gbc.pc(), 0x42f6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB ED 0214
        gbc.setState(0x1606, 0xe902, 0xf910, 0x550f, 0x30ed, 0x5099, 0x0, 0x0);
        gbc.writeMem(0x1606, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0xf9);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0xed);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0xe902);
        EXPECT(gbc.pc(), 0x1608);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB ED 0216
        gbc.setState(0x3002, 0xfda0, 0xb7e0, 0x5c26, 0x5cb2, 0x6082, 0x0, 0x1);
        gbc.writeMem(0x3002, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0x5c);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0x5c);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0x60);
        EXPECT(gbc.l(),  0xa2);
        EXPECT(gbc.sp(), 0xfda0);
        EXPECT(gbc.pc(), 0x3004);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB ED 0217
        gbc.setState(0xe9c9, 0xa8db, 0xe430, 0xe025, 0x5836, 0x7d47, 0x0, 0x1);
        gbc.writeMem(0xe9c9, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0xe4);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0x67);
        EXPECT(gbc.sp(), 0xa8db);
        EXPECT(gbc.pc(), 0xe9cb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe9c9), 0xcb);
        EXPECT(gbc.readMem(0xe9ca), 0xed);
        // CB ED 0218
        gbc.setState(0x8277, 0x39fc, 0x3ae0, 0xf54b, 0xf2ce, 0xbf51, 0x0, 0x1);
        gbc.writeMem(0x8277, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0x4b);
        EXPECT(gbc.d(),  0xf2);
        EXPECT(gbc.e(),  0xce);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0x39fc);
        EXPECT(gbc.pc(), 0x8279);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8277), 0xcb);
        EXPECT(gbc.readMem(0x8278), 0xed);
        // CB ED 0219
        gbc.setState(0xe2ec, 0x5a31, 0x98b0, 0xd353, 0x891c, 0x6229, 0x0, 0x0);
        gbc.writeMem(0xe2ec, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0x98);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0x53);
        EXPECT(gbc.d(),  0x89);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0x62);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0x5a31);
        EXPECT(gbc.pc(), 0xe2ee);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe2ec), 0xcb);
        EXPECT(gbc.readMem(0xe2ed), 0xed);
        // CB ED 021A
        gbc.setState(0x93, 0x1c2f, 0x56f0, 0xe1e6, 0x271f, 0x4839, 0x0, 0x0);
        gbc.writeMem(0x93, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0x27);
        EXPECT(gbc.e(),  0x1f);
        EXPECT(gbc.h(),  0x48);
        EXPECT(gbc.l(),  0x39);
        EXPECT(gbc.sp(), 0x1c2f);
        EXPECT(gbc.pc(), 0x95);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB ED 021B
        gbc.setState(0xa696, 0x3c29, 0x64d0, 0xecf4, 0xc95b, 0xd202, 0x1, 0x0);
        gbc.writeMem(0xa696, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0xf4);
        EXPECT(gbc.d(),  0xc9);
        EXPECT(gbc.e(),  0x5b);
        EXPECT(gbc.h(),  0xd2);
        EXPECT(gbc.l(),  0x22);
        EXPECT(gbc.sp(), 0x3c29);
        EXPECT(gbc.pc(), 0xa698);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa696), 0xcb);
        EXPECT(gbc.readMem(0xa697), 0xed);
        // CB ED 021C
        gbc.setState(0x4f94, 0x1128, 0xe130, 0x33d5, 0x2d8e, 0x6f40, 0x1, 0x1);
        gbc.writeMem(0x4f94, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0xe1);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0x6f);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0x1128);
        EXPECT(gbc.pc(), 0x4f96);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB ED 021D
        gbc.setState(0x11c2, 0x3f3c, 0xdb20, 0xe562, 0x5c4c, 0xae4a, 0x0, 0x0);
        gbc.writeMem(0x11c2, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0xdb);
        EXPECT(gbc.b(),  0xe5);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0x5c);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0x3f3c);
        EXPECT(gbc.pc(), 0x11c4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB ED 021E
        gbc.setState(0x9fa, 0xafb2, 0x2c0, 0xd582, 0x1edc, 0xea00, 0x0, 0x0);
        gbc.writeMem(0x9fa, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0xd5);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0x1e);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0xea);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0xafb2);
        EXPECT(gbc.pc(), 0x9fc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB ED 021F
        gbc.setState(0xdef0, 0x23aa, 0xc120, 0xa8a7, 0xe70d, 0xf5c7, 0x0, 0x0);
        gbc.writeMem(0xdef0, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0xc1);
        EXPECT(gbc.b(),  0xa8);
        EXPECT(gbc.c(),  0xa7);
        EXPECT(gbc.d(),  0xe7);
        EXPECT(gbc.e(),  0xd);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0x23aa);
        EXPECT(gbc.pc(), 0xdef2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdef0), 0xcb);
        EXPECT(gbc.readMem(0xdef1), 0xed);
        // CB ED 0220
        gbc.setState(0x75f4, 0x297d, 0xc1f0, 0x7d87, 0xa736, 0x55da, 0x1, 0x0);
        gbc.writeMem(0x75f4, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0xc1);
        EXPECT(gbc.b(),  0x7d);
        EXPECT(gbc.c(),  0x87);
        EXPECT(gbc.d(),  0xa7);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0x297d);
        EXPECT(gbc.pc(), 0x75f6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB ED 0221
        gbc.setState(0x5290, 0x2b1b, 0x7780, 0xcc66, 0xfc8d, 0xdd18, 0x0, 0x1);
        gbc.writeMem(0x5290, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0xcc);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0x2b1b);
        EXPECT(gbc.pc(), 0x5292);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB ED 0222
        gbc.setState(0xefa, 0x784b, 0x9260, 0x3647, 0xc1ff, 0xdcab, 0x0, 0x0);
        gbc.writeMem(0xefa, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0x36);
        EXPECT(gbc.c(),  0x47);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0xff);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0x784b);
        EXPECT(gbc.pc(), 0xefc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB ED 0223
        gbc.setState(0x6ae9, 0x2e41, 0x9930, 0x213f, 0x9eb3, 0x1237, 0x0, 0x0);
        gbc.writeMem(0x6ae9, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0x99);
        EXPECT(gbc.b(),  0x21);
        EXPECT(gbc.c(),  0x3f);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0xb3);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0x2e41);
        EXPECT(gbc.pc(), 0x6aeb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB ED 0224
        gbc.setState(0x4dcb, 0x7daf, 0x8350, 0x7319, 0x3356, 0x6132, 0x0, 0x1);
        gbc.writeMem(0x4dcb, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0x83);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0x33);
        EXPECT(gbc.e(),  0x56);
        EXPECT(gbc.h(),  0x61);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0x7daf);
        EXPECT(gbc.pc(), 0x4dcd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB ED 0225
        gbc.setState(0xbe56, 0x3c7b, 0xfe10, 0xa776, 0x7ff3, 0x449d, 0x1, 0x1);
        gbc.writeMem(0xbe56, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0xa7);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0x44);
        EXPECT(gbc.l(),  0xbd);
        EXPECT(gbc.sp(), 0x3c7b);
        EXPECT(gbc.pc(), 0xbe58);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbe56), 0xcb);
        EXPECT(gbc.readMem(0xbe57), 0xed);
        // CB ED 0226
        gbc.setState(0x4e6d, 0x3ed7, 0xb7a0, 0xa36a, 0xeab1, 0x4909, 0x1, 0x0);
        gbc.writeMem(0x4e6d, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0xa3);
        EXPECT(gbc.c(),  0x6a);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0xb1);
        EXPECT(gbc.h(),  0x49);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0x3ed7);
        EXPECT(gbc.pc(), 0x4e6f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB ED 0228
        gbc.setState(0xfd8, 0x3946, 0x61a0, 0xf8ed, 0x1181, 0x228e, 0x1, 0x1);
        gbc.writeMem(0xfd8, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0xed);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0x81);
        EXPECT(gbc.h(),  0x22);
        EXPECT(gbc.l(),  0xae);
        EXPECT(gbc.sp(), 0x3946);
        EXPECT(gbc.pc(), 0xfda);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB ED 0229
        gbc.setState(0xdd35, 0xabf2, 0x9c90, 0x1bb2, 0xb6a4, 0xb868, 0x1, 0x0);
        gbc.writeMem(0xdd35, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0x9c);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0xa4);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0x68);
        EXPECT(gbc.sp(), 0xabf2);
        EXPECT(gbc.pc(), 0xdd37);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdd35), 0xcb);
        EXPECT(gbc.readMem(0xdd36), 0xed);
        // CB ED 022A
        gbc.setState(0x8273, 0xe53e, 0xda50, 0x7147, 0xd0b9, 0xf140, 0x1, 0x0);
        gbc.writeMem(0x8273, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0x47);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0xf1);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0xe53e);
        EXPECT(gbc.pc(), 0x8275);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8273), 0xcb);
        EXPECT(gbc.readMem(0x8274), 0xed);
        // CB ED 022B
        gbc.setState(0x60ef, 0x70ed, 0xc990, 0x368a, 0x1b53, 0xc523, 0x1, 0x1);
        gbc.writeMem(0x60ef, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0xc9);
        EXPECT(gbc.b(),  0x36);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0x53);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0x23);
        EXPECT(gbc.sp(), 0x70ed);
        EXPECT(gbc.pc(), 0x60f1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB ED 022C
        gbc.setState(0xdee9, 0x5354, 0x21f0, 0x899, 0x2bf2, 0xaebb, 0x0, 0x1);
        gbc.writeMem(0xdee9, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0x8);
        EXPECT(gbc.c(),  0x99);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0xbb);
        EXPECT(gbc.sp(), 0x5354);
        EXPECT(gbc.pc(), 0xdeeb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdee9), 0xcb);
        EXPECT(gbc.readMem(0xdeea), 0xed);
        // CB ED 022D
        gbc.setState(0x8326, 0xc38d, 0xc10, 0xf826, 0xbe37, 0x88e3, 0x1, 0x0);
        gbc.writeMem(0x8326, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0xe3);
        EXPECT(gbc.sp(), 0xc38d);
        EXPECT(gbc.pc(), 0x8328);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8326), 0xcb);
        EXPECT(gbc.readMem(0x8327), 0xed);
        // CB ED 022E
        gbc.setState(0xacde, 0x6ba7, 0xcf90, 0x35e9, 0xcab2, 0x94d3, 0x1, 0x0);
        gbc.writeMem(0xacde, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0xcf);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0xe9);
        EXPECT(gbc.d(),  0xca);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0x6ba7);
        EXPECT(gbc.pc(), 0xace0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xacde), 0xcb);
        EXPECT(gbc.readMem(0xacdf), 0xed);
        // CB ED 022F
        gbc.setState(0xe02d, 0x4916, 0x8260, 0xe627, 0x457, 0x6ec1, 0x1, 0x0);
        gbc.writeMem(0xe02d, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0x82);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0x57);
        EXPECT(gbc.h(),  0x6e);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0x4916);
        EXPECT(gbc.pc(), 0xe02f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe02d), 0xcb);
        EXPECT(gbc.readMem(0xe02e), 0xed);
        // CB ED 0230
        gbc.setState(0x97ae, 0x585d, 0xf9d0, 0x9e01, 0xfbd5, 0x79cb, 0x0, 0x0);
        gbc.writeMem(0x97ae, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0xf9);
        EXPECT(gbc.b(),  0x9e);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0xfb);
        EXPECT(gbc.e(),  0xd5);
        EXPECT(gbc.h(),  0x79);
        EXPECT(gbc.l(),  0xeb);
        EXPECT(gbc.sp(), 0x585d);
        EXPECT(gbc.pc(), 0x97b0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x97ae), 0xcb);
        EXPECT(gbc.readMem(0x97af), 0xed);
        // CB ED 0231
        gbc.setState(0x7e72, 0xbab3, 0x36f0, 0x4519, 0xd621, 0x6b19, 0x1, 0x1);
        gbc.writeMem(0x7e72, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0x36);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0x6b);
        EXPECT(gbc.l(),  0x39);
        EXPECT(gbc.sp(), 0xbab3);
        EXPECT(gbc.pc(), 0x7e74);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB ED 0232
        gbc.setState(0xe36e, 0x47c9, 0x3180, 0x1bfe, 0xa901, 0x74e8, 0x1, 0x0);
        gbc.writeMem(0xe36e, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0x31);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0xa9);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0x74);
        EXPECT(gbc.l(),  0xe8);
        EXPECT(gbc.sp(), 0x47c9);
        EXPECT(gbc.pc(), 0xe370);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe36e), 0xcb);
        EXPECT(gbc.readMem(0xe36f), 0xed);
        // CB ED 0233
        gbc.setState(0x5f0, 0x4f0c, 0x740, 0x10c6, 0x7a98, 0xe3e, 0x0, 0x1);
        gbc.writeMem(0x5f0, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0xc6);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0x98);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0x4f0c);
        EXPECT(gbc.pc(), 0x5f2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB ED 0234
        gbc.setState(0x26ba, 0xbc68, 0x8570, 0xe644, 0x561b, 0xe5a6, 0x0, 0x1);
        gbc.writeMem(0x26ba, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0x85);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0x56);
        EXPECT(gbc.e(),  0x1b);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0xa6);
        EXPECT(gbc.sp(), 0xbc68);
        EXPECT(gbc.pc(), 0x26bc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB ED 0235
        gbc.setState(0x600c, 0x148d, 0x5c40, 0x5a7, 0x7dd1, 0x2822, 0x0, 0x0);
        gbc.writeMem(0x600c, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0xa7);
        EXPECT(gbc.d(),  0x7d);
        EXPECT(gbc.e(),  0xd1);
        EXPECT(gbc.h(),  0x28);
        EXPECT(gbc.l(),  0x22);
        EXPECT(gbc.sp(), 0x148d);
        EXPECT(gbc.pc(), 0x600e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB ED 0236
        gbc.setState(0xd71d, 0xfb10, 0xd1b0, 0x6b71, 0x64b2, 0xb286, 0x0, 0x1);
        gbc.writeMem(0xd71d, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0xd1);
        EXPECT(gbc.b(),  0x6b);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0xa6);
        EXPECT(gbc.sp(), 0xfb10);
        EXPECT(gbc.pc(), 0xd71f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd71d), 0xcb);
        EXPECT(gbc.readMem(0xd71e), 0xed);
        // CB ED 0237
        gbc.setState(0x337d, 0xbc5f, 0x430, 0x4ccb, 0xbf79, 0x9009, 0x1, 0x0);
        gbc.writeMem(0x337d, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0x4);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0xbf);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0x90);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0xbc5f);
        EXPECT(gbc.pc(), 0x337f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB ED 0238
        gbc.setState(0xcdb9, 0xd206, 0x3de0, 0x9296, 0xeabc, 0xf25e, 0x0, 0x1);
        gbc.writeMem(0xcdb9, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0x3d);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0x96);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0x7e);
        EXPECT(gbc.sp(), 0xd206);
        EXPECT(gbc.pc(), 0xcdbb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcdb9), 0xcb);
        EXPECT(gbc.readMem(0xcdba), 0xed);
        // CB ED 0239
        gbc.setState(0x1a1a, 0x6c3c, 0xfa20, 0xdca0, 0x741a, 0xad94, 0x0, 0x1);
        gbc.writeMem(0x1a1a, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0xfa);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0xa0);
        EXPECT(gbc.d(),  0x74);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0x6c3c);
        EXPECT(gbc.pc(), 0x1a1c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB ED 023A
        gbc.setState(0x2de2, 0x4e54, 0x7980, 0xfb10, 0xed36, 0xe879, 0x0, 0x1);
        gbc.writeMem(0x2de2, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0xfb);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0xed);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0x79);
        EXPECT(gbc.sp(), 0x4e54);
        EXPECT(gbc.pc(), 0x2de4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB ED 023B
        gbc.setState(0xddda, 0x6772, 0xd5d0, 0x341f, 0x7d6f, 0x17dd, 0x0, 0x1);
        gbc.writeMem(0xddda, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0xd5);
        EXPECT(gbc.b(),  0x34);
        EXPECT(gbc.c(),  0x1f);
        EXPECT(gbc.d(),  0x7d);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0x6772);
        EXPECT(gbc.pc(), 0xdddc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xddda), 0xcb);
        EXPECT(gbc.readMem(0xdddb), 0xed);
        // CB ED 023C
        gbc.setState(0x6c87, 0x8d94, 0xd4a0, 0x38aa, 0x37eb, 0x8d44, 0x1, 0x1);
        gbc.writeMem(0x6c87, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0x38);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0x37);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0x8d);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0x8d94);
        EXPECT(gbc.pc(), 0x6c89);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB ED 023D
        gbc.setState(0x9cc5, 0x43e9, 0x7640, 0x7b20, 0xd18e, 0x9a3, 0x0, 0x0);
        gbc.writeMem(0x9cc5, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0x7b);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0x9);
        EXPECT(gbc.l(),  0xa3);
        EXPECT(gbc.sp(), 0x43e9);
        EXPECT(gbc.pc(), 0x9cc7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9cc5), 0xcb);
        EXPECT(gbc.readMem(0x9cc6), 0xed);
        // CB ED 023E
        gbc.setState(0x9587, 0x87ef, 0xd340, 0x8bd9, 0xfc6e, 0xdb0d, 0x1, 0x0);
        gbc.writeMem(0x9587, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0xd3);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0xd9);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0x6e);
        EXPECT(gbc.h(),  0xdb);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0x87ef);
        EXPECT(gbc.pc(), 0x9589);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9587), 0xcb);
        EXPECT(gbc.readMem(0x9588), 0xed);
        // CB ED 023F
        gbc.setState(0xee3e, 0xc45e, 0x6ce0, 0x5cb, 0x2b54, 0xd6f2, 0x1, 0x0);
        gbc.writeMem(0xee3e, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0xf2);
        EXPECT(gbc.sp(), 0xc45e);
        EXPECT(gbc.pc(), 0xee40);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xee3e), 0xcb);
        EXPECT(gbc.readMem(0xee3f), 0xed);
        // CB ED 0240
        gbc.setState(0x772d, 0xaa11, 0x7320, 0x7004, 0xd914, 0xc7cf, 0x0, 0x0);
        gbc.writeMem(0x772d, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0x73);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0xd9);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0xef);
        EXPECT(gbc.sp(), 0xaa11);
        EXPECT(gbc.pc(), 0x772f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB ED 0241
        gbc.setState(0x581d, 0x1709, 0x5c70, 0xb0e5, 0x540f, 0x5efa, 0x1, 0x0);
        gbc.writeMem(0x581d, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0xb0);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0x54);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0x5e);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0x1709);
        EXPECT(gbc.pc(), 0x581f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB ED 0242
        gbc.setState(0x73a8, 0x29dc, 0x4cc0, 0xd061, 0x7db6, 0x7077, 0x0, 0x1);
        gbc.writeMem(0x73a8, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0x4c);
        EXPECT(gbc.b(),  0xd0);
        EXPECT(gbc.c(),  0x61);
        EXPECT(gbc.d(),  0x7d);
        EXPECT(gbc.e(),  0xb6);
        EXPECT(gbc.h(),  0x70);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0x29dc);
        EXPECT(gbc.pc(), 0x73aa);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB ED 0243
        gbc.setState(0x7c6b, 0x8b5b, 0xd570, 0xaf14, 0xb3cd, 0xba1d, 0x0, 0x1);
        gbc.writeMem(0x7c6b, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0xd5);
        EXPECT(gbc.b(),  0xaf);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0xb3);
        EXPECT(gbc.e(),  0xcd);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0x8b5b);
        EXPECT(gbc.pc(), 0x7c6d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB ED 0244
        gbc.setState(0x48b2, 0xcb26, 0xf730, 0x4529, 0xf5bc, 0xe014, 0x1, 0x1);
        gbc.writeMem(0x48b2, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0x29);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0xcb26);
        EXPECT(gbc.pc(), 0x48b4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB ED 0245
        gbc.setState(0x7e8d, 0x8a0d, 0xaff0, 0x9eba, 0x6b4a, 0xab9e, 0x1, 0x0);
        gbc.writeMem(0x7e8d, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0xaf);
        EXPECT(gbc.b(),  0x9e);
        EXPECT(gbc.c(),  0xba);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0xbe);
        EXPECT(gbc.sp(), 0x8a0d);
        EXPECT(gbc.pc(), 0x7e8f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB ED 0246
        gbc.setState(0x6257, 0x5be, 0xdfd0, 0xeb73, 0x6237, 0xda60, 0x0, 0x1);
        gbc.writeMem(0x6257, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0xdf);
        EXPECT(gbc.b(),  0xeb);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0x62);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0x5be);
        EXPECT(gbc.pc(), 0x6259);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB ED 0248
        gbc.setState(0x8289, 0xdeeb, 0x99d0, 0xc69e, 0xf9ba, 0xb979, 0x0, 0x1);
        gbc.writeMem(0x8289, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0x99);
        EXPECT(gbc.b(),  0xc6);
        EXPECT(gbc.c(),  0x9e);
        EXPECT(gbc.d(),  0xf9);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0x79);
        EXPECT(gbc.sp(), 0xdeeb);
        EXPECT(gbc.pc(), 0x828b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8289), 0xcb);
        EXPECT(gbc.readMem(0x828a), 0xed);
        // CB ED 0249
        gbc.setState(0xcd06, 0xf0ea, 0xb6a0, 0xa0ef, 0x5bd9, 0xb8c1, 0x1, 0x0);
        gbc.writeMem(0xcd06, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0xf0ea);
        EXPECT(gbc.pc(), 0xcd08);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcd06), 0xcb);
        EXPECT(gbc.readMem(0xcd07), 0xed);
        // CB ED 024A
        gbc.setState(0xca0a, 0x42e8, 0x1c10, 0xd573, 0x38e6, 0xad69, 0x1, 0x1);
        gbc.writeMem(0xca0a, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0x1c);
        EXPECT(gbc.b(),  0xd5);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0x38);
        EXPECT(gbc.e(),  0xe6);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0x42e8);
        EXPECT(gbc.pc(), 0xca0c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xca0a), 0xcb);
        EXPECT(gbc.readMem(0xca0b), 0xed);
        // CB ED 024B
        gbc.setState(0xbd35, 0x94ee, 0xf0, 0x4486, 0xd193, 0x28a8, 0x0, 0x1);
        gbc.writeMem(0xbd35, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x44);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0x28);
        EXPECT(gbc.l(),  0xa8);
        EXPECT(gbc.sp(), 0x94ee);
        EXPECT(gbc.pc(), 0xbd37);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbd35), 0xcb);
        EXPECT(gbc.readMem(0xbd36), 0xed);
        // CB ED 024C
        gbc.setState(0x979c, 0x65f5, 0x7210, 0xa422, 0xa210, 0xf462, 0x0, 0x1);
        gbc.writeMem(0x979c, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0xa4);
        EXPECT(gbc.c(),  0x22);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0xf4);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0x65f5);
        EXPECT(gbc.pc(), 0x979e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x979c), 0xcb);
        EXPECT(gbc.readMem(0x979d), 0xed);
        // CB ED 024D
        gbc.setState(0xc18e, 0xb87d, 0xb0, 0xd43a, 0x5899, 0x1465, 0x1, 0x0);
        gbc.writeMem(0xc18e, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0x99);
        EXPECT(gbc.h(),  0x14);
        EXPECT(gbc.l(),  0x65);
        EXPECT(gbc.sp(), 0xb87d);
        EXPECT(gbc.pc(), 0xc190);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc18e), 0xcb);
        EXPECT(gbc.readMem(0xc18f), 0xed);
        // CB ED 024E
        gbc.setState(0xa40f, 0x51ec, 0x6bf0, 0x5eed, 0x2f3b, 0x2629, 0x1, 0x1);
        gbc.writeMem(0xa40f, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0xed);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0x3b);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0x51ec);
        EXPECT(gbc.pc(), 0xa411);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa40f), 0xcb);
        EXPECT(gbc.readMem(0xa410), 0xed);
        // CB ED 024F
        gbc.setState(0x2ad2, 0xe6d9, 0x46f0, 0xd037, 0x39bd, 0x5863, 0x1, 0x0);
        gbc.writeMem(0x2ad2, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0x46);
        EXPECT(gbc.b(),  0xd0);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0x39);
        EXPECT(gbc.e(),  0xbd);
        EXPECT(gbc.h(),  0x58);
        EXPECT(gbc.l(),  0x63);
        EXPECT(gbc.sp(), 0xe6d9);
        EXPECT(gbc.pc(), 0x2ad4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB ED 0252
        gbc.setState(0x7912, 0xa467, 0xbcb0, 0x75b7, 0x48ee, 0xf743, 0x1, 0x1);
        gbc.writeMem(0x7912, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0x75);
        EXPECT(gbc.c(),  0xb7);
        EXPECT(gbc.d(),  0x48);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0xf7);
        EXPECT(gbc.l(),  0x63);
        EXPECT(gbc.sp(), 0xa467);
        EXPECT(gbc.pc(), 0x7914);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB ED 0253
        gbc.setState(0xdb1f, 0xc65a, 0x5bf0, 0x1849, 0xbf07, 0xfa0b, 0x0, 0x1);
        gbc.writeMem(0xdb1f, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0x18);
        EXPECT(gbc.c(),  0x49);
        EXPECT(gbc.d(),  0xbf);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0x2b);
        EXPECT(gbc.sp(), 0xc65a);
        EXPECT(gbc.pc(), 0xdb21);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdb1f), 0xcb);
        EXPECT(gbc.readMem(0xdb20), 0xed);
        // CB ED 0254
        gbc.setState(0x3da6, 0x360a, 0x7c20, 0x399, 0xb197, 0x6964, 0x1, 0x1);
        gbc.writeMem(0x3da6, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0x7c);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0x99);
        EXPECT(gbc.d(),  0xb1);
        EXPECT(gbc.e(),  0x97);
        EXPECT(gbc.h(),  0x69);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0x360a);
        EXPECT(gbc.pc(), 0x3da8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB ED 0256
        gbc.setState(0x45de, 0xb3ec, 0x9d40, 0xcaa3, 0xe530, 0x9be, 0x0, 0x0);
        gbc.writeMem(0x45de, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0x9d);
        EXPECT(gbc.b(),  0xca);
        EXPECT(gbc.c(),  0xa3);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0x9);
        EXPECT(gbc.l(),  0xbe);
        EXPECT(gbc.sp(), 0xb3ec);
        EXPECT(gbc.pc(), 0x45e0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB ED 0257
        gbc.setState(0xe0c6, 0x752, 0x5010, 0x35a3, 0x7e7b, 0xdb3b, 0x0, 0x0);
        gbc.writeMem(0xe0c6, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0xa3);
        EXPECT(gbc.d(),  0x7e);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0xdb);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0x752);
        EXPECT(gbc.pc(), 0xe0c8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe0c6), 0xcb);
        EXPECT(gbc.readMem(0xe0c7), 0xed);
        // CB ED 0258
        gbc.setState(0xcc1e, 0x74b1, 0x55a0, 0xe875, 0x99d5, 0x11b6, 0x0, 0x0);
        gbc.writeMem(0xcc1e, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0x99);
        EXPECT(gbc.e(),  0xd5);
        EXPECT(gbc.h(),  0x11);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0x74b1);
        EXPECT(gbc.pc(), 0xcc20);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcc1e), 0xcb);
        EXPECT(gbc.readMem(0xcc1f), 0xed);
        // CB ED 0259
        gbc.setState(0x1076, 0x6666, 0xfe40, 0xdbf7, 0xd122, 0xb9f, 0x1, 0x1);
        gbc.writeMem(0x1076, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0xdb);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0xbf);
        EXPECT(gbc.sp(), 0x6666);
        EXPECT(gbc.pc(), 0x1078);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB ED 025A
        gbc.setState(0x4bd6, 0xa590, 0xf8e0, 0xa19b, 0x2e8b, 0xca4d, 0x1, 0x1);
        gbc.writeMem(0x4bd6, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0x9b);
        EXPECT(gbc.d(),  0x2e);
        EXPECT(gbc.e(),  0x8b);
        EXPECT(gbc.h(),  0xca);
        EXPECT(gbc.l(),  0x6d);
        EXPECT(gbc.sp(), 0xa590);
        EXPECT(gbc.pc(), 0x4bd8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB ED 025B
        gbc.setState(0x8f6c, 0x4541, 0x26d0, 0x8540, 0x5dc7, 0xecaf, 0x0, 0x1);
        gbc.writeMem(0x8f6c, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0x5d);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0xaf);
        EXPECT(gbc.sp(), 0x4541);
        EXPECT(gbc.pc(), 0x8f6e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8f6c), 0xcb);
        EXPECT(gbc.readMem(0x8f6d), 0xed);
        // CB ED 025C
        gbc.setState(0xad4f, 0x5c62, 0xabe0, 0x9d5a, 0x74da, 0x971, 0x1, 0x0);
        gbc.writeMem(0xad4f, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0xab);
        EXPECT(gbc.b(),  0x9d);
        EXPECT(gbc.c(),  0x5a);
        EXPECT(gbc.d(),  0x74);
        EXPECT(gbc.e(),  0xda);
        EXPECT(gbc.h(),  0x9);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0x5c62);
        EXPECT(gbc.pc(), 0xad51);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xad4f), 0xcb);
        EXPECT(gbc.readMem(0xad50), 0xed);
        // CB ED 025D
        gbc.setState(0xdc7f, 0x79c9, 0x1c10, 0x6f, 0x3926, 0x15ad, 0x0, 0x0);
        gbc.writeMem(0xdc7f, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0x1c);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0x39);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0xad);
        EXPECT(gbc.sp(), 0x79c9);
        EXPECT(gbc.pc(), 0xdc81);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdc7f), 0xcb);
        EXPECT(gbc.readMem(0xdc80), 0xed);
        // CB ED 025E
        gbc.setState(0x77d3, 0x704c, 0x7410, 0x1062, 0x149b, 0xcafc, 0x1, 0x0);
        gbc.writeMem(0x77d3, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0x74);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0x14);
        EXPECT(gbc.e(),  0x9b);
        EXPECT(gbc.h(),  0xca);
        EXPECT(gbc.l(),  0xfc);
        EXPECT(gbc.sp(), 0x704c);
        EXPECT(gbc.pc(), 0x77d5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB ED 025F
        gbc.setState(0xcd1d, 0x6c0, 0x4ad0, 0x43fe, 0xfd9f, 0x9757, 0x1, 0x0);
        gbc.writeMem(0xcd1d, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0x4a);
        EXPECT(gbc.b(),  0x43);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0xfd);
        EXPECT(gbc.e(),  0x9f);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0x6c0);
        EXPECT(gbc.pc(), 0xcd1f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcd1d), 0xcb);
        EXPECT(gbc.readMem(0xcd1e), 0xed);
        // CB ED 0260
        gbc.setState(0x31a7, 0xe87e, 0x4d80, 0x4bdc, 0x62ce, 0xda62, 0x1, 0x1);
        gbc.writeMem(0x31a7, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0x4d);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0xdc);
        EXPECT(gbc.d(),  0x62);
        EXPECT(gbc.e(),  0xce);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0xe87e);
        EXPECT(gbc.pc(), 0x31a9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB ED 0261
        gbc.setState(0x1399, 0xf72d, 0x2720, 0x3671, 0x1dd3, 0xb2e4, 0x1, 0x0);
        gbc.writeMem(0x1399, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0x27);
        EXPECT(gbc.b(),  0x36);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0xf72d);
        EXPECT(gbc.pc(), 0x139b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB ED 0262
        gbc.setState(0x2963, 0xd30c, 0x7130, 0x6d3d, 0x895b, 0xf6f4, 0x0, 0x1);
        gbc.writeMem(0x2963, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0x71);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0x3d);
        EXPECT(gbc.d(),  0x89);
        EXPECT(gbc.e(),  0x5b);
        EXPECT(gbc.h(),  0xf6);
        EXPECT(gbc.l(),  0xf4);
        EXPECT(gbc.sp(), 0xd30c);
        EXPECT(gbc.pc(), 0x2965);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB ED 0264
        gbc.setState(0x79f0, 0x5e72, 0x4470, 0x8cc, 0xcb79, 0x6672, 0x0, 0x1);
        gbc.writeMem(0x79f0, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0x8);
        EXPECT(gbc.c(),  0xcc);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0x66);
        EXPECT(gbc.l(),  0x72);
        EXPECT(gbc.sp(), 0x5e72);
        EXPECT(gbc.pc(), 0x79f2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB ED 0265
        gbc.setState(0x9a27, 0x11a9, 0x2790, 0xd04b, 0xd38, 0x50a8, 0x1, 0x0);
        gbc.writeMem(0x9a27, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0x27);
        EXPECT(gbc.b(),  0xd0);
        EXPECT(gbc.c(),  0x4b);
        EXPECT(gbc.d(),  0xd);
        EXPECT(gbc.e(),  0x38);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0xa8);
        EXPECT(gbc.sp(), 0x11a9);
        EXPECT(gbc.pc(), 0x9a29);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9a27), 0xcb);
        EXPECT(gbc.readMem(0x9a28), 0xed);
        // CB ED 0266
        gbc.setState(0x61de, 0x80b5, 0x9a10, 0xf083, 0x236f, 0x6a0d, 0x0, 0x0);
        gbc.writeMem(0x61de, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0x9a);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0x6a);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0x80b5);
        EXPECT(gbc.pc(), 0x61e0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB ED 0267
        gbc.setState(0x1d27, 0xda6, 0xc690, 0x43f1, 0xbcea, 0x2168, 0x0, 0x0);
        gbc.writeMem(0x1d27, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0xc6);
        EXPECT(gbc.b(),  0x43);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0xbc);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0x21);
        EXPECT(gbc.l(),  0x68);
        EXPECT(gbc.sp(), 0xda6);
        EXPECT(gbc.pc(), 0x1d29);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB ED 0268
        gbc.setState(0xd20a, 0xbc1, 0x91b0, 0xec55, 0xa11f, 0x9a73, 0x1, 0x1);
        gbc.writeMem(0xd20a, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0x91);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0x55);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0x1f);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0x73);
        EXPECT(gbc.sp(), 0xbc1);
        EXPECT(gbc.pc(), 0xd20c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd20a), 0xcb);
        EXPECT(gbc.readMem(0xd20b), 0xed);
        // CB ED 0269
        gbc.setState(0x8c4f, 0x50e9, 0x5720, 0xa993, 0xa743, 0x8555, 0x1, 0x0);
        gbc.writeMem(0x8c4f, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0x57);
        EXPECT(gbc.b(),  0xa9);
        EXPECT(gbc.c(),  0x93);
        EXPECT(gbc.d(),  0xa7);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0x85);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0x50e9);
        EXPECT(gbc.pc(), 0x8c51);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8c4f), 0xcb);
        EXPECT(gbc.readMem(0x8c50), 0xed);
        // CB ED 026A
        gbc.setState(0xbf71, 0x254f, 0x6110, 0x3e43, 0x63e9, 0x3661, 0x1, 0x1);
        gbc.writeMem(0xbf71, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0x43);
        EXPECT(gbc.d(),  0x63);
        EXPECT(gbc.e(),  0xe9);
        EXPECT(gbc.h(),  0x36);
        EXPECT(gbc.l(),  0x61);
        EXPECT(gbc.sp(), 0x254f);
        EXPECT(gbc.pc(), 0xbf73);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbf71), 0xcb);
        EXPECT(gbc.readMem(0xbf72), 0xed);
        // CB ED 026B
        gbc.setState(0x5fa7, 0xd137, 0xd5d0, 0x9d6a, 0xcbe1, 0xbacc, 0x0, 0x1);
        gbc.writeMem(0x5fa7, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0xd5);
        EXPECT(gbc.b(),  0x9d);
        EXPECT(gbc.c(),  0x6a);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0xe1);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0xec);
        EXPECT(gbc.sp(), 0xd137);
        EXPECT(gbc.pc(), 0x5fa9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB ED 026C
        gbc.setState(0x75bb, 0x6d38, 0x1d10, 0xdedb, 0x840d, 0xacfe, 0x0, 0x1);
        gbc.writeMem(0x75bb, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0xde);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0xd);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0xfe);
        EXPECT(gbc.sp(), 0x6d38);
        EXPECT(gbc.pc(), 0x75bd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB ED 026E
        gbc.setState(0x44bb, 0xf1ea, 0x8790, 0xcabb, 0x3c49, 0xde86, 0x1, 0x0);
        gbc.writeMem(0x44bb, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0x87);
        EXPECT(gbc.b(),  0xca);
        EXPECT(gbc.c(),  0xbb);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0xa6);
        EXPECT(gbc.sp(), 0xf1ea);
        EXPECT(gbc.pc(), 0x44bd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB ED 026F
        gbc.setState(0xbcca, 0x88a9, 0xc3a0, 0x4ac3, 0x70d4, 0x59b6, 0x1, 0x0);
        gbc.writeMem(0xbcca, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0xc3);
        EXPECT(gbc.b(),  0x4a);
        EXPECT(gbc.c(),  0xc3);
        EXPECT(gbc.d(),  0x70);
        EXPECT(gbc.e(),  0xd4);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0x88a9);
        EXPECT(gbc.pc(), 0xbccc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbcca), 0xcb);
        EXPECT(gbc.readMem(0xbccb), 0xed);
        // CB ED 0270
        gbc.setState(0x8cc6, 0xd01, 0x27a0, 0xe06d, 0x6844, 0x900, 0x0, 0x1);
        gbc.writeMem(0x8cc6, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0x27);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0x6d);
        EXPECT(gbc.d(),  0x68);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0x9);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0xd01);
        EXPECT(gbc.pc(), 0x8cc8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8cc6), 0xcb);
        EXPECT(gbc.readMem(0x8cc7), 0xed);
        // CB ED 0271
        gbc.setState(0x31a0, 0xb7fc, 0x9170, 0x9ba9, 0xfd7a, 0x708a, 0x1, 0x1);
        gbc.writeMem(0x31a0, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0x91);
        EXPECT(gbc.b(),  0x9b);
        EXPECT(gbc.c(),  0xa9);
        EXPECT(gbc.d(),  0xfd);
        EXPECT(gbc.e(),  0x7a);
        EXPECT(gbc.h(),  0x70);
        EXPECT(gbc.l(),  0xaa);
        EXPECT(gbc.sp(), 0xb7fc);
        EXPECT(gbc.pc(), 0x31a2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB ED 0272
        gbc.setState(0xb98f, 0xfe98, 0x9b60, 0xccdf, 0xc0cf, 0x1ab2, 0x0, 0x0);
        gbc.writeMem(0xb98f, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0x9b);
        EXPECT(gbc.b(),  0xcc);
        EXPECT(gbc.c(),  0xdf);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0xcf);
        EXPECT(gbc.h(),  0x1a);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0xfe98);
        EXPECT(gbc.pc(), 0xb991);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb98f), 0xcb);
        EXPECT(gbc.readMem(0xb990), 0xed);
        // CB ED 0273
        gbc.setState(0xf8a, 0x37bd, 0x9c30, 0x6c98, 0xa356, 0x3f3a, 0x0, 0x1);
        gbc.writeMem(0xf8a, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0x9c);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0xa3);
        EXPECT(gbc.e(),  0x56);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0x37bd);
        EXPECT(gbc.pc(), 0xf8c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB ED 0274
        gbc.setState(0xde8a, 0x5e8, 0x88e0, 0x1526, 0xc9b5, 0x171a, 0x1, 0x1);
        gbc.writeMem(0xde8a, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0xc9);
        EXPECT(gbc.e(),  0xb5);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0x5e8);
        EXPECT(gbc.pc(), 0xde8c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xde8a), 0xcb);
        EXPECT(gbc.readMem(0xde8b), 0xed);
        // CB ED 0275
        gbc.setState(0xd2d2, 0xe24c, 0x47e0, 0x4cdb, 0xf21, 0x151b, 0x0, 0x1);
        gbc.writeMem(0xd2d2, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0xe24c);
        EXPECT(gbc.pc(), 0xd2d4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd2d2), 0xcb);
        EXPECT(gbc.readMem(0xd2d3), 0xed);
        // CB ED 0276
        gbc.setState(0xeb15, 0x7579, 0xb870, 0x8ea6, 0xf944, 0x280c, 0x0, 0x0);
        gbc.writeMem(0xeb15, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0xb8);
        EXPECT(gbc.b(),  0x8e);
        EXPECT(gbc.c(),  0xa6);
        EXPECT(gbc.d(),  0xf9);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0x28);
        EXPECT(gbc.l(),  0x2c);
        EXPECT(gbc.sp(), 0x7579);
        EXPECT(gbc.pc(), 0xeb17);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xeb15), 0xcb);
        EXPECT(gbc.readMem(0xeb16), 0xed);
        // CB ED 0277
        gbc.setState(0x74ec, 0xa117, 0xb490, 0xc0d5, 0x116e, 0xf98b, 0x0, 0x1);
        gbc.writeMem(0x74ec, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0xb4);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0x6e);
        EXPECT(gbc.h(),  0xf9);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0xa117);
        EXPECT(gbc.pc(), 0x74ee);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB ED 0278
        gbc.setState(0x8d13, 0x8ed, 0xce10, 0x95e, 0x4199, 0xba23, 0x1, 0x1);
        gbc.writeMem(0x8d13, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0xce);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0x41);
        EXPECT(gbc.e(),  0x99);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0x23);
        EXPECT(gbc.sp(), 0x8ed);
        EXPECT(gbc.pc(), 0x8d15);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8d13), 0xcb);
        EXPECT(gbc.readMem(0x8d14), 0xed);
        // CB ED 0279
        gbc.setState(0x44b1, 0x3343, 0x9860, 0x5371, 0xf469, 0x1889, 0x0, 0x0);
        gbc.writeMem(0x44b1, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0x98);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0xf4);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0x18);
        EXPECT(gbc.l(),  0xa9);
        EXPECT(gbc.sp(), 0x3343);
        EXPECT(gbc.pc(), 0x44b3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB ED 027A
        gbc.setState(0x85ba, 0xd5ac, 0x7f30, 0x4c1, 0x3f55, 0xcc5c, 0x1, 0x1);
        gbc.writeMem(0x85ba, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0xc1);
        EXPECT(gbc.d(),  0x3f);
        EXPECT(gbc.e(),  0x55);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0xd5ac);
        EXPECT(gbc.pc(), 0x85bc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x85ba), 0xcb);
        EXPECT(gbc.readMem(0x85bb), 0xed);
        // CB ED 027B
        gbc.setState(0x4dc, 0x4551, 0x5210, 0x67a8, 0x74a9, 0x5ed, 0x0, 0x1);
        gbc.writeMem(0x4dc, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0x67);
        EXPECT(gbc.c(),  0xa8);
        EXPECT(gbc.d(),  0x74);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0x4551);
        EXPECT(gbc.pc(), 0x4de);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB ED 027C
        gbc.setState(0x41, 0x1204, 0x8aa0, 0x8c9a, 0xcf02, 0xbece, 0x1, 0x1);
        gbc.writeMem(0x41, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0x8a);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0xcf);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0xee);
        EXPECT(gbc.sp(), 0x1204);
        EXPECT(gbc.pc(), 0x43);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB ED 027D
        gbc.setState(0xc647, 0xf10f, 0x72b0, 0x305a, 0xe498, 0x178e, 0x1, 0x0);
        gbc.writeMem(0xc647, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0x5a);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0x98);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0xae);
        EXPECT(gbc.sp(), 0xf10f);
        EXPECT(gbc.pc(), 0xc649);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc647), 0xcb);
        EXPECT(gbc.readMem(0xc648), 0xed);
        // CB ED 027E
        gbc.setState(0xb395, 0xc513, 0x47f0, 0x47b2, 0xe3c9, 0xa0ef, 0x1, 0x0);
        gbc.writeMem(0xb395, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0xe3);
        EXPECT(gbc.e(),  0xc9);
        EXPECT(gbc.h(),  0xa0);
        EXPECT(gbc.l(),  0xef);
        EXPECT(gbc.sp(), 0xc513);
        EXPECT(gbc.pc(), 0xb397);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb395), 0xcb);
        EXPECT(gbc.readMem(0xb396), 0xed);
        // CB ED 027F
        gbc.setState(0x6047, 0x2aca, 0xb60, 0x917f, 0xd0cc, 0x6e29, 0x1, 0x0);
        gbc.writeMem(0x6047, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0xcc);
        EXPECT(gbc.h(),  0x6e);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0x2aca);
        EXPECT(gbc.pc(), 0x6049);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB ED 0280
        gbc.setState(0xddf8, 0xb221, 0x8990, 0x4521, 0x404b, 0x96fe, 0x0, 0x0);
        gbc.writeMem(0xddf8, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0x21);
        EXPECT(gbc.d(),  0x40);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0xfe);
        EXPECT(gbc.sp(), 0xb221);
        EXPECT(gbc.pc(), 0xddfa);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xddf8), 0xcb);
        EXPECT(gbc.readMem(0xddf9), 0xed);
        // CB ED 0281
        gbc.setState(0xe20f, 0x8dd, 0x9520, 0x35ef, 0xdfe0, 0x6d11, 0x0, 0x0);
        gbc.writeMem(0xe20f, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0x95);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0x6d);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0x8dd);
        EXPECT(gbc.pc(), 0xe211);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe20f), 0xcb);
        EXPECT(gbc.readMem(0xe210), 0xed);
        // CB ED 0282
        gbc.setState(0xca3e, 0x9737, 0x3080, 0x2459, 0x6ef, 0xa8ac, 0x1, 0x0);
        gbc.writeMem(0xca3e, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0x6);
        EXPECT(gbc.e(),  0xef);
        EXPECT(gbc.h(),  0xa8);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0x9737);
        EXPECT(gbc.pc(), 0xca40);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xca3e), 0xcb);
        EXPECT(gbc.readMem(0xca3f), 0xed);
        // CB ED 0284
        gbc.setState(0xbcc9, 0x826e, 0x89d0, 0x5704, 0xcdf9, 0xd7e0, 0x1, 0x0);
        gbc.writeMem(0xbcc9, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0xf9);
        EXPECT(gbc.h(),  0xd7);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0x826e);
        EXPECT(gbc.pc(), 0xbccb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbcc9), 0xcb);
        EXPECT(gbc.readMem(0xbcca), 0xed);
        // CB ED 0285
        gbc.setState(0x114d, 0x91f9, 0x99e0, 0xc267, 0x5720, 0x69b3, 0x0, 0x1);
        gbc.writeMem(0x114d, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0x99);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0x57);
        EXPECT(gbc.e(),  0x20);
        EXPECT(gbc.h(),  0x69);
        EXPECT(gbc.l(),  0xb3);
        EXPECT(gbc.sp(), 0x91f9);
        EXPECT(gbc.pc(), 0x114f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB ED 0286
        gbc.setState(0x3496, 0xb0f5, 0x4e60, 0x616, 0xb820, 0x7a50, 0x0, 0x1);
        gbc.writeMem(0x3496, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0x6);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0xb8);
        EXPECT(gbc.e(),  0x20);
        EXPECT(gbc.h(),  0x7a);
        EXPECT(gbc.l(),  0x70);
        EXPECT(gbc.sp(), 0xb0f5);
        EXPECT(gbc.pc(), 0x3498);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB ED 0287
        gbc.setState(0x8bfb, 0x6b5f, 0xe040, 0xeca5, 0xd4fd, 0x75db, 0x0, 0x0);
        gbc.writeMem(0x8bfb, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0xe0);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0xfd);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0xfb);
        EXPECT(gbc.sp(), 0x6b5f);
        EXPECT(gbc.pc(), 0x8bfd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8bfb), 0xcb);
        EXPECT(gbc.readMem(0x8bfc), 0xed);
        // CB ED 0288
        gbc.setState(0xd041, 0xf87f, 0xd2d0, 0xfd51, 0xfc83, 0xf76b, 0x1, 0x1);
        gbc.writeMem(0xd041, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0x83);
        EXPECT(gbc.h(),  0xf7);
        EXPECT(gbc.l(),  0x6b);
        EXPECT(gbc.sp(), 0xf87f);
        EXPECT(gbc.pc(), 0xd043);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd041), 0xcb);
        EXPECT(gbc.readMem(0xd042), 0xed);
        // CB ED 0289
        gbc.setState(0x8ece, 0xb2fb, 0x3280, 0x5703, 0xc79e, 0xced8, 0x1, 0x0);
        gbc.writeMem(0x8ece, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0x3);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0xb2fb);
        EXPECT(gbc.pc(), 0x8ed0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8ece), 0xcb);
        EXPECT(gbc.readMem(0x8ecf), 0xed);
        // CB ED 028A
        gbc.setState(0x53d7, 0x87d7, 0xda30, 0x7fe0, 0x3162, 0x9993, 0x0, 0x1);
        gbc.writeMem(0x53d7, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0xb3);
        EXPECT(gbc.sp(), 0x87d7);
        EXPECT(gbc.pc(), 0x53d9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB ED 028B
        gbc.setState(0x9901, 0xc792, 0xa7a0, 0x2d37, 0x15a9, 0xeb09, 0x1, 0x1);
        gbc.writeMem(0x9901, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0xa7);
        EXPECT(gbc.b(),  0x2d);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0x15);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0xc792);
        EXPECT(gbc.pc(), 0x9903);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9901), 0xcb);
        EXPECT(gbc.readMem(0x9902), 0xed);
        // CB ED 028C
        gbc.setState(0x88ec, 0x1f14, 0x7010, 0x1f9a, 0x4470, 0x84d8, 0x1, 0x1);
        gbc.writeMem(0x88ec, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0x70);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0x1f14);
        EXPECT(gbc.pc(), 0x88ee);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x88ec), 0xcb);
        EXPECT(gbc.readMem(0x88ed), 0xed);
        // CB ED 028D
        gbc.setState(0xd4af, 0xca2f, 0x7c50, 0x7e98, 0x95df, 0xdf3e, 0x0, 0x1);
        gbc.writeMem(0xd4af, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0x7c);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0x95);
        EXPECT(gbc.e(),  0xdf);
        EXPECT(gbc.h(),  0xdf);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0xca2f);
        EXPECT(gbc.pc(), 0xd4b1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd4af), 0xcb);
        EXPECT(gbc.readMem(0xd4b0), 0xed);
        // CB ED 028F
        gbc.setState(0xd87b, 0xfdea, 0xb9a0, 0xbc2b, 0x1598, 0xa24d, 0x0, 0x1);
        gbc.writeMem(0xd87b, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0xbc);
        EXPECT(gbc.c(),  0x2b);
        EXPECT(gbc.d(),  0x15);
        EXPECT(gbc.e(),  0x98);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0x6d);
        EXPECT(gbc.sp(), 0xfdea);
        EXPECT(gbc.pc(), 0xd87d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd87b), 0xcb);
        EXPECT(gbc.readMem(0xd87c), 0xed);
        // CB ED 0291
        gbc.setState(0x9430, 0xcebb, 0xce50, 0x17cd, 0xf953, 0x7182, 0x0, 0x1);
        gbc.writeMem(0x9430, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0xce);
        EXPECT(gbc.b(),  0x17);
        EXPECT(gbc.c(),  0xcd);
        EXPECT(gbc.d(),  0xf9);
        EXPECT(gbc.e(),  0x53);
        EXPECT(gbc.h(),  0x71);
        EXPECT(gbc.l(),  0xa2);
        EXPECT(gbc.sp(), 0xcebb);
        EXPECT(gbc.pc(), 0x9432);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9430), 0xcb);
        EXPECT(gbc.readMem(0x9431), 0xed);
        // CB ED 0292
        gbc.setState(0xeb77, 0x5d50, 0x5f80, 0x5d61, 0x57fc, 0x58b, 0x0, 0x1);
        gbc.writeMem(0xeb77, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0x5d);
        EXPECT(gbc.c(),  0x61);
        EXPECT(gbc.d(),  0x57);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0x5d50);
        EXPECT(gbc.pc(), 0xeb79);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xeb77), 0xcb);
        EXPECT(gbc.readMem(0xeb78), 0xed);
        // CB ED 0293
        gbc.setState(0xbf64, 0xf0ea, 0x3a00, 0xc945, 0x9b73, 0xa63e, 0x1, 0x1);
        gbc.writeMem(0xbf64, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0xc9);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0xf0ea);
        EXPECT(gbc.pc(), 0xbf66);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbf64), 0xcb);
        EXPECT(gbc.readMem(0xbf65), 0xed);
        // CB ED 0294
        gbc.setState(0xda54, 0x58e, 0x2960, 0xdec0, 0xae31, 0x1837, 0x1, 0x1);
        gbc.writeMem(0xda54, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0xde);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0xae);
        EXPECT(gbc.e(),  0x31);
        EXPECT(gbc.h(),  0x18);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0x58e);
        EXPECT(gbc.pc(), 0xda56);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xda54), 0xcb);
        EXPECT(gbc.readMem(0xda55), 0xed);
        // CB ED 0295
        gbc.setState(0xe89f, 0x8de5, 0x50c0, 0x5246, 0xe802, 0x9f91, 0x1, 0x0);
        gbc.writeMem(0xe89f, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0xe8);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0x8de5);
        EXPECT(gbc.pc(), 0xe8a1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe89f), 0xcb);
        EXPECT(gbc.readMem(0xe8a0), 0xed);
        // CB ED 0296
        gbc.setState(0xb354, 0x9092, 0xff30, 0xc5f3, 0xa63b, 0xda64, 0x0, 0x0);
        gbc.writeMem(0xb354, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0xf3);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0x3b);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0x9092);
        EXPECT(gbc.pc(), 0xb356);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb354), 0xcb);
        EXPECT(gbc.readMem(0xb355), 0xed);
        // CB ED 0297
        gbc.setState(0x165d, 0x59ae, 0x63a0, 0xc9fc, 0x72f3, 0x6207, 0x1, 0x1);
        gbc.writeMem(0x165d, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0xc9);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0x62);
        EXPECT(gbc.l(),  0x27);
        EXPECT(gbc.sp(), 0x59ae);
        EXPECT(gbc.pc(), 0x165f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB ED 0298
        gbc.setState(0x3510, 0xf5bb, 0x6540, 0xce26, 0xc6bb, 0x261f, 0x0, 0x1);
        gbc.writeMem(0x3510, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0x65);
        EXPECT(gbc.b(),  0xce);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0xbb);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0xf5bb);
        EXPECT(gbc.pc(), 0x3512);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB ED 0299
        gbc.setState(0x65da, 0x9aee, 0x39d0, 0xc510, 0x56ce, 0xff46, 0x1, 0x1);
        gbc.writeMem(0x65da, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0x56);
        EXPECT(gbc.e(),  0xce);
        EXPECT(gbc.h(),  0xff);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0x9aee);
        EXPECT(gbc.pc(), 0x65dc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB ED 029A
        gbc.setState(0x9d05, 0x95e0, 0xb40, 0x8246, 0xb438, 0xf584, 0x0, 0x1);
        gbc.writeMem(0x9d05, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0x38);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0xa4);
        EXPECT(gbc.sp(), 0x95e0);
        EXPECT(gbc.pc(), 0x9d07);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9d05), 0xcb);
        EXPECT(gbc.readMem(0x9d06), 0xed);
        // CB ED 029B
        gbc.setState(0x2ed8, 0x5a6b, 0x1620, 0xbb99, 0xba19, 0xd60a, 0x1, 0x0);
        gbc.writeMem(0x2ed8, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0x16);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0x99);
        EXPECT(gbc.d(),  0xba);
        EXPECT(gbc.e(),  0x19);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0x2a);
        EXPECT(gbc.sp(), 0x5a6b);
        EXPECT(gbc.pc(), 0x2eda);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB ED 029C
        gbc.setState(0x1844, 0xbfd3, 0x8b70, 0xaa93, 0xe1d0, 0x9082, 0x0, 0x1);
        gbc.writeMem(0x1844, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0xaa);
        EXPECT(gbc.c(),  0x93);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0x90);
        EXPECT(gbc.l(),  0xa2);
        EXPECT(gbc.sp(), 0xbfd3);
        EXPECT(gbc.pc(), 0x1846);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB ED 029D
        gbc.setState(0x4777, 0x971e, 0x4130, 0x3e4a, 0xe20a, 0x6571, 0x1, 0x0);
        gbc.writeMem(0x4777, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0x4a);
        EXPECT(gbc.d(),  0xe2);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0x65);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0x971e);
        EXPECT(gbc.pc(), 0x4779);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB ED 029E
        gbc.setState(0xc6c2, 0x6c68, 0x56f0, 0xca67, 0xc34f, 0x1a84, 0x1, 0x0);
        gbc.writeMem(0xc6c2, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0xca);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0x4f);
        EXPECT(gbc.h(),  0x1a);
        EXPECT(gbc.l(),  0xa4);
        EXPECT(gbc.sp(), 0x6c68);
        EXPECT(gbc.pc(), 0xc6c4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc6c2), 0xcb);
        EXPECT(gbc.readMem(0xc6c3), 0xed);
        // CB ED 029F
        gbc.setState(0x9cc8, 0x894, 0x2a70, 0xc0a5, 0x9961, 0x11c3, 0x0, 0x0);
        gbc.writeMem(0x9cc8, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0x99);
        EXPECT(gbc.e(),  0x61);
        EXPECT(gbc.h(),  0x11);
        EXPECT(gbc.l(),  0xe3);
        EXPECT(gbc.sp(), 0x894);
        EXPECT(gbc.pc(), 0x9cca);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9cc8), 0xcb);
        EXPECT(gbc.readMem(0x9cc9), 0xed);
        // CB ED 02A0
        gbc.setState(0x6aa9, 0x36be, 0xd50, 0xf60f, 0xbe76, 0x8ac3, 0x0, 0x0);
        gbc.writeMem(0x6aa9, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0xd);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0x76);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0xe3);
        EXPECT(gbc.sp(), 0x36be);
        EXPECT(gbc.pc(), 0x6aab);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB ED 02A1
        gbc.setState(0x6172, 0x5ee6, 0xf680, 0x6e72, 0xd487, 0xcca1, 0x1, 0x0);
        gbc.writeMem(0x6172, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0xf6);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0x87);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0x5ee6);
        EXPECT(gbc.pc(), 0x6174);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB ED 02A2
        gbc.setState(0x91b7, 0x60cd, 0xaf10, 0xfd0b, 0x71c2, 0xff80, 0x1, 0x1);
        gbc.writeMem(0x91b7, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0xaf);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0xb);
        EXPECT(gbc.d(),  0x71);
        EXPECT(gbc.e(),  0xc2);
        EXPECT(gbc.h(),  0xff);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0x60cd);
        EXPECT(gbc.pc(), 0x91b9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x91b7), 0xcb);
        EXPECT(gbc.readMem(0x91b8), 0xed);
        // CB ED 02A3
        gbc.setState(0x29a0, 0x6415, 0x89a0, 0xab24, 0x957c, 0x3ee2, 0x1, 0x1);
        gbc.writeMem(0x29a0, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0xab);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0x95);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0x6415);
        EXPECT(gbc.pc(), 0x29a2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB ED 02A4
        gbc.setState(0x6dcf, 0xac6e, 0x51d0, 0x3ad5, 0x177b, 0x5cfc, 0x0, 0x0);
        gbc.writeMem(0x6dcf, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0x17);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0x5c);
        EXPECT(gbc.l(),  0xfc);
        EXPECT(gbc.sp(), 0xac6e);
        EXPECT(gbc.pc(), 0x6dd1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB ED 02A5
        gbc.setState(0x4058, 0xf3a0, 0x2ab0, 0x2002, 0x26a1, 0x52e0, 0x1, 0x0);
        gbc.writeMem(0x4058, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0x26);
        EXPECT(gbc.e(),  0xa1);
        EXPECT(gbc.h(),  0x52);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0xf3a0);
        EXPECT(gbc.pc(), 0x405a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB ED 02A6
        gbc.setState(0xc56f, 0x370d, 0x61e0, 0x5aec, 0xb6e6, 0x6464, 0x0, 0x1);
        gbc.writeMem(0xc56f, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0x5a);
        EXPECT(gbc.c(),  0xec);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0xe6);
        EXPECT(gbc.h(),  0x64);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0x370d);
        EXPECT(gbc.pc(), 0xc571);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc56f), 0xcb);
        EXPECT(gbc.readMem(0xc570), 0xed);
        // CB ED 02A7
        gbc.setState(0x6f9c, 0x13c7, 0x2a20, 0x2a61, 0x8e68, 0x7580, 0x0, 0x0);
        gbc.writeMem(0x6f9c, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0x61);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0x13c7);
        EXPECT(gbc.pc(), 0x6f9e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB ED 02A8
        gbc.setState(0xc1b3, 0xf0d8, 0x12f0, 0xd540, 0xf6a8, 0x1244, 0x1, 0x0);
        gbc.writeMem(0xc1b3, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0x12);
        EXPECT(gbc.b(),  0xd5);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0xf0d8);
        EXPECT(gbc.pc(), 0xc1b5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc1b3), 0xcb);
        EXPECT(gbc.readMem(0xc1b4), 0xed);
        // CB ED 02A9
        gbc.setState(0x52d9, 0x2c5b, 0xbd70, 0xea24, 0xd3f5, 0x4b78, 0x1, 0x1);
        gbc.writeMem(0x52d9, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0xbd);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0x4b);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0x2c5b);
        EXPECT(gbc.pc(), 0x52db);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB ED 02AA
        gbc.setState(0xee1e, 0x4134, 0xea0, 0xd460, 0x9a8e, 0x8424, 0x1, 0x0);
        gbc.writeMem(0xee1e, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0x60);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0x4134);
        EXPECT(gbc.pc(), 0xee20);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xee1e), 0xcb);
        EXPECT(gbc.readMem(0xee1f), 0xed);
        // CB ED 02AB
        gbc.setState(0xae14, 0xcb7f, 0xa640, 0xd63f, 0x1efc, 0xac4, 0x0, 0x1);
        gbc.writeMem(0xae14, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0xa6);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0x3f);
        EXPECT(gbc.d(),  0x1e);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0xa);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0xcb7f);
        EXPECT(gbc.pc(), 0xae16);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xae14), 0xcb);
        EXPECT(gbc.readMem(0xae15), 0xed);
        // CB ED 02AC
        gbc.setState(0xbb2a, 0x4d09, 0x22e0, 0x708e, 0xb209, 0x3da6, 0x1, 0x1);
        gbc.writeMem(0xbb2a, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0x8e);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0x3d);
        EXPECT(gbc.l(),  0xa6);
        EXPECT(gbc.sp(), 0x4d09);
        EXPECT(gbc.pc(), 0xbb2c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbb2a), 0xcb);
        EXPECT(gbc.readMem(0xbb2b), 0xed);
        // CB ED 02AD
        gbc.setState(0xa67f, 0x7614, 0x9420, 0x8151, 0xd7ab, 0x560c, 0x0, 0x1);
        gbc.writeMem(0xa67f, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0x94);
        EXPECT(gbc.b(),  0x81);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0x2c);
        EXPECT(gbc.sp(), 0x7614);
        EXPECT(gbc.pc(), 0xa681);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa67f), 0xcb);
        EXPECT(gbc.readMem(0xa680), 0xed);
        // CB ED 02AF
        gbc.setState(0xf5d, 0x4ce7, 0xa0e0, 0xd8d, 0x5867, 0x1145, 0x1, 0x1);
        gbc.writeMem(0xf5d, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0xd);
        EXPECT(gbc.c(),  0x8d);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0x67);
        EXPECT(gbc.h(),  0x11);
        EXPECT(gbc.l(),  0x65);
        EXPECT(gbc.sp(), 0x4ce7);
        EXPECT(gbc.pc(), 0xf5f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB ED 02B0
        gbc.setState(0x3258, 0x2bfa, 0x4d40, 0x1dcf, 0x2043, 0xcf2e, 0x1, 0x1);
        gbc.writeMem(0x3258, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0x4d);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0xcf);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0x2bfa);
        EXPECT(gbc.pc(), 0x325a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB ED 02B1
        gbc.setState(0xde7d, 0x7a46, 0xfd50, 0x94ec, 0x5546, 0xd9b6, 0x1, 0x1);
        gbc.writeMem(0xde7d, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0xfd);
        EXPECT(gbc.b(),  0x94);
        EXPECT(gbc.c(),  0xec);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0x7a46);
        EXPECT(gbc.pc(), 0xde7f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xde7d), 0xcb);
        EXPECT(gbc.readMem(0xde7e), 0xed);
        // CB ED 02B2
        gbc.setState(0xb9de, 0x403a, 0x44c0, 0x1131, 0xeced, 0x1d33, 0x1, 0x0);
        gbc.writeMem(0xb9de, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0x11);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0xed);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0x403a);
        EXPECT(gbc.pc(), 0xb9e0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb9de), 0xcb);
        EXPECT(gbc.readMem(0xb9df), 0xed);
        // CB ED 02B3
        gbc.setState(0x5038, 0xbfc0, 0x3390, 0x4ec6, 0x75a8, 0x56fb, 0x1, 0x0);
        gbc.writeMem(0x5038, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0xc6);
        EXPECT(gbc.d(),  0x75);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0xfb);
        EXPECT(gbc.sp(), 0xbfc0);
        EXPECT(gbc.pc(), 0x503a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB ED 02B4
        gbc.setState(0x751b, 0xe705, 0x59c0, 0x2b70, 0x8c07, 0xc4ff, 0x1, 0x0);
        gbc.writeMem(0x751b, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0x2b);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0xff);
        EXPECT(gbc.sp(), 0xe705);
        EXPECT(gbc.pc(), 0x751d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB ED 02B5
        gbc.setState(0x7095, 0x395c, 0xfc10, 0xe1, 0x120b, 0xfde9, 0x0, 0x0);
        gbc.writeMem(0x7095, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0xe1);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0xb);
        EXPECT(gbc.h(),  0xfd);
        EXPECT(gbc.l(),  0xe9);
        EXPECT(gbc.sp(), 0x395c);
        EXPECT(gbc.pc(), 0x7097);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB ED 02B6
        gbc.setState(0x42f6, 0x4671, 0xd170, 0x6c3c, 0x8969, 0x39ac, 0x0, 0x0);
        gbc.writeMem(0x42f6, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0xd1);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0x89);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0x4671);
        EXPECT(gbc.pc(), 0x42f8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB ED 02B7
        gbc.setState(0x92a8, 0x7ab, 0xc860, 0xe685, 0xcffb, 0x7c8, 0x0, 0x1);
        gbc.writeMem(0x92a8, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0x85);
        EXPECT(gbc.d(),  0xcf);
        EXPECT(gbc.e(),  0xfb);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0xe8);
        EXPECT(gbc.sp(), 0x7ab);
        EXPECT(gbc.pc(), 0x92aa);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x92a8), 0xcb);
        EXPECT(gbc.readMem(0x92a9), 0xed);
        // CB ED 02B8
        gbc.setState(0xc5aa, 0xd38a, 0x390, 0xaeef, 0x6cef, 0xad51, 0x0, 0x0);
        gbc.writeMem(0xc5aa, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0x6c);
        EXPECT(gbc.e(),  0xef);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0xd38a);
        EXPECT(gbc.pc(), 0xc5ac);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc5aa), 0xcb);
        EXPECT(gbc.readMem(0xc5ab), 0xed);
        // CB ED 02B9
        gbc.setState(0x481, 0x5710, 0xb960, 0xb74b, 0x367f, 0xf489, 0x1, 0x0);
        gbc.writeMem(0x481, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0x4b);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0xf4);
        EXPECT(gbc.l(),  0xa9);
        EXPECT(gbc.sp(), 0x5710);
        EXPECT(gbc.pc(), 0x483);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB ED 02BA
        gbc.setState(0x9441, 0xa43f, 0x20c0, 0x8e41, 0x4b30, 0xe81, 0x0, 0x1);
        gbc.writeMem(0x9441, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0x20);
        EXPECT(gbc.b(),  0x8e);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0xa43f);
        EXPECT(gbc.pc(), 0x9443);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9441), 0xcb);
        EXPECT(gbc.readMem(0x9442), 0xed);
        // CB ED 02BB
        gbc.setState(0xbe0, 0x9b27, 0xcbc0, 0x9e69, 0xae24, 0x5017, 0x1, 0x1);
        gbc.writeMem(0xbe0, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0xcb);
        EXPECT(gbc.b(),  0x9e);
        EXPECT(gbc.c(),  0x69);
        EXPECT(gbc.d(),  0xae);
        EXPECT(gbc.e(),  0x24);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0x9b27);
        EXPECT(gbc.pc(), 0xbe2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB ED 02BC
        gbc.setState(0xc445, 0xcc13, 0xdad0, 0x9e6b, 0x145f, 0x656, 0x0, 0x1);
        gbc.writeMem(0xc445, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0x9e);
        EXPECT(gbc.c(),  0x6b);
        EXPECT(gbc.d(),  0x14);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0x6);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0xcc13);
        EXPECT(gbc.pc(), 0xc447);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc445), 0xcb);
        EXPECT(gbc.readMem(0xc446), 0xed);
        // CB ED 02BD
        gbc.setState(0xa463, 0x7038, 0xb000, 0xc37b, 0x1fa2, 0x9c31, 0x1, 0x1);
        gbc.writeMem(0xa463, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0xc3);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0x1f);
        EXPECT(gbc.e(),  0xa2);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0x7038);
        EXPECT(gbc.pc(), 0xa465);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa463), 0xcb);
        EXPECT(gbc.readMem(0xa464), 0xed);
        // CB ED 02BE
        gbc.setState(0x6bdb, 0x37b2, 0xa680, 0xddd9, 0xf21d, 0xd88, 0x1, 0x0);
        gbc.writeMem(0x6bdb, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0xa6);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0xd9);
        EXPECT(gbc.d(),  0xf2);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0xd);
        EXPECT(gbc.l(),  0xa8);
        EXPECT(gbc.sp(), 0x37b2);
        EXPECT(gbc.pc(), 0x6bdd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB ED 02BF
        gbc.setState(0x63b5, 0x76c, 0x3b90, 0x32a, 0xf9b2, 0x57a7, 0x0, 0x1);
        gbc.writeMem(0x63b5, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0xf9);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0x57);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0x76c);
        EXPECT(gbc.pc(), 0x63b7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB ED 02C0
        gbc.setState(0x36e7, 0x38dc, 0xa780, 0xf414, 0x2190, 0x6cfc, 0x1, 0x1);
        gbc.writeMem(0x36e7, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0xa7);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0x21);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0x6c);
        EXPECT(gbc.l(),  0xfc);
        EXPECT(gbc.sp(), 0x38dc);
        EXPECT(gbc.pc(), 0x36e9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB ED 02C1
        gbc.setState(0x6808, 0xc897, 0x1a60, 0x79d0, 0xb1d9, 0xd982, 0x0, 0x0);
        gbc.writeMem(0x6808, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0x1a);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0xb1);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0xa2);
        EXPECT(gbc.sp(), 0xc897);
        EXPECT(gbc.pc(), 0x680a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB ED 02C2
        gbc.setState(0xc06, 0x2bc9, 0x5a50, 0xf8d4, 0xb2a3, 0xf6aa, 0x0, 0x0);
        gbc.writeMem(0xc06, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0xd4);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0xa3);
        EXPECT(gbc.h(),  0xf6);
        EXPECT(gbc.l(),  0xaa);
        EXPECT(gbc.sp(), 0x2bc9);
        EXPECT(gbc.pc(), 0xc08);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB ED 02C3
        gbc.setState(0xa841, 0x16c0, 0xe410, 0xe0d1, 0xce65, 0xfa5e, 0x0, 0x0);
        gbc.writeMem(0xa841, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0xe4);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0xce);
        EXPECT(gbc.e(),  0x65);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0x7e);
        EXPECT(gbc.sp(), 0x16c0);
        EXPECT(gbc.pc(), 0xa843);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa841), 0xcb);
        EXPECT(gbc.readMem(0xa842), 0xed);
        // CB ED 02C4
        gbc.setState(0x7811, 0xf9a7, 0xa2e0, 0x6f9d, 0x14dd, 0x4b80, 0x0, 0x0);
        gbc.writeMem(0x7811, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0x6f);
        EXPECT(gbc.c(),  0x9d);
        EXPECT(gbc.d(),  0x14);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0x4b);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0xf9a7);
        EXPECT(gbc.pc(), 0x7813);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB ED 02C5
        gbc.setState(0x2452, 0xfa86, 0x3b00, 0x7026, 0x1b59, 0x1ce2, 0x0, 0x0);
        gbc.writeMem(0x2452, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0x1c);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0xfa86);
        EXPECT(gbc.pc(), 0x2454);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB ED 02C6
        gbc.setState(0x46b1, 0xbe2b, 0x37f0, 0x33c2, 0xcdf6, 0xb781, 0x0, 0x1);
        gbc.writeMem(0x46b1, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0xf6);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0xbe2b);
        EXPECT(gbc.pc(), 0x46b3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB ED 02C7
        gbc.setState(0x9bd5, 0x6084, 0x5410, 0xed34, 0x1135, 0x37cb, 0x0, 0x1);
        gbc.writeMem(0x9bd5, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0x54);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0x35);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0xeb);
        EXPECT(gbc.sp(), 0x6084);
        EXPECT(gbc.pc(), 0x9bd7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9bd5), 0xcb);
        EXPECT(gbc.readMem(0x9bd6), 0xed);
        // CB ED 02C8
        gbc.setState(0xdc54, 0x231a, 0x5510, 0x94c7, 0x87ac, 0xa2fb, 0x1, 0x1);
        gbc.writeMem(0xdc54, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0x94);
        EXPECT(gbc.c(),  0xc7);
        EXPECT(gbc.d(),  0x87);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0xfb);
        EXPECT(gbc.sp(), 0x231a);
        EXPECT(gbc.pc(), 0xdc56);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdc54), 0xcb);
        EXPECT(gbc.readMem(0xdc55), 0xed);
        // CB ED 02C9
        gbc.setState(0x74af, 0x5160, 0xa310, 0x24d6, 0xc316, 0x73b6, 0x0, 0x0);
        gbc.writeMem(0x74af, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0xa3);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0xd6);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0x73);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0x5160);
        EXPECT(gbc.pc(), 0x74b1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB ED 02CA
        gbc.setState(0xae62, 0x6caf, 0xf010, 0xd725, 0x8e0e, 0x5b5, 0x0, 0x0);
        gbc.writeMem(0xae62, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0xf0);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0x6caf);
        EXPECT(gbc.pc(), 0xae64);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xae62), 0xcb);
        EXPECT(gbc.readMem(0xae63), 0xed);
        // CB ED 02CB
        gbc.setState(0xa666, 0x3ac2, 0x1f40, 0x8a80, 0x8ebe, 0x586f, 0x1, 0x0);
        gbc.writeMem(0xa666, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0x80);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0x58);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0x3ac2);
        EXPECT(gbc.pc(), 0xa668);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa666), 0xcb);
        EXPECT(gbc.readMem(0xa667), 0xed);
        // CB ED 02CD
        gbc.setState(0x826c, 0xfd7, 0x4b40, 0x3fcb, 0x5c31, 0x21c1, 0x0, 0x1);
        gbc.writeMem(0x826c, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0x3f);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0x5c);
        EXPECT(gbc.e(),  0x31);
        EXPECT(gbc.h(),  0x21);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0xfd7);
        EXPECT(gbc.pc(), 0x826e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x826c), 0xcb);
        EXPECT(gbc.readMem(0x826d), 0xed);
        // CB ED 02CF
        gbc.setState(0xe24c, 0xde8b, 0x1d00, 0x868b, 0xea7f, 0x6e87, 0x1, 0x0);
        gbc.writeMem(0xe24c, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0x86);
        EXPECT(gbc.c(),  0x8b);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0x6e);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0xde8b);
        EXPECT(gbc.pc(), 0xe24e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe24c), 0xcb);
        EXPECT(gbc.readMem(0xe24d), 0xed);
        // CB ED 02D0
        gbc.setState(0x52ef, 0x7182, 0x4c70, 0x6689, 0xf9c5, 0x1d62, 0x0, 0x0);
        gbc.writeMem(0x52ef, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0x4c);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0x89);
        EXPECT(gbc.d(),  0xf9);
        EXPECT(gbc.e(),  0xc5);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0x7182);
        EXPECT(gbc.pc(), 0x52f1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB ED 02D1
        gbc.setState(0xbf67, 0xa22, 0x5b60, 0x8cff, 0x7303, 0x45c, 0x0, 0x1);
        gbc.writeMem(0xbf67, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0xff);
        EXPECT(gbc.d(),  0x73);
        EXPECT(gbc.e(),  0x3);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0xa22);
        EXPECT(gbc.pc(), 0xbf69);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbf67), 0xcb);
        EXPECT(gbc.readMem(0xbf68), 0xed);
        // CB ED 02D2
        gbc.setState(0x4a5e, 0x2ddd, 0x61f0, 0x15f4, 0xb2af, 0x95b1, 0x0, 0x1);
        gbc.writeMem(0x4a5e, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0xf4);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0x2ddd);
        EXPECT(gbc.pc(), 0x4a60);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB ED 02D3
        gbc.setState(0xa297, 0xd1bf, 0x6010, 0x68ca, 0x4947, 0x9c43, 0x0, 0x1);
        gbc.writeMem(0xa297, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0x47);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0x63);
        EXPECT(gbc.sp(), 0xd1bf);
        EXPECT(gbc.pc(), 0xa299);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa297), 0xcb);
        EXPECT(gbc.readMem(0xa298), 0xed);
        // CB ED 02D4
        gbc.setState(0x9fc3, 0x9245, 0x8dc0, 0xed6a, 0xc727, 0x5ef1, 0x0, 0x0);
        gbc.writeMem(0x9fc3, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0x6a);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0x5e);
        EXPECT(gbc.l(),  0xf1);
        EXPECT(gbc.sp(), 0x9245);
        EXPECT(gbc.pc(), 0x9fc5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9fc3), 0xcb);
        EXPECT(gbc.readMem(0x9fc4), 0xed);
        // CB ED 02D5
        gbc.setState(0xa4ff, 0x4703, 0x5e30, 0x30d6, 0x5c9b, 0x57c1, 0x1, 0x1);
        gbc.writeMem(0xa4ff, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0x5e);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0xd6);
        EXPECT(gbc.d(),  0x5c);
        EXPECT(gbc.e(),  0x9b);
        EXPECT(gbc.h(),  0x57);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0x4703);
        EXPECT(gbc.pc(), 0xa501);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa4ff), 0xcb);
        EXPECT(gbc.readMem(0xa500), 0xed);
        // CB ED 02D6
        gbc.setState(0x20e3, 0x5a68, 0xa390, 0x7a87, 0xcfec, 0x5e08, 0x1, 0x1);
        gbc.writeMem(0x20e3, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0xa3);
        EXPECT(gbc.b(),  0x7a);
        EXPECT(gbc.c(),  0x87);
        EXPECT(gbc.d(),  0xcf);
        EXPECT(gbc.e(),  0xec);
        EXPECT(gbc.h(),  0x5e);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0x5a68);
        EXPECT(gbc.pc(), 0x20e5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB ED 02D8
        gbc.setState(0x9661, 0xa983, 0x4bb0, 0x57b7, 0x90e4, 0xbda4, 0x1, 0x0);
        gbc.writeMem(0x9661, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0xb7);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0xa4);
        EXPECT(gbc.sp(), 0xa983);
        EXPECT(gbc.pc(), 0x9663);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9661), 0xcb);
        EXPECT(gbc.readMem(0x9662), 0xed);
        // CB ED 02D9
        gbc.setState(0x4dcf, 0xb05, 0x90d0, 0x669, 0xec93, 0x2d06, 0x1, 0x1);
        gbc.writeMem(0x4dcf, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0x90);
        EXPECT(gbc.b(),  0x6);
        EXPECT(gbc.c(),  0x69);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0x2d);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0xb05);
        EXPECT(gbc.pc(), 0x4dd1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB ED 02DA
        gbc.setState(0xa31, 0x9e03, 0xcd70, 0x1163, 0xe669, 0xca8a, 0x0, 0x1);
        gbc.writeMem(0xa31, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0x11);
        EXPECT(gbc.c(),  0x63);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0xca);
        EXPECT(gbc.l(),  0xaa);
        EXPECT(gbc.sp(), 0x9e03);
        EXPECT(gbc.pc(), 0xa33);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB ED 02DB
        gbc.setState(0x2457, 0xbc50, 0x5340, 0x35bb, 0xb710, 0x631b, 0x0, 0x0);
        gbc.writeMem(0x2457, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0x53);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0xbb);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0x63);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0xbc50);
        EXPECT(gbc.pc(), 0x2459);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB ED 02DC
        gbc.setState(0x2fbf, 0x4716, 0xc6c0, 0xc137, 0xe2c1, 0xeba4, 0x1, 0x0);
        gbc.writeMem(0x2fbf, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0xc6);
        EXPECT(gbc.b(),  0xc1);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0xe2);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0xa4);
        EXPECT(gbc.sp(), 0x4716);
        EXPECT(gbc.pc(), 0x2fc1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB ED 02DD
        gbc.setState(0xa749, 0xb2a6, 0x4b50, 0xcb16, 0x37da, 0x437a, 0x1, 0x1);
        gbc.writeMem(0xa749, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0xcb);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0x37);
        EXPECT(gbc.e(),  0xda);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0x7a);
        EXPECT(gbc.sp(), 0xb2a6);
        EXPECT(gbc.pc(), 0xa74b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa749), 0xcb);
        EXPECT(gbc.readMem(0xa74a), 0xed);
        // CB ED 02DE
        gbc.setState(0x7494, 0x7bd4, 0xe4d0, 0x62bb, 0x615, 0x7ae6, 0x0, 0x0);
        gbc.writeMem(0x7494, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0xe4);
        EXPECT(gbc.b(),  0x62);
        EXPECT(gbc.c(),  0xbb);
        EXPECT(gbc.d(),  0x6);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0x7a);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0x7bd4);
        EXPECT(gbc.pc(), 0x7496);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB ED 02DF
        gbc.setState(0xa, 0xf016, 0xfb80, 0x5cf6, 0x6c59, 0x7552, 0x0, 0x0);
        gbc.writeMem(0xa, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0xfb);
        EXPECT(gbc.b(),  0x5c);
        EXPECT(gbc.c(),  0xf6);
        EXPECT(gbc.d(),  0x6c);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0x72);
        EXPECT(gbc.sp(), 0xf016);
        EXPECT(gbc.pc(), 0xc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB ED 02E0
        gbc.setState(0xd73f, 0x745b, 0xe9d0, 0xb1ad, 0x5031, 0x1dc1, 0x1, 0x0);
        gbc.writeMem(0xd73f, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0xe9);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0x50);
        EXPECT(gbc.e(),  0x31);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0x745b);
        EXPECT(gbc.pc(), 0xd741);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd73f), 0xcb);
        EXPECT(gbc.readMem(0xd740), 0xed);
        // CB ED 02E1
        gbc.setState(0x17d6, 0x31d2, 0x5660, 0xf31b, 0x58c6, 0x6ec4, 0x1, 0x1);
        gbc.writeMem(0x17d6, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0xf3);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0xc6);
        EXPECT(gbc.h(),  0x6e);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0x31d2);
        EXPECT(gbc.pc(), 0x17d8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB ED 02E2
        gbc.setState(0xab4f, 0x314a, 0xa710, 0xf713, 0x9494, 0x4ca7, 0x1, 0x0);
        gbc.writeMem(0xab4f, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0xa7);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0x314a);
        EXPECT(gbc.pc(), 0xab51);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xab4f), 0xcb);
        EXPECT(gbc.readMem(0xab50), 0xed);
        // CB ED 02E4
        gbc.setState(0x50d6, 0x60aa, 0x6e10, 0xf142, 0xc2b0, 0x16f4, 0x0, 0x0);
        gbc.writeMem(0x50d6, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0x16);
        EXPECT(gbc.l(),  0xf4);
        EXPECT(gbc.sp(), 0x60aa);
        EXPECT(gbc.pc(), 0x50d8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB ED 02E5
        gbc.setState(0xb209, 0x98ad, 0x8010, 0xe5f1, 0x7742, 0xce07, 0x0, 0x1);
        gbc.writeMem(0xb209, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0xe5);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0x42);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0x27);
        EXPECT(gbc.sp(), 0x98ad);
        EXPECT(gbc.pc(), 0xb20b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb209), 0xcb);
        EXPECT(gbc.readMem(0xb20a), 0xed);
        // CB ED 02E6
        gbc.setState(0xbe24, 0x8d38, 0x6d0, 0x46c3, 0xf19e, 0x217c, 0x1, 0x0);
        gbc.writeMem(0xbe24, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0x46);
        EXPECT(gbc.c(),  0xc3);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0x21);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0x8d38);
        EXPECT(gbc.pc(), 0xbe26);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbe24), 0xcb);
        EXPECT(gbc.readMem(0xbe25), 0xed);
        // CB ED 02E7
        gbc.setState(0x60a3, 0xbdb2, 0x90a0, 0x1db4, 0x90f5, 0xafdb, 0x0, 0x1);
        gbc.writeMem(0x60a3, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0x90);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0xb4);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0xaf);
        EXPECT(gbc.l(),  0xfb);
        EXPECT(gbc.sp(), 0xbdb2);
        EXPECT(gbc.pc(), 0x60a5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB ED 02E8
        gbc.setState(0x8d39, 0x3f2c, 0x9b80, 0xbec5, 0xa7fc, 0xf2e5, 0x0, 0x1);
        gbc.writeMem(0x8d39, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0x9b);
        EXPECT(gbc.b(),  0xbe);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0xa7);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0xe5);
        EXPECT(gbc.sp(), 0x3f2c);
        EXPECT(gbc.pc(), 0x8d3b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8d39), 0xcb);
        EXPECT(gbc.readMem(0x8d3a), 0xed);
        // CB ED 02E9
        gbc.setState(0xb27f, 0x2d59, 0x6cd0, 0x45ad, 0x8227, 0xca9b, 0x0, 0x0);
        gbc.writeMem(0xb27f, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0xca);
        EXPECT(gbc.l(),  0xbb);
        EXPECT(gbc.sp(), 0x2d59);
        EXPECT(gbc.pc(), 0xb281);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb27f), 0xcb);
        EXPECT(gbc.readMem(0xb280), 0xed);
        // CB ED 02EA
        gbc.setState(0x6d93, 0x8210, 0xfcd0, 0xadf6, 0x5890, 0xb68f, 0x1, 0x1);
        gbc.writeMem(0x6d93, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0xad);
        EXPECT(gbc.c(),  0xf6);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0xaf);
        EXPECT(gbc.sp(), 0x8210);
        EXPECT(gbc.pc(), 0x6d95);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB ED 02EB
        gbc.setState(0x7686, 0xf4c8, 0x580, 0x20eb, 0x4929, 0x87e4, 0x0, 0x1);
        gbc.writeMem(0x7686, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0x5);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0x29);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0xf4c8);
        EXPECT(gbc.pc(), 0x7688);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB ED 02EC
        gbc.setState(0xd446, 0x8282, 0xd4c0, 0x2cc4, 0x7a89, 0xb958, 0x1, 0x1);
        gbc.writeMem(0xd446, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0xc4);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0x8282);
        EXPECT(gbc.pc(), 0xd448);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd446), 0xcb);
        EXPECT(gbc.readMem(0xd447), 0xed);
        // CB ED 02ED
        gbc.setState(0x6f9c, 0x23d7, 0x8f30, 0xee28, 0x5879, 0x8293, 0x0, 0x1);
        gbc.writeMem(0x6f9c, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0x8f);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0xb3);
        EXPECT(gbc.sp(), 0x23d7);
        EXPECT(gbc.pc(), 0x6f9e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB ED 02EE
        gbc.setState(0xa67f, 0x3433, 0xe740, 0x4ec2, 0xbcc, 0x7983, 0x0, 0x1);
        gbc.writeMem(0xa67f, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0xe7);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0xcc);
        EXPECT(gbc.h(),  0x79);
        EXPECT(gbc.l(),  0xa3);
        EXPECT(gbc.sp(), 0x3433);
        EXPECT(gbc.pc(), 0xa681);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa67f), 0xcb);
        EXPECT(gbc.readMem(0xa680), 0xed);
        // CB ED 02EF
        gbc.setState(0x9b6b, 0xe1dd, 0xad80, 0xa3f7, 0x93ca, 0x14c7, 0x1, 0x0);
        gbc.writeMem(0x9b6b, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0xad);
        EXPECT(gbc.b(),  0xa3);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0x93);
        EXPECT(gbc.e(),  0xca);
        EXPECT(gbc.h(),  0x14);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0xe1dd);
        EXPECT(gbc.pc(), 0x9b6d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9b6b), 0xcb);
        EXPECT(gbc.readMem(0x9b6c), 0xed);
        // CB ED 02F1
        gbc.setState(0x1388, 0xc2a4, 0x1110, 0xc7c8, 0x713, 0x937e, 0x0, 0x1);
        gbc.writeMem(0x1388, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0x11);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0xc8);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0x7e);
        EXPECT(gbc.sp(), 0xc2a4);
        EXPECT(gbc.pc(), 0x138a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB ED 02F2
        gbc.setState(0x2f22, 0xbae, 0x2e90, 0xb605, 0xf054, 0xcda4, 0x0, 0x1);
        gbc.writeMem(0x2f22, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0xcd);
        EXPECT(gbc.l(),  0xa4);
        EXPECT(gbc.sp(), 0xbae);
        EXPECT(gbc.pc(), 0x2f24);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB ED 02F3
        gbc.setState(0x11b1, 0x3f36, 0x2f80, 0xe6e6, 0xee5d, 0xd81a, 0x0, 0x1);
        gbc.writeMem(0x11b1, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0x2f);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0xee);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0x3f36);
        EXPECT(gbc.pc(), 0x11b3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB ED 02F4
        gbc.setState(0xf70, 0xcc60, 0x1b90, 0x543a, 0x566b, 0x4395, 0x0, 0x0);
        gbc.writeMem(0xf70, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0x56);
        EXPECT(gbc.e(),  0x6b);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0xcc60);
        EXPECT(gbc.pc(), 0xf72);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB ED 02F5
        gbc.setState(0x7cf0, 0xf561, 0x4660, 0x6fd4, 0x3f2, 0xccba, 0x0, 0x1);
        gbc.writeMem(0x7cf0, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0x46);
        EXPECT(gbc.b(),  0x6f);
        EXPECT(gbc.c(),  0xd4);
        EXPECT(gbc.d(),  0x3);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0xba);
        EXPECT(gbc.sp(), 0xf561);
        EXPECT(gbc.pc(), 0x7cf2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB ED 02F6
        gbc.setState(0xf21, 0xd382, 0x2c00, 0x240d, 0x7f25, 0xa262, 0x0, 0x0);
        gbc.writeMem(0xf21, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0x2c);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0xd);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0xd382);
        EXPECT(gbc.pc(), 0xf23);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB ED 02F7
        gbc.setState(0x8cf5, 0x69e0, 0x160, 0xb1c4, 0x7b8f, 0x92a4, 0x1, 0x1);
        gbc.writeMem(0x8cf5, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0x1);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0xc4);
        EXPECT(gbc.d(),  0x7b);
        EXPECT(gbc.e(),  0x8f);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0xa4);
        EXPECT(gbc.sp(), 0x69e0);
        EXPECT(gbc.pc(), 0x8cf7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8cf5), 0xcb);
        EXPECT(gbc.readMem(0x8cf6), 0xed);
        // CB ED 02F8
        gbc.setState(0xeff2, 0xfb8e, 0x2d90, 0x118d, 0xb322, 0xa96e, 0x1, 0x1);
        gbc.writeMem(0xeff2, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0x11);
        EXPECT(gbc.c(),  0x8d);
        EXPECT(gbc.d(),  0xb3);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0x6e);
        EXPECT(gbc.sp(), 0xfb8e);
        EXPECT(gbc.pc(), 0xeff4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xeff2), 0xcb);
        EXPECT(gbc.readMem(0xeff3), 0xed);
        // CB ED 02F9
        gbc.setState(0xa511, 0x6e4a, 0xb9a0, 0xcb93, 0x5060, 0x5f05, 0x0, 0x0);
        gbc.writeMem(0xa511, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0xcb);
        EXPECT(gbc.c(),  0x93);
        EXPECT(gbc.d(),  0x50);
        EXPECT(gbc.e(),  0x60);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0x6e4a);
        EXPECT(gbc.pc(), 0xa513);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa511), 0xcb);
        EXPECT(gbc.readMem(0xa512), 0xed);
        // CB ED 02FA
        gbc.setState(0xa906, 0xec19, 0x2150, 0x3289, 0x1ed1, 0xe2ab, 0x1, 0x1);
        gbc.writeMem(0xa906, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0x32);
        EXPECT(gbc.c(),  0x89);
        EXPECT(gbc.d(),  0x1e);
        EXPECT(gbc.e(),  0xd1);
        EXPECT(gbc.h(),  0xe2);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0xec19);
        EXPECT(gbc.pc(), 0xa908);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa906), 0xcb);
        EXPECT(gbc.readMem(0xa907), 0xed);
        // CB ED 02FB
        gbc.setState(0x3395, 0xc9bf, 0xf010, 0xf0a2, 0xa734, 0xaa8e, 0x0, 0x0);
        gbc.writeMem(0x3395, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0xf0);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0xa7);
        EXPECT(gbc.e(),  0x34);
        EXPECT(gbc.h(),  0xaa);
        EXPECT(gbc.l(),  0xae);
        EXPECT(gbc.sp(), 0xc9bf);
        EXPECT(gbc.pc(), 0x3397);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB ED 02FC
        gbc.setState(0x2ff, 0x4036, 0x30a0, 0xbeb6, 0x818c, 0xc35b, 0x1, 0x0);
        gbc.writeMem(0x2ff, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0xbe);
        EXPECT(gbc.c(),  0xb6);
        EXPECT(gbc.d(),  0x81);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0xc3);
        EXPECT(gbc.l(),  0x7b);
        EXPECT(gbc.sp(), 0x4036);
        EXPECT(gbc.pc(), 0x301);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB ED 02FD
        gbc.setState(0x6982, 0xd54d, 0xc3f0, 0x3cc2, 0x950, 0x93ee, 0x1, 0x1);
        gbc.writeMem(0x6982, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0xc3);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0x9);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0xee);
        EXPECT(gbc.sp(), 0xd54d);
        EXPECT(gbc.pc(), 0x6984);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB ED 02FF
        gbc.setState(0x62b1, 0x3ec6, 0x8440, 0x86ca, 0xa222, 0x6f49, 0x1, 0x0);
        gbc.writeMem(0x62b1, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0x84);
        EXPECT(gbc.b(),  0x86);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0x6f);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0x3ec6);
        EXPECT(gbc.pc(), 0x62b3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB ED 0300
        gbc.setState(0x954e, 0x4d9f, 0x2870, 0x8c1f, 0x6e6d, 0xee77, 0x0, 0x0);
        gbc.writeMem(0x954e, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0x1f);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0x6d);
        EXPECT(gbc.h(),  0xee);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0x4d9f);
        EXPECT(gbc.pc(), 0x9550);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x954e), 0xcb);
        EXPECT(gbc.readMem(0x954f), 0xed);
        // CB ED 0301
        gbc.setState(0xa160, 0x9fb1, 0xa7d0, 0x2124, 0xce21, 0xe4fd, 0x1, 0x0);
        gbc.writeMem(0xa160, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0xa7);
        EXPECT(gbc.b(),  0x21);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0xce);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0x9fb1);
        EXPECT(gbc.pc(), 0xa162);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa160), 0xcb);
        EXPECT(gbc.readMem(0xa161), 0xed);
        // CB ED 0303
        gbc.setState(0x1718, 0x720c, 0xa0b0, 0x831e, 0x5ad6, 0x28bd, 0x0, 0x1);
        gbc.writeMem(0x1718, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0x83);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0xd6);
        EXPECT(gbc.h(),  0x28);
        EXPECT(gbc.l(),  0xbd);
        EXPECT(gbc.sp(), 0x720c);
        EXPECT(gbc.pc(), 0x171a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB ED 0304
        gbc.setState(0xdda0, 0xa6c9, 0x31e0, 0x5d1a, 0x88d3, 0x76a8, 0x1, 0x0);
        gbc.writeMem(0xdda0, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0x31);
        EXPECT(gbc.b(),  0x5d);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0x88);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0x76);
        EXPECT(gbc.l(),  0xa8);
        EXPECT(gbc.sp(), 0xa6c9);
        EXPECT(gbc.pc(), 0xdda2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdda0), 0xcb);
        EXPECT(gbc.readMem(0xdda1), 0xed);
        // CB ED 0305
        gbc.setState(0x2d58, 0x4c52, 0x6100, 0x5966, 0x547c, 0x989b, 0x1, 0x0);
        gbc.writeMem(0x2d58, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0x59);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0x54);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0xbb);
        EXPECT(gbc.sp(), 0x4c52);
        EXPECT(gbc.pc(), 0x2d5a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB ED 0306
        gbc.setState(0xbcaa, 0xfa2a, 0x7a60, 0x96df, 0xebbc, 0x4f9b, 0x1, 0x0);
        gbc.writeMem(0xbcaa, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0x7a);
        EXPECT(gbc.b(),  0x96);
        EXPECT(gbc.c(),  0xdf);
        EXPECT(gbc.d(),  0xeb);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0x4f);
        EXPECT(gbc.l(),  0xbb);
        EXPECT(gbc.sp(), 0xfa2a);
        EXPECT(gbc.pc(), 0xbcac);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbcaa), 0xcb);
        EXPECT(gbc.readMem(0xbcab), 0xed);
        // CB ED 0307
        gbc.setState(0xdec9, 0xaca1, 0xcad0, 0x75c3, 0x36d1, 0xf88c, 0x0, 0x0);
        gbc.writeMem(0xdec9, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0xca);
        EXPECT(gbc.b(),  0x75);
        EXPECT(gbc.c(),  0xc3);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0xd1);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0xaca1);
        EXPECT(gbc.pc(), 0xdecb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdec9), 0xcb);
        EXPECT(gbc.readMem(0xdeca), 0xed);
        // CB ED 0308
        gbc.setState(0xd77e, 0x6c43, 0x3b40, 0xb33b, 0xe5ed, 0xedfa, 0x1, 0x1);
        gbc.writeMem(0xd77e, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0xb3);
        EXPECT(gbc.c(),  0x3b);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0xed);
        EXPECT(gbc.h(),  0xed);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0x6c43);
        EXPECT(gbc.pc(), 0xd780);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd77e), 0xcb);
        EXPECT(gbc.readMem(0xd77f), 0xed);
        // CB ED 0309
        gbc.setState(0xe02b, 0x6478, 0x9240, 0xd77f, 0xa2f, 0x28e5, 0x0, 0x1);
        gbc.writeMem(0xe02b, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0x2f);
        EXPECT(gbc.h(),  0x28);
        EXPECT(gbc.l(),  0xe5);
        EXPECT(gbc.sp(), 0x6478);
        EXPECT(gbc.pc(), 0xe02d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe02b), 0xcb);
        EXPECT(gbc.readMem(0xe02c), 0xed);
        // CB ED 030A
        gbc.setState(0x40ee, 0x3f4c, 0x8fb0, 0x36ab, 0xff80, 0x6601, 0x1, 0x0);
        gbc.writeMem(0x40ee, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0x8f);
        EXPECT(gbc.b(),  0x36);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0xff);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0x66);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0x3f4c);
        EXPECT(gbc.pc(), 0x40f0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB ED 030B
        gbc.setState(0xbbd2, 0x6683, 0xc0a0, 0x4aa8, 0x55e3, 0xc76a, 0x1, 0x1);
        gbc.writeMem(0xbbd2, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0x4a);
        EXPECT(gbc.c(),  0xa8);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0xe3);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0x6683);
        EXPECT(gbc.pc(), 0xbbd4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbbd2), 0xcb);
        EXPECT(gbc.readMem(0xbbd3), 0xed);
        // CB ED 030C
        gbc.setState(0x1a92, 0xa6eb, 0xaf70, 0x9701, 0xd903, 0x6fbb, 0x1, 0x1);
        gbc.writeMem(0x1a92, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0xaf);
        EXPECT(gbc.b(),  0x97);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0xd9);
        EXPECT(gbc.e(),  0x3);
        EXPECT(gbc.h(),  0x6f);
        EXPECT(gbc.l(),  0xbb);
        EXPECT(gbc.sp(), 0xa6eb);
        EXPECT(gbc.pc(), 0x1a94);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB ED 030D
        gbc.setState(0x6f40, 0xdceb, 0xffe0, 0x48e2, 0xd9cb, 0xf23f, 0x0, 0x0);
        gbc.writeMem(0x6f40, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0xd9);
        EXPECT(gbc.e(),  0xcb);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0xdceb);
        EXPECT(gbc.pc(), 0x6f42);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB ED 030E
        gbc.setState(0x40f0, 0x180a, 0xfaf0, 0x2254, 0xa76b, 0x35fc, 0x0, 0x1);
        gbc.writeMem(0x40f0, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0xfa);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0xa7);
        EXPECT(gbc.e(),  0x6b);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0xfc);
        EXPECT(gbc.sp(), 0x180a);
        EXPECT(gbc.pc(), 0x40f2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB ED 0310
        gbc.setState(0x7d8c, 0xd3c7, 0x24a0, 0xeaa5, 0x31c7, 0x25a5, 0x0, 0x1);
        gbc.writeMem(0x7d8c, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0x24);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0x25);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0xd3c7);
        EXPECT(gbc.pc(), 0x7d8e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB ED 0311
        gbc.setState(0x6c77, 0xea4e, 0x8910, 0x2b1a, 0x796f, 0xb766, 0x1, 0x0);
        gbc.writeMem(0x6c77, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0x2b);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0x79);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0xea4e);
        EXPECT(gbc.pc(), 0x6c79);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB ED 0312
        gbc.setState(0x9bd5, 0x50a8, 0x7ac0, 0x6663, 0xf226, 0xfc8d, 0x1, 0x1);
        gbc.writeMem(0x9bd5, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0x7a);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0x63);
        EXPECT(gbc.d(),  0xf2);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0xad);
        EXPECT(gbc.sp(), 0x50a8);
        EXPECT(gbc.pc(), 0x9bd7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9bd5), 0xcb);
        EXPECT(gbc.readMem(0x9bd6), 0xed);
        // CB ED 0313
        gbc.setState(0x1042, 0xa4c8, 0xb5d0, 0x1, 0x2ccc, 0xf4e7, 0x0, 0x1);
        gbc.writeMem(0x1042, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0xb5);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0x2c);
        EXPECT(gbc.e(),  0xcc);
        EXPECT(gbc.h(),  0xf4);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0xa4c8);
        EXPECT(gbc.pc(), 0x1044);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB ED 0314
        gbc.setState(0x8e54, 0xc067, 0x61b0, 0xd5b8, 0x43b1, 0x7e05, 0x1, 0x0);
        gbc.writeMem(0x8e54, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0xd5);
        EXPECT(gbc.c(),  0xb8);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0xb1);
        EXPECT(gbc.h(),  0x7e);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0xc067);
        EXPECT(gbc.pc(), 0x8e56);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8e54), 0xcb);
        EXPECT(gbc.readMem(0x8e55), 0xed);
        // CB ED 0315
        gbc.setState(0x4de2, 0x5cb2, 0x32e0, 0x4d1a, 0xb1f1, 0xb519, 0x0, 0x0);
        gbc.writeMem(0x4de2, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0xb1);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0x39);
        EXPECT(gbc.sp(), 0x5cb2);
        EXPECT(gbc.pc(), 0x4de4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB ED 0316
        gbc.setState(0x6342, 0x9be1, 0x13a0, 0xfae4, 0x168e, 0xfcf2, 0x1, 0x0);
        gbc.writeMem(0x6342, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0x13);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0xf2);
        EXPECT(gbc.sp(), 0x9be1);
        EXPECT(gbc.pc(), 0x6344);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB ED 0317
        gbc.setState(0xaeeb, 0x908c, 0x6670, 0xedcd, 0x9560, 0xba3c, 0x0, 0x0);
        gbc.writeMem(0xaeeb, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0x66);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0xcd);
        EXPECT(gbc.d(),  0x95);
        EXPECT(gbc.e(),  0x60);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0x908c);
        EXPECT(gbc.pc(), 0xaeed);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaeeb), 0xcb);
        EXPECT(gbc.readMem(0xaeec), 0xed);
        // CB ED 0318
        gbc.setState(0x2f0d, 0x4afe, 0xbd10, 0x32d2, 0x7d37, 0x59bf, 0x0, 0x1);
        gbc.writeMem(0x2f0d, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0xbd);
        EXPECT(gbc.b(),  0x32);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0x7d);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0xbf);
        EXPECT(gbc.sp(), 0x4afe);
        EXPECT(gbc.pc(), 0x2f0f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB ED 0319
        gbc.setState(0xba8a, 0xba18, 0xd570, 0x43fe, 0x6650, 0xa3bb, 0x0, 0x1);
        gbc.writeMem(0xba8a, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0xd5);
        EXPECT(gbc.b(),  0x43);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0x66);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0xbb);
        EXPECT(gbc.sp(), 0xba18);
        EXPECT(gbc.pc(), 0xba8c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xba8a), 0xcb);
        EXPECT(gbc.readMem(0xba8b), 0xed);
        // CB ED 031A
        gbc.setState(0xcfe0, 0x7386, 0x7200, 0x1868, 0xced3, 0x4e98, 0x0, 0x1);
        gbc.writeMem(0xcfe0, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0x18);
        EXPECT(gbc.c(),  0x68);
        EXPECT(gbc.d(),  0xce);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0x4e);
        EXPECT(gbc.l(),  0xb8);
        EXPECT(gbc.sp(), 0x7386);
        EXPECT(gbc.pc(), 0xcfe2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcfe0), 0xcb);
        EXPECT(gbc.readMem(0xcfe1), 0xed);
        // CB ED 031B
        gbc.setState(0x8324, 0x17e, 0x64a0, 0x6b78, 0x9cc0, 0xc8c, 0x1, 0x1);
        gbc.writeMem(0x8324, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0x6b);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0xc0);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0x17e);
        EXPECT(gbc.pc(), 0x8326);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8324), 0xcb);
        EXPECT(gbc.readMem(0x8325), 0xed);
        // CB ED 031C
        gbc.setState(0x3bcb, 0x5dcb, 0x86a0, 0xd581, 0x5348, 0xa0b2, 0x0, 0x1);
        gbc.writeMem(0x3bcb, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0xd5);
        EXPECT(gbc.c(),  0x81);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0xa0);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0x5dcb);
        EXPECT(gbc.pc(), 0x3bcd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB ED 031D
        gbc.setState(0x56b8, 0xe7b6, 0xc740, 0x7dad, 0x6373, 0x392d, 0x0, 0x0);
        gbc.writeMem(0x56b8, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0xc7);
        EXPECT(gbc.b(),  0x7d);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0x63);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0xe7b6);
        EXPECT(gbc.pc(), 0x56ba);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB ED 031E
        gbc.setState(0x1d5b, 0x434f, 0x26f0, 0x31c7, 0xf64e, 0x3efe, 0x1, 0x1);
        gbc.writeMem(0x1d5b, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0xc7);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0xfe);
        EXPECT(gbc.sp(), 0x434f);
        EXPECT(gbc.pc(), 0x1d5d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB ED 031F
        gbc.setState(0x1fe1, 0x6650, 0x7910, 0x6154, 0x201, 0x9de4, 0x0, 0x0);
        gbc.writeMem(0x1fe1, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0x6650);
        EXPECT(gbc.pc(), 0x1fe3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB ED 0320
        gbc.setState(0x2853, 0x29b, 0xcff0, 0x4dc6, 0x1e0f, 0xb3bc, 0x0, 0x0);
        gbc.writeMem(0x2853, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0xcf);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0xc6);
        EXPECT(gbc.d(),  0x1e);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0x29b);
        EXPECT(gbc.pc(), 0x2855);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB ED 0321
        gbc.setState(0xdc2f, 0x8512, 0x7d20, 0xa60c, 0x4409, 0xd71d, 0x1, 0x1);
        gbc.writeMem(0xdc2f, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0x7d);
        EXPECT(gbc.b(),  0xa6);
        EXPECT(gbc.c(),  0xc);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0xd7);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0x8512);
        EXPECT(gbc.pc(), 0xdc31);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdc2f), 0xcb);
        EXPECT(gbc.readMem(0xdc30), 0xed);
        // CB ED 0322
        gbc.setState(0xbf1d, 0x2e7d, 0xb250, 0xe17, 0x3c8, 0x23a3, 0x1, 0x1);
        gbc.writeMem(0xbf1d, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0xb2);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0x17);
        EXPECT(gbc.d(),  0x3);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0xa3);
        EXPECT(gbc.sp(), 0x2e7d);
        EXPECT(gbc.pc(), 0xbf1f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbf1d), 0xcb);
        EXPECT(gbc.readMem(0xbf1e), 0xed);
        // CB ED 0323
        gbc.setState(0x6b21, 0xf318, 0xbe20, 0x3027, 0xbbf, 0xaf3b, 0x0, 0x1);
        gbc.writeMem(0x6b21, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0xbf);
        EXPECT(gbc.h(),  0xaf);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0xf318);
        EXPECT(gbc.pc(), 0x6b23);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB ED 0324
        gbc.setState(0x122b, 0xc8fc, 0x1790, 0x6e51, 0x3e8f, 0x8eb9, 0x1, 0x1);
        gbc.writeMem(0x122b, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0x17);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0x8f);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0xc8fc);
        EXPECT(gbc.pc(), 0x122d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB ED 0325
        gbc.setState(0xdac, 0x96cb, 0x6c10, 0xc3c6, 0x218f, 0x428, 0x1, 0x0);
        gbc.writeMem(0xdac, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0xc3);
        EXPECT(gbc.c(),  0xc6);
        EXPECT(gbc.d(),  0x21);
        EXPECT(gbc.e(),  0x8f);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0x96cb);
        EXPECT(gbc.pc(), 0xdae);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB ED 0326
        gbc.setState(0xe14b, 0x45ae, 0x46b0, 0x7298, 0xbeb3, 0xc70c, 0x1, 0x1);
        gbc.writeMem(0xe14b, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0x46);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0xb3);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0x2c);
        EXPECT(gbc.sp(), 0x45ae);
        EXPECT(gbc.pc(), 0xe14d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe14b), 0xcb);
        EXPECT(gbc.readMem(0xe14c), 0xed);
        // CB ED 0327
        gbc.setState(0xad79, 0xa86d, 0x4680, 0xc750, 0x893d, 0x1e65, 0x0, 0x0);
        gbc.writeMem(0xad79, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0x46);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0x89);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0x65);
        EXPECT(gbc.sp(), 0xa86d);
        EXPECT(gbc.pc(), 0xad7b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xad79), 0xcb);
        EXPECT(gbc.readMem(0xad7a), 0xed);
        // CB ED 0328
        gbc.setState(0xeb3d, 0xc4b8, 0x78e0, 0xc5cd, 0x3d95, 0x6595, 0x0, 0x1);
        gbc.writeMem(0xeb3d, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0xcd);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0x95);
        EXPECT(gbc.h(),  0x65);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0xc4b8);
        EXPECT(gbc.pc(), 0xeb3f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xeb3d), 0xcb);
        EXPECT(gbc.readMem(0xeb3e), 0xed);
        // CB ED 0329
        gbc.setState(0x9387, 0x2f5f, 0xade0, 0x6b17, 0x9fd9, 0x1090, 0x1, 0x1);
        gbc.writeMem(0x9387, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0xad);
        EXPECT(gbc.b(),  0x6b);
        EXPECT(gbc.c(),  0x17);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0x10);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0x2f5f);
        EXPECT(gbc.pc(), 0x9389);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9387), 0xcb);
        EXPECT(gbc.readMem(0x9388), 0xed);
        // CB ED 032A
        gbc.setState(0x4bf0, 0xbc67, 0x1a40, 0x39ef, 0xadbf, 0x36c6, 0x0, 0x1);
        gbc.writeMem(0x4bf0, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0x1a);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0xad);
        EXPECT(gbc.e(),  0xbf);
        EXPECT(gbc.h(),  0x36);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0xbc67);
        EXPECT(gbc.pc(), 0x4bf2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB ED 032B
        gbc.setState(0x291a, 0x830c, 0x6440, 0xb6aa, 0xade4, 0xa90b, 0x0, 0x1);
        gbc.writeMem(0x291a, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0xad);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0x2b);
        EXPECT(gbc.sp(), 0x830c);
        EXPECT(gbc.pc(), 0x291c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB ED 032C
        gbc.setState(0x7140, 0x5761, 0x2380, 0xe548, 0x4099, 0x394e, 0x1, 0x0);
        gbc.writeMem(0x7140, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0xe5);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0x40);
        EXPECT(gbc.e(),  0x99);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0x6e);
        EXPECT(gbc.sp(), 0x5761);
        EXPECT(gbc.pc(), 0x7142);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB ED 032E
        gbc.setState(0xa0e0, 0x23e, 0x3f80, 0xae2, 0xf211, 0xa073, 0x1, 0x0);
        gbc.writeMem(0xa0e0, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0xf2);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0xa0);
        EXPECT(gbc.l(),  0x73);
        EXPECT(gbc.sp(), 0x23e);
        EXPECT(gbc.pc(), 0xa0e2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa0e0), 0xcb);
        EXPECT(gbc.readMem(0xa0e1), 0xed);
        // CB ED 032F
        gbc.setState(0x3a92, 0x3698, 0x5080, 0xf487, 0x5bf1, 0x98dd, 0x1, 0x1);
        gbc.writeMem(0x3a92, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0x87);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0x3698);
        EXPECT(gbc.pc(), 0x3a94);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB ED 0330
        gbc.setState(0x34c1, 0x7864, 0x2550, 0xa795, 0xe89d, 0x31fe, 0x1, 0x1);
        gbc.writeMem(0x34c1, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0x25);
        EXPECT(gbc.b(),  0xa7);
        EXPECT(gbc.c(),  0x95);
        EXPECT(gbc.d(),  0xe8);
        EXPECT(gbc.e(),  0x9d);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0xfe);
        EXPECT(gbc.sp(), 0x7864);
        EXPECT(gbc.pc(), 0x34c3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB ED 0331
        gbc.setState(0x40ad, 0x28d1, 0x79d0, 0x20dd, 0x389e, 0xd34d, 0x1, 0x0);
        gbc.writeMem(0x40ad, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0xdd);
        EXPECT(gbc.d(),  0x38);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0xd3);
        EXPECT(gbc.l(),  0x6d);
        EXPECT(gbc.sp(), 0x28d1);
        EXPECT(gbc.pc(), 0x40af);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB ED 0332
        gbc.setState(0x92f2, 0xb2f7, 0xc830, 0x2522, 0xaa2e, 0x873f, 0x0, 0x0);
        gbc.writeMem(0x92f2, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0x22);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0xb2f7);
        EXPECT(gbc.pc(), 0x92f4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x92f2), 0xcb);
        EXPECT(gbc.readMem(0x92f3), 0xed);
        // CB ED 0333
        gbc.setState(0x321d, 0x4d5a, 0x7c00, 0x6b43, 0x7f3d, 0x2625, 0x1, 0x1);
        gbc.writeMem(0x321d, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0x7c);
        EXPECT(gbc.b(),  0x6b);
        EXPECT(gbc.c(),  0x43);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0x4d5a);
        EXPECT(gbc.pc(), 0x321f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB ED 0334
        gbc.setState(0x1bb6, 0xf4ac, 0x2190, 0x52ce, 0x896a, 0xbfac, 0x0, 0x0);
        gbc.writeMem(0x1bb6, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0x89);
        EXPECT(gbc.e(),  0x6a);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0xf4ac);
        EXPECT(gbc.pc(), 0x1bb8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB ED 0335
        gbc.setState(0x90d9, 0xfad, 0x81a0, 0x4734, 0x37fd, 0xb995, 0x0, 0x0);
        gbc.writeMem(0x90d9, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0x81);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0x37);
        EXPECT(gbc.e(),  0xfd);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0xfad);
        EXPECT(gbc.pc(), 0x90db);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x90d9), 0xcb);
        EXPECT(gbc.readMem(0x90da), 0xed);
        // CB ED 0336
        gbc.setState(0xdf0c, 0x4d8f, 0x10c0, 0x472f, 0xfa23, 0x806d, 0x1, 0x1);
        gbc.writeMem(0xdf0c, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0x10);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0x2f);
        EXPECT(gbc.d(),  0xfa);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0x6d);
        EXPECT(gbc.sp(), 0x4d8f);
        EXPECT(gbc.pc(), 0xdf0e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdf0c), 0xcb);
        EXPECT(gbc.readMem(0xdf0d), 0xed);
        // CB ED 0337
        gbc.setState(0x92c9, 0x5661, 0x47e0, 0xc144, 0x3049, 0xd643, 0x1, 0x0);
        gbc.writeMem(0x92c9, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0xc1);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0x63);
        EXPECT(gbc.sp(), 0x5661);
        EXPECT(gbc.pc(), 0x92cb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x92c9), 0xcb);
        EXPECT(gbc.readMem(0x92ca), 0xed);
        // CB ED 0338
        gbc.setState(0xc977, 0xf754, 0x1710, 0xa94c, 0x7f80, 0x304f, 0x1, 0x1);
        gbc.writeMem(0xc977, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0x17);
        EXPECT(gbc.b(),  0xa9);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0x30);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0xf754);
        EXPECT(gbc.pc(), 0xc979);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc977), 0xcb);
        EXPECT(gbc.readMem(0xc978), 0xed);
        // CB ED 0339
        gbc.setState(0x98ae, 0x3027, 0xab50, 0xe352, 0x218f, 0x9b0d, 0x0, 0x0);
        gbc.writeMem(0x98ae, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0xab);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0x52);
        EXPECT(gbc.d(),  0x21);
        EXPECT(gbc.e(),  0x8f);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0x3027);
        EXPECT(gbc.pc(), 0x98b0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x98ae), 0xcb);
        EXPECT(gbc.readMem(0x98af), 0xed);
        // CB ED 033A
        gbc.setState(0x612b, 0x87a2, 0xed00, 0xb51a, 0xf48f, 0x4561, 0x1, 0x1);
        gbc.writeMem(0x612b, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0xb5);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0xf4);
        EXPECT(gbc.e(),  0x8f);
        EXPECT(gbc.h(),  0x45);
        EXPECT(gbc.l(),  0x61);
        EXPECT(gbc.sp(), 0x87a2);
        EXPECT(gbc.pc(), 0x612d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB ED 033B
        gbc.setState(0xd6d1, 0x440d, 0xdbe0, 0x2061, 0xa6de, 0xadb0, 0x1, 0x1);
        gbc.writeMem(0xd6d1, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0xdb);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0x61);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0x440d);
        EXPECT(gbc.pc(), 0xd6d3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd6d1), 0xcb);
        EXPECT(gbc.readMem(0xd6d2), 0xed);
        // CB ED 033C
        gbc.setState(0x50c7, 0x171a, 0xa280, 0xdc4d, 0x66ea, 0x99b, 0x0, 0x1);
        gbc.writeMem(0x50c7, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0x66);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0x9);
        EXPECT(gbc.l(),  0xbb);
        EXPECT(gbc.sp(), 0x171a);
        EXPECT(gbc.pc(), 0x50c9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB ED 033D
        gbc.setState(0x5cb6, 0x1c0e, 0xbfa0, 0x405a, 0x80da, 0xfec1, 0x1, 0x1);
        gbc.writeMem(0x5cb6, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0x5a);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0xda);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0x1c0e);
        EXPECT(gbc.pc(), 0x5cb8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB ED 033E
        gbc.setState(0x1822, 0xa9d5, 0xb300, 0x7edb, 0x5eae, 0x5057, 0x0, 0x0);
        gbc.writeMem(0x1822, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0xb3);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0xae);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0xa9d5);
        EXPECT(gbc.pc(), 0x1824);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB ED 033F
        gbc.setState(0x2adf, 0x3778, 0x7ac0, 0x31ec, 0xf60a, 0x4ee9, 0x1, 0x1);
        gbc.writeMem(0x2adf, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0x7a);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0xec);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0x4e);
        EXPECT(gbc.l(),  0xe9);
        EXPECT(gbc.sp(), 0x3778);
        EXPECT(gbc.pc(), 0x2ae1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB ED 0340
        gbc.setState(0xd8bc, 0x3e02, 0x990, 0xeaa9, 0xf9bc, 0x2eb, 0x0, 0x0);
        gbc.writeMem(0xd8bc, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0xa9);
        EXPECT(gbc.d(),  0xf9);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0x2);
        EXPECT(gbc.l(),  0xeb);
        EXPECT(gbc.sp(), 0x3e02);
        EXPECT(gbc.pc(), 0xd8be);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd8bc), 0xcb);
        EXPECT(gbc.readMem(0xd8bd), 0xed);
        // CB ED 0341
        gbc.setState(0x505a, 0x5d4, 0xb440, 0x968a, 0xd129, 0x777b, 0x0, 0x1);
        gbc.writeMem(0x505a, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0xb4);
        EXPECT(gbc.b(),  0x96);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0x29);
        EXPECT(gbc.h(),  0x77);
        EXPECT(gbc.l(),  0x7b);
        EXPECT(gbc.sp(), 0x5d4);
        EXPECT(gbc.pc(), 0x505c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB ED 0342
        gbc.setState(0x33ed, 0x57fa, 0x54b0, 0x8d30, 0x7117, 0x67be, 0x1, 0x1);
        gbc.writeMem(0x33ed, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0x54);
        EXPECT(gbc.b(),  0x8d);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0x71);
        EXPECT(gbc.e(),  0x17);
        EXPECT(gbc.h(),  0x67);
        EXPECT(gbc.l(),  0xbe);
        EXPECT(gbc.sp(), 0x57fa);
        EXPECT(gbc.pc(), 0x33ef);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB ED 0343
        gbc.setState(0xd7e0, 0x4631, 0x5240, 0x170, 0xe0ad, 0x3f9b, 0x1, 0x1);
        gbc.writeMem(0xd7e0, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0xbb);
        EXPECT(gbc.sp(), 0x4631);
        EXPECT(gbc.pc(), 0xd7e2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd7e0), 0xcb);
        EXPECT(gbc.readMem(0xd7e1), 0xed);
        // CB ED 0344
        gbc.setState(0x1849, 0x1d44, 0x1de0, 0xc8a8, 0xfb45, 0x8b0d, 0x1, 0x1);
        gbc.writeMem(0x1849, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0xa8);
        EXPECT(gbc.d(),  0xfb);
        EXPECT(gbc.e(),  0x45);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0x1d44);
        EXPECT(gbc.pc(), 0x184b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB ED 0345
        gbc.setState(0x1fb6, 0x66f2, 0x4a30, 0x2bc, 0xae4, 0x4283, 0x0, 0x0);
        gbc.writeMem(0x1fb6, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0x4a);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0xbc);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0x42);
        EXPECT(gbc.l(),  0xa3);
        EXPECT(gbc.sp(), 0x66f2);
        EXPECT(gbc.pc(), 0x1fb8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB ED 0346
        gbc.setState(0x7d3c, 0x13e0, 0x6680, 0x8f5f, 0xfcc, 0x231a, 0x0, 0x0);
        gbc.writeMem(0x7d3c, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0x66);
        EXPECT(gbc.b(),  0x8f);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0xcc);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0x13e0);
        EXPECT(gbc.pc(), 0x7d3e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB ED 0347
        gbc.setState(0x8afc, 0x2544, 0xd980, 0xcaf4, 0x1773, 0x1831, 0x0, 0x1);
        gbc.writeMem(0x8afc, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0xd9);
        EXPECT(gbc.b(),  0xca);
        EXPECT(gbc.c(),  0xf4);
        EXPECT(gbc.d(),  0x17);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0x18);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0x2544);
        EXPECT(gbc.pc(), 0x8afe);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8afc), 0xcb);
        EXPECT(gbc.readMem(0x8afd), 0xed);
        // CB ED 0348
        gbc.setState(0xc3c5, 0x8b9e, 0x3b80, 0xb889, 0xa15, 0x2b41, 0x0, 0x0);
        gbc.writeMem(0xc3c5, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0x89);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0x2b);
        EXPECT(gbc.l(),  0x61);
        EXPECT(gbc.sp(), 0x8b9e);
        EXPECT(gbc.pc(), 0xc3c7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc3c5), 0xcb);
        EXPECT(gbc.readMem(0xc3c6), 0xed);
        // CB ED 0349
        gbc.setState(0xd662, 0xf4ac, 0xb5c0, 0xa754, 0xac69, 0x402, 0x0, 0x1);
        gbc.writeMem(0xd662, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0xb5);
        EXPECT(gbc.b(),  0xa7);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0x22);
        EXPECT(gbc.sp(), 0xf4ac);
        EXPECT(gbc.pc(), 0xd664);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd662), 0xcb);
        EXPECT(gbc.readMem(0xd663), 0xed);
        // CB ED 034A
        gbc.setState(0x242b, 0x7096, 0xb310, 0x500d, 0x37a3, 0x1071, 0x1, 0x0);
        gbc.writeMem(0x242b, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0xb3);
        EXPECT(gbc.b(),  0x50);
        EXPECT(gbc.c(),  0xd);
        EXPECT(gbc.d(),  0x37);
        EXPECT(gbc.e(),  0xa3);
        EXPECT(gbc.h(),  0x10);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0x7096);
        EXPECT(gbc.pc(), 0x242d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB ED 034B
        gbc.setState(0xe90d, 0x5134, 0xc970, 0x25c8, 0xd8c, 0xcfd5, 0x0, 0x0);
        gbc.writeMem(0xe90d, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0xc9);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0xc8);
        EXPECT(gbc.d(),  0xd);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0x5134);
        EXPECT(gbc.pc(), 0xe90f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe90d), 0xcb);
        EXPECT(gbc.readMem(0xe90e), 0xed);
        // CB ED 034C
        gbc.setState(0xc8d9, 0x5612, 0x57f0, 0xe8d4, 0x7bb8, 0xae47, 0x0, 0x0);
        gbc.writeMem(0xc8d9, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0x57);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0xd4);
        EXPECT(gbc.d(),  0x7b);
        EXPECT(gbc.e(),  0xb8);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0x67);
        EXPECT(gbc.sp(), 0x5612);
        EXPECT(gbc.pc(), 0xc8db);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc8d9), 0xcb);
        EXPECT(gbc.readMem(0xc8da), 0xed);
        // CB ED 034D
        gbc.setState(0x36e, 0xb3b3, 0x6db0, 0x54d8, 0x9dc0, 0x99c1, 0x1, 0x1);
        gbc.writeMem(0x36e, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0x6d);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0xd8);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0xc0);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0xb3b3);
        EXPECT(gbc.pc(), 0x370);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB ED 034E
        gbc.setState(0xd94a, 0x39e9, 0xb000, 0x72f9, 0x3e70, 0x51c2, 0x1, 0x0);
        gbc.writeMem(0xd94a, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0xf9);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0x39e9);
        EXPECT(gbc.pc(), 0xd94c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd94a), 0xcb);
        EXPECT(gbc.readMem(0xd94b), 0xed);
        // CB ED 0350
        gbc.setState(0xa6f0, 0x8111, 0x4480, 0xff6c, 0xf3cd, 0xb8f0, 0x0, 0x1);
        gbc.writeMem(0xa6f0, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0xff);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0xcd);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0x8111);
        EXPECT(gbc.pc(), 0xa6f2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa6f0), 0xcb);
        EXPECT(gbc.readMem(0xa6f1), 0xed);
        // CB ED 0351
        gbc.setState(0xcd37, 0x5edb, 0x3c30, 0x846b, 0x5ee2, 0x87ad, 0x1, 0x1);
        gbc.writeMem(0xcd37, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0x84);
        EXPECT(gbc.c(),  0x6b);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0xe2);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0xad);
        EXPECT(gbc.sp(), 0x5edb);
        EXPECT(gbc.pc(), 0xcd39);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcd37), 0xcb);
        EXPECT(gbc.readMem(0xcd38), 0xed);
        // CB ED 0352
        gbc.setState(0xa79a, 0x658f, 0xf310, 0x5fb5, 0x7531, 0xe6f2, 0x0, 0x0);
        gbc.writeMem(0xa79a, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0x75);
        EXPECT(gbc.e(),  0x31);
        EXPECT(gbc.h(),  0xe6);
        EXPECT(gbc.l(),  0xf2);
        EXPECT(gbc.sp(), 0x658f);
        EXPECT(gbc.pc(), 0xa79c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa79a), 0xcb);
        EXPECT(gbc.readMem(0xa79b), 0xed);
        // CB ED 0353
        gbc.setState(0x642, 0x66a0, 0xa300, 0x832f, 0x2389, 0x8e2a, 0x0, 0x1);
        gbc.writeMem(0x642, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0xa3);
        EXPECT(gbc.b(),  0x83);
        EXPECT(gbc.c(),  0x2f);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0x2a);
        EXPECT(gbc.sp(), 0x66a0);
        EXPECT(gbc.pc(), 0x644);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB ED 0354
        gbc.setState(0x51af, 0xfcf8, 0x5b80, 0xeb09, 0x29a5, 0xd0fe, 0x1, 0x0);
        gbc.writeMem(0x51af, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0xeb);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0xa5);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0xfe);
        EXPECT(gbc.sp(), 0xfcf8);
        EXPECT(gbc.pc(), 0x51b1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB ED 0355
        gbc.setState(0xd49c, 0x7743, 0xb470, 0xa072, 0xcc99, 0x9c14, 0x0, 0x0);
        gbc.writeMem(0xd49c, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0xb4);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0x99);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0x7743);
        EXPECT(gbc.pc(), 0xd49e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd49c), 0xcb);
        EXPECT(gbc.readMem(0xd49d), 0xed);
        // CB ED 0356
        gbc.setState(0x96bc, 0x8d2b, 0x4920, 0xad0d, 0x188f, 0xa98f, 0x0, 0x0);
        gbc.writeMem(0x96bc, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0xad);
        EXPECT(gbc.c(),  0xd);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0x8f);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0xaf);
        EXPECT(gbc.sp(), 0x8d2b);
        EXPECT(gbc.pc(), 0x96be);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x96bc), 0xcb);
        EXPECT(gbc.readMem(0x96bd), 0xed);
        // CB ED 0357
        gbc.setState(0xd37a, 0x55c1, 0x9ab0, 0xd7b2, 0x497e, 0xc2b5, 0x0, 0x0);
        gbc.writeMem(0xd37a, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0x9a);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0x7e);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0x55c1);
        EXPECT(gbc.pc(), 0xd37c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd37a), 0xcb);
        EXPECT(gbc.readMem(0xd37b), 0xed);
        // CB ED 0358
        gbc.setState(0x5f65, 0x20d7, 0x3b60, 0x545, 0xbad8, 0x27b8, 0x0, 0x1);
        gbc.writeMem(0x5f65, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0xba);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0x27);
        EXPECT(gbc.l(),  0xb8);
        EXPECT(gbc.sp(), 0x20d7);
        EXPECT(gbc.pc(), 0x5f67);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB ED 0359
        gbc.setState(0xc705, 0x2ffc, 0x15d0, 0x5fd6, 0xb26c, 0x3e57, 0x0, 0x1);
        gbc.writeMem(0xc705, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0x15);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0xd6);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0x2ffc);
        EXPECT(gbc.pc(), 0xc707);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc705), 0xcb);
        EXPECT(gbc.readMem(0xc706), 0xed);
        // CB ED 035B
        gbc.setState(0xe153, 0x99af, 0x60a0, 0x8faf, 0x2724, 0x8c59, 0x1, 0x0);
        gbc.writeMem(0xe153, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0x8f);
        EXPECT(gbc.c(),  0xaf);
        EXPECT(gbc.d(),  0x27);
        EXPECT(gbc.e(),  0x24);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0x79);
        EXPECT(gbc.sp(), 0x99af);
        EXPECT(gbc.pc(), 0xe155);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe153), 0xcb);
        EXPECT(gbc.readMem(0xe154), 0xed);
        // CB ED 035C
        gbc.setState(0xb48, 0x71af, 0xe0e0, 0xa273, 0x46b4, 0xb22e, 0x0, 0x0);
        gbc.writeMem(0xb48, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0xe0);
        EXPECT(gbc.b(),  0xa2);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0x46);
        EXPECT(gbc.e(),  0xb4);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0x71af);
        EXPECT(gbc.pc(), 0xb4a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB ED 035D
        gbc.setState(0x2525, 0xd2b3, 0x5e60, 0xc4af, 0x2d6, 0x4205, 0x0, 0x1);
        gbc.writeMem(0x2525, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0x5e);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0xaf);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0xd6);
        EXPECT(gbc.h(),  0x42);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0xd2b3);
        EXPECT(gbc.pc(), 0x2527);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB ED 035E
        gbc.setState(0x8111, 0x3029, 0xed40, 0x1bc7, 0x3137, 0x4ebd, 0x1, 0x1);
        gbc.writeMem(0x8111, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0xc7);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0x4e);
        EXPECT(gbc.l(),  0xbd);
        EXPECT(gbc.sp(), 0x3029);
        EXPECT(gbc.pc(), 0x8113);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8111), 0xcb);
        EXPECT(gbc.readMem(0x8112), 0xed);
        // CB ED 035F
        gbc.setState(0xbc1f, 0x82a1, 0xf950, 0x6aa1, 0xf573, 0x424c, 0x1, 0x1);
        gbc.writeMem(0xbc1f, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0xf9);
        EXPECT(gbc.b(),  0x6a);
        EXPECT(gbc.c(),  0xa1);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0x42);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0x82a1);
        EXPECT(gbc.pc(), 0xbc21);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbc1f), 0xcb);
        EXPECT(gbc.readMem(0xbc20), 0xed);
        // CB ED 0360
        gbc.setState(0xd775, 0x9cf4, 0x660, 0x5f7e, 0x499, 0x24b, 0x0, 0x0);
        gbc.writeMem(0xd775, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0x99);
        EXPECT(gbc.h(),  0x2);
        EXPECT(gbc.l(),  0x6b);
        EXPECT(gbc.sp(), 0x9cf4);
        EXPECT(gbc.pc(), 0xd777);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd775), 0xcb);
        EXPECT(gbc.readMem(0xd776), 0xed);
        // CB ED 0362
        gbc.setState(0x33e1, 0x71c6, 0xed80, 0x8f8a, 0x1db2, 0x3676, 0x0, 0x0);
        gbc.writeMem(0x33e1, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0x8f);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0x36);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0x71c6);
        EXPECT(gbc.pc(), 0x33e3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB ED 0363
        gbc.setState(0xdd25, 0x9dd6, 0x3020, 0xf9a7, 0xcad8, 0x18c, 0x0, 0x0);
        gbc.writeMem(0xdd25, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0xa7);
        EXPECT(gbc.d(),  0xca);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0x9dd6);
        EXPECT(gbc.pc(), 0xdd27);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdd25), 0xcb);
        EXPECT(gbc.readMem(0xdd26), 0xed);
        // CB ED 0364
        gbc.setState(0x186f, 0xdd0e, 0xa9c0, 0x1010, 0xeaaa, 0x478a, 0x1, 0x0);
        gbc.writeMem(0x186f, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0xa9);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0xaa);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0xaa);
        EXPECT(gbc.sp(), 0xdd0e);
        EXPECT(gbc.pc(), 0x1871);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB ED 0365
        gbc.setState(0x4609, 0x1219, 0xc950, 0x1f7f, 0x85a2, 0x5b5b, 0x1, 0x0);
        gbc.writeMem(0x4609, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0xc9);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0xa2);
        EXPECT(gbc.h(),  0x5b);
        EXPECT(gbc.l(),  0x7b);
        EXPECT(gbc.sp(), 0x1219);
        EXPECT(gbc.pc(), 0x460b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB ED 0366
        gbc.setState(0xafde, 0xaf2c, 0x1e50, 0x56ca, 0x504c, 0x9696, 0x1, 0x0);
        gbc.writeMem(0xafde, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0x56);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0x50);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0xaf2c);
        EXPECT(gbc.pc(), 0xafe0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xafde), 0xcb);
        EXPECT(gbc.readMem(0xafdf), 0xed);
        // CB ED 0367
        gbc.setState(0xc549, 0x7493, 0xf430, 0x78fd, 0x6cc4, 0x5ad7, 0x0, 0x1);
        gbc.writeMem(0xc549, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0xfd);
        EXPECT(gbc.d(),  0x6c);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0x5a);
        EXPECT(gbc.l(),  0xf7);
        EXPECT(gbc.sp(), 0x7493);
        EXPECT(gbc.pc(), 0xc54b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc549), 0xcb);
        EXPECT(gbc.readMem(0xc54a), 0xed);
        // CB ED 0368
        gbc.setState(0xd259, 0xff8f, 0xf6b0, 0xfc7e, 0x8f0f, 0x8841, 0x0, 0x0);
        gbc.writeMem(0xd259, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0xf6);
        EXPECT(gbc.b(),  0xfc);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0x61);
        EXPECT(gbc.sp(), 0xff8f);
        EXPECT(gbc.pc(), 0xd25b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd259), 0xcb);
        EXPECT(gbc.readMem(0xd25a), 0xed);
        // CB ED 0369
        gbc.setState(0x78dd, 0xf81, 0x37f0, 0xd9f3, 0xdbdf, 0xae26, 0x0, 0x0);
        gbc.writeMem(0x78dd, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0xf3);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0xdf);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0xf81);
        EXPECT(gbc.pc(), 0x78df);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB ED 036A
        gbc.setState(0xb789, 0xeb88, 0x65f0, 0x6778, 0x92d9, 0x4f6c, 0x1, 0x0);
        gbc.writeMem(0xb789, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0x65);
        EXPECT(gbc.b(),  0x67);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0x92);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0x4f);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0xeb88);
        EXPECT(gbc.pc(), 0xb78b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb789), 0xcb);
        EXPECT(gbc.readMem(0xb78a), 0xed);
        // CB ED 036B
        gbc.setState(0x1136, 0xcbe9, 0xa7f0, 0x5948, 0x8b05, 0x2d01, 0x0, 0x1);
        gbc.writeMem(0x1136, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0xa7);
        EXPECT(gbc.b(),  0x59);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0x2d);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0xcbe9);
        EXPECT(gbc.pc(), 0x1138);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB ED 036C
        gbc.setState(0x611f, 0xc15e, 0x31d0, 0xc779, 0x4334, 0xd4e6, 0x0, 0x0);
        gbc.writeMem(0x611f, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0x31);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0x79);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0x34);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0xc15e);
        EXPECT(gbc.pc(), 0x6121);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB ED 036D
        gbc.setState(0x9138, 0x1d85, 0xab60, 0x452d, 0x9e72, 0x1dd6, 0x1, 0x1);
        gbc.writeMem(0x9138, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0xab);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0xf6);
        EXPECT(gbc.sp(), 0x1d85);
        EXPECT(gbc.pc(), 0x913a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9138), 0xcb);
        EXPECT(gbc.readMem(0x9139), 0xed);
        // CB ED 036F
        gbc.setState(0x32de, 0xe4f7, 0xb1a0, 0x2db3, 0x5333, 0x288, 0x1, 0x1);
        gbc.writeMem(0x32de, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0x2d);
        EXPECT(gbc.c(),  0xb3);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0x33);
        EXPECT(gbc.h(),  0x2);
        EXPECT(gbc.l(),  0xa8);
        EXPECT(gbc.sp(), 0xe4f7);
        EXPECT(gbc.pc(), 0x32e0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB ED 0370
        gbc.setState(0xb0bb, 0x3d3b, 0x8470, 0x81a2, 0xda66, 0x1815, 0x0, 0x0);
        gbc.writeMem(0xb0bb, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0x84);
        EXPECT(gbc.b(),  0x81);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0x66);
        EXPECT(gbc.h(),  0x18);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0x3d3b);
        EXPECT(gbc.pc(), 0xb0bd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb0bb), 0xcb);
        EXPECT(gbc.readMem(0xb0bc), 0xed);
        // CB ED 0371
        gbc.setState(0x212, 0x2c60, 0x2210, 0xdad3, 0x8e32, 0x2faf, 0x0, 0x0);
        gbc.writeMem(0x212, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0xd3);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0x2f);
        EXPECT(gbc.l(),  0xaf);
        EXPECT(gbc.sp(), 0x2c60);
        EXPECT(gbc.pc(), 0x214);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB ED 0372
        gbc.setState(0xac33, 0x3d4c, 0xee0, 0xb9fd, 0x8eaf, 0x9f43, 0x1, 0x0);
        gbc.writeMem(0xac33, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0xb9);
        EXPECT(gbc.c(),  0xfd);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0x63);
        EXPECT(gbc.sp(), 0x3d4c);
        EXPECT(gbc.pc(), 0xac35);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xac33), 0xcb);
        EXPECT(gbc.readMem(0xac34), 0xed);
        // CB ED 0373
        gbc.setState(0x1ce1, 0xc191, 0x73b0, 0x1c2, 0x8537, 0xd558, 0x0, 0x1);
        gbc.writeMem(0x1ce1, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0x73);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0xc191);
        EXPECT(gbc.pc(), 0x1ce3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB ED 0374
        gbc.setState(0x49b1, 0xff9a, 0x3e90, 0xaf2a, 0xbc8b, 0x7f33, 0x1, 0x1);
        gbc.writeMem(0x49b1, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0xaf);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0xbc);
        EXPECT(gbc.e(),  0x8b);
        EXPECT(gbc.h(),  0x7f);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0xff9a);
        EXPECT(gbc.pc(), 0x49b3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB ED 0375
        gbc.setState(0x7960, 0x6616, 0x1840, 0x3608, 0x191c, 0xdc3f, 0x0, 0x0);
        gbc.writeMem(0x7960, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0x36);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0x19);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0x6616);
        EXPECT(gbc.pc(), 0x7962);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB ED 0376
        gbc.setState(0x396b, 0xa82e, 0x9f20, 0x342, 0x382a, 0x1757, 0x1, 0x0);
        gbc.writeMem(0x396b, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0x9f);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0x38);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0xa82e);
        EXPECT(gbc.pc(), 0x396d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB ED 0377
        gbc.setState(0x436a, 0x8e90, 0xe0c0, 0xfe79, 0xe264, 0xf527, 0x1, 0x1);
        gbc.writeMem(0x436a, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0xe0);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0x79);
        EXPECT(gbc.d(),  0xe2);
        EXPECT(gbc.e(),  0x64);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0x27);
        EXPECT(gbc.sp(), 0x8e90);
        EXPECT(gbc.pc(), 0x436c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB ED 0378
        gbc.setState(0xa00f, 0xe3ae, 0x62e0, 0xab57, 0x6663, 0x2aaf, 0x0, 0x1);
        gbc.writeMem(0xa00f, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0xab);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0x66);
        EXPECT(gbc.e(),  0x63);
        EXPECT(gbc.h(),  0x2a);
        EXPECT(gbc.l(),  0xaf);
        EXPECT(gbc.sp(), 0xe3ae);
        EXPECT(gbc.pc(), 0xa011);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa00f), 0xcb);
        EXPECT(gbc.readMem(0xa010), 0xed);
        // CB ED 0379
        gbc.setState(0x3df2, 0xe343, 0xea20, 0x77bd, 0xe96e, 0xddf, 0x1, 0x0);
        gbc.writeMem(0x3df2, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0x77);
        EXPECT(gbc.c(),  0xbd);
        EXPECT(gbc.d(),  0xe9);
        EXPECT(gbc.e(),  0x6e);
        EXPECT(gbc.h(),  0xd);
        EXPECT(gbc.l(),  0xff);
        EXPECT(gbc.sp(), 0xe343);
        EXPECT(gbc.pc(), 0x3df4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB ED 037A
        gbc.setState(0xef59, 0xea45, 0x3f80, 0xa921, 0xd3c0, 0xfbe1, 0x0, 0x0);
        gbc.writeMem(0xef59, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0xa9);
        EXPECT(gbc.c(),  0x21);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0xc0);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0xea45);
        EXPECT(gbc.pc(), 0xef5b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xef59), 0xcb);
        EXPECT(gbc.readMem(0xef5a), 0xed);
        // CB ED 037B
        gbc.setState(0x7add, 0xc3e3, 0x7360, 0xa228, 0xe754, 0x1201, 0x1, 0x1);
        gbc.writeMem(0x7add, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0x73);
        EXPECT(gbc.b(),  0xa2);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0xe7);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0xc3e3);
        EXPECT(gbc.pc(), 0x7adf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB ED 037C
        gbc.setState(0x4de, 0x356c, 0x3500, 0xa155, 0xe8d9, 0x7802, 0x1, 0x0);
        gbc.writeMem(0x4de, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0x35);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0x55);
        EXPECT(gbc.d(),  0xe8);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0x78);
        EXPECT(gbc.l(),  0x22);
        EXPECT(gbc.sp(), 0x356c);
        EXPECT(gbc.pc(), 0x4e0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB ED 037D
        gbc.setState(0xba6b, 0x85d7, 0x5780, 0x8792, 0xff96, 0x5f62, 0x0, 0x0);
        gbc.writeMem(0xba6b, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0x57);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0xff);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0x85d7);
        EXPECT(gbc.pc(), 0xba6d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xba6b), 0xcb);
        EXPECT(gbc.readMem(0xba6c), 0xed);
        // CB ED 037E
        gbc.setState(0xbe39, 0x47c2, 0xf520, 0xd3b7, 0x7162, 0xe48, 0x0, 0x1);
        gbc.writeMem(0xbe39, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0xf5);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0xb7);
        EXPECT(gbc.d(),  0x71);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0x68);
        EXPECT(gbc.sp(), 0x47c2);
        EXPECT(gbc.pc(), 0xbe3b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbe39), 0xcb);
        EXPECT(gbc.readMem(0xbe3a), 0xed);
        // CB ED 037F
        gbc.setState(0x8ceb, 0x8805, 0xdf40, 0xa07a, 0x71cb, 0x5872, 0x0, 0x1);
        gbc.writeMem(0x8ceb, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0xdf);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0x71);
        EXPECT(gbc.e(),  0xcb);
        EXPECT(gbc.h(),  0x58);
        EXPECT(gbc.l(),  0x72);
        EXPECT(gbc.sp(), 0x8805);
        EXPECT(gbc.pc(), 0x8ced);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8ceb), 0xcb);
        EXPECT(gbc.readMem(0x8cec), 0xed);
        // CB ED 0380
        gbc.setState(0xade9, 0x167, 0xfa60, 0xfb5b, 0x42c4, 0x9367, 0x1, 0x1);
        gbc.writeMem(0xade9, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0xfa);
        EXPECT(gbc.b(),  0xfb);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0x67);
        EXPECT(gbc.sp(), 0x167);
        EXPECT(gbc.pc(), 0xadeb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xade9), 0xcb);
        EXPECT(gbc.readMem(0xadea), 0xed);
        // CB ED 0381
        gbc.setState(0x229a, 0xb71e, 0x6140, 0x9a8, 0xba56, 0x2a3d, 0x1, 0x1);
        gbc.writeMem(0x229a, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0xa8);
        EXPECT(gbc.d(),  0xba);
        EXPECT(gbc.e(),  0x56);
        EXPECT(gbc.h(),  0x2a);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0xb71e);
        EXPECT(gbc.pc(), 0x229c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB ED 0382
        gbc.setState(0xeda1, 0x296f, 0x28d0, 0x8d41, 0xcc24, 0x2f12, 0x1, 0x1);
        gbc.writeMem(0xeda1, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0x8d);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0x24);
        EXPECT(gbc.h(),  0x2f);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0x296f);
        EXPECT(gbc.pc(), 0xeda3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xeda1), 0xcb);
        EXPECT(gbc.readMem(0xeda2), 0xed);
        // CB ED 0383
        gbc.setState(0x8276, 0xcc5c, 0x79e0, 0xaeb, 0x50f9, 0x6b07, 0x0, 0x0);
        gbc.writeMem(0x8276, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0x50);
        EXPECT(gbc.e(),  0xf9);
        EXPECT(gbc.h(),  0x6b);
        EXPECT(gbc.l(),  0x27);
        EXPECT(gbc.sp(), 0xcc5c);
        EXPECT(gbc.pc(), 0x8278);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8276), 0xcb);
        EXPECT(gbc.readMem(0x8277), 0xed);
        // CB ED 0384
        gbc.setState(0x508d, 0xc988, 0xb080, 0x1d46, 0x1c33, 0x39c8, 0x0, 0x0);
        gbc.writeMem(0x508d, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0x33);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0xe8);
        EXPECT(gbc.sp(), 0xc988);
        EXPECT(gbc.pc(), 0x508f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB ED 0385
        gbc.setState(0xa5e6, 0xd38f, 0x62c0, 0xd7fb, 0x922d, 0x6c5, 0x0, 0x1);
        gbc.writeMem(0xa5e6, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0x92);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0x6);
        EXPECT(gbc.l(),  0xe5);
        EXPECT(gbc.sp(), 0xd38f);
        EXPECT(gbc.pc(), 0xa5e8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa5e6), 0xcb);
        EXPECT(gbc.readMem(0xa5e7), 0xed);
        // CB ED 0386
        gbc.setState(0x4d76, 0x5175, 0xaf70, 0x8e4e, 0xbdd4, 0xa702, 0x1, 0x1);
        gbc.writeMem(0x4d76, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0xaf);
        EXPECT(gbc.b(),  0x8e);
        EXPECT(gbc.c(),  0x4e);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0xd4);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0x22);
        EXPECT(gbc.sp(), 0x5175);
        EXPECT(gbc.pc(), 0x4d78);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB ED 0387
        gbc.setState(0xd664, 0xceac, 0x4ea0, 0xe4cc, 0x713b, 0xa6da, 0x1, 0x0);
        gbc.writeMem(0xd664, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0xcc);
        EXPECT(gbc.d(),  0x71);
        EXPECT(gbc.e(),  0x3b);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0xceac);
        EXPECT(gbc.pc(), 0xd666);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd664), 0xcb);
        EXPECT(gbc.readMem(0xd665), 0xed);
        // CB ED 0388
        gbc.setState(0x1a1, 0xf500, 0x8b80, 0x35d2, 0x9aeb, 0xe60c, 0x0, 0x0);
        gbc.writeMem(0x1a1, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0xe6);
        EXPECT(gbc.l(),  0x2c);
        EXPECT(gbc.sp(), 0xf500);
        EXPECT(gbc.pc(), 0x1a3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB ED 038A
        gbc.setState(0xbad2, 0x7076, 0xb7b0, 0xce61, 0x671c, 0xd856, 0x1, 0x1);
        gbc.writeMem(0xbad2, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0xce);
        EXPECT(gbc.c(),  0x61);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0x7076);
        EXPECT(gbc.pc(), 0xbad4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbad2), 0xcb);
        EXPECT(gbc.readMem(0xbad3), 0xed);
        // CB ED 038B
        gbc.setState(0xb05f, 0xeaeb, 0x3300, 0x72a4, 0x8f70, 0x4e95, 0x1, 0x1);
        gbc.writeMem(0xb05f, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0xa4);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0x4e);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0xeaeb);
        EXPECT(gbc.pc(), 0xb061);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb05f), 0xcb);
        EXPECT(gbc.readMem(0xb060), 0xed);
        // CB ED 038C
        gbc.setState(0x8f56, 0xf1f7, 0x2ab0, 0x2ecc, 0xdc89, 0x769a, 0x1, 0x0);
        gbc.writeMem(0x8f56, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0x2e);
        EXPECT(gbc.c(),  0xcc);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0x76);
        EXPECT(gbc.l(),  0xba);
        EXPECT(gbc.sp(), 0xf1f7);
        EXPECT(gbc.pc(), 0x8f58);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8f56), 0xcb);
        EXPECT(gbc.readMem(0x8f57), 0xed);
        // CB ED 038D
        gbc.setState(0xbb60, 0xa1b6, 0x10b0, 0x3675, 0xdba1, 0x43ee, 0x1, 0x1);
        gbc.writeMem(0xbb60, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0x10);
        EXPECT(gbc.b(),  0x36);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0xa1);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0xee);
        EXPECT(gbc.sp(), 0xa1b6);
        EXPECT(gbc.pc(), 0xbb62);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbb60), 0xcb);
        EXPECT(gbc.readMem(0xbb61), 0xed);
        // CB ED 038E
        gbc.setState(0x3195, 0xfbf5, 0x8b20, 0x1a44, 0x478b, 0xaced, 0x1, 0x1);
        gbc.writeMem(0x3195, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0x1a);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0x47);
        EXPECT(gbc.e(),  0x8b);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0xfbf5);
        EXPECT(gbc.pc(), 0x3197);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB ED 038F
        gbc.setState(0x2a40, 0x80e6, 0x6430, 0xec1, 0x5d30, 0x3582, 0x1, 0x1);
        gbc.writeMem(0x2a40, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0xc1);
        EXPECT(gbc.d(),  0x5d);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0xa2);
        EXPECT(gbc.sp(), 0x80e6);
        EXPECT(gbc.pc(), 0x2a42);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB ED 0390
        gbc.setState(0x97af, 0x95d2, 0xe750, 0xfdfa, 0xcb4a, 0xdab5, 0x0, 0x1);
        gbc.writeMem(0x97af, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0xe7);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0xfa);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0x95d2);
        EXPECT(gbc.pc(), 0x97b1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x97af), 0xcb);
        EXPECT(gbc.readMem(0x97b0), 0xed);
        // CB ED 0391
        gbc.setState(0x1113, 0x93cc, 0xf710, 0xa2bf, 0x206e, 0x1e4e, 0x0, 0x0);
        gbc.writeMem(0x1113, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0xa2);
        EXPECT(gbc.c(),  0xbf);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0x6e);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0x6e);
        EXPECT(gbc.sp(), 0x93cc);
        EXPECT(gbc.pc(), 0x1115);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB ED 0393
        gbc.setState(0x472f, 0x7462, 0x7250, 0x7890, 0x6cb7, 0xa14e, 0x1, 0x1);
        gbc.writeMem(0x472f, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0x90);
        EXPECT(gbc.d(),  0x6c);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0xa1);
        EXPECT(gbc.l(),  0x6e);
        EXPECT(gbc.sp(), 0x7462);
        EXPECT(gbc.pc(), 0x4731);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB ED 0394
        gbc.setState(0xd6bb, 0x23f8, 0xe6c0, 0x9370, 0xe691, 0x81a0, 0x1, 0x1);
        gbc.writeMem(0xd6bb, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0x93);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0x91);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0x23f8);
        EXPECT(gbc.pc(), 0xd6bd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd6bb), 0xcb);
        EXPECT(gbc.readMem(0xd6bc), 0xed);
        // CB ED 0395
        gbc.setState(0xb593, 0x89c2, 0x9f80, 0xa4d3, 0x2571, 0x610, 0x0, 0x1);
        gbc.writeMem(0xb593, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0x9f);
        EXPECT(gbc.b(),  0xa4);
        EXPECT(gbc.c(),  0xd3);
        EXPECT(gbc.d(),  0x25);
        EXPECT(gbc.e(),  0x71);
        EXPECT(gbc.h(),  0x6);
        EXPECT(gbc.l(),  0x30);
        EXPECT(gbc.sp(), 0x89c2);
        EXPECT(gbc.pc(), 0xb595);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb593), 0xcb);
        EXPECT(gbc.readMem(0xb594), 0xed);
        // CB ED 0396
        gbc.setState(0xb45, 0xef26, 0x88e0, 0x94c9, 0xd4cb, 0xbef1, 0x1, 0x1);
        gbc.writeMem(0xb45, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0x94);
        EXPECT(gbc.c(),  0xc9);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0xcb);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0xf1);
        EXPECT(gbc.sp(), 0xef26);
        EXPECT(gbc.pc(), 0xb47);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB ED 0397
        gbc.setState(0xe746, 0x92b9, 0xd400, 0xc59d, 0x411e, 0xe7a0, 0x1, 0x0);
        gbc.writeMem(0xe746, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0x9d);
        EXPECT(gbc.d(),  0x41);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0x92b9);
        EXPECT(gbc.pc(), 0xe748);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe746), 0xcb);
        EXPECT(gbc.readMem(0xe747), 0xed);
        // CB ED 0398
        gbc.setState(0x95d8, 0xbab2, 0x89d0, 0xc26a, 0xc6b3, 0x7af9, 0x1, 0x1);
        gbc.writeMem(0x95d8, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0x6a);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0xb3);
        EXPECT(gbc.h(),  0x7a);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0xbab2);
        EXPECT(gbc.pc(), 0x95da);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x95d8), 0xcb);
        EXPECT(gbc.readMem(0x95d9), 0xed);
        // CB ED 0399
        gbc.setState(0x2e0d, 0xbc00, 0x6ff0, 0x7f7f, 0x8c38, 0x6646, 0x1, 0x0);
        gbc.writeMem(0x2e0d, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0x38);
        EXPECT(gbc.h(),  0x66);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0xbc00);
        EXPECT(gbc.pc(), 0x2e0f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB ED 039B
        gbc.setState(0xa0a3, 0xa9ec, 0x1600, 0xbd5f, 0x436f, 0xe0b0, 0x1, 0x1);
        gbc.writeMem(0xa0a3, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0x16);
        EXPECT(gbc.b(),  0xbd);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0xa9ec);
        EXPECT(gbc.pc(), 0xa0a5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa0a3), 0xcb);
        EXPECT(gbc.readMem(0xa0a4), 0xed);
        // CB ED 039C
        gbc.setState(0x62e5, 0xf144, 0xe610, 0x3e77, 0xaecf, 0x2d65, 0x0, 0x1);
        gbc.writeMem(0x62e5, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0x77);
        EXPECT(gbc.d(),  0xae);
        EXPECT(gbc.e(),  0xcf);
        EXPECT(gbc.h(),  0x2d);
        EXPECT(gbc.l(),  0x65);
        EXPECT(gbc.sp(), 0xf144);
        EXPECT(gbc.pc(), 0x62e7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB ED 039D
        gbc.setState(0xb61e, 0xdc39, 0x7bc0, 0x2fca, 0x90c, 0xb43b, 0x1, 0x1);
        gbc.writeMem(0xb61e, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0x9);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0xdc39);
        EXPECT(gbc.pc(), 0xb620);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb61e), 0xcb);
        EXPECT(gbc.readMem(0xb61f), 0xed);
        // CB ED 039E
        gbc.setState(0xecda, 0x99d0, 0x5130, 0x70d7, 0x93a1, 0xa1ee, 0x0, 0x0);
        gbc.writeMem(0xecda, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0xd7);
        EXPECT(gbc.d(),  0x93);
        EXPECT(gbc.e(),  0xa1);
        EXPECT(gbc.h(),  0xa1);
        EXPECT(gbc.l(),  0xee);
        EXPECT(gbc.sp(), 0x99d0);
        EXPECT(gbc.pc(), 0xecdc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xecda), 0xcb);
        EXPECT(gbc.readMem(0xecdb), 0xed);
        // CB ED 039F
        gbc.setState(0xaba8, 0xf7bb, 0x1800, 0x9ac1, 0xf928, 0x3127, 0x1, 0x0);
        gbc.writeMem(0xaba8, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0x9a);
        EXPECT(gbc.c(),  0xc1);
        EXPECT(gbc.d(),  0xf9);
        EXPECT(gbc.e(),  0x28);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0x27);
        EXPECT(gbc.sp(), 0xf7bb);
        EXPECT(gbc.pc(), 0xabaa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaba8), 0xcb);
        EXPECT(gbc.readMem(0xaba9), 0xed);
        // CB ED 03A0
        gbc.setState(0xec2c, 0xc373, 0x5bb0, 0xbb84, 0xd535, 0x1f05, 0x1, 0x0);
        gbc.writeMem(0xec2c, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0x35);
        EXPECT(gbc.h(),  0x1f);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0xc373);
        EXPECT(gbc.pc(), 0xec2e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xec2c), 0xcb);
        EXPECT(gbc.readMem(0xec2d), 0xed);
        // CB ED 03A1
        gbc.setState(0x51e2, 0xf9bf, 0xdc0, 0xe301, 0xdf64, 0xcf50, 0x0, 0x0);
        gbc.writeMem(0x51e2, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0xd);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0x64);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0x70);
        EXPECT(gbc.sp(), 0xf9bf);
        EXPECT(gbc.pc(), 0x51e4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB ED 03A2
        gbc.setState(0xa28e, 0x8116, 0xf810, 0x45ac, 0x96e, 0x4721, 0x1, 0x0);
        gbc.writeMem(0xa28e, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0x9);
        EXPECT(gbc.e(),  0x6e);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0x8116);
        EXPECT(gbc.pc(), 0xa290);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa28e), 0xcb);
        EXPECT(gbc.readMem(0xa28f), 0xed);
        // CB ED 03A3
        gbc.setState(0x1203, 0x61bd, 0x92b0, 0x8f5, 0xa5c9, 0x944f, 0x1, 0x1);
        gbc.writeMem(0x1203, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0x8);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0xa5);
        EXPECT(gbc.e(),  0xc9);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0x61bd);
        EXPECT(gbc.pc(), 0x1205);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB ED 03A4
        gbc.setState(0x1e6, 0xeaef, 0xd5d0, 0x16ca, 0xd15, 0x5972, 0x1, 0x0);
        gbc.writeMem(0x1e6, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0xd5);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0xd);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0x72);
        EXPECT(gbc.sp(), 0xeaef);
        EXPECT(gbc.pc(), 0x1e8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB ED 03A5
        gbc.setState(0xd69a, 0x28ed, 0xb350, 0x269, 0x8bd4, 0xfa8d, 0x0, 0x0);
        gbc.writeMem(0xd69a, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0xb3);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0x69);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0xd4);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0xad);
        EXPECT(gbc.sp(), 0x28ed);
        EXPECT(gbc.pc(), 0xd69c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd69a), 0xcb);
        EXPECT(gbc.readMem(0xd69b), 0xed);
        // CB ED 03A6
        gbc.setState(0x7cb8, 0xcfcb, 0x3c00, 0x303e, 0x6f1b, 0x48ad, 0x0, 0x0);
        gbc.writeMem(0x7cb8, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0x6f);
        EXPECT(gbc.e(),  0x1b);
        EXPECT(gbc.h(),  0x48);
        EXPECT(gbc.l(),  0xad);
        EXPECT(gbc.sp(), 0xcfcb);
        EXPECT(gbc.pc(), 0x7cba);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB ED 03A7
        gbc.setState(0xeb70, 0x9796, 0x4eb0, 0x1c2, 0x3206, 0x38cd, 0x0, 0x0);
        gbc.writeMem(0xeb70, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0x38);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0x9796);
        EXPECT(gbc.pc(), 0xeb72);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xeb70), 0xcb);
        EXPECT(gbc.readMem(0xeb71), 0xed);
        // CB ED 03A8
        gbc.setState(0xa95f, 0x43c, 0x3cc0, 0xd3fe, 0x1c71, 0x31a2, 0x1, 0x0);
        gbc.writeMem(0xa95f, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0x71);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0xa2);
        EXPECT(gbc.sp(), 0x43c);
        EXPECT(gbc.pc(), 0xa961);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa95f), 0xcb);
        EXPECT(gbc.readMem(0xa960), 0xed);
        // CB ED 03A9
        gbc.setState(0xda80, 0x16d1, 0x34d0, 0xf06f, 0xd39a, 0x7811, 0x0, 0x0);
        gbc.writeMem(0xda80, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0x34);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0x78);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0x16d1);
        EXPECT(gbc.pc(), 0xda82);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xda80), 0xcb);
        EXPECT(gbc.readMem(0xda81), 0xed);
        // CB ED 03AA
        gbc.setState(0xdcb2, 0xa80b, 0xd440, 0x9c32, 0x35bc, 0x709, 0x1, 0x0);
        gbc.writeMem(0xdcb2, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0x9c);
        EXPECT(gbc.c(),  0x32);
        EXPECT(gbc.d(),  0x35);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0xa80b);
        EXPECT(gbc.pc(), 0xdcb4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdcb2), 0xcb);
        EXPECT(gbc.readMem(0xdcb3), 0xed);
        // CB ED 03AB
        gbc.setState(0xe6c8, 0xed79, 0xc0f0, 0x5104, 0x873a, 0xcd74, 0x1, 0x0);
        gbc.writeMem(0xe6c8, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0x87);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0xcd);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0xed79);
        EXPECT(gbc.pc(), 0xe6ca);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe6c8), 0xcb);
        EXPECT(gbc.readMem(0xe6c9), 0xed);
        // CB ED 03AC
        gbc.setState(0x1306, 0x50fd, 0xea30, 0x68f1, 0x8158, 0x7a4d, 0x1, 0x0);
        gbc.writeMem(0x1306, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0x81);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0x7a);
        EXPECT(gbc.l(),  0x6d);
        EXPECT(gbc.sp(), 0x50fd);
        EXPECT(gbc.pc(), 0x1308);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB ED 03AD
        gbc.setState(0xb043, 0x6a52, 0xc050, 0x91d0, 0x13ef, 0xcb5, 0x0, 0x0);
        gbc.writeMem(0xb043, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0xef);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0x6a52);
        EXPECT(gbc.pc(), 0xb045);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb043), 0xcb);
        EXPECT(gbc.readMem(0xb044), 0xed);
        // CB ED 03AE
        gbc.setState(0x6444, 0x606c, 0x5080, 0xb77, 0xda77, 0x17ab, 0x1, 0x0);
        gbc.writeMem(0x6444, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0x77);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0x606c);
        EXPECT(gbc.pc(), 0x6446);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB ED 03AF
        gbc.setState(0x6b1e, 0x23d2, 0x8020, 0xaae4, 0xd70d, 0x6175, 0x1, 0x0);
        gbc.writeMem(0x6b1e, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0xaa);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0xd);
        EXPECT(gbc.h(),  0x61);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0x23d2);
        EXPECT(gbc.pc(), 0x6b20);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB ED 03B0
        gbc.setState(0x91eb, 0x49bb, 0xd40, 0x4d8e, 0x8a4e, 0x91f0, 0x1, 0x1);
        gbc.writeMem(0x91eb, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0xd);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0x8e);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0x49bb);
        EXPECT(gbc.pc(), 0x91ed);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x91eb), 0xcb);
        EXPECT(gbc.readMem(0x91ec), 0xed);
        // CB ED 03B1
        gbc.setState(0xdf5d, 0xe9e0, 0xc60, 0x9784, 0x2021, 0xe448, 0x0, 0x1);
        gbc.writeMem(0xdf5d, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0x97);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0x68);
        EXPECT(gbc.sp(), 0xe9e0);
        EXPECT(gbc.pc(), 0xdf5f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdf5d), 0xcb);
        EXPECT(gbc.readMem(0xdf5e), 0xed);
        // CB ED 03B2
        gbc.setState(0x8e0c, 0x7499, 0x21e0, 0x5701, 0x4f80, 0x3792, 0x0, 0x0);
        gbc.writeMem(0x8e0c, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0x7499);
        EXPECT(gbc.pc(), 0x8e0e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8e0c), 0xcb);
        EXPECT(gbc.readMem(0x8e0d), 0xed);
        // CB ED 03B3
        gbc.setState(0xdbe8, 0x84a, 0xf0, 0x5f22, 0xbbf3, 0x1582, 0x1, 0x0);
        gbc.writeMem(0xdbe8, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0x22);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0xa2);
        EXPECT(gbc.sp(), 0x84a);
        EXPECT(gbc.pc(), 0xdbea);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdbe8), 0xcb);
        EXPECT(gbc.readMem(0xdbe9), 0xed);
        // CB ED 03B4
        gbc.setState(0x363d, 0xe632, 0x6300, 0x25b7, 0x43dd, 0x7a44, 0x0, 0x0);
        gbc.writeMem(0x363d, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0xb7);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0x7a);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0xe632);
        EXPECT(gbc.pc(), 0x363f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB ED 03B5
        gbc.setState(0xb652, 0xe6ad, 0x11d0, 0xc578, 0x7a89, 0xd20f, 0x1, 0x0);
        gbc.writeMem(0xb652, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0x11);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0xd2);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0xe6ad);
        EXPECT(gbc.pc(), 0xb654);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb652), 0xcb);
        EXPECT(gbc.readMem(0xb653), 0xed);
        // CB ED 03B6
        gbc.setState(0x6660, 0x1101, 0x2aa0, 0x5b40, 0xae50, 0x5704, 0x0, 0x1);
        gbc.writeMem(0x6660, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0xae);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0x57);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0x1101);
        EXPECT(gbc.pc(), 0x6662);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB ED 03B7
        gbc.setState(0x7ef, 0xa42b, 0x8d00, 0x7cd6, 0xa17, 0x85a7, 0x0, 0x1);
        gbc.writeMem(0x7ef, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0x7c);
        EXPECT(gbc.c(),  0xd6);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0x17);
        EXPECT(gbc.h(),  0x85);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0xa42b);
        EXPECT(gbc.pc(), 0x7f1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB ED 03B8
        gbc.setState(0x5d8b, 0xb63, 0x2b60, 0xe3f7, 0x335, 0x1452, 0x1, 0x1);
        gbc.writeMem(0x5d8b, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0x2b);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0x3);
        EXPECT(gbc.e(),  0x35);
        EXPECT(gbc.h(),  0x14);
        EXPECT(gbc.l(),  0x72);
        EXPECT(gbc.sp(), 0xb63);
        EXPECT(gbc.pc(), 0x5d8d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB ED 03B9
        gbc.setState(0x7e4e, 0xa29a, 0xfb10, 0xa1df, 0x7c58, 0x31d1, 0x0, 0x0);
        gbc.writeMem(0x7e4e, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0xfb);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0xdf);
        EXPECT(gbc.d(),  0x7c);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0xf1);
        EXPECT(gbc.sp(), 0xa29a);
        EXPECT(gbc.pc(), 0x7e50);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB ED 03BA
        gbc.setState(0xe566, 0xc105, 0xe270, 0xbe5b, 0x72c, 0xea2b, 0x0, 0x0);
        gbc.writeMem(0xe566, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0xbe);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0xea);
        EXPECT(gbc.l(),  0x2b);
        EXPECT(gbc.sp(), 0xc105);
        EXPECT(gbc.pc(), 0xe568);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe566), 0xcb);
        EXPECT(gbc.readMem(0xe567), 0xed);
        // CB ED 03BB
        gbc.setState(0x9126, 0x6450, 0xdbb0, 0xd234, 0xd585, 0x93d8, 0x0, 0x0);
        gbc.writeMem(0x9126, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0xdb);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0x85);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0x6450);
        EXPECT(gbc.pc(), 0x9128);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9126), 0xcb);
        EXPECT(gbc.readMem(0x9127), 0xed);
        // CB ED 03BC
        gbc.setState(0x2dc0, 0x7fa1, 0x7b40, 0xda71, 0xb9c5, 0xae4f, 0x1, 0x1);
        gbc.writeMem(0x2dc0, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0xb9);
        EXPECT(gbc.e(),  0xc5);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0x7fa1);
        EXPECT(gbc.pc(), 0x2dc2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB ED 03BD
        gbc.setState(0xa560, 0xff22, 0x2f80, 0x88e3, 0xd5c3, 0x2683, 0x0, 0x0);
        gbc.writeMem(0xa560, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0x2f);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0xc3);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0xa3);
        EXPECT(gbc.sp(), 0xff22);
        EXPECT(gbc.pc(), 0xa562);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa560), 0xcb);
        EXPECT(gbc.readMem(0xa561), 0xed);
        // CB ED 03BF
        gbc.setState(0x11fe, 0x67b3, 0x9810, 0x73cb, 0x571a, 0x4e1a, 0x0, 0x1);
        gbc.writeMem(0x11fe, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0x98);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0x57);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0x4e);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0x67b3);
        EXPECT(gbc.pc(), 0x1200);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB ED 03C1
        gbc.setState(0x1ed4, 0x6044, 0xe30, 0xb922, 0x85e1, 0x1973, 0x0, 0x1);
        gbc.writeMem(0x1ed4, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0xb9);
        EXPECT(gbc.c(),  0x22);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0xe1);
        EXPECT(gbc.h(),  0x19);
        EXPECT(gbc.l(),  0x73);
        EXPECT(gbc.sp(), 0x6044);
        EXPECT(gbc.pc(), 0x1ed6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB ED 03C2
        gbc.setState(0x581f, 0x4672, 0xcd50, 0x9b3d, 0x905, 0xb814, 0x0, 0x0);
        gbc.writeMem(0x581f, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0x9b);
        EXPECT(gbc.c(),  0x3d);
        EXPECT(gbc.d(),  0x9);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0x4672);
        EXPECT(gbc.pc(), 0x5821);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB ED 03C3
        gbc.setState(0xb9d6, 0x4e9d, 0xbcb0, 0xa0b8, 0xb661, 0x7014, 0x1, 0x1);
        gbc.writeMem(0xb9d6, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0xb8);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0x61);
        EXPECT(gbc.h(),  0x70);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0x4e9d);
        EXPECT(gbc.pc(), 0xb9d8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb9d6), 0xcb);
        EXPECT(gbc.readMem(0xb9d7), 0xed);
        // CB ED 03C4
        gbc.setState(0xa8c5, 0xa7b0, 0x8880, 0xce4f, 0x3ce7, 0xf1f0, 0x1, 0x0);
        gbc.writeMem(0xa8c5, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0xce);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0xf1);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0xa7b0);
        EXPECT(gbc.pc(), 0xa8c7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa8c5), 0xcb);
        EXPECT(gbc.readMem(0xa8c6), 0xed);
        // CB ED 03C5
        gbc.setState(0xe2eb, 0xafc0, 0x12b0, 0x8c95, 0x72ef, 0x58ee, 0x1, 0x1);
        gbc.writeMem(0xe2eb, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0x12);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0x95);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0xef);
        EXPECT(gbc.h(),  0x58);
        EXPECT(gbc.l(),  0xee);
        EXPECT(gbc.sp(), 0xafc0);
        EXPECT(gbc.pc(), 0xe2ed);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe2eb), 0xcb);
        EXPECT(gbc.readMem(0xe2ec), 0xed);
        // CB ED 03C6
        gbc.setState(0xbe3a, 0x3ad4, 0xd940, 0xc0e3, 0x5d8e, 0x9cc6, 0x1, 0x0);
        gbc.writeMem(0xbe3a, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0xd9);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0x5d);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0x3ad4);
        EXPECT(gbc.pc(), 0xbe3c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbe3a), 0xcb);
        EXPECT(gbc.readMem(0xbe3b), 0xed);
        // CB ED 03C7
        gbc.setState(0x7d58, 0x7cc4, 0x7910, 0x707e, 0x8cca, 0x5c2f, 0x1, 0x1);
        gbc.writeMem(0x7d58, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0xca);
        EXPECT(gbc.h(),  0x5c);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0x7cc4);
        EXPECT(gbc.pc(), 0x7d5a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB ED 03C8
        gbc.setState(0xe53c, 0x406a, 0x1c0, 0x5df6, 0xe3d7, 0xf9d5, 0x1, 0x1);
        gbc.writeMem(0xe53c, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0x1);
        EXPECT(gbc.b(),  0x5d);
        EXPECT(gbc.c(),  0xf6);
        EXPECT(gbc.d(),  0xe3);
        EXPECT(gbc.e(),  0xd7);
        EXPECT(gbc.h(),  0xf9);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0x406a);
        EXPECT(gbc.pc(), 0xe53e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe53c), 0xcb);
        EXPECT(gbc.readMem(0xe53d), 0xed);
        // CB ED 03C9
        gbc.setState(0x5917, 0xbc67, 0x80f0, 0xf345, 0xb366, 0x57be, 0x1, 0x1);
        gbc.writeMem(0x5917, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0xf3);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0xb3);
        EXPECT(gbc.e(),  0x66);
        EXPECT(gbc.h(),  0x57);
        EXPECT(gbc.l(),  0xbe);
        EXPECT(gbc.sp(), 0xbc67);
        EXPECT(gbc.pc(), 0x5919);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB ED 03CA
        gbc.setState(0x5b75, 0xd339, 0x1ec0, 0x2792, 0x825b, 0x31b0, 0x1, 0x0);
        gbc.writeMem(0x5b75, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0x5b);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0xd339);
        EXPECT(gbc.pc(), 0x5b77);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB ED 03CB
        gbc.setState(0x91d4, 0x1b91, 0x1d30, 0x7f17, 0xc2b7, 0xd6e5, 0x1, 0x0);
        gbc.writeMem(0x91d4, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0x17);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0xe5);
        EXPECT(gbc.sp(), 0x1b91);
        EXPECT(gbc.pc(), 0x91d6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x91d4), 0xcb);
        EXPECT(gbc.readMem(0x91d5), 0xed);
        // CB ED 03CC
        gbc.setState(0x543, 0x5c4, 0x29c0, 0x516f, 0x7074, 0x35bf, 0x1, 0x1);
        gbc.writeMem(0x543, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0x70);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0xbf);
        EXPECT(gbc.sp(), 0x5c4);
        EXPECT(gbc.pc(), 0x545);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB ED 03CD
        gbc.setState(0x9d67, 0xd4ed, 0x38c0, 0x53e2, 0x984d, 0xef08, 0x1, 0x1);
        gbc.writeMem(0x9d67, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0x98);
        EXPECT(gbc.e(),  0x4d);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0xd4ed);
        EXPECT(gbc.pc(), 0x9d69);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9d67), 0xcb);
        EXPECT(gbc.readMem(0x9d68), 0xed);
        // CB ED 03CE
        gbc.setState(0x7db4, 0xeed4, 0x510, 0xf37b, 0x764d, 0xa977, 0x0, 0x1);
        gbc.writeMem(0x7db4, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0x5);
        EXPECT(gbc.b(),  0xf3);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0x4d);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0xeed4);
        EXPECT(gbc.pc(), 0x7db6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB ED 03CF
        gbc.setState(0x6399, 0xc075, 0xfca0, 0x96a4, 0xc22e, 0x6161, 0x0, 0x0);
        gbc.writeMem(0x6399, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0x96);
        EXPECT(gbc.c(),  0xa4);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0x61);
        EXPECT(gbc.l(),  0x61);
        EXPECT(gbc.sp(), 0xc075);
        EXPECT(gbc.pc(), 0x639b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB ED 03D0
        gbc.setState(0x6a59, 0x90a9, 0x53e0, 0x7cfa, 0x6246, 0x63c0, 0x0, 0x1);
        gbc.writeMem(0x6a59, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0x53);
        EXPECT(gbc.b(),  0x7c);
        EXPECT(gbc.c(),  0xfa);
        EXPECT(gbc.d(),  0x62);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0x63);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0x90a9);
        EXPECT(gbc.pc(), 0x6a5b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB ED 03D1
        gbc.setState(0xa253, 0x2d6, 0xfdc0, 0x600f, 0x6791, 0x6ef3, 0x1, 0x0);
        gbc.writeMem(0xa253, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0xfd);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0x91);
        EXPECT(gbc.h(),  0x6e);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0x2d6);
        EXPECT(gbc.pc(), 0xa255);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa253), 0xcb);
        EXPECT(gbc.readMem(0xa254), 0xed);
        // CB ED 03D2
        gbc.setState(0x1936, 0x12f8, 0xd8d0, 0xe0fe, 0xaca8, 0x69d7, 0x1, 0x1);
        gbc.writeMem(0x1936, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0xd8);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0x69);
        EXPECT(gbc.l(),  0xf7);
        EXPECT(gbc.sp(), 0x12f8);
        EXPECT(gbc.pc(), 0x1938);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB ED 03D3
        gbc.setState(0x8c41, 0x9174, 0xa790, 0x2a66, 0x1fa2, 0xbdec, 0x0, 0x1);
        gbc.writeMem(0x8c41, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0xa7);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0x1f);
        EXPECT(gbc.e(),  0xa2);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0xec);
        EXPECT(gbc.sp(), 0x9174);
        EXPECT(gbc.pc(), 0x8c43);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8c41), 0xcb);
        EXPECT(gbc.readMem(0x8c42), 0xed);
        // CB ED 03D5
        gbc.setState(0xe528, 0x3f92, 0x83c0, 0x494, 0x5d99, 0xd3c2, 0x0, 0x1);
        gbc.writeMem(0xe528, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0x83);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0x5d);
        EXPECT(gbc.e(),  0x99);
        EXPECT(gbc.h(),  0xd3);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0x3f92);
        EXPECT(gbc.pc(), 0xe52a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe528), 0xcb);
        EXPECT(gbc.readMem(0xe529), 0xed);
        // CB ED 03D6
        gbc.setState(0x2a81, 0x2944, 0x6940, 0xe066, 0x1fc1, 0x252f, 0x1, 0x1);
        gbc.writeMem(0x2a81, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0x1f);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0x25);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0x2944);
        EXPECT(gbc.pc(), 0x2a83);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB ED 03D7
        gbc.setState(0x838, 0xd1c0, 0xb20, 0x38fb, 0x72ee, 0x9eaa, 0x1, 0x1);
        gbc.writeMem(0x838, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0x38);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0xaa);
        EXPECT(gbc.sp(), 0xd1c0);
        EXPECT(gbc.pc(), 0x83a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB ED 03D8
        gbc.setState(0x74f7, 0x6dc, 0x80a0, 0x5456, 0x10ec, 0x74a7, 0x0, 0x1);
        gbc.writeMem(0x74f7, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0x10);
        EXPECT(gbc.e(),  0xec);
        EXPECT(gbc.h(),  0x74);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0x6dc);
        EXPECT(gbc.pc(), 0x74f9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB ED 03D9
        gbc.setState(0xaf3, 0x7418, 0x94e0, 0xe49d, 0xb0e, 0xe69e, 0x0, 0x1);
        gbc.writeMem(0xaf3, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0x94);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0x9d);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0xe6);
        EXPECT(gbc.l(),  0xbe);
        EXPECT(gbc.sp(), 0x7418);
        EXPECT(gbc.pc(), 0xaf5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB ED 03DA
        gbc.setState(0xd75, 0xe352, 0x75e0, 0x68a1, 0x2707, 0x13f8, 0x0, 0x1);
        gbc.writeMem(0xd75, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0xa1);
        EXPECT(gbc.d(),  0x27);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0x13);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0xe352);
        EXPECT(gbc.pc(), 0xd77);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB ED 03DB
        gbc.setState(0x1e08, 0x5cda, 0x3d80, 0x33e1, 0x3727, 0x50c7, 0x0, 0x0);
        gbc.writeMem(0x1e08, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0x3d);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0xe1);
        EXPECT(gbc.d(),  0x37);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0x5cda);
        EXPECT(gbc.pc(), 0x1e0a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB ED 03DC
        gbc.setState(0x57c2, 0x6bc4, 0xdbb0, 0x6986, 0x3789, 0xe1a9, 0x0, 0x0);
        gbc.writeMem(0x57c2, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0xdb);
        EXPECT(gbc.b(),  0x69);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0x37);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0xe1);
        EXPECT(gbc.l(),  0xa9);
        EXPECT(gbc.sp(), 0x6bc4);
        EXPECT(gbc.pc(), 0x57c4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB ED 03DD
        gbc.setState(0x851c, 0xf895, 0xf10, 0xc372, 0x859a, 0x9cdb, 0x0, 0x1);
        gbc.writeMem(0x851c, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0xf);
        EXPECT(gbc.b(),  0xc3);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0xfb);
        EXPECT(gbc.sp(), 0xf895);
        EXPECT(gbc.pc(), 0x851e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x851c), 0xcb);
        EXPECT(gbc.readMem(0x851d), 0xed);
        // CB ED 03DE
        gbc.setState(0x79e0, 0x1b33, 0x2d10, 0xe825, 0x5458, 0x534c, 0x0, 0x0);
        gbc.writeMem(0x79e0, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0x54);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0x53);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0x1b33);
        EXPECT(gbc.pc(), 0x79e2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB ED 03DF
        gbc.setState(0xbb85, 0x3e4f, 0x2960, 0xaf5, 0xc5c7, 0x2b52, 0x1, 0x0);
        gbc.writeMem(0xbb85, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0xc5);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0x2b);
        EXPECT(gbc.l(),  0x72);
        EXPECT(gbc.sp(), 0x3e4f);
        EXPECT(gbc.pc(), 0xbb87);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbb85), 0xcb);
        EXPECT(gbc.readMem(0xbb86), 0xed);
        // CB ED 03E0
        gbc.setState(0xd6d, 0xe30d, 0x7470, 0x6a8b, 0x30c2, 0x5afc, 0x0, 0x1);
        gbc.writeMem(0xd6d, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0x74);
        EXPECT(gbc.b(),  0x6a);
        EXPECT(gbc.c(),  0x8b);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0xc2);
        EXPECT(gbc.h(),  0x5a);
        EXPECT(gbc.l(),  0xfc);
        EXPECT(gbc.sp(), 0xe30d);
        EXPECT(gbc.pc(), 0xd6f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB ED 03E1
        gbc.setState(0x69e, 0x4f8a, 0x3d70, 0x91bb, 0x7696, 0x4485, 0x1, 0x0);
        gbc.writeMem(0x69e, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0x3d);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0xbb);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0x44);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0x4f8a);
        EXPECT(gbc.pc(), 0x6a0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB ED 03E2
        gbc.setState(0x64bf, 0xb0c4, 0x8870, 0xc682, 0x932, 0x8b58, 0x0, 0x1);
        gbc.writeMem(0x64bf, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0xc6);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0x9);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0xb0c4);
        EXPECT(gbc.pc(), 0x64c1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB ED 03E3
        gbc.setState(0x9804, 0x1d2a, 0xb80, 0xaee3, 0x2a72, 0xc05e, 0x0, 0x1);
        gbc.writeMem(0x9804, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0x2a);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0x7e);
        EXPECT(gbc.sp(), 0x1d2a);
        EXPECT(gbc.pc(), 0x9806);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9804), 0xcb);
        EXPECT(gbc.readMem(0x9805), 0xed);
        // CB ED 03E4
        gbc.setState(0xb9f, 0x921d, 0x700, 0x7df3, 0xebc5, 0x561d, 0x1, 0x1);
        gbc.writeMem(0xb9f, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0x7d);
        EXPECT(gbc.c(),  0xf3);
        EXPECT(gbc.d(),  0xeb);
        EXPECT(gbc.e(),  0xc5);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0x921d);
        EXPECT(gbc.pc(), 0xba1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB ED 03E5
        gbc.setState(0x5a8b, 0xf1c, 0xf9b0, 0x279a, 0xb15c, 0x2054, 0x0, 0x1);
        gbc.writeMem(0x5a8b, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0xf9);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0xb1);
        EXPECT(gbc.e(),  0x5c);
        EXPECT(gbc.h(),  0x20);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0xf1c);
        EXPECT(gbc.pc(), 0x5a8d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB ED 03E6
        gbc.setState(0x4c1c, 0x82d3, 0xac70, 0x14c6, 0x62c3, 0x539c, 0x1, 0x0);
        gbc.writeMem(0x4c1c, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0xac);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0xc6);
        EXPECT(gbc.d(),  0x62);
        EXPECT(gbc.e(),  0xc3);
        EXPECT(gbc.h(),  0x53);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0x82d3);
        EXPECT(gbc.pc(), 0x4c1e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB ED 03E7
        gbc.setState(0xc07d, 0xa63f, 0x1c80, 0xa3f5, 0x7f77, 0xd9d5, 0x0, 0x1);
        gbc.writeMem(0xc07d, { 0xcb, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0x1c);
        EXPECT(gbc.b(),  0xa3);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0xa63f);
        EXPECT(gbc.pc(), 0xc07f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc07d), 0xcb);
        EXPECT(gbc.readMem(0xc07e), 0xed);
    }
