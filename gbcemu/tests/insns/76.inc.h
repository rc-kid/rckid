    TEST(gbcemu, opcode_76) {
        GBCEmu gbc{"", nullptr};
        uint8_t cartridge[0x8000];
        cartridge[0x149] = 0x02; // 8kb external RAM
        gbc.loadCartridge(new FlashGamePak(cartridge));
        // 76 0001
        gbc.setState(0xa3b2, 0x10bc, 0x55b0, 0x726c, 0xa054, 0x921e, 0x1, 0x0);
        gbc.writeMem(0xa3b2, { 0x76 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x10bc, gbc.sp());
        EXPECT(0xa3b3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x76, gbc.readMem(0xa3b2));
        // 76 0002
        gbc.setState(0x75e0, 0xccea, 0x5d40, 0x9901, 0x5828, 0xab6e, 0x1, 0x1);
        gbc.writeMem(0x75e0, { 0x76 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0xccea, gbc.sp());
        EXPECT(0x75e1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 76 0003
        gbc.setState(0x1871, 0x209c, 0x83a0, 0xb75, 0x8d5e, 0x3bec, 0x1, 0x0);
        gbc.writeMem(0x1871, { 0x76 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x209c, gbc.sp());
        EXPECT(0x1872, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 76 0004
        gbc.setState(0xd164, 0x4ea, 0x30d0, 0xfa0f, 0xe94f, 0x2851, 0x1, 0x1);
        gbc.writeMem(0xd164, { 0x76 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x4ea, gbc.sp());
        EXPECT(0xd165, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x76, gbc.readMem(0xd164));
        // 76 0005
        gbc.setState(0x6126, 0x36f4, 0x72d0, 0x1828, 0xf240, 0xe3a9, 0x0, 0x1);
        gbc.writeMem(0x6126, { 0x76 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x36f4, gbc.sp());
        EXPECT(0x6127, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 76 0006
        gbc.setState(0x2e51, 0xeb5f, 0x6f0, 0x83e3, 0x58d7, 0x902c, 0x0, 0x0);
        gbc.writeMem(0x2e51, { 0x76 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0xeb5f, gbc.sp());
        EXPECT(0x2e52, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 76 0007
        gbc.setState(0xb6d3, 0x70f7, 0x8fa0, 0xba33, 0xcecd, 0x8471, 0x1, 0x0);
        gbc.writeMem(0xb6d3, { 0x76 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x70f7, gbc.sp());
        EXPECT(0xb6d4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x76, gbc.readMem(0xb6d3));
        // 76 0008
        gbc.setState(0x505c, 0x8e85, 0x11f0, 0xc5e5, 0x2926, 0x90fb, 0x0, 0x1);
        gbc.writeMem(0x505c, { 0x76 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x8e85, gbc.sp());
        EXPECT(0x505d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 76 0009
        gbc.setState(0x5f49, 0xb04a, 0x670, 0x8a49, 0x2f54, 0xad53, 0x1, 0x1);
        gbc.writeMem(0x5f49, { 0x76 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0xb04a, gbc.sp());
        EXPECT(0x5f4a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 76 000A
        gbc.setState(0x2a65, 0x5bcb, 0xb5e0, 0x9642, 0xec70, 0x27d5, 0x1, 0x0);
        gbc.writeMem(0x2a65, { 0x76 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x5bcb, gbc.sp());
        EXPECT(0x2a66, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 76 000B
        gbc.setState(0x8ff5, 0xa5f, 0xcb50, 0xe803, 0x67af, 0x7165, 0x0, 0x1);
        gbc.writeMem(0x8ff5, { 0x76 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0xa5f, gbc.sp());
        EXPECT(0x8ff6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x76, gbc.readMem(0x8ff5));
        // 76 000C
        gbc.setState(0x3fa3, 0xb434, 0x30d0, 0xc72e, 0xd5f4, 0x6ec9, 0x1, 0x0);
        gbc.writeMem(0x3fa3, { 0x76 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0xb434, gbc.sp());
        EXPECT(0x3fa4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 76 000D
        gbc.setState(0x9545, 0xe0c5, 0x4ea0, 0x94f4, 0xd13c, 0x949, 0x1, 0x1);
        gbc.writeMem(0x9545, { 0x76 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0xe0c5, gbc.sp());
        EXPECT(0x9546, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x76, gbc.readMem(0x9545));
        // 76 000E
        gbc.setState(0xe3cd, 0x96ef, 0xe310, 0x2c77, 0x8cbd, 0x1888, 0x1, 0x1);
        gbc.writeMem(0xe3cd, { 0x76 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x96ef, gbc.sp());
        EXPECT(0xe3ce, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x76, gbc.readMem(0xe3cd));
        // 76 000F
        gbc.setState(0x928c, 0xc440, 0x2660, 0x601e, 0xa888, 0xba45, 0x0, 0x1);
        gbc.writeMem(0x928c, { 0x76 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0xc440, gbc.sp());
        EXPECT(0x928d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x76, gbc.readMem(0x928c));
        // 76 0010
        gbc.setState(0x1bcd, 0xf3e9, 0x41d0, 0x3fad, 0xe21a, 0x6ebc, 0x0, 0x0);
        gbc.writeMem(0x1bcd, { 0x76 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0xf3e9, gbc.sp());
        EXPECT(0x1bce, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 76 0011
        gbc.setState(0xb040, 0x37d6, 0xc360, 0xa620, 0xb6cf, 0xd04a, 0x1, 0x1);
        gbc.writeMem(0xb040, { 0x76 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x37d6, gbc.sp());
        EXPECT(0xb041, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x76, gbc.readMem(0xb040));
        // 76 0012
        gbc.setState(0x1012, 0xbd58, 0xa2b0, 0xc75a, 0x7db8, 0xd98, 0x1, 0x1);
        gbc.writeMem(0x1012, { 0x76 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0xbd58, gbc.sp());
        EXPECT(0x1013, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 76 0013
        gbc.setState(0x58a0, 0x5de, 0x6060, 0xf830, 0x8aed, 0x4849, 0x0, 0x0);
        gbc.writeMem(0x58a0, { 0x76 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x5de, gbc.sp());
        EXPECT(0x58a1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 76 0014
        gbc.setState(0x4c9f, 0xc486, 0xeef0, 0x41b0, 0x9341, 0x8316, 0x1, 0x0);
        gbc.writeMem(0x4c9f, { 0x76 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0xc486, gbc.sp());
        EXPECT(0x4ca0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 76 0015
        gbc.setState(0xb315, 0x3cb7, 0x1a10, 0x2a35, 0x159d, 0xd099, 0x0, 0x1);
        gbc.writeMem(0xb315, { 0x76 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x3cb7, gbc.sp());
        EXPECT(0xb316, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x76, gbc.readMem(0xb315));
        // 76 0016
        gbc.setState(0x7573, 0x3b70, 0x9990, 0xc962, 0x6d58, 0x464f, 0x1, 0x1);
        gbc.writeMem(0x7573, { 0x76 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x3b70, gbc.sp());
        EXPECT(0x7574, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 76 0017
        gbc.setState(0xdb44, 0x214c, 0x4140, 0x10ae, 0xb423, 0x2305, 0x1, 0x0);
        gbc.writeMem(0xdb44, { 0x76 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x214c, gbc.sp());
        EXPECT(0xdb45, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x76, gbc.readMem(0xdb44));
        // 76 0018
        gbc.setState(0xe224, 0x4342, 0xabe0, 0x9d84, 0x899f, 0xa10a, 0x1, 0x0);
        gbc.writeMem(0xe224, { 0x76 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x4342, gbc.sp());
        EXPECT(0xe225, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x76, gbc.readMem(0xe224));
        // 76 0019
        gbc.setState(0xe60e, 0x59c5, 0xa180, 0x7a7d, 0xc1cd, 0x2c94, 0x0, 0x1);
        gbc.writeMem(0xe60e, { 0x76 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x59c5, gbc.sp());
        EXPECT(0xe60f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x76, gbc.readMem(0xe60e));
        // 76 001A
        gbc.setState(0xbeaf, 0xdae9, 0x5590, 0xac9, 0x4a34, 0x1267, 0x0, 0x1);
        gbc.writeMem(0xbeaf, { 0x76 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0xdae9, gbc.sp());
        EXPECT(0xbeb0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x76, gbc.readMem(0xbeaf));
        // 76 001B
        gbc.setState(0x2c4c, 0x113e, 0x4b00, 0x3a0a, 0x4255, 0x154a, 0x0, 0x1);
        gbc.writeMem(0x2c4c, { 0x76 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x113e, gbc.sp());
        EXPECT(0x2c4d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 76 001C
        gbc.setState(0x4f5c, 0xd03e, 0x4700, 0x4b3d, 0xcfd9, 0xd8d5, 0x0, 0x0);
        gbc.writeMem(0x4f5c, { 0x76 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0xd03e, gbc.sp());
        EXPECT(0x4f5d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 76 001D
        gbc.setState(0x61e1, 0xb67b, 0x4920, 0x7061, 0x8180, 0x7b83, 0x1, 0x1);
        gbc.writeMem(0x61e1, { 0x76 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0xb67b, gbc.sp());
        EXPECT(0x61e2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 76 001E
        gbc.setState(0xd081, 0xb322, 0xfaf0, 0x38c6, 0x8c75, 0xfdf, 0x1, 0x1);
        gbc.writeMem(0xd081, { 0x76 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0xb322, gbc.sp());
        EXPECT(0xd082, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x76, gbc.readMem(0xd081));
        // 76 001F
        gbc.setState(0xc9bf, 0x2d72, 0xdd30, 0x4cfa, 0x884f, 0x628, 0x1, 0x0);
        gbc.writeMem(0xc9bf, { 0x76 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x2d72, gbc.sp());
        EXPECT(0xc9c0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x76, gbc.readMem(0xc9bf));
        // 76 0020
        gbc.setState(0x1f05, 0x52c9, 0x77f0, 0xe314, 0xd32e, 0x9804, 0x1, 0x1);
        gbc.writeMem(0x1f05, { 0x76 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x52c9, gbc.sp());
        EXPECT(0x1f06, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 76 0021
        gbc.setState(0x4765, 0x1a6c, 0x2e20, 0xc3ca, 0xd2bb, 0x8db2, 0x1, 0x1);
        gbc.writeMem(0x4765, { 0x76 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x1a6c, gbc.sp());
        EXPECT(0x4766, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 76 0022
        gbc.setState(0xdc95, 0x159c, 0x29c0, 0x8434, 0xe17f, 0x40af, 0x1, 0x0);
        gbc.writeMem(0xdc95, { 0x76 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x159c, gbc.sp());
        EXPECT(0xdc96, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x76, gbc.readMem(0xdc95));
        // 76 0023
        gbc.setState(0xd1c3, 0x63ef, 0x50b0, 0x219a, 0x4d03, 0x9bf1, 0x1, 0x0);
        gbc.writeMem(0xd1c3, { 0x76 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x63ef, gbc.sp());
        EXPECT(0xd1c4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x76, gbc.readMem(0xd1c3));
        // 76 0024
        gbc.setState(0xeb52, 0x312f, 0xc00, 0xa059, 0xe1cf, 0x14e9, 0x1, 0x1);
        gbc.writeMem(0xeb52, { 0x76 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x312f, gbc.sp());
        EXPECT(0xeb53, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x76, gbc.readMem(0xeb52));
        // 76 0025
        gbc.setState(0xabe2, 0x5029, 0x4800, 0x39f0, 0x9016, 0x34ff, 0x1, 0x0);
        gbc.writeMem(0xabe2, { 0x76 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x5029, gbc.sp());
        EXPECT(0xabe3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x76, gbc.readMem(0xabe2));
        // 76 0026
        gbc.setState(0xec38, 0x318, 0x6dd0, 0xeb7c, 0xc476, 0x429a, 0x0, 0x0);
        gbc.writeMem(0xec38, { 0x76 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x318, gbc.sp());
        EXPECT(0xec39, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x76, gbc.readMem(0xec38));
        // 76 0028
        gbc.setState(0xef36, 0xab2c, 0x5890, 0xbe82, 0x86dc, 0x372d, 0x0, 0x0);
        gbc.writeMem(0xef36, { 0x76 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0xab2c, gbc.sp());
        EXPECT(0xef37, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x76, gbc.readMem(0xef36));
        // 76 0029
        gbc.setState(0xe17f, 0x2fc, 0xf980, 0x8492, 0xe9ad, 0x9775, 0x1, 0x0);
        gbc.writeMem(0xe17f, { 0x76 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x2fc, gbc.sp());
        EXPECT(0xe180, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x76, gbc.readMem(0xe17f));
        // 76 002A
        gbc.setState(0xc484, 0xf0ad, 0x4490, 0x42a1, 0xdee6, 0x6171, 0x1, 0x0);
        gbc.writeMem(0xc484, { 0x76 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0xf0ad, gbc.sp());
        EXPECT(0xc485, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x76, gbc.readMem(0xc484));
        // 76 002B
        gbc.setState(0x2fe, 0x7cb6, 0xcc20, 0xc2be, 0x67a, 0x1483, 0x1, 0x1);
        gbc.writeMem(0x2fe, { 0x76 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x7cb6, gbc.sp());
        EXPECT(0x2ff, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 76 002D
        gbc.setState(0x1e2, 0x27c2, 0x3800, 0x6d28, 0x2ca, 0x915e, 0x1, 0x0);
        gbc.writeMem(0x1e2, { 0x76 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x27c2, gbc.sp());
        EXPECT(0x1e3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 76 002E
        gbc.setState(0x39c3, 0x728e, 0x1bb0, 0xd4b1, 0xa8d3, 0xa00d, 0x1, 0x1);
        gbc.writeMem(0x39c3, { 0x76 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x728e, gbc.sp());
        EXPECT(0x39c4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 76 002F
        gbc.setState(0x647, 0xe63d, 0xce10, 0x72e7, 0x74b9, 0xc3cf, 0x1, 0x0);
        gbc.writeMem(0x647, { 0x76 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0xe63d, gbc.sp());
        EXPECT(0x648, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 76 0030
        gbc.setState(0x2b73, 0xf1e8, 0x4af0, 0xcdbc, 0x6d00, 0xc733, 0x1, 0x1);
        gbc.writeMem(0x2b73, { 0x76 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0xf1e8, gbc.sp());
        EXPECT(0x2b74, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 76 0031
        gbc.setState(0x2887, 0x9f3e, 0xc5f0, 0x7136, 0x8431, 0xb96d, 0x0, 0x1);
        gbc.writeMem(0x2887, { 0x76 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x9f3e, gbc.sp());
        EXPECT(0x2888, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 76 0032
        gbc.setState(0xc2e6, 0x70d6, 0x9180, 0x568b, 0xe1c9, 0x2e7d, 0x1, 0x0);
        gbc.writeMem(0xc2e6, { 0x76 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x70d6, gbc.sp());
        EXPECT(0xc2e7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x76, gbc.readMem(0xc2e6));
        // 76 0033
        gbc.setState(0xa1e0, 0x91a3, 0xdfd0, 0xee76, 0x301b, 0x4d52, 0x0, 0x1);
        gbc.writeMem(0xa1e0, { 0x76 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x91a3, gbc.sp());
        EXPECT(0xa1e1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x76, gbc.readMem(0xa1e0));
        // 76 0034
        gbc.setState(0x8ebf, 0x1c71, 0x5610, 0xfc00, 0x5bfb, 0x3b02, 0x0, 0x1);
        gbc.writeMem(0x8ebf, { 0x76 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x1c71, gbc.sp());
        EXPECT(0x8ec0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x76, gbc.readMem(0x8ebf));
        // 76 0035
        gbc.setState(0x888f, 0x91d8, 0x9cc0, 0x8a86, 0x4821, 0x2968, 0x1, 0x1);
        gbc.writeMem(0x888f, { 0x76 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x91d8, gbc.sp());
        EXPECT(0x8890, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x76, gbc.readMem(0x888f));
        // 76 0036
        gbc.setState(0xaf7d, 0x95e4, 0x9fc0, 0x8f92, 0xf44f, 0x5418, 0x0, 0x1);
        gbc.writeMem(0xaf7d, { 0x76 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x95e4, gbc.sp());
        EXPECT(0xaf7e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x76, gbc.readMem(0xaf7d));
        // 76 0037
        gbc.setState(0x5d08, 0xe943, 0x1bd0, 0xc3eb, 0xb3ff, 0xac6, 0x0, 0x1);
        gbc.writeMem(0x5d08, { 0x76 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0xe943, gbc.sp());
        EXPECT(0x5d09, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 76 0038
        gbc.setState(0x5262, 0xf9ad, 0xbb00, 0xdcb1, 0x3aa8, 0xa9f9, 0x1, 0x1);
        gbc.writeMem(0x5262, { 0x76 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0xf9ad, gbc.sp());
        EXPECT(0x5263, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 76 0039
        gbc.setState(0xb888, 0x7c8f, 0x4030, 0x8ded, 0x21fc, 0x2081, 0x0, 0x0);
        gbc.writeMem(0xb888, { 0x76 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x7c8f, gbc.sp());
        EXPECT(0xb889, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x76, gbc.readMem(0xb888));
        // 76 003A
        gbc.setState(0xc778, 0xbb61, 0x9aa0, 0xa80f, 0xdec5, 0xb4a2, 0x1, 0x0);
        gbc.writeMem(0xc778, { 0x76 });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0xbb61, gbc.sp());
        EXPECT(0xc779, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x76, gbc.readMem(0xc778));
        // 76 003B
        gbc.setState(0xeb57, 0x6521, 0xccc0, 0x5ea1, 0x909c, 0xcc22, 0x0, 0x1);
        gbc.writeMem(0xeb57, { 0x76 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x6521, gbc.sp());
        EXPECT(0xeb58, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x76, gbc.readMem(0xeb57));
        // 76 003C
        gbc.setState(0xcd0b, 0x36ca, 0x7960, 0x80e, 0xb0b1, 0xefc8, 0x1, 0x1);
        gbc.writeMem(0xcd0b, { 0x76 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x36ca, gbc.sp());
        EXPECT(0xcd0c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x76, gbc.readMem(0xcd0b));
        // 76 003D
        gbc.setState(0x29c0, 0xe880, 0xa510, 0x2dfc, 0xf09c, 0xf0b7, 0x1, 0x1);
        gbc.writeMem(0x29c0, { 0x76 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0xe880, gbc.sp());
        EXPECT(0x29c1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 76 003E
        gbc.setState(0x2864, 0xc29, 0xb870, 0x83d2, 0xed33, 0x946b, 0x1, 0x1);
        gbc.writeMem(0x2864, { 0x76 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0xc29, gbc.sp());
        EXPECT(0x2865, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 76 0040
        gbc.setState(0x620, 0x66f3, 0x6c60, 0x426, 0x104d, 0x10ff, 0x1, 0x0);
        gbc.writeMem(0x620, { 0x76 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x66f3, gbc.sp());
        EXPECT(0x621, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 76 0042
        gbc.setState(0x8d7f, 0xa082, 0xc0c0, 0x7529, 0xeb26, 0x2e99, 0x0, 0x0);
        gbc.writeMem(0x8d7f, { 0x76 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0xa082, gbc.sp());
        EXPECT(0x8d80, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x76, gbc.readMem(0x8d7f));
        // 76 0043
        gbc.setState(0x36a8, 0x3262, 0x34a0, 0x5fa1, 0x30f0, 0x7f02, 0x1, 0x0);
        gbc.writeMem(0x36a8, { 0x76 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x3262, gbc.sp());
        EXPECT(0x36a9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 76 0044
        gbc.setState(0xa387, 0xd1d0, 0x1140, 0x5fad, 0x304a, 0xfd49, 0x1, 0x1);
        gbc.writeMem(0xa387, { 0x76 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0xd1d0, gbc.sp());
        EXPECT(0xa388, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x76, gbc.readMem(0xa387));
        // 76 0045
        gbc.setState(0xec48, 0x2c27, 0xf860, 0x6e02, 0xc9e1, 0x6eb, 0x1, 0x1);
        gbc.writeMem(0xec48, { 0x76 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x2c27, gbc.sp());
        EXPECT(0xec49, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x76, gbc.readMem(0xec48));
        // 76 0046
        gbc.setState(0x3d3c, 0x7210, 0xaad0, 0x2bdf, 0xc0bb, 0x7f42, 0x0, 0x0);
        gbc.writeMem(0x3d3c, { 0x76 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x7210, gbc.sp());
        EXPECT(0x3d3d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 76 0047
        gbc.setState(0xef5a, 0x8160, 0x4550, 0x7b1f, 0x3af4, 0x7119, 0x0, 0x1);
        gbc.writeMem(0xef5a, { 0x76 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x8160, gbc.sp());
        EXPECT(0xef5b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x76, gbc.readMem(0xef5a));
        // 76 0048
        gbc.setState(0x87ea, 0x691a, 0x9c00, 0xb6b, 0xd696, 0xf9d6, 0x0, 0x1);
        gbc.writeMem(0x87ea, { 0x76 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x691a, gbc.sp());
        EXPECT(0x87eb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x76, gbc.readMem(0x87ea));
        // 76 0049
        gbc.setState(0x8450, 0x7f18, 0x18c0, 0x1213, 0xb5c0, 0x894c, 0x0, 0x1);
        gbc.writeMem(0x8450, { 0x76 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x7f18, gbc.sp());
        EXPECT(0x8451, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x76, gbc.readMem(0x8450));
        // 76 004A
        gbc.setState(0xdc9d, 0x9ee8, 0x8290, 0xa1b0, 0xfdeb, 0x91b1, 0x0, 0x1);
        gbc.writeMem(0xdc9d, { 0x76 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x9ee8, gbc.sp());
        EXPECT(0xdc9e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x76, gbc.readMem(0xdc9d));
        // 76 004B
        gbc.setState(0xb980, 0xf613, 0xe2d0, 0xf1a8, 0xcf3a, 0x8586, 0x0, 0x1);
        gbc.writeMem(0xb980, { 0x76 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0xf613, gbc.sp());
        EXPECT(0xb981, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x76, gbc.readMem(0xb980));
        // 76 004C
        gbc.setState(0x590, 0x4ea2, 0x60, 0xf1de, 0xf7dc, 0x7305, 0x0, 0x1);
        gbc.writeMem(0x590, { 0x76 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x4ea2, gbc.sp());
        EXPECT(0x591, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 76 004D
        gbc.setState(0xc0ad, 0xec1c, 0x9850, 0xb35b, 0xc9a1, 0xfc83, 0x0, 0x0);
        gbc.writeMem(0xc0ad, { 0x76 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0xec1c, gbc.sp());
        EXPECT(0xc0ae, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x76, gbc.readMem(0xc0ad));
        // 76 004E
        gbc.setState(0xce3a, 0xb3fe, 0xf160, 0x30c4, 0x1143, 0xcfe5, 0x0, 0x1);
        gbc.writeMem(0xce3a, { 0x76 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0xb3fe, gbc.sp());
        EXPECT(0xce3b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x76, gbc.readMem(0xce3a));
        // 76 004F
        gbc.setState(0x9a05, 0x941e, 0x9560, 0x2ae4, 0x619f, 0x7f4d, 0x0, 0x1);
        gbc.writeMem(0x9a05, { 0x76 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x941e, gbc.sp());
        EXPECT(0x9a06, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x76, gbc.readMem(0x9a05));
        // 76 0050
        gbc.setState(0xa418, 0xd610, 0x7ca0, 0x14be, 0x9049, 0x124b, 0x0, 0x0);
        gbc.writeMem(0xa418, { 0x76 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0xd610, gbc.sp());
        EXPECT(0xa419, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x76, gbc.readMem(0xa418));
        // 76 0051
        gbc.setState(0xd23d, 0x9d69, 0x6450, 0x9030, 0xa505, 0x88dc, 0x0, 0x1);
        gbc.writeMem(0xd23d, { 0x76 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x9d69, gbc.sp());
        EXPECT(0xd23e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x76, gbc.readMem(0xd23d));
        // 76 0052
        gbc.setState(0xeb03, 0xfad3, 0x35f0, 0xb349, 0x9d30, 0xcd37, 0x0, 0x0);
        gbc.writeMem(0xeb03, { 0x76 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0xfad3, gbc.sp());
        EXPECT(0xeb04, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x76, gbc.readMem(0xeb03));
        // 76 0053
        gbc.setState(0x92df, 0x5597, 0x5620, 0x6d50, 0xb513, 0xc1a9, 0x1, 0x0);
        gbc.writeMem(0x92df, { 0x76 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x5597, gbc.sp());
        EXPECT(0x92e0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x76, gbc.readMem(0x92df));
        // 76 0054
        gbc.setState(0x95b2, 0x6ebb, 0x3d70, 0xabe2, 0x2a92, 0x43a3, 0x0, 0x1);
        gbc.writeMem(0x95b2, { 0x76 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0x6ebb, gbc.sp());
        EXPECT(0x95b3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x76, gbc.readMem(0x95b2));
        // 76 0055
        gbc.setState(0x4404, 0xd565, 0x5b80, 0x6c57, 0xf31c, 0x8b00, 0x0, 0x0);
        gbc.writeMem(0x4404, { 0x76 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0xd565, gbc.sp());
        EXPECT(0x4405, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 76 0056
        gbc.setState(0xb246, 0xbc96, 0xa440, 0x89cd, 0xce3f, 0x3e86, 0x0, 0x1);
        gbc.writeMem(0xb246, { 0x76 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0xbc96, gbc.sp());
        EXPECT(0xb247, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x76, gbc.readMem(0xb246));
        // 76 0057
        gbc.setState(0x7fb5, 0xff0f, 0xe7f0, 0xeea6, 0x2dc1, 0x4d02, 0x0, 0x0);
        gbc.writeMem(0x7fb5, { 0x76 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0xff0f, gbc.sp());
        EXPECT(0x7fb6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 76 0059
        gbc.setState(0x9b43, 0xbecf, 0x23e0, 0xc8d6, 0xdd, 0xab2, 0x1, 0x1);
        gbc.writeMem(0x9b43, { 0x76 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0xbecf, gbc.sp());
        EXPECT(0x9b44, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x76, gbc.readMem(0x9b43));
        // 76 005A
        gbc.setState(0xb0ff, 0x3865, 0x5800, 0xf708, 0x264, 0xa04d, 0x0, 0x1);
        gbc.writeMem(0xb0ff, { 0x76 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x3865, gbc.sp());
        EXPECT(0xb100, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x76, gbc.readMem(0xb0ff));
        // 76 005B
        gbc.setState(0xec96, 0x659e, 0xfb20, 0xd562, 0xfd74, 0x71c7, 0x0, 0x1);
        gbc.writeMem(0xec96, { 0x76 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x659e, gbc.sp());
        EXPECT(0xec97, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x76, gbc.readMem(0xec96));
        // 76 005C
        gbc.setState(0x4c19, 0x2e59, 0x6a90, 0xe04c, 0xa36f, 0x4961, 0x1, 0x1);
        gbc.writeMem(0x4c19, { 0x76 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x2e59, gbc.sp());
        EXPECT(0x4c1a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 76 005D
        gbc.setState(0x684c, 0x53ae, 0x60, 0xc8f5, 0x77c1, 0xf87d, 0x0, 0x0);
        gbc.writeMem(0x684c, { 0x76 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x53ae, gbc.sp());
        EXPECT(0x684d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 76 005E
        gbc.setState(0x18e9, 0xf071, 0xfbf0, 0x6eef, 0x9626, 0x78c9, 0x1, 0x1);
        gbc.writeMem(0x18e9, { 0x76 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0xf071, gbc.sp());
        EXPECT(0x18ea, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 76 005F
        gbc.setState(0xbb60, 0x5ba5, 0x210, 0x7d7f, 0x1f0c, 0x58dc, 0x1, 0x1);
        gbc.writeMem(0xbb60, { 0x76 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x5ba5, gbc.sp());
        EXPECT(0xbb61, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x76, gbc.readMem(0xbb60));
        // 76 0060
        gbc.setState(0x262c, 0xe65c, 0xd1e0, 0xa101, 0x4a89, 0xf629, 0x0, 0x0);
        gbc.writeMem(0x262c, { 0x76 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0xe65c, gbc.sp());
        EXPECT(0x262d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 76 0063
        gbc.setState(0x56bb, 0x563c, 0x3170, 0x8e61, 0x232d, 0xe353, 0x1, 0x1);
        gbc.writeMem(0x56bb, { 0x76 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x563c, gbc.sp());
        EXPECT(0x56bc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 76 0064
        gbc.setState(0x6bd7, 0xabf, 0xe230, 0xb65a, 0x3aa1, 0x3c11, 0x1, 0x1);
        gbc.writeMem(0x6bd7, { 0x76 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0xabf, gbc.sp());
        EXPECT(0x6bd8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 76 0065
        gbc.setState(0x1995, 0xd751, 0x8070, 0x2afb, 0xb730, 0xf11e, 0x0, 0x1);
        gbc.writeMem(0x1995, { 0x76 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0xd751, gbc.sp());
        EXPECT(0x1996, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 76 0066
        gbc.setState(0x64d9, 0x26e0, 0xa790, 0xb572, 0x30ff, 0xeb28, 0x1, 0x0);
        gbc.writeMem(0x64d9, { 0x76 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x26e0, gbc.sp());
        EXPECT(0x64da, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 76 0067
        gbc.setState(0x6ad5, 0x6d1, 0x30e0, 0xd3b6, 0xe909, 0x5858, 0x1, 0x1);
        gbc.writeMem(0x6ad5, { 0x76 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x6d1, gbc.sp());
        EXPECT(0x6ad6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 76 0068
        gbc.setState(0x502f, 0xeccb, 0x3f00, 0xe6c, 0x3aca, 0x7659, 0x0, 0x1);
        gbc.writeMem(0x502f, { 0x76 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0xeccb, gbc.sp());
        EXPECT(0x5030, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 76 0069
        gbc.setState(0x39ac, 0x6b8b, 0xf420, 0xc35b, 0xf276, 0xa585, 0x1, 0x1);
        gbc.writeMem(0x39ac, { 0x76 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x6b8b, gbc.sp());
        EXPECT(0x39ad, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 76 006A
        gbc.setState(0x5c09, 0x3bc3, 0xaad0, 0x8f9d, 0x2507, 0xacac, 0x0, 0x1);
        gbc.writeMem(0x5c09, { 0x76 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x3bc3, gbc.sp());
        EXPECT(0x5c0a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 76 006B
        gbc.setState(0x5410, 0xa20f, 0x5b40, 0x3678, 0xfee1, 0xf76a, 0x0, 0x1);
        gbc.writeMem(0x5410, { 0x76 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0xa20f, gbc.sp());
        EXPECT(0x5411, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 76 006C
        gbc.setState(0xdf7d, 0x7cc0, 0xf640, 0x9265, 0xda0c, 0x242f, 0x0, 0x0);
        gbc.writeMem(0xdf7d, { 0x76 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x7cc0, gbc.sp());
        EXPECT(0xdf7e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x76, gbc.readMem(0xdf7d));
        // 76 006D
        gbc.setState(0x3e77, 0xa8e0, 0x2540, 0xc2e5, 0x173a, 0xa196, 0x0, 0x1);
        gbc.writeMem(0x3e77, { 0x76 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0xa8e0, gbc.sp());
        EXPECT(0x3e78, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 76 006E
        gbc.setState(0x153b, 0xdf10, 0xa1b0, 0x20f3, 0xf7c8, 0x4efb, 0x1, 0x0);
        gbc.writeMem(0x153b, { 0x76 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0xdf10, gbc.sp());
        EXPECT(0x153c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 76 006F
        gbc.setState(0x9fdf, 0x8fc8, 0xad00, 0xa2fa, 0x77fc, 0xd6f, 0x0, 0x0);
        gbc.writeMem(0x9fdf, { 0x76 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x8fc8, gbc.sp());
        EXPECT(0x9fe0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x76, gbc.readMem(0x9fdf));
        // 76 0070
        gbc.setState(0x5f48, 0x9636, 0xe8e0, 0x364d, 0xf0f9, 0x750e, 0x0, 0x1);
        gbc.writeMem(0x5f48, { 0x76 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x9636, gbc.sp());
        EXPECT(0x5f49, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 76 0071
        gbc.setState(0x6c58, 0x11e5, 0x51f0, 0x86df, 0xeb15, 0xb2b3, 0x0, 0x1);
        gbc.writeMem(0x6c58, { 0x76 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x11e5, gbc.sp());
        EXPECT(0x6c59, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 76 0072
        gbc.setState(0x897e, 0xccf0, 0x680, 0x3c58, 0xf174, 0x1a35, 0x1, 0x1);
        gbc.writeMem(0x897e, { 0x76 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0xccf0, gbc.sp());
        EXPECT(0x897f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x76, gbc.readMem(0x897e));
        // 76 0073
        gbc.setState(0x94f8, 0xa1be, 0x3740, 0xa856, 0x8895, 0x1f1, 0x0, 0x0);
        gbc.writeMem(0x94f8, { 0x76 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0xa1be, gbc.sp());
        EXPECT(0x94f9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x76, gbc.readMem(0x94f8));
        // 76 0074
        gbc.setState(0xec12, 0x2857, 0xed60, 0x94d9, 0xc382, 0xeb7b, 0x0, 0x1);
        gbc.writeMem(0xec12, { 0x76 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x2857, gbc.sp());
        EXPECT(0xec13, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x76, gbc.readMem(0xec12));
        // 76 0075
        gbc.setState(0xd7fe, 0xc6a5, 0x8b10, 0xa84c, 0xb390, 0x8c2, 0x0, 0x1);
        gbc.writeMem(0xd7fe, { 0x76 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0xc6a5, gbc.sp());
        EXPECT(0xd7ff, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x76, gbc.readMem(0xd7fe));
        // 76 0076
        gbc.setState(0xb46d, 0x5bf3, 0x2d70, 0x1c86, 0x1f69, 0xddb4, 0x0, 0x1);
        gbc.writeMem(0xb46d, { 0x76 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x5bf3, gbc.sp());
        EXPECT(0xb46e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x76, gbc.readMem(0xb46d));
        // 76 0077
        gbc.setState(0x682a, 0xbfcc, 0x6ab0, 0x1e3a, 0xd9b6, 0x900c, 0x0, 0x0);
        gbc.writeMem(0x682a, { 0x76 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0xbfcc, gbc.sp());
        EXPECT(0x682b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 76 0078
        gbc.setState(0x223c, 0xc75f, 0x3840, 0x2bd4, 0x7ed6, 0xdd6a, 0x0, 0x1);
        gbc.writeMem(0x223c, { 0x76 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0xc75f, gbc.sp());
        EXPECT(0x223d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 76 0079
        gbc.setState(0x8c4a, 0x5b8, 0x9500, 0xb98e, 0xd89e, 0x5af4, 0x1, 0x0);
        gbc.writeMem(0x8c4a, { 0x76 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x5b8, gbc.sp());
        EXPECT(0x8c4b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x76, gbc.readMem(0x8c4a));
        // 76 007A
        gbc.setState(0x4a2d, 0x4fbf, 0x3490, 0x92bb, 0xa9fa, 0xa8b7, 0x0, 0x1);
        gbc.writeMem(0x4a2d, { 0x76 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x4fbf, gbc.sp());
        EXPECT(0x4a2e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 76 007B
        gbc.setState(0xd007, 0x2fa1, 0x6750, 0x6778, 0x7f1c, 0xe3bc, 0x0, 0x0);
        gbc.writeMem(0xd007, { 0x76 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x2fa1, gbc.sp());
        EXPECT(0xd008, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x76, gbc.readMem(0xd007));
        // 76 007C
        gbc.setState(0xdda4, 0xc985, 0x2630, 0xe8d9, 0x324c, 0x1887, 0x1, 0x1);
        gbc.writeMem(0xdda4, { 0x76 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0xc985, gbc.sp());
        EXPECT(0xdda5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x76, gbc.readMem(0xdda4));
        // 76 007D
        gbc.setState(0xb3ac, 0x8aab, 0x48a0, 0x17d, 0x76fc, 0xf998, 0x0, 0x0);
        gbc.writeMem(0xb3ac, { 0x76 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x8aab, gbc.sp());
        EXPECT(0xb3ad, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x76, gbc.readMem(0xb3ac));
        // 76 007F
        gbc.setState(0x908f, 0x13e1, 0x37f0, 0xc7b7, 0xe011, 0xb140, 0x1, 0x1);
        gbc.writeMem(0x908f, { 0x76 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x13e1, gbc.sp());
        EXPECT(0x9090, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x76, gbc.readMem(0x908f));
        // 76 0080
        gbc.setState(0xaf35, 0xe8c0, 0xe1f0, 0xa9e5, 0x9ccd, 0xb4dd, 0x0, 0x0);
        gbc.writeMem(0xaf35, { 0x76 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0xe8c0, gbc.sp());
        EXPECT(0xaf36, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x76, gbc.readMem(0xaf35));
        // 76 0081
        gbc.setState(0x33a8, 0xa7e7, 0x820, 0x374, 0x33d6, 0x67d, 0x0, 0x0);
        gbc.writeMem(0x33a8, { 0x76 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0xa7e7, gbc.sp());
        EXPECT(0x33a9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 76 0082
        gbc.setState(0x7dd1, 0xca90, 0x2910, 0xc89c, 0x6291, 0xc6af, 0x0, 0x0);
        gbc.writeMem(0x7dd1, { 0x76 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0xca90, gbc.sp());
        EXPECT(0x7dd2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 76 0083
        gbc.setState(0x2667, 0x9931, 0xacd0, 0x436d, 0xf4c4, 0xed9e, 0x1, 0x0);
        gbc.writeMem(0x2667, { 0x76 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x9931, gbc.sp());
        EXPECT(0x2668, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 76 0084
        gbc.setState(0x45e1, 0x51a9, 0x7e20, 0x29c5, 0xda4b, 0x10fc, 0x0, 0x0);
        gbc.writeMem(0x45e1, { 0x76 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x51a9, gbc.sp());
        EXPECT(0x45e2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 76 0085
        gbc.setState(0x4aed, 0x8c57, 0xb6a0, 0x442, 0xe7fd, 0x72e2, 0x1, 0x0);
        gbc.writeMem(0x4aed, { 0x76 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x8c57, gbc.sp());
        EXPECT(0x4aee, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 76 0086
        gbc.setState(0xe0dc, 0x9d81, 0x2a20, 0xe5fc, 0x57dd, 0x37dc, 0x1, 0x1);
        gbc.writeMem(0xe0dc, { 0x76 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x9d81, gbc.sp());
        EXPECT(0xe0dd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x76, gbc.readMem(0xe0dc));
        // 76 0087
        gbc.setState(0x8107, 0xf207, 0xc9f0, 0xe1c, 0xe795, 0xcb8e, 0x1, 0x0);
        gbc.writeMem(0x8107, { 0x76 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0xf207, gbc.sp());
        EXPECT(0x8108, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x76, gbc.readMem(0x8107));
        // 76 0088
        gbc.setState(0x4d3f, 0x7b57, 0x8400, 0xc065, 0xc53, 0x666a, 0x1, 0x1);
        gbc.writeMem(0x4d3f, { 0x76 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x7b57, gbc.sp());
        EXPECT(0x4d40, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 76 0089
        gbc.setState(0x8a12, 0x84e4, 0xdb80, 0xa982, 0x5cae, 0x92f6, 0x0, 0x1);
        gbc.writeMem(0x8a12, { 0x76 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x84e4, gbc.sp());
        EXPECT(0x8a13, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x76, gbc.readMem(0x8a12));
        // 76 008A
        gbc.setState(0xb722, 0x56d2, 0xaf00, 0x3f1c, 0xa52d, 0x42ea, 0x0, 0x0);
        gbc.writeMem(0xb722, { 0x76 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x56d2, gbc.sp());
        EXPECT(0xb723, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x76, gbc.readMem(0xb722));
        // 76 008B
        gbc.setState(0xbdd7, 0x97c9, 0xcfb0, 0x67ba, 0xaa8b, 0x2fa6, 0x0, 0x0);
        gbc.writeMem(0xbdd7, { 0x76 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x97c9, gbc.sp());
        EXPECT(0xbdd8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x76, gbc.readMem(0xbdd7));
        // 76 008C
        gbc.setState(0x27f1, 0x813f, 0xace0, 0x3744, 0x28fc, 0xdf49, 0x1, 0x1);
        gbc.writeMem(0x27f1, { 0x76 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x813f, gbc.sp());
        EXPECT(0x27f2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 76 008D
        gbc.setState(0x9006, 0xd606, 0x1140, 0x2fed, 0x34e3, 0x85dc, 0x0, 0x1);
        gbc.writeMem(0x9006, { 0x76 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0xd606, gbc.sp());
        EXPECT(0x9007, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x76, gbc.readMem(0x9006));
        // 76 008E
        gbc.setState(0x456a, 0x5377, 0x6f30, 0xd3e3, 0x9588, 0x8b48, 0x0, 0x1);
        gbc.writeMem(0x456a, { 0x76 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0x5377, gbc.sp());
        EXPECT(0x456b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 76 008F
        gbc.setState(0x7277, 0x53fe, 0x9b00, 0x5a, 0x96da, 0x8b17, 0x1, 0x0);
        gbc.writeMem(0x7277, { 0x76 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x53fe, gbc.sp());
        EXPECT(0x7278, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 76 0090
        gbc.setState(0xaefe, 0x225f, 0x4ff0, 0x2c8f, 0x23c3, 0x5bcd, 0x1, 0x1);
        gbc.writeMem(0xaefe, { 0x76 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x225f, gbc.sp());
        EXPECT(0xaeff, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x76, gbc.readMem(0xaefe));
        // 76 0091
        gbc.setState(0x6d62, 0xaa71, 0x7670, 0xb3d, 0x3a85, 0x3c2d, 0x0, 0x1);
        gbc.writeMem(0x6d62, { 0x76 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0xaa71, gbc.sp());
        EXPECT(0x6d63, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 76 0092
        gbc.setState(0x257d, 0xb21c, 0xd20, 0x2523, 0xef0c, 0x79da, 0x0, 0x1);
        gbc.writeMem(0x257d, { 0x76 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0xb21c, gbc.sp());
        EXPECT(0x257e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 76 0093
        gbc.setState(0x7db5, 0x22d7, 0xd040, 0xe26, 0xa8f, 0x2a38, 0x0, 0x0);
        gbc.writeMem(0x7db5, { 0x76 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x22d7, gbc.sp());
        EXPECT(0x7db6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 76 0094
        gbc.setState(0x6262, 0xa6b3, 0x5120, 0xfdac, 0xf421, 0xaee8, 0x1, 0x0);
        gbc.writeMem(0x6262, { 0x76 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0xa6b3, gbc.sp());
        EXPECT(0x6263, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 76 0095
        gbc.setState(0xdb65, 0xe368, 0x5d00, 0x8986, 0xc8b7, 0x14a6, 0x0, 0x0);
        gbc.writeMem(0xdb65, { 0x76 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0xe368, gbc.sp());
        EXPECT(0xdb66, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x76, gbc.readMem(0xdb65));
        // 76 0096
        gbc.setState(0xd5e3, 0xca2, 0x3570, 0x7196, 0x2c2d, 0xc986, 0x1, 0x1);
        gbc.writeMem(0xd5e3, { 0x76 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0xca2, gbc.sp());
        EXPECT(0xd5e4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x76, gbc.readMem(0xd5e3));
        // 76 0097
        gbc.setState(0x44c, 0x25b2, 0xa560, 0xe15c, 0xeb2a, 0x7310, 0x0, 0x1);
        gbc.writeMem(0x44c, { 0x76 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x25b2, gbc.sp());
        EXPECT(0x44d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 76 0098
        gbc.setState(0xc15d, 0x2a77, 0x9020, 0xb35a, 0x8248, 0x1635, 0x1, 0x1);
        gbc.writeMem(0xc15d, { 0x76 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x2a77, gbc.sp());
        EXPECT(0xc15e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x76, gbc.readMem(0xc15d));
        // 76 0099
        gbc.setState(0x9e1b, 0xad7c, 0xa370, 0xf8df, 0xad4f, 0xda8b, 0x1, 0x1);
        gbc.writeMem(0x9e1b, { 0x76 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0xad7c, gbc.sp());
        EXPECT(0x9e1c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x76, gbc.readMem(0x9e1b));
        // 76 009A
        gbc.setState(0xa676, 0x229c, 0x4010, 0xcd43, 0x45c3, 0x453c, 0x0, 0x0);
        gbc.writeMem(0xa676, { 0x76 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x229c, gbc.sp());
        EXPECT(0xa677, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x76, gbc.readMem(0xa676));
        // 76 009B
        gbc.setState(0x773e, 0x4241, 0x8e60, 0xc20f, 0x2015, 0x3941, 0x1, 0x0);
        gbc.writeMem(0x773e, { 0x76 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x4241, gbc.sp());
        EXPECT(0x773f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 76 009C
        gbc.setState(0x2909, 0x3ae4, 0x3580, 0xc265, 0xc19e, 0x738c, 0x1, 0x1);
        gbc.writeMem(0x2909, { 0x76 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x3ae4, gbc.sp());
        EXPECT(0x290a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 76 009D
        gbc.setState(0x6cf, 0x4898, 0xca40, 0x39bb, 0xfde2, 0x82b0, 0x1, 0x0);
        gbc.writeMem(0x6cf, { 0x76 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x4898, gbc.sp());
        EXPECT(0x6d0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 76 009E
        gbc.setState(0xd4fb, 0x3946, 0xb5d0, 0x8061, 0xce4f, 0x9e12, 0x0, 0x0);
        gbc.writeMem(0xd4fb, { 0x76 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x3946, gbc.sp());
        EXPECT(0xd4fc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x76, gbc.readMem(0xd4fb));
        // 76 009F
        gbc.setState(0xcbba, 0x315, 0xfd30, 0x6b30, 0x1429, 0xf1fa, 0x0, 0x1);
        gbc.writeMem(0xcbba, { 0x76 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0x315, gbc.sp());
        EXPECT(0xcbbb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x76, gbc.readMem(0xcbba));
        // 76 00A0
        gbc.setState(0x7b81, 0x90d3, 0x3890, 0x7f4d, 0x3807, 0x525d, 0x1, 0x1);
        gbc.writeMem(0x7b81, { 0x76 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x90d3, gbc.sp());
        EXPECT(0x7b82, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 76 00A1
        gbc.setState(0x4c7a, 0xd0dc, 0x52b0, 0x4c7e, 0x9abb, 0xd1b0, 0x1, 0x1);
        gbc.writeMem(0x4c7a, { 0x76 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0xd0dc, gbc.sp());
        EXPECT(0x4c7b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 76 00A2
        gbc.setState(0xa0f9, 0xb797, 0x2d30, 0x5253, 0x70c4, 0xdcf6, 0x0, 0x0);
        gbc.writeMem(0xa0f9, { 0x76 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0xb797, gbc.sp());
        EXPECT(0xa0fa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x76, gbc.readMem(0xa0f9));
        // 76 00A3
        gbc.setState(0x5bf1, 0xcdc7, 0x5ba0, 0xb5ae, 0xc80d, 0xde4a, 0x1, 0x0);
        gbc.writeMem(0x5bf1, { 0x76 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0xcdc7, gbc.sp());
        EXPECT(0x5bf2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 76 00A4
        gbc.setState(0x8c68, 0x9893, 0x9d50, 0x1840, 0xcfda, 0xe814, 0x1, 0x0);
        gbc.writeMem(0x8c68, { 0x76 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x9893, gbc.sp());
        EXPECT(0x8c69, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x76, gbc.readMem(0x8c68));
        // 76 00A5
        gbc.setState(0x6d7a, 0xe9d8, 0xc4b0, 0xb511, 0xd39d, 0x38db, 0x0, 0x0);
        gbc.writeMem(0x6d7a, { 0x76 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0xe9d8, gbc.sp());
        EXPECT(0x6d7b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 76 00A6
        gbc.setState(0x81fe, 0xff78, 0xbd50, 0x186f, 0x92d8, 0xf966, 0x0, 0x0);
        gbc.writeMem(0x81fe, { 0x76 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0xff78, gbc.sp());
        EXPECT(0x81ff, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x76, gbc.readMem(0x81fe));
        // 76 00A7
        gbc.setState(0x77b3, 0x3a24, 0x8c60, 0x9258, 0xcf31, 0xde3f, 0x0, 0x0);
        gbc.writeMem(0x77b3, { 0x76 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0x3a24, gbc.sp());
        EXPECT(0x77b4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 76 00A8
        gbc.setState(0xa835, 0x5e41, 0xdf60, 0xfabb, 0x70f9, 0x7dbd, 0x0, 0x0);
        gbc.writeMem(0xa835, { 0x76 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x5e41, gbc.sp());
        EXPECT(0xa836, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x76, gbc.readMem(0xa835));
        // 76 00A9
        gbc.setState(0xa425, 0x8e23, 0x24b0, 0x7a09, 0x66cc, 0x3635, 0x0, 0x0);
        gbc.writeMem(0xa425, { 0x76 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x8e23, gbc.sp());
        EXPECT(0xa426, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x76, gbc.readMem(0xa425));
        // 76 00AA
        gbc.setState(0xba7, 0x645f, 0xe8e0, 0x6b7, 0x5fd4, 0xd5aa, 0x1, 0x0);
        gbc.writeMem(0xba7, { 0x76 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x645f, gbc.sp());
        EXPECT(0xba8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 76 00AB
        gbc.setState(0x6b97, 0x336, 0xeff0, 0x4b10, 0x41a, 0xfa3f, 0x0, 0x1);
        gbc.writeMem(0x6b97, { 0x76 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0x336, gbc.sp());
        EXPECT(0x6b98, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 76 00AC
        gbc.setState(0x80c8, 0x395f, 0xcef0, 0xdcc6, 0xacfc, 0x7d29, 0x1, 0x0);
        gbc.writeMem(0x80c8, { 0x76 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x395f, gbc.sp());
        EXPECT(0x80c9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x76, gbc.readMem(0x80c8));
        // 76 00AD
        gbc.setState(0x1139, 0x7ce8, 0x8c90, 0x17d6, 0xdde2, 0xa351, 0x1, 0x1);
        gbc.writeMem(0x1139, { 0x76 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x7ce8, gbc.sp());
        EXPECT(0x113a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 76 00AE
        gbc.setState(0xbd9e, 0x8535, 0xa2e0, 0x7847, 0x6b66, 0x6568, 0x0, 0x1);
        gbc.writeMem(0xbd9e, { 0x76 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x8535, gbc.sp());
        EXPECT(0xbd9f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x76, gbc.readMem(0xbd9e));
        // 76 00AF
        gbc.setState(0x5513, 0x16ca, 0xdce0, 0x3496, 0xbc2d, 0x6d80, 0x0, 0x1);
        gbc.writeMem(0x5513, { 0x76 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x16ca, gbc.sp());
        EXPECT(0x5514, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 76 00B0
        gbc.setState(0xcf88, 0x5cad, 0xaf80, 0x3f86, 0xc4ee, 0x89e1, 0x1, 0x0);
        gbc.writeMem(0xcf88, { 0x76 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0x5cad, gbc.sp());
        EXPECT(0xcf89, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x76, gbc.readMem(0xcf88));
        // 76 00B1
        gbc.setState(0xbec, 0x2e4c, 0x6f50, 0x43b2, 0xc53f, 0x7077, 0x1, 0x1);
        gbc.writeMem(0xbec, { 0x76 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x2e4c, gbc.sp());
        EXPECT(0xbed, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 76 00B2
        gbc.setState(0xd582, 0xf39f, 0x1030, 0x2b59, 0x2661, 0x5315, 0x1, 0x1);
        gbc.writeMem(0xd582, { 0x76 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0xf39f, gbc.sp());
        EXPECT(0xd583, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x76, gbc.readMem(0xd582));
        // 76 00B3
        gbc.setState(0xbe64, 0xd57e, 0x6a40, 0x88c2, 0x782b, 0xa8ab, 0x0, 0x0);
        gbc.writeMem(0xbe64, { 0x76 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0xd57e, gbc.sp());
        EXPECT(0xbe65, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x76, gbc.readMem(0xbe64));
        // 76 00B4
        gbc.setState(0x772b, 0xbffb, 0xce90, 0x7726, 0xc425, 0x4362, 0x1, 0x0);
        gbc.writeMem(0x772b, { 0x76 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0xbffb, gbc.sp());
        EXPECT(0x772c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 76 00B5
        gbc.setState(0x5f36, 0x6fe5, 0x9490, 0x155f, 0x86f4, 0xc950, 0x0, 0x1);
        gbc.writeMem(0x5f36, { 0x76 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x6fe5, gbc.sp());
        EXPECT(0x5f37, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 76 00B6
        gbc.setState(0xbe51, 0x36f2, 0xbd10, 0x936d, 0x9de5, 0x6c66, 0x1, 0x0);
        gbc.writeMem(0xbe51, { 0x76 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x36f2, gbc.sp());
        EXPECT(0xbe52, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x76, gbc.readMem(0xbe51));
        // 76 00B7
        gbc.setState(0x12df, 0x9e84, 0x8610, 0x4eda, 0x2f52, 0x2664, 0x0, 0x1);
        gbc.writeMem(0x12df, { 0x76 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x9e84, gbc.sp());
        EXPECT(0x12e0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 76 00B8
        gbc.setState(0x63fe, 0x5bcf, 0xba40, 0x349d, 0xd32, 0x2fec, 0x0, 0x1);
        gbc.writeMem(0x63fe, { 0x76 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x5bcf, gbc.sp());
        EXPECT(0x63ff, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 76 00B9
        gbc.setState(0x7e8, 0xbed4, 0xdbb0, 0xfd5e, 0x94ef, 0xa797, 0x0, 0x1);
        gbc.writeMem(0x7e8, { 0x76 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0xbed4, gbc.sp());
        EXPECT(0x7e9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 76 00BA
        gbc.setState(0x8313, 0xa0bf, 0x96e0, 0x6763, 0xbf75, 0xec28, 0x1, 0x0);
        gbc.writeMem(0x8313, { 0x76 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0xa0bf, gbc.sp());
        EXPECT(0x8314, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x76, gbc.readMem(0x8313));
        // 76 00BB
        gbc.setState(0xc766, 0x7100, 0xf00, 0xb077, 0x5e19, 0xd0dc, 0x1, 0x1);
        gbc.writeMem(0xc766, { 0x76 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x7100, gbc.sp());
        EXPECT(0xc767, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x76, gbc.readMem(0xc766));
        // 76 00BC
        gbc.setState(0xc9d5, 0x6885, 0x8ca0, 0xef70, 0x30f5, 0x54bc, 0x0, 0x1);
        gbc.writeMem(0xc9d5, { 0x76 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x6885, gbc.sp());
        EXPECT(0xc9d6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x76, gbc.readMem(0xc9d5));
        // 76 00BD
        gbc.setState(0x3eb7, 0x96b1, 0x4840, 0xb5d1, 0xa59f, 0xdb36, 0x0, 0x1);
        gbc.writeMem(0x3eb7, { 0x76 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x96b1, gbc.sp());
        EXPECT(0x3eb8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 76 00BE
        gbc.setState(0x92de, 0xdf95, 0xc1c0, 0xbf2c, 0x2f21, 0x7e7c, 0x1, 0x1);
        gbc.writeMem(0x92de, { 0x76 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0xdf95, gbc.sp());
        EXPECT(0x92df, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x76, gbc.readMem(0x92de));
        // 76 00BF
        gbc.setState(0x63c5, 0xb3c1, 0x63d0, 0x5a6a, 0x989c, 0x741c, 0x1, 0x0);
        gbc.writeMem(0x63c5, { 0x76 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0xb3c1, gbc.sp());
        EXPECT(0x63c6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 76 00C0
        gbc.setState(0xc860, 0x4b04, 0xc080, 0x1b7e, 0x56de, 0x2704, 0x1, 0x0);
        gbc.writeMem(0xc860, { 0x76 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x4b04, gbc.sp());
        EXPECT(0xc861, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x76, gbc.readMem(0xc860));
        // 76 00C1
        gbc.setState(0x37fa, 0xc7ac, 0x9ea0, 0x4d, 0xf082, 0x6d41, 0x0, 0x0);
        gbc.writeMem(0x37fa, { 0x76 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0xc7ac, gbc.sp());
        EXPECT(0x37fb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 76 00C2
        gbc.setState(0xe472, 0x9c95, 0x5260, 0x4043, 0x1eef, 0xfb07, 0x1, 0x1);
        gbc.writeMem(0xe472, { 0x76 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x9c95, gbc.sp());
        EXPECT(0xe473, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x76, gbc.readMem(0xe472));
        // 76 00C3
        gbc.setState(0x56cb, 0x33d6, 0x4380, 0x9a59, 0xc706, 0x904a, 0x0, 0x1);
        gbc.writeMem(0x56cb, { 0x76 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x33d6, gbc.sp());
        EXPECT(0x56cc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 76 00C4
        gbc.setState(0x3402, 0x1a85, 0xf490, 0xf75b, 0xf7a9, 0x2cfc, 0x0, 0x0);
        gbc.writeMem(0x3402, { 0x76 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x1a85, gbc.sp());
        EXPECT(0x3403, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 76 00C5
        gbc.setState(0x686d, 0x2fc9, 0x7580, 0xd60c, 0x1ea5, 0x1c60, 0x1, 0x0);
        gbc.writeMem(0x686d, { 0x76 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x2fc9, gbc.sp());
        EXPECT(0x686e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 76 00C6
        gbc.setState(0x1eef, 0x7bd2, 0xb1b0, 0xef51, 0x641b, 0x2da7, 0x0, 0x1);
        gbc.writeMem(0x1eef, { 0x76 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x7bd2, gbc.sp());
        EXPECT(0x1ef0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 76 00C7
        gbc.setState(0xe114, 0x6d74, 0x5690, 0x7d65, 0xaccc, 0x3fe0, 0x1, 0x1);
        gbc.writeMem(0xe114, { 0x76 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x6d74, gbc.sp());
        EXPECT(0xe115, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x76, gbc.readMem(0xe114));
        // 76 00C8
        gbc.setState(0x75c3, 0x9b15, 0x58e0, 0xa327, 0xee99, 0x2fb0, 0x1, 0x0);
        gbc.writeMem(0x75c3, { 0x76 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x9b15, gbc.sp());
        EXPECT(0x75c4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 76 00C9
        gbc.setState(0x5b06, 0xe4a3, 0xe3c0, 0xbd32, 0x3258, 0x835d, 0x1, 0x1);
        gbc.writeMem(0x5b06, { 0x76 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0xe4a3, gbc.sp());
        EXPECT(0x5b07, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 76 00CA
        gbc.setState(0x7b59, 0xebd5, 0xc190, 0x9431, 0x5544, 0xb425, 0x1, 0x0);
        gbc.writeMem(0x7b59, { 0x76 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0xebd5, gbc.sp());
        EXPECT(0x7b5a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 76 00CB
        gbc.setState(0xe675, 0xe209, 0x7d20, 0xaf03, 0x3dff, 0x7d7, 0x0, 0x0);
        gbc.writeMem(0xe675, { 0x76 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0xe209, gbc.sp());
        EXPECT(0xe676, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x76, gbc.readMem(0xe675));
        // 76 00CC
        gbc.setState(0x3d42, 0xa023, 0x1fa0, 0xe1dc, 0xd0e7, 0x559c, 0x0, 0x0);
        gbc.writeMem(0x3d42, { 0x76 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0xa023, gbc.sp());
        EXPECT(0x3d43, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 76 00CD
        gbc.setState(0x5c22, 0x236d, 0xe450, 0x9e50, 0x8d04, 0xf75f, 0x0, 0x0);
        gbc.writeMem(0x5c22, { 0x76 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x236d, gbc.sp());
        EXPECT(0x5c23, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 76 00CF
        gbc.setState(0x2e68, 0xcf89, 0x9b40, 0x9827, 0xff49, 0xff23, 0x1, 0x0);
        gbc.writeMem(0x2e68, { 0x76 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0xcf89, gbc.sp());
        EXPECT(0x2e69, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 76 00D0
        gbc.setState(0xe336, 0xbe66, 0xbd30, 0xd5ab, 0x578a, 0x3ae8, 0x0, 0x0);
        gbc.writeMem(0xe336, { 0x76 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0xbe66, gbc.sp());
        EXPECT(0xe337, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x76, gbc.readMem(0xe336));
        // 76 00D1
        gbc.setState(0x89f9, 0xe83b, 0x7ba0, 0x8def, 0x426f, 0x35de, 0x0, 0x0);
        gbc.writeMem(0x89f9, { 0x76 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0xe83b, gbc.sp());
        EXPECT(0x89fa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x76, gbc.readMem(0x89f9));
        // 76 00D2
        gbc.setState(0xdc3d, 0x973e, 0x1290, 0x7527, 0xeeef, 0x193b, 0x1, 0x0);
        gbc.writeMem(0xdc3d, { 0x76 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x973e, gbc.sp());
        EXPECT(0xdc3e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x76, gbc.readMem(0xdc3d));
        // 76 00D3
        gbc.setState(0x7899, 0xb42, 0xd530, 0xabb0, 0xd853, 0xb6ac, 0x1, 0x1);
        gbc.writeMem(0x7899, { 0x76 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0xb42, gbc.sp());
        EXPECT(0x789a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 76 00D4
        gbc.setState(0x2e77, 0x184a, 0x81b0, 0x3698, 0x7a34, 0x8c9d, 0x1, 0x0);
        gbc.writeMem(0x2e77, { 0x76 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x184a, gbc.sp());
        EXPECT(0x2e78, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 76 00D5
        gbc.setState(0x7599, 0xdfff, 0xb540, 0xb7bb, 0x163e, 0xc8f0, 0x1, 0x1);
        gbc.writeMem(0x7599, { 0x76 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0xdfff, gbc.sp());
        EXPECT(0x759a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 76 00D6
        gbc.setState(0x2222, 0x866c, 0xc2f0, 0x6b13, 0x8e41, 0x86f1, 0x1, 0x0);
        gbc.writeMem(0x2222, { 0x76 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x866c, gbc.sp());
        EXPECT(0x2223, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 76 00D7
        gbc.setState(0xe403, 0x6d54, 0x55d0, 0xb695, 0x8803, 0x4b01, 0x0, 0x0);
        gbc.writeMem(0xe403, { 0x76 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x6d54, gbc.sp());
        EXPECT(0xe404, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x76, gbc.readMem(0xe403));
        // 76 00D8
        gbc.setState(0xc452, 0x5b14, 0x88b0, 0x50a4, 0xd5cd, 0x74aa, 0x1, 0x1);
        gbc.writeMem(0xc452, { 0x76 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x5b14, gbc.sp());
        EXPECT(0xc453, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x76, gbc.readMem(0xc452));
        // 76 00D9
        gbc.setState(0x2e21, 0xeeb6, 0x8340, 0x2a03, 0xf5e1, 0xac59, 0x0, 0x0);
        gbc.writeMem(0x2e21, { 0x76 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0xeeb6, gbc.sp());
        EXPECT(0x2e22, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 76 00DA
        gbc.setState(0x758e, 0x4009, 0xb850, 0x6e26, 0xe50d, 0x766a, 0x1, 0x0);
        gbc.writeMem(0x758e, { 0x76 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x4009, gbc.sp());
        EXPECT(0x758f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 76 00DB
        gbc.setState(0x7143, 0x1407, 0xa9d0, 0x41f5, 0xd1d, 0x9007, 0x1, 0x0);
        gbc.writeMem(0x7143, { 0x76 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x1407, gbc.sp());
        EXPECT(0x7144, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 76 00DC
        gbc.setState(0xa375, 0xbaeb, 0x5340, 0xc418, 0x529a, 0x7eef, 0x1, 0x1);
        gbc.writeMem(0xa375, { 0x76 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0xbaeb, gbc.sp());
        EXPECT(0xa376, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x76, gbc.readMem(0xa375));
        // 76 00DD
        gbc.setState(0x7bd8, 0x563d, 0xb7d0, 0xada9, 0x54c4, 0xc016, 0x0, 0x1);
        gbc.writeMem(0x7bd8, { 0x76 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x563d, gbc.sp());
        EXPECT(0x7bd9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 76 00DE
        gbc.setState(0x2cda, 0xa032, 0x6530, 0x920a, 0x89bb, 0xb07d, 0x1, 0x0);
        gbc.writeMem(0x2cda, { 0x76 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0xa032, gbc.sp());
        EXPECT(0x2cdb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 76 00DF
        gbc.setState(0xe335, 0xb379, 0x5aa0, 0xae1a, 0x98bc, 0x590, 0x1, 0x0);
        gbc.writeMem(0xe335, { 0x76 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0xb379, gbc.sp());
        EXPECT(0xe336, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x76, gbc.readMem(0xe335));
        // 76 00E0
        gbc.setState(0x5943, 0x8cfd, 0xdc30, 0xd782, 0x5bb2, 0x7756, 0x0, 0x1);
        gbc.writeMem(0x5943, { 0x76 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0x8cfd, gbc.sp());
        EXPECT(0x5944, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 76 00E1
        gbc.setState(0x51ae, 0x8fee, 0x2c90, 0x9888, 0xd2c4, 0xa610, 0x1, 0x0);
        gbc.writeMem(0x51ae, { 0x76 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x8fee, gbc.sp());
        EXPECT(0x51af, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 76 00E2
        gbc.setState(0x761, 0xead0, 0xb8d0, 0xcd96, 0x3c9, 0x40db, 0x0, 0x1);
        gbc.writeMem(0x761, { 0x76 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0xead0, gbc.sp());
        EXPECT(0x762, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 76 00E3
        gbc.setState(0x86cd, 0x7a0c, 0xebe0, 0xc6e8, 0xfd38, 0x7c22, 0x0, 0x0);
        gbc.writeMem(0x86cd, { 0x76 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x7a0c, gbc.sp());
        EXPECT(0x86ce, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x76, gbc.readMem(0x86cd));
        // 76 00E4
        gbc.setState(0x73d2, 0xc58e, 0x85e0, 0x7bc3, 0x9d91, 0x48b5, 0x0, 0x0);
        gbc.writeMem(0x73d2, { 0x76 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0xc58e, gbc.sp());
        EXPECT(0x73d3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 76 00E5
        gbc.setState(0x1f1f, 0xdca2, 0xe010, 0xe074, 0x4c2e, 0x2e81, 0x1, 0x1);
        gbc.writeMem(0x1f1f, { 0x76 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0xdca2, gbc.sp());
        EXPECT(0x1f20, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 76 00E6
        gbc.setState(0x10b4, 0x86d5, 0x9b50, 0x208a, 0x778c, 0xe979, 0x1, 0x0);
        gbc.writeMem(0x10b4, { 0x76 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x86d5, gbc.sp());
        EXPECT(0x10b5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 76 00E7
        gbc.setState(0x117d, 0x2e7e, 0xbc80, 0x867, 0x8622, 0x8c18, 0x1, 0x1);
        gbc.writeMem(0x117d, { 0x76 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x2e7e, gbc.sp());
        EXPECT(0x117e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 76 00E8
        gbc.setState(0x9a45, 0xe720, 0x4b20, 0x7300, 0x971b, 0xe8cc, 0x1, 0x0);
        gbc.writeMem(0x9a45, { 0x76 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0xe720, gbc.sp());
        EXPECT(0x9a46, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x76, gbc.readMem(0x9a45));
        // 76 00E9
        gbc.setState(0x5b4c, 0x31ea, 0x51a0, 0x1f5c, 0x8fb5, 0xc808, 0x0, 0x0);
        gbc.writeMem(0x5b4c, { 0x76 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x31ea, gbc.sp());
        EXPECT(0x5b4d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 76 00EB
        gbc.setState(0x9d8d, 0x42b1, 0x3a40, 0x24fd, 0x1947, 0xcb5e, 0x1, 0x0);
        gbc.writeMem(0x9d8d, { 0x76 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x42b1, gbc.sp());
        EXPECT(0x9d8e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x76, gbc.readMem(0x9d8d));
        // 76 00ED
        gbc.setState(0xd498, 0xf9f6, 0x4600, 0x34a8, 0x9255, 0x3a8a, 0x1, 0x1);
        gbc.writeMem(0xd498, { 0x76 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0xf9f6, gbc.sp());
        EXPECT(0xd499, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x76, gbc.readMem(0xd498));
        // 76 00EE
        gbc.setState(0xcbb9, 0x6266, 0xfd80, 0x982e, 0x1809, 0x366f, 0x0, 0x0);
        gbc.writeMem(0xcbb9, { 0x76 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x6266, gbc.sp());
        EXPECT(0xcbba, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x76, gbc.readMem(0xcbb9));
        // 76 00EF
        gbc.setState(0xb607, 0x25d5, 0xc3d0, 0x55ef, 0x19c8, 0x1898, 0x0, 0x0);
        gbc.writeMem(0xb607, { 0x76 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x25d5, gbc.sp());
        EXPECT(0xb608, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x76, gbc.readMem(0xb607));
        // 76 00F0
        gbc.setState(0x29e4, 0xeadc, 0x4db0, 0x55bd, 0xb0bb, 0x693b, 0x0, 0x0);
        gbc.writeMem(0x29e4, { 0x76 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0xeadc, gbc.sp());
        EXPECT(0x29e5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 76 00F1
        gbc.setState(0xec3e, 0x9526, 0x2200, 0x3170, 0x7c16, 0x8526, 0x0, 0x1);
        gbc.writeMem(0xec3e, { 0x76 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x9526, gbc.sp());
        EXPECT(0xec3f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x76, gbc.readMem(0xec3e));
        // 76 00F2
        gbc.setState(0xbae2, 0x6535, 0x28a0, 0xb913, 0xa46a, 0x1313, 0x1, 0x1);
        gbc.writeMem(0xbae2, { 0x76 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x6535, gbc.sp());
        EXPECT(0xbae3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x76, gbc.readMem(0xbae2));
        // 76 00F3
        gbc.setState(0xdfb8, 0x158e, 0xb5f0, 0x1ed1, 0x3f1c, 0x980f, 0x0, 0x1);
        gbc.writeMem(0xdfb8, { 0x76 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x158e, gbc.sp());
        EXPECT(0xdfb9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x76, gbc.readMem(0xdfb8));
        // 76 00F4
        gbc.setState(0x7ad7, 0xc502, 0x18f0, 0x7889, 0x3d69, 0xac09, 0x1, 0x1);
        gbc.writeMem(0x7ad7, { 0x76 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0xc502, gbc.sp());
        EXPECT(0x7ad8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 76 00F5
        gbc.setState(0xdc31, 0xc909, 0x55c0, 0xee88, 0xb4cb, 0xb4ac, 0x0, 0x1);
        gbc.writeMem(0xdc31, { 0x76 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0xc909, gbc.sp());
        EXPECT(0xdc32, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x76, gbc.readMem(0xdc31));
        // 76 00F6
        gbc.setState(0x5d4f, 0xcfdc, 0xcf30, 0x380, 0xa28d, 0xe86e, 0x0, 0x1);
        gbc.writeMem(0x5d4f, { 0x76 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0xcfdc, gbc.sp());
        EXPECT(0x5d50, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 76 00F7
        gbc.setState(0xdb02, 0xaf9d, 0x77c0, 0x7ee8, 0xe7a8, 0xdbb6, 0x0, 0x1);
        gbc.writeMem(0xdb02, { 0x76 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0xaf9d, gbc.sp());
        EXPECT(0xdb03, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x76, gbc.readMem(0xdb02));
        // 76 00F8
        gbc.setState(0xcf31, 0xa2d9, 0x7090, 0x851, 0x4b6e, 0x2f58, 0x1, 0x1);
        gbc.writeMem(0xcf31, { 0x76 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0xa2d9, gbc.sp());
        EXPECT(0xcf32, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x76, gbc.readMem(0xcf31));
        // 76 00F9
        gbc.setState(0x735a, 0xcb1e, 0x55f0, 0xa966, 0x3872, 0x7a45, 0x1, 0x0);
        gbc.writeMem(0x735a, { 0x76 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0xcb1e, gbc.sp());
        EXPECT(0x735b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 76 00FA
        gbc.setState(0xc718, 0xdeab, 0xcad0, 0xcfb4, 0x15fa, 0xaece, 0x1, 0x0);
        gbc.writeMem(0xc718, { 0x76 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0xdeab, gbc.sp());
        EXPECT(0xc719, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x76, gbc.readMem(0xc718));
        // 76 00FB
        gbc.setState(0x66d2, 0xf575, 0x7680, 0xd4cc, 0x2b2e, 0xcb26, 0x1, 0x1);
        gbc.writeMem(0x66d2, { 0x76 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0xf575, gbc.sp());
        EXPECT(0x66d3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 76 00FC
        gbc.setState(0xa7b3, 0xe80c, 0x5380, 0xdfb6, 0x4577, 0xc6f8, 0x1, 0x0);
        gbc.writeMem(0xa7b3, { 0x76 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0xe80c, gbc.sp());
        EXPECT(0xa7b4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x76, gbc.readMem(0xa7b3));
        // 76 00FD
        gbc.setState(0x9962, 0xc4b5, 0xb530, 0x995c, 0xe362, 0x7c57, 0x1, 0x1);
        gbc.writeMem(0x9962, { 0x76 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0xc4b5, gbc.sp());
        EXPECT(0x9963, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x76, gbc.readMem(0x9962));
        // 76 00FE
        gbc.setState(0x2862, 0xc325, 0x7780, 0xae11, 0xc301, 0x9c4f, 0x0, 0x1);
        gbc.writeMem(0x2862, { 0x76 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0xc325, gbc.sp());
        EXPECT(0x2863, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 76 00FF
        gbc.setState(0xbcf7, 0xd7fd, 0x6c70, 0xae4d, 0xd662, 0x3614, 0x1, 0x0);
        gbc.writeMem(0xbcf7, { 0x76 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0xd7fd, gbc.sp());
        EXPECT(0xbcf8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x76, gbc.readMem(0xbcf7));
        // 76 0100
        gbc.setState(0x588b, 0xa9b1, 0x46b0, 0xc29c, 0x2352, 0x6ab6, 0x1, 0x0);
        gbc.writeMem(0x588b, { 0x76 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0xa9b1, gbc.sp());
        EXPECT(0x588c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 76 0101
        gbc.setState(0xeebd, 0xb906, 0xcf90, 0x3308, 0x5572, 0x599e, 0x1, 0x0);
        gbc.writeMem(0xeebd, { 0x76 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0xb906, gbc.sp());
        EXPECT(0xeebe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x76, gbc.readMem(0xeebd));
        // 76 0102
        gbc.setState(0x878a, 0x6e5f, 0xd880, 0x2e93, 0x417d, 0x2369, 0x1, 0x1);
        gbc.writeMem(0x878a, { 0x76 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0x6e5f, gbc.sp());
        EXPECT(0x878b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x76, gbc.readMem(0x878a));
        // 76 0103
        gbc.setState(0x2838, 0xc5cf, 0xa4b0, 0x8a16, 0x8be4, 0x7ee6, 0x1, 0x1);
        gbc.writeMem(0x2838, { 0x76 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0xc5cf, gbc.sp());
        EXPECT(0x2839, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 76 0104
        gbc.setState(0xd302, 0xe7d9, 0x5510, 0x1822, 0x3511, 0xa84c, 0x1, 0x1);
        gbc.writeMem(0xd302, { 0x76 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0xe7d9, gbc.sp());
        EXPECT(0xd303, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x76, gbc.readMem(0xd302));
        // 76 0105
        gbc.setState(0xad53, 0x64a1, 0xe990, 0xfe41, 0x73a6, 0xfe2, 0x1, 0x0);
        gbc.writeMem(0xad53, { 0x76 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x64a1, gbc.sp());
        EXPECT(0xad54, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x76, gbc.readMem(0xad53));
        // 76 0106
        gbc.setState(0xcfa2, 0xc347, 0x4210, 0x4ee6, 0xdd34, 0x3f7a, 0x1, 0x0);
        gbc.writeMem(0xcfa2, { 0x76 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0xc347, gbc.sp());
        EXPECT(0xcfa3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x76, gbc.readMem(0xcfa2));
        // 76 0107
        gbc.setState(0xda22, 0xdcd8, 0xdbf0, 0x5d1e, 0x1487, 0xf3ae, 0x1, 0x1);
        gbc.writeMem(0xda22, { 0x76 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0xdcd8, gbc.sp());
        EXPECT(0xda23, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x76, gbc.readMem(0xda22));
        // 76 0108
        gbc.setState(0xd897, 0x510e, 0xa850, 0xdf4f, 0x945c, 0x5d8e, 0x1, 0x1);
        gbc.writeMem(0xd897, { 0x76 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x510e, gbc.sp());
        EXPECT(0xd898, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x76, gbc.readMem(0xd897));
        // 76 0109
        gbc.setState(0xd7a0, 0xa616, 0x16e0, 0x609, 0x180b, 0xe9e6, 0x1, 0x1);
        gbc.writeMem(0xd7a0, { 0x76 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0xa616, gbc.sp());
        EXPECT(0xd7a1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x76, gbc.readMem(0xd7a0));
        // 76 010A
        gbc.setState(0xe620, 0x520e, 0x40, 0x60c8, 0xec57, 0x7447, 0x0, 0x0);
        gbc.writeMem(0xe620, { 0x76 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x520e, gbc.sp());
        EXPECT(0xe621, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x76, gbc.readMem(0xe620));
        // 76 010B
        gbc.setState(0x8175, 0x8c53, 0x6ed0, 0xd02e, 0xdf29, 0x7f97, 0x1, 0x1);
        gbc.writeMem(0x8175, { 0x76 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0x8c53, gbc.sp());
        EXPECT(0x8176, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x76, gbc.readMem(0x8175));
        // 76 010C
        gbc.setState(0x8e29, 0x6db2, 0x1170, 0x1d68, 0x9cd, 0x3682, 0x0, 0x1);
        gbc.writeMem(0x8e29, { 0x76 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x6db2, gbc.sp());
        EXPECT(0x8e2a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x76, gbc.readMem(0x8e29));
        // 76 010E
        gbc.setState(0xdab8, 0xf4ba, 0xc1b0, 0x2bcd, 0x388c, 0x432e, 0x1, 0x1);
        gbc.writeMem(0xdab8, { 0x76 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0xf4ba, gbc.sp());
        EXPECT(0xdab9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x76, gbc.readMem(0xdab8));
        // 76 010F
        gbc.setState(0xc225, 0x1a1a, 0x890, 0x54e9, 0x37da, 0xfdd0, 0x1, 0x0);
        gbc.writeMem(0xc225, { 0x76 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x1a1a, gbc.sp());
        EXPECT(0xc226, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x76, gbc.readMem(0xc225));
        // 76 0110
        gbc.setState(0x94d6, 0x2869, 0x8000, 0x8d1f, 0x33f0, 0x37af, 0x0, 0x1);
        gbc.writeMem(0x94d6, { 0x76 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x2869, gbc.sp());
        EXPECT(0x94d7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x76, gbc.readMem(0x94d6));
        // 76 0111
        gbc.setState(0x7147, 0x4bdc, 0x3e30, 0x50f6, 0x55b4, 0x45db, 0x0, 0x1);
        gbc.writeMem(0x7147, { 0x76 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x4bdc, gbc.sp());
        EXPECT(0x7148, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 76 0112
        gbc.setState(0x81d4, 0xa154, 0x1bc0, 0x8902, 0xef01, 0x5a66, 0x0, 0x1);
        gbc.writeMem(0x81d4, { 0x76 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0xa154, gbc.sp());
        EXPECT(0x81d5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x76, gbc.readMem(0x81d4));
        // 76 0113
        gbc.setState(0xbb63, 0xba5c, 0xa430, 0xa9ad, 0x7665, 0x3d8c, 0x1, 0x1);
        gbc.writeMem(0xbb63, { 0x76 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0xba5c, gbc.sp());
        EXPECT(0xbb64, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x76, gbc.readMem(0xbb63));
        // 76 0114
        gbc.setState(0x4130, 0xc7ad, 0xe370, 0x73fe, 0xd9ed, 0x2d90, 0x0, 0x1);
        gbc.writeMem(0x4130, { 0x76 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0xc7ad, gbc.sp());
        EXPECT(0x4131, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 76 0115
        gbc.setState(0x65f7, 0xa581, 0x3560, 0xd078, 0xdd8b, 0xcb4f, 0x1, 0x1);
        gbc.writeMem(0x65f7, { 0x76 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0xa581, gbc.sp());
        EXPECT(0x65f8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 76 0116
        gbc.setState(0x3ecf, 0xebb, 0x5b30, 0xb7e9, 0xcc6b, 0xae23, 0x1, 0x0);
        gbc.writeMem(0x3ecf, { 0x76 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0xebb, gbc.sp());
        EXPECT(0x3ed0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 76 0117
        gbc.setState(0xfa9, 0x94fd, 0x6f50, 0xd814, 0x5753, 0x281f, 0x1, 0x0);
        gbc.writeMem(0xfa9, { 0x76 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x94fd, gbc.sp());
        EXPECT(0xfaa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 76 0118
        gbc.setState(0xb1f8, 0xa840, 0xcda0, 0x21cd, 0x2513, 0xe5a8, 0x1, 0x0);
        gbc.writeMem(0xb1f8, { 0x76 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0xa840, gbc.sp());
        EXPECT(0xb1f9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x76, gbc.readMem(0xb1f8));
        // 76 0119
        gbc.setState(0xa640, 0x78b5, 0xde40, 0xbc88, 0xdee3, 0xd77d, 0x0, 0x0);
        gbc.writeMem(0xa640, { 0x76 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x78b5, gbc.sp());
        EXPECT(0xa641, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x76, gbc.readMem(0xa640));
        // 76 011A
        gbc.setState(0x65b7, 0xf6ef, 0x1630, 0xbe99, 0xbc81, 0x5257, 0x1, 0x1);
        gbc.writeMem(0x65b7, { 0x76 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0xf6ef, gbc.sp());
        EXPECT(0x65b8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 76 011B
        gbc.setState(0x8e43, 0xab17, 0x3d0, 0xf7c5, 0x43f8, 0xa88, 0x1, 0x1);
        gbc.writeMem(0x8e43, { 0x76 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0xab17, gbc.sp());
        EXPECT(0x8e44, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x76, gbc.readMem(0x8e43));
        // 76 011C
        gbc.setState(0x938c, 0x188e, 0xa7c0, 0xebff, 0x1d4f, 0xa535, 0x0, 0x1);
        gbc.writeMem(0x938c, { 0x76 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x188e, gbc.sp());
        EXPECT(0x938d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x76, gbc.readMem(0x938c));
        // 76 011D
        gbc.setState(0x406f, 0x91cd, 0x7920, 0xe00, 0xddc1, 0x8f86, 0x1, 0x1);
        gbc.writeMem(0x406f, { 0x76 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x91cd, gbc.sp());
        EXPECT(0x4070, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 76 011E
        gbc.setState(0xb1f0, 0x55c9, 0xe250, 0xceca, 0xa3d7, 0xdb23, 0x1, 0x0);
        gbc.writeMem(0xb1f0, { 0x76 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x55c9, gbc.sp());
        EXPECT(0xb1f1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x76, gbc.readMem(0xb1f0));
        // 76 011F
        gbc.setState(0x8870, 0x800, 0x80a0, 0x30cd, 0x8696, 0xa87e, 0x0, 0x1);
        gbc.writeMem(0x8870, { 0x76 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0x800, gbc.sp());
        EXPECT(0x8871, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x76, gbc.readMem(0x8870));
        // 76 0121
        gbc.setState(0xb605, 0x1664, 0xd530, 0x5410, 0xab5a, 0xd115, 0x0, 0x0);
        gbc.writeMem(0xb605, { 0x76 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x1664, gbc.sp());
        EXPECT(0xb606, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x76, gbc.readMem(0xb605));
        // 76 0122
        gbc.setState(0x91c, 0x5ffe, 0xda00, 0xdd08, 0xa316, 0x713f, 0x1, 0x1);
        gbc.writeMem(0x91c, { 0x76 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0x5ffe, gbc.sp());
        EXPECT(0x91d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 76 0124
        gbc.setState(0xd6de, 0xfa8d, 0x4110, 0xb6ea, 0x637f, 0x979a, 0x1, 0x1);
        gbc.writeMem(0xd6de, { 0x76 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0xfa8d, gbc.sp());
        EXPECT(0xd6df, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x76, gbc.readMem(0xd6de));
        // 76 0125
        gbc.setState(0x3b72, 0x7a13, 0xc560, 0x9eb8, 0x3540, 0x837b, 0x0, 0x1);
        gbc.writeMem(0x3b72, { 0x76 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x7a13, gbc.sp());
        EXPECT(0x3b73, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 76 0126
        gbc.setState(0x4b93, 0x8c7d, 0xb650, 0x9158, 0x35e8, 0x2c9d, 0x0, 0x0);
        gbc.writeMem(0x4b93, { 0x76 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x8c7d, gbc.sp());
        EXPECT(0x4b94, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 76 0127
        gbc.setState(0xea8e, 0xdd72, 0xe130, 0x91a5, 0x9714, 0x5d0, 0x1, 0x1);
        gbc.writeMem(0xea8e, { 0x76 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0xdd72, gbc.sp());
        EXPECT(0xea8f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x76, gbc.readMem(0xea8e));
        // 76 0129
        gbc.setState(0x7010, 0x92be, 0x7af0, 0xa625, 0x13f0, 0x1d92, 0x1, 0x1);
        gbc.writeMem(0x7010, { 0x76 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x92be, gbc.sp());
        EXPECT(0x7011, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 76 012A
        gbc.setState(0x61eb, 0xab3f, 0xf3d0, 0x4590, 0x5dca, 0xb782, 0x1, 0x0);
        gbc.writeMem(0x61eb, { 0x76 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0xab3f, gbc.sp());
        EXPECT(0x61ec, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 76 012B
        gbc.setState(0x11f9, 0xd799, 0x1ca0, 0x25e, 0x9a4e, 0x393e, 0x1, 0x1);
        gbc.writeMem(0x11f9, { 0x76 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0xd799, gbc.sp());
        EXPECT(0x11fa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 76 012C
        gbc.setState(0x8fed, 0x80f5, 0x8a60, 0x1e18, 0x3124, 0x18cd, 0x1, 0x0);
        gbc.writeMem(0x8fed, { 0x76 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x80f5, gbc.sp());
        EXPECT(0x8fee, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x76, gbc.readMem(0x8fed));
        // 76 012D
        gbc.setState(0xebef, 0x766c, 0x2190, 0xfec7, 0x9b72, 0xf3, 0x1, 0x1);
        gbc.writeMem(0xebef, { 0x76 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x766c, gbc.sp());
        EXPECT(0xebf0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x76, gbc.readMem(0xebef));
        // 76 012E
        gbc.setState(0x2c1d, 0x3ce1, 0xb520, 0x5b97, 0x4587, 0x5d06, 0x1, 0x1);
        gbc.writeMem(0x2c1d, { 0x76 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x3ce1, gbc.sp());
        EXPECT(0x2c1e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 76 012F
        gbc.setState(0x2448, 0x757f, 0x34a0, 0x16d4, 0xd3c, 0x96f5, 0x0, 0x1);
        gbc.writeMem(0x2448, { 0x76 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x757f, gbc.sp());
        EXPECT(0x2449, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 76 0130
        gbc.setState(0xb69f, 0xbbaf, 0x24c0, 0x227c, 0xe461, 0x90af, 0x1, 0x0);
        gbc.writeMem(0xb69f, { 0x76 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0xbbaf, gbc.sp());
        EXPECT(0xb6a0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x76, gbc.readMem(0xb69f));
        // 76 0131
        gbc.setState(0x5fa0, 0x6cc, 0x1a20, 0x6230, 0x7f46, 0x93ab, 0x0, 0x0);
        gbc.writeMem(0x5fa0, { 0x76 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x6cc, gbc.sp());
        EXPECT(0x5fa1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 76 0132
        gbc.setState(0xebf8, 0x7b35, 0xba60, 0x2832, 0x5841, 0x8f88, 0x1, 0x0);
        gbc.writeMem(0xebf8, { 0x76 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x7b35, gbc.sp());
        EXPECT(0xebf9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x76, gbc.readMem(0xebf8));
        // 76 0133
        gbc.setState(0x1d6, 0x1ad2, 0x6720, 0x1a7e, 0xabdc, 0x6d42, 0x0, 0x0);
        gbc.writeMem(0x1d6, { 0x76 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x1ad2, gbc.sp());
        EXPECT(0x1d7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 76 0134
        gbc.setState(0x5672, 0x2fb2, 0x5210, 0x31c5, 0xa1e3, 0x4cd2, 0x0, 0x0);
        gbc.writeMem(0x5672, { 0x76 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x2fb2, gbc.sp());
        EXPECT(0x5673, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 76 0135
        gbc.setState(0x76a9, 0xee19, 0x1b50, 0x1d70, 0xb8b1, 0x49a2, 0x0, 0x0);
        gbc.writeMem(0x76a9, { 0x76 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0xee19, gbc.sp());
        EXPECT(0x76aa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 76 0136
        gbc.setState(0x7e8c, 0x577e, 0x1690, 0x2fe, 0xd823, 0xdfa5, 0x1, 0x0);
        gbc.writeMem(0x7e8c, { 0x76 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x577e, gbc.sp());
        EXPECT(0x7e8d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 76 0137
        gbc.setState(0xa522, 0x82f3, 0xfab0, 0x505b, 0xf11a, 0xa350, 0x0, 0x1);
        gbc.writeMem(0xa522, { 0x76 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x82f3, gbc.sp());
        EXPECT(0xa523, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x76, gbc.readMem(0xa522));
        // 76 0138
        gbc.setState(0x47fe, 0xf733, 0x2d60, 0x2b1, 0xe630, 0x9a09, 0x1, 0x0);
        gbc.writeMem(0x47fe, { 0x76 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0xf733, gbc.sp());
        EXPECT(0x47ff, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 76 0139
        gbc.setState(0xa29c, 0xe0cf, 0xb970, 0x7354, 0x3484, 0xfd61, 0x1, 0x1);
        gbc.writeMem(0xa29c, { 0x76 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0xe0cf, gbc.sp());
        EXPECT(0xa29d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x76, gbc.readMem(0xa29c));
        // 76 013A
        gbc.setState(0x552a, 0x631a, 0x4f40, 0xe45c, 0xd3e4, 0x44f9, 0x0, 0x1);
        gbc.writeMem(0x552a, { 0x76 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x631a, gbc.sp());
        EXPECT(0x552b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 76 013B
        gbc.setState(0x231a, 0x50ad, 0x6c0, 0x24c, 0x1c96, 0x27e1, 0x1, 0x1);
        gbc.writeMem(0x231a, { 0x76 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0x50ad, gbc.sp());
        EXPECT(0x231b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 76 013C
        gbc.setState(0xd905, 0x8665, 0xc980, 0x1cbc, 0x51d5, 0x131b, 0x1, 0x1);
        gbc.writeMem(0xd905, { 0x76 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x8665, gbc.sp());
        EXPECT(0xd906, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x76, gbc.readMem(0xd905));
        // 76 013D
        gbc.setState(0xb3a8, 0x2ff6, 0x6be0, 0xb72a, 0xf693, 0xd45d, 0x0, 0x1);
        gbc.writeMem(0xb3a8, { 0x76 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x2ff6, gbc.sp());
        EXPECT(0xb3a9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x76, gbc.readMem(0xb3a8));
        // 76 013E
        gbc.setState(0x92bc, 0xc0f8, 0x25c0, 0x89a5, 0x175a, 0x9328, 0x0, 0x1);
        gbc.writeMem(0x92bc, { 0x76 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0xc0f8, gbc.sp());
        EXPECT(0x92bd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x76, gbc.readMem(0x92bc));
        // 76 013F
        gbc.setState(0x95b8, 0xdb06, 0x5c00, 0x3dda, 0x98ee, 0xe117, 0x1, 0x0);
        gbc.writeMem(0x95b8, { 0x76 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0xdb06, gbc.sp());
        EXPECT(0x95b9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x76, gbc.readMem(0x95b8));
        // 76 0141
        gbc.setState(0xbf0, 0x7083, 0xbb60, 0x4d62, 0xef60, 0x501d, 0x0, 0x1);
        gbc.writeMem(0xbf0, { 0x76 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x7083, gbc.sp());
        EXPECT(0xbf1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 76 0142
        gbc.setState(0x5a9a, 0x1a09, 0x4a0, 0xd690, 0xc1a, 0xa687, 0x0, 0x1);
        gbc.writeMem(0x5a9a, { 0x76 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x1a09, gbc.sp());
        EXPECT(0x5a9b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 76 0143
        gbc.setState(0x19d6, 0xb7b0, 0xf630, 0x6385, 0xf5a2, 0xd843, 0x0, 0x1);
        gbc.writeMem(0x19d6, { 0x76 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0xb7b0, gbc.sp());
        EXPECT(0x19d7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 76 0144
        gbc.setState(0xaea2, 0xce2a, 0xa7c0, 0xa55f, 0x38b5, 0x1373, 0x1, 0x0);
        gbc.writeMem(0xaea2, { 0x76 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0xce2a, gbc.sp());
        EXPECT(0xaea3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x76, gbc.readMem(0xaea2));
        // 76 0145
        gbc.setState(0x5b7c, 0xb268, 0x77e0, 0xd31c, 0x9b9, 0x21bb, 0x0, 0x0);
        gbc.writeMem(0x5b7c, { 0x76 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0xb268, gbc.sp());
        EXPECT(0x5b7d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 76 0146
        gbc.setState(0xd661, 0x15f2, 0x1070, 0x5778, 0x457b, 0xad8d, 0x0, 0x1);
        gbc.writeMem(0xd661, { 0x76 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x15f2, gbc.sp());
        EXPECT(0xd662, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x76, gbc.readMem(0xd661));
        // 76 0147
        gbc.setState(0xa7d6, 0x8d0b, 0xb950, 0x35b4, 0xa425, 0x182c, 0x1, 0x1);
        gbc.writeMem(0xa7d6, { 0x76 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x8d0b, gbc.sp());
        EXPECT(0xa7d7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x76, gbc.readMem(0xa7d6));
        // 76 0148
        gbc.setState(0x582f, 0xf54d, 0x9850, 0x71a, 0xcdfd, 0xb3bc, 0x1, 0x1);
        gbc.writeMem(0x582f, { 0x76 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0xf54d, gbc.sp());
        EXPECT(0x5830, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 76 0149
        gbc.setState(0xbfb1, 0x3b63, 0x4a10, 0x9654, 0xb1a, 0xad5b, 0x1, 0x0);
        gbc.writeMem(0xbfb1, { 0x76 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x3b63, gbc.sp());
        EXPECT(0xbfb2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x76, gbc.readMem(0xbfb1));
        // 76 014A
        gbc.setState(0xeee, 0x5a2, 0x4210, 0x2685, 0x5253, 0xea7, 0x1, 0x1);
        gbc.writeMem(0xeee, { 0x76 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x5a2, gbc.sp());
        EXPECT(0xeef, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 76 014B
        gbc.setState(0x1d9a, 0x23a7, 0x54c0, 0x1ae1, 0x97a9, 0x3e10, 0x0, 0x0);
        gbc.writeMem(0x1d9a, { 0x76 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x23a7, gbc.sp());
        EXPECT(0x1d9b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 76 014C
        gbc.setState(0xb08c, 0x5a68, 0x7b90, 0x6b60, 0xfe0e, 0x3083, 0x1, 0x0);
        gbc.writeMem(0xb08c, { 0x76 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x5a68, gbc.sp());
        EXPECT(0xb08d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x76, gbc.readMem(0xb08c));
        // 76 014D
        gbc.setState(0xe460, 0x60c9, 0x7d10, 0xe539, 0xd624, 0xf6d5, 0x0, 0x1);
        gbc.writeMem(0xe460, { 0x76 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x60c9, gbc.sp());
        EXPECT(0xe461, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x76, gbc.readMem(0xe460));
        // 76 014E
        gbc.setState(0xdb88, 0x7088, 0x1b80, 0x1c57, 0x7918, 0x365f, 0x0, 0x1);
        gbc.writeMem(0xdb88, { 0x76 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x7088, gbc.sp());
        EXPECT(0xdb89, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x76, gbc.readMem(0xdb88));
        // 76 014F
        gbc.setState(0x8105, 0x2765, 0x1c50, 0xeb9a, 0xd231, 0xdd66, 0x0, 0x0);
        gbc.writeMem(0x8105, { 0x76 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x2765, gbc.sp());
        EXPECT(0x8106, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x76, gbc.readMem(0x8105));
        // 76 0151
        gbc.setState(0x2f00, 0x8f26, 0x9c50, 0xe48e, 0x7d26, 0x8ece, 0x0, 0x1);
        gbc.writeMem(0x2f00, { 0x76 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x8f26, gbc.sp());
        EXPECT(0x2f01, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 76 0152
        gbc.setState(0xcf8c, 0x9cfc, 0x6fa0, 0x9b6e, 0x6177, 0x1510, 0x1, 0x0);
        gbc.writeMem(0xcf8c, { 0x76 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x9cfc, gbc.sp());
        EXPECT(0xcf8d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x76, gbc.readMem(0xcf8c));
        // 76 0154
        gbc.setState(0x81c, 0x797e, 0x3600, 0x8016, 0x5623, 0xd494, 0x0, 0x0);
        gbc.writeMem(0x81c, { 0x76 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x797e, gbc.sp());
        EXPECT(0x81d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 76 0155
        gbc.setState(0x4070, 0x385c, 0x8940, 0xa4d8, 0x262f, 0xc1e3, 0x0, 0x1);
        gbc.writeMem(0x4070, { 0x76 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x385c, gbc.sp());
        EXPECT(0x4071, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 76 0156
        gbc.setState(0x5972, 0x9f18, 0xdf90, 0xf673, 0xe9d9, 0x5e6b, 0x1, 0x0);
        gbc.writeMem(0x5972, { 0x76 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x9f18, gbc.sp());
        EXPECT(0x5973, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 76 0157
        gbc.setState(0x1a71, 0xd98b, 0x30b0, 0x81e3, 0x7b01, 0xf107, 0x0, 0x0);
        gbc.writeMem(0x1a71, { 0x76 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0xd98b, gbc.sp());
        EXPECT(0x1a72, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 76 0158
        gbc.setState(0x9ead, 0x9ae4, 0x3fb0, 0xc7f4, 0xa3b, 0xc418, 0x0, 0x1);
        gbc.writeMem(0x9ead, { 0x76 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x9ae4, gbc.sp());
        EXPECT(0x9eae, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x76, gbc.readMem(0x9ead));
        // 76 0159
        gbc.setState(0x6d50, 0x7251, 0x79a0, 0x6a94, 0x57d9, 0x8564, 0x0, 0x0);
        gbc.writeMem(0x6d50, { 0x76 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x7251, gbc.sp());
        EXPECT(0x6d51, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 76 015A
        gbc.setState(0x8758, 0xa0bd, 0x1840, 0x1eba, 0xd216, 0x9cbb, 0x1, 0x1);
        gbc.writeMem(0x8758, { 0x76 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0xa0bd, gbc.sp());
        EXPECT(0x8759, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x76, gbc.readMem(0x8758));
        // 76 015B
        gbc.setState(0x4b0d, 0x364a, 0xec00, 0x4189, 0xd95f, 0xdc58, 0x0, 0x0);
        gbc.writeMem(0x4b0d, { 0x76 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x364a, gbc.sp());
        EXPECT(0x4b0e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 76 015C
        gbc.setState(0x4115, 0xb030, 0xbb00, 0xe3d8, 0xf35c, 0x8f8b, 0x0, 0x0);
        gbc.writeMem(0x4115, { 0x76 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0xb030, gbc.sp());
        EXPECT(0x4116, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 76 015D
        gbc.setState(0x7954, 0x6aee, 0x8560, 0xfed5, 0x3da9, 0xaa71, 0x1, 0x0);
        gbc.writeMem(0x7954, { 0x76 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x6aee, gbc.sp());
        EXPECT(0x7955, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 76 015F
        gbc.setState(0x387a, 0xf4b2, 0x99a0, 0xfcbb, 0xfc9e, 0x6ecf, 0x0, 0x1);
        gbc.writeMem(0x387a, { 0x76 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0xf4b2, gbc.sp());
        EXPECT(0x387b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 76 0160
        gbc.setState(0x7997, 0xe999, 0x6120, 0x7179, 0xc219, 0x5a52, 0x1, 0x0);
        gbc.writeMem(0x7997, { 0x76 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0xe999, gbc.sp());
        EXPECT(0x7998, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 76 0161
        gbc.setState(0x52b, 0xf6ab, 0xede0, 0xc431, 0xfc91, 0xd9be, 0x1, 0x1);
        gbc.writeMem(0x52b, { 0x76 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0xf6ab, gbc.sp());
        EXPECT(0x52c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 76 0162
        gbc.setState(0x175e, 0x6a6d, 0xdca0, 0x7d1, 0x9cc6, 0x2841, 0x0, 0x0);
        gbc.writeMem(0x175e, { 0x76 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x6a6d, gbc.sp());
        EXPECT(0x175f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 76 0163
        gbc.setState(0xe1cb, 0x782d, 0xd4f0, 0x914d, 0x9d36, 0xb3bd, 0x1, 0x1);
        gbc.writeMem(0xe1cb, { 0x76 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x782d, gbc.sp());
        EXPECT(0xe1cc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x76, gbc.readMem(0xe1cb));
        // 76 0164
        gbc.setState(0x5feb, 0x77ba, 0x89c0, 0x7c41, 0x8823, 0xbaf1, 0x1, 0x0);
        gbc.writeMem(0x5feb, { 0x76 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x77ba, gbc.sp());
        EXPECT(0x5fec, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 76 0165
        gbc.setState(0x73e, 0x719, 0x9060, 0x3a5a, 0xecd0, 0xed46, 0x1, 0x1);
        gbc.writeMem(0x73e, { 0x76 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x719, gbc.sp());
        EXPECT(0x73f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 76 0166
        gbc.setState(0xa815, 0xdb7, 0xc3a0, 0x47d1, 0xa3b9, 0x7361, 0x1, 0x0);
        gbc.writeMem(0xa815, { 0x76 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0xdb7, gbc.sp());
        EXPECT(0xa816, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x76, gbc.readMem(0xa815));
        // 76 0167
        gbc.setState(0x50d0, 0xbb85, 0x22a0, 0x56ea, 0x500b, 0x389e, 0x0, 0x0);
        gbc.writeMem(0x50d0, { 0x76 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0xbb85, gbc.sp());
        EXPECT(0x50d1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 76 0168
        gbc.setState(0x3cbb, 0x545, 0x7050, 0xa5ee, 0x4fa0, 0x38b9, 0x1, 0x1);
        gbc.writeMem(0x3cbb, { 0x76 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x545, gbc.sp());
        EXPECT(0x3cbc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 76 0169
        gbc.setState(0x96af, 0x1dfc, 0x3b10, 0xd07c, 0x46c3, 0xe570, 0x1, 0x1);
        gbc.writeMem(0x96af, { 0x76 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x1dfc, gbc.sp());
        EXPECT(0x96b0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x76, gbc.readMem(0x96af));
        // 76 016B
        gbc.setState(0xa3fe, 0x58ba, 0x2660, 0x2927, 0xf4c9, 0x6c4d, 0x0, 0x0);
        gbc.writeMem(0xa3fe, { 0x76 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x58ba, gbc.sp());
        EXPECT(0xa3ff, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x76, gbc.readMem(0xa3fe));
        // 76 016D
        gbc.setState(0x1d01, 0x263, 0x98c0, 0x5cff, 0x1b72, 0x9e94, 0x1, 0x1);
        gbc.writeMem(0x1d01, { 0x76 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x263, gbc.sp());
        EXPECT(0x1d02, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 76 016F
        gbc.setState(0xb694, 0x24f6, 0x9ca0, 0x4886, 0x96ab, 0x110, 0x0, 0x0);
        gbc.writeMem(0xb694, { 0x76 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x24f6, gbc.sp());
        EXPECT(0xb695, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x76, gbc.readMem(0xb694));
        // 76 0170
        gbc.setState(0x7c39, 0x229a, 0xf5f0, 0x2c1e, 0xd6e6, 0x7119, 0x0, 0x1);
        gbc.writeMem(0x7c39, { 0x76 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x229a, gbc.sp());
        EXPECT(0x7c3a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 76 0171
        gbc.setState(0xa387, 0x5caa, 0x7850, 0x46df, 0x46f2, 0x2c14, 0x1, 0x0);
        gbc.writeMem(0xa387, { 0x76 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x5caa, gbc.sp());
        EXPECT(0xa388, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x76, gbc.readMem(0xa387));
        // 76 0172
        gbc.setState(0x7a4a, 0x795c, 0x7600, 0x8f75, 0x44e1, 0x925a, 0x0, 0x0);
        gbc.writeMem(0x7a4a, { 0x76 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x795c, gbc.sp());
        EXPECT(0x7a4b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 76 0173
        gbc.setState(0xd6c2, 0xad86, 0x6870, 0xe9e2, 0x2455, 0xafd0, 0x0, 0x1);
        gbc.writeMem(0xd6c2, { 0x76 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0xad86, gbc.sp());
        EXPECT(0xd6c3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x76, gbc.readMem(0xd6c2));
        // 76 0174
        gbc.setState(0x3e05, 0x2142, 0x3fa0, 0xbef, 0x5cff, 0x4a93, 0x1, 0x0);
        gbc.writeMem(0x3e05, { 0x76 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0x2142, gbc.sp());
        EXPECT(0x3e06, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 76 0175
        gbc.setState(0xb094, 0x6afb, 0x5e60, 0xdccd, 0x7a56, 0x4c14, 0x1, 0x0);
        gbc.writeMem(0xb094, { 0x76 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x6afb, gbc.sp());
        EXPECT(0xb095, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x76, gbc.readMem(0xb094));
        // 76 0176
        gbc.setState(0xe387, 0x8076, 0xb4d0, 0x7752, 0x745, 0xd010, 0x0, 0x1);
        gbc.writeMem(0xe387, { 0x76 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x8076, gbc.sp());
        EXPECT(0xe388, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x76, gbc.readMem(0xe387));
        // 76 0177
        gbc.setState(0x535c, 0x7dda, 0x9b40, 0x6f93, 0x6dd3, 0xbbca, 0x1, 0x1);
        gbc.writeMem(0x535c, { 0x76 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x7dda, gbc.sp());
        EXPECT(0x535d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 76 0178
        gbc.setState(0x1432, 0x50e0, 0xc6f0, 0xcdc, 0x64eb, 0x89ef, 0x1, 0x0);
        gbc.writeMem(0x1432, { 0x76 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x50e0, gbc.sp());
        EXPECT(0x1433, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 76 0179
        gbc.setState(0x9fcb, 0x151, 0xeca0, 0x4f2b, 0x6341, 0xa3fc, 0x1, 0x1);
        gbc.writeMem(0x9fcb, { 0x76 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x151, gbc.sp());
        EXPECT(0x9fcc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x76, gbc.readMem(0x9fcb));
        // 76 017A
        gbc.setState(0x725c, 0xffa, 0x5300, 0xfa7e, 0x7fc8, 0xa9f, 0x1, 0x1);
        gbc.writeMem(0x725c, { 0x76 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0xffa, gbc.sp());
        EXPECT(0x725d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 76 017B
        gbc.setState(0x350f, 0x3fda, 0x9b00, 0x7a58, 0xc57f, 0xa249, 0x0, 0x1);
        gbc.writeMem(0x350f, { 0x76 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x3fda, gbc.sp());
        EXPECT(0x3510, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 76 017C
        gbc.setState(0x4102, 0x8792, 0x6500, 0xa87c, 0xfc18, 0xf839, 0x0, 0x1);
        gbc.writeMem(0x4102, { 0x76 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x8792, gbc.sp());
        EXPECT(0x4103, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 76 017D
        gbc.setState(0xb014, 0xebc5, 0xee20, 0xef0, 0x9c47, 0x4207, 0x0, 0x1);
        gbc.writeMem(0xb014, { 0x76 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0xebc5, gbc.sp());
        EXPECT(0xb015, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x76, gbc.readMem(0xb014));
        // 76 017E
        gbc.setState(0x815, 0x9afb, 0xea60, 0x913b, 0x766c, 0xcc94, 0x1, 0x0);
        gbc.writeMem(0x815, { 0x76 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x9afb, gbc.sp());
        EXPECT(0x816, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 76 017F
        gbc.setState(0x2db5, 0xfe14, 0xe8a0, 0x11a4, 0xfb08, 0x8de0, 0x1, 0x0);
        gbc.writeMem(0x2db5, { 0x76 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0xfe14, gbc.sp());
        EXPECT(0x2db6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 76 0180
        gbc.setState(0xad30, 0x6c53, 0x1cb0, 0xc041, 0x5456, 0x7218, 0x0, 0x1);
        gbc.writeMem(0xad30, { 0x76 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x6c53, gbc.sp());
        EXPECT(0xad31, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x76, gbc.readMem(0xad30));
        // 76 0181
        gbc.setState(0x642e, 0xfe7a, 0xef10, 0x7c7f, 0x3f1c, 0x9d5e, 0x0, 0x1);
        gbc.writeMem(0x642e, { 0x76 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0xfe7a, gbc.sp());
        EXPECT(0x642f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 76 0182
        gbc.setState(0x21c, 0xb2f3, 0x4e90, 0xf2b6, 0x190d, 0xcbf3, 0x1, 0x0);
        gbc.writeMem(0x21c, { 0x76 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0xb2f3, gbc.sp());
        EXPECT(0x21d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 76 0183
        gbc.setState(0x4c3, 0x4d5e, 0x69c0, 0x781, 0x572b, 0x4021, 0x0, 0x1);
        gbc.writeMem(0x4c3, { 0x76 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x4d5e, gbc.sp());
        EXPECT(0x4c4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 76 0184
        gbc.setState(0x7056, 0xc7f9, 0xbfc0, 0x48a9, 0x37e1, 0x4469, 0x0, 0x1);
        gbc.writeMem(0x7056, { 0x76 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0xc7f9, gbc.sp());
        EXPECT(0x7057, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 76 0185
        gbc.setState(0x9ba4, 0x9a6e, 0xdbc0, 0x2bd6, 0x91f9, 0x9516, 0x1, 0x1);
        gbc.writeMem(0x9ba4, { 0x76 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x9a6e, gbc.sp());
        EXPECT(0x9ba5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x76, gbc.readMem(0x9ba4));
        // 76 0186
        gbc.setState(0x94f7, 0x96c7, 0x2290, 0x1dbf, 0xaec7, 0xe0d4, 0x0, 0x0);
        gbc.writeMem(0x94f7, { 0x76 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x96c7, gbc.sp());
        EXPECT(0x94f8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x76, gbc.readMem(0x94f7));
        // 76 0187
        gbc.setState(0xc127, 0x2d2, 0xb8a0, 0x8a05, 0x3a3, 0x4744, 0x0, 0x1);
        gbc.writeMem(0xc127, { 0x76 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x2d2, gbc.sp());
        EXPECT(0xc128, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x76, gbc.readMem(0xc127));
        // 76 0188
        gbc.setState(0xa642, 0xec63, 0x2b00, 0x96e7, 0xa0a8, 0xab19, 0x0, 0x1);
        gbc.writeMem(0xa642, { 0x76 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0xec63, gbc.sp());
        EXPECT(0xa643, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x76, gbc.readMem(0xa642));
        // 76 0189
        gbc.setState(0x4aa6, 0x7a1b, 0xace0, 0xdfd5, 0xc018, 0xc569, 0x0, 0x0);
        gbc.writeMem(0x4aa6, { 0x76 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0x7a1b, gbc.sp());
        EXPECT(0x4aa7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 76 018A
        gbc.setState(0x187a, 0x2c50, 0x240, 0xdc44, 0x7ab4, 0x365a, 0x0, 0x1);
        gbc.writeMem(0x187a, { 0x76 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x2c50, gbc.sp());
        EXPECT(0x187b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 76 018B
        gbc.setState(0x64ed, 0x2b1c, 0x5200, 0xd02b, 0xd559, 0xca5f, 0x0, 0x1);
        gbc.writeMem(0x64ed, { 0x76 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x2b1c, gbc.sp());
        EXPECT(0x64ee, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 76 018C
        gbc.setState(0x5f23, 0x3243, 0x7f50, 0x9379, 0x775f, 0x8b17, 0x0, 0x1);
        gbc.writeMem(0x5f23, { 0x76 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x3243, gbc.sp());
        EXPECT(0x5f24, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 76 018D
        gbc.setState(0x31ea, 0xcade, 0xf880, 0xb900, 0xdf32, 0x20b7, 0x1, 0x0);
        gbc.writeMem(0x31ea, { 0x76 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0xcade, gbc.sp());
        EXPECT(0x31eb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 76 018E
        gbc.setState(0x6461, 0xb74b, 0x5740, 0x6d7d, 0xb4a7, 0x79dc, 0x0, 0x0);
        gbc.writeMem(0x6461, { 0x76 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0xb74b, gbc.sp());
        EXPECT(0x6462, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 76 018F
        gbc.setState(0x9444, 0x13f1, 0x6ba0, 0x5f0f, 0x87a8, 0xb618, 0x1, 0x0);
        gbc.writeMem(0x9444, { 0x76 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x13f1, gbc.sp());
        EXPECT(0x9445, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x76, gbc.readMem(0x9444));
        // 76 0190
        gbc.setState(0x6de1, 0x5012, 0x80d0, 0x1e13, 0x3f57, 0xe7f, 0x0, 0x1);
        gbc.writeMem(0x6de1, { 0x76 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x5012, gbc.sp());
        EXPECT(0x6de2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 76 0191
        gbc.setState(0x71cd, 0xe061, 0xaef0, 0xc400, 0x75eb, 0x7980, 0x0, 0x0);
        gbc.writeMem(0x71cd, { 0x76 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0xe061, gbc.sp());
        EXPECT(0x71ce, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 76 0192
        gbc.setState(0x8b8, 0x27ba, 0xa1c0, 0xb8c2, 0x9176, 0xd2b, 0x0, 0x0);
        gbc.writeMem(0x8b8, { 0x76 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x27ba, gbc.sp());
        EXPECT(0x8b9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 76 0193
        gbc.setState(0xa029, 0x658c, 0x8880, 0x5b8b, 0x273c, 0x45b9, 0x1, 0x0);
        gbc.writeMem(0xa029, { 0x76 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x658c, gbc.sp());
        EXPECT(0xa02a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x76, gbc.readMem(0xa029));
        // 76 0194
        gbc.setState(0xbb45, 0x1e60, 0xe160, 0x5e3b, 0x1572, 0x3196, 0x0, 0x0);
        gbc.writeMem(0xbb45, { 0x76 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x1e60, gbc.sp());
        EXPECT(0xbb46, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x76, gbc.readMem(0xbb45));
        // 76 0195
        gbc.setState(0x11cd, 0x6d2c, 0x2980, 0xf2f1, 0x42bf, 0x79e9, 0x1, 0x1);
        gbc.writeMem(0x11cd, { 0x76 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x6d2c, gbc.sp());
        EXPECT(0x11ce, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 76 0196
        gbc.setState(0xc0e1, 0x4f5b, 0x4540, 0x176, 0x5be9, 0x99c4, 0x0, 0x0);
        gbc.writeMem(0xc0e1, { 0x76 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x4f5b, gbc.sp());
        EXPECT(0xc0e2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x76, gbc.readMem(0xc0e1));
        // 76 0197
        gbc.setState(0xe1fd, 0xf10b, 0x5e50, 0xf506, 0x7ce2, 0x6165, 0x0, 0x0);
        gbc.writeMem(0xe1fd, { 0x76 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0xf10b, gbc.sp());
        EXPECT(0xe1fe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x76, gbc.readMem(0xe1fd));
        // 76 0198
        gbc.setState(0xa75a, 0x41f9, 0x3ce0, 0x8901, 0xe10c, 0x352a, 0x1, 0x0);
        gbc.writeMem(0xa75a, { 0x76 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x41f9, gbc.sp());
        EXPECT(0xa75b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x76, gbc.readMem(0xa75a));
        // 76 0199
        gbc.setState(0x816a, 0xc05d, 0xd810, 0x723c, 0x9a89, 0x7d46, 0x1, 0x1);
        gbc.writeMem(0x816a, { 0x76 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0xc05d, gbc.sp());
        EXPECT(0x816b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x76, gbc.readMem(0x816a));
        // 76 019A
        gbc.setState(0x7c13, 0x119f, 0x9230, 0xb840, 0xc18b, 0x6d51, 0x0, 0x0);
        gbc.writeMem(0x7c13, { 0x76 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x119f, gbc.sp());
        EXPECT(0x7c14, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 76 019B
        gbc.setState(0x1eb6, 0x2817, 0x5740, 0xc3bf, 0x1945, 0x51a0, 0x1, 0x1);
        gbc.writeMem(0x1eb6, { 0x76 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x2817, gbc.sp());
        EXPECT(0x1eb7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 76 019C
        gbc.setState(0x5200, 0x507d, 0xc0d0, 0xc3d, 0xe325, 0xde27, 0x1, 0x0);
        gbc.writeMem(0x5200, { 0x76 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x507d, gbc.sp());
        EXPECT(0x5201, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 76 019D
        gbc.setState(0x8053, 0xc53f, 0x7860, 0x3235, 0x2672, 0xe4a0, 0x0, 0x1);
        gbc.writeMem(0x8053, { 0x76 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0xc53f, gbc.sp());
        EXPECT(0x8054, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x76, gbc.readMem(0x8053));
        // 76 019E
        gbc.setState(0xb691, 0x7b02, 0xca90, 0x985d, 0xc29, 0x1216, 0x0, 0x1);
        gbc.writeMem(0xb691, { 0x76 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x7b02, gbc.sp());
        EXPECT(0xb692, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x76, gbc.readMem(0xb691));
        // 76 019F
        gbc.setState(0x6bc7, 0x85f7, 0xeb40, 0xff44, 0x4fe5, 0xcb5d, 0x1, 0x1);
        gbc.writeMem(0x6bc7, { 0x76 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x85f7, gbc.sp());
        EXPECT(0x6bc8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 76 01A0
        gbc.setState(0x9c0, 0x23f9, 0xe400, 0x24ba, 0xf340, 0x46b8, 0x1, 0x1);
        gbc.writeMem(0x9c0, { 0x76 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x23f9, gbc.sp());
        EXPECT(0x9c1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 76 01A1
        gbc.setState(0x9610, 0xc431, 0xde70, 0xb18c, 0x5db4, 0xd6a9, 0x1, 0x1);
        gbc.writeMem(0x9610, { 0x76 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0xc431, gbc.sp());
        EXPECT(0x9611, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x76, gbc.readMem(0x9610));
        // 76 01A2
        gbc.setState(0xae57, 0x443d, 0x7b40, 0xe94a, 0xb0ad, 0x355f, 0x0, 0x0);
        gbc.writeMem(0xae57, { 0x76 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x443d, gbc.sp());
        EXPECT(0xae58, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x76, gbc.readMem(0xae57));
        // 76 01A3
        gbc.setState(0x865, 0xcd32, 0x4c20, 0x8fa, 0xe2de, 0x24f0, 0x0, 0x0);
        gbc.writeMem(0x865, { 0x76 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0xcd32, gbc.sp());
        EXPECT(0x866, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 76 01A4
        gbc.setState(0xe105, 0x8e38, 0xd0e0, 0x736f, 0xa7f8, 0xfe5e, 0x0, 0x1);
        gbc.writeMem(0xe105, { 0x76 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x8e38, gbc.sp());
        EXPECT(0xe106, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x76, gbc.readMem(0xe105));
        // 76 01A5
        gbc.setState(0xb381, 0xb93f, 0x26e0, 0x6b71, 0xeead, 0xb3ad, 0x1, 0x0);
        gbc.writeMem(0xb381, { 0x76 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0xb93f, gbc.sp());
        EXPECT(0xb382, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x76, gbc.readMem(0xb381));
        // 76 01A6
        gbc.setState(0x6b5e, 0xeee6, 0x8d10, 0xf4ce, 0x8484, 0x35b1, 0x1, 0x1);
        gbc.writeMem(0x6b5e, { 0x76 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0xeee6, gbc.sp());
        EXPECT(0x6b5f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 76 01A7
        gbc.setState(0x4609, 0x77e, 0x2390, 0x99fd, 0x8cb9, 0x6004, 0x1, 0x1);
        gbc.writeMem(0x4609, { 0x76 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x77e, gbc.sp());
        EXPECT(0x460a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 76 01A8
        gbc.setState(0x6c70, 0xa2fe, 0x43d0, 0x8f43, 0xe90c, 0xb23, 0x1, 0x1);
        gbc.writeMem(0x6c70, { 0x76 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0xa2fe, gbc.sp());
        EXPECT(0x6c71, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 76 01A9
        gbc.setState(0x77e8, 0x61e1, 0x76d0, 0xd42, 0x6c27, 0x28f8, 0x0, 0x1);
        gbc.writeMem(0x77e8, { 0x76 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x61e1, gbc.sp());
        EXPECT(0x77e9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 76 01AA
        gbc.setState(0xa2e6, 0x1c9c, 0xe110, 0x1b4e, 0x6d19, 0xb13c, 0x0, 0x0);
        gbc.writeMem(0xa2e6, { 0x76 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x1c9c, gbc.sp());
        EXPECT(0xa2e7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x76, gbc.readMem(0xa2e6));
        // 76 01AB
        gbc.setState(0xa7a1, 0x2e9a, 0x5720, 0xabe6, 0xb6ee, 0x2543, 0x0, 0x0);
        gbc.writeMem(0xa7a1, { 0x76 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x2e9a, gbc.sp());
        EXPECT(0xa7a2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x76, gbc.readMem(0xa7a1));
        // 76 01AC
        gbc.setState(0xd5d3, 0xcfb, 0x9eb0, 0xdddc, 0x65cc, 0xd5ac, 0x0, 0x1);
        gbc.writeMem(0xd5d3, { 0x76 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0xcfb, gbc.sp());
        EXPECT(0xd5d4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x76, gbc.readMem(0xd5d3));
        // 76 01AD
        gbc.setState(0xbc88, 0xfa54, 0x9680, 0xc99f, 0xefb, 0x2eb7, 0x1, 0x0);
        gbc.writeMem(0xbc88, { 0x76 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0xfa54, gbc.sp());
        EXPECT(0xbc89, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x76, gbc.readMem(0xbc88));
        // 76 01AF
        gbc.setState(0x3d84, 0x43b9, 0xe7b0, 0xf8d1, 0x9dc2, 0x1956, 0x0, 0x1);
        gbc.writeMem(0x3d84, { 0x76 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0x43b9, gbc.sp());
        EXPECT(0x3d85, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 76 01B0
        gbc.setState(0x2141, 0x1ca0, 0x7ad0, 0x6367, 0x32df, 0x4e45, 0x1, 0x0);
        gbc.writeMem(0x2141, { 0x76 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x1ca0, gbc.sp());
        EXPECT(0x2142, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 76 01B1
        gbc.setState(0x1435, 0x2347, 0x23a0, 0x7a8a, 0x2c04, 0xc45a, 0x1, 0x1);
        gbc.writeMem(0x1435, { 0x76 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x2347, gbc.sp());
        EXPECT(0x1436, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 76 01B2
        gbc.setState(0x54b, 0xab92, 0x6d20, 0x610d, 0x9bf0, 0xe08, 0x0, 0x0);
        gbc.writeMem(0x54b, { 0x76 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0xab92, gbc.sp());
        EXPECT(0x54c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 76 01B3
        gbc.setState(0x641f, 0x3d6f, 0x2f60, 0xbf27, 0xbd2f, 0x87e, 0x0, 0x1);
        gbc.writeMem(0x641f, { 0x76 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0x3d6f, gbc.sp());
        EXPECT(0x6420, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 76 01B4
        gbc.setState(0x788f, 0xbb56, 0xb490, 0x55d8, 0x46a1, 0xe3e5, 0x0, 0x1);
        gbc.writeMem(0x788f, { 0x76 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0xbb56, gbc.sp());
        EXPECT(0x7890, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 76 01B5
        gbc.setState(0xb218, 0x4ec8, 0xa3d0, 0x213a, 0x9932, 0x72ee, 0x0, 0x0);
        gbc.writeMem(0xb218, { 0x76 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x4ec8, gbc.sp());
        EXPECT(0xb219, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x76, gbc.readMem(0xb218));
        // 76 01B6
        gbc.setState(0x53ef, 0xf16b, 0xaff0, 0x6561, 0x2e62, 0xeaa2, 0x0, 0x0);
        gbc.writeMem(0x53ef, { 0x76 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0xf16b, gbc.sp());
        EXPECT(0x53f0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 76 01B7
        gbc.setState(0x5d56, 0x72, 0x470, 0xb217, 0xc2f3, 0xd87, 0x1, 0x0);
        gbc.writeMem(0x5d56, { 0x76 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x72, gbc.sp());
        EXPECT(0x5d57, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 76 01B8
        gbc.setState(0x6f28, 0xa254, 0xbe0, 0x3724, 0x5fe6, 0xb637, 0x1, 0x1);
        gbc.writeMem(0x6f28, { 0x76 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0xa254, gbc.sp());
        EXPECT(0x6f29, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 76 01B9
        gbc.setState(0xb553, 0x6a2d, 0x4650, 0x4b5d, 0x733a, 0xbb52, 0x1, 0x1);
        gbc.writeMem(0xb553, { 0x76 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x6a2d, gbc.sp());
        EXPECT(0xb554, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x76, gbc.readMem(0xb553));
        // 76 01BB
        gbc.setState(0x42ca, 0xb7b7, 0xe60, 0xc935, 0x30cd, 0x3711, 0x0, 0x0);
        gbc.writeMem(0x42ca, { 0x76 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0xb7b7, gbc.sp());
        EXPECT(0x42cb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 76 01BC
        gbc.setState(0x7103, 0x85a3, 0x2c40, 0xc3b2, 0x7c08, 0xe329, 0x1, 0x1);
        gbc.writeMem(0x7103, { 0x76 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x85a3, gbc.sp());
        EXPECT(0x7104, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 76 01BD
        gbc.setState(0xd497, 0x1307, 0xb690, 0x9bad, 0x7a4a, 0x5105, 0x0, 0x1);
        gbc.writeMem(0xd497, { 0x76 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x1307, gbc.sp());
        EXPECT(0xd498, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x76, gbc.readMem(0xd497));
        // 76 01BE
        gbc.setState(0x73fe, 0x671b, 0x5f50, 0xf9c9, 0x7a44, 0xf8b8, 0x0, 0x0);
        gbc.writeMem(0x73fe, { 0x76 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x671b, gbc.sp());
        EXPECT(0x73ff, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 76 01BF
        gbc.setState(0x2da9, 0x419c, 0x4620, 0x6557, 0xae, 0xaacd, 0x0, 0x0);
        gbc.writeMem(0x2da9, { 0x76 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x419c, gbc.sp());
        EXPECT(0x2daa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 76 01C0
        gbc.setState(0xcaf3, 0x5080, 0x2d20, 0x799, 0x44a8, 0xd9f7, 0x0, 0x0);
        gbc.writeMem(0xcaf3, { 0x76 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x5080, gbc.sp());
        EXPECT(0xcaf4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x76, gbc.readMem(0xcaf3));
        // 76 01C1
        gbc.setState(0x1f09, 0xf055, 0xa590, 0x559f, 0x7608, 0x9b89, 0x1, 0x0);
        gbc.writeMem(0x1f09, { 0x76 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0xf055, gbc.sp());
        EXPECT(0x1f0a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 76 01C2
        gbc.setState(0x1308, 0x5345, 0x8bc0, 0x25a7, 0x8e0d, 0xaf98, 0x1, 0x0);
        gbc.writeMem(0x1308, { 0x76 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x5345, gbc.sp());
        EXPECT(0x1309, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 76 01C3
        gbc.setState(0x3b2b, 0x557c, 0x9e50, 0x38a7, 0x79a0, 0xb8fa, 0x1, 0x1);
        gbc.writeMem(0x3b2b, { 0x76 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0x557c, gbc.sp());
        EXPECT(0x3b2c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 76 01C4
        gbc.setState(0x38fb, 0x9293, 0xaaa0, 0xe205, 0x4f95, 0x5c02, 0x0, 0x0);
        gbc.writeMem(0x38fb, { 0x76 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x9293, gbc.sp());
        EXPECT(0x38fc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 76 01C5
        gbc.setState(0x7504, 0xc7c2, 0x4a00, 0xeff1, 0x44f, 0x8f1e, 0x1, 0x1);
        gbc.writeMem(0x7504, { 0x76 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0xc7c2, gbc.sp());
        EXPECT(0x7505, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 76 01C6
        gbc.setState(0xa03c, 0xebc2, 0x8aa0, 0xd276, 0x64f8, 0x5a91, 0x0, 0x1);
        gbc.writeMem(0xa03c, { 0x76 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0xebc2, gbc.sp());
        EXPECT(0xa03d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x76, gbc.readMem(0xa03c));
        // 76 01C7
        gbc.setState(0xd261, 0x6d6a, 0xfb00, 0x1bd5, 0x638e, 0x1e07, 0x0, 0x1);
        gbc.writeMem(0xd261, { 0x76 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x6d6a, gbc.sp());
        EXPECT(0xd262, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x76, gbc.readMem(0xd261));
        // 76 01C8
        gbc.setState(0x115, 0x3685, 0x360, 0x8bf, 0x5f8f, 0x96b, 0x1, 0x1);
        gbc.writeMem(0x115, { 0x76 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x3685, gbc.sp());
        EXPECT(0x116, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 76 01C9
        gbc.setState(0x1f27, 0xccf6, 0xab10, 0x5500, 0xe817, 0x2dd1, 0x0, 0x0);
        gbc.writeMem(0x1f27, { 0x76 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0xccf6, gbc.sp());
        EXPECT(0x1f28, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 76 01CA
        gbc.setState(0x54ee, 0x6aaf, 0x68c0, 0x3375, 0x43b8, 0x61cb, 0x0, 0x0);
        gbc.writeMem(0x54ee, { 0x76 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x6aaf, gbc.sp());
        EXPECT(0x54ef, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 76 01CC
        gbc.setState(0x59d1, 0x6402, 0xe580, 0x90e1, 0xcba4, 0xf91, 0x1, 0x0);
        gbc.writeMem(0x59d1, { 0x76 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x6402, gbc.sp());
        EXPECT(0x59d2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 76 01CD
        gbc.setState(0x47d6, 0x8c11, 0xe610, 0x3918, 0xb7a6, 0x7af0, 0x0, 0x0);
        gbc.writeMem(0x47d6, { 0x76 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x8c11, gbc.sp());
        EXPECT(0x47d7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 76 01CF
        gbc.setState(0xdfd1, 0x31e6, 0x37e0, 0x742, 0xc812, 0xc116, 0x0, 0x1);
        gbc.writeMem(0xdfd1, { 0x76 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x31e6, gbc.sp());
        EXPECT(0xdfd2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x76, gbc.readMem(0xdfd1));
        // 76 01D0
        gbc.setState(0xdc49, 0xec7c, 0x96d0, 0x7e71, 0x802d, 0x68cc, 0x1, 0x1);
        gbc.writeMem(0xdc49, { 0x76 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0xec7c, gbc.sp());
        EXPECT(0xdc4a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x76, gbc.readMem(0xdc49));
        // 76 01D2
        gbc.setState(0x94a, 0xfbe, 0x8630, 0x8d7c, 0xbb84, 0xdbef, 0x1, 0x1);
        gbc.writeMem(0x94a, { 0x76 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0xfbe, gbc.sp());
        EXPECT(0x94b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 76 01D3
        gbc.setState(0x5753, 0xb1ef, 0x9560, 0x1bee, 0xf810, 0x537f, 0x0, 0x0);
        gbc.writeMem(0x5753, { 0x76 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0xb1ef, gbc.sp());
        EXPECT(0x5754, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 76 01D4
        gbc.setState(0x209f, 0xfd4c, 0x8640, 0x674a, 0x59c, 0x4205, 0x1, 0x1);
        gbc.writeMem(0x209f, { 0x76 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0xfd4c, gbc.sp());
        EXPECT(0x20a0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 76 01D5
        gbc.setState(0xd5bf, 0x9542, 0x9db0, 0x47e4, 0x8fb9, 0x832d, 0x1, 0x0);
        gbc.writeMem(0xd5bf, { 0x76 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x9542, gbc.sp());
        EXPECT(0xd5c0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x76, gbc.readMem(0xd5bf));
        // 76 01D6
        gbc.setState(0x2352, 0x8cf7, 0x4510, 0xdd7f, 0x9808, 0x1ece, 0x1, 0x0);
        gbc.writeMem(0x2352, { 0x76 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x8cf7, gbc.sp());
        EXPECT(0x2353, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 76 01D7
        gbc.setState(0xfd4, 0x4391, 0x23f0, 0x751, 0x4338, 0x9fef, 0x0, 0x1);
        gbc.writeMem(0xfd4, { 0x76 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x4391, gbc.sp());
        EXPECT(0xfd5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 76 01D8
        gbc.setState(0xa18b, 0x271b, 0x1dc0, 0x8f56, 0xbf43, 0xadfb, 0x1, 0x1);
        gbc.writeMem(0xa18b, { 0x76 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x271b, gbc.sp());
        EXPECT(0xa18c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x76, gbc.readMem(0xa18b));
        // 76 01D9
        gbc.setState(0x23f7, 0xc1d2, 0x23f0, 0x70a3, 0x316f, 0xd8c4, 0x1, 0x0);
        gbc.writeMem(0x23f7, { 0x76 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0xc1d2, gbc.sp());
        EXPECT(0x23f8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 76 01DA
        gbc.setState(0x834c, 0x6249, 0x9b00, 0x3373, 0x7d37, 0xb62a, 0x0, 0x0);
        gbc.writeMem(0x834c, { 0x76 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x6249, gbc.sp());
        EXPECT(0x834d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x76, gbc.readMem(0x834c));
        // 76 01DB
        gbc.setState(0x26b8, 0x669b, 0xb8b0, 0x948a, 0x862c, 0xc2d2, 0x1, 0x0);
        gbc.writeMem(0x26b8, { 0x76 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x669b, gbc.sp());
        EXPECT(0x26b9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 76 01DC
        gbc.setState(0x36d0, 0xe3e0, 0x3580, 0xf7b0, 0x2e2b, 0x701d, 0x1, 0x0);
        gbc.writeMem(0x36d0, { 0x76 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0xe3e0, gbc.sp());
        EXPECT(0x36d1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 76 01DD
        gbc.setState(0x89af, 0xe37b, 0xd6b0, 0x6c46, 0x90dc, 0x5cbf, 0x0, 0x0);
        gbc.writeMem(0x89af, { 0x76 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0xe37b, gbc.sp());
        EXPECT(0x89b0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x76, gbc.readMem(0x89af));
        // 76 01DE
        gbc.setState(0x64a2, 0xf76b, 0x6790, 0xf521, 0x1abe, 0xa391, 0x0, 0x0);
        gbc.writeMem(0x64a2, { 0x76 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0xf76b, gbc.sp());
        EXPECT(0x64a3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 76 01DF
        gbc.setState(0x252, 0x237c, 0x8c50, 0x4682, 0x125c, 0x132c, 0x1, 0x0);
        gbc.writeMem(0x252, { 0x76 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x237c, gbc.sp());
        EXPECT(0x253, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 76 01E0
        gbc.setState(0xa50b, 0x8459, 0xa720, 0x6ebb, 0xccde, 0xb029, 0x1, 0x1);
        gbc.writeMem(0xa50b, { 0x76 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x8459, gbc.sp());
        EXPECT(0xa50c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x76, gbc.readMem(0xa50b));
        // 76 01E1
        gbc.setState(0x4227, 0xc654, 0x5c00, 0xc32, 0x5180, 0x8ebc, 0x1, 0x1);
        gbc.writeMem(0x4227, { 0x76 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0xc654, gbc.sp());
        EXPECT(0x4228, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 76 01E2
        gbc.setState(0x4f05, 0xde17, 0x8b10, 0x62cd, 0x61e8, 0x65e1, 0x1, 0x0);
        gbc.writeMem(0x4f05, { 0x76 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0xde17, gbc.sp());
        EXPECT(0x4f06, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 76 01E3
        gbc.setState(0xe1ea, 0x9b9, 0x8750, 0x292f, 0x304c, 0xf406, 0x1, 0x0);
        gbc.writeMem(0xe1ea, { 0x76 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x9b9, gbc.sp());
        EXPECT(0xe1eb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x76, gbc.readMem(0xe1ea));
        // 76 01E4
        gbc.setState(0x5bbe, 0x2cf2, 0x7b90, 0xe8dc, 0xa22d, 0x673, 0x0, 0x1);
        gbc.writeMem(0x5bbe, { 0x76 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x2cf2, gbc.sp());
        EXPECT(0x5bbf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 76 01E5
        gbc.setState(0xd6b0, 0xf31a, 0xb830, 0x1af2, 0x9a5f, 0xa6da, 0x0, 0x1);
        gbc.writeMem(0xd6b0, { 0x76 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0xf31a, gbc.sp());
        EXPECT(0xd6b1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x76, gbc.readMem(0xd6b0));
        // 76 01E6
        gbc.setState(0xe1c7, 0x604f, 0xac50, 0x232d, 0x741c, 0xb3ba, 0x1, 0x1);
        gbc.writeMem(0xe1c7, { 0x76 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0x604f, gbc.sp());
        EXPECT(0xe1c8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x76, gbc.readMem(0xe1c7));
        // 76 01E7
        gbc.setState(0xe420, 0x32f7, 0x2bd0, 0x5690, 0xc448, 0x5766, 0x1, 0x0);
        gbc.writeMem(0xe420, { 0x76 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x32f7, gbc.sp());
        EXPECT(0xe421, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x76, gbc.readMem(0xe420));
        // 76 01E8
        gbc.setState(0x6a9d, 0x648, 0xa520, 0xa3f0, 0xefb1, 0x860f, 0x0, 0x1);
        gbc.writeMem(0x6a9d, { 0x76 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x648, gbc.sp());
        EXPECT(0x6a9e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 76 01E9
        gbc.setState(0xe352, 0xd89, 0xab90, 0x33ca, 0x920f, 0x96b6, 0x1, 0x0);
        gbc.writeMem(0xe352, { 0x76 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0xd89, gbc.sp());
        EXPECT(0xe353, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x76, gbc.readMem(0xe352));
        // 76 01EA
        gbc.setState(0xaf2, 0x990c, 0x6280, 0x4789, 0x3c6, 0xa362, 0x0, 0x1);
        gbc.writeMem(0xaf2, { 0x76 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x990c, gbc.sp());
        EXPECT(0xaf3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 76 01EB
        gbc.setState(0xd096, 0xf81, 0xc8f0, 0x1cf1, 0x6f67, 0x1e08, 0x0, 0x0);
        gbc.writeMem(0xd096, { 0x76 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0xf81, gbc.sp());
        EXPECT(0xd097, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x76, gbc.readMem(0xd096));
        // 76 01EC
        gbc.setState(0x7cb9, 0x934d, 0x15f0, 0x6f7f, 0x33fd, 0x9dd1, 0x1, 0x1);
        gbc.writeMem(0x7cb9, { 0x76 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x934d, gbc.sp());
        EXPECT(0x7cba, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 76 01ED
        gbc.setState(0x8a99, 0x284d, 0xc60, 0xd1b9, 0xf242, 0x7a65, 0x1, 0x1);
        gbc.writeMem(0x8a99, { 0x76 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x284d, gbc.sp());
        EXPECT(0x8a9a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x76, gbc.readMem(0x8a99));
        // 76 01EE
        gbc.setState(0x3d97, 0x4ccb, 0x3750, 0x7276, 0xb06, 0x4417, 0x0, 0x1);
        gbc.writeMem(0x3d97, { 0x76 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x4ccb, gbc.sp());
        EXPECT(0x3d98, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 76 01EF
        gbc.setState(0x4def, 0x8c71, 0x3820, 0xd61d, 0x3bfc, 0xe946, 0x1, 0x1);
        gbc.writeMem(0x4def, { 0x76 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x8c71, gbc.sp());
        EXPECT(0x4df0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 76 01F0
        gbc.setState(0x3e5f, 0x298a, 0xa4f0, 0xe0b0, 0xb924, 0x2c81, 0x1, 0x0);
        gbc.writeMem(0x3e5f, { 0x76 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x298a, gbc.sp());
        EXPECT(0x3e60, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 76 01F1
        gbc.setState(0xd8c6, 0x5bea, 0xccb0, 0xb23f, 0xf258, 0x315e, 0x1, 0x0);
        gbc.writeMem(0xd8c6, { 0x76 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x5bea, gbc.sp());
        EXPECT(0xd8c7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x76, gbc.readMem(0xd8c6));
        // 76 01F2
        gbc.setState(0xfce, 0x4b9e, 0x5d10, 0xb3bf, 0x74dc, 0xb02c, 0x1, 0x0);
        gbc.writeMem(0xfce, { 0x76 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x4b9e, gbc.sp());
        EXPECT(0xfcf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 76 01F3
        gbc.setState(0xc6f, 0x725b, 0x2420, 0x5d70, 0xc9ec, 0x4be3, 0x1, 0x0);
        gbc.writeMem(0xc6f, { 0x76 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x725b, gbc.sp());
        EXPECT(0xc70, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 76 01F4
        gbc.setState(0xc71c, 0xf80d, 0x3040, 0x9da1, 0xb915, 0xd99a, 0x1, 0x1);
        gbc.writeMem(0xc71c, { 0x76 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0xf80d, gbc.sp());
        EXPECT(0xc71d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x76, gbc.readMem(0xc71c));
        // 76 01F5
        gbc.setState(0x36e0, 0xf14f, 0x2660, 0x6ea5, 0x3e61, 0x2817, 0x1, 0x0);
        gbc.writeMem(0x36e0, { 0x76 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0xf14f, gbc.sp());
        EXPECT(0x36e1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 76 01F6
        gbc.setState(0xb7d5, 0x521f, 0x4d60, 0x3032, 0x17c6, 0x6764, 0x1, 0x1);
        gbc.writeMem(0xb7d5, { 0x76 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x521f, gbc.sp());
        EXPECT(0xb7d6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x76, gbc.readMem(0xb7d5));
        // 76 01F7
        gbc.setState(0xe8d, 0x532b, 0xdb0, 0x8dcb, 0xccb3, 0x7c19, 0x0, 0x0);
        gbc.writeMem(0xe8d, { 0x76 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x532b, gbc.sp());
        EXPECT(0xe8e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 76 01F8
        gbc.setState(0xe969, 0xbd65, 0x94d0, 0xf20c, 0x5d79, 0x9ef0, 0x0, 0x1);
        gbc.writeMem(0xe969, { 0x76 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0xbd65, gbc.sp());
        EXPECT(0xe96a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x76, gbc.readMem(0xe969));
        // 76 01F9
        gbc.setState(0xc23b, 0x9626, 0x97e0, 0xb797, 0x8f56, 0xec20, 0x0, 0x1);
        gbc.writeMem(0xc23b, { 0x76 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x9626, gbc.sp());
        EXPECT(0xc23c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x76, gbc.readMem(0xc23b));
        // 76 01FA
        gbc.setState(0xc672, 0xfad0, 0x34e0, 0xd6dc, 0x615b, 0x5c45, 0x0, 0x0);
        gbc.writeMem(0xc672, { 0x76 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0xfad0, gbc.sp());
        EXPECT(0xc673, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x76, gbc.readMem(0xc672));
        // 76 01FB
        gbc.setState(0x51e5, 0xbea7, 0x16f0, 0xdca, 0x83f5, 0x2aff, 0x1, 0x0);
        gbc.writeMem(0x51e5, { 0x76 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0xbea7, gbc.sp());
        EXPECT(0x51e6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 76 01FC
        gbc.setState(0xcaf0, 0x5bf0, 0xcf10, 0xc143, 0xb1f8, 0x5b98, 0x1, 0x0);
        gbc.writeMem(0xcaf0, { 0x76 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x5bf0, gbc.sp());
        EXPECT(0xcaf1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x76, gbc.readMem(0xcaf0));
        // 76 01FD
        gbc.setState(0x87e5, 0xea4d, 0xdb50, 0xe2d7, 0xd654, 0xcd37, 0x0, 0x1);
        gbc.writeMem(0x87e5, { 0x76 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0xea4d, gbc.sp());
        EXPECT(0x87e6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x76, gbc.readMem(0x87e5));
        // 76 01FE
        gbc.setState(0xa9ed, 0xb199, 0xfb60, 0x668b, 0x83f1, 0xb218, 0x1, 0x1);
        gbc.writeMem(0xa9ed, { 0x76 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0xb199, gbc.sp());
        EXPECT(0xa9ee, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x76, gbc.readMem(0xa9ed));
        // 76 01FF
        gbc.setState(0x3a69, 0xe8b5, 0x3850, 0xb16b, 0x649, 0xc14c, 0x0, 0x0);
        gbc.writeMem(0x3a69, { 0x76 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0xe8b5, gbc.sp());
        EXPECT(0x3a6a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 76 0200
        gbc.setState(0xabd3, 0x3e80, 0x9a50, 0xc426, 0xcea, 0xfd02, 0x1, 0x0);
        gbc.writeMem(0xabd3, { 0x76 });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x3e80, gbc.sp());
        EXPECT(0xabd4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x76, gbc.readMem(0xabd3));
        // 76 0201
        gbc.setState(0x4d5d, 0x1a27, 0xe790, 0x81bb, 0x2ed5, 0xd71, 0x0, 0x0);
        gbc.writeMem(0x4d5d, { 0x76 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x1a27, gbc.sp());
        EXPECT(0x4d5e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 76 0203
        gbc.setState(0x8187, 0xe3a7, 0x27a0, 0x52e5, 0x9f99, 0x65c, 0x0, 0x0);
        gbc.writeMem(0x8187, { 0x76 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0xe3a7, gbc.sp());
        EXPECT(0x8188, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x76, gbc.readMem(0x8187));
        // 76 0204
        gbc.setState(0x98c0, 0x22de, 0x7ac0, 0x30f9, 0x5b8e, 0xa720, 0x1, 0x0);
        gbc.writeMem(0x98c0, { 0x76 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x22de, gbc.sp());
        EXPECT(0x98c1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x76, gbc.readMem(0x98c0));
        // 76 0205
        gbc.setState(0xe2a8, 0x983b, 0x4740, 0x5a2a, 0xe978, 0x9793, 0x1, 0x1);
        gbc.writeMem(0xe2a8, { 0x76 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0x983b, gbc.sp());
        EXPECT(0xe2a9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x76, gbc.readMem(0xe2a8));
        // 76 0206
        gbc.setState(0x25a8, 0x19ff, 0x8c40, 0x40ba, 0xa1b3, 0x74d5, 0x0, 0x0);
        gbc.writeMem(0x25a8, { 0x76 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x19ff, gbc.sp());
        EXPECT(0x25a9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 76 0207
        gbc.setState(0x4d2, 0x1176, 0x2b80, 0xdcd6, 0x2d55, 0xf532, 0x1, 0x0);
        gbc.writeMem(0x4d2, { 0x76 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x1176, gbc.sp());
        EXPECT(0x4d3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 76 0208
        gbc.setState(0x53ec, 0xf0c7, 0xd2a0, 0xb951, 0x526f, 0x40ee, 0x1, 0x0);
        gbc.writeMem(0x53ec, { 0x76 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0xf0c7, gbc.sp());
        EXPECT(0x53ed, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 76 0209
        gbc.setState(0x751e, 0x208d, 0xcac0, 0xff1, 0xf084, 0x4080, 0x0, 0x1);
        gbc.writeMem(0x751e, { 0x76 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x208d, gbc.sp());
        EXPECT(0x751f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 76 020A
        gbc.setState(0x38dc, 0x3977, 0x2130, 0xbb20, 0xe8d5, 0xd067, 0x0, 0x0);
        gbc.writeMem(0x38dc, { 0x76 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x3977, gbc.sp());
        EXPECT(0x38dd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 76 020B
        gbc.setState(0x402c, 0x94fe, 0x33a0, 0x649a, 0xfe68, 0xee64, 0x1, 0x1);
        gbc.writeMem(0x402c, { 0x76 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x94fe, gbc.sp());
        EXPECT(0x402d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 76 020C
        gbc.setState(0x43d8, 0x3acf, 0x7910, 0xd9ed, 0xaa1c, 0x80bb, 0x0, 0x1);
        gbc.writeMem(0x43d8, { 0x76 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x3acf, gbc.sp());
        EXPECT(0x43d9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 76 020D
        gbc.setState(0x87fb, 0x89a5, 0x8380, 0x9ddc, 0x3f72, 0x7a80, 0x1, 0x1);
        gbc.writeMem(0x87fb, { 0x76 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x89a5, gbc.sp());
        EXPECT(0x87fc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x76, gbc.readMem(0x87fb));
        // 76 020E
        gbc.setState(0x7c31, 0x3836, 0x1440, 0x84ce, 0x2727, 0x4116, 0x0, 0x1);
        gbc.writeMem(0x7c31, { 0x76 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x3836, gbc.sp());
        EXPECT(0x7c32, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 76 0210
        gbc.setState(0x8526, 0x753b, 0xbcb0, 0x3f17, 0x8b0b, 0xa9eb, 0x0, 0x0);
        gbc.writeMem(0x8526, { 0x76 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x753b, gbc.sp());
        EXPECT(0x8527, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x76, gbc.readMem(0x8526));
        // 76 0212
        gbc.setState(0xd5ec, 0x32d3, 0xd090, 0xd3e6, 0x2eb3, 0x2269, 0x0, 0x1);
        gbc.writeMem(0xd5ec, { 0x76 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0x32d3, gbc.sp());
        EXPECT(0xd5ed, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x76, gbc.readMem(0xd5ec));
        // 76 0213
        gbc.setState(0x3f6b, 0xa79b, 0xd0e0, 0xc692, 0xdd0d, 0xb2b0, 0x0, 0x1);
        gbc.writeMem(0x3f6b, { 0x76 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0xa79b, gbc.sp());
        EXPECT(0x3f6c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 76 0214
        gbc.setState(0xb85a, 0x9131, 0x9c30, 0xeabe, 0xd3c7, 0xdd95, 0x1, 0x1);
        gbc.writeMem(0xb85a, { 0x76 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x9131, gbc.sp());
        EXPECT(0xb85b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x76, gbc.readMem(0xb85a));
        // 76 0215
        gbc.setState(0xdb9c, 0x885, 0xec10, 0x5ffc, 0xb74c, 0x4958, 0x1, 0x1);
        gbc.writeMem(0xdb9c, { 0x76 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x885, gbc.sp());
        EXPECT(0xdb9d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x76, gbc.readMem(0xdb9c));
        // 76 0216
        gbc.setState(0xd989, 0x30ae, 0xe4e0, 0xa021, 0xe289, 0xcb3e, 0x1, 0x0);
        gbc.writeMem(0xd989, { 0x76 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x30ae, gbc.sp());
        EXPECT(0xd98a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x76, gbc.readMem(0xd989));
        // 76 0217
        gbc.setState(0x1094, 0xc726, 0x3d80, 0xabba, 0x15ef, 0x83e7, 0x0, 0x1);
        gbc.writeMem(0x1094, { 0x76 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0xc726, gbc.sp());
        EXPECT(0x1095, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 76 0218
        gbc.setState(0xa01, 0x4199, 0x5940, 0x4056, 0x1916, 0x5028, 0x0, 0x0);
        gbc.writeMem(0xa01, { 0x76 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x4199, gbc.sp());
        EXPECT(0xa02, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 76 0219
        gbc.setState(0x12f7, 0x1c58, 0xbce0, 0x761a, 0xeb4e, 0x541e, 0x1, 0x1);
        gbc.writeMem(0x12f7, { 0x76 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x1c58, gbc.sp());
        EXPECT(0x12f8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 76 021A
        gbc.setState(0x5aa1, 0x77b6, 0x9e00, 0xfd14, 0x25c3, 0x6310, 0x0, 0x0);
        gbc.writeMem(0x5aa1, { 0x76 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x77b6, gbc.sp());
        EXPECT(0x5aa2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 76 021B
        gbc.setState(0x4c30, 0x449, 0xd7e0, 0xc393, 0x1e50, 0x5fb0, 0x1, 0x0);
        gbc.writeMem(0x4c30, { 0x76 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x449, gbc.sp());
        EXPECT(0x4c31, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 76 021C
        gbc.setState(0x2e2, 0xe922, 0xfd70, 0xbbd, 0x5f12, 0x258, 0x1, 0x0);
        gbc.writeMem(0x2e2, { 0x76 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0xe922, gbc.sp());
        EXPECT(0x2e3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 76 021D
        gbc.setState(0x20f7, 0x3a20, 0xbef0, 0x498, 0x25c7, 0x480d, 0x0, 0x1);
        gbc.writeMem(0x20f7, { 0x76 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x3a20, gbc.sp());
        EXPECT(0x20f8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 76 021E
        gbc.setState(0x100d, 0x615e, 0x1e10, 0xa95a, 0xd80d, 0x3dff, 0x0, 0x1);
        gbc.writeMem(0x100d, { 0x76 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x615e, gbc.sp());
        EXPECT(0x100e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 76 021F
        gbc.setState(0x7e24, 0x119c, 0x950, 0x19f0, 0xfb, 0x32de, 0x0, 0x1);
        gbc.writeMem(0x7e24, { 0x76 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x119c, gbc.sp());
        EXPECT(0x7e25, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 76 0220
        gbc.setState(0x85d0, 0xb26e, 0x420, 0x8ed3, 0xba90, 0x4fbb, 0x0, 0x1);
        gbc.writeMem(0x85d0, { 0x76 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0xb26e, gbc.sp());
        EXPECT(0x85d1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x76, gbc.readMem(0x85d0));
        // 76 0222
        gbc.setState(0x7028, 0x43dc, 0xeed0, 0x70f0, 0x6366, 0x491c, 0x1, 0x0);
        gbc.writeMem(0x7028, { 0x76 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x43dc, gbc.sp());
        EXPECT(0x7029, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 76 0223
        gbc.setState(0x161b, 0x4d25, 0xa9f0, 0xa314, 0xd525, 0x1823, 0x1, 0x1);
        gbc.writeMem(0x161b, { 0x76 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x4d25, gbc.sp());
        EXPECT(0x161c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 76 0224
        gbc.setState(0x14d5, 0xe359, 0xa390, 0x56b3, 0x13be, 0x585f, 0x1, 0x0);
        gbc.writeMem(0x14d5, { 0x76 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0xe359, gbc.sp());
        EXPECT(0x14d6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 76 0225
        gbc.setState(0x3c44, 0x1bda, 0xa070, 0x3120, 0x350d, 0xcc7, 0x1, 0x0);
        gbc.writeMem(0x3c44, { 0x76 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x1bda, gbc.sp());
        EXPECT(0x3c45, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 76 0226
        gbc.setState(0x8f1, 0x8ade, 0x8e0, 0xc886, 0xa4a, 0x796e, 0x0, 0x0);
        gbc.writeMem(0x8f1, { 0x76 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x8ade, gbc.sp());
        EXPECT(0x8f2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 76 0227
        gbc.setState(0x52de, 0x7dc4, 0xe740, 0xbe31, 0x74a8, 0x58f4, 0x0, 0x0);
        gbc.writeMem(0x52de, { 0x76 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x7dc4, gbc.sp());
        EXPECT(0x52df, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 76 0228
        gbc.setState(0x6e70, 0x72ad, 0x75e0, 0x2d7f, 0xba72, 0x8303, 0x0, 0x1);
        gbc.writeMem(0x6e70, { 0x76 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x72ad, gbc.sp());
        EXPECT(0x6e71, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 76 0229
        gbc.setState(0x72c9, 0xa68, 0x2760, 0xa410, 0x6c64, 0xba5c, 0x0, 0x0);
        gbc.writeMem(0x72c9, { 0x76 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0xa68, gbc.sp());
        EXPECT(0x72ca, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 76 022B
        gbc.setState(0x1065, 0xff56, 0xd030, 0x3309, 0x95e7, 0xa41, 0x0, 0x0);
        gbc.writeMem(0x1065, { 0x76 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0xff56, gbc.sp());
        EXPECT(0x1066, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 76 022C
        gbc.setState(0x7472, 0xe5ad, 0x56d0, 0x2507, 0x9cb8, 0xe55c, 0x1, 0x0);
        gbc.writeMem(0x7472, { 0x76 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0xe5ad, gbc.sp());
        EXPECT(0x7473, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 76 022D
        gbc.setState(0xed6c, 0xe999, 0x1ad0, 0xb532, 0xce2f, 0xd69c, 0x1, 0x0);
        gbc.writeMem(0xed6c, { 0x76 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0xe999, gbc.sp());
        EXPECT(0xed6d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x76, gbc.readMem(0xed6c));
        // 76 022E
        gbc.setState(0x5f9f, 0x90bc, 0x4970, 0x33c4, 0xe72d, 0x8d94, 0x1, 0x0);
        gbc.writeMem(0x5f9f, { 0x76 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x90bc, gbc.sp());
        EXPECT(0x5fa0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 76 022F
        gbc.setState(0xeeeb, 0xc2d2, 0x9920, 0x8c81, 0x1e96, 0x5877, 0x1, 0x1);
        gbc.writeMem(0xeeeb, { 0x76 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0xc2d2, gbc.sp());
        EXPECT(0xeeec, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x76, gbc.readMem(0xeeeb));
        // 76 0230
        gbc.setState(0xa72a, 0xd475, 0xe350, 0x5f50, 0xa286, 0x9306, 0x0, 0x1);
        gbc.writeMem(0xa72a, { 0x76 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0xd475, gbc.sp());
        EXPECT(0xa72b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x76, gbc.readMem(0xa72a));
        // 76 0231
        gbc.setState(0x55f3, 0x6be0, 0xe930, 0xfb14, 0x514c, 0xc1a3, 0x1, 0x1);
        gbc.writeMem(0x55f3, { 0x76 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0x6be0, gbc.sp());
        EXPECT(0x55f4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 76 0232
        gbc.setState(0x8659, 0x510f, 0x33a0, 0xcbda, 0x34ed, 0xdb3f, 0x1, 0x0);
        gbc.writeMem(0x8659, { 0x76 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0x510f, gbc.sp());
        EXPECT(0x865a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x76, gbc.readMem(0x8659));
        // 76 0233
        gbc.setState(0x2d17, 0xb813, 0xcea0, 0xbaad, 0x39fb, 0xa8d6, 0x1, 0x1);
        gbc.writeMem(0x2d17, { 0x76 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0xb813, gbc.sp());
        EXPECT(0x2d18, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 76 0234
        gbc.setState(0x1546, 0x2c0e, 0x10e0, 0xe086, 0xf55d, 0x18c, 0x1, 0x1);
        gbc.writeMem(0x1546, { 0x76 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x2c0e, gbc.sp());
        EXPECT(0x1547, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 76 0235
        gbc.setState(0x3091, 0x3e7b, 0x2e40, 0x76c0, 0xafc1, 0x4b60, 0x1, 0x0);
        gbc.writeMem(0x3091, { 0x76 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x3e7b, gbc.sp());
        EXPECT(0x3092, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 76 0236
        gbc.setState(0x8875, 0x3cd9, 0x1870, 0xddb5, 0xeba2, 0x972d, 0x1, 0x0);
        gbc.writeMem(0x8875, { 0x76 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x3cd9, gbc.sp());
        EXPECT(0x8876, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x76, gbc.readMem(0x8875));
        // 76 0237
        gbc.setState(0x6b82, 0x88f9, 0xd0c0, 0x7bd, 0x4347, 0x412b, 0x1, 0x1);
        gbc.writeMem(0x6b82, { 0x76 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x88f9, gbc.sp());
        EXPECT(0x6b83, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 76 0238
        gbc.setState(0x3810, 0xb173, 0xe4c0, 0x7f8d, 0xae40, 0xc6da, 0x0, 0x1);
        gbc.writeMem(0x3810, { 0x76 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0xb173, gbc.sp());
        EXPECT(0x3811, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 76 0239
        gbc.setState(0x8618, 0x688b, 0xaad0, 0x424b, 0x5cc7, 0xfa36, 0x1, 0x0);
        gbc.writeMem(0x8618, { 0x76 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x688b, gbc.sp());
        EXPECT(0x8619, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x76, gbc.readMem(0x8618));
        // 76 023A
        gbc.setState(0x1de8, 0x2ab4, 0x9cf0, 0x58a7, 0xe, 0x6a03, 0x1, 0x1);
        gbc.writeMem(0x1de8, { 0x76 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x2ab4, gbc.sp());
        EXPECT(0x1de9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 76 023B
        gbc.setState(0xce88, 0x629c, 0x14c0, 0xe938, 0x1046, 0xc580, 0x0, 0x0);
        gbc.writeMem(0xce88, { 0x76 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x629c, gbc.sp());
        EXPECT(0xce89, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x76, gbc.readMem(0xce88));
        // 76 023C
        gbc.setState(0xaff0, 0x5f0a, 0x6fd0, 0x6288, 0xbf33, 0x5b14, 0x1, 0x1);
        gbc.writeMem(0xaff0, { 0x76 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x5f0a, gbc.sp());
        EXPECT(0xaff1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x76, gbc.readMem(0xaff0));
        // 76 023D
        gbc.setState(0x4571, 0x3abd, 0x3a50, 0x137c, 0x1464, 0x34b5, 0x0, 0x0);
        gbc.writeMem(0x4571, { 0x76 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x3abd, gbc.sp());
        EXPECT(0x4572, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 76 023E
        gbc.setState(0xf2e, 0x2a7f, 0x5370, 0x59c5, 0x4a33, 0x26d4, 0x0, 0x1);
        gbc.writeMem(0xf2e, { 0x76 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x2a7f, gbc.sp());
        EXPECT(0xf2f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 76 023F
        gbc.setState(0x17f7, 0x86f9, 0x8c80, 0xde0c, 0xb41c, 0x7c60, 0x1, 0x1);
        gbc.writeMem(0x17f7, { 0x76 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x86f9, gbc.sp());
        EXPECT(0x17f8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 76 0240
        gbc.setState(0xe806, 0xdd1c, 0x1670, 0xa169, 0xd681, 0x8fdf, 0x1, 0x0);
        gbc.writeMem(0xe806, { 0x76 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0xdd1c, gbc.sp());
        EXPECT(0xe807, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x76, gbc.readMem(0xe806));
        // 76 0241
        gbc.setState(0x1750, 0x965b, 0x67f0, 0xc98a, 0x3f61, 0xe81, 0x1, 0x1);
        gbc.writeMem(0x1750, { 0x76 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x965b, gbc.sp());
        EXPECT(0x1751, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 76 0242
        gbc.setState(0x7c2, 0xd0d9, 0x5f80, 0xfd84, 0x4ca8, 0xb272, 0x0, 0x0);
        gbc.writeMem(0x7c2, { 0x76 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0xd0d9, gbc.sp());
        EXPECT(0x7c3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 76 0243
        gbc.setState(0x4da8, 0x50fb, 0xe140, 0xc109, 0x10a6, 0x1df5, 0x0, 0x1);
        gbc.writeMem(0x4da8, { 0x76 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x50fb, gbc.sp());
        EXPECT(0x4da9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 76 0244
        gbc.setState(0xa94a, 0x5112, 0x47c0, 0xe132, 0x348f, 0x410e, 0x1, 0x0);
        gbc.writeMem(0xa94a, { 0x76 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x5112, gbc.sp());
        EXPECT(0xa94b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x76, gbc.readMem(0xa94a));
        // 76 0245
        gbc.setState(0xd0a0, 0xb8f, 0x2a40, 0x6381, 0xe9fb, 0x9e15, 0x0, 0x0);
        gbc.writeMem(0xd0a0, { 0x76 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0xb8f, gbc.sp());
        EXPECT(0xd0a1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x76, gbc.readMem(0xd0a0));
        // 76 0246
        gbc.setState(0x2c35, 0x54d9, 0x1d50, 0x3cd9, 0x9c41, 0xa7b6, 0x0, 0x0);
        gbc.writeMem(0x2c35, { 0x76 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x54d9, gbc.sp());
        EXPECT(0x2c36, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 76 0247
        gbc.setState(0x3f6c, 0x4d98, 0x2320, 0xc4e2, 0xa815, 0xbc09, 0x0, 0x1);
        gbc.writeMem(0x3f6c, { 0x76 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x4d98, gbc.sp());
        EXPECT(0x3f6d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 76 0248
        gbc.setState(0x92c9, 0xea11, 0x44b0, 0xccb8, 0x7044, 0x809e, 0x1, 0x1);
        gbc.writeMem(0x92c9, { 0x76 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0xea11, gbc.sp());
        EXPECT(0x92ca, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x76, gbc.readMem(0x92c9));
        // 76 024A
        gbc.setState(0x3ea3, 0x717f, 0x70f0, 0xb677, 0xd6e8, 0x397d, 0x0, 0x0);
        gbc.writeMem(0x3ea3, { 0x76 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x717f, gbc.sp());
        EXPECT(0x3ea4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 76 024B
        gbc.setState(0x9818, 0x2a38, 0x8de0, 0x31fa, 0x9257, 0xbfed, 0x0, 0x1);
        gbc.writeMem(0x9818, { 0x76 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x2a38, gbc.sp());
        EXPECT(0x9819, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x76, gbc.readMem(0x9818));
        // 76 024C
        gbc.setState(0x159e, 0x5d4c, 0x2fb0, 0xb692, 0x2f52, 0xc6bc, 0x1, 0x1);
        gbc.writeMem(0x159e, { 0x76 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x5d4c, gbc.sp());
        EXPECT(0x159f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 76 024D
        gbc.setState(0x5d8d, 0xa2b9, 0x3b80, 0x72e7, 0x1a6a, 0xc8ff, 0x0, 0x1);
        gbc.writeMem(0x5d8d, { 0x76 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0xa2b9, gbc.sp());
        EXPECT(0x5d8e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 76 024E
        gbc.setState(0xe3b9, 0x42d1, 0xf660, 0xf447, 0x46c7, 0xb02, 0x1, 0x0);
        gbc.writeMem(0xe3b9, { 0x76 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x42d1, gbc.sp());
        EXPECT(0xe3ba, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x76, gbc.readMem(0xe3b9));
        // 76 024F
        gbc.setState(0x74d0, 0x95b2, 0x10c0, 0x2f1b, 0x74f0, 0xbc40, 0x0, 0x0);
        gbc.writeMem(0x74d0, { 0x76 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x95b2, gbc.sp());
        EXPECT(0x74d1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 76 0250
        gbc.setState(0x594f, 0x8554, 0x10c0, 0x7ba7, 0x6878, 0x7e4d, 0x0, 0x0);
        gbc.writeMem(0x594f, { 0x76 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x8554, gbc.sp());
        EXPECT(0x5950, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 76 0251
        gbc.setState(0x52a0, 0xed34, 0x9890, 0x21d, 0xe6a1, 0xd311, 0x0, 0x0);
        gbc.writeMem(0x52a0, { 0x76 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0xed34, gbc.sp());
        EXPECT(0x52a1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 76 0252
        gbc.setState(0xc9d2, 0x90d3, 0xd8e0, 0x4c3c, 0xdcab, 0xf68c, 0x1, 0x1);
        gbc.writeMem(0xc9d2, { 0x76 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x90d3, gbc.sp());
        EXPECT(0xc9d3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x76, gbc.readMem(0xc9d2));
        // 76 0253
        gbc.setState(0x2e3c, 0x4d39, 0x2080, 0xd301, 0xc367, 0xe303, 0x0, 0x1);
        gbc.writeMem(0x2e3c, { 0x76 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x4d39, gbc.sp());
        EXPECT(0x2e3d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 76 0254
        gbc.setState(0x60a8, 0x47cb, 0x4570, 0x1893, 0x92fa, 0x4b47, 0x1, 0x1);
        gbc.writeMem(0x60a8, { 0x76 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x47cb, gbc.sp());
        EXPECT(0x60a9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 76 0255
        gbc.setState(0x2549, 0xfede, 0x6270, 0xde85, 0x4bec, 0xa6a5, 0x0, 0x1);
        gbc.writeMem(0x2549, { 0x76 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0xfede, gbc.sp());
        EXPECT(0x254a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 76 0256
        gbc.setState(0x7f4c, 0xc8cf, 0x3920, 0x2900, 0x2c91, 0x875a, 0x0, 0x0);
        gbc.writeMem(0x7f4c, { 0x76 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0xc8cf, gbc.sp());
        EXPECT(0x7f4d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 76 0257
        gbc.setState(0x3ef0, 0xc89c, 0x6c0, 0xc81c, 0x12c6, 0xeed9, 0x0, 0x1);
        gbc.writeMem(0x3ef0, { 0x76 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0xc89c, gbc.sp());
        EXPECT(0x3ef1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 76 0258
        gbc.setState(0x6e5e, 0xa1f3, 0x7540, 0xd04e, 0x3f5a, 0x8542, 0x1, 0x1);
        gbc.writeMem(0x6e5e, { 0x76 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0xa1f3, gbc.sp());
        EXPECT(0x6e5f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 76 0259
        gbc.setState(0xdabc, 0x2568, 0x7950, 0x4365, 0xbe7e, 0xfd70, 0x0, 0x1);
        gbc.writeMem(0xdabc, { 0x76 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x2568, gbc.sp());
        EXPECT(0xdabd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x76, gbc.readMem(0xdabc));
        // 76 025A
        gbc.setState(0x5bda, 0x7850, 0xbb20, 0x67ff, 0x1157, 0xae33, 0x1, 0x1);
        gbc.writeMem(0x5bda, { 0x76 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x7850, gbc.sp());
        EXPECT(0x5bdb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 76 025B
        gbc.setState(0x6a0d, 0x3bd6, 0xe4b0, 0xec36, 0x862c, 0xd84b, 0x1, 0x0);
        gbc.writeMem(0x6a0d, { 0x76 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x3bd6, gbc.sp());
        EXPECT(0x6a0e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 76 025C
        gbc.setState(0x2ce2, 0xbcbe, 0x9100, 0xf6a2, 0xd777, 0x3f03, 0x0, 0x1);
        gbc.writeMem(0x2ce2, { 0x76 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0xbcbe, gbc.sp());
        EXPECT(0x2ce3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 76 025D
        gbc.setState(0xc76e, 0x89a2, 0x11d0, 0x84d5, 0xf865, 0x62c, 0x0, 0x1);
        gbc.writeMem(0xc76e, { 0x76 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x89a2, gbc.sp());
        EXPECT(0xc76f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x76, gbc.readMem(0xc76e));
        // 76 025E
        gbc.setState(0x366d, 0xb033, 0xf2c0, 0x7008, 0x1160, 0xe7c7, 0x1, 0x1);
        gbc.writeMem(0x366d, { 0x76 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0xb033, gbc.sp());
        EXPECT(0x366e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 76 025F
        gbc.setState(0x19ac, 0xc74d, 0x7880, 0xb454, 0xcbd1, 0x8250, 0x1, 0x1);
        gbc.writeMem(0x19ac, { 0x76 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0xc74d, gbc.sp());
        EXPECT(0x19ad, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 76 0261
        gbc.setState(0x37fd, 0x5020, 0x1370, 0xdef3, 0x9f7f, 0xa695, 0x0, 0x0);
        gbc.writeMem(0x37fd, { 0x76 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x5020, gbc.sp());
        EXPECT(0x37fe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 76 0262
        gbc.setState(0x6103, 0x104f, 0x4de0, 0x5e51, 0x12c7, 0x7c9f, 0x1, 0x0);
        gbc.writeMem(0x6103, { 0x76 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x104f, gbc.sp());
        EXPECT(0x6104, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 76 0263
        gbc.setState(0x5f28, 0x73, 0xa3e0, 0xff88, 0x409d, 0x7d9a, 0x0, 0x0);
        gbc.writeMem(0x5f28, { 0x76 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x73, gbc.sp());
        EXPECT(0x5f29, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 76 0264
        gbc.setState(0x6c58, 0xfdb4, 0x2940, 0x3535, 0xcde7, 0xbfbb, 0x0, 0x1);
        gbc.writeMem(0x6c58, { 0x76 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0xfdb4, gbc.sp());
        EXPECT(0x6c59, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 76 0265
        gbc.setState(0x594d, 0x9e28, 0x6b30, 0xd868, 0xd9b0, 0xa9e9, 0x1, 0x0);
        gbc.writeMem(0x594d, { 0x76 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x9e28, gbc.sp());
        EXPECT(0x594e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 76 0266
        gbc.setState(0x4bab, 0xb679, 0x1d90, 0xc45b, 0x1b7e, 0x4d83, 0x1, 0x1);
        gbc.writeMem(0x4bab, { 0x76 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0xb679, gbc.sp());
        EXPECT(0x4bac, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 76 0267
        gbc.setState(0x1aa4, 0x452a, 0x9620, 0x115b, 0x24e9, 0x2c0b, 0x1, 0x1);
        gbc.writeMem(0x1aa4, { 0x76 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x452a, gbc.sp());
        EXPECT(0x1aa5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 76 0268
        gbc.setState(0xeb83, 0x7773, 0x5710, 0xf0dd, 0x9317, 0xb8f2, 0x1, 0x1);
        gbc.writeMem(0xeb83, { 0x76 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x7773, gbc.sp());
        EXPECT(0xeb84, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x76, gbc.readMem(0xeb83));
        // 76 0269
        gbc.setState(0x5085, 0x31df, 0x7ad0, 0xfa7a, 0x99e0, 0xf31f, 0x1, 0x1);
        gbc.writeMem(0x5085, { 0x76 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x31df, gbc.sp());
        EXPECT(0x5086, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 76 026A
        gbc.setState(0xde38, 0x52c7, 0x1b90, 0x5256, 0x7a69, 0xe17c, 0x0, 0x1);
        gbc.writeMem(0xde38, { 0x76 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x52c7, gbc.sp());
        EXPECT(0xde39, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x76, gbc.readMem(0xde38));
        // 76 026B
        gbc.setState(0x952c, 0x41d, 0xf20, 0x4ab3, 0x4cf, 0x5413, 0x1, 0x0);
        gbc.writeMem(0x952c, { 0x76 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x41d, gbc.sp());
        EXPECT(0x952d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x76, gbc.readMem(0x952c));
        // 76 026C
        gbc.setState(0xdab4, 0xd052, 0xb770, 0xbfa2, 0xce6d, 0xc226, 0x1, 0x0);
        gbc.writeMem(0xdab4, { 0x76 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0xd052, gbc.sp());
        EXPECT(0xdab5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x76, gbc.readMem(0xdab4));
        // 76 026D
        gbc.setState(0x742b, 0x385f, 0xf810, 0x7bd0, 0x1cc2, 0x975d, 0x1, 0x1);
        gbc.writeMem(0x742b, { 0x76 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x385f, gbc.sp());
        EXPECT(0x742c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 76 026E
        gbc.setState(0x90a, 0x1cbd, 0x4420, 0x661e, 0x5e0b, 0x49f9, 0x0, 0x0);
        gbc.writeMem(0x90a, { 0x76 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x1cbd, gbc.sp());
        EXPECT(0x90b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 76 026F
        gbc.setState(0xdba, 0x59e7, 0x1b70, 0x1591, 0x994, 0x1091, 0x1, 0x1);
        gbc.writeMem(0xdba, { 0x76 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x59e7, gbc.sp());
        EXPECT(0xdbb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 76 0270
        gbc.setState(0x896f, 0xdf04, 0xc1b0, 0x1d28, 0x1181, 0xb8a0, 0x1, 0x0);
        gbc.writeMem(0x896f, { 0x76 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0xdf04, gbc.sp());
        EXPECT(0x8970, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x76, gbc.readMem(0x896f));
        // 76 0271
        gbc.setState(0x4925, 0x4798, 0xc20, 0xa0f5, 0x93b3, 0xc571, 0x0, 0x0);
        gbc.writeMem(0x4925, { 0x76 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x4798, gbc.sp());
        EXPECT(0x4926, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 76 0272
        gbc.setState(0x724e, 0xc4b5, 0x8450, 0x79e8, 0x19b7, 0xc5ae, 0x1, 0x1);
        gbc.writeMem(0x724e, { 0x76 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0xc4b5, gbc.sp());
        EXPECT(0x724f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 76 0273
        gbc.setState(0xaefc, 0xffda, 0x49c0, 0xecce, 0x635d, 0x6325, 0x1, 0x0);
        gbc.writeMem(0xaefc, { 0x76 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0xffda, gbc.sp());
        EXPECT(0xaefd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x76, gbc.readMem(0xaefc));
        // 76 0274
        gbc.setState(0xa595, 0x1c33, 0x3430, 0xe21d, 0x3d33, 0xd70b, 0x0, 0x0);
        gbc.writeMem(0xa595, { 0x76 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x1c33, gbc.sp());
        EXPECT(0xa596, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x76, gbc.readMem(0xa595));
        // 76 0276
        gbc.setState(0x36bf, 0x64a0, 0x2320, 0xf657, 0xc422, 0x406b, 0x1, 0x1);
        gbc.writeMem(0x36bf, { 0x76 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x64a0, gbc.sp());
        EXPECT(0x36c0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 76 0277
        gbc.setState(0x3860, 0x411e, 0xfe80, 0x5bbd, 0xdf22, 0xaf6b, 0x0, 0x1);
        gbc.writeMem(0x3860, { 0x76 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x411e, gbc.sp());
        EXPECT(0x3861, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 76 0278
        gbc.setState(0x9fa0, 0xe8f4, 0xe240, 0x88a3, 0x5d41, 0xe49b, 0x0, 0x1);
        gbc.writeMem(0x9fa0, { 0x76 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0xe8f4, gbc.sp());
        EXPECT(0x9fa1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x76, gbc.readMem(0x9fa0));
        // 76 0279
        gbc.setState(0x385b, 0xd529, 0x950, 0x3fd1, 0x77ae, 0x64fb, 0x0, 0x0);
        gbc.writeMem(0x385b, { 0x76 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0xd529, gbc.sp());
        EXPECT(0x385c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 76 027A
        gbc.setState(0x17bd, 0x1509, 0x6700, 0x807b, 0xb761, 0xcc29, 0x1, 0x1);
        gbc.writeMem(0x17bd, { 0x76 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x1509, gbc.sp());
        EXPECT(0x17be, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 76 027B
        gbc.setState(0x2e76, 0xb7d5, 0xf850, 0x31d2, 0xb5b7, 0x8731, 0x0, 0x1);
        gbc.writeMem(0x2e76, { 0x76 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0xb7d5, gbc.sp());
        EXPECT(0x2e77, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 76 027C
        gbc.setState(0xee84, 0x24ec, 0xcb10, 0x4cb5, 0x1307, 0x3925, 0x0, 0x1);
        gbc.writeMem(0xee84, { 0x76 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x24ec, gbc.sp());
        EXPECT(0xee85, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x76, gbc.readMem(0xee84));
        // 76 027D
        gbc.setState(0x437c, 0x6156, 0xca90, 0x4163, 0x15ea, 0x4a11, 0x0, 0x0);
        gbc.writeMem(0x437c, { 0x76 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x6156, gbc.sp());
        EXPECT(0x437d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 76 027E
        gbc.setState(0xc92a, 0x2a8d, 0x8370, 0x9d9a, 0x5775, 0x21e3, 0x0, 0x0);
        gbc.writeMem(0xc92a, { 0x76 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x2a8d, gbc.sp());
        EXPECT(0xc92b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x76, gbc.readMem(0xc92a));
        // 76 027F
        gbc.setState(0x1c34, 0x77d3, 0x5df0, 0x3b97, 0xee65, 0x5bcd, 0x1, 0x0);
        gbc.writeMem(0x1c34, { 0x76 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x77d3, gbc.sp());
        EXPECT(0x1c35, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 76 0281
        gbc.setState(0xb32, 0x97d4, 0xfb80, 0xf6c6, 0x29d4, 0xbd1f, 0x0, 0x0);
        gbc.writeMem(0xb32, { 0x76 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x97d4, gbc.sp());
        EXPECT(0xb33, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 76 0282
        gbc.setState(0xe1d9, 0x28f7, 0x4980, 0x880b, 0x7187, 0x5644, 0x0, 0x1);
        gbc.writeMem(0xe1d9, { 0x76 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x28f7, gbc.sp());
        EXPECT(0xe1da, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x76, gbc.readMem(0xe1d9));
        // 76 0283
        gbc.setState(0x7f3d, 0x3c8a, 0x4260, 0x9634, 0x66e4, 0xcda7, 0x1, 0x0);
        gbc.writeMem(0x7f3d, { 0x76 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x3c8a, gbc.sp());
        EXPECT(0x7f3e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 76 0284
        gbc.setState(0x3daa, 0xa27d, 0x61a0, 0x64f6, 0xdb04, 0xcda, 0x1, 0x1);
        gbc.writeMem(0x3daa, { 0x76 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0xa27d, gbc.sp());
        EXPECT(0x3dab, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 76 0285
        gbc.setState(0x346e, 0xa6cb, 0xb260, 0x5993, 0x107, 0xec2b, 0x0, 0x0);
        gbc.writeMem(0x346e, { 0x76 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0xa6cb, gbc.sp());
        EXPECT(0x346f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 76 0286
        gbc.setState(0x7b5b, 0x113, 0x7160, 0x125a, 0x3397, 0x3cae, 0x1, 0x0);
        gbc.writeMem(0x7b5b, { 0x76 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0x113, gbc.sp());
        EXPECT(0x7b5c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 76 0287
        gbc.setState(0x9922, 0xdd44, 0x2130, 0x5385, 0x29d9, 0x51fd, 0x0, 0x0);
        gbc.writeMem(0x9922, { 0x76 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0xdd44, gbc.sp());
        EXPECT(0x9923, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x76, gbc.readMem(0x9922));
        // 76 0288
        gbc.setState(0x4639, 0x5499, 0x3950, 0xe223, 0x676, 0xae5f, 0x1, 0x1);
        gbc.writeMem(0x4639, { 0x76 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x5499, gbc.sp());
        EXPECT(0x463a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 76 0289
        gbc.setState(0x4d56, 0x8f56, 0xd260, 0x9866, 0x4ca7, 0x8737, 0x0, 0x0);
        gbc.writeMem(0x4d56, { 0x76 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x8f56, gbc.sp());
        EXPECT(0x4d57, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 76 028A
        gbc.setState(0xbac7, 0x2c27, 0x9690, 0xdef6, 0x8ec4, 0xeb63, 0x1, 0x1);
        gbc.writeMem(0xbac7, { 0x76 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x2c27, gbc.sp());
        EXPECT(0xbac8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x76, gbc.readMem(0xbac7));
        // 76 028B
        gbc.setState(0x541b, 0x65e1, 0xe3e0, 0xa8f8, 0xe553, 0xe90a, 0x1, 0x0);
        gbc.writeMem(0x541b, { 0x76 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x65e1, gbc.sp());
        EXPECT(0x541c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 76 028C
        gbc.setState(0x64d6, 0x3bae, 0xf8d0, 0x954a, 0x89a3, 0x245c, 0x1, 0x1);
        gbc.writeMem(0x64d6, { 0x76 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x3bae, gbc.sp());
        EXPECT(0x64d7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 76 028E
        gbc.setState(0x8388, 0x93a, 0x7d10, 0x2bc5, 0x3906, 0x1e49, 0x1, 0x0);
        gbc.writeMem(0x8388, { 0x76 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x93a, gbc.sp());
        EXPECT(0x8389, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x76, gbc.readMem(0x8388));
        // 76 028F
        gbc.setState(0x4bba, 0xd50d, 0xa9a0, 0xd704, 0x7e72, 0x228a, 0x1, 0x0);
        gbc.writeMem(0x4bba, { 0x76 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0xd50d, gbc.sp());
        EXPECT(0x4bbb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 76 0290
        gbc.setState(0xfe4, 0xe90c, 0x6070, 0xe13c, 0xd0b9, 0x39e5, 0x1, 0x0);
        gbc.writeMem(0xfe4, { 0x76 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0xe90c, gbc.sp());
        EXPECT(0xfe5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 76 0291
        gbc.setState(0xdfa4, 0x96d2, 0x82b0, 0xb459, 0x81, 0xad07, 0x1, 0x1);
        gbc.writeMem(0xdfa4, { 0x76 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x96d2, gbc.sp());
        EXPECT(0xdfa5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x76, gbc.readMem(0xdfa4));
        // 76 0292
        gbc.setState(0x12bd, 0xcaa1, 0x8500, 0x58ea, 0x5188, 0x777, 0x0, 0x0);
        gbc.writeMem(0x12bd, { 0x76 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0xcaa1, gbc.sp());
        EXPECT(0x12be, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 76 0293
        gbc.setState(0x5b1a, 0x2137, 0x9110, 0xd2fb, 0x2658, 0x70a0, 0x0, 0x0);
        gbc.writeMem(0x5b1a, { 0x76 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x2137, gbc.sp());
        EXPECT(0x5b1b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 76 0294
        gbc.setState(0x5643, 0xe925, 0x4b90, 0x2932, 0x69de, 0xf931, 0x1, 0x1);
        gbc.writeMem(0x5643, { 0x76 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0xe925, gbc.sp());
        EXPECT(0x5644, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 76 0295
        gbc.setState(0xa4f, 0xd51, 0xea10, 0x7b40, 0x17f8, 0x3fe1, 0x1, 0x0);
        gbc.writeMem(0xa4f, { 0x76 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0xd51, gbc.sp());
        EXPECT(0xa50, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 76 0296
        gbc.setState(0x64ee, 0xef9b, 0x9aa0, 0x4e15, 0xb17e, 0x7d9f, 0x0, 0x1);
        gbc.writeMem(0x64ee, { 0x76 });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0xef9b, gbc.sp());
        EXPECT(0x64ef, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 76 0297
        gbc.setState(0xac64, 0x3182, 0xae40, 0xd28, 0x8e12, 0x123, 0x1, 0x1);
        gbc.writeMem(0xac64, { 0x76 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x3182, gbc.sp());
        EXPECT(0xac65, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x76, gbc.readMem(0xac64));
        // 76 0298
        gbc.setState(0xbb13, 0x2819, 0x9870, 0x8b0f, 0x5ff6, 0x213e, 0x1, 0x0);
        gbc.writeMem(0xbb13, { 0x76 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x2819, gbc.sp());
        EXPECT(0xbb14, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x76, gbc.readMem(0xbb13));
        // 76 029A
        gbc.setState(0x7289, 0x8c6, 0x8600, 0x7931, 0x1c9a, 0x8ae6, 0x1, 0x1);
        gbc.writeMem(0x7289, { 0x76 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x8c6, gbc.sp());
        EXPECT(0x728a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 76 029B
        gbc.setState(0xb204, 0x252e, 0x2940, 0x62f, 0xc399, 0x988e, 0x1, 0x1);
        gbc.writeMem(0xb204, { 0x76 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x252e, gbc.sp());
        EXPECT(0xb205, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x76, gbc.readMem(0xb204));
        // 76 029C
        gbc.setState(0x5b8, 0x651d, 0x2340, 0x996a, 0x9a92, 0x58f3, 0x1, 0x1);
        gbc.writeMem(0x5b8, { 0x76 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x651d, gbc.sp());
        EXPECT(0x5b9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 76 029D
        gbc.setState(0x9301, 0xaeee, 0xb860, 0xb66c, 0x1be3, 0x88be, 0x1, 0x1);
        gbc.writeMem(0x9301, { 0x76 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0xaeee, gbc.sp());
        EXPECT(0x9302, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x76, gbc.readMem(0x9301));
        // 76 029E
        gbc.setState(0x8dd5, 0x6007, 0xf750, 0xe50f, 0x64cf, 0xd043, 0x0, 0x1);
        gbc.writeMem(0x8dd5, { 0x76 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x6007, gbc.sp());
        EXPECT(0x8dd6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x76, gbc.readMem(0x8dd5));
        // 76 029F
        gbc.setState(0x1c56, 0xe0e8, 0x1530, 0xe205, 0xb295, 0x94d9, 0x0, 0x1);
        gbc.writeMem(0x1c56, { 0x76 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0xe0e8, gbc.sp());
        EXPECT(0x1c57, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 76 02A0
        gbc.setState(0x188, 0x55d2, 0xc80, 0x2629, 0x4ac9, 0x79ee, 0x0, 0x1);
        gbc.writeMem(0x188, { 0x76 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x55d2, gbc.sp());
        EXPECT(0x189, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 76 02A1
        gbc.setState(0xad99, 0x6e1b, 0xda30, 0xe6b4, 0xbe27, 0x599e, 0x0, 0x0);
        gbc.writeMem(0xad99, { 0x76 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x6e1b, gbc.sp());
        EXPECT(0xad9a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x76, gbc.readMem(0xad99));
        // 76 02A2
        gbc.setState(0x720a, 0xd78a, 0xf70, 0x9a93, 0xbbc, 0xab7e, 0x1, 0x0);
        gbc.writeMem(0x720a, { 0x76 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0xd78a, gbc.sp());
        EXPECT(0x720b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 76 02A3
        gbc.setState(0xeaf2, 0x21c6, 0x7770, 0xa8a7, 0xc70f, 0x61f2, 0x1, 0x1);
        gbc.writeMem(0xeaf2, { 0x76 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x21c6, gbc.sp());
        EXPECT(0xeaf3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x76, gbc.readMem(0xeaf2));
        // 76 02A4
        gbc.setState(0x6156, 0x3e9b, 0xad70, 0xb6ea, 0x9997, 0x4872, 0x0, 0x1);
        gbc.writeMem(0x6156, { 0x76 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x3e9b, gbc.sp());
        EXPECT(0x6157, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 76 02A5
        gbc.setState(0xc75f, 0xd85, 0xf400, 0x3e81, 0x8df8, 0xf663, 0x1, 0x0);
        gbc.writeMem(0xc75f, { 0x76 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0xd85, gbc.sp());
        EXPECT(0xc760, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x76, gbc.readMem(0xc75f));
        // 76 02A6
        gbc.setState(0x9158, 0xe19d, 0x6a0, 0x4ce, 0x9187, 0xab45, 0x0, 0x0);
        gbc.writeMem(0x9158, { 0x76 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0xe19d, gbc.sp());
        EXPECT(0x9159, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x76, gbc.readMem(0x9158));
        // 76 02A7
        gbc.setState(0x40fc, 0xd6c9, 0xc4e0, 0xfbd0, 0xce0d, 0x2b6f, 0x1, 0x0);
        gbc.writeMem(0x40fc, { 0x76 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0xd6c9, gbc.sp());
        EXPECT(0x40fd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 76 02A8
        gbc.setState(0xb5d8, 0xfb68, 0x2220, 0x95e1, 0x93d4, 0x2aeb, 0x0, 0x1);
        gbc.writeMem(0xb5d8, { 0x76 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0xfb68, gbc.sp());
        EXPECT(0xb5d9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x76, gbc.readMem(0xb5d8));
        // 76 02A9
        gbc.setState(0xcac, 0xd321, 0xce80, 0xf019, 0x4841, 0x4496, 0x0, 0x1);
        gbc.writeMem(0xcac, { 0x76 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0xd321, gbc.sp());
        EXPECT(0xcad, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 76 02AA
        gbc.setState(0x46af, 0x2283, 0xa830, 0x9316, 0xefd9, 0xe48c, 0x0, 0x1);
        gbc.writeMem(0x46af, { 0x76 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x2283, gbc.sp());
        EXPECT(0x46b0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 76 02AB
        gbc.setState(0x3521, 0xe7eb, 0xf4f0, 0x6c52, 0xbfca, 0x7fa0, 0x0, 0x1);
        gbc.writeMem(0x3521, { 0x76 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0xe7eb, gbc.sp());
        EXPECT(0x3522, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 76 02AC
        gbc.setState(0x340d, 0xb8c1, 0x9b0, 0x3560, 0xe11d, 0x48d3, 0x0, 0x1);
        gbc.writeMem(0x340d, { 0x76 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0xb8c1, gbc.sp());
        EXPECT(0x340e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 76 02AD
        gbc.setState(0x889c, 0x6556, 0x4ca0, 0x2442, 0xc4e8, 0xf6eb, 0x0, 0x0);
        gbc.writeMem(0x889c, { 0x76 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x6556, gbc.sp());
        EXPECT(0x889d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x76, gbc.readMem(0x889c));
        // 76 02AE
        gbc.setState(0x9bf2, 0xef2c, 0x7d60, 0x22e6, 0x8078, 0x36a, 0x0, 0x0);
        gbc.writeMem(0x9bf2, { 0x76 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0xef2c, gbc.sp());
        EXPECT(0x9bf3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x76, gbc.readMem(0x9bf2));
        // 76 02B0
        gbc.setState(0x6a19, 0x9cef, 0x1bb0, 0x5b63, 0x67ed, 0xf118, 0x1, 0x0);
        gbc.writeMem(0x6a19, { 0x76 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x9cef, gbc.sp());
        EXPECT(0x6a1a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 76 02B1
        gbc.setState(0x6efd, 0xe592, 0x8060, 0xaba, 0xa722, 0x29a3, 0x0, 0x0);
        gbc.writeMem(0x6efd, { 0x76 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0xe592, gbc.sp());
        EXPECT(0x6efe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 76 02B2
        gbc.setState(0xc6b, 0xb3cc, 0x85c0, 0x7c0, 0xa9f, 0xa438, 0x0, 0x1);
        gbc.writeMem(0xc6b, { 0x76 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0xb3cc, gbc.sp());
        EXPECT(0xc6c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 76 02B3
        gbc.setState(0x6d68, 0x7e33, 0xb2f0, 0xf74, 0xddeb, 0x34da, 0x1, 0x0);
        gbc.writeMem(0x6d68, { 0x76 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x7e33, gbc.sp());
        EXPECT(0x6d69, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 76 02B4
        gbc.setState(0xb03b, 0x6c5a, 0x22d0, 0x7d90, 0x421c, 0xac9a, 0x0, 0x1);
        gbc.writeMem(0xb03b, { 0x76 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x6c5a, gbc.sp());
        EXPECT(0xb03c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x76, gbc.readMem(0xb03b));
        // 76 02B5
        gbc.setState(0x9f47, 0xdb7, 0xfd40, 0xf5da, 0xee96, 0xbbf7, 0x0, 0x0);
        gbc.writeMem(0x9f47, { 0x76 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0xdb7, gbc.sp());
        EXPECT(0x9f48, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x76, gbc.readMem(0x9f47));
        // 76 02B6
        gbc.setState(0x5d99, 0xc4d8, 0x5fb0, 0x1602, 0xfb57, 0xecf1, 0x0, 0x1);
        gbc.writeMem(0x5d99, { 0x76 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0xc4d8, gbc.sp());
        EXPECT(0x5d9a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 76 02B8
        gbc.setState(0xbca9, 0x5662, 0xb500, 0x67d6, 0xb85a, 0x7b14, 0x0, 0x0);
        gbc.writeMem(0xbca9, { 0x76 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x5662, gbc.sp());
        EXPECT(0xbcaa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x76, gbc.readMem(0xbca9));
        // 76 02B9
        gbc.setState(0xe1d5, 0x97f9, 0x8290, 0x494, 0x5b97, 0x4b04, 0x1, 0x1);
        gbc.writeMem(0xe1d5, { 0x76 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x97f9, gbc.sp());
        EXPECT(0xe1d6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x76, gbc.readMem(0xe1d5));
        // 76 02BA
        gbc.setState(0x24c1, 0xb082, 0x7d50, 0x9059, 0x913b, 0x276e, 0x0, 0x0);
        gbc.writeMem(0x24c1, { 0x76 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0xb082, gbc.sp());
        EXPECT(0x24c2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 76 02BB
        gbc.setState(0x6fd8, 0x27d5, 0x5350, 0x3999, 0x4f89, 0x2b4c, 0x0, 0x1);
        gbc.writeMem(0x6fd8, { 0x76 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x27d5, gbc.sp());
        EXPECT(0x6fd9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 76 02BC
        gbc.setState(0x9e81, 0xc976, 0x8ae0, 0xe798, 0xa4c6, 0x1cff, 0x0, 0x1);
        gbc.writeMem(0x9e81, { 0x76 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0xc976, gbc.sp());
        EXPECT(0x9e82, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x76, gbc.readMem(0x9e81));
        // 76 02BD
        gbc.setState(0x61cf, 0x1fc0, 0xe290, 0xd372, 0x1720, 0x8ca6, 0x1, 0x0);
        gbc.writeMem(0x61cf, { 0x76 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x1fc0, gbc.sp());
        EXPECT(0x61d0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 76 02BE
        gbc.setState(0xe27e, 0xa23d, 0xc960, 0x59c2, 0xc77a, 0x83ea, 0x0, 0x1);
        gbc.writeMem(0xe27e, { 0x76 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0xa23d, gbc.sp());
        EXPECT(0xe27f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x76, gbc.readMem(0xe27e));
        // 76 02BF
        gbc.setState(0x31f2, 0x97dd, 0x5d00, 0x6f06, 0xd07c, 0x9825, 0x0, 0x1);
        gbc.writeMem(0x31f2, { 0x76 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x97dd, gbc.sp());
        EXPECT(0x31f3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 76 02C0
        gbc.setState(0xc361, 0x4938, 0x54f0, 0x7015, 0x65fa, 0x8613, 0x1, 0x0);
        gbc.writeMem(0xc361, { 0x76 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x4938, gbc.sp());
        EXPECT(0xc362, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x76, gbc.readMem(0xc361));
        // 76 02C1
        gbc.setState(0x3b1, 0x702d, 0xa9f0, 0x7903, 0x31e1, 0xc3a0, 0x1, 0x0);
        gbc.writeMem(0x3b1, { 0x76 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x702d, gbc.sp());
        EXPECT(0x3b2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 76 02C2
        gbc.setState(0xc93f, 0x487, 0x59d0, 0x6f1d, 0x4464, 0xf7b6, 0x1, 0x0);
        gbc.writeMem(0xc93f, { 0x76 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x487, gbc.sp());
        EXPECT(0xc940, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x76, gbc.readMem(0xc93f));
        // 76 02C3
        gbc.setState(0x256, 0xa32a, 0x14e0, 0xabb8, 0x67e3, 0x602a, 0x1, 0x1);
        gbc.writeMem(0x256, { 0x76 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0xa32a, gbc.sp());
        EXPECT(0x257, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 76 02C4
        gbc.setState(0xbf65, 0xfad1, 0x5ed0, 0xdde6, 0x4e98, 0x71a6, 0x0, 0x0);
        gbc.writeMem(0xbf65, { 0x76 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0xfad1, gbc.sp());
        EXPECT(0xbf66, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x76, gbc.readMem(0xbf65));
        // 76 02C5
        gbc.setState(0x48dc, 0x6915, 0x1960, 0x3f59, 0xce91, 0x11d8, 0x1, 0x1);
        gbc.writeMem(0x48dc, { 0x76 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x6915, gbc.sp());
        EXPECT(0x48dd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 76 02C6
        gbc.setState(0x68be, 0xdc08, 0x72b0, 0x9680, 0xe4f4, 0xb40f, 0x1, 0x0);
        gbc.writeMem(0x68be, { 0x76 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0xdc08, gbc.sp());
        EXPECT(0x68bf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 76 02C7
        gbc.setState(0x1df9, 0x5a18, 0xc880, 0xcd6e, 0x165b, 0x47be, 0x1, 0x1);
        gbc.writeMem(0x1df9, { 0x76 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0x5a18, gbc.sp());
        EXPECT(0x1dfa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 76 02C8
        gbc.setState(0x4a01, 0x4bda, 0x5120, 0xb4da, 0x1f27, 0x30e9, 0x0, 0x1);
        gbc.writeMem(0x4a01, { 0x76 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x4bda, gbc.sp());
        EXPECT(0x4a02, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 76 02C9
        gbc.setState(0x8bf3, 0xbb33, 0x7400, 0xfe57, 0xc4de, 0x49be, 0x1, 0x1);
        gbc.writeMem(0x8bf3, { 0x76 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0xbb33, gbc.sp());
        EXPECT(0x8bf4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x76, gbc.readMem(0x8bf3));
        // 76 02CA
        gbc.setState(0x91b9, 0x492, 0x6b60, 0x13d, 0x9517, 0xaeb9, 0x1, 0x1);
        gbc.writeMem(0x91b9, { 0x76 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x492, gbc.sp());
        EXPECT(0x91ba, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x76, gbc.readMem(0x91b9));
        // 76 02CB
        gbc.setState(0xa265, 0x3558, 0x4370, 0x2f16, 0x7434, 0x1f47, 0x0, 0x1);
        gbc.writeMem(0xa265, { 0x76 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x3558, gbc.sp());
        EXPECT(0xa266, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x76, gbc.readMem(0xa265));
        // 76 02CC
        gbc.setState(0x2591, 0x527, 0x100, 0xed0c, 0x9adc, 0xe7d2, 0x1, 0x1);
        gbc.writeMem(0x2591, { 0x76 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x527, gbc.sp());
        EXPECT(0x2592, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 76 02CD
        gbc.setState(0xa2cf, 0xc2ed, 0x7ef0, 0xcf08, 0xb649, 0x7f6b, 0x0, 0x0);
        gbc.writeMem(0xa2cf, { 0x76 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0xc2ed, gbc.sp());
        EXPECT(0xa2d0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x76, gbc.readMem(0xa2cf));
        // 76 02CE
        gbc.setState(0x1c43, 0x63ae, 0x3010, 0x975b, 0x3e72, 0xfd98, 0x0, 0x1);
        gbc.writeMem(0x1c43, { 0x76 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x63ae, gbc.sp());
        EXPECT(0x1c44, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 76 02CF
        gbc.setState(0x49e8, 0x9b5f, 0xfcf0, 0x984f, 0x5997, 0x9f13, 0x1, 0x0);
        gbc.writeMem(0x49e8, { 0x76 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x9b5f, gbc.sp());
        EXPECT(0x49e9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 76 02D0
        gbc.setState(0x8d7e, 0x532b, 0x9670, 0x317a, 0xbf77, 0xa409, 0x0, 0x1);
        gbc.writeMem(0x8d7e, { 0x76 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x532b, gbc.sp());
        EXPECT(0x8d7f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x76, gbc.readMem(0x8d7e));
        // 76 02D1
        gbc.setState(0xca52, 0xb5d2, 0xe450, 0x6c68, 0x60e, 0xd607, 0x1, 0x0);
        gbc.writeMem(0xca52, { 0x76 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0xb5d2, gbc.sp());
        EXPECT(0xca53, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x76, gbc.readMem(0xca52));
        // 76 02D2
        gbc.setState(0xd4ab, 0x1902, 0xd920, 0xc03e, 0x3092, 0x85e7, 0x0, 0x0);
        gbc.writeMem(0xd4ab, { 0x76 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x1902, gbc.sp());
        EXPECT(0xd4ac, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x76, gbc.readMem(0xd4ab));
        // 76 02D3
        gbc.setState(0x456a, 0x60aa, 0xb40, 0xa822, 0xb199, 0xa70e, 0x0, 0x0);
        gbc.writeMem(0x456a, { 0x76 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x60aa, gbc.sp());
        EXPECT(0x456b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 76 02D4
        gbc.setState(0x58b1, 0x4fca, 0x78a0, 0x3b56, 0x610a, 0xe8eb, 0x1, 0x0);
        gbc.writeMem(0x58b1, { 0x76 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x4fca, gbc.sp());
        EXPECT(0x58b2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 76 02D6
        gbc.setState(0x4fdb, 0x73a7, 0x7eb0, 0x613a, 0xf22f, 0xdfc8, 0x1, 0x0);
        gbc.writeMem(0x4fdb, { 0x76 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x73a7, gbc.sp());
        EXPECT(0x4fdc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 76 02D7
        gbc.setState(0xef18, 0xc2ef, 0x8410, 0x35fc, 0x7f02, 0x1a16, 0x0, 0x1);
        gbc.writeMem(0xef18, { 0x76 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0xc2ef, gbc.sp());
        EXPECT(0xef19, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x76, gbc.readMem(0xef18));
        // 76 02D8
        gbc.setState(0x6cd8, 0x3030, 0xad40, 0x72be, 0x2fef, 0x6af4, 0x0, 0x0);
        gbc.writeMem(0x6cd8, { 0x76 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x3030, gbc.sp());
        EXPECT(0x6cd9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 76 02D9
        gbc.setState(0x6388, 0x7fc6, 0xe670, 0x4c74, 0xfb33, 0x8406, 0x1, 0x1);
        gbc.writeMem(0x6388, { 0x76 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x7fc6, gbc.sp());
        EXPECT(0x6389, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 76 02DA
        gbc.setState(0xd35b, 0xfa12, 0xc580, 0xcedc, 0x10d5, 0x78b8, 0x1, 0x0);
        gbc.writeMem(0xd35b, { 0x76 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0xfa12, gbc.sp());
        EXPECT(0xd35c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x76, gbc.readMem(0xd35b));
        // 76 02DB
        gbc.setState(0xa786, 0x2dd5, 0x6ed0, 0x4ea3, 0x4987, 0x7754, 0x0, 0x1);
        gbc.writeMem(0xa786, { 0x76 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x2dd5, gbc.sp());
        EXPECT(0xa787, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x76, gbc.readMem(0xa786));
        // 76 02DC
        gbc.setState(0x6292, 0x990a, 0x4770, 0xe8da, 0xf4ce, 0xfd87, 0x0, 0x1);
        gbc.writeMem(0x6292, { 0x76 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x990a, gbc.sp());
        EXPECT(0x6293, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 76 02DD
        gbc.setState(0x92f7, 0x69fb, 0xff40, 0x399b, 0xde69, 0xd819, 0x1, 0x1);
        gbc.writeMem(0x92f7, { 0x76 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x69fb, gbc.sp());
        EXPECT(0x92f8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x76, gbc.readMem(0x92f7));
        // 76 02DE
        gbc.setState(0xb109, 0xb7a1, 0xc8e0, 0x2e5c, 0xb21f, 0x7273, 0x1, 0x0);
        gbc.writeMem(0xb109, { 0x76 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0xb7a1, gbc.sp());
        EXPECT(0xb10a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x76, gbc.readMem(0xb109));
        // 76 02DF
        gbc.setState(0x577e, 0x7bf7, 0x3810, 0x8264, 0xe006, 0x7b5, 0x1, 0x1);
        gbc.writeMem(0x577e, { 0x76 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x7bf7, gbc.sp());
        EXPECT(0x577f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 76 02E0
        gbc.setState(0x14da, 0x2e2d, 0xb800, 0x3e52, 0x8851, 0xd8c6, 0x1, 0x0);
        gbc.writeMem(0x14da, { 0x76 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x2e2d, gbc.sp());
        EXPECT(0x14db, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 76 02E1
        gbc.setState(0xd7b, 0xa476, 0xc420, 0x675b, 0x2259, 0x7e68, 0x0, 0x1);
        gbc.writeMem(0xd7b, { 0x76 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0xa476, gbc.sp());
        EXPECT(0xd7c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 76 02E2
        gbc.setState(0xcbba, 0xdf5b, 0xdeb0, 0x1c38, 0x74dc, 0x189b, 0x0, 0x0);
        gbc.writeMem(0xcbba, { 0x76 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0xdf5b, gbc.sp());
        EXPECT(0xcbbb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x76, gbc.readMem(0xcbba));
        // 76 02E3
        gbc.setState(0x495a, 0x64e1, 0x3600, 0x98eb, 0xa376, 0x1012, 0x0, 0x0);
        gbc.writeMem(0x495a, { 0x76 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x64e1, gbc.sp());
        EXPECT(0x495b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 76 02E4
        gbc.setState(0xbf4a, 0xd477, 0x6cd0, 0x5ce2, 0xa88e, 0x6ca4, 0x1, 0x0);
        gbc.writeMem(0xbf4a, { 0x76 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0xd477, gbc.sp());
        EXPECT(0xbf4b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x76, gbc.readMem(0xbf4a));
        // 76 02E5
        gbc.setState(0xeb08, 0xb700, 0xf210, 0xcd89, 0x7a12, 0x8c43, 0x1, 0x0);
        gbc.writeMem(0xeb08, { 0x76 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0xb700, gbc.sp());
        EXPECT(0xeb09, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x76, gbc.readMem(0xeb08));
        // 76 02E6
        gbc.setState(0x97c1, 0xf706, 0x66c0, 0x267, 0xb7e7, 0x697, 0x1, 0x1);
        gbc.writeMem(0x97c1, { 0x76 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0xf706, gbc.sp());
        EXPECT(0x97c2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x76, gbc.readMem(0x97c1));
        // 76 02E7
        gbc.setState(0x69d8, 0xcc5, 0x1b40, 0x9cfe, 0xfe78, 0x94a6, 0x1, 0x0);
        gbc.writeMem(0x69d8, { 0x76 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0xcc5, gbc.sp());
        EXPECT(0x69d9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 76 02E8
        gbc.setState(0x253d, 0x3a88, 0x7510, 0xaada, 0x153d, 0x142, 0x1, 0x0);
        gbc.writeMem(0x253d, { 0x76 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x3a88, gbc.sp());
        EXPECT(0x253e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 76 02E9
        gbc.setState(0x40d7, 0x717c, 0x1310, 0x3f79, 0x7c27, 0xfcac, 0x0, 0x0);
        gbc.writeMem(0x40d7, { 0x76 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x717c, gbc.sp());
        EXPECT(0x40d8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 76 02EA
        gbc.setState(0xdb85, 0xfe74, 0xfb0, 0x87d8, 0x1eb, 0xa7ae, 0x0, 0x1);
        gbc.writeMem(0xdb85, { 0x76 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0xfe74, gbc.sp());
        EXPECT(0xdb86, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x76, gbc.readMem(0xdb85));
        // 76 02EB
        gbc.setState(0xd93a, 0xf451, 0x1c60, 0x3124, 0x9b29, 0xf22b, 0x1, 0x1);
        gbc.writeMem(0xd93a, { 0x76 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0xf451, gbc.sp());
        EXPECT(0xd93b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x76, gbc.readMem(0xd93a));
        // 76 02EC
        gbc.setState(0x3736, 0xc388, 0x37f0, 0xf2b0, 0xa0a7, 0x5e20, 0x0, 0x1);
        gbc.writeMem(0x3736, { 0x76 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0xc388, gbc.sp());
        EXPECT(0x3737, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 76 02ED
        gbc.setState(0x745f, 0x619, 0x79a0, 0x9314, 0x644f, 0x8775, 0x0, 0x1);
        gbc.writeMem(0x745f, { 0x76 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x619, gbc.sp());
        EXPECT(0x7460, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 76 02EE
        gbc.setState(0x6166, 0xff44, 0x9a30, 0x7f0a, 0x198b, 0xa1f, 0x1, 0x1);
        gbc.writeMem(0x6166, { 0x76 });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0xff44, gbc.sp());
        EXPECT(0x6167, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 76 02EF
        gbc.setState(0xb023, 0xa63a, 0xc7e0, 0xe01e, 0x6775, 0x16b, 0x1, 0x0);
        gbc.writeMem(0xb023, { 0x76 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0xa63a, gbc.sp());
        EXPECT(0xb024, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x76, gbc.readMem(0xb023));
        // 76 02F0
        gbc.setState(0x7884, 0x9a57, 0xe6d0, 0x41f9, 0x9afe, 0xd491, 0x0, 0x0);
        gbc.writeMem(0x7884, { 0x76 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x9a57, gbc.sp());
        EXPECT(0x7885, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 76 02F1
        gbc.setState(0x7648, 0xf204, 0x3f60, 0x7c5, 0xade1, 0xc35d, 0x0, 0x1);
        gbc.writeMem(0x7648, { 0x76 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0xf204, gbc.sp());
        EXPECT(0x7649, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 76 02F2
        gbc.setState(0xaaca, 0x735c, 0x4aa0, 0xc226, 0x2ae2, 0x8cd2, 0x0, 0x0);
        gbc.writeMem(0xaaca, { 0x76 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x735c, gbc.sp());
        EXPECT(0xaacb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x76, gbc.readMem(0xaaca));
        // 76 02F3
        gbc.setState(0xb0c, 0x307e, 0x8d90, 0x8b16, 0xe0cd, 0x4a38, 0x0, 0x0);
        gbc.writeMem(0xb0c, { 0x76 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x307e, gbc.sp());
        EXPECT(0xb0d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 76 02F4
        gbc.setState(0xa660, 0x1213, 0xa760, 0xd35f, 0x6c66, 0x90da, 0x0, 0x1);
        gbc.writeMem(0xa660, { 0x76 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x1213, gbc.sp());
        EXPECT(0xa661, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x76, gbc.readMem(0xa660));
        // 76 02F5
        gbc.setState(0xba00, 0x2d48, 0x11b0, 0xa502, 0x9403, 0x99b5, 0x0, 0x0);
        gbc.writeMem(0xba00, { 0x76 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x2d48, gbc.sp());
        EXPECT(0xba01, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x76, gbc.readMem(0xba00));
        // 76 02F6
        gbc.setState(0xb500, 0x744, 0x7e90, 0x2636, 0x31fb, 0x2104, 0x1, 0x0);
        gbc.writeMem(0xb500, { 0x76 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x744, gbc.sp());
        EXPECT(0xb501, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x76, gbc.readMem(0xb500));
        // 76 02F7
        gbc.setState(0xa1d9, 0x4b2a, 0xa900, 0xe9eb, 0xe77c, 0x58d6, 0x0, 0x0);
        gbc.writeMem(0xa1d9, { 0x76 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x4b2a, gbc.sp());
        EXPECT(0xa1da, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x76, gbc.readMem(0xa1d9));
        // 76 02F8
        gbc.setState(0x4da8, 0x81b0, 0x38f0, 0x257f, 0x14f1, 0x3b9, 0x1, 0x0);
        gbc.writeMem(0x4da8, { 0x76 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x81b0, gbc.sp());
        EXPECT(0x4da9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 76 02F9
        gbc.setState(0x2047, 0xfbdc, 0x9230, 0x5569, 0x5241, 0xd17a, 0x1, 0x1);
        gbc.writeMem(0x2047, { 0x76 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0xfbdc, gbc.sp());
        EXPECT(0x2048, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 76 02FA
        gbc.setState(0xcf44, 0x9b4b, 0xb50, 0x12c9, 0xe44f, 0x45dd, 0x1, 0x1);
        gbc.writeMem(0xcf44, { 0x76 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x9b4b, gbc.sp());
        EXPECT(0xcf45, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x76, gbc.readMem(0xcf44));
        // 76 02FB
        gbc.setState(0x6420, 0x2217, 0xf650, 0x27d2, 0x2325, 0xd694, 0x1, 0x1);
        gbc.writeMem(0x6420, { 0x76 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x2217, gbc.sp());
        EXPECT(0x6421, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 76 02FC
        gbc.setState(0x64f, 0x2f3, 0xa030, 0x8738, 0xb8ae, 0x4f49, 0x0, 0x0);
        gbc.writeMem(0x64f, { 0x76 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x2f3, gbc.sp());
        EXPECT(0x650, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 76 02FD
        gbc.setState(0x3530, 0x9dd3, 0x5270, 0xad8f, 0x52cf, 0x663d, 0x1, 0x0);
        gbc.writeMem(0x3530, { 0x76 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x9dd3, gbc.sp());
        EXPECT(0x3531, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 76 02FE
        gbc.setState(0xcce5, 0xf19a, 0xa2f0, 0xad15, 0xcfc1, 0xc2c2, 0x1, 0x1);
        gbc.writeMem(0xcce5, { 0x76 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0xf19a, gbc.sp());
        EXPECT(0xcce6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x76, gbc.readMem(0xcce5));
        // 76 02FF
        gbc.setState(0x4aec, 0x4071, 0x2c80, 0x884f, 0xdb48, 0xcc3f, 0x1, 0x0);
        gbc.writeMem(0x4aec, { 0x76 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0x4071, gbc.sp());
        EXPECT(0x4aed, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 76 0300
        gbc.setState(0x3256, 0x370, 0x8890, 0x780f, 0xabe8, 0x476e, 0x1, 0x0);
        gbc.writeMem(0x3256, { 0x76 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x370, gbc.sp());
        EXPECT(0x3257, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 76 0301
        gbc.setState(0x6d6, 0xe1fa, 0xfab0, 0xe3e4, 0x6999, 0x6693, 0x0, 0x1);
        gbc.writeMem(0x6d6, { 0x76 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0xe1fa, gbc.sp());
        EXPECT(0x6d7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 76 0302
        gbc.setState(0xa9ea, 0xad04, 0x5310, 0xc0de, 0x7160, 0xa564, 0x1, 0x1);
        gbc.writeMem(0xa9ea, { 0x76 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0xad04, gbc.sp());
        EXPECT(0xa9eb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x76, gbc.readMem(0xa9ea));
        // 76 0303
        gbc.setState(0x2a67, 0xc493, 0x60e0, 0x825f, 0x6646, 0xa5f, 0x0, 0x0);
        gbc.writeMem(0x2a67, { 0x76 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0xc493, gbc.sp());
        EXPECT(0x2a68, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 76 0304
        gbc.setState(0x81, 0xe42c, 0xfcc0, 0x30e1, 0xb61b, 0x59ea, 0x0, 0x1);
        gbc.writeMem(0x81, { 0x76 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0xe42c, gbc.sp());
        EXPECT(0x82, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 76 0305
        gbc.setState(0xc46b, 0x1e68, 0x3ec0, 0xe332, 0xe175, 0x9a4, 0x0, 0x1);
        gbc.writeMem(0xc46b, { 0x76 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x1e68, gbc.sp());
        EXPECT(0xc46c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x76, gbc.readMem(0xc46b));
        // 76 0306
        gbc.setState(0x6b81, 0x295f, 0xe3c0, 0xa389, 0x2ab9, 0x103a, 0x0, 0x1);
        gbc.writeMem(0x6b81, { 0x76 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x295f, gbc.sp());
        EXPECT(0x6b82, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 76 0307
        gbc.setState(0x381d, 0x9c66, 0x4910, 0x976f, 0x898, 0x69e4, 0x1, 0x1);
        gbc.writeMem(0x381d, { 0x76 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x9c66, gbc.sp());
        EXPECT(0x381e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 76 0308
        gbc.setState(0xc968, 0xd521, 0xa3a0, 0xa0d6, 0x3560, 0xf35a, 0x0, 0x0);
        gbc.writeMem(0xc968, { 0x76 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0xd521, gbc.sp());
        EXPECT(0xc969, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x76, gbc.readMem(0xc968));
        // 76 0309
        gbc.setState(0x15d7, 0x6442, 0xfd40, 0x8496, 0x2004, 0xad35, 0x0, 0x1);
        gbc.writeMem(0x15d7, { 0x76 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x6442, gbc.sp());
        EXPECT(0x15d8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 76 030A
        gbc.setState(0x8c54, 0xaff1, 0x3a00, 0xbd4d, 0xa53, 0x2060, 0x0, 0x1);
        gbc.writeMem(0x8c54, { 0x76 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0xaff1, gbc.sp());
        EXPECT(0x8c55, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x76, gbc.readMem(0x8c54));
        // 76 030B
        gbc.setState(0x8639, 0x51b0, 0x9f10, 0x811d, 0x124b, 0x1682, 0x0, 0x0);
        gbc.writeMem(0x8639, { 0x76 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x51b0, gbc.sp());
        EXPECT(0x863a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x76, gbc.readMem(0x8639));
        // 76 030C
        gbc.setState(0x3c71, 0x6660, 0x48f0, 0xabd9, 0x5655, 0x6ab8, 0x1, 0x1);
        gbc.writeMem(0x3c71, { 0x76 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x6660, gbc.sp());
        EXPECT(0x3c72, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 76 030D
        gbc.setState(0x53c9, 0x5e42, 0x82b0, 0x76d, 0x9218, 0x6f15, 0x1, 0x1);
        gbc.writeMem(0x53c9, { 0x76 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x5e42, gbc.sp());
        EXPECT(0x53ca, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 76 030E
        gbc.setState(0xcfba, 0xed20, 0x4880, 0x6f31, 0xc4ae, 0x5c0b, 0x1, 0x1);
        gbc.writeMem(0xcfba, { 0x76 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0xed20, gbc.sp());
        EXPECT(0xcfbb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x76, gbc.readMem(0xcfba));
        // 76 030F
        gbc.setState(0xee80, 0xb6f8, 0x6340, 0x9f7d, 0x6771, 0x74e9, 0x1, 0x0);
        gbc.writeMem(0xee80, { 0x76 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0xb6f8, gbc.sp());
        EXPECT(0xee81, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x76, gbc.readMem(0xee80));
        // 76 0310
        gbc.setState(0x6ae1, 0x29fe, 0xcda0, 0x3450, 0x48e1, 0xdd, 0x0, 0x0);
        gbc.writeMem(0x6ae1, { 0x76 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x29fe, gbc.sp());
        EXPECT(0x6ae2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 76 0311
        gbc.setState(0xdc15, 0x9e48, 0xc930, 0xa47e, 0xb92f, 0xd1a, 0x0, 0x1);
        gbc.writeMem(0xdc15, { 0x76 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x9e48, gbc.sp());
        EXPECT(0xdc16, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x76, gbc.readMem(0xdc15));
        // 76 0312
        gbc.setState(0x1dde, 0xc61d, 0x62a0, 0x7d3a, 0xec59, 0xdaa3, 0x0, 0x0);
        gbc.writeMem(0x1dde, { 0x76 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0xc61d, gbc.sp());
        EXPECT(0x1ddf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 76 0313
        gbc.setState(0x1295, 0xf158, 0x9aa0, 0xf007, 0x7229, 0x9e97, 0x1, 0x0);
        gbc.writeMem(0x1295, { 0x76 });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0xf158, gbc.sp());
        EXPECT(0x1296, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 76 0314
        gbc.setState(0xaba4, 0xbba9, 0x5d00, 0x242b, 0xd7d6, 0xd08, 0x1, 0x0);
        gbc.writeMem(0xaba4, { 0x76 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0xbba9, gbc.sp());
        EXPECT(0xaba5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x76, gbc.readMem(0xaba4));
        // 76 0315
        gbc.setState(0x1b64, 0xae21, 0x5900, 0x33a6, 0xb59, 0xb42f, 0x1, 0x0);
        gbc.writeMem(0x1b64, { 0x76 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0xae21, gbc.sp());
        EXPECT(0x1b65, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 76 0316
        gbc.setState(0xe035, 0xee5, 0x4e0, 0x1ae2, 0x2b65, 0x2217, 0x1, 0x1);
        gbc.writeMem(0xe035, { 0x76 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0xee5, gbc.sp());
        EXPECT(0xe036, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x76, gbc.readMem(0xe035));
        // 76 0317
        gbc.setState(0x378a, 0xd95e, 0xc7e0, 0xed69, 0x1f3a, 0xc949, 0x0, 0x1);
        gbc.writeMem(0x378a, { 0x76 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0xd95e, gbc.sp());
        EXPECT(0x378b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 76 0318
        gbc.setState(0xe227, 0x3c25, 0xf4e0, 0xd68d, 0xf1e6, 0x7808, 0x0, 0x0);
        gbc.writeMem(0xe227, { 0x76 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x3c25, gbc.sp());
        EXPECT(0xe228, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x76, gbc.readMem(0xe227));
        // 76 0319
        gbc.setState(0xddb9, 0xc846, 0x6ca0, 0x1ebf, 0x691d, 0xf10d, 0x1, 0x0);
        gbc.writeMem(0xddb9, { 0x76 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0xc846, gbc.sp());
        EXPECT(0xddba, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x76, gbc.readMem(0xddb9));
        // 76 031A
        gbc.setState(0xe952, 0x697e, 0x1d0, 0x176f, 0x566c, 0x1ab9, 0x1, 0x1);
        gbc.writeMem(0xe952, { 0x76 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x697e, gbc.sp());
        EXPECT(0xe953, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x76, gbc.readMem(0xe952));
        // 76 031B
        gbc.setState(0x9591, 0x5e8f, 0x9f80, 0x1111, 0xc332, 0xb338, 0x1, 0x1);
        gbc.writeMem(0x9591, { 0x76 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x5e8f, gbc.sp());
        EXPECT(0x9592, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x76, gbc.readMem(0x9591));
        // 76 031C
        gbc.setState(0x9968, 0x833b, 0x2910, 0xb7b7, 0x80bc, 0x8b43, 0x0, 0x0);
        gbc.writeMem(0x9968, { 0x76 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x833b, gbc.sp());
        EXPECT(0x9969, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x76, gbc.readMem(0x9968));
        // 76 031D
        gbc.setState(0x9a03, 0xbb0b, 0x1f70, 0xbcb6, 0x2ac7, 0xb6b8, 0x1, 0x1);
        gbc.writeMem(0x9a03, { 0x76 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0xbb0b, gbc.sp());
        EXPECT(0x9a04, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x76, gbc.readMem(0x9a03));
        // 76 031E
        gbc.setState(0x7651, 0x2f52, 0x56f0, 0x7155, 0x3d50, 0xe925, 0x0, 0x0);
        gbc.writeMem(0x7651, { 0x76 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x2f52, gbc.sp());
        EXPECT(0x7652, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 76 031F
        gbc.setState(0x8e93, 0x6cb0, 0xbaa0, 0x2d4b, 0x968, 0x49fc, 0x1, 0x1);
        gbc.writeMem(0x8e93, { 0x76 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x6cb0, gbc.sp());
        EXPECT(0x8e94, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x76, gbc.readMem(0x8e93));
        // 76 0320
        gbc.setState(0x9b92, 0xc28d, 0xc10, 0xd085, 0xd6a2, 0xec18, 0x1, 0x0);
        gbc.writeMem(0x9b92, { 0x76 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0xc28d, gbc.sp());
        EXPECT(0x9b93, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x76, gbc.readMem(0x9b92));
        // 76 0321
        gbc.setState(0xbc0a, 0x2531, 0x54a0, 0x6d39, 0x89d3, 0xd939, 0x0, 0x1);
        gbc.writeMem(0xbc0a, { 0x76 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x2531, gbc.sp());
        EXPECT(0xbc0b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x76, gbc.readMem(0xbc0a));
        // 76 0322
        gbc.setState(0xe90f, 0xc1ec, 0xf570, 0xae79, 0x327b, 0xb24e, 0x0, 0x1);
        gbc.writeMem(0xe90f, { 0x76 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0xc1ec, gbc.sp());
        EXPECT(0xe910, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x76, gbc.readMem(0xe90f));
        // 76 0323
        gbc.setState(0x4224, 0xfcb1, 0x1ed0, 0xaea5, 0x7aea, 0x48b8, 0x0, 0x1);
        gbc.writeMem(0x4224, { 0x76 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0xfcb1, gbc.sp());
        EXPECT(0x4225, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 76 0324
        gbc.setState(0x217d, 0x35ce, 0xab60, 0xd7d1, 0x79eb, 0x6e6c, 0x1, 0x1);
        gbc.writeMem(0x217d, { 0x76 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x35ce, gbc.sp());
        EXPECT(0x217e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 76 0325
        gbc.setState(0x1f10, 0xc652, 0xcb70, 0xa89d, 0xe542, 0xb5e5, 0x0, 0x1);
        gbc.writeMem(0x1f10, { 0x76 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0xc652, gbc.sp());
        EXPECT(0x1f11, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 76 0326
        gbc.setState(0xcc2f, 0x3f06, 0x6100, 0xd468, 0xb436, 0x6985, 0x1, 0x1);
        gbc.writeMem(0xcc2f, { 0x76 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x3f06, gbc.sp());
        EXPECT(0xcc30, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x76, gbc.readMem(0xcc2f));
        // 76 0327
        gbc.setState(0x31fd, 0x8837, 0x57b0, 0xa5bd, 0xd272, 0x191c, 0x0, 0x1);
        gbc.writeMem(0x31fd, { 0x76 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x8837, gbc.sp());
        EXPECT(0x31fe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 76 0328
        gbc.setState(0x221, 0x50e7, 0xe650, 0x25ab, 0xb3bf, 0x70f6, 0x0, 0x1);
        gbc.writeMem(0x221, { 0x76 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x50e7, gbc.sp());
        EXPECT(0x222, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 76 0329
        gbc.setState(0x8ded, 0xb826, 0xb160, 0x45c, 0xb7b9, 0xd7b0, 0x1, 0x1);
        gbc.writeMem(0x8ded, { 0x76 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0xb826, gbc.sp());
        EXPECT(0x8dee, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x76, gbc.readMem(0x8ded));
        // 76 032A
        gbc.setState(0xc0e, 0xe4b1, 0xa900, 0xbf10, 0xf00e, 0xb68a, 0x0, 0x0);
        gbc.writeMem(0xc0e, { 0x76 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0xe4b1, gbc.sp());
        EXPECT(0xc0f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 76 032B
        gbc.setState(0xb0c3, 0xd30c, 0x6a10, 0x55bd, 0xf075, 0x9c2e, 0x1, 0x1);
        gbc.writeMem(0xb0c3, { 0x76 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0xd30c, gbc.sp());
        EXPECT(0xb0c4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x76, gbc.readMem(0xb0c3));
        // 76 032C
        gbc.setState(0x431b, 0x2041, 0x1a90, 0x3804, 0xf800, 0xca84, 0x0, 0x1);
        gbc.writeMem(0x431b, { 0x76 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x2041, gbc.sp());
        EXPECT(0x431c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 76 032D
        gbc.setState(0x9c7b, 0x5ec3, 0xe4e0, 0x2539, 0x75e3, 0x6a07, 0x1, 0x0);
        gbc.writeMem(0x9c7b, { 0x76 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x5ec3, gbc.sp());
        EXPECT(0x9c7c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x76, gbc.readMem(0x9c7b));
        // 76 032E
        gbc.setState(0x923c, 0xc54e, 0xf6c0, 0x8b8e, 0x3952, 0x6f59, 0x0, 0x1);
        gbc.writeMem(0x923c, { 0x76 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0xc54e, gbc.sp());
        EXPECT(0x923d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x76, gbc.readMem(0x923c));
        // 76 032F
        gbc.setState(0x933e, 0x98b2, 0xb290, 0x9343, 0x38ee, 0x375b, 0x1, 0x0);
        gbc.writeMem(0x933e, { 0x76 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x98b2, gbc.sp());
        EXPECT(0x933f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x76, gbc.readMem(0x933e));
        // 76 0330
        gbc.setState(0x8c44, 0x35f7, 0xa730, 0xcabf, 0x3913, 0xf595, 0x1, 0x0);
        gbc.writeMem(0x8c44, { 0x76 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x35f7, gbc.sp());
        EXPECT(0x8c45, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x76, gbc.readMem(0x8c44));
        // 76 0331
        gbc.setState(0x7329, 0xd743, 0x6990, 0xd9a7, 0xa414, 0xac3, 0x1, 0x1);
        gbc.writeMem(0x7329, { 0x76 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0xd743, gbc.sp());
        EXPECT(0x732a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 76 0332
        gbc.setState(0x1b38, 0x9f82, 0xf950, 0x829e, 0xa3b7, 0x9b9f, 0x0, 0x1);
        gbc.writeMem(0x1b38, { 0x76 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x9f82, gbc.sp());
        EXPECT(0x1b39, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 76 0333
        gbc.setState(0xe232, 0x9871, 0xc370, 0xcb4c, 0x6858, 0x65ee, 0x1, 0x1);
        gbc.writeMem(0xe232, { 0x76 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x9871, gbc.sp());
        EXPECT(0xe233, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x76, gbc.readMem(0xe232));
        // 76 0334
        gbc.setState(0xb0c8, 0x2a14, 0xbd0, 0xd66c, 0x9e67, 0x13cc, 0x0, 0x1);
        gbc.writeMem(0xb0c8, { 0x76 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x2a14, gbc.sp());
        EXPECT(0xb0c9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x76, gbc.readMem(0xb0c8));
        // 76 0336
        gbc.setState(0xce3d, 0x7ca8, 0x9320, 0xa5ae, 0x1124, 0x642a, 0x0, 0x0);
        gbc.writeMem(0xce3d, { 0x76 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x7ca8, gbc.sp());
        EXPECT(0xce3e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x76, gbc.readMem(0xce3d));
        // 76 0337
        gbc.setState(0x3b4d, 0xd3e7, 0xeee0, 0x6013, 0x304e, 0x9cc5, 0x1, 0x0);
        gbc.writeMem(0x3b4d, { 0x76 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0xd3e7, gbc.sp());
        EXPECT(0x3b4e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 76 0338
        gbc.setState(0x3e90, 0x6e77, 0xa880, 0x1984, 0x296e, 0x5fcd, 0x0, 0x1);
        gbc.writeMem(0x3e90, { 0x76 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x6e77, gbc.sp());
        EXPECT(0x3e91, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 76 0339
        gbc.setState(0xabfb, 0xaff0, 0xa860, 0x1221, 0x12ac, 0x7563, 0x0, 0x1);
        gbc.writeMem(0xabfb, { 0x76 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0xaff0, gbc.sp());
        EXPECT(0xabfc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x76, gbc.readMem(0xabfb));
        // 76 033A
        gbc.setState(0x92f2, 0x94c2, 0x5f40, 0x7cfa, 0x4928, 0x5b2e, 0x0, 0x1);
        gbc.writeMem(0x92f2, { 0x76 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x94c2, gbc.sp());
        EXPECT(0x92f3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x76, gbc.readMem(0x92f2));
        // 76 033B
        gbc.setState(0x5522, 0xbb67, 0xa640, 0xf1c, 0x3ca8, 0xbf35, 0x0, 0x1);
        gbc.writeMem(0x5522, { 0x76 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0xbb67, gbc.sp());
        EXPECT(0x5523, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 76 033C
        gbc.setState(0xaa46, 0xf083, 0x64f0, 0xf313, 0xdca6, 0xec4b, 0x1, 0x0);
        gbc.writeMem(0xaa46, { 0x76 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0xf083, gbc.sp());
        EXPECT(0xaa47, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x76, gbc.readMem(0xaa46));
        // 76 033D
        gbc.setState(0x1dbf, 0xb99f, 0xe3e0, 0x58fc, 0xc682, 0x8622, 0x1, 0x0);
        gbc.writeMem(0x1dbf, { 0x76 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0xb99f, gbc.sp());
        EXPECT(0x1dc0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 76 033E
        gbc.setState(0xceb4, 0x2ec3, 0x6810, 0x4a23, 0x8c65, 0xff34, 0x1, 0x0);
        gbc.writeMem(0xceb4, { 0x76 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x2ec3, gbc.sp());
        EXPECT(0xceb5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x76, gbc.readMem(0xceb4));
        // 76 033F
        gbc.setState(0xcdfc, 0xda94, 0x7520, 0x176a, 0xef7f, 0xfad8, 0x0, 0x1);
        gbc.writeMem(0xcdfc, { 0x76 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0xda94, gbc.sp());
        EXPECT(0xcdfd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x76, gbc.readMem(0xcdfc));
        // 76 0340
        gbc.setState(0xed2a, 0x7e70, 0x5b50, 0x6cc5, 0x5580, 0x4edf, 0x0, 0x1);
        gbc.writeMem(0xed2a, { 0x76 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x7e70, gbc.sp());
        EXPECT(0xed2b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x76, gbc.readMem(0xed2a));
        // 76 0341
        gbc.setState(0xb8d7, 0x2ba4, 0x4c80, 0xabe6, 0x4166, 0x96f, 0x0, 0x0);
        gbc.writeMem(0xb8d7, { 0x76 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x2ba4, gbc.sp());
        EXPECT(0xb8d8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x76, gbc.readMem(0xb8d7));
        // 76 0342
        gbc.setState(0x4207, 0x673a, 0x6b90, 0x447a, 0x8d92, 0xce45, 0x1, 0x0);
        gbc.writeMem(0x4207, { 0x76 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x673a, gbc.sp());
        EXPECT(0x4208, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 76 0343
        gbc.setState(0x9338, 0x1b0b, 0x3990, 0x3c6d, 0x6914, 0xf55d, 0x0, 0x1);
        gbc.writeMem(0x9338, { 0x76 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x1b0b, gbc.sp());
        EXPECT(0x9339, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x76, gbc.readMem(0x9338));
        // 76 0344
        gbc.setState(0x8294, 0x4512, 0x5c0, 0xb888, 0x315, 0xb7ad, 0x0, 0x0);
        gbc.writeMem(0x8294, { 0x76 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x4512, gbc.sp());
        EXPECT(0x8295, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x76, gbc.readMem(0x8294));
        // 76 0345
        gbc.setState(0xd786, 0x96a6, 0x1f40, 0xffd8, 0xe8d5, 0x3126, 0x1, 0x0);
        gbc.writeMem(0xd786, { 0x76 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x96a6, gbc.sp());
        EXPECT(0xd787, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x76, gbc.readMem(0xd786));
        // 76 0346
        gbc.setState(0x27e3, 0x9150, 0x42f0, 0x1658, 0x7701, 0x5324, 0x1, 0x1);
        gbc.writeMem(0x27e3, { 0x76 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x9150, gbc.sp());
        EXPECT(0x27e4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 76 0347
        gbc.setState(0xc2cf, 0xc18, 0xec50, 0x802a, 0x2d54, 0x3714, 0x1, 0x0);
        gbc.writeMem(0xc2cf, { 0x76 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0xc18, gbc.sp());
        EXPECT(0xc2d0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x76, gbc.readMem(0xc2cf));
        // 76 0348
        gbc.setState(0xd76f, 0xfef5, 0xac30, 0xec80, 0xe6cf, 0x39f2, 0x1, 0x0);
        gbc.writeMem(0xd76f, { 0x76 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0xfef5, gbc.sp());
        EXPECT(0xd770, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x76, gbc.readMem(0xd76f));
        // 76 0349
        gbc.setState(0x7edb, 0xd021, 0x6130, 0xd385, 0x521d, 0x5d82, 0x1, 0x0);
        gbc.writeMem(0x7edb, { 0x76 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0xd021, gbc.sp());
        EXPECT(0x7edc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 76 034A
        gbc.setState(0xe688, 0xe2a4, 0xe130, 0x4ac8, 0x82c3, 0x8a78, 0x1, 0x1);
        gbc.writeMem(0xe688, { 0x76 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0xe2a4, gbc.sp());
        EXPECT(0xe689, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x76, gbc.readMem(0xe688));
        // 76 034B
        gbc.setState(0xee34, 0xbac8, 0x400, 0x7e7a, 0xc1cc, 0xba8a, 0x0, 0x0);
        gbc.writeMem(0xee34, { 0x76 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0xbac8, gbc.sp());
        EXPECT(0xee35, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x76, gbc.readMem(0xee34));
        // 76 034C
        gbc.setState(0x1809, 0x7fc7, 0x90c0, 0xef87, 0x16e7, 0x3bcc, 0x0, 0x0);
        gbc.writeMem(0x1809, { 0x76 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x7fc7, gbc.sp());
        EXPECT(0x180a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 76 034D
        gbc.setState(0x744a, 0x35a0, 0x98d0, 0x9f9c, 0xdfa6, 0x7abb, 0x0, 0x1);
        gbc.writeMem(0x744a, { 0x76 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x35a0, gbc.sp());
        EXPECT(0x744b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 76 034F
        gbc.setState(0x8a90, 0x6fb8, 0x17a0, 0xa126, 0x27df, 0xbe2f, 0x1, 0x1);
        gbc.writeMem(0x8a90, { 0x76 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x6fb8, gbc.sp());
        EXPECT(0x8a91, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x76, gbc.readMem(0x8a90));
        // 76 0350
        gbc.setState(0xbbab, 0x7998, 0x68c0, 0x61cc, 0xb1cd, 0xdca5, 0x1, 0x0);
        gbc.writeMem(0xbbab, { 0x76 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x7998, gbc.sp());
        EXPECT(0xbbac, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x76, gbc.readMem(0xbbab));
        // 76 0351
        gbc.setState(0x26b3, 0x5a54, 0x3e20, 0xfd75, 0x2f2a, 0xdda0, 0x0, 0x0);
        gbc.writeMem(0x26b3, { 0x76 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x5a54, gbc.sp());
        EXPECT(0x26b4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 76 0352
        gbc.setState(0xcbcf, 0x8c2c, 0xb120, 0x9a45, 0x3a35, 0x5563, 0x0, 0x1);
        gbc.writeMem(0xcbcf, { 0x76 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x8c2c, gbc.sp());
        EXPECT(0xcbd0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x76, gbc.readMem(0xcbcf));
        // 76 0353
        gbc.setState(0x72f0, 0xd685, 0xf720, 0x3099, 0x4865, 0x7f80, 0x1, 0x1);
        gbc.writeMem(0x72f0, { 0x76 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0xd685, gbc.sp());
        EXPECT(0x72f1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 76 0354
        gbc.setState(0x3b8e, 0xb3a9, 0x4260, 0xe79a, 0x4a06, 0xd8ca, 0x1, 0x0);
        gbc.writeMem(0x3b8e, { 0x76 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0xb3a9, gbc.sp());
        EXPECT(0x3b8f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 76 0355
        gbc.setState(0x4c5d, 0x9cc4, 0x6420, 0x7d42, 0x6f91, 0xe68d, 0x1, 0x0);
        gbc.writeMem(0x4c5d, { 0x76 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x9cc4, gbc.sp());
        EXPECT(0x4c5e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 76 0356
        gbc.setState(0x2eab, 0x442, 0x15a0, 0x9af7, 0xe670, 0xbbc3, 0x1, 0x1);
        gbc.writeMem(0x2eab, { 0x76 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x442, gbc.sp());
        EXPECT(0x2eac, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 76 0357
        gbc.setState(0xc132, 0xc796, 0x4630, 0xca7c, 0xf271, 0x7a06, 0x1, 0x1);
        gbc.writeMem(0xc132, { 0x76 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0xc796, gbc.sp());
        EXPECT(0xc133, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x76, gbc.readMem(0xc132));
        // 76 0358
        gbc.setState(0xa86b, 0x4fca, 0xb090, 0x5d83, 0x462f, 0x5456, 0x0, 0x0);
        gbc.writeMem(0xa86b, { 0x76 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0x4fca, gbc.sp());
        EXPECT(0xa86c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x76, gbc.readMem(0xa86b));
        // 76 0359
        gbc.setState(0x7f8c, 0x9c96, 0x86c0, 0x8bfc, 0xbcab, 0xe802, 0x0, 0x1);
        gbc.writeMem(0x7f8c, { 0x76 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x9c96, gbc.sp());
        EXPECT(0x7f8d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 76 035A
        gbc.setState(0x2127, 0xbe42, 0x12a0, 0xa022, 0xe355, 0x8ab8, 0x1, 0x0);
        gbc.writeMem(0x2127, { 0x76 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0xbe42, gbc.sp());
        EXPECT(0x2128, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 76 035B
        gbc.setState(0x3bce, 0x387f, 0xa400, 0xdd07, 0x5a54, 0x5972, 0x0, 0x0);
        gbc.writeMem(0x3bce, { 0x76 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x387f, gbc.sp());
        EXPECT(0x3bcf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 76 035C
        gbc.setState(0x89fe, 0xb2f1, 0xcc80, 0x36fa, 0xf7f5, 0xe554, 0x1, 0x0);
        gbc.writeMem(0x89fe, { 0x76 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0xb2f1, gbc.sp());
        EXPECT(0x89ff, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x76, gbc.readMem(0x89fe));
        // 76 035D
        gbc.setState(0x50d3, 0x8b80, 0x8a20, 0x1b79, 0xb614, 0x9d0a, 0x1, 0x1);
        gbc.writeMem(0x50d3, { 0x76 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x8b80, gbc.sp());
        EXPECT(0x50d4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 76 035E
        gbc.setState(0xaa85, 0xbed0, 0x7d20, 0xfc31, 0x821, 0xa12c, 0x1, 0x1);
        gbc.writeMem(0xaa85, { 0x76 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0xbed0, gbc.sp());
        EXPECT(0xaa86, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x76, gbc.readMem(0xaa85));
        // 76 035F
        gbc.setState(0x2ae1, 0x43c0, 0xf340, 0xdfc1, 0xc0cd, 0xfd0, 0x0, 0x1);
        gbc.writeMem(0x2ae1, { 0x76 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x43c0, gbc.sp());
        EXPECT(0x2ae2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 76 0360
        gbc.setState(0x9218, 0xd228, 0x2210, 0xca1e, 0x9b27, 0x3b3a, 0x0, 0x0);
        gbc.writeMem(0x9218, { 0x76 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0xd228, gbc.sp());
        EXPECT(0x9219, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x76, gbc.readMem(0x9218));
        // 76 0361
        gbc.setState(0xde24, 0x7a3b, 0x6750, 0x24cc, 0xac9a, 0xe63b, 0x0, 0x1);
        gbc.writeMem(0xde24, { 0x76 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x7a3b, gbc.sp());
        EXPECT(0xde25, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x76, gbc.readMem(0xde24));
        // 76 0362
        gbc.setState(0x23f1, 0xad00, 0xa140, 0x505c, 0xa634, 0xe660, 0x0, 0x0);
        gbc.writeMem(0x23f1, { 0x76 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0xad00, gbc.sp());
        EXPECT(0x23f2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 76 0363
        gbc.setState(0x6f65, 0xf161, 0xae30, 0xab22, 0x9831, 0xfece, 0x1, 0x1);
        gbc.writeMem(0x6f65, { 0x76 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0xf161, gbc.sp());
        EXPECT(0x6f66, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 76 0364
        gbc.setState(0x83fd, 0x63ea, 0xd670, 0xacf1, 0xe253, 0x1123, 0x0, 0x0);
        gbc.writeMem(0x83fd, { 0x76 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x63ea, gbc.sp());
        EXPECT(0x83fe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x76, gbc.readMem(0x83fd));
        // 76 0365
        gbc.setState(0x8d7f, 0xefe4, 0x50f0, 0xb78c, 0xb437, 0xf42f, 0x1, 0x0);
        gbc.writeMem(0x8d7f, { 0x76 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0xefe4, gbc.sp());
        EXPECT(0x8d80, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x76, gbc.readMem(0x8d7f));
        // 76 0366
        gbc.setState(0x3ae, 0x476b, 0x9320, 0x9f48, 0xeb7f, 0xe3ef, 0x0, 0x0);
        gbc.writeMem(0x3ae, { 0x76 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x476b, gbc.sp());
        EXPECT(0x3af, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 76 0367
        gbc.setState(0x7f16, 0xc0f1, 0x7490, 0xddfb, 0x2607, 0x2b0c, 0x0, 0x0);
        gbc.writeMem(0x7f16, { 0x76 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0xc0f1, gbc.sp());
        EXPECT(0x7f17, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 76 0368
        gbc.setState(0x6915, 0xc240, 0x2bc0, 0xe409, 0x469, 0x7889, 0x0, 0x1);
        gbc.writeMem(0x6915, { 0x76 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0xc240, gbc.sp());
        EXPECT(0x6916, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 76 0369
        gbc.setState(0xaeff, 0x879d, 0x6050, 0xdaa, 0xbd18, 0x41fe, 0x1, 0x1);
        gbc.writeMem(0xaeff, { 0x76 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x879d, gbc.sp());
        EXPECT(0xaf00, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x76, gbc.readMem(0xaeff));
        // 76 036A
        gbc.setState(0x99ab, 0xc4c2, 0x1580, 0x66d5, 0xe64f, 0x9750, 0x0, 0x1);
        gbc.writeMem(0x99ab, { 0x76 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0xc4c2, gbc.sp());
        EXPECT(0x99ac, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x76, gbc.readMem(0x99ab));
        // 76 036C
        gbc.setState(0xb83b, 0x7ce1, 0xa930, 0x49d4, 0xf76d, 0x9f66, 0x0, 0x0);
        gbc.writeMem(0xb83b, { 0x76 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x7ce1, gbc.sp());
        EXPECT(0xb83c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x76, gbc.readMem(0xb83b));
        // 76 036D
        gbc.setState(0x89f5, 0xe41d, 0xcd10, 0x53fc, 0x3b36, 0x1cc8, 0x1, 0x0);
        gbc.writeMem(0x89f5, { 0x76 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0xe41d, gbc.sp());
        EXPECT(0x89f6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x76, gbc.readMem(0x89f5));
        // 76 036E
        gbc.setState(0x84e9, 0x21c1, 0x2180, 0x50f5, 0x21d3, 0xc6f2, 0x1, 0x0);
        gbc.writeMem(0x84e9, { 0x76 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x21c1, gbc.sp());
        EXPECT(0x84ea, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x76, gbc.readMem(0x84e9));
        // 76 036F
        gbc.setState(0x6515, 0x2f34, 0x720, 0xf295, 0xddd8, 0xf599, 0x1, 0x1);
        gbc.writeMem(0x6515, { 0x76 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x2f34, gbc.sp());
        EXPECT(0x6516, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 76 0370
        gbc.setState(0xba44, 0x2cf7, 0x84f0, 0x9ef3, 0xffed, 0x496d, 0x1, 0x0);
        gbc.writeMem(0xba44, { 0x76 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x2cf7, gbc.sp());
        EXPECT(0xba45, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x76, gbc.readMem(0xba44));
        // 76 0371
        gbc.setState(0xb27c, 0x589, 0xc0e0, 0x92ad, 0xa5b4, 0x355c, 0x0, 0x1);
        gbc.writeMem(0xb27c, { 0x76 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x589, gbc.sp());
        EXPECT(0xb27d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x76, gbc.readMem(0xb27c));
        // 76 0372
        gbc.setState(0xab81, 0x47d4, 0xbf40, 0x682e, 0x8182, 0x8f90, 0x0, 0x0);
        gbc.writeMem(0xab81, { 0x76 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x47d4, gbc.sp());
        EXPECT(0xab82, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x76, gbc.readMem(0xab81));
        // 76 0373
        gbc.setState(0xe0e, 0xe3e7, 0x3d00, 0xff75, 0x3354, 0xe25a, 0x0, 0x1);
        gbc.writeMem(0xe0e, { 0x76 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0xe3e7, gbc.sp());
        EXPECT(0xe0f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 76 0374
        gbc.setState(0x26d8, 0xfff4, 0xe7f0, 0x8fb0, 0xc965, 0xd3de, 0x1, 0x0);
        gbc.writeMem(0x26d8, { 0x76 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0xfff4, gbc.sp());
        EXPECT(0x26d9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 76 0375
        gbc.setState(0x279c, 0x4b48, 0x38b0, 0xa1ff, 0x3c4a, 0x1ee2, 0x1, 0x1);
        gbc.writeMem(0x279c, { 0x76 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x4b48, gbc.sp());
        EXPECT(0x279d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 76 0376
        gbc.setState(0x9985, 0x3714, 0x5780, 0x5a5d, 0x700, 0x8ea5, 0x0, 0x1);
        gbc.writeMem(0x9985, { 0x76 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x3714, gbc.sp());
        EXPECT(0x9986, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x76, gbc.readMem(0x9985));
        // 76 0377
        gbc.setState(0x66e2, 0x5646, 0xd850, 0x9263, 0x1a8a, 0x9052, 0x1, 0x1);
        gbc.writeMem(0x66e2, { 0x76 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x5646, gbc.sp());
        EXPECT(0x66e3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 76 0378
        gbc.setState(0x193, 0xa9ef, 0x9610, 0x7f28, 0xd495, 0xb258, 0x1, 0x0);
        gbc.writeMem(0x193, { 0x76 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0xa9ef, gbc.sp());
        EXPECT(0x194, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 76 0379
        gbc.setState(0xe9f1, 0x3f69, 0xdfe0, 0xa801, 0x9c53, 0xc9a8, 0x0, 0x0);
        gbc.writeMem(0xe9f1, { 0x76 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x3f69, gbc.sp());
        EXPECT(0xe9f2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x76, gbc.readMem(0xe9f1));
        // 76 037A
        gbc.setState(0xcbea, 0xfd8c, 0xeb0, 0xcfff, 0x5c54, 0xdd79, 0x0, 0x1);
        gbc.writeMem(0xcbea, { 0x76 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0xfd8c, gbc.sp());
        EXPECT(0xcbeb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x76, gbc.readMem(0xcbea));
        // 76 037B
        gbc.setState(0x5a09, 0x4c37, 0xbd00, 0xaa28, 0xf2b0, 0x63ff, 0x0, 0x0);
        gbc.writeMem(0x5a09, { 0x76 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x4c37, gbc.sp());
        EXPECT(0x5a0a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 76 037C
        gbc.setState(0xac3f, 0x216d, 0x3b70, 0x71e6, 0xc1a, 0x1927, 0x0, 0x1);
        gbc.writeMem(0xac3f, { 0x76 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x216d, gbc.sp());
        EXPECT(0xac40, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x76, gbc.readMem(0xac3f));
        // 76 037D
        gbc.setState(0x1ed8, 0xf3e1, 0x34f0, 0xdee2, 0x9e18, 0x5578, 0x0, 0x1);
        gbc.writeMem(0x1ed8, { 0x76 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0xf3e1, gbc.sp());
        EXPECT(0x1ed9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 76 037E
        gbc.setState(0x2bcb, 0xda96, 0xf860, 0x25d7, 0xa153, 0x89dd, 0x1, 0x0);
        gbc.writeMem(0x2bcb, { 0x76 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0xda96, gbc.sp());
        EXPECT(0x2bcc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 76 037F
        gbc.setState(0xa2c1, 0xd6e0, 0xb930, 0x32b9, 0xb16d, 0xf977, 0x0, 0x0);
        gbc.writeMem(0xa2c1, { 0x76 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0xd6e0, gbc.sp());
        EXPECT(0xa2c2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x76, gbc.readMem(0xa2c1));
        // 76 0380
        gbc.setState(0x2b36, 0xe2db, 0xf040, 0x94e5, 0xd0c8, 0x68a8, 0x1, 0x0);
        gbc.writeMem(0x2b36, { 0x76 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0xe2db, gbc.sp());
        EXPECT(0x2b37, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 76 0381
        gbc.setState(0xaa27, 0xe268, 0x51c0, 0x6e76, 0xa801, 0x6e07, 0x0, 0x0);
        gbc.writeMem(0xaa27, { 0x76 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0xe268, gbc.sp());
        EXPECT(0xaa28, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x76, gbc.readMem(0xaa27));
        // 76 0382
        gbc.setState(0xe17, 0x9f74, 0xc5f0, 0xc3ed, 0x127c, 0x814, 0x1, 0x0);
        gbc.writeMem(0xe17, { 0x76 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x9f74, gbc.sp());
        EXPECT(0xe18, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 76 0383
        gbc.setState(0xc76d, 0x5970, 0x21c0, 0x294e, 0x1a5c, 0x205d, 0x0, 0x0);
        gbc.writeMem(0xc76d, { 0x76 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x5970, gbc.sp());
        EXPECT(0xc76e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x76, gbc.readMem(0xc76d));
        // 76 0384
        gbc.setState(0xc068, 0x20d2, 0x5be0, 0x1c92, 0x4f9c, 0xc58, 0x1, 0x1);
        gbc.writeMem(0xc068, { 0x76 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x20d2, gbc.sp());
        EXPECT(0xc069, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x76, gbc.readMem(0xc068));
        // 76 0385
        gbc.setState(0x2934, 0x71d2, 0xc1f0, 0xbb6a, 0x6e7e, 0xd13c, 0x1, 0x1);
        gbc.writeMem(0x2934, { 0x76 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x71d2, gbc.sp());
        EXPECT(0x2935, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 76 0387
        gbc.setState(0x5e19, 0x3360, 0x5e50, 0x41d2, 0xf56d, 0xbd2d, 0x0, 0x0);
        gbc.writeMem(0x5e19, { 0x76 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x3360, gbc.sp());
        EXPECT(0x5e1a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 76 0388
        gbc.setState(0xd26c, 0x3f97, 0x1f60, 0x1796, 0xdca9, 0x342f, 0x1, 0x1);
        gbc.writeMem(0xd26c, { 0x76 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x3f97, gbc.sp());
        EXPECT(0xd26d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x76, gbc.readMem(0xd26c));
        // 76 0389
        gbc.setState(0xe9eb, 0x1802, 0x9fd0, 0x4c0b, 0xc383, 0x6b67, 0x1, 0x1);
        gbc.writeMem(0xe9eb, { 0x76 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x1802, gbc.sp());
        EXPECT(0xe9ec, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x76, gbc.readMem(0xe9eb));
        // 76 038A
        gbc.setState(0x3cb8, 0x6e17, 0xa4c0, 0x27e2, 0x6bf5, 0x1e7, 0x1, 0x0);
        gbc.writeMem(0x3cb8, { 0x76 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x6e17, gbc.sp());
        EXPECT(0x3cb9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 76 038B
        gbc.setState(0x8038, 0xb5c3, 0x3860, 0xf383, 0xcc08, 0xcd32, 0x1, 0x1);
        gbc.writeMem(0x8038, { 0x76 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0xb5c3, gbc.sp());
        EXPECT(0x8039, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x76, gbc.readMem(0x8038));
        // 76 038C
        gbc.setState(0x7c09, 0x52aa, 0xcca0, 0xfd8c, 0xa691, 0xef6e, 0x1, 0x1);
        gbc.writeMem(0x7c09, { 0x76 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x52aa, gbc.sp());
        EXPECT(0x7c0a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 76 038D
        gbc.setState(0x99f1, 0x4cac, 0x3ed0, 0x85b3, 0x362a, 0x8de2, 0x1, 0x1);
        gbc.writeMem(0x99f1, { 0x76 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x4cac, gbc.sp());
        EXPECT(0x99f2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x76, gbc.readMem(0x99f1));
        // 76 038E
        gbc.setState(0x9a14, 0xc619, 0xa740, 0xbc0b, 0x1978, 0xff1e, 0x1, 0x1);
        gbc.writeMem(0x9a14, { 0x76 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0xc619, gbc.sp());
        EXPECT(0x9a15, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x76, gbc.readMem(0x9a14));
        // 76 038F
        gbc.setState(0xa5bb, 0xbe61, 0x68b0, 0x60ce, 0x5615, 0x82fb, 0x0, 0x0);
        gbc.writeMem(0xa5bb, { 0x76 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0xbe61, gbc.sp());
        EXPECT(0xa5bc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x76, gbc.readMem(0xa5bb));
        // 76 0390
        gbc.setState(0x3a5a, 0xd028, 0x7100, 0x9fea, 0xca0d, 0x7fa, 0x0, 0x0);
        gbc.writeMem(0x3a5a, { 0x76 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0xd028, gbc.sp());
        EXPECT(0x3a5b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 76 0391
        gbc.setState(0x3687, 0xf581, 0x5af0, 0xb718, 0x8b53, 0x63d6, 0x0, 0x1);
        gbc.writeMem(0x3687, { 0x76 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0xf581, gbc.sp());
        EXPECT(0x3688, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 76 0392
        gbc.setState(0x707d, 0xb8e0, 0x4320, 0x98e1, 0x4e7e, 0x701a, 0x1, 0x0);
        gbc.writeMem(0x707d, { 0x76 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0xb8e0, gbc.sp());
        EXPECT(0x707e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 76 0393
        gbc.setState(0x9c1a, 0x9323, 0x7030, 0xad10, 0x6b80, 0x6a1d, 0x0, 0x0);
        gbc.writeMem(0x9c1a, { 0x76 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x9323, gbc.sp());
        EXPECT(0x9c1b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x76, gbc.readMem(0x9c1a));
        // 76 0394
        gbc.setState(0xb38e, 0x2659, 0x5820, 0x826a, 0x4c4b, 0x628b, 0x0, 0x1);
        gbc.writeMem(0xb38e, { 0x76 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x2659, gbc.sp());
        EXPECT(0xb38f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x76, gbc.readMem(0xb38e));
        // 76 0395
        gbc.setState(0x47ef, 0xf627, 0xbd70, 0x7e25, 0xbb43, 0x117, 0x0, 0x1);
        gbc.writeMem(0x47ef, { 0x76 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0xf627, gbc.sp());
        EXPECT(0x47f0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 76 0396
        gbc.setState(0xe604, 0x232a, 0xc00, 0xa052, 0xed80, 0xd08d, 0x0, 0x0);
        gbc.writeMem(0xe604, { 0x76 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x232a, gbc.sp());
        EXPECT(0xe605, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x76, gbc.readMem(0xe604));
        // 76 0398
        gbc.setState(0xc905, 0x67c9, 0x34c0, 0xb688, 0xd460, 0xce51, 0x0, 0x1);
        gbc.writeMem(0xc905, { 0x76 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x67c9, gbc.sp());
        EXPECT(0xc906, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x76, gbc.readMem(0xc905));
        // 76 0399
        gbc.setState(0xbcc, 0x6901, 0xc810, 0xd4c0, 0x6894, 0x8d5d, 0x0, 0x0);
        gbc.writeMem(0xbcc, { 0x76 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x6901, gbc.sp());
        EXPECT(0xbcd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 76 039B
        gbc.setState(0x21f3, 0xa19d, 0xf6f0, 0xa56a, 0xd144, 0x9f5c, 0x1, 0x0);
        gbc.writeMem(0x21f3, { 0x76 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0xa19d, gbc.sp());
        EXPECT(0x21f4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 76 039C
        gbc.setState(0x7f36, 0x3bb3, 0x9770, 0xe211, 0x9d97, 0x98b6, 0x0, 0x0);
        gbc.writeMem(0x7f36, { 0x76 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x3bb3, gbc.sp());
        EXPECT(0x7f37, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 76 039D
        gbc.setState(0x67db, 0xdf9a, 0x59d0, 0x1aba, 0xb2e9, 0xb90d, 0x0, 0x0);
        gbc.writeMem(0x67db, { 0x76 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0xdf9a, gbc.sp());
        EXPECT(0x67dc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 76 039E
        gbc.setState(0x1f0a, 0x9e24, 0xb540, 0x9743, 0xe66d, 0x5ec4, 0x1, 0x1);
        gbc.writeMem(0x1f0a, { 0x76 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x9e24, gbc.sp());
        EXPECT(0x1f0b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 76 039F
        gbc.setState(0x3a63, 0x7816, 0xc0c0, 0x80cf, 0x5d3b, 0xa617, 0x0, 0x1);
        gbc.writeMem(0x3a63, { 0x76 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x7816, gbc.sp());
        EXPECT(0x3a64, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 76 03A0
        gbc.setState(0xcd96, 0x8f74, 0x4220, 0xa3f6, 0x2406, 0xf91e, 0x0, 0x0);
        gbc.writeMem(0xcd96, { 0x76 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x8f74, gbc.sp());
        EXPECT(0xcd97, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x76, gbc.readMem(0xcd96));
        // 76 03A1
        gbc.setState(0x4f82, 0xbd47, 0x67c0, 0x6590, 0x88bc, 0xb1d8, 0x1, 0x1);
        gbc.writeMem(0x4f82, { 0x76 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0xbd47, gbc.sp());
        EXPECT(0x4f83, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 76 03A2
        gbc.setState(0x37c0, 0x3c26, 0xb620, 0xbb6e, 0xa2b2, 0x26a0, 0x1, 0x0);
        gbc.writeMem(0x37c0, { 0x76 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x3c26, gbc.sp());
        EXPECT(0x37c1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 76 03A3
        gbc.setState(0x49da, 0xea8b, 0x1380, 0xe9d9, 0x4b72, 0xc2c5, 0x0, 0x0);
        gbc.writeMem(0x49da, { 0x76 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0xea8b, gbc.sp());
        EXPECT(0x49db, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 76 03A4
        gbc.setState(0x8399, 0x4c34, 0x84d0, 0xc916, 0x950c, 0x7687, 0x0, 0x0);
        gbc.writeMem(0x8399, { 0x76 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x4c34, gbc.sp());
        EXPECT(0x839a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x76, gbc.readMem(0x8399));
        // 76 03A5
        gbc.setState(0x165f, 0xee9a, 0xd00, 0xbad1, 0xfefe, 0xed53, 0x0, 0x0);
        gbc.writeMem(0x165f, { 0x76 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0xee9a, gbc.sp());
        EXPECT(0x1660, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 76 03A6
        gbc.setState(0x8ab6, 0xe140, 0xc8f0, 0x538e, 0x33cb, 0xf72f, 0x1, 0x1);
        gbc.writeMem(0x8ab6, { 0x76 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0xe140, gbc.sp());
        EXPECT(0x8ab7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x76, gbc.readMem(0x8ab6));
        // 76 03A7
        gbc.setState(0x35cd, 0x9192, 0x7ef0, 0xce0e, 0x3918, 0xff70, 0x1, 0x0);
        gbc.writeMem(0x35cd, { 0x76 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x9192, gbc.sp());
        EXPECT(0x35ce, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 76 03A8
        gbc.setState(0x284f, 0xc1bd, 0xd930, 0x8458, 0x9e45, 0x8322, 0x1, 0x1);
        gbc.writeMem(0x284f, { 0x76 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0xc1bd, gbc.sp());
        EXPECT(0x2850, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 76 03A9
        gbc.setState(0x480f, 0xdd4c, 0x6200, 0xdb6f, 0x2ad2, 0x5f2c, 0x0, 0x0);
        gbc.writeMem(0x480f, { 0x76 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0xdd4c, gbc.sp());
        EXPECT(0x4810, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 76 03AA
        gbc.setState(0xc885, 0x2584, 0x2d40, 0x75d7, 0x6af3, 0xffb7, 0x0, 0x1);
        gbc.writeMem(0xc885, { 0x76 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x2584, gbc.sp());
        EXPECT(0xc886, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x76, gbc.readMem(0xc885));
        // 76 03AB
        gbc.setState(0xd20, 0x55a, 0x3910, 0x9bb4, 0x84d, 0xd8b5, 0x1, 0x0);
        gbc.writeMem(0xd20, { 0x76 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x55a, gbc.sp());
        EXPECT(0xd21, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 76 03AC
        gbc.setState(0x8387, 0x23bc, 0x59b0, 0x5d11, 0x501f, 0xb450, 0x0, 0x1);
        gbc.writeMem(0x8387, { 0x76 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x23bc, gbc.sp());
        EXPECT(0x8388, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x76, gbc.readMem(0x8387));
        // 76 03AD
        gbc.setState(0xc708, 0xf7c9, 0x2160, 0x8c0e, 0xe496, 0x90fb, 0x1, 0x0);
        gbc.writeMem(0xc708, { 0x76 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0xf7c9, gbc.sp());
        EXPECT(0xc709, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x76, gbc.readMem(0xc708));
        // 76 03AE
        gbc.setState(0x6626, 0x6971, 0x21d0, 0xca3b, 0xc0ac, 0x8927, 0x1, 0x1);
        gbc.writeMem(0x6626, { 0x76 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x6971, gbc.sp());
        EXPECT(0x6627, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 76 03AF
        gbc.setState(0x9056, 0x93e3, 0x4c80, 0x582a, 0xc1c3, 0x1d0, 0x1, 0x0);
        gbc.writeMem(0x9056, { 0x76 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x93e3, gbc.sp());
        EXPECT(0x9057, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x76, gbc.readMem(0x9056));
        // 76 03B0
        gbc.setState(0x9b6a, 0x4034, 0xe070, 0xd4, 0x5329, 0x1700, 0x0, 0x1);
        gbc.writeMem(0x9b6a, { 0x76 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x4034, gbc.sp());
        EXPECT(0x9b6b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x76, gbc.readMem(0x9b6a));
        // 76 03B1
        gbc.setState(0x3640, 0xfb2c, 0x48c0, 0xc07a, 0x650c, 0x50f, 0x1, 0x0);
        gbc.writeMem(0x3640, { 0x76 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0xfb2c, gbc.sp());
        EXPECT(0x3641, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 76 03B2
        gbc.setState(0xa622, 0x8fd9, 0x4190, 0x13fd, 0x32bb, 0xd039, 0x1, 0x0);
        gbc.writeMem(0xa622, { 0x76 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x8fd9, gbc.sp());
        EXPECT(0xa623, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x76, gbc.readMem(0xa622));
        // 76 03B3
        gbc.setState(0x6ed2, 0x7b27, 0x9b90, 0x1c39, 0x5d9b, 0xf47, 0x0, 0x1);
        gbc.writeMem(0x6ed2, { 0x76 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x7b27, gbc.sp());
        EXPECT(0x6ed3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 76 03B4
        gbc.setState(0x4a3e, 0xa618, 0xec20, 0xc200, 0xeab9, 0x689, 0x0, 0x1);
        gbc.writeMem(0x4a3e, { 0x76 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0xa618, gbc.sp());
        EXPECT(0x4a3f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 76 03B5
        gbc.setState(0xb2dc, 0x6bb5, 0x1880, 0x681d, 0x8509, 0x10a, 0x0, 0x0);
        gbc.writeMem(0xb2dc, { 0x76 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x6bb5, gbc.sp());
        EXPECT(0xb2dd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x76, gbc.readMem(0xb2dc));
        // 76 03B6
        gbc.setState(0x9a9d, 0xc067, 0xd990, 0xd9ae, 0x7877, 0x592d, 0x1, 0x1);
        gbc.writeMem(0x9a9d, { 0x76 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0xc067, gbc.sp());
        EXPECT(0x9a9e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x76, gbc.readMem(0x9a9d));
        // 76 03B7
        gbc.setState(0xb8e9, 0x135d, 0x8620, 0x180c, 0xb28f, 0xffe9, 0x1, 0x1);
        gbc.writeMem(0xb8e9, { 0x76 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x135d, gbc.sp());
        EXPECT(0xb8ea, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x76, gbc.readMem(0xb8e9));
        // 76 03B9
        gbc.setState(0xb30f, 0x131e, 0xb5e0, 0x4953, 0xf217, 0x9d4c, 0x0, 0x1);
        gbc.writeMem(0xb30f, { 0x76 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x131e, gbc.sp());
        EXPECT(0xb310, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x76, gbc.readMem(0xb30f));
        // 76 03BA
        gbc.setState(0x6ec1, 0x3854, 0x250, 0x5f55, 0xb7c2, 0x56a6, 0x0, 0x0);
        gbc.writeMem(0x6ec1, { 0x76 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x3854, gbc.sp());
        EXPECT(0x6ec2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 76 03BB
        gbc.setState(0x5f75, 0x59db, 0xb40, 0x3459, 0xd55b, 0xde6e, 0x0, 0x1);
        gbc.writeMem(0x5f75, { 0x76 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x59db, gbc.sp());
        EXPECT(0x5f76, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 76 03BC
        gbc.setState(0x1774, 0x3ed1, 0xc3a0, 0x4bb9, 0x724e, 0x2e1e, 0x0, 0x0);
        gbc.writeMem(0x1774, { 0x76 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x3ed1, gbc.sp());
        EXPECT(0x1775, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 76 03BD
        gbc.setState(0x1bdc, 0x84d7, 0x97b0, 0xd509, 0xbf5b, 0x59cb, 0x1, 0x0);
        gbc.writeMem(0x1bdc, { 0x76 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x84d7, gbc.sp());
        EXPECT(0x1bdd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 76 03BE
        gbc.setState(0x7565, 0x4755, 0x9c50, 0x6a8d, 0x15e9, 0x2b9e, 0x1, 0x0);
        gbc.writeMem(0x7565, { 0x76 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x4755, gbc.sp());
        EXPECT(0x7566, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 76 03BF
        gbc.setState(0xd557, 0x5191, 0x34f0, 0x1b3f, 0xa24a, 0x98e0, 0x0, 0x0);
        gbc.writeMem(0xd557, { 0x76 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x5191, gbc.sp());
        EXPECT(0xd558, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x76, gbc.readMem(0xd557));
        // 76 03C0
        gbc.setState(0xa5be, 0xebe9, 0x1970, 0xbee3, 0x7daa, 0x1005, 0x0, 0x0);
        gbc.writeMem(0xa5be, { 0x76 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0xebe9, gbc.sp());
        EXPECT(0xa5bf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x76, gbc.readMem(0xa5be));
        // 76 03C1
        gbc.setState(0x94a2, 0x14a4, 0xe2d0, 0x6e0b, 0xed5b, 0xca14, 0x0, 0x1);
        gbc.writeMem(0x94a2, { 0x76 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x14a4, gbc.sp());
        EXPECT(0x94a3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x76, gbc.readMem(0x94a2));
        // 76 03C2
        gbc.setState(0x56d3, 0x2d28, 0xd8a0, 0x89d7, 0xb724, 0x308b, 0x1, 0x0);
        gbc.writeMem(0x56d3, { 0x76 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x2d28, gbc.sp());
        EXPECT(0x56d4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 76 03C3
        gbc.setState(0x2eb3, 0x1b86, 0xcf70, 0x8c08, 0x7a77, 0x2d53, 0x0, 0x0);
        gbc.writeMem(0x2eb3, { 0x76 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x1b86, gbc.sp());
        EXPECT(0x2eb4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 76 03C4
        gbc.setState(0x3c3c, 0x1ccf, 0x3540, 0xc47b, 0x2f93, 0xed0e, 0x1, 0x0);
        gbc.writeMem(0x3c3c, { 0x76 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x1ccf, gbc.sp());
        EXPECT(0x3c3d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 76 03C5
        gbc.setState(0x793, 0x932c, 0x14d0, 0x2ae9, 0x56f8, 0x66f2, 0x1, 0x0);
        gbc.writeMem(0x793, { 0x76 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x932c, gbc.sp());
        EXPECT(0x794, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 76 03C6
        gbc.setState(0xa7ed, 0xec5e, 0xae20, 0x6ed2, 0xef97, 0xfffe, 0x0, 0x0);
        gbc.writeMem(0xa7ed, { 0x76 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0xec5e, gbc.sp());
        EXPECT(0xa7ee, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x76, gbc.readMem(0xa7ed));
        // 76 03C7
        gbc.setState(0x4883, 0x392f, 0xdeb0, 0x1dd7, 0xf76b, 0x5319, 0x1, 0x1);
        gbc.writeMem(0x4883, { 0x76 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x392f, gbc.sp());
        EXPECT(0x4884, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 76 03C8
        gbc.setState(0x302d, 0xdf2f, 0x5ca0, 0xd84f, 0x5a04, 0xaba5, 0x0, 0x0);
        gbc.writeMem(0x302d, { 0x76 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0xdf2f, gbc.sp());
        EXPECT(0x302e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 76 03C9
        gbc.setState(0x2959, 0x1ccb, 0x9a60, 0xe88, 0x4749, 0xabaa, 0x1, 0x0);
        gbc.writeMem(0x2959, { 0x76 });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x1ccb, gbc.sp());
        EXPECT(0x295a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 76 03CA
        gbc.setState(0x1527, 0xfae, 0xc210, 0x8c8f, 0x9ef7, 0x46a7, 0x1, 0x0);
        gbc.writeMem(0x1527, { 0x76 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0xfae, gbc.sp());
        EXPECT(0x1528, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 76 03CB
        gbc.setState(0xc022, 0x61a3, 0x4220, 0x18ff, 0x78be, 0x788e, 0x0, 0x1);
        gbc.writeMem(0xc022, { 0x76 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x61a3, gbc.sp());
        EXPECT(0xc023, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x76, gbc.readMem(0xc022));
        // 76 03CC
        gbc.setState(0xa851, 0x3ba7, 0x6820, 0x2497, 0xeed9, 0xc0de, 0x0, 0x1);
        gbc.writeMem(0xa851, { 0x76 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x3ba7, gbc.sp());
        EXPECT(0xa852, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x76, gbc.readMem(0xa851));
        // 76 03CD
        gbc.setState(0x3ad0, 0xf600, 0xf650, 0x795c, 0x74f, 0xfdad, 0x0, 0x0);
        gbc.writeMem(0x3ad0, { 0x76 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0xf600, gbc.sp());
        EXPECT(0x3ad1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 76 03CE
        gbc.setState(0x71fb, 0x6885, 0x2fe0, 0x3c9a, 0xb40e, 0x8a50, 0x0, 0x1);
        gbc.writeMem(0x71fb, { 0x76 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x6885, gbc.sp());
        EXPECT(0x71fc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 76 03CF
        gbc.setState(0x632, 0x991f, 0xe7d0, 0xf6e, 0xe8df, 0xd790, 0x1, 0x1);
        gbc.writeMem(0x632, { 0x76 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x991f, gbc.sp());
        EXPECT(0x633, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 76 03D0
        gbc.setState(0x4d77, 0x1b8, 0xda30, 0xf727, 0x1306, 0xc687, 0x0, 0x0);
        gbc.writeMem(0x4d77, { 0x76 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x1b8, gbc.sp());
        EXPECT(0x4d78, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 76 03D1
        gbc.setState(0xab22, 0xfe6e, 0x1070, 0x5fc8, 0x94e4, 0xb3f4, 0x1, 0x0);
        gbc.writeMem(0xab22, { 0x76 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0xfe6e, gbc.sp());
        EXPECT(0xab23, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x76, gbc.readMem(0xab22));
        // 76 03D2
        gbc.setState(0x39db, 0x5a64, 0x9e50, 0xd23, 0xc007, 0x5d05, 0x0, 0x1);
        gbc.writeMem(0x39db, { 0x76 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x5a64, gbc.sp());
        EXPECT(0x39dc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 76 03D3
        gbc.setState(0x1ef5, 0x7e9, 0xb40, 0x2671, 0x6d5, 0x84ee, 0x0, 0x1);
        gbc.writeMem(0x1ef5, { 0x76 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x7e9, gbc.sp());
        EXPECT(0x1ef6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 76 03D4
        gbc.setState(0xad1d, 0xffd9, 0x74c0, 0xf2b, 0xbe51, 0xcaa9, 0x1, 0x0);
        gbc.writeMem(0xad1d, { 0x76 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0xffd9, gbc.sp());
        EXPECT(0xad1e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x76, gbc.readMem(0xad1d));
        // 76 03D5
        gbc.setState(0x5e69, 0xd6b, 0xf380, 0x86cb, 0x6fd6, 0xbde9, 0x1, 0x1);
        gbc.writeMem(0x5e69, { 0x76 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0xd6b, gbc.sp());
        EXPECT(0x5e6a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 76 03D6
        gbc.setState(0x63c2, 0x9d24, 0x6610, 0xb7ac, 0x295, 0x27fd, 0x1, 0x1);
        gbc.writeMem(0x63c2, { 0x76 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x9d24, gbc.sp());
        EXPECT(0x63c3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 76 03D7
        gbc.setState(0xc592, 0x47a, 0x2610, 0x8d0a, 0xcf48, 0x38ff, 0x1, 0x0);
        gbc.writeMem(0xc592, { 0x76 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x47a, gbc.sp());
        EXPECT(0xc593, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x76, gbc.readMem(0xc592));
        // 76 03D8
        gbc.setState(0xca65, 0x99b0, 0xc9b0, 0xfd86, 0xd051, 0x8304, 0x1, 0x1);
        gbc.writeMem(0xca65, { 0x76 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x99b0, gbc.sp());
        EXPECT(0xca66, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x76, gbc.readMem(0xca65));
        // 76 03D9
        gbc.setState(0x6f2b, 0x9657, 0x4ba0, 0x883e, 0x2faf, 0x2e9, 0x1, 0x1);
        gbc.writeMem(0x6f2b, { 0x76 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x9657, gbc.sp());
        EXPECT(0x6f2c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 76 03DA
        gbc.setState(0x5191, 0x288f, 0xcc20, 0x5718, 0x66ff, 0xfbef, 0x1, 0x0);
        gbc.writeMem(0x5191, { 0x76 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x288f, gbc.sp());
        EXPECT(0x5192, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 76 03DB
        gbc.setState(0x36b0, 0xff14, 0x7ef0, 0xb236, 0x75ae, 0xffa4, 0x1, 0x1);
        gbc.writeMem(0x36b0, { 0x76 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0xff14, gbc.sp());
        EXPECT(0x36b1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 76 03DC
        gbc.setState(0x917d, 0x3716, 0xb470, 0xebd1, 0xc7ef, 0xf14e, 0x1, 0x1);
        gbc.writeMem(0x917d, { 0x76 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x3716, gbc.sp());
        EXPECT(0x917e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x76, gbc.readMem(0x917d));
        // 76 03DD
        gbc.setState(0x5e93, 0x6db, 0x5c20, 0x5e5d, 0x1e1a, 0x664f, 0x1, 0x0);
        gbc.writeMem(0x5e93, { 0x76 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x6db, gbc.sp());
        EXPECT(0x5e94, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 76 03DE
        gbc.setState(0x28da, 0x45ae, 0xfad0, 0x736b, 0x4421, 0xc45f, 0x0, 0x0);
        gbc.writeMem(0x28da, { 0x76 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x45ae, gbc.sp());
        EXPECT(0x28db, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 76 03DF
        gbc.setState(0x207d, 0xb638, 0xb450, 0x1142, 0x7318, 0x1b2a, 0x0, 0x1);
        gbc.writeMem(0x207d, { 0x76 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0xb638, gbc.sp());
        EXPECT(0x207e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 76 03E0
        gbc.setState(0x856d, 0xa1f, 0xfa50, 0xe77d, 0xceee, 0xa2e1, 0x1, 0x0);
        gbc.writeMem(0x856d, { 0x76 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0xa1f, gbc.sp());
        EXPECT(0x856e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x76, gbc.readMem(0x856d));
        // 76 03E1
        gbc.setState(0xb3d1, 0x381a, 0xe870, 0x5abe, 0xbff4, 0xf92d, 0x1, 0x1);
        gbc.writeMem(0xb3d1, { 0x76 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x381a, gbc.sp());
        EXPECT(0xb3d2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x76, gbc.readMem(0xb3d1));
        // 76 03E2
        gbc.setState(0xb483, 0xe59c, 0x11a0, 0xbc90, 0x9851, 0x6537, 0x1, 0x1);
        gbc.writeMem(0xb483, { 0x76 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0xe59c, gbc.sp());
        EXPECT(0xb484, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x76, gbc.readMem(0xb483));
        // 76 03E3
        gbc.setState(0xd6b2, 0xe59a, 0xc2c0, 0x42e9, 0x6d6d, 0x4247, 0x0, 0x1);
        gbc.writeMem(0xd6b2, { 0x76 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0xe59a, gbc.sp());
        EXPECT(0xd6b3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x76, gbc.readMem(0xd6b2));
        // 76 03E4
        gbc.setState(0x3605, 0xc33a, 0xf4f0, 0x66fa, 0x6efa, 0x27ac, 0x1, 0x0);
        gbc.writeMem(0x3605, { 0x76 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0xc33a, gbc.sp());
        EXPECT(0x3606, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 76 03E5
        gbc.setState(0x3b69, 0xbc3f, 0x8ea0, 0x808b, 0xfccb, 0xfd24, 0x1, 0x1);
        gbc.writeMem(0x3b69, { 0x76 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0xbc3f, gbc.sp());
        EXPECT(0x3b6a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 76 03E6
        gbc.setState(0xcc92, 0x431c, 0x6c10, 0xc01, 0xc085, 0x7d40, 0x1, 0x1);
        gbc.writeMem(0xcc92, { 0x76 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x431c, gbc.sp());
        EXPECT(0xcc93, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x76, gbc.readMem(0xcc92));
        // 76 03E7
        gbc.setState(0x771a, 0x7b9d, 0xd5e0, 0xaffd, 0x3daa, 0xa902, 0x1, 0x0);
        gbc.writeMem(0x771a, { 0x76 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x7b9d, gbc.sp());
        EXPECT(0x771b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
    }
