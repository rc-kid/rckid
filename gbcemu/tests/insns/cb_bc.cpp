#include "../gbctests_insns.h"
#if (defined GBCEMU_INSNS_TESTS_ALL) || (defined GBCEMU_INSNS_TESTS_cb_bc)
#include "../gbctests.h"

namespace rckid::gbcemu {

    TEST(gbcemu, opcode_cb_bc) {
        GBCEmu gbc{};
        uint8_t cartridge[0x8000];
        cartridge[0x149] = 0x02; // 8kb external RAM
        gbc.loadCartridge(new FlashGamePak(cartridge));
        // CB BC 0000
        gbc.setState(0x6c4c, 0xf07b, 0x6b30, 0x3f23, 0x23d2, 0x332, 0x0, 0x1);
        gbc.writeMem(0x6c4c, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0x3f);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0x3);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0xf07b);
        EXPECT(gbc.pc(), 0x6c4e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB BC 0001
        gbc.setState(0xa2da, 0x1cc0, 0x7560, 0xf3bd, 0xbe3a, 0xd22a, 0x1, 0x1);
        gbc.writeMem(0xa2da, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0xf3);
        EXPECT(gbc.c(),  0xbd);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0x52);
        EXPECT(gbc.l(),  0x2a);
        EXPECT(gbc.sp(), 0x1cc0);
        EXPECT(gbc.pc(), 0xa2dc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa2da), 0xcb);
        EXPECT(gbc.readMem(0xa2db), 0xbc);
        // CB BC 0002
        gbc.setState(0xcb8c, 0x6422, 0xf70, 0x604e, 0xb2df, 0xdedb, 0x1, 0x0);
        gbc.writeMem(0xcb8c, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0xf);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0x4e);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0xdf);
        EXPECT(gbc.h(),  0x5e);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0x6422);
        EXPECT(gbc.pc(), 0xcb8e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcb8c), 0xcb);
        EXPECT(gbc.readMem(0xcb8d), 0xbc);
        // CB BC 0003
        gbc.setState(0xea05, 0xda1d, 0xecb0, 0x2b0f, 0x15f8, 0xe098, 0x1, 0x1);
        gbc.writeMem(0xea05, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0x2b);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0x15);
        EXPECT(gbc.e(),  0xf8);
        EXPECT(gbc.h(),  0x60);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0xda1d);
        EXPECT(gbc.pc(), 0xea07);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xea05), 0xcb);
        EXPECT(gbc.readMem(0xea06), 0xbc);
        // CB BC 0004
        gbc.setState(0xd91e, 0x59b7, 0xd520, 0x681c, 0x3057, 0x2f08, 0x1, 0x1);
        gbc.writeMem(0xd91e, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0xd5);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0x57);
        EXPECT(gbc.h(),  0x2f);
        EXPECT(gbc.l(),  0x8);
        EXPECT(gbc.sp(), 0x59b7);
        EXPECT(gbc.pc(), 0xd920);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd91e), 0xcb);
        EXPECT(gbc.readMem(0xd91f), 0xbc);
        // CB BC 0005
        gbc.setState(0xb1e4, 0x3b6b, 0x2b30, 0x7858, 0x6306, 0xee10, 0x1, 0x1);
        gbc.writeMem(0xb1e4, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0x2b);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0x63);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0x6e);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0x3b6b);
        EXPECT(gbc.pc(), 0xb1e6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb1e4), 0xcb);
        EXPECT(gbc.readMem(0xb1e5), 0xbc);
        // CB BC 0006
        gbc.setState(0x1a92, 0xca58, 0xa840, 0x92b8, 0x9887, 0x4f82, 0x1, 0x0);
        gbc.writeMem(0x1a92, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0xa8);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0xb8);
        EXPECT(gbc.d(),  0x98);
        EXPECT(gbc.e(),  0x87);
        EXPECT(gbc.h(),  0x4f);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0xca58);
        EXPECT(gbc.pc(), 0x1a94);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB BC 0007
        gbc.setState(0xc1d9, 0x2af3, 0x6290, 0xe7c0, 0x659d, 0xa87f, 0x0, 0x0);
        gbc.writeMem(0xc1d9, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0xe7);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0x65);
        EXPECT(gbc.e(),  0x9d);
        EXPECT(gbc.h(),  0x28);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0x2af3);
        EXPECT(gbc.pc(), 0xc1db);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc1d9), 0xcb);
        EXPECT(gbc.readMem(0xc1da), 0xbc);
        // CB BC 0008
        gbc.setState(0x5c90, 0x3281, 0xe300, 0xae1b, 0x5169, 0xfe70, 0x0, 0x1);
        gbc.writeMem(0x5c90, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0x51);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0x7e);
        EXPECT(gbc.l(),  0x70);
        EXPECT(gbc.sp(), 0x3281);
        EXPECT(gbc.pc(), 0x5c92);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB BC 0009
        gbc.setState(0x3cae, 0x70c6, 0x22f0, 0x2c8d, 0xc36c, 0x6880, 0x1, 0x1);
        gbc.writeMem(0x3cae, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0x8d);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0x68);
        EXPECT(gbc.l(),  0x80);
        EXPECT(gbc.sp(), 0x70c6);
        EXPECT(gbc.pc(), 0x3cb0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB BC 000A
        gbc.setState(0xc858, 0xf2ce, 0xcbe0, 0xedc0, 0x7ba2, 0x901, 0x0, 0x0);
        gbc.writeMem(0xc858, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0xcb);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0x7b);
        EXPECT(gbc.e(),  0xa2);
        EXPECT(gbc.h(),  0x9);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0xf2ce);
        EXPECT(gbc.pc(), 0xc85a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc858), 0xcb);
        EXPECT(gbc.readMem(0xc859), 0xbc);
        // CB BC 000B
        gbc.setState(0xa39b, 0x83df, 0x9e10, 0xe114, 0x7e26, 0x3206, 0x0, 0x0);
        gbc.writeMem(0xa39b, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0x7e);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0x83df);
        EXPECT(gbc.pc(), 0xa39d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa39b), 0xcb);
        EXPECT(gbc.readMem(0xa39c), 0xbc);
        // CB BC 000C
        gbc.setState(0x4387, 0x455d, 0x19a0, 0xb40c, 0xdce8, 0x762d, 0x1, 0x1);
        gbc.writeMem(0x4387, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0x19);
        EXPECT(gbc.b(),  0xb4);
        EXPECT(gbc.c(),  0xc);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0x76);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0x455d);
        EXPECT(gbc.pc(), 0x4389);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB BC 000D
        gbc.setState(0x8a80, 0xfc00, 0x4e10, 0x79ec, 0x1437, 0x2342, 0x0, 0x1);
        gbc.writeMem(0x8a80, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0xec);
        EXPECT(gbc.d(),  0x14);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0x42);
        EXPECT(gbc.sp(), 0xfc00);
        EXPECT(gbc.pc(), 0x8a82);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8a80), 0xcb);
        EXPECT(gbc.readMem(0x8a81), 0xbc);
        // CB BC 000E
        gbc.setState(0xdf4f, 0xf32, 0xf930, 0xce6e, 0x7e31, 0xdc27, 0x0, 0x0);
        gbc.writeMem(0xdf4f, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0xf9);
        EXPECT(gbc.b(),  0xce);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0x7e);
        EXPECT(gbc.e(),  0x31);
        EXPECT(gbc.h(),  0x5c);
        EXPECT(gbc.l(),  0x27);
        EXPECT(gbc.sp(), 0xf32);
        EXPECT(gbc.pc(), 0xdf51);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdf4f), 0xcb);
        EXPECT(gbc.readMem(0xdf50), 0xbc);
        // CB BC 000F
        gbc.setState(0x3455, 0xfbbd, 0x77f0, 0x62bf, 0x98dd, 0x669c, 0x0, 0x1);
        gbc.writeMem(0x3455, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0x62);
        EXPECT(gbc.c(),  0xbf);
        EXPECT(gbc.d(),  0x98);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0x66);
        EXPECT(gbc.l(),  0x9c);
        EXPECT(gbc.sp(), 0xfbbd);
        EXPECT(gbc.pc(), 0x3457);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB BC 0010
        gbc.setState(0x585d, 0xe6c5, 0x63f0, 0xf0b6, 0xdb07, 0x1692, 0x0, 0x1);
        gbc.writeMem(0x585d, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0xb6);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0x16);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0xe6c5);
        EXPECT(gbc.pc(), 0x585f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB BC 0011
        gbc.setState(0x453a, 0x8568, 0x6c10, 0x6c80, 0x17f0, 0x5f91, 0x0, 0x0);
        gbc.writeMem(0x453a, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0x80);
        EXPECT(gbc.d(),  0x17);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0x8568);
        EXPECT(gbc.pc(), 0x453c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB BC 0012
        gbc.setState(0x6b58, 0x6c72, 0xd660, 0x6e7, 0x15b9, 0x4081, 0x0, 0x0);
        gbc.writeMem(0x6b58, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0x6);
        EXPECT(gbc.c(),  0xe7);
        EXPECT(gbc.d(),  0x15);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0x40);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0x6c72);
        EXPECT(gbc.pc(), 0x6b5a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB BC 0013
        gbc.setState(0xad4, 0x6ae9, 0xc240, 0x2732, 0x6405, 0x74f7, 0x0, 0x1);
        gbc.writeMem(0xad4, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0xc2);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0x32);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0x74);
        EXPECT(gbc.l(),  0xf7);
        EXPECT(gbc.sp(), 0x6ae9);
        EXPECT(gbc.pc(), 0xad6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB BC 0014
        gbc.setState(0x94eb, 0xb267, 0xf0e0, 0x658, 0x2480, 0xfd81, 0x1, 0x1);
        gbc.writeMem(0x94eb, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0xf0);
        EXPECT(gbc.b(),  0x6);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0xb267);
        EXPECT(gbc.pc(), 0x94ed);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x94eb), 0xcb);
        EXPECT(gbc.readMem(0x94ec), 0xbc);
        // CB BC 0015
        gbc.setState(0x6e3, 0x3d6d, 0x77f0, 0xc15, 0x5ae8, 0xd009, 0x1, 0x1);
        gbc.writeMem(0x6e3, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0x9);
        EXPECT(gbc.sp(), 0x3d6d);
        EXPECT(gbc.pc(), 0x6e5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB BC 0017
        gbc.setState(0x56df, 0x84f0, 0xc0d0, 0x1d92, 0x69fd, 0x4a4b, 0x1, 0x0);
        gbc.writeMem(0x56df, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0x69);
        EXPECT(gbc.e(),  0xfd);
        EXPECT(gbc.h(),  0x4a);
        EXPECT(gbc.l(),  0x4b);
        EXPECT(gbc.sp(), 0x84f0);
        EXPECT(gbc.pc(), 0x56e1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB BC 0018
        gbc.setState(0x19ac, 0x9238, 0x4870, 0xd470, 0x42e7, 0xa215, 0x1, 0x0);
        gbc.writeMem(0x19ac, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0x48);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0x22);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0x9238);
        EXPECT(gbc.pc(), 0x19ae);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB BC 0019
        gbc.setState(0xea4e, 0xf5b3, 0x59f0, 0x8874, 0x937, 0x9e4c, 0x0, 0x1);
        gbc.writeMem(0xea4e, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0x9);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0xf5b3);
        EXPECT(gbc.pc(), 0xea50);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xea4e), 0xcb);
        EXPECT(gbc.readMem(0xea4f), 0xbc);
        // CB BC 001A
        gbc.setState(0xa23d, 0x7bfa, 0x53c0, 0x7e26, 0x7255, 0x6f51, 0x1, 0x0);
        gbc.writeMem(0xa23d, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0x53);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0x55);
        EXPECT(gbc.h(),  0x6f);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0x7bfa);
        EXPECT(gbc.pc(), 0xa23f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa23d), 0xcb);
        EXPECT(gbc.readMem(0xa23e), 0xbc);
        // CB BC 001B
        gbc.setState(0x8636, 0xa165, 0xd550, 0x7fdd, 0xfd33, 0x5e05, 0x0, 0x0);
        gbc.writeMem(0x8636, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0xd5);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0xdd);
        EXPECT(gbc.d(),  0xfd);
        EXPECT(gbc.e(),  0x33);
        EXPECT(gbc.h(),  0x5e);
        EXPECT(gbc.l(),  0x5);
        EXPECT(gbc.sp(), 0xa165);
        EXPECT(gbc.pc(), 0x8638);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8636), 0xcb);
        EXPECT(gbc.readMem(0x8637), 0xbc);
        // CB BC 001C
        gbc.setState(0xdfc9, 0x11cd, 0x60d0, 0x381d, 0x5e5d, 0xcff4, 0x1, 0x1);
        gbc.writeMem(0xdfc9, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0x38);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0x4f);
        EXPECT(gbc.l(),  0xf4);
        EXPECT(gbc.sp(), 0x11cd);
        EXPECT(gbc.pc(), 0xdfcb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdfc9), 0xcb);
        EXPECT(gbc.readMem(0xdfca), 0xbc);
        // CB BC 001D
        gbc.setState(0xd22a, 0xc2d5, 0x9be0, 0x8978, 0x8c4b, 0xc846, 0x1, 0x1);
        gbc.writeMem(0xd22a, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0x9b);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0x48);
        EXPECT(gbc.l(),  0x46);
        EXPECT(gbc.sp(), 0xc2d5);
        EXPECT(gbc.pc(), 0xd22c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd22a), 0xcb);
        EXPECT(gbc.readMem(0xd22b), 0xbc);
        // CB BC 001F
        gbc.setState(0x74fe, 0x4926, 0x23e0, 0x815d, 0xcee8, 0x8691, 0x1, 0x1);
        gbc.writeMem(0x74fe, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0x81);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0xce);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0x6);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0x4926);
        EXPECT(gbc.pc(), 0x7500);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB BC 0020
        gbc.setState(0xe0a, 0xabbb, 0x4430, 0x64db, 0xe15a, 0xe5b, 0x1, 0x1);
        gbc.writeMem(0xe0a, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0x64);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0x5b);
        EXPECT(gbc.sp(), 0xabbb);
        EXPECT(gbc.pc(), 0xe0c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB BC 0021
        gbc.setState(0x5140, 0x8fe3, 0xc050, 0xe5f0, 0x9d39, 0x9f6a, 0x1, 0x1);
        gbc.writeMem(0x5140, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0xe5);
        EXPECT(gbc.c(),  0xf0);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0x1f);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0x8fe3);
        EXPECT(gbc.pc(), 0x5142);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB BC 0022
        gbc.setState(0x5cec, 0x99, 0x2a20, 0x45b1, 0x916f, 0x75d, 0x0, 0x0);
        gbc.writeMem(0x5cec, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0xb1);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0x99);
        EXPECT(gbc.pc(), 0x5cee);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB BC 0024
        gbc.setState(0x9ecf, 0x21, 0x7370, 0xf325, 0x1a1e, 0x50ab, 0x0, 0x0);
        gbc.writeMem(0x9ecf, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0x73);
        EXPECT(gbc.b(),  0xf3);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0x21);
        EXPECT(gbc.pc(), 0x9ed1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9ecf), 0xcb);
        EXPECT(gbc.readMem(0x9ed0), 0xbc);
        // CB BC 0025
        gbc.setState(0xdabf, 0xfba0, 0x3a60, 0x5a60, 0x3a8e, 0xfa2e, 0x0, 0x1);
        gbc.writeMem(0xdabf, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0x5a);
        EXPECT(gbc.c(),  0x60);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0x7a);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0xfba0);
        EXPECT(gbc.pc(), 0xdac1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdabf), 0xcb);
        EXPECT(gbc.readMem(0xdac0), 0xbc);
        // CB BC 0026
        gbc.setState(0x64b, 0x42cb, 0xfaf0, 0xe004, 0x82ff, 0x2b2a, 0x1, 0x0);
        gbc.writeMem(0x64b, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0xfa);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0xff);
        EXPECT(gbc.h(),  0x2b);
        EXPECT(gbc.l(),  0x2a);
        EXPECT(gbc.sp(), 0x42cb);
        EXPECT(gbc.pc(), 0x64d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB BC 0027
        gbc.setState(0x5ae6, 0xb9fe, 0xa150, 0xfcb5, 0x10e1, 0x8a1b, 0x1, 0x1);
        gbc.writeMem(0x5ae6, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0xa1);
        EXPECT(gbc.b(),  0xfc);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0x10);
        EXPECT(gbc.e(),  0xe1);
        EXPECT(gbc.h(),  0xa);
        EXPECT(gbc.l(),  0x1b);
        EXPECT(gbc.sp(), 0xb9fe);
        EXPECT(gbc.pc(), 0x5ae8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB BC 0028
        gbc.setState(0xd352, 0x54ee, 0x7d0, 0xc3d3, 0x1aab, 0xa57c, 0x0, 0x0);
        gbc.writeMem(0xd352, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0xc3);
        EXPECT(gbc.c(),  0xd3);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0x25);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0x54ee);
        EXPECT(gbc.pc(), 0xd354);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd352), 0xcb);
        EXPECT(gbc.readMem(0xd353), 0xbc);
        // CB BC 0029
        gbc.setState(0x9812, 0x29e4, 0xee0, 0xc2e1, 0x3f77, 0xddc0, 0x1, 0x1);
        gbc.writeMem(0x9812, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0xe1);
        EXPECT(gbc.d(),  0x3f);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0x5d);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0x29e4);
        EXPECT(gbc.pc(), 0x9814);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9812), 0xcb);
        EXPECT(gbc.readMem(0x9813), 0xbc);
        // CB BC 002A
        gbc.setState(0x9b65, 0xc16f, 0xbeb0, 0x8d73, 0xd9b9, 0x14ed, 0x1, 0x1);
        gbc.writeMem(0x9b65, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0x8d);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0xd9);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0x14);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0xc16f);
        EXPECT(gbc.pc(), 0x9b67);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9b65), 0xcb);
        EXPECT(gbc.readMem(0x9b66), 0xbc);
        // CB BC 002B
        gbc.setState(0xa38a, 0x887f, 0xb6b0, 0x2b11, 0x6b08, 0x250e, 0x0, 0x0);
        gbc.writeMem(0xa38a, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0x2b);
        EXPECT(gbc.c(),  0x11);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0x25);
        EXPECT(gbc.l(),  0xe);
        EXPECT(gbc.sp(), 0x887f);
        EXPECT(gbc.pc(), 0xa38c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa38a), 0xcb);
        EXPECT(gbc.readMem(0xa38b), 0xbc);
        // CB BC 002C
        gbc.setState(0xada9, 0xb94, 0xcfb0, 0x9b4f, 0x6b1d, 0xd1cc, 0x1, 0x0);
        gbc.writeMem(0xada9, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0xcf);
        EXPECT(gbc.b(),  0x9b);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0xcc);
        EXPECT(gbc.sp(), 0xb94);
        EXPECT(gbc.pc(), 0xadab);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xada9), 0xcb);
        EXPECT(gbc.readMem(0xadaa), 0xbc);
        // CB BC 002D
        gbc.setState(0xd70, 0x8a77, 0x3b10, 0xd3d6, 0xd83, 0xdcbe, 0x0, 0x0);
        gbc.writeMem(0xd70, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0xd6);
        EXPECT(gbc.d(),  0xd);
        EXPECT(gbc.e(),  0x83);
        EXPECT(gbc.h(),  0x5c);
        EXPECT(gbc.l(),  0xbe);
        EXPECT(gbc.sp(), 0x8a77);
        EXPECT(gbc.pc(), 0xd72);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB BC 002E
        gbc.setState(0xb65, 0x22de, 0xf3b0, 0x7c96, 0x8883, 0x3da6, 0x1, 0x1);
        gbc.writeMem(0xb65, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0x7c);
        EXPECT(gbc.c(),  0x96);
        EXPECT(gbc.d(),  0x88);
        EXPECT(gbc.e(),  0x83);
        EXPECT(gbc.h(),  0x3d);
        EXPECT(gbc.l(),  0xa6);
        EXPECT(gbc.sp(), 0x22de);
        EXPECT(gbc.pc(), 0xb67);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB BC 002F
        gbc.setState(0x9277, 0x8f02, 0x3070, 0xd9b1, 0x30f8, 0x9afb, 0x0, 0x0);
        gbc.writeMem(0x9277, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0xb1);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0xf8);
        EXPECT(gbc.h(),  0x1a);
        EXPECT(gbc.l(),  0xfb);
        EXPECT(gbc.sp(), 0x8f02);
        EXPECT(gbc.pc(), 0x9279);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9277), 0xcb);
        EXPECT(gbc.readMem(0x9278), 0xbc);
        // CB BC 0030
        gbc.setState(0xe6fb, 0x4e0d, 0x93c0, 0xff1c, 0xd775, 0xb079, 0x1, 0x0);
        gbc.writeMem(0xe6fb, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0x93);
        EXPECT(gbc.b(),  0xff);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0x75);
        EXPECT(gbc.h(),  0x30);
        EXPECT(gbc.l(),  0x79);
        EXPECT(gbc.sp(), 0x4e0d);
        EXPECT(gbc.pc(), 0xe6fd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe6fb), 0xcb);
        EXPECT(gbc.readMem(0xe6fc), 0xbc);
        // CB BC 0031
        gbc.setState(0xe84e, 0xd5b, 0x9250, 0xb90, 0xda1e, 0xe8b6, 0x0, 0x0);
        gbc.writeMem(0xe84e, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0x90);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0x68);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0xd5b);
        EXPECT(gbc.pc(), 0xe850);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe84e), 0xcb);
        EXPECT(gbc.readMem(0xe84f), 0xbc);
        // CB BC 0032
        gbc.setState(0x3fd8, 0x67a1, 0xd6b0, 0xf85e, 0x1a42, 0x771a, 0x1, 0x0);
        gbc.writeMem(0x3fd8, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0x42);
        EXPECT(gbc.h(),  0x77);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0x67a1);
        EXPECT(gbc.pc(), 0x3fda);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB BC 0033
        gbc.setState(0x5bba, 0x7473, 0xc420, 0xe6ed, 0xcef, 0xe7a6, 0x1, 0x0);
        gbc.writeMem(0x5bba, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0xc4);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0xed);
        EXPECT(gbc.d(),  0xc);
        EXPECT(gbc.e(),  0xef);
        EXPECT(gbc.h(),  0x67);
        EXPECT(gbc.l(),  0xa6);
        EXPECT(gbc.sp(), 0x7473);
        EXPECT(gbc.pc(), 0x5bbc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB BC 0034
        gbc.setState(0x6416, 0x59fe, 0x22c0, 0xd013, 0xc15, 0x4abd, 0x0, 0x1);
        gbc.writeMem(0x6416, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0xd0);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0xc);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0x4a);
        EXPECT(gbc.l(),  0xbd);
        EXPECT(gbc.sp(), 0x59fe);
        EXPECT(gbc.pc(), 0x6418);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB BC 0035
        gbc.setState(0x184a, 0xe966, 0x38c0, 0x600e, 0x6fda, 0xda98, 0x1, 0x0);
        gbc.writeMem(0x184a, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0x6f);
        EXPECT(gbc.e(),  0xda);
        EXPECT(gbc.h(),  0x5a);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0xe966);
        EXPECT(gbc.pc(), 0x184c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB BC 0036
        gbc.setState(0x9118, 0x6dc1, 0x23d0, 0x9a69, 0xbaed, 0x42d9, 0x0, 0x0);
        gbc.writeMem(0x9118, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0x9a);
        EXPECT(gbc.c(),  0x69);
        EXPECT(gbc.d(),  0xba);
        EXPECT(gbc.e(),  0xed);
        EXPECT(gbc.h(),  0x42);
        EXPECT(gbc.l(),  0xd9);
        EXPECT(gbc.sp(), 0x6dc1);
        EXPECT(gbc.pc(), 0x911a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9118), 0xcb);
        EXPECT(gbc.readMem(0x9119), 0xbc);
        // CB BC 0037
        gbc.setState(0x3fe0, 0xe3d2, 0x56d0, 0xc8f3, 0xe935, 0x956b, 0x1, 0x1);
        gbc.writeMem(0x3fe0, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0xf3);
        EXPECT(gbc.d(),  0xe9);
        EXPECT(gbc.e(),  0x35);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0x6b);
        EXPECT(gbc.sp(), 0xe3d2);
        EXPECT(gbc.pc(), 0x3fe2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB BC 0038
        gbc.setState(0x4d2, 0x91d3, 0x78a0, 0x82a8, 0xf757, 0x957a, 0x0, 0x0);
        gbc.writeMem(0x4d2, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0xa8);
        EXPECT(gbc.d(),  0xf7);
        EXPECT(gbc.e(),  0x57);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0x7a);
        EXPECT(gbc.sp(), 0x91d3);
        EXPECT(gbc.pc(), 0x4d4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB BC 0039
        gbc.setState(0x7ef, 0x2f51, 0x17d0, 0x63b4, 0x99ad, 0x8ddc, 0x0, 0x1);
        gbc.writeMem(0x7ef, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0x17);
        EXPECT(gbc.b(),  0x63);
        EXPECT(gbc.c(),  0xb4);
        EXPECT(gbc.d(),  0x99);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0xd);
        EXPECT(gbc.l(),  0xdc);
        EXPECT(gbc.sp(), 0x2f51);
        EXPECT(gbc.pc(), 0x7f1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB BC 003A
        gbc.setState(0xd6ee, 0x735d, 0xc670, 0xcdb, 0xfb, 0x838e, 0x0, 0x0);
        gbc.writeMem(0xd6ee, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0xc6);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0xfb);
        EXPECT(gbc.h(),  0x3);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0x735d);
        EXPECT(gbc.pc(), 0xd6f0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd6ee), 0xcb);
        EXPECT(gbc.readMem(0xd6ef), 0xbc);
        // CB BC 003B
        gbc.setState(0xbed7, 0xa27b, 0x9b50, 0x2766, 0x2cd7, 0x7220, 0x1, 0x0);
        gbc.writeMem(0xbed7, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0x9b);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0x2c);
        EXPECT(gbc.e(),  0xd7);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0xa27b);
        EXPECT(gbc.pc(), 0xbed9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbed7), 0xcb);
        EXPECT(gbc.readMem(0xbed8), 0xbc);
        // CB BC 003C
        gbc.setState(0xeda4, 0x5e45, 0xca60, 0x4a5c, 0x2d2e, 0x12b0, 0x1, 0x0);
        gbc.writeMem(0xeda4, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0xca);
        EXPECT(gbc.b(),  0x4a);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0x5e45);
        EXPECT(gbc.pc(), 0xeda6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xeda4), 0xcb);
        EXPECT(gbc.readMem(0xeda5), 0xbc);
        // CB BC 003D
        gbc.setState(0x5abd, 0x733f, 0x7880, 0x6897, 0x63, 0xaff0, 0x1, 0x1);
        gbc.writeMem(0x5abd, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0x97);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0x63);
        EXPECT(gbc.h(),  0x2f);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0x733f);
        EXPECT(gbc.pc(), 0x5abf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB BC 003E
        gbc.setState(0x165f, 0x86bb, 0x4bc0, 0x9e7b, 0x3533, 0x23dd, 0x0, 0x0);
        gbc.writeMem(0x165f, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0x9e);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0x35);
        EXPECT(gbc.e(),  0x33);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0xdd);
        EXPECT(gbc.sp(), 0x86bb);
        EXPECT(gbc.pc(), 0x1661);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB BC 003F
        gbc.setState(0xcf96, 0x9f55, 0x4060, 0x74f4, 0xdcd1, 0xc81b, 0x0, 0x0);
        gbc.writeMem(0xcf96, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0x40);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0xf4);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0xd1);
        EXPECT(gbc.h(),  0x48);
        EXPECT(gbc.l(),  0x1b);
        EXPECT(gbc.sp(), 0x9f55);
        EXPECT(gbc.pc(), 0xcf98);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcf96), 0xcb);
        EXPECT(gbc.readMem(0xcf97), 0xbc);
        // CB BC 0040
        gbc.setState(0xd823, 0xc185, 0x6860, 0x733d, 0x54a2, 0x2bd1, 0x0, 0x1);
        gbc.writeMem(0xd823, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0x68);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0x3d);
        EXPECT(gbc.d(),  0x54);
        EXPECT(gbc.e(),  0xa2);
        EXPECT(gbc.h(),  0x2b);
        EXPECT(gbc.l(),  0xd1);
        EXPECT(gbc.sp(), 0xc185);
        EXPECT(gbc.pc(), 0xd825);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd823), 0xcb);
        EXPECT(gbc.readMem(0xd824), 0xbc);
        // CB BC 0041
        gbc.setState(0x7185, 0x9573, 0x67b0, 0x268d, 0xd793, 0x689f, 0x0, 0x0);
        gbc.writeMem(0x7185, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0x67);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0x8d);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0x68);
        EXPECT(gbc.l(),  0x9f);
        EXPECT(gbc.sp(), 0x9573);
        EXPECT(gbc.pc(), 0x7187);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB BC 0042
        gbc.setState(0x39e9, 0x894c, 0xf140, 0x1a54, 0x9be8, 0xce79, 0x0, 0x1);
        gbc.writeMem(0x39e9, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0xf1);
        EXPECT(gbc.b(),  0x1a);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0x4e);
        EXPECT(gbc.l(),  0x79);
        EXPECT(gbc.sp(), 0x894c);
        EXPECT(gbc.pc(), 0x39eb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB BC 0043
        gbc.setState(0x8d81, 0x614f, 0x4840, 0xda62, 0x95c0, 0xe957, 0x0, 0x0);
        gbc.writeMem(0x8d81, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0x48);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0x95);
        EXPECT(gbc.e(),  0xc0);
        EXPECT(gbc.h(),  0x69);
        EXPECT(gbc.l(),  0x57);
        EXPECT(gbc.sp(), 0x614f);
        EXPECT(gbc.pc(), 0x8d83);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8d81), 0xcb);
        EXPECT(gbc.readMem(0x8d82), 0xbc);
        // CB BC 0044
        gbc.setState(0xcc9b, 0xf1b9, 0xbbe0, 0xfc2e, 0x7a99, 0xa2a, 0x1, 0x1);
        gbc.writeMem(0xcc9b, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0xfc);
        EXPECT(gbc.c(),  0x2e);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0x99);
        EXPECT(gbc.h(),  0xa);
        EXPECT(gbc.l(),  0x2a);
        EXPECT(gbc.sp(), 0xf1b9);
        EXPECT(gbc.pc(), 0xcc9d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcc9b), 0xcb);
        EXPECT(gbc.readMem(0xcc9c), 0xbc);
        // CB BC 0045
        gbc.setState(0xaba2, 0xaa40, 0x6510, 0x566, 0x7727, 0x1116, 0x1, 0x0);
        gbc.writeMem(0xaba2, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0x65);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0x11);
        EXPECT(gbc.l(),  0x16);
        EXPECT(gbc.sp(), 0xaa40);
        EXPECT(gbc.pc(), 0xaba4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaba2), 0xcb);
        EXPECT(gbc.readMem(0xaba3), 0xbc);
        // CB BC 0046
        gbc.setState(0x4ead, 0x667f, 0xa20, 0x17da, 0x7aaa, 0x31df, 0x0, 0x1);
        gbc.writeMem(0x4ead, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0x17);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0xaa);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0xdf);
        EXPECT(gbc.sp(), 0x667f);
        EXPECT(gbc.pc(), 0x4eaf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB BC 0047
        gbc.setState(0xd594, 0x90a2, 0xf3f0, 0x3d30, 0x6ec2, 0xd154, 0x0, 0x0);
        gbc.writeMem(0xd594, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0xc2);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0x54);
        EXPECT(gbc.sp(), 0x90a2);
        EXPECT(gbc.pc(), 0xd596);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd594), 0xcb);
        EXPECT(gbc.readMem(0xd595), 0xbc);
        // CB BC 0048
        gbc.setState(0x9196, 0xbea4, 0x9c80, 0xea07, 0xecf9, 0xa35b, 0x0, 0x1);
        gbc.writeMem(0x9196, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0x9c);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0xf9);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0x5b);
        EXPECT(gbc.sp(), 0xbea4);
        EXPECT(gbc.pc(), 0x9198);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9196), 0xcb);
        EXPECT(gbc.readMem(0x9197), 0xbc);
        // CB BC 0049
        gbc.setState(0xa907, 0x3942, 0xb370, 0x8d69, 0x9afa, 0x63f6, 0x0, 0x1);
        gbc.writeMem(0xa907, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0xb3);
        EXPECT(gbc.b(),  0x8d);
        EXPECT(gbc.c(),  0x69);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0xfa);
        EXPECT(gbc.h(),  0x63);
        EXPECT(gbc.l(),  0xf6);
        EXPECT(gbc.sp(), 0x3942);
        EXPECT(gbc.pc(), 0xa909);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa907), 0xcb);
        EXPECT(gbc.readMem(0xa908), 0xbc);
        // CB BC 004B
        gbc.setState(0x4ebf, 0x2965, 0x1e50, 0xe69d, 0x68f1, 0x240e, 0x1, 0x0);
        gbc.writeMem(0x4ebf, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0x9d);
        EXPECT(gbc.d(),  0x68);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0xe);
        EXPECT(gbc.sp(), 0x2965);
        EXPECT(gbc.pc(), 0x4ec1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB BC 004C
        gbc.setState(0x75df, 0xa780, 0xdfd0, 0xc91e, 0x22b0, 0x1e5, 0x0, 0x0);
        gbc.writeMem(0x75df, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0xdf);
        EXPECT(gbc.b(),  0xc9);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0xe5);
        EXPECT(gbc.sp(), 0xa780);
        EXPECT(gbc.pc(), 0x75e1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB BC 004D
        gbc.setState(0x2694, 0x45ac, 0x2780, 0x4058, 0x8486, 0x715e, 0x1, 0x1);
        gbc.writeMem(0x2694, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0x27);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0x71);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0x45ac);
        EXPECT(gbc.pc(), 0x2696);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB BC 004E
        gbc.setState(0xe073, 0x2705, 0x5db0, 0x66c8, 0x7951, 0x833b, 0x1, 0x0);
        gbc.writeMem(0xe073, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0x5d);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0xc8);
        EXPECT(gbc.d(),  0x79);
        EXPECT(gbc.e(),  0x51);
        EXPECT(gbc.h(),  0x3);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0x2705);
        EXPECT(gbc.pc(), 0xe075);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe073), 0xcb);
        EXPECT(gbc.readMem(0xe074), 0xbc);
        // CB BC 004F
        gbc.setState(0x540f, 0x24a2, 0x77f0, 0x2aea, 0x3240, 0xc94c, 0x1, 0x0);
        gbc.writeMem(0x540f, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0xea);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0x49);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0x24a2);
        EXPECT(gbc.pc(), 0x5411);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB BC 0050
        gbc.setState(0x60e0, 0xf934, 0x5aa0, 0x25c4, 0x79f6, 0x3127, 0x1, 0x0);
        gbc.writeMem(0x60e0, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0xc4);
        EXPECT(gbc.d(),  0x79);
        EXPECT(gbc.e(),  0xf6);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0x27);
        EXPECT(gbc.sp(), 0xf934);
        EXPECT(gbc.pc(), 0x60e2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB BC 0051
        gbc.setState(0xae99, 0xa76f, 0xbf70, 0x892a, 0x1c35, 0x1df4, 0x0, 0x0);
        gbc.writeMem(0xae99, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0x35);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0xf4);
        EXPECT(gbc.sp(), 0xa76f);
        EXPECT(gbc.pc(), 0xae9b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xae99), 0xcb);
        EXPECT(gbc.readMem(0xae9a), 0xbc);
        // CB BC 0052
        gbc.setState(0x7aa7, 0xbf4d, 0x7c70, 0xeee, 0xa91e, 0xa4e5, 0x0, 0x1);
        gbc.writeMem(0x7aa7, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0x7c);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0xa9);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0xe5);
        EXPECT(gbc.sp(), 0xbf4d);
        EXPECT(gbc.pc(), 0x7aa9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB BC 0053
        gbc.setState(0xc2bc, 0xe294, 0x8b70, 0x5a92, 0x256a, 0x7d85, 0x0, 0x1);
        gbc.writeMem(0xc2bc, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0x5a);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0x25);
        EXPECT(gbc.e(),  0x6a);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0x85);
        EXPECT(gbc.sp(), 0xe294);
        EXPECT(gbc.pc(), 0xc2be);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc2bc), 0xcb);
        EXPECT(gbc.readMem(0xc2bd), 0xbc);
        // CB BC 0054
        gbc.setState(0x1a4b, 0xafb2, 0x8670, 0x42ff, 0x4750, 0x8bba, 0x0, 0x1);
        gbc.writeMem(0x1a4b, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0xff);
        EXPECT(gbc.d(),  0x47);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0xba);
        EXPECT(gbc.sp(), 0xafb2);
        EXPECT(gbc.pc(), 0x1a4d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB BC 0055
        gbc.setState(0xe1b0, 0x7b95, 0x14d0, 0xcbec, 0xe79f, 0x1621, 0x0, 0x0);
        gbc.writeMem(0xe1b0, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0x14);
        EXPECT(gbc.b(),  0xcb);
        EXPECT(gbc.c(),  0xec);
        EXPECT(gbc.d(),  0xe7);
        EXPECT(gbc.e(),  0x9f);
        EXPECT(gbc.h(),  0x16);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0x7b95);
        EXPECT(gbc.pc(), 0xe1b2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe1b0), 0xcb);
        EXPECT(gbc.readMem(0xe1b1), 0xbc);
        // CB BC 0056
        gbc.setState(0x2a3, 0xd65a, 0x8f60, 0xcb88, 0xe610, 0xa5f4, 0x0, 0x1);
        gbc.writeMem(0x2a3, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0x8f);
        EXPECT(gbc.b(),  0xcb);
        EXPECT(gbc.c(),  0x88);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0x25);
        EXPECT(gbc.l(),  0xf4);
        EXPECT(gbc.sp(), 0xd65a);
        EXPECT(gbc.pc(), 0x2a5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB BC 0057
        gbc.setState(0xa560, 0x34bd, 0xfba0, 0x2560, 0xae15, 0x8291, 0x1, 0x1);
        gbc.writeMem(0xa560, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0xfb);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0x60);
        EXPECT(gbc.d(),  0xae);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0x2);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0x34bd);
        EXPECT(gbc.pc(), 0xa562);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa560), 0xcb);
        EXPECT(gbc.readMem(0xa561), 0xbc);
        // CB BC 0058
        gbc.setState(0xd23, 0x1115, 0xc90, 0x1c49, 0x772f, 0xa1f8, 0x0, 0x0);
        gbc.writeMem(0xd23, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0x49);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0x2f);
        EXPECT(gbc.h(),  0x21);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0x1115);
        EXPECT(gbc.pc(), 0xd25);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB BC 0059
        gbc.setState(0x411, 0x990a, 0xa7f0, 0xe037, 0xdabc, 0xfd1b, 0x1, 0x1);
        gbc.writeMem(0x411, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0xa7);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0x1b);
        EXPECT(gbc.sp(), 0x990a);
        EXPECT(gbc.pc(), 0x413);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB BC 005A
        gbc.setState(0xcf9, 0x3769, 0xd970, 0xd54e, 0x7978, 0xa76, 0x1, 0x1);
        gbc.writeMem(0xcf9, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0xd9);
        EXPECT(gbc.b(),  0xd5);
        EXPECT(gbc.c(),  0x4e);
        EXPECT(gbc.d(),  0x79);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0xa);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0x3769);
        EXPECT(gbc.pc(), 0xcfb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB BC 005B
        gbc.setState(0xe2c6, 0x719, 0xc310, 0x2d15, 0x41c5, 0x788d, 0x1, 0x1);
        gbc.writeMem(0xe2c6, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0xc3);
        EXPECT(gbc.b(),  0x2d);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0x41);
        EXPECT(gbc.e(),  0xc5);
        EXPECT(gbc.h(),  0x78);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0x719);
        EXPECT(gbc.pc(), 0xe2c8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe2c6), 0xcb);
        EXPECT(gbc.readMem(0xe2c7), 0xbc);
        // CB BC 005E
        gbc.setState(0x606e, 0x7ef9, 0xedf0, 0x3143, 0x8654, 0xb7d5, 0x1, 0x1);
        gbc.writeMem(0x606e, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0x43);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0xd5);
        EXPECT(gbc.sp(), 0x7ef9);
        EXPECT(gbc.pc(), 0x6070);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB BC 005F
        gbc.setState(0x993a, 0xfe55, 0x58b0, 0xeab6, 0x10a8, 0x7da9, 0x1, 0x0);
        gbc.writeMem(0x993a, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0x58);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0xb6);
        EXPECT(gbc.d(),  0x10);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0xa9);
        EXPECT(gbc.sp(), 0xfe55);
        EXPECT(gbc.pc(), 0x993c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x993a), 0xcb);
        EXPECT(gbc.readMem(0x993b), 0xbc);
        // CB BC 0060
        gbc.setState(0x9c9d, 0x97f4, 0x23b0, 0xd90e, 0x9f01, 0x4b09, 0x0, 0x1);
        gbc.writeMem(0x9c9d, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0x4b);
        EXPECT(gbc.l(),  0x9);
        EXPECT(gbc.sp(), 0x97f4);
        EXPECT(gbc.pc(), 0x9c9f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9c9d), 0xcb);
        EXPECT(gbc.readMem(0x9c9e), 0xbc);
        // CB BC 0062
        gbc.setState(0xe6bd, 0x15a4, 0x1c50, 0xea7c, 0x91a9, 0xcb44, 0x1, 0x0);
        gbc.writeMem(0xe6bd, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0x1c);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0x4b);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0x15a4);
        EXPECT(gbc.pc(), 0xe6bf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe6bd), 0xcb);
        EXPECT(gbc.readMem(0xe6be), 0xbc);
        // CB BC 0063
        gbc.setState(0x2f11, 0x9fa1, 0xcb70, 0x7a14, 0x2883, 0x75d3, 0x1, 0x0);
        gbc.writeMem(0x2f11, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0xcb);
        EXPECT(gbc.b(),  0x7a);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0x28);
        EXPECT(gbc.e(),  0x83);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0xd3);
        EXPECT(gbc.sp(), 0x9fa1);
        EXPECT(gbc.pc(), 0x2f13);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB BC 0064
        gbc.setState(0x2dd6, 0xd57c, 0xb8b0, 0x9d16, 0x6be, 0x283f, 0x1, 0x1);
        gbc.writeMem(0x2dd6, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0xb8);
        EXPECT(gbc.b(),  0x9d);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0x6);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0x28);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0xd57c);
        EXPECT(gbc.pc(), 0x2dd8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB BC 0065
        gbc.setState(0x91c0, 0xfab, 0xd2b0, 0xa69c, 0xea36, 0x7450, 0x0, 0x0);
        gbc.writeMem(0x91c0, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0xa6);
        EXPECT(gbc.c(),  0x9c);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0x74);
        EXPECT(gbc.l(),  0x50);
        EXPECT(gbc.sp(), 0xfab);
        EXPECT(gbc.pc(), 0x91c2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x91c0), 0xcb);
        EXPECT(gbc.readMem(0x91c1), 0xbc);
        // CB BC 0066
        gbc.setState(0xda9b, 0x5d57, 0xae30, 0xf45b, 0x9cb6, 0xf679, 0x1, 0x0);
        gbc.writeMem(0xda9b, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0xae);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0xb6);
        EXPECT(gbc.h(),  0x76);
        EXPECT(gbc.l(),  0x79);
        EXPECT(gbc.sp(), 0x5d57);
        EXPECT(gbc.pc(), 0xda9d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xda9b), 0xcb);
        EXPECT(gbc.readMem(0xda9c), 0xbc);
        // CB BC 0067
        gbc.setState(0x79ad, 0x9ea3, 0x9dc0, 0xd94, 0xbb8, 0xb594, 0x1, 0x1);
        gbc.writeMem(0x79ad, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0x9d);
        EXPECT(gbc.b(),  0xd);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0xb8);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0x9ea3);
        EXPECT(gbc.pc(), 0x79af);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB BC 0068
        gbc.setState(0xa84, 0x9bec, 0x3620, 0xfb90, 0x7de, 0x80f7, 0x0, 0x0);
        gbc.writeMem(0xa84, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0x36);
        EXPECT(gbc.b(),  0xfb);
        EXPECT(gbc.c(),  0x90);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0xf7);
        EXPECT(gbc.sp(), 0x9bec);
        EXPECT(gbc.pc(), 0xa86);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB BC 0069
        gbc.setState(0xe897, 0x74d3, 0x1810, 0x355c, 0x5a6, 0xc8a6, 0x0, 0x1);
        gbc.writeMem(0xe897, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0x5);
        EXPECT(gbc.e(),  0xa6);
        EXPECT(gbc.h(),  0x48);
        EXPECT(gbc.l(),  0xa6);
        EXPECT(gbc.sp(), 0x74d3);
        EXPECT(gbc.pc(), 0xe899);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe897), 0xcb);
        EXPECT(gbc.readMem(0xe898), 0xbc);
        // CB BC 006A
        gbc.setState(0xc0e3, 0xe2f7, 0x17b0, 0x251a, 0x1256, 0x9953, 0x1, 0x1);
        gbc.writeMem(0xc0e3, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0x17);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0x56);
        EXPECT(gbc.h(),  0x19);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0xe2f7);
        EXPECT(gbc.pc(), 0xc0e5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc0e3), 0xcb);
        EXPECT(gbc.readMem(0xc0e4), 0xbc);
        // CB BC 006B
        gbc.setState(0x629e, 0x1882, 0xf230, 0xd6c9, 0x7c71, 0x82f0, 0x1, 0x1);
        gbc.writeMem(0x629e, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0xc9);
        EXPECT(gbc.d(),  0x7c);
        EXPECT(gbc.e(),  0x71);
        EXPECT(gbc.h(),  0x2);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0x1882);
        EXPECT(gbc.pc(), 0x62a0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB BC 006C
        gbc.setState(0x2c8f, 0x1e6f, 0xda70, 0x9723, 0xf4bc, 0x82be, 0x0, 0x1);
        gbc.writeMem(0x2c8f, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0x97);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0xf4);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0x2);
        EXPECT(gbc.l(),  0xbe);
        EXPECT(gbc.sp(), 0x1e6f);
        EXPECT(gbc.pc(), 0x2c91);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB BC 006D
        gbc.setState(0x6c79, 0xe7e9, 0x2a70, 0x4e88, 0x179a, 0x2ff6, 0x1, 0x0);
        gbc.writeMem(0x6c79, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0x88);
        EXPECT(gbc.d(),  0x17);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0x2f);
        EXPECT(gbc.l(),  0xf6);
        EXPECT(gbc.sp(), 0xe7e9);
        EXPECT(gbc.pc(), 0x6c7b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB BC 006E
        gbc.setState(0x153, 0xdedc, 0x95f0, 0x7c81, 0xf137, 0x2647, 0x1, 0x0);
        gbc.writeMem(0x153, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0x95);
        EXPECT(gbc.b(),  0x7c);
        EXPECT(gbc.c(),  0x81);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0x47);
        EXPECT(gbc.sp(), 0xdedc);
        EXPECT(gbc.pc(), 0x155);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB BC 006F
        gbc.setState(0x285, 0xcd4b, 0x4100, 0x95b4, 0x4439, 0x6603, 0x0, 0x0);
        gbc.writeMem(0x285, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0x95);
        EXPECT(gbc.c(),  0xb4);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0x66);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0xcd4b);
        EXPECT(gbc.pc(), 0x287);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB BC 0070
        gbc.setState(0x74f3, 0xce82, 0xd1b0, 0x7ef, 0x19b5, 0x8a18, 0x0, 0x1);
        gbc.writeMem(0x74f3, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0xd1);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0x19);
        EXPECT(gbc.e(),  0xb5);
        EXPECT(gbc.h(),  0xa);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0xce82);
        EXPECT(gbc.pc(), 0x74f5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB BC 0071
        gbc.setState(0x8e98, 0x2c4, 0xd2b0, 0xb491, 0xbd73, 0x86d1, 0x1, 0x0);
        gbc.writeMem(0x8e98, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0xb4);
        EXPECT(gbc.c(),  0x91);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0x6);
        EXPECT(gbc.l(),  0xd1);
        EXPECT(gbc.sp(), 0x2c4);
        EXPECT(gbc.pc(), 0x8e9a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8e98), 0xcb);
        EXPECT(gbc.readMem(0x8e99), 0xbc);
        // CB BC 0072
        gbc.setState(0xa07a, 0x2be9, 0x55d0, 0x9f29, 0x5c68, 0x3f25, 0x1, 0x1);
        gbc.writeMem(0xa07a, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0x9f);
        EXPECT(gbc.c(),  0x29);
        EXPECT(gbc.d(),  0x5c);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0x2be9);
        EXPECT(gbc.pc(), 0xa07c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa07a), 0xcb);
        EXPECT(gbc.readMem(0xa07b), 0xbc);
        // CB BC 0073
        gbc.setState(0xac2, 0xcd40, 0xb80, 0x3262, 0xcfca, 0xc7f3, 0x0, 0x0);
        gbc.writeMem(0xac2, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0x32);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0xcf);
        EXPECT(gbc.e(),  0xca);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0xcd40);
        EXPECT(gbc.pc(), 0xac4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB BC 0074
        gbc.setState(0xb1d, 0x40db, 0xc260, 0xde24, 0xbbe8, 0x7de7, 0x1, 0x1);
        gbc.writeMem(0xb1d, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0xc2);
        EXPECT(gbc.b(),  0xde);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0x40db);
        EXPECT(gbc.pc(), 0xb1f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB BC 0075
        gbc.setState(0x8e0c, 0xda5d, 0xd870, 0x9eae, 0xed40, 0xa6b1, 0x1, 0x1);
        gbc.writeMem(0x8e0c, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0xd8);
        EXPECT(gbc.b(),  0x9e);
        EXPECT(gbc.c(),  0xae);
        EXPECT(gbc.d(),  0xed);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0xda5d);
        EXPECT(gbc.pc(), 0x8e0e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8e0c), 0xcb);
        EXPECT(gbc.readMem(0x8e0d), 0xbc);
        // CB BC 0076
        gbc.setState(0x4f86, 0xdeb9, 0x4a20, 0x32c7, 0x9619, 0xd3b7, 0x1, 0x1);
        gbc.writeMem(0x4f86, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0x4a);
        EXPECT(gbc.b(),  0x32);
        EXPECT(gbc.c(),  0xc7);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0x19);
        EXPECT(gbc.h(),  0x53);
        EXPECT(gbc.l(),  0xb7);
        EXPECT(gbc.sp(), 0xdeb9);
        EXPECT(gbc.pc(), 0x4f88);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB BC 0077
        gbc.setState(0xe0ba, 0x7138, 0x3480, 0x7596, 0x4c86, 0x2d9b, 0x1, 0x0);
        gbc.writeMem(0xe0ba, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0x34);
        EXPECT(gbc.b(),  0x75);
        EXPECT(gbc.c(),  0x96);
        EXPECT(gbc.d(),  0x4c);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0x2d);
        EXPECT(gbc.l(),  0x9b);
        EXPECT(gbc.sp(), 0x7138);
        EXPECT(gbc.pc(), 0xe0bc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe0ba), 0xcb);
        EXPECT(gbc.readMem(0xe0bb), 0xbc);
        // CB BC 0078
        gbc.setState(0x48f9, 0xb41, 0xe260, 0x8b23, 0x3b1, 0xa2ab, 0x1, 0x1);
        gbc.writeMem(0x48f9, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0x3);
        EXPECT(gbc.e(),  0xb1);
        EXPECT(gbc.h(),  0x22);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0xb41);
        EXPECT(gbc.pc(), 0x48fb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB BC 0079
        gbc.setState(0x5e84, 0xbdc7, 0xedb0, 0x16d2, 0xb1bc, 0xc949, 0x0, 0x1);
        gbc.writeMem(0x5e84, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0xb1);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0x49);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0xbdc7);
        EXPECT(gbc.pc(), 0x5e86);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB BC 007A
        gbc.setState(0xe5d8, 0xf43a, 0x9160, 0x89ad, 0x7af6, 0x40ef, 0x0, 0x1);
        gbc.writeMem(0xe5d8, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0x91);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0xf6);
        EXPECT(gbc.h(),  0x40);
        EXPECT(gbc.l(),  0xef);
        EXPECT(gbc.sp(), 0xf43a);
        EXPECT(gbc.pc(), 0xe5da);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe5d8), 0xcb);
        EXPECT(gbc.readMem(0xe5d9), 0xbc);
        // CB BC 007B
        gbc.setState(0xe748, 0xacaa, 0x5140, 0x89c, 0xc2c8, 0x700d, 0x1, 0x1);
        gbc.writeMem(0xe748, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0x8);
        EXPECT(gbc.c(),  0x9c);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0x70);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0xacaa);
        EXPECT(gbc.pc(), 0xe74a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe748), 0xcb);
        EXPECT(gbc.readMem(0xe749), 0xbc);
        // CB BC 007C
        gbc.setState(0x9f19, 0xaabf, 0x5e0, 0x1d8b, 0x683, 0x9c73, 0x0, 0x0);
        gbc.writeMem(0x9f19, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0x5);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0x8b);
        EXPECT(gbc.d(),  0x6);
        EXPECT(gbc.e(),  0x83);
        EXPECT(gbc.h(),  0x1c);
        EXPECT(gbc.l(),  0x73);
        EXPECT(gbc.sp(), 0xaabf);
        EXPECT(gbc.pc(), 0x9f1b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9f19), 0xcb);
        EXPECT(gbc.readMem(0x9f1a), 0xbc);
        // CB BC 007D
        gbc.setState(0xed49, 0x4646, 0x5210, 0x4b1d, 0x398f, 0x271d, 0x1, 0x0);
        gbc.writeMem(0xed49, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0x39);
        EXPECT(gbc.e(),  0x8f);
        EXPECT(gbc.h(),  0x27);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0x4646);
        EXPECT(gbc.pc(), 0xed4b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xed49), 0xcb);
        EXPECT(gbc.readMem(0xed4a), 0xbc);
        // CB BC 007E
        gbc.setState(0xb1b6, 0x7352, 0x4580, 0xa002, 0xf522, 0xa1ce, 0x0, 0x0);
        gbc.writeMem(0xb1b6, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0x21);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0x7352);
        EXPECT(gbc.pc(), 0xb1b8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb1b6), 0xcb);
        EXPECT(gbc.readMem(0xb1b7), 0xbc);
        // CB BC 007F
        gbc.setState(0x6668, 0x7e2d, 0x110, 0x4613, 0xafea, 0xa4ac, 0x0, 0x1);
        gbc.writeMem(0x6668, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0x1);
        EXPECT(gbc.b(),  0x46);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0xaf);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0x7e2d);
        EXPECT(gbc.pc(), 0x666a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB BC 0080
        gbc.setState(0x598, 0x8153, 0xa740, 0x396e, 0xc65c, 0xc356, 0x1, 0x1);
        gbc.writeMem(0x598, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0xa7);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0x5c);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0x56);
        EXPECT(gbc.sp(), 0x8153);
        EXPECT(gbc.pc(), 0x59a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB BC 0081
        gbc.setState(0x9ef, 0xb3d2, 0xe6b0, 0x8257, 0x5d2, 0xa95c, 0x0, 0x1);
        gbc.writeMem(0x9ef, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0x5);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0x29);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0xb3d2);
        EXPECT(gbc.pc(), 0x9f1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB BC 0082
        gbc.setState(0x4b97, 0xba16, 0x6e0, 0x55b, 0xa1ec, 0x473e, 0x0, 0x0);
        gbc.writeMem(0x4b97, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0xec);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0xba16);
        EXPECT(gbc.pc(), 0x4b99);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB BC 0083
        gbc.setState(0xac6f, 0x2952, 0x3c90, 0x6021, 0x7e6f, 0xd507, 0x0, 0x1);
        gbc.writeMem(0xac6f, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0x21);
        EXPECT(gbc.d(),  0x7e);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0x2952);
        EXPECT(gbc.pc(), 0xac71);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xac6f), 0xcb);
        EXPECT(gbc.readMem(0xac70), 0xbc);
        // CB BC 0084
        gbc.setState(0x14d8, 0x2d98, 0x1dc0, 0xb8c0, 0xcacf, 0x9372, 0x1, 0x0);
        gbc.writeMem(0x14d8, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0xca);
        EXPECT(gbc.e(),  0xcf);
        EXPECT(gbc.h(),  0x13);
        EXPECT(gbc.l(),  0x72);
        EXPECT(gbc.sp(), 0x2d98);
        EXPECT(gbc.pc(), 0x14da);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB BC 0085
        gbc.setState(0xdef6, 0x1084, 0x5590, 0x5c84, 0xf590, 0x5c10, 0x1, 0x0);
        gbc.writeMem(0xdef6, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0x5c);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0x5c);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0x1084);
        EXPECT(gbc.pc(), 0xdef8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdef6), 0xcb);
        EXPECT(gbc.readMem(0xdef7), 0xbc);
        // CB BC 0086
        gbc.setState(0x5718, 0xffcc, 0xbcb0, 0x119c, 0x345a, 0xaeff, 0x0, 0x1);
        gbc.writeMem(0x5718, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0x11);
        EXPECT(gbc.c(),  0x9c);
        EXPECT(gbc.d(),  0x34);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0x2e);
        EXPECT(gbc.l(),  0xff);
        EXPECT(gbc.sp(), 0xffcc);
        EXPECT(gbc.pc(), 0x571a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB BC 0087
        gbc.setState(0x4d0d, 0x1bdc, 0x4f60, 0xfd4b, 0x548c, 0xcbd8, 0x0, 0x0);
        gbc.writeMem(0x4d0d, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0x4b);
        EXPECT(gbc.d(),  0x54);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0x4b);
        EXPECT(gbc.l(),  0xd8);
        EXPECT(gbc.sp(), 0x1bdc);
        EXPECT(gbc.pc(), 0x4d0f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB BC 0088
        gbc.setState(0x14d3, 0x806a, 0x6440, 0x8755, 0x9727, 0xdb33, 0x1, 0x0);
        gbc.writeMem(0x14d3, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0x55);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0x5b);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0x806a);
        EXPECT(gbc.pc(), 0x14d5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB BC 0089
        gbc.setState(0x25aa, 0x5f4c, 0x8580, 0xd7b6, 0x266f, 0x108d, 0x0, 0x1);
        gbc.writeMem(0x25aa, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0x85);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0xb6);
        EXPECT(gbc.d(),  0x26);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0x10);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0x5f4c);
        EXPECT(gbc.pc(), 0x25ac);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB BC 008A
        gbc.setState(0xaee1, 0x937e, 0x4e0, 0xed25, 0xf20b, 0xba5f, 0x1, 0x1);
        gbc.writeMem(0xaee1, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0x4);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0xf2);
        EXPECT(gbc.e(),  0xb);
        EXPECT(gbc.h(),  0x3a);
        EXPECT(gbc.l(),  0x5f);
        EXPECT(gbc.sp(), 0x937e);
        EXPECT(gbc.pc(), 0xaee3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaee1), 0xcb);
        EXPECT(gbc.readMem(0xaee2), 0xbc);
        // CB BC 008B
        gbc.setState(0xaee7, 0xb129, 0xe2a0, 0xef50, 0x5369, 0x3409, 0x0, 0x0);
        gbc.writeMem(0xaee7, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0xef);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0x34);
        EXPECT(gbc.l(),  0x9);
        EXPECT(gbc.sp(), 0xb129);
        EXPECT(gbc.pc(), 0xaee9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaee7), 0xcb);
        EXPECT(gbc.readMem(0xaee8), 0xbc);
        // CB BC 008C
        gbc.setState(0x3c7b, 0x45a9, 0x6d90, 0xda37, 0x251e, 0xf025, 0x1, 0x0);
        gbc.writeMem(0x3c7b, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0x6d);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0x25);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0x70);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0x45a9);
        EXPECT(gbc.pc(), 0x3c7d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB BC 008D
        gbc.setState(0xc348, 0x19be, 0xe9c0, 0x79ee, 0xe39a, 0xd1e, 0x1, 0x0);
        gbc.writeMem(0xc348, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0xe9);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0xe3);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0xd);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0x19be);
        EXPECT(gbc.pc(), 0xc34a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc348), 0xcb);
        EXPECT(gbc.readMem(0xc349), 0xbc);
        // CB BC 008E
        gbc.setState(0xa6de, 0x3358, 0xa8c0, 0x9cb1, 0xe969, 0xa6, 0x1, 0x0);
        gbc.writeMem(0xa6de, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0xa8);
        EXPECT(gbc.b(),  0x9c);
        EXPECT(gbc.c(),  0xb1);
        EXPECT(gbc.d(),  0xe9);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0xa6);
        EXPECT(gbc.sp(), 0x3358);
        EXPECT(gbc.pc(), 0xa6e0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa6de), 0xcb);
        EXPECT(gbc.readMem(0xa6df), 0xbc);
        // CB BC 008F
        gbc.setState(0xb497, 0x9c69, 0x1a0, 0xf0b7, 0x25f9, 0x7f4f, 0x1, 0x0);
        gbc.writeMem(0xb497, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0x1);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0xb7);
        EXPECT(gbc.d(),  0x25);
        EXPECT(gbc.e(),  0xf9);
        EXPECT(gbc.h(),  0x7f);
        EXPECT(gbc.l(),  0x4f);
        EXPECT(gbc.sp(), 0x9c69);
        EXPECT(gbc.pc(), 0xb499);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb497), 0xcb);
        EXPECT(gbc.readMem(0xb498), 0xbc);
        // CB BC 0090
        gbc.setState(0xde62, 0xd553, 0x1290, 0x3b63, 0x9a32, 0x6c37, 0x1, 0x1);
        gbc.writeMem(0xde62, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0x12);
        EXPECT(gbc.b(),  0x3b);
        EXPECT(gbc.c(),  0x63);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0x6c);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0xd553);
        EXPECT(gbc.pc(), 0xde64);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xde62), 0xcb);
        EXPECT(gbc.readMem(0xde63), 0xbc);
        // CB BC 0091
        gbc.setState(0x4b7e, 0x8810, 0x2f40, 0x9ccb, 0x4717, 0x9479, 0x0, 0x0);
        gbc.writeMem(0x4b7e, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0x2f);
        EXPECT(gbc.b(),  0x9c);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0x47);
        EXPECT(gbc.e(),  0x17);
        EXPECT(gbc.h(),  0x14);
        EXPECT(gbc.l(),  0x79);
        EXPECT(gbc.sp(), 0x8810);
        EXPECT(gbc.pc(), 0x4b80);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB BC 0092
        gbc.setState(0xd04c, 0xccd0, 0x4650, 0x7551, 0xa68, 0x51e4, 0x1, 0x0);
        gbc.writeMem(0xd04c, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0x46);
        EXPECT(gbc.b(),  0x75);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0xccd0);
        EXPECT(gbc.pc(), 0xd04e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd04c), 0xcb);
        EXPECT(gbc.readMem(0xd04d), 0xbc);
        // CB BC 0093
        gbc.setState(0x8192, 0x712a, 0x9970, 0x6409, 0x779d, 0xcd57, 0x1, 0x0);
        gbc.writeMem(0x8192, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0x99);
        EXPECT(gbc.b(),  0x64);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0x9d);
        EXPECT(gbc.h(),  0x4d);
        EXPECT(gbc.l(),  0x57);
        EXPECT(gbc.sp(), 0x712a);
        EXPECT(gbc.pc(), 0x8194);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8192), 0xcb);
        EXPECT(gbc.readMem(0x8193), 0xbc);
        // CB BC 0094
        gbc.setState(0xd39b, 0xa787, 0xd8a0, 0xd3ce, 0xf6e0, 0x4d6f, 0x1, 0x0);
        gbc.writeMem(0xd39b, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0xd8);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0x4d);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0xa787);
        EXPECT(gbc.pc(), 0xd39d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd39b), 0xcb);
        EXPECT(gbc.readMem(0xd39c), 0xbc);
        // CB BC 0096
        gbc.setState(0xdebc, 0x2e28, 0x8f0, 0x9e29, 0xaa2b, 0xaa2b, 0x1, 0x0);
        gbc.writeMem(0xdebc, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0x9e);
        EXPECT(gbc.c(),  0x29);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0x2a);
        EXPECT(gbc.l(),  0x2b);
        EXPECT(gbc.sp(), 0x2e28);
        EXPECT(gbc.pc(), 0xdebe);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdebc), 0xcb);
        EXPECT(gbc.readMem(0xdebd), 0xbc);
        // CB BC 0097
        gbc.setState(0x492d, 0xf8b1, 0xda60, 0x78f3, 0xca8a, 0xf14e, 0x0, 0x1);
        gbc.writeMem(0x492d, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0xf3);
        EXPECT(gbc.d(),  0xca);
        EXPECT(gbc.e(),  0x8a);
        EXPECT(gbc.h(),  0x71);
        EXPECT(gbc.l(),  0x4e);
        EXPECT(gbc.sp(), 0xf8b1);
        EXPECT(gbc.pc(), 0x492f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB BC 0098
        gbc.setState(0xd46e, 0xa24, 0x8c30, 0x9b69, 0x800, 0xed18, 0x0, 0x1);
        gbc.writeMem(0xd46e, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0x9b);
        EXPECT(gbc.c(),  0x69);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0x6d);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0xa24);
        EXPECT(gbc.pc(), 0xd470);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd46e), 0xcb);
        EXPECT(gbc.readMem(0xd46f), 0xbc);
        // CB BC 0099
        gbc.setState(0x6fae, 0x4df9, 0x7d00, 0xe838, 0x9449, 0xe695, 0x0, 0x0);
        gbc.writeMem(0x6fae, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0x7d);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0x38);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0x66);
        EXPECT(gbc.l(),  0x95);
        EXPECT(gbc.sp(), 0x4df9);
        EXPECT(gbc.pc(), 0x6fb0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB BC 009A
        gbc.setState(0x2cf7, 0xa8a, 0xecb0, 0x9273, 0x802, 0xe108, 0x1, 0x1);
        gbc.writeMem(0x2cf7, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0x61);
        EXPECT(gbc.l(),  0x8);
        EXPECT(gbc.sp(), 0xa8a);
        EXPECT(gbc.pc(), 0x2cf9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB BC 009B
        gbc.setState(0x154f, 0x376c, 0x7910, 0x817b, 0x523a, 0xba35, 0x0, 0x1);
        gbc.writeMem(0x154f, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0x81);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0x3a);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0x376c);
        EXPECT(gbc.pc(), 0x1551);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB BC 009D
        gbc.setState(0x464f, 0x4df8, 0xa500, 0x59c4, 0x7cab, 0x9683, 0x1, 0x1);
        gbc.writeMem(0x464f, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0xa5);
        EXPECT(gbc.b(),  0x59);
        EXPECT(gbc.c(),  0xc4);
        EXPECT(gbc.d(),  0x7c);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0x16);
        EXPECT(gbc.l(),  0x83);
        EXPECT(gbc.sp(), 0x4df8);
        EXPECT(gbc.pc(), 0x4651);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB BC 009E
        gbc.setState(0xaf82, 0x2030, 0xaa0, 0xcf0a, 0xd25, 0xd83, 0x1, 0x0);
        gbc.writeMem(0xaf82, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0xcf);
        EXPECT(gbc.c(),  0xa);
        EXPECT(gbc.d(),  0xd);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0xd);
        EXPECT(gbc.l(),  0x83);
        EXPECT(gbc.sp(), 0x2030);
        EXPECT(gbc.pc(), 0xaf84);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaf82), 0xcb);
        EXPECT(gbc.readMem(0xaf83), 0xbc);
        // CB BC 009F
        gbc.setState(0x8829, 0x9168, 0x7a90, 0x9f27, 0x47ac, 0x6bee, 0x1, 0x0);
        gbc.writeMem(0x8829, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0x7a);
        EXPECT(gbc.b(),  0x9f);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0x47);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0x6b);
        EXPECT(gbc.l(),  0xee);
        EXPECT(gbc.sp(), 0x9168);
        EXPECT(gbc.pc(), 0x882b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8829), 0xcb);
        EXPECT(gbc.readMem(0x882a), 0xbc);
        // CB BC 00A0
        gbc.setState(0x4dd2, 0x68a8, 0x1ec0, 0xbb84, 0xca13, 0xaaff, 0x0, 0x0);
        gbc.writeMem(0x4dd2, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0xca);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0x2a);
        EXPECT(gbc.l(),  0xff);
        EXPECT(gbc.sp(), 0x68a8);
        EXPECT(gbc.pc(), 0x4dd4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB BC 00A1
        gbc.setState(0xd389, 0x1fe3, 0x540, 0xbd67, 0x1c68, 0xd911, 0x1, 0x0);
        gbc.writeMem(0xd389, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0x5);
        EXPECT(gbc.b(),  0xbd);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0x11);
        EXPECT(gbc.sp(), 0x1fe3);
        EXPECT(gbc.pc(), 0xd38b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd389), 0xcb);
        EXPECT(gbc.readMem(0xd38a), 0xbc);
        // CB BC 00A3
        gbc.setState(0x6463, 0x7c69, 0x76d0, 0xc0e4, 0xae2e, 0xa5df, 0x1, 0x0);
        gbc.writeMem(0x6463, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0xae);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0x25);
        EXPECT(gbc.l(),  0xdf);
        EXPECT(gbc.sp(), 0x7c69);
        EXPECT(gbc.pc(), 0x6465);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB BC 00A4
        gbc.setState(0xe7b0, 0xb279, 0xab10, 0x8b4c, 0xb4f7, 0x3898, 0x1, 0x0);
        gbc.writeMem(0xe7b0, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0xab);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0xf7);
        EXPECT(gbc.h(),  0x38);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0xb279);
        EXPECT(gbc.pc(), 0xe7b2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe7b0), 0xcb);
        EXPECT(gbc.readMem(0xe7b1), 0xbc);
        // CB BC 00A5
        gbc.setState(0xee90, 0xbd59, 0xe90, 0xe3c2, 0x25c5, 0x21c, 0x0, 0x0);
        gbc.writeMem(0xee90, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0x25);
        EXPECT(gbc.e(),  0xc5);
        EXPECT(gbc.h(),  0x2);
        EXPECT(gbc.l(),  0x1c);
        EXPECT(gbc.sp(), 0xbd59);
        EXPECT(gbc.pc(), 0xee92);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xee90), 0xcb);
        EXPECT(gbc.readMem(0xee91), 0xbc);
        // CB BC 00A6
        gbc.setState(0x8440, 0xaa, 0xf420, 0x7944, 0x9a51, 0xf16c, 0x1, 0x1);
        gbc.writeMem(0x8440, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0x51);
        EXPECT(gbc.h(),  0x71);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0xaa);
        EXPECT(gbc.pc(), 0x8442);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8440), 0xcb);
        EXPECT(gbc.readMem(0x8441), 0xbc);
        // CB BC 00A7
        gbc.setState(0xc571, 0x6a80, 0x1e50, 0xc475, 0x81f3, 0x255c, 0x1, 0x1);
        gbc.writeMem(0xc571, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0x81);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0x25);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0x6a80);
        EXPECT(gbc.pc(), 0xc573);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc571), 0xcb);
        EXPECT(gbc.readMem(0xc572), 0xbc);
        // CB BC 00A9
        gbc.setState(0xba63, 0xd77a, 0x52d0, 0xa2f5, 0x385e, 0x804e, 0x1, 0x0);
        gbc.writeMem(0xba63, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0xa2);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0x38);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0x4e);
        EXPECT(gbc.sp(), 0xd77a);
        EXPECT(gbc.pc(), 0xba65);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xba63), 0xcb);
        EXPECT(gbc.readMem(0xba64), 0xbc);
        // CB BC 00AA
        gbc.setState(0x1b62, 0x97b7, 0x8ef0, 0x4cfb, 0x5c29, 0xb0c1, 0x1, 0x0);
        gbc.writeMem(0x1b62, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0x5c);
        EXPECT(gbc.e(),  0x29);
        EXPECT(gbc.h(),  0x30);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0x97b7);
        EXPECT(gbc.pc(), 0x1b64);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB BC 00AB
        gbc.setState(0x6ec5, 0xdd59, 0x9980, 0x20ec, 0xf878, 0x6830, 0x1, 0x1);
        gbc.writeMem(0x6ec5, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0x99);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0xec);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0x68);
        EXPECT(gbc.l(),  0x30);
        EXPECT(gbc.sp(), 0xdd59);
        EXPECT(gbc.pc(), 0x6ec7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB BC 00AC
        gbc.setState(0x9130, 0x980, 0x3a90, 0xae8, 0xa8ad, 0x8d70, 0x0, 0x0);
        gbc.writeMem(0x9130, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0xd);
        EXPECT(gbc.l(),  0x70);
        EXPECT(gbc.sp(), 0x980);
        EXPECT(gbc.pc(), 0x9132);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9130), 0xcb);
        EXPECT(gbc.readMem(0x9131), 0xbc);
        // CB BC 00AD
        gbc.setState(0xed1a, 0xc84f, 0xf30, 0xe816, 0x90dd, 0x12cb, 0x1, 0x0);
        gbc.writeMem(0xed1a, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0xf);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0xc84f);
        EXPECT(gbc.pc(), 0xed1c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xed1a), 0xcb);
        EXPECT(gbc.readMem(0xed1b), 0xbc);
        // CB BC 00AE
        gbc.setState(0x184a, 0xa833, 0x4830, 0x73b7, 0x7ce4, 0x9415, 0x1, 0x0);
        gbc.writeMem(0x184a, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0x48);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0xb7);
        EXPECT(gbc.d(),  0x7c);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0x14);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0xa833);
        EXPECT(gbc.pc(), 0x184c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB BC 00AF
        gbc.setState(0x3daa, 0xb7c4, 0x4270, 0xb69b, 0x482f, 0x6810, 0x0, 0x1);
        gbc.writeMem(0x3daa, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0x42);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0x9b);
        EXPECT(gbc.d(),  0x48);
        EXPECT(gbc.e(),  0x2f);
        EXPECT(gbc.h(),  0x68);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0xb7c4);
        EXPECT(gbc.pc(), 0x3dac);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB BC 00B0
        gbc.setState(0xd1a4, 0x390c, 0xcce0, 0x65e9, 0xe981, 0x9908, 0x1, 0x0);
        gbc.writeMem(0xd1a4, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0xe9);
        EXPECT(gbc.d(),  0xe9);
        EXPECT(gbc.e(),  0x81);
        EXPECT(gbc.h(),  0x19);
        EXPECT(gbc.l(),  0x8);
        EXPECT(gbc.sp(), 0x390c);
        EXPECT(gbc.pc(), 0xd1a6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd1a4), 0xcb);
        EXPECT(gbc.readMem(0xd1a5), 0xbc);
        // CB BC 00B1
        gbc.setState(0xaafe, 0x75b4, 0xfaf0, 0x3c5f, 0xd3b2, 0x3cef, 0x0, 0x1);
        gbc.writeMem(0xaafe, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0xfa);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0xef);
        EXPECT(gbc.sp(), 0x75b4);
        EXPECT(gbc.pc(), 0xab00);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaafe), 0xcb);
        EXPECT(gbc.readMem(0xaaff), 0xbc);
        // CB BC 00B2
        gbc.setState(0x3e4, 0xf8a4, 0x4ef0, 0xfb59, 0x5d43, 0x31d5, 0x0, 0x1);
        gbc.writeMem(0x3e4, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0xfb);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0x5d);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0xd5);
        EXPECT(gbc.sp(), 0xf8a4);
        EXPECT(gbc.pc(), 0x3e6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB BC 00B3
        gbc.setState(0xe9c6, 0x950, 0xac80, 0xa086, 0x1dbf, 0x17bb, 0x0, 0x1);
        gbc.writeMem(0xe9c6, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0xac);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0xbf);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0xbb);
        EXPECT(gbc.sp(), 0x950);
        EXPECT(gbc.pc(), 0xe9c8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe9c6), 0xcb);
        EXPECT(gbc.readMem(0xe9c7), 0xbc);
        // CB BC 00B4
        gbc.setState(0xd269, 0xb6cc, 0x69d0, 0x867e, 0xc3b5, 0x943c, 0x1, 0x0);
        gbc.writeMem(0xd269, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0x86);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0xb5);
        EXPECT(gbc.h(),  0x14);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0xb6cc);
        EXPECT(gbc.pc(), 0xd26b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd269), 0xcb);
        EXPECT(gbc.readMem(0xd26a), 0xbc);
        // CB BC 00B5
        gbc.setState(0xb13b, 0xec72, 0xb30, 0xf33b, 0xd370, 0x6ca1, 0x1, 0x1);
        gbc.writeMem(0xb13b, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0xf3);
        EXPECT(gbc.c(),  0x3b);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0x6c);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0xec72);
        EXPECT(gbc.pc(), 0xb13d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb13b), 0xcb);
        EXPECT(gbc.readMem(0xb13c), 0xbc);
        // CB BC 00B6
        gbc.setState(0x11e8, 0x1662, 0x7710, 0x2e16, 0x1aff, 0xaf0b, 0x0, 0x0);
        gbc.writeMem(0x11e8, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0x2e);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0xff);
        EXPECT(gbc.h(),  0x2f);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0x1662);
        EXPECT(gbc.pc(), 0x11ea);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB BC 00B7
        gbc.setState(0xcdc6, 0xeb6f, 0xdc70, 0xd90b, 0xfecd, 0xcda0, 0x1, 0x0);
        gbc.writeMem(0xcdc6, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0xdc);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0xb);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0xcd);
        EXPECT(gbc.h(),  0x4d);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0xeb6f);
        EXPECT(gbc.pc(), 0xcdc8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcdc6), 0xcb);
        EXPECT(gbc.readMem(0xcdc7), 0xbc);
        // CB BC 00B8
        gbc.setState(0x9b96, 0xcb0, 0x1510, 0xaed2, 0xb766, 0xbba3, 0x0, 0x0);
        gbc.writeMem(0x9b96, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0x15);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0x66);
        EXPECT(gbc.h(),  0x3b);
        EXPECT(gbc.l(),  0xa3);
        EXPECT(gbc.sp(), 0xcb0);
        EXPECT(gbc.pc(), 0x9b98);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9b96), 0xcb);
        EXPECT(gbc.readMem(0x9b97), 0xbc);
        // CB BC 00B9
        gbc.setState(0xa805, 0xfde1, 0xa7f0, 0x3568, 0x4af8, 0x29f0, 0x0, 0x1);
        gbc.writeMem(0xa805, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0xa7);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0x68);
        EXPECT(gbc.d(),  0x4a);
        EXPECT(gbc.e(),  0xf8);
        EXPECT(gbc.h(),  0x29);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0xfde1);
        EXPECT(gbc.pc(), 0xa807);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa805), 0xcb);
        EXPECT(gbc.readMem(0xa806), 0xbc);
        // CB BC 00BA
        gbc.setState(0x9961, 0xc230, 0x71f0, 0x297a, 0x91ed, 0x1ac8, 0x0, 0x1);
        gbc.writeMem(0x9961, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0x71);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0xed);
        EXPECT(gbc.h(),  0x1a);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0xc230);
        EXPECT(gbc.pc(), 0x9963);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9961), 0xcb);
        EXPECT(gbc.readMem(0x9962), 0xbc);
        // CB BC 00BB
        gbc.setState(0x1dbe, 0x31b8, 0x1e20, 0xa426, 0xb22d, 0xb3a5, 0x0, 0x0);
        gbc.writeMem(0x1dbe, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0xa4);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0x31b8);
        EXPECT(gbc.pc(), 0x1dc0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB BC 00BC
        gbc.setState(0x7d22, 0x9a9e, 0x7480, 0xdca2, 0x80c2, 0x4113, 0x0, 0x1);
        gbc.writeMem(0x7d22, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0x74);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0xc2);
        EXPECT(gbc.h(),  0x41);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0x9a9e);
        EXPECT(gbc.pc(), 0x7d24);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB BC 00BD
        gbc.setState(0x72fa, 0x2293, 0xf520, 0x644a, 0x1300, 0x1c3c, 0x1, 0x1);
        gbc.writeMem(0x72fa, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0xf5);
        EXPECT(gbc.b(),  0x64);
        EXPECT(gbc.c(),  0x4a);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0x1c);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0x2293);
        EXPECT(gbc.pc(), 0x72fc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB BC 00BE
        gbc.setState(0xb7ea, 0x3340, 0x1590, 0x9c6c, 0xd9d9, 0xee0b, 0x0, 0x0);
        gbc.writeMem(0xb7ea, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0x15);
        EXPECT(gbc.b(),  0x9c);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0xd9);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0x6e);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0x3340);
        EXPECT(gbc.pc(), 0xb7ec);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb7ea), 0xcb);
        EXPECT(gbc.readMem(0xb7eb), 0xbc);
        // CB BC 00BF
        gbc.setState(0xe305, 0xf512, 0x1650, 0xac17, 0xfedc, 0x17, 0x1, 0x0);
        gbc.writeMem(0xe305, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0x16);
        EXPECT(gbc.b(),  0xac);
        EXPECT(gbc.c(),  0x17);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0x17);
        EXPECT(gbc.sp(), 0xf512);
        EXPECT(gbc.pc(), 0xe307);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe305), 0xcb);
        EXPECT(gbc.readMem(0xe306), 0xbc);
        // CB BC 00C0
        gbc.setState(0x5bc, 0xd7d3, 0xcc40, 0x162b, 0x42b4, 0x10b6, 0x0, 0x0);
        gbc.writeMem(0x5bc, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0x2b);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0xb4);
        EXPECT(gbc.h(),  0x10);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0xd7d3);
        EXPECT(gbc.pc(), 0x5be);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB BC 00C1
        gbc.setState(0xcd54, 0x365d, 0xe3a0, 0xe6fa, 0xccd7, 0x1dfc, 0x0, 0x0);
        gbc.writeMem(0xcd54, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0xfa);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0xd7);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0xfc);
        EXPECT(gbc.sp(), 0x365d);
        EXPECT(gbc.pc(), 0xcd56);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcd54), 0xcb);
        EXPECT(gbc.readMem(0xcd55), 0xbc);
        // CB BC 00C2
        gbc.setState(0x780, 0xd276, 0x8630, 0xfe3e, 0x8682, 0x81d8, 0x1, 0x1);
        gbc.writeMem(0x780, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0x82);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0xd8);
        EXPECT(gbc.sp(), 0xd276);
        EXPECT(gbc.pc(), 0x782);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB BC 00C3
        gbc.setState(0x6aa4, 0xb22b, 0x9fb0, 0x8cc7, 0x8171, 0xd98c, 0x0, 0x0);
        gbc.writeMem(0x6aa4, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0x9f);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0xc7);
        EXPECT(gbc.d(),  0x81);
        EXPECT(gbc.e(),  0x71);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0x8c);
        EXPECT(gbc.sp(), 0xb22b);
        EXPECT(gbc.pc(), 0x6aa6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB BC 00C4
        gbc.setState(0x69b, 0x696, 0x27a0, 0x7325, 0xc03d, 0xae70, 0x0, 0x0);
        gbc.writeMem(0x69b, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0x27);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0x2e);
        EXPECT(gbc.l(),  0x70);
        EXPECT(gbc.sp(), 0x696);
        EXPECT(gbc.pc(), 0x69d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB BC 00C5
        gbc.setState(0xad30, 0xd1ee, 0xafd0, 0x8e38, 0xb57b, 0x186d, 0x1, 0x1);
        gbc.writeMem(0xad30, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0xaf);
        EXPECT(gbc.b(),  0x8e);
        EXPECT(gbc.c(),  0x38);
        EXPECT(gbc.d(),  0xb5);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0x18);
        EXPECT(gbc.l(),  0x6d);
        EXPECT(gbc.sp(), 0xd1ee);
        EXPECT(gbc.pc(), 0xad32);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xad30), 0xcb);
        EXPECT(gbc.readMem(0xad31), 0xbc);
        // CB BC 00C6
        gbc.setState(0xc84c, 0xc55b, 0xbbc0, 0x7e5e, 0xe4b, 0x596c, 0x1, 0x0);
        gbc.writeMem(0xc84c, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0xe);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0xc55b);
        EXPECT(gbc.pc(), 0xc84e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc84c), 0xcb);
        EXPECT(gbc.readMem(0xc84d), 0xbc);
        // CB BC 00C7
        gbc.setState(0x663a, 0x921a, 0xef0, 0xb632, 0xea95, 0xe360, 0x0, 0x0);
        gbc.writeMem(0x663a, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0x32);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0x95);
        EXPECT(gbc.h(),  0x63);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0x921a);
        EXPECT(gbc.pc(), 0x663c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB BC 00C8
        gbc.setState(0x2500, 0xda0a, 0xdf00, 0x96fe, 0x436a, 0xb34, 0x1, 0x0);
        gbc.writeMem(0x2500, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0xdf);
        EXPECT(gbc.b(),  0x96);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0x6a);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0xda0a);
        EXPECT(gbc.pc(), 0x2502);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB BC 00C9
        gbc.setState(0xd458, 0x797, 0x8e80, 0xdee, 0x19aa, 0x40f1, 0x1, 0x1);
        gbc.writeMem(0xd458, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0xd);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0x19);
        EXPECT(gbc.e(),  0xaa);
        EXPECT(gbc.h(),  0x40);
        EXPECT(gbc.l(),  0xf1);
        EXPECT(gbc.sp(), 0x797);
        EXPECT(gbc.pc(), 0xd45a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd458), 0xcb);
        EXPECT(gbc.readMem(0xd459), 0xbc);
        // CB BC 00CA
        gbc.setState(0x95dc, 0xd3a1, 0x5dc0, 0x1bd7, 0xa7f2, 0x4624, 0x0, 0x1);
        gbc.writeMem(0x95dc, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0x5d);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0xd7);
        EXPECT(gbc.d(),  0xa7);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0x46);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0xd3a1);
        EXPECT(gbc.pc(), 0x95de);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x95dc), 0xcb);
        EXPECT(gbc.readMem(0x95dd), 0xbc);
        // CB BC 00CB
        gbc.setState(0x6af8, 0xd219, 0xba60, 0xd575, 0x3950, 0x8ac6, 0x0, 0x0);
        gbc.writeMem(0x6af8, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0xd5);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0x39);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0xa);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0xd219);
        EXPECT(gbc.pc(), 0x6afa);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB BC 00CC
        gbc.setState(0x4592, 0x2fe7, 0x1e40, 0x2aa6, 0x1de1, 0x1d6, 0x1, 0x0);
        gbc.writeMem(0x4592, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0xa6);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0xe1);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0xd6);
        EXPECT(gbc.sp(), 0x2fe7);
        EXPECT(gbc.pc(), 0x4594);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB BC 00CD
        gbc.setState(0x7a6, 0x6c53, 0x5a80, 0x5195, 0xeab, 0x748b, 0x0, 0x0);
        gbc.writeMem(0x7a6, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0x95);
        EXPECT(gbc.d(),  0xe);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0x74);
        EXPECT(gbc.l(),  0x8b);
        EXPECT(gbc.sp(), 0x6c53);
        EXPECT(gbc.pc(), 0x7a8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB BC 00CE
        gbc.setState(0x574, 0xcf67, 0xf230, 0xc66a, 0xc7a9, 0x9a9e, 0x0, 0x1);
        gbc.writeMem(0x574, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0xc6);
        EXPECT(gbc.c(),  0x6a);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0x1a);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0xcf67);
        EXPECT(gbc.pc(), 0x576);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB BC 00CF
        gbc.setState(0xda6a, 0x72c0, 0x7ae0, 0xd33b, 0xbdf3, 0x83ee, 0x1, 0x1);
        gbc.writeMem(0xda6a, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0x7a);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0x3b);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0x3);
        EXPECT(gbc.l(),  0xee);
        EXPECT(gbc.sp(), 0x72c0);
        EXPECT(gbc.pc(), 0xda6c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xda6a), 0xcb);
        EXPECT(gbc.readMem(0xda6b), 0xbc);
        // CB BC 00D0
        gbc.setState(0x19c, 0x23ae, 0xc580, 0x702e, 0xd44a, 0xf797, 0x0, 0x0);
        gbc.writeMem(0x19c, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0xc5);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0x2e);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0x77);
        EXPECT(gbc.l(),  0x97);
        EXPECT(gbc.sp(), 0x23ae);
        EXPECT(gbc.pc(), 0x19e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB BC 00D1
        gbc.setState(0xe06d, 0x4783, 0x160, 0x3f0, 0x1082, 0xbdeb, 0x0, 0x1);
        gbc.writeMem(0xe06d, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0x1);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0xf0);
        EXPECT(gbc.d(),  0x10);
        EXPECT(gbc.e(),  0x82);
        EXPECT(gbc.h(),  0x3d);
        EXPECT(gbc.l(),  0xeb);
        EXPECT(gbc.sp(), 0x4783);
        EXPECT(gbc.pc(), 0xe06f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe06d), 0xcb);
        EXPECT(gbc.readMem(0xe06e), 0xbc);
        // CB BC 00D2
        gbc.setState(0x6dde, 0x87e6, 0x4920, 0xc3f4, 0xdbb1, 0xe6e2, 0x0, 0x0);
        gbc.writeMem(0x6dde, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0xc3);
        EXPECT(gbc.c(),  0xf4);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0xb1);
        EXPECT(gbc.h(),  0x66);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0x87e6);
        EXPECT(gbc.pc(), 0x6de0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB BC 00D3
        gbc.setState(0x5160, 0x9f2c, 0x7540, 0x4804, 0x18ba, 0x19fb, 0x0, 0x0);
        gbc.writeMem(0x5160, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0x19);
        EXPECT(gbc.l(),  0xfb);
        EXPECT(gbc.sp(), 0x9f2c);
        EXPECT(gbc.pc(), 0x5162);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB BC 00D4
        gbc.setState(0x2abe, 0xfdcf, 0xe350, 0x5ced, 0x7d1e, 0xc903, 0x0, 0x1);
        gbc.writeMem(0x2abe, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0x5c);
        EXPECT(gbc.c(),  0xed);
        EXPECT(gbc.d(),  0x7d);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0x49);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0xfdcf);
        EXPECT(gbc.pc(), 0x2ac0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB BC 00D5
        gbc.setState(0x1e54, 0x55c5, 0xa4a0, 0xf611, 0xe4d1, 0xf8cc, 0x0, 0x0);
        gbc.writeMem(0x1e54, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0xa4);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0x11);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0xd1);
        EXPECT(gbc.h(),  0x78);
        EXPECT(gbc.l(),  0xcc);
        EXPECT(gbc.sp(), 0x55c5);
        EXPECT(gbc.pc(), 0x1e56);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB BC 00D6
        gbc.setState(0xde9f, 0xcf3d, 0xd160, 0xbd4b, 0xc72e, 0x34af, 0x0, 0x0);
        gbc.writeMem(0xde9f, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0xd1);
        EXPECT(gbc.b(),  0xbd);
        EXPECT(gbc.c(),  0x4b);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0x34);
        EXPECT(gbc.l(),  0xaf);
        EXPECT(gbc.sp(), 0xcf3d);
        EXPECT(gbc.pc(), 0xdea1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xde9f), 0xcb);
        EXPECT(gbc.readMem(0xdea0), 0xbc);
        // CB BC 00D8
        gbc.setState(0x579c, 0x4cf7, 0x6170, 0x15b3, 0xc256, 0x89e9, 0x1, 0x1);
        gbc.writeMem(0x579c, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0xb3);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0x56);
        EXPECT(gbc.h(),  0x9);
        EXPECT(gbc.l(),  0xe9);
        EXPECT(gbc.sp(), 0x4cf7);
        EXPECT(gbc.pc(), 0x579e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB BC 00D9
        gbc.setState(0x761, 0x8151, 0xa8f0, 0xb027, 0x6665, 0x20b8, 0x1, 0x0);
        gbc.writeMem(0x761, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0xa8);
        EXPECT(gbc.b(),  0xb0);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0x66);
        EXPECT(gbc.e(),  0x65);
        EXPECT(gbc.h(),  0x20);
        EXPECT(gbc.l(),  0xb8);
        EXPECT(gbc.sp(), 0x8151);
        EXPECT(gbc.pc(), 0x763);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB BC 00DA
        gbc.setState(0x23c, 0x626, 0x6280, 0x5966, 0x7ab1, 0x84a0, 0x1, 0x1);
        gbc.writeMem(0x23c, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0x59);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0xb1);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0x626);
        EXPECT(gbc.pc(), 0x23e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB BC 00DB
        gbc.setState(0x8e95, 0x3540, 0x9dd0, 0x2eb6, 0xf5a5, 0xfdb6, 0x0, 0x0);
        gbc.writeMem(0x8e95, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0x9d);
        EXPECT(gbc.b(),  0x2e);
        EXPECT(gbc.c(),  0xb6);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0xa5);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0x3540);
        EXPECT(gbc.pc(), 0x8e97);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8e95), 0xcb);
        EXPECT(gbc.readMem(0x8e96), 0xbc);
        // CB BC 00DC
        gbc.setState(0xd346, 0xaa83, 0xb750, 0xab6a, 0x8828, 0x2181, 0x1, 0x1);
        gbc.writeMem(0xd346, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0xab);
        EXPECT(gbc.c(),  0x6a);
        EXPECT(gbc.d(),  0x88);
        EXPECT(gbc.e(),  0x28);
        EXPECT(gbc.h(),  0x21);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0xaa83);
        EXPECT(gbc.pc(), 0xd348);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd346), 0xcb);
        EXPECT(gbc.readMem(0xd347), 0xbc);
        // CB BC 00DD
        gbc.setState(0x3c07, 0xaf6a, 0xc0f0, 0x98f7, 0x1d50, 0xa591, 0x1, 0x1);
        gbc.writeMem(0x3c07, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0x98);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0x25);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0xaf6a);
        EXPECT(gbc.pc(), 0x3c09);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB BC 00DE
        gbc.setState(0x9aa, 0x183c, 0x1840, 0x5cc6, 0x2a01, 0x937d, 0x1, 0x0);
        gbc.writeMem(0x9aa, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0x5c);
        EXPECT(gbc.c(),  0xc6);
        EXPECT(gbc.d(),  0x2a);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0x13);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0x183c);
        EXPECT(gbc.pc(), 0x9ac);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB BC 00DF
        gbc.setState(0xb991, 0x731a, 0x5290, 0xd017, 0xdf7f, 0x16c7, 0x1, 0x0);
        gbc.writeMem(0xb991, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0xd0);
        EXPECT(gbc.c(),  0x17);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0x16);
        EXPECT(gbc.l(),  0xc7);
        EXPECT(gbc.sp(), 0x731a);
        EXPECT(gbc.pc(), 0xb993);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb991), 0xcb);
        EXPECT(gbc.readMem(0xb992), 0xbc);
        // CB BC 00E0
        gbc.setState(0x2bb4, 0x3375, 0x7850, 0x5ee6, 0xd205, 0x2613, 0x0, 0x1);
        gbc.writeMem(0x2bb4, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0x3375);
        EXPECT(gbc.pc(), 0x2bb6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB BC 00E1
        gbc.setState(0xbf55, 0x6b6, 0x8470, 0x5860, 0x95aa, 0x8e15, 0x0, 0x0);
        gbc.writeMem(0xbf55, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0x84);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0x60);
        EXPECT(gbc.d(),  0x95);
        EXPECT(gbc.e(),  0xaa);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0x6b6);
        EXPECT(gbc.pc(), 0xbf57);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbf55), 0xcb);
        EXPECT(gbc.readMem(0xbf56), 0xbc);
        // CB BC 00E2
        gbc.setState(0x5b6b, 0xc6da, 0x1f40, 0xa65, 0xea8a, 0xeab2, 0x0, 0x0);
        gbc.writeMem(0x5b6b, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0x65);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0x8a);
        EXPECT(gbc.h(),  0x6a);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0xc6da);
        EXPECT(gbc.pc(), 0x5b6d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB BC 00E3
        gbc.setState(0x7aaa, 0xe944, 0x2190, 0xe597, 0xcda7, 0xbc9a, 0x0, 0x1);
        gbc.writeMem(0x7aaa, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0xe5);
        EXPECT(gbc.c(),  0x97);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0xa7);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0xe944);
        EXPECT(gbc.pc(), 0x7aac);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB BC 00E4
        gbc.setState(0x857f, 0xfa9f, 0xe4f0, 0x37e2, 0x8772, 0x7490, 0x0, 0x0);
        gbc.writeMem(0x857f, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0xe4);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0x87);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0x74);
        EXPECT(gbc.l(),  0x90);
        EXPECT(gbc.sp(), 0xfa9f);
        EXPECT(gbc.pc(), 0x8581);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x857f), 0xcb);
        EXPECT(gbc.readMem(0x8580), 0xbc);
        // CB BC 00E5
        gbc.setState(0x8e65, 0xc87c, 0xab10, 0x8518, 0xf5e2, 0x3c9, 0x1, 0x1);
        gbc.writeMem(0x8e65, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0xab);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0xe2);
        EXPECT(gbc.h(),  0x3);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0xc87c);
        EXPECT(gbc.pc(), 0x8e67);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8e65), 0xcb);
        EXPECT(gbc.readMem(0x8e66), 0xbc);
        // CB BC 00E6
        gbc.setState(0x902b, 0xe3c, 0x3f70, 0xfe7f, 0x1418, 0x2af1, 0x1, 0x0);
        gbc.writeMem(0x902b, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0x14);
        EXPECT(gbc.e(),  0x18);
        EXPECT(gbc.h(),  0x2a);
        EXPECT(gbc.l(),  0xf1);
        EXPECT(gbc.sp(), 0xe3c);
        EXPECT(gbc.pc(), 0x902d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x902b), 0xcb);
        EXPECT(gbc.readMem(0x902c), 0xbc);
        // CB BC 00E7
        gbc.setState(0x7df7, 0xbf48, 0xf60, 0x574, 0xb7c8, 0x70a6, 0x0, 0x0);
        gbc.writeMem(0x7df7, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0xf);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0x70);
        EXPECT(gbc.l(),  0xa6);
        EXPECT(gbc.sp(), 0xbf48);
        EXPECT(gbc.pc(), 0x7df9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB BC 00E8
        gbc.setState(0x7abf, 0x2ab3, 0xffa0, 0x310d, 0x7c51, 0x91de, 0x0, 0x0);
        gbc.writeMem(0x7abf, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0xd);
        EXPECT(gbc.d(),  0x7c);
        EXPECT(gbc.e(),  0x51);
        EXPECT(gbc.h(),  0x11);
        EXPECT(gbc.l(),  0xde);
        EXPECT(gbc.sp(), 0x2ab3);
        EXPECT(gbc.pc(), 0x7ac1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB BC 00E9
        gbc.setState(0xb60c, 0xd0a8, 0x600, 0x3059, 0xe516, 0xb7dc, 0x0, 0x1);
        gbc.writeMem(0xb60c, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0xdc);
        EXPECT(gbc.sp(), 0xd0a8);
        EXPECT(gbc.pc(), 0xb60e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb60c), 0xcb);
        EXPECT(gbc.readMem(0xb60d), 0xbc);
        // CB BC 00EA
        gbc.setState(0x8ba2, 0x3ae1, 0x82c0, 0xf560, 0x471d, 0xd1eb, 0x1, 0x1);
        gbc.writeMem(0x8ba2, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0x82);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0x60);
        EXPECT(gbc.d(),  0x47);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0xeb);
        EXPECT(gbc.sp(), 0x3ae1);
        EXPECT(gbc.pc(), 0x8ba4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8ba2), 0xcb);
        EXPECT(gbc.readMem(0x8ba3), 0xbc);
        // CB BC 00EB
        gbc.setState(0xb7d0, 0x17be, 0xf150, 0x6a40, 0x823f, 0xeb83, 0x0, 0x1);
        gbc.writeMem(0xb7d0, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0xf1);
        EXPECT(gbc.b(),  0x6a);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0x6b);
        EXPECT(gbc.l(),  0x83);
        EXPECT(gbc.sp(), 0x17be);
        EXPECT(gbc.pc(), 0xb7d2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb7d0), 0xcb);
        EXPECT(gbc.readMem(0xb7d1), 0xbc);
        // CB BC 00EC
        gbc.setState(0xd998, 0x74e1, 0x5100, 0xbb66, 0x1bcc, 0xdabb, 0x0, 0x0);
        gbc.writeMem(0xd998, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0xcc);
        EXPECT(gbc.h(),  0x5a);
        EXPECT(gbc.l(),  0xbb);
        EXPECT(gbc.sp(), 0x74e1);
        EXPECT(gbc.pc(), 0xd99a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd998), 0xcb);
        EXPECT(gbc.readMem(0xd999), 0xbc);
        // CB BC 00ED
        gbc.setState(0xaab0, 0xbe92, 0xccb0, 0xc053, 0x19df, 0x83a7, 0x0, 0x1);
        gbc.writeMem(0xaab0, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0x53);
        EXPECT(gbc.d(),  0x19);
        EXPECT(gbc.e(),  0xdf);
        EXPECT(gbc.h(),  0x3);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0xbe92);
        EXPECT(gbc.pc(), 0xaab2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaab0), 0xcb);
        EXPECT(gbc.readMem(0xaab1), 0xbc);
        // CB BC 00EE
        gbc.setState(0x21e5, 0x10f6, 0x37b0, 0xef5a, 0xfab7, 0x5658, 0x0, 0x1);
        gbc.writeMem(0x21e5, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0xef);
        EXPECT(gbc.c(),  0x5a);
        EXPECT(gbc.d(),  0xfa);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0x10f6);
        EXPECT(gbc.pc(), 0x21e7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB BC 00EF
        gbc.setState(0xda39, 0x5196, 0x54e0, 0xf590, 0xdefe, 0xd6a, 0x0, 0x1);
        gbc.writeMem(0xda39, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0x54);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0x90);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0xfe);
        EXPECT(gbc.h(),  0xd);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0x5196);
        EXPECT(gbc.pc(), 0xda3b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xda39), 0xcb);
        EXPECT(gbc.readMem(0xda3a), 0xbc);
        // CB BC 00F0
        gbc.setState(0xcbb5, 0x1b57, 0xe0a0, 0x2af4, 0x6edd, 0x65b1, 0x0, 0x0);
        gbc.writeMem(0xcbb5, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0xe0);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0xf4);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0x65);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0x1b57);
        EXPECT(gbc.pc(), 0xcbb7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcbb5), 0xcb);
        EXPECT(gbc.readMem(0xcbb6), 0xbc);
        // CB BC 00F1
        gbc.setState(0x80ca, 0x255, 0xfce0, 0x72a8, 0x768e, 0xc320, 0x0, 0x1);
        gbc.writeMem(0x80ca, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0xa8);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0x255);
        EXPECT(gbc.pc(), 0x80cc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x80ca), 0xcb);
        EXPECT(gbc.readMem(0x80cb), 0xbc);
        // CB BC 00F2
        gbc.setState(0xb97, 0x8efd, 0xfd80, 0xdfd5, 0x6606, 0xf734, 0x1, 0x0);
        gbc.writeMem(0xb97, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0xfd);
        EXPECT(gbc.b(),  0xdf);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0x66);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0x77);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0x8efd);
        EXPECT(gbc.pc(), 0xb99);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB BC 00F3
        gbc.setState(0xc22e, 0x12b6, 0xd4b0, 0x28c5, 0x8890, 0xbe77, 0x0, 0x1);
        gbc.writeMem(0xc22e, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0x28);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0x88);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0x12b6);
        EXPECT(gbc.pc(), 0xc230);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc22e), 0xcb);
        EXPECT(gbc.readMem(0xc22f), 0xbc);
        // CB BC 00F4
        gbc.setState(0x37e1, 0x2df5, 0x9a70, 0x3111, 0xde55, 0x4d2c, 0x1, 0x0);
        gbc.writeMem(0x37e1, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0x9a);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0x11);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0x55);
        EXPECT(gbc.h(),  0x4d);
        EXPECT(gbc.l(),  0x2c);
        EXPECT(gbc.sp(), 0x2df5);
        EXPECT(gbc.pc(), 0x37e3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB BC 00F5
        gbc.setState(0x88b1, 0xb31b, 0x6300, 0xcc61, 0x1dbd, 0x9901, 0x0, 0x0);
        gbc.writeMem(0x88b1, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0xcc);
        EXPECT(gbc.c(),  0x61);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0xbd);
        EXPECT(gbc.h(),  0x19);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0xb31b);
        EXPECT(gbc.pc(), 0x88b3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x88b1), 0xcb);
        EXPECT(gbc.readMem(0x88b2), 0xbc);
        // CB BC 00F6
        gbc.setState(0xbdad, 0xe390, 0x8e80, 0x8601, 0x6ead, 0x7191, 0x1, 0x0);
        gbc.writeMem(0xbdad, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0x86);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0x71);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0xe390);
        EXPECT(gbc.pc(), 0xbdaf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbdad), 0xcb);
        EXPECT(gbc.readMem(0xbdae), 0xbc);
        // CB BC 00F7
        gbc.setState(0x6d37, 0x378a, 0xac0, 0x1025, 0xfa8c, 0x3c45, 0x1, 0x1);
        gbc.writeMem(0x6d37, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0xfa);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0x45);
        EXPECT(gbc.sp(), 0x378a);
        EXPECT(gbc.pc(), 0x6d39);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB BC 00F8
        gbc.setState(0xcc3e, 0x57e4, 0x2a30, 0x8293, 0xcc8d, 0x7a3d, 0x1, 0x1);
        gbc.writeMem(0xcc3e, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0x93);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0x7a);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0x57e4);
        EXPECT(gbc.pc(), 0xcc40);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcc3e), 0xcb);
        EXPECT(gbc.readMem(0xcc3f), 0xbc);
        // CB BC 00F9
        gbc.setState(0xcfe5, 0xb207, 0xf50, 0x6865, 0x9251, 0xe4a, 0x0, 0x1);
        gbc.writeMem(0xcfe5, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0xf);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0x65);
        EXPECT(gbc.d(),  0x92);
        EXPECT(gbc.e(),  0x51);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0xb207);
        EXPECT(gbc.pc(), 0xcfe7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcfe5), 0xcb);
        EXPECT(gbc.readMem(0xcfe6), 0xbc);
        // CB BC 00FA
        gbc.setState(0x2a5e, 0x29be, 0xe540, 0xe58c, 0x1ef4, 0x172d, 0x0, 0x1);
        gbc.writeMem(0x2a5e, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0xe5);
        EXPECT(gbc.b(),  0xe5);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0x1e);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0x29be);
        EXPECT(gbc.pc(), 0x2a60);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB BC 00FB
        gbc.setState(0x5a7a, 0x5b0a, 0xb3d0, 0x4250, 0x7b65, 0x24a7, 0x0, 0x1);
        gbc.writeMem(0x5a7a, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0xb3);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0x7b);
        EXPECT(gbc.e(),  0x65);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0x5b0a);
        EXPECT(gbc.pc(), 0x5a7c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB BC 00FC
        gbc.setState(0x1939, 0xf8ae, 0x6b00, 0x22bc, 0x9803, 0x6d7e, 0x1, 0x1);
        gbc.writeMem(0x1939, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0xbc);
        EXPECT(gbc.d(),  0x98);
        EXPECT(gbc.e(),  0x3);
        EXPECT(gbc.h(),  0x6d);
        EXPECT(gbc.l(),  0x7e);
        EXPECT(gbc.sp(), 0xf8ae);
        EXPECT(gbc.pc(), 0x193b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB BC 00FD
        gbc.setState(0x15ac, 0xbee9, 0x5480, 0x247b, 0x85d8, 0x5fb5, 0x1, 0x0);
        gbc.writeMem(0x15ac, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0x54);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0xbee9);
        EXPECT(gbc.pc(), 0x15ae);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB BC 00FE
        gbc.setState(0x872e, 0x36d3, 0x57f0, 0x4c88, 0xb7ef, 0x8d16, 0x0, 0x1);
        gbc.writeMem(0x872e, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0x57);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0x88);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0xef);
        EXPECT(gbc.h(),  0xd);
        EXPECT(gbc.l(),  0x16);
        EXPECT(gbc.sp(), 0x36d3);
        EXPECT(gbc.pc(), 0x8730);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x872e), 0xcb);
        EXPECT(gbc.readMem(0x872f), 0xbc);
        // CB BC 0100
        gbc.setState(0x54bc, 0xef65, 0xdfd0, 0x4a77, 0xc83c, 0x666c, 0x0, 0x0);
        gbc.writeMem(0x54bc, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0xdf);
        EXPECT(gbc.b(),  0x4a);
        EXPECT(gbc.c(),  0x77);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0x3c);
        EXPECT(gbc.h(),  0x66);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0xef65);
        EXPECT(gbc.pc(), 0x54be);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB BC 0101
        gbc.setState(0xc3e9, 0xb79b, 0x4cc0, 0xa079, 0x9e3a, 0x4e36, 0x1, 0x1);
        gbc.writeMem(0xc3e9, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0x4c);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0x79);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0x4e);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0xb79b);
        EXPECT(gbc.pc(), 0xc3eb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc3e9), 0xcb);
        EXPECT(gbc.readMem(0xc3ea), 0xbc);
        // CB BC 0102
        gbc.setState(0xc31f, 0xad7, 0x2090, 0x13f, 0xb572, 0xd35e, 0x0, 0x0);
        gbc.writeMem(0xc31f, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0x20);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0x3f);
        EXPECT(gbc.d(),  0xb5);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0x53);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0xad7);
        EXPECT(gbc.pc(), 0xc321);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc31f), 0xcb);
        EXPECT(gbc.readMem(0xc320), 0xbc);
        // CB BC 0103
        gbc.setState(0x9102, 0x777d, 0xcc70, 0x6803, 0xad1e, 0x6dd, 0x1, 0x0);
        gbc.writeMem(0x9102, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0x3);
        EXPECT(gbc.d(),  0xad);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0x6);
        EXPECT(gbc.l(),  0xdd);
        EXPECT(gbc.sp(), 0x777d);
        EXPECT(gbc.pc(), 0x9104);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9102), 0xcb);
        EXPECT(gbc.readMem(0x9103), 0xbc);
        // CB BC 0104
        gbc.setState(0xaffb, 0x6be4, 0xc210, 0x9cb6, 0x3f7b, 0xecfb, 0x1, 0x0);
        gbc.writeMem(0xaffb, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0xc2);
        EXPECT(gbc.b(),  0x9c);
        EXPECT(gbc.c(),  0xb6);
        EXPECT(gbc.d(),  0x3f);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0x6c);
        EXPECT(gbc.l(),  0xfb);
        EXPECT(gbc.sp(), 0x6be4);
        EXPECT(gbc.pc(), 0xaffd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaffb), 0xcb);
        EXPECT(gbc.readMem(0xaffc), 0xbc);
        // CB BC 0105
        gbc.setState(0x8df5, 0x9206, 0xc420, 0xe124, 0x9471, 0x7d80, 0x1, 0x1);
        gbc.writeMem(0x8df5, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0xc4);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0x71);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0x80);
        EXPECT(gbc.sp(), 0x9206);
        EXPECT(gbc.pc(), 0x8df7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8df5), 0xcb);
        EXPECT(gbc.readMem(0x8df6), 0xbc);
        // CB BC 0106
        gbc.setState(0xaf50, 0xa53e, 0xbcb0, 0xa9c6, 0xbb52, 0x98a2, 0x0, 0x1);
        gbc.writeMem(0xaf50, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0xa9);
        EXPECT(gbc.c(),  0xc6);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0x18);
        EXPECT(gbc.l(),  0xa2);
        EXPECT(gbc.sp(), 0xa53e);
        EXPECT(gbc.pc(), 0xaf52);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaf50), 0xcb);
        EXPECT(gbc.readMem(0xaf51), 0xbc);
        // CB BC 0107
        gbc.setState(0x7e61, 0xfaa9, 0x42e0, 0x235b, 0xdfec, 0x3616, 0x0, 0x1);
        gbc.writeMem(0x7e61, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0x42);
        EXPECT(gbc.b(),  0x23);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0xec);
        EXPECT(gbc.h(),  0x36);
        EXPECT(gbc.l(),  0x16);
        EXPECT(gbc.sp(), 0xfaa9);
        EXPECT(gbc.pc(), 0x7e63);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB BC 0108
        gbc.setState(0xaed9, 0xd6a5, 0x6f70, 0x370d, 0x24b5, 0xf39d, 0x1, 0x1);
        gbc.writeMem(0xaed9, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0xd);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0xb5);
        EXPECT(gbc.h(),  0x73);
        EXPECT(gbc.l(),  0x9d);
        EXPECT(gbc.sp(), 0xd6a5);
        EXPECT(gbc.pc(), 0xaedb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaed9), 0xcb);
        EXPECT(gbc.readMem(0xaeda), 0xbc);
        // CB BC 0109
        gbc.setState(0x8298, 0x9872, 0x5270, 0x8712, 0x3f7d, 0x1e94, 0x0, 0x1);
        gbc.writeMem(0x8298, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0x3f);
        EXPECT(gbc.e(),  0x7d);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0x9872);
        EXPECT(gbc.pc(), 0x829a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8298), 0xcb);
        EXPECT(gbc.readMem(0x8299), 0xbc);
        // CB BC 010A
        gbc.setState(0x792c, 0x6588, 0x11c0, 0x7956, 0x4333, 0x4e95, 0x0, 0x1);
        gbc.writeMem(0x792c, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0x11);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0x33);
        EXPECT(gbc.h(),  0x4e);
        EXPECT(gbc.l(),  0x95);
        EXPECT(gbc.sp(), 0x6588);
        EXPECT(gbc.pc(), 0x792e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB BC 010B
        gbc.setState(0x1ffa, 0x6c6b, 0x7e30, 0x7885, 0xd3b9, 0x33b4, 0x0, 0x0);
        gbc.writeMem(0x1ffa, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0x85);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0x6c6b);
        EXPECT(gbc.pc(), 0x1ffc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB BC 010C
        gbc.setState(0xbbfd, 0x1c93, 0x4b70, 0x602f, 0x9ff2, 0xd6b8, 0x0, 0x0);
        gbc.writeMem(0xbbfd, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0x2f);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0xb8);
        EXPECT(gbc.sp(), 0x1c93);
        EXPECT(gbc.pc(), 0xbbff);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbbfd), 0xcb);
        EXPECT(gbc.readMem(0xbbfe), 0xbc);
        // CB BC 010D
        gbc.setState(0x6d0e, 0x87d0, 0x7880, 0xf216, 0xedfc, 0xbe13, 0x0, 0x1);
        gbc.writeMem(0x6d0e, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0xf2);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0xed);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0x87d0);
        EXPECT(gbc.pc(), 0x6d10);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB BC 010E
        gbc.setState(0xbfa0, 0x378d, 0x38b0, 0x4d0f, 0x95fd, 0x2f80, 0x0, 0x1);
        gbc.writeMem(0xbfa0, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0x95);
        EXPECT(gbc.e(),  0xfd);
        EXPECT(gbc.h(),  0x2f);
        EXPECT(gbc.l(),  0x80);
        EXPECT(gbc.sp(), 0x378d);
        EXPECT(gbc.pc(), 0xbfa2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbfa0), 0xcb);
        EXPECT(gbc.readMem(0xbfa1), 0xbc);
        // CB BC 010F
        gbc.setState(0xd539, 0x1764, 0xa6e0, 0xab9e, 0x93ce, 0x242b, 0x0, 0x0);
        gbc.writeMem(0xd539, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0xa6);
        EXPECT(gbc.b(),  0xab);
        EXPECT(gbc.c(),  0x9e);
        EXPECT(gbc.d(),  0x93);
        EXPECT(gbc.e(),  0xce);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0x2b);
        EXPECT(gbc.sp(), 0x1764);
        EXPECT(gbc.pc(), 0xd53b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd539), 0xcb);
        EXPECT(gbc.readMem(0xd53a), 0xbc);
        // CB BC 0111
        gbc.setState(0x9aae, 0xe4c8, 0xfe0, 0x3410, 0x2fcb, 0x1b29, 0x1, 0x1);
        gbc.writeMem(0x9aae, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0xf);
        EXPECT(gbc.b(),  0x34);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0xcb);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0xe4c8);
        EXPECT(gbc.pc(), 0x9ab0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9aae), 0xcb);
        EXPECT(gbc.readMem(0x9aaf), 0xbc);
        // CB BC 0113
        gbc.setState(0x220f, 0x1538, 0xac40, 0x9248, 0x3b4a, 0x5814, 0x0, 0x0);
        gbc.writeMem(0x220f, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0xac);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0x3b);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0x58);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0x1538);
        EXPECT(gbc.pc(), 0x2211);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB BC 0114
        gbc.setState(0xb760, 0x2594, 0xbd40, 0x3923, 0xf18c, 0x27e7, 0x1, 0x1);
        gbc.writeMem(0xb760, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0xbd);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0x27);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0x2594);
        EXPECT(gbc.pc(), 0xb762);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb760), 0xcb);
        EXPECT(gbc.readMem(0xb761), 0xbc);
        // CB BC 0115
        gbc.setState(0x9622, 0x96f5, 0x28f0, 0xb2c3, 0xc60d, 0x6d, 0x1, 0x1);
        gbc.writeMem(0x9622, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0xc3);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0xd);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0x6d);
        EXPECT(gbc.sp(), 0x96f5);
        EXPECT(gbc.pc(), 0x9624);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9622), 0xcb);
        EXPECT(gbc.readMem(0x9623), 0xbc);
        // CB BC 0116
        gbc.setState(0x268e, 0x49da, 0xefb0, 0x44d5, 0x98c1, 0xaab1, 0x0, 0x0);
        gbc.writeMem(0x268e, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0xef);
        EXPECT(gbc.b(),  0x44);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0x98);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0x2a);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0x49da);
        EXPECT(gbc.pc(), 0x2690);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB BC 0117
        gbc.setState(0x9bf5, 0xc18b, 0xdfc0, 0xf395, 0x7639, 0x3adc, 0x1, 0x0);
        gbc.writeMem(0x9bf5, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0xdf);
        EXPECT(gbc.b(),  0xf3);
        EXPECT(gbc.c(),  0x95);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0x3a);
        EXPECT(gbc.l(),  0xdc);
        EXPECT(gbc.sp(), 0xc18b);
        EXPECT(gbc.pc(), 0x9bf7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9bf5), 0xcb);
        EXPECT(gbc.readMem(0x9bf6), 0xbc);
        // CB BC 0118
        gbc.setState(0x929e, 0x3570, 0xff80, 0x2aff, 0x38f4, 0x8aad, 0x0, 0x0);
        gbc.writeMem(0x929e, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0xff);
        EXPECT(gbc.d(),  0x38);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0xa);
        EXPECT(gbc.l(),  0xad);
        EXPECT(gbc.sp(), 0x3570);
        EXPECT(gbc.pc(), 0x92a0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x929e), 0xcb);
        EXPECT(gbc.readMem(0x929f), 0xbc);
        // CB BC 0119
        gbc.setState(0x38fd, 0x7da9, 0xae10, 0xb91b, 0x111, 0x2750, 0x0, 0x0);
        gbc.writeMem(0x38fd, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0xae);
        EXPECT(gbc.b(),  0xb9);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0x1);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0x27);
        EXPECT(gbc.l(),  0x50);
        EXPECT(gbc.sp(), 0x7da9);
        EXPECT(gbc.pc(), 0x38ff);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB BC 011A
        gbc.setState(0x800f, 0xff95, 0x5820, 0x79ca, 0x5e4b, 0x790, 0x0, 0x0);
        gbc.writeMem(0x800f, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0x58);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0x90);
        EXPECT(gbc.sp(), 0xff95);
        EXPECT(gbc.pc(), 0x8011);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x800f), 0xcb);
        EXPECT(gbc.readMem(0x8010), 0xbc);
        // CB BC 011C
        gbc.setState(0x4bed, 0x40dc, 0x8020, 0x4fac, 0xd841, 0xd1b4, 0x1, 0x0);
        gbc.writeMem(0x4bed, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0x4f);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0xd8);
        EXPECT(gbc.e(),  0x41);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0x40dc);
        EXPECT(gbc.pc(), 0x4bef);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB BC 011D
        gbc.setState(0x7397, 0x78d4, 0x510, 0x49aa, 0x221, 0x5f40, 0x0, 0x1);
        gbc.writeMem(0x7397, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0x5);
        EXPECT(gbc.b(),  0x49);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0x78d4);
        EXPECT(gbc.pc(), 0x7399);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB BC 011E
        gbc.setState(0xba11, 0xac01, 0xf820, 0xf952, 0x3b05, 0x565f, 0x0, 0x0);
        gbc.writeMem(0xba11, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0x52);
        EXPECT(gbc.d(),  0x3b);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0x5f);
        EXPECT(gbc.sp(), 0xac01);
        EXPECT(gbc.pc(), 0xba13);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xba11), 0xcb);
        EXPECT(gbc.readMem(0xba12), 0xbc);
        // CB BC 011F
        gbc.setState(0xd149, 0x2049, 0x3eb0, 0x66da, 0xd359, 0x6091, 0x0, 0x0);
        gbc.writeMem(0xd149, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0x60);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0x2049);
        EXPECT(gbc.pc(), 0xd14b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd149), 0xcb);
        EXPECT(gbc.readMem(0xd14a), 0xbc);
        // CB BC 0120
        gbc.setState(0x3efe, 0xc94e, 0x20b0, 0x7374, 0xf150, 0xc8a1, 0x1, 0x0);
        gbc.writeMem(0x3efe, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0x20);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0x48);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0xc94e);
        EXPECT(gbc.pc(), 0x3f00);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB BC 0121
        gbc.setState(0xe521, 0xeb6d, 0x8f00, 0x5fcc, 0xbf40, 0x1ac4, 0x1, 0x0);
        gbc.writeMem(0xe521, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0x8f);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0xcc);
        EXPECT(gbc.d(),  0xbf);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0x1a);
        EXPECT(gbc.l(),  0xc4);
        EXPECT(gbc.sp(), 0xeb6d);
        EXPECT(gbc.pc(), 0xe523);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe521), 0xcb);
        EXPECT(gbc.readMem(0xe522), 0xbc);
        // CB BC 0122
        gbc.setState(0xdaf8, 0x18b5, 0x8430, 0x5799, 0xae3f, 0x40fc, 0x0, 0x1);
        gbc.writeMem(0xdaf8, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0x84);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0x99);
        EXPECT(gbc.d(),  0xae);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0x40);
        EXPECT(gbc.l(),  0xfc);
        EXPECT(gbc.sp(), 0x18b5);
        EXPECT(gbc.pc(), 0xdafa);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdaf8), 0xcb);
        EXPECT(gbc.readMem(0xdaf9), 0xbc);
        // CB BC 0123
        gbc.setState(0x7adc, 0x9edc, 0x6800, 0xf051, 0x7899, 0x69fc, 0x0, 0x1);
        gbc.writeMem(0x7adc, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0x68);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0x78);
        EXPECT(gbc.e(),  0x99);
        EXPECT(gbc.h(),  0x69);
        EXPECT(gbc.l(),  0xfc);
        EXPECT(gbc.sp(), 0x9edc);
        EXPECT(gbc.pc(), 0x7ade);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB BC 0124
        gbc.setState(0x8bb3, 0xf337, 0x15d0, 0x7be0, 0x4b86, 0xa0df, 0x0, 0x1);
        gbc.writeMem(0x8bb3, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0x15);
        EXPECT(gbc.b(),  0x7b);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0x20);
        EXPECT(gbc.l(),  0xdf);
        EXPECT(gbc.sp(), 0xf337);
        EXPECT(gbc.pc(), 0x8bb5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8bb3), 0xcb);
        EXPECT(gbc.readMem(0x8bb4), 0xbc);
        // CB BC 0125
        gbc.setState(0xe8ce, 0xec3d, 0x40e0, 0x67cc, 0x1afa, 0x1390, 0x1, 0x1);
        gbc.writeMem(0xe8ce, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0x40);
        EXPECT(gbc.b(),  0x67);
        EXPECT(gbc.c(),  0xcc);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0xfa);
        EXPECT(gbc.h(),  0x13);
        EXPECT(gbc.l(),  0x90);
        EXPECT(gbc.sp(), 0xec3d);
        EXPECT(gbc.pc(), 0xe8d0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe8ce), 0xcb);
        EXPECT(gbc.readMem(0xe8cf), 0xbc);
        // CB BC 0126
        gbc.setState(0x8de, 0xca82, 0x6060, 0xe480, 0xc8ee, 0x7eb3, 0x1, 0x1);
        gbc.writeMem(0x8de, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0x80);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0x7e);
        EXPECT(gbc.l(),  0xb3);
        EXPECT(gbc.sp(), 0xca82);
        EXPECT(gbc.pc(), 0x8e0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB BC 0127
        gbc.setState(0xbbe0, 0x7c62, 0x6a50, 0x8d77, 0xf011, 0x96e7, 0x0, 0x1);
        gbc.writeMem(0xbbe0, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0x8d);
        EXPECT(gbc.c(),  0x77);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0x16);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0x7c62);
        EXPECT(gbc.pc(), 0xbbe2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbbe0), 0xcb);
        EXPECT(gbc.readMem(0xbbe1), 0xbc);
        // CB BC 0128
        gbc.setState(0x2591, 0xff73, 0xcc50, 0xf773, 0xc63a, 0x9bb5, 0x0, 0x1);
        gbc.writeMem(0x2591, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0xff73);
        EXPECT(gbc.pc(), 0x2593);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB BC 012A
        gbc.setState(0x4b48, 0x4847, 0x44e0, 0xc28b, 0x6ad9, 0x7594, 0x0, 0x0);
        gbc.writeMem(0x4b48, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0x8b);
        EXPECT(gbc.d(),  0x6a);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0x4847);
        EXPECT(gbc.pc(), 0x4b4a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB BC 012B
        gbc.setState(0xa905, 0xa1d1, 0x6150, 0xeef2, 0xc0ce, 0x4671, 0x0, 0x0);
        gbc.writeMem(0xa905, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0xf2);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0xce);
        EXPECT(gbc.h(),  0x46);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0xa1d1);
        EXPECT(gbc.pc(), 0xa907);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa905), 0xcb);
        EXPECT(gbc.readMem(0xa906), 0xbc);
        // CB BC 012C
        gbc.setState(0xd993, 0xa55c, 0x4be0, 0x1ad7, 0xf9e, 0x67eb, 0x0, 0x0);
        gbc.writeMem(0xd993, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0x1a);
        EXPECT(gbc.c(),  0xd7);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0x67);
        EXPECT(gbc.l(),  0xeb);
        EXPECT(gbc.sp(), 0xa55c);
        EXPECT(gbc.pc(), 0xd995);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd993), 0xcb);
        EXPECT(gbc.readMem(0xd994), 0xbc);
        // CB BC 012D
        gbc.setState(0xe50a, 0xae2d, 0xa8a0, 0x467, 0xfb9a, 0x1e15, 0x0, 0x1);
        gbc.writeMem(0xe50a, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0xa8);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0xfb);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0xae2d);
        EXPECT(gbc.pc(), 0xe50c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe50a), 0xcb);
        EXPECT(gbc.readMem(0xe50b), 0xbc);
        // CB BC 012E
        gbc.setState(0x75d5, 0x15ab, 0x30e0, 0xd184, 0x5207, 0x5d83, 0x0, 0x0);
        gbc.writeMem(0x75d5, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0x5d);
        EXPECT(gbc.l(),  0x83);
        EXPECT(gbc.sp(), 0x15ab);
        EXPECT(gbc.pc(), 0x75d7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB BC 012F
        gbc.setState(0xaab4, 0x390d, 0x38c0, 0x7996, 0x72c3, 0x2445, 0x1, 0x1);
        gbc.writeMem(0xaab4, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0x96);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0xc3);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0x45);
        EXPECT(gbc.sp(), 0x390d);
        EXPECT(gbc.pc(), 0xaab6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaab4), 0xcb);
        EXPECT(gbc.readMem(0xaab5), 0xbc);
        // CB BC 0130
        gbc.setState(0x4dee, 0x1aec, 0x6510, 0x53fc, 0x5304, 0x7962, 0x0, 0x0);
        gbc.writeMem(0x4dee, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0x65);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0x4);
        EXPECT(gbc.h(),  0x79);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0x1aec);
        EXPECT(gbc.pc(), 0x4df0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB BC 0131
        gbc.setState(0x26fd, 0x7764, 0xbc60, 0x2d66, 0xb365, 0x38b1, 0x1, 0x1);
        gbc.writeMem(0x26fd, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0x2d);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0xb3);
        EXPECT(gbc.e(),  0x65);
        EXPECT(gbc.h(),  0x38);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0x7764);
        EXPECT(gbc.pc(), 0x26ff);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB BC 0132
        gbc.setState(0xea97, 0x6d3, 0x4c70, 0x1329, 0x88de, 0x8dd4, 0x0, 0x0);
        gbc.writeMem(0xea97, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0x4c);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0x29);
        EXPECT(gbc.d(),  0x88);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0xd);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0x6d3);
        EXPECT(gbc.pc(), 0xea99);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xea97), 0xcb);
        EXPECT(gbc.readMem(0xea98), 0xbc);
        // CB BC 0133
        gbc.setState(0x15f, 0x7596, 0x1f20, 0xc938, 0x91ff, 0xb8ee, 0x0, 0x0);
        gbc.writeMem(0x15f, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0xc9);
        EXPECT(gbc.c(),  0x38);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0xff);
        EXPECT(gbc.h(),  0x38);
        EXPECT(gbc.l(),  0xee);
        EXPECT(gbc.sp(), 0x7596);
        EXPECT(gbc.pc(), 0x161);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB BC 0134
        gbc.setState(0x41fd, 0x8a92, 0x1d80, 0x44c2, 0x9b0, 0x2f52, 0x0, 0x0);
        gbc.writeMem(0x41fd, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0x44);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0x9);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0x2f);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0x8a92);
        EXPECT(gbc.pc(), 0x41ff);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB BC 0135
        gbc.setState(0x9ef3, 0xd877, 0xacc0, 0x84d5, 0x72f8, 0xc788, 0x0, 0x0);
        gbc.writeMem(0x9ef3, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0xac);
        EXPECT(gbc.b(),  0x84);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0xf8);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0x88);
        EXPECT(gbc.sp(), 0xd877);
        EXPECT(gbc.pc(), 0x9ef5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9ef3), 0xcb);
        EXPECT(gbc.readMem(0x9ef4), 0xbc);
        // CB BC 0136
        gbc.setState(0x2fdb, 0xb80f, 0xeeb0, 0xffa4, 0x1039, 0xa180, 0x1, 0x1);
        gbc.writeMem(0x2fdb, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0xee);
        EXPECT(gbc.b(),  0xff);
        EXPECT(gbc.c(),  0xa4);
        EXPECT(gbc.d(),  0x10);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0x21);
        EXPECT(gbc.l(),  0x80);
        EXPECT(gbc.sp(), 0xb80f);
        EXPECT(gbc.pc(), 0x2fdd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB BC 0137
        gbc.setState(0xda9f, 0xc7d7, 0x28d0, 0xc1c2, 0xec7a, 0x5380, 0x1, 0x1);
        gbc.writeMem(0xda9f, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0xc1);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0x7a);
        EXPECT(gbc.h(),  0x53);
        EXPECT(gbc.l(),  0x80);
        EXPECT(gbc.sp(), 0xc7d7);
        EXPECT(gbc.pc(), 0xdaa1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xda9f), 0xcb);
        EXPECT(gbc.readMem(0xdaa0), 0xbc);
        // CB BC 0138
        gbc.setState(0xe429, 0x727b, 0xc990, 0x8745, 0xde32, 0xcb07, 0x1, 0x1);
        gbc.writeMem(0xe429, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0xc9);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0x4b);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0x727b);
        EXPECT(gbc.pc(), 0xe42b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe429), 0xcb);
        EXPECT(gbc.readMem(0xe42a), 0xbc);
        // CB BC 0139
        gbc.setState(0x8793, 0x6215, 0x50d0, 0x4b37, 0xfa8c, 0x70ef, 0x0, 0x0);
        gbc.writeMem(0x8793, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0xfa);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0x70);
        EXPECT(gbc.l(),  0xef);
        EXPECT(gbc.sp(), 0x6215);
        EXPECT(gbc.pc(), 0x8795);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8793), 0xcb);
        EXPECT(gbc.readMem(0x8794), 0xbc);
        // CB BC 013A
        gbc.setState(0x979f, 0x4169, 0xb920, 0xe52, 0x5d43, 0xdd4e, 0x0, 0x1);
        gbc.writeMem(0x979f, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0x52);
        EXPECT(gbc.d(),  0x5d);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0x5d);
        EXPECT(gbc.l(),  0x4e);
        EXPECT(gbc.sp(), 0x4169);
        EXPECT(gbc.pc(), 0x97a1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x979f), 0xcb);
        EXPECT(gbc.readMem(0x97a0), 0xbc);
        // CB BC 013B
        gbc.setState(0xcade, 0xe17b, 0x4410, 0xbb51, 0x96bc, 0xe61, 0x0, 0x0);
        gbc.writeMem(0xcade, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0x61);
        EXPECT(gbc.sp(), 0xe17b);
        EXPECT(gbc.pc(), 0xcae0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcade), 0xcb);
        EXPECT(gbc.readMem(0xcadf), 0xbc);
        // CB BC 013C
        gbc.setState(0x8ac4, 0x838d, 0x8090, 0x833f, 0x2a12, 0x6424, 0x0, 0x1);
        gbc.writeMem(0x8ac4, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0x83);
        EXPECT(gbc.c(),  0x3f);
        EXPECT(gbc.d(),  0x2a);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0x64);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0x838d);
        EXPECT(gbc.pc(), 0x8ac6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8ac4), 0xcb);
        EXPECT(gbc.readMem(0x8ac5), 0xbc);
        // CB BC 013E
        gbc.setState(0xdb4e, 0x529f, 0x45e0, 0x9826, 0x9df7, 0x94d, 0x0, 0x0);
        gbc.writeMem(0xdb4e, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0x98);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0xf7);
        EXPECT(gbc.h(),  0x9);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0x529f);
        EXPECT(gbc.pc(), 0xdb50);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdb4e), 0xcb);
        EXPECT(gbc.readMem(0xdb4f), 0xbc);
        // CB BC 013F
        gbc.setState(0xd512, 0xa3bd, 0x9a70, 0x5096, 0x4c92, 0x1a5, 0x1, 0x0);
        gbc.writeMem(0xd512, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0x9a);
        EXPECT(gbc.b(),  0x50);
        EXPECT(gbc.c(),  0x96);
        EXPECT(gbc.d(),  0x4c);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0xa3bd);
        EXPECT(gbc.pc(), 0xd514);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd512), 0xcb);
        EXPECT(gbc.readMem(0xd513), 0xbc);
        // CB BC 0140
        gbc.setState(0xff, 0xef74, 0x1480, 0x8ea8, 0x60a6, 0x6a19, 0x1, 0x0);
        gbc.writeMem(0xff, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0x14);
        EXPECT(gbc.b(),  0x8e);
        EXPECT(gbc.c(),  0xa8);
        EXPECT(gbc.d(),  0x60);
        EXPECT(gbc.e(),  0xa6);
        EXPECT(gbc.h(),  0x6a);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0xef74);
        EXPECT(gbc.pc(), 0x101);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB BC 0141
        gbc.setState(0x1b99, 0xc3ec, 0xe860, 0x8fdf, 0x70b8, 0xad9e, 0x0, 0x1);
        gbc.writeMem(0x1b99, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0x8f);
        EXPECT(gbc.c(),  0xdf);
        EXPECT(gbc.d(),  0x70);
        EXPECT(gbc.e(),  0xb8);
        EXPECT(gbc.h(),  0x2d);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0xc3ec);
        EXPECT(gbc.pc(), 0x1b9b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB BC 0142
        gbc.setState(0xb18b, 0x1ac6, 0x9b90, 0xc15b, 0x596d, 0xa8d, 0x1, 0x1);
        gbc.writeMem(0xb18b, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0x9b);
        EXPECT(gbc.b(),  0xc1);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0x59);
        EXPECT(gbc.e(),  0x6d);
        EXPECT(gbc.h(),  0xa);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0x1ac6);
        EXPECT(gbc.pc(), 0xb18d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb18b), 0xcb);
        EXPECT(gbc.readMem(0xb18c), 0xbc);
        // CB BC 0143
        gbc.setState(0xe03c, 0x27d3, 0xc420, 0x5bd5, 0xa800, 0x8329, 0x0, 0x1);
        gbc.writeMem(0xe03c, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0xc4);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0x3);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0x27d3);
        EXPECT(gbc.pc(), 0xe03e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe03c), 0xcb);
        EXPECT(gbc.readMem(0xe03d), 0xbc);
        // CB BC 0144
        gbc.setState(0x987, 0xc7e, 0x7f0, 0x67e6, 0x894, 0x3e2, 0x1, 0x1);
        gbc.writeMem(0x987, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0x67);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0x3);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0xc7e);
        EXPECT(gbc.pc(), 0x989);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB BC 0145
        gbc.setState(0x5ace, 0xda6e, 0x12b0, 0xf1f3, 0x3115, 0x5c67, 0x1, 0x1);
        gbc.writeMem(0x5ace, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0x12);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0xf3);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0x5c);
        EXPECT(gbc.l(),  0x67);
        EXPECT(gbc.sp(), 0xda6e);
        EXPECT(gbc.pc(), 0x5ad0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB BC 0146
        gbc.setState(0x9a27, 0x27ed, 0x4400, 0x5ced, 0x9dea, 0x1f2b, 0x1, 0x0);
        gbc.writeMem(0x9a27, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0x5c);
        EXPECT(gbc.c(),  0xed);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0x1f);
        EXPECT(gbc.l(),  0x2b);
        EXPECT(gbc.sp(), 0x27ed);
        EXPECT(gbc.pc(), 0x9a29);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9a27), 0xcb);
        EXPECT(gbc.readMem(0x9a28), 0xbc);
        // CB BC 0147
        gbc.setState(0x6c6c, 0xb131, 0xa990, 0x74b5, 0x569f, 0xf02a, 0x1, 0x0);
        gbc.writeMem(0x6c6c, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0xa9);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0x56);
        EXPECT(gbc.e(),  0x9f);
        EXPECT(gbc.h(),  0x70);
        EXPECT(gbc.l(),  0x2a);
        EXPECT(gbc.sp(), 0xb131);
        EXPECT(gbc.pc(), 0x6c6e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB BC 0148
        gbc.setState(0xd56a, 0x868d, 0x80c0, 0xcc56, 0xcc4d, 0xbf7f, 0x1, 0x0);
        gbc.writeMem(0xd56a, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0xcc);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0x4d);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0x868d);
        EXPECT(gbc.pc(), 0xd56c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd56a), 0xcb);
        EXPECT(gbc.readMem(0xd56b), 0xbc);
        // CB BC 0149
        gbc.setState(0x7d72, 0x7772, 0xb420, 0xbde2, 0xaa92, 0x41cc, 0x1, 0x0);
        gbc.writeMem(0x7d72, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0xb4);
        EXPECT(gbc.b(),  0xbd);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0x41);
        EXPECT(gbc.l(),  0xcc);
        EXPECT(gbc.sp(), 0x7772);
        EXPECT(gbc.pc(), 0x7d74);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB BC 014A
        gbc.setState(0x492a, 0xff6c, 0x510, 0x34dd, 0x6643, 0xa347, 0x1, 0x1);
        gbc.writeMem(0x492a, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0x5);
        EXPECT(gbc.b(),  0x34);
        EXPECT(gbc.c(),  0xdd);
        EXPECT(gbc.d(),  0x66);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0x47);
        EXPECT(gbc.sp(), 0xff6c);
        EXPECT(gbc.pc(), 0x492c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB BC 014B
        gbc.setState(0x5d7e, 0x45af, 0xc010, 0xc9d7, 0x8690, 0xffe9, 0x1, 0x1);
        gbc.writeMem(0x5d7e, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0xc9);
        EXPECT(gbc.c(),  0xd7);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0x7f);
        EXPECT(gbc.l(),  0xe9);
        EXPECT(gbc.sp(), 0x45af);
        EXPECT(gbc.pc(), 0x5d80);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB BC 014C
        gbc.setState(0x13a, 0x14b1, 0x3630, 0xd536, 0xa132, 0xbd9d, 0x0, 0x1);
        gbc.writeMem(0x13a, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0x36);
        EXPECT(gbc.b(),  0xd5);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0x3d);
        EXPECT(gbc.l(),  0x9d);
        EXPECT(gbc.sp(), 0x14b1);
        EXPECT(gbc.pc(), 0x13c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB BC 014D
        gbc.setState(0x7a7, 0x9485, 0x8490, 0xe019, 0xf8fe, 0x5f07, 0x1, 0x0);
        gbc.writeMem(0x7a7, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0x84);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0xfe);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0x9485);
        EXPECT(gbc.pc(), 0x7a9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB BC 014E
        gbc.setState(0x35bc, 0x2aba, 0x3280, 0xc5d4, 0x5d6, 0x46bc, 0x1, 0x0);
        gbc.writeMem(0x35bc, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0xd4);
        EXPECT(gbc.d(),  0x5);
        EXPECT(gbc.e(),  0xd6);
        EXPECT(gbc.h(),  0x46);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0x2aba);
        EXPECT(gbc.pc(), 0x35be);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB BC 014F
        gbc.setState(0xbaec, 0xcfec, 0xc820, 0x90fc, 0xca8d, 0x47e9, 0x0, 0x0);
        gbc.writeMem(0xbaec, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0xca);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0xe9);
        EXPECT(gbc.sp(), 0xcfec);
        EXPECT(gbc.pc(), 0xbaee);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbaec), 0xcb);
        EXPECT(gbc.readMem(0xbaed), 0xbc);
        // CB BC 0150
        gbc.setState(0xef89, 0x3e22, 0x3d00, 0x17f7, 0x3a3a, 0xcaa0, 0x1, 0x1);
        gbc.writeMem(0xef89, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0x3d);
        EXPECT(gbc.b(),  0x17);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0x4a);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0x3e22);
        EXPECT(gbc.pc(), 0xef8b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xef89), 0xcb);
        EXPECT(gbc.readMem(0xef8a), 0xbc);
        // CB BC 0151
        gbc.setState(0x7c90, 0xd66a, 0x9f80, 0x5437, 0xeae8, 0xb225, 0x1, 0x0);
        gbc.writeMem(0x7c90, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0x9f);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0xd66a);
        EXPECT(gbc.pc(), 0x7c92);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB BC 0152
        gbc.setState(0x6158, 0xb496, 0x4790, 0xa95, 0x2921, 0x88c7, 0x1, 0x0);
        gbc.writeMem(0x6158, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0x95);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0xc7);
        EXPECT(gbc.sp(), 0xb496);
        EXPECT(gbc.pc(), 0x615a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB BC 0153
        gbc.setState(0xd08f, 0x84b5, 0x84a0, 0xd1a8, 0xb12a, 0x57a3, 0x0, 0x0);
        gbc.writeMem(0xd08f, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0x84);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0xa8);
        EXPECT(gbc.d(),  0xb1);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0x57);
        EXPECT(gbc.l(),  0xa3);
        EXPECT(gbc.sp(), 0x84b5);
        EXPECT(gbc.pc(), 0xd091);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd08f), 0xcb);
        EXPECT(gbc.readMem(0xd090), 0xbc);
        // CB BC 0154
        gbc.setState(0xc05e, 0x6a37, 0xd6d0, 0xca25, 0x4af7, 0x2125, 0x0, 0x1);
        gbc.writeMem(0xc05e, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0xca);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0x4a);
        EXPECT(gbc.e(),  0xf7);
        EXPECT(gbc.h(),  0x21);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0x6a37);
        EXPECT(gbc.pc(), 0xc060);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc05e), 0xcb);
        EXPECT(gbc.readMem(0xc05f), 0xbc);
        // CB BC 0155
        gbc.setState(0xb64, 0x8790, 0xb450, 0x2984, 0xe2ce, 0x973c, 0x0, 0x1);
        gbc.writeMem(0xb64, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0xb4);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0xe2);
        EXPECT(gbc.e(),  0xce);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0x8790);
        EXPECT(gbc.pc(), 0xb66);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB BC 0156
        gbc.setState(0x42ae, 0x4a87, 0x3400, 0x2ac1, 0xc45, 0x98fb, 0x0, 0x1);
        gbc.writeMem(0x42ae, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0x34);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0xc1);
        EXPECT(gbc.d(),  0xc);
        EXPECT(gbc.e(),  0x45);
        EXPECT(gbc.h(),  0x18);
        EXPECT(gbc.l(),  0xfb);
        EXPECT(gbc.sp(), 0x4a87);
        EXPECT(gbc.pc(), 0x42b0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB BC 0157
        gbc.setState(0xe44a, 0xa815, 0x2890, 0x576f, 0x4aad, 0x538a, 0x1, 0x0);
        gbc.writeMem(0xe44a, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0x4a);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0x53);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0xa815);
        EXPECT(gbc.pc(), 0xe44c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe44a), 0xcb);
        EXPECT(gbc.readMem(0xe44b), 0xbc);
        // CB BC 0158
        gbc.setState(0xe642, 0x4606, 0x7380, 0x9bba, 0x30ec, 0xe49e, 0x0, 0x0);
        gbc.writeMem(0xe642, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0x73);
        EXPECT(gbc.b(),  0x9b);
        EXPECT(gbc.c(),  0xba);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0xec);
        EXPECT(gbc.h(),  0x64);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0x4606);
        EXPECT(gbc.pc(), 0xe644);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe642), 0xcb);
        EXPECT(gbc.readMem(0xe643), 0xbc);
        // CB BC 0159
        gbc.setState(0x91ec, 0xde43, 0xcaf0, 0x110, 0xf927, 0x1965, 0x1, 0x1);
        gbc.writeMem(0x91ec, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0xca);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0xf9);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0x19);
        EXPECT(gbc.l(),  0x65);
        EXPECT(gbc.sp(), 0xde43);
        EXPECT(gbc.pc(), 0x91ee);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x91ec), 0xcb);
        EXPECT(gbc.readMem(0x91ed), 0xbc);
        // CB BC 015A
        gbc.setState(0x2bb5, 0x1d74, 0x4b90, 0x57a2, 0x33cd, 0x13db, 0x1, 0x0);
        gbc.writeMem(0x2bb5, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0x33);
        EXPECT(gbc.e(),  0xcd);
        EXPECT(gbc.h(),  0x13);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0x1d74);
        EXPECT(gbc.pc(), 0x2bb7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB BC 015B
        gbc.setState(0x5187, 0xb52d, 0x6990, 0xe54e, 0x2c7b, 0xd71d, 0x1, 0x0);
        gbc.writeMem(0x5187, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0xe5);
        EXPECT(gbc.c(),  0x4e);
        EXPECT(gbc.d(),  0x2c);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0x57);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0xb52d);
        EXPECT(gbc.pc(), 0x5189);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB BC 015C
        gbc.setState(0x3d6c, 0xfb5c, 0x6220, 0xe1b2, 0x39f6, 0xf215, 0x1, 0x0);
        gbc.writeMem(0x3d6c, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0x39);
        EXPECT(gbc.e(),  0xf6);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0xfb5c);
        EXPECT(gbc.pc(), 0x3d6e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB BC 015D
        gbc.setState(0xdc9c, 0xf2e3, 0x11a0, 0x1b10, 0xf33c, 0xb05f, 0x0, 0x0);
        gbc.writeMem(0xdc9c, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0x11);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0x3c);
        EXPECT(gbc.h(),  0x30);
        EXPECT(gbc.l(),  0x5f);
        EXPECT(gbc.sp(), 0xf2e3);
        EXPECT(gbc.pc(), 0xdc9e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdc9c), 0xcb);
        EXPECT(gbc.readMem(0xdc9d), 0xbc);
        // CB BC 015E
        gbc.setState(0xd77b, 0xe95d, 0xe5a0, 0x6b8d, 0xa6b1, 0x4d3, 0x1, 0x1);
        gbc.writeMem(0xd77b, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0xe5);
        EXPECT(gbc.b(),  0x6b);
        EXPECT(gbc.c(),  0x8d);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0xb1);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0xd3);
        EXPECT(gbc.sp(), 0xe95d);
        EXPECT(gbc.pc(), 0xd77d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd77b), 0xcb);
        EXPECT(gbc.readMem(0xd77c), 0xbc);
        // CB BC 015F
        gbc.setState(0xc5a2, 0x945d, 0x69b0, 0x4343, 0xe4c9, 0xed92, 0x0, 0x1);
        gbc.writeMem(0xc5a2, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0x43);
        EXPECT(gbc.c(),  0x43);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0xc9);
        EXPECT(gbc.h(),  0x6d);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0x945d);
        EXPECT(gbc.pc(), 0xc5a4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc5a2), 0xcb);
        EXPECT(gbc.readMem(0xc5a3), 0xbc);
        // CB BC 0160
        gbc.setState(0x88d4, 0x3008, 0x1cd0, 0xa7ee, 0x810c, 0xf162, 0x0, 0x0);
        gbc.writeMem(0x88d4, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0x1c);
        EXPECT(gbc.b(),  0xa7);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0x81);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0x71);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0x3008);
        EXPECT(gbc.pc(), 0x88d6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x88d4), 0xcb);
        EXPECT(gbc.readMem(0x88d5), 0xbc);
        // CB BC 0161
        gbc.setState(0x1cb7, 0x70f5, 0x99f0, 0xfa70, 0xc108, 0x4b62, 0x0, 0x0);
        gbc.writeMem(0x1cb7, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0x99);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0x4b);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0x70f5);
        EXPECT(gbc.pc(), 0x1cb9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB BC 0162
        gbc.setState(0xe868, 0x351c, 0x60, 0x5867, 0x3e35, 0xa222, 0x1, 0x0);
        gbc.writeMem(0xe868, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0x35);
        EXPECT(gbc.h(),  0x22);
        EXPECT(gbc.l(),  0x22);
        EXPECT(gbc.sp(), 0x351c);
        EXPECT(gbc.pc(), 0xe86a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe868), 0xcb);
        EXPECT(gbc.readMem(0xe869), 0xbc);
        // CB BC 0163
        gbc.setState(0x92fe, 0x9739, 0xaf80, 0x2336, 0xd57e, 0x7dd2, 0x0, 0x0);
        gbc.writeMem(0x92fe, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0xaf);
        EXPECT(gbc.b(),  0x23);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0x7e);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0x9739);
        EXPECT(gbc.pc(), 0x9300);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x92fe), 0xcb);
        EXPECT(gbc.readMem(0x92ff), 0xbc);
        // CB BC 0164
        gbc.setState(0x57fb, 0xc86e, 0x69a0, 0x5eab, 0x7399, 0xc068, 0x0, 0x0);
        gbc.writeMem(0x57fb, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0x73);
        EXPECT(gbc.e(),  0x99);
        EXPECT(gbc.h(),  0x40);
        EXPECT(gbc.l(),  0x68);
        EXPECT(gbc.sp(), 0xc86e);
        EXPECT(gbc.pc(), 0x57fd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB BC 0165
        gbc.setState(0xbebd, 0x2db1, 0xb3a0, 0x69ab, 0xce43, 0x712e, 0x0, 0x1);
        gbc.writeMem(0xbebd, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0xb3);
        EXPECT(gbc.b(),  0x69);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0xce);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0x71);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0x2db1);
        EXPECT(gbc.pc(), 0xbebf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbebd), 0xcb);
        EXPECT(gbc.readMem(0xbebe), 0xbc);
        // CB BC 0166
        gbc.setState(0xca03, 0xc6d6, 0xeba0, 0x8414, 0x2331, 0xd177, 0x0, 0x0);
        gbc.writeMem(0xca03, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0x84);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0x31);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0xc6d6);
        EXPECT(gbc.pc(), 0xca05);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xca03), 0xcb);
        EXPECT(gbc.readMem(0xca04), 0xbc);
        // CB BC 0167
        gbc.setState(0x1904, 0x6d90, 0x6600, 0xee2f, 0x3658, 0x5422, 0x0, 0x1);
        gbc.writeMem(0x1904, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0x66);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0x2f);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0x54);
        EXPECT(gbc.l(),  0x22);
        EXPECT(gbc.sp(), 0x6d90);
        EXPECT(gbc.pc(), 0x1906);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB BC 0168
        gbc.setState(0xf2b, 0x6584, 0xfb70, 0xa90c, 0x7628, 0x9b9, 0x0, 0x1);
        gbc.writeMem(0xf2b, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0xfb);
        EXPECT(gbc.b(),  0xa9);
        EXPECT(gbc.c(),  0xc);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0x28);
        EXPECT(gbc.h(),  0x9);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0x6584);
        EXPECT(gbc.pc(), 0xf2d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB BC 0169
        gbc.setState(0x201a, 0x66c8, 0x97a0, 0x79e1, 0xa8db, 0xaca9, 0x1, 0x1);
        gbc.writeMem(0x201a, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0x97);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0xe1);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0xdb);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0xa9);
        EXPECT(gbc.sp(), 0x66c8);
        EXPECT(gbc.pc(), 0x201c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB BC 016A
        gbc.setState(0x3910, 0xf3ec, 0x2c50, 0xb82f, 0x6094, 0x5446, 0x1, 0x0);
        gbc.writeMem(0x3910, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0x2c);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0x2f);
        EXPECT(gbc.d(),  0x60);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0x54);
        EXPECT(gbc.l(),  0x46);
        EXPECT(gbc.sp(), 0xf3ec);
        EXPECT(gbc.pc(), 0x3912);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB BC 016B
        gbc.setState(0x6615, 0xdc46, 0x1f40, 0x792e, 0xddab, 0x472f, 0x1, 0x0);
        gbc.writeMem(0x6615, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0x2e);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0xdc46);
        EXPECT(gbc.pc(), 0x6617);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB BC 016C
        gbc.setState(0xe64d, 0x965e, 0x9830, 0x83ca, 0x4d37, 0x3b40, 0x0, 0x1);
        gbc.writeMem(0xe64d, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0x98);
        EXPECT(gbc.b(),  0x83);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0x4d);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0x3b);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0x965e);
        EXPECT(gbc.pc(), 0xe64f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe64d), 0xcb);
        EXPECT(gbc.readMem(0xe64e), 0xbc);
        // CB BC 016D
        gbc.setState(0x7493, 0x8279, 0xd70, 0xb2dd, 0x2511, 0x4c50, 0x0, 0x1);
        gbc.writeMem(0x7493, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0xd);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0xdd);
        EXPECT(gbc.d(),  0x25);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0x50);
        EXPECT(gbc.sp(), 0x8279);
        EXPECT(gbc.pc(), 0x7495);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB BC 016E
        gbc.setState(0x746d, 0xdf2e, 0xb710, 0x41db, 0x2275, 0xdc68, 0x1, 0x0);
        gbc.writeMem(0x746d, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0x75);
        EXPECT(gbc.h(),  0x5c);
        EXPECT(gbc.l(),  0x68);
        EXPECT(gbc.sp(), 0xdf2e);
        EXPECT(gbc.pc(), 0x746f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB BC 016F
        gbc.setState(0x198d, 0x3fcd, 0x97f0, 0x8e3a, 0xcac9, 0x3928, 0x0, 0x1);
        gbc.writeMem(0x198d, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0x97);
        EXPECT(gbc.b(),  0x8e);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0xca);
        EXPECT(gbc.e(),  0xc9);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0x3fcd);
        EXPECT(gbc.pc(), 0x198f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB BC 0170
        gbc.setState(0xe7e2, 0xb1b2, 0xef00, 0x78b6, 0x457d, 0x6f7c, 0x1, 0x0);
        gbc.writeMem(0xe7e2, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0xef);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0xb6);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0x7d);
        EXPECT(gbc.h(),  0x6f);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0xb1b2);
        EXPECT(gbc.pc(), 0xe7e4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe7e2), 0xcb);
        EXPECT(gbc.readMem(0xe7e3), 0xbc);
        // CB BC 0171
        gbc.setState(0x4aa2, 0x5f54, 0x2e0, 0x276f, 0x3aa1, 0xdfcb, 0x1, 0x0);
        gbc.writeMem(0x4aa2, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0xa1);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0x5f54);
        EXPECT(gbc.pc(), 0x4aa4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB BC 0172
        gbc.setState(0x2e67, 0xdc07, 0xbae0, 0x687a, 0xbe98, 0xb875, 0x1, 0x1);
        gbc.writeMem(0x2e67, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0x98);
        EXPECT(gbc.h(),  0x38);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0xdc07);
        EXPECT(gbc.pc(), 0x2e69);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB BC 0173
        gbc.setState(0x97a6, 0x550b, 0x4cb0, 0xe89d, 0xa5be, 0xfc20, 0x0, 0x0);
        gbc.writeMem(0x97a6, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0x4c);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0x9d);
        EXPECT(gbc.d(),  0xa5);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0x7c);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0x550b);
        EXPECT(gbc.pc(), 0x97a8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x97a6), 0xcb);
        EXPECT(gbc.readMem(0x97a7), 0xbc);
        // CB BC 0174
        gbc.setState(0x8f82, 0xefa0, 0xbff0, 0xf4ec, 0xacd8, 0x3cb9, 0x1, 0x1);
        gbc.writeMem(0x8f82, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0xec);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0xefa0);
        EXPECT(gbc.pc(), 0x8f84);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8f82), 0xcb);
        EXPECT(gbc.readMem(0x8f83), 0xbc);
        // CB BC 0175
        gbc.setState(0xa31f, 0xdeab, 0x2860, 0x7bbc, 0xb854, 0x32b5, 0x0, 0x0);
        gbc.writeMem(0xa31f, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0x7b);
        EXPECT(gbc.c(),  0xbc);
        EXPECT(gbc.d(),  0xb8);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0xdeab);
        EXPECT(gbc.pc(), 0xa321);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa31f), 0xcb);
        EXPECT(gbc.readMem(0xa320), 0xbc);
        // CB BC 0176
        gbc.setState(0xce73, 0x9023, 0x85f0, 0xebeb, 0xa9af, 0x94ca, 0x0, 0x1);
        gbc.writeMem(0xce73, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0x85);
        EXPECT(gbc.b(),  0xeb);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0xa9);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0x14);
        EXPECT(gbc.l(),  0xca);
        EXPECT(gbc.sp(), 0x9023);
        EXPECT(gbc.pc(), 0xce75);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xce73), 0xcb);
        EXPECT(gbc.readMem(0xce74), 0xbc);
        // CB BC 0177
        gbc.setState(0x8d4b, 0xe18, 0x4fe0, 0x2ed9, 0x86d9, 0x16c9, 0x1, 0x1);
        gbc.writeMem(0x8d4b, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0x2e);
        EXPECT(gbc.c(),  0xd9);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0x16);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0xe18);
        EXPECT(gbc.pc(), 0x8d4d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8d4b), 0xcb);
        EXPECT(gbc.readMem(0x8d4c), 0xbc);
        // CB BC 0178
        gbc.setState(0xb810, 0x4020, 0x5ee0, 0xc9ad, 0x4968, 0x21f5, 0x1, 0x0);
        gbc.writeMem(0xb810, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0x5e);
        EXPECT(gbc.b(),  0xc9);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0x21);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0x4020);
        EXPECT(gbc.pc(), 0xb812);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb810), 0xcb);
        EXPECT(gbc.readMem(0xb811), 0xbc);
        // CB BC 0179
        gbc.setState(0xf3, 0x2d62, 0x1660, 0xf7f6, 0xd826, 0xe5aa, 0x1, 0x0);
        gbc.writeMem(0xf3, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0x16);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0xf6);
        EXPECT(gbc.d(),  0xd8);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0x65);
        EXPECT(gbc.l(),  0xaa);
        EXPECT(gbc.sp(), 0x2d62);
        EXPECT(gbc.pc(), 0xf5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB BC 017A
        gbc.setState(0xdbcf, 0xd92b, 0xcdd0, 0xccf0, 0xa9f0, 0x89f7, 0x1, 0x1);
        gbc.writeMem(0xdbcf, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0xcc);
        EXPECT(gbc.c(),  0xf0);
        EXPECT(gbc.d(),  0xa9);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0x9);
        EXPECT(gbc.l(),  0xf7);
        EXPECT(gbc.sp(), 0xd92b);
        EXPECT(gbc.pc(), 0xdbd1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdbcf), 0xcb);
        EXPECT(gbc.readMem(0xdbd0), 0xbc);
        // CB BC 017B
        gbc.setState(0xd810, 0xe36a, 0xe910, 0x6601, 0xc728, 0x5eae, 0x1, 0x1);
        gbc.writeMem(0xd810, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0xe9);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0x28);
        EXPECT(gbc.h(),  0x5e);
        EXPECT(gbc.l(),  0xae);
        EXPECT(gbc.sp(), 0xe36a);
        EXPECT(gbc.pc(), 0xd812);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd810), 0xcb);
        EXPECT(gbc.readMem(0xd811), 0xbc);
        // CB BC 017C
        gbc.setState(0x9cb5, 0x63d4, 0x48b0, 0x37e6, 0xa7d8, 0x4642, 0x1, 0x1);
        gbc.writeMem(0x9cb5, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0x48);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0xa7);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0x46);
        EXPECT(gbc.l(),  0x42);
        EXPECT(gbc.sp(), 0x63d4);
        EXPECT(gbc.pc(), 0x9cb7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9cb5), 0xcb);
        EXPECT(gbc.readMem(0x9cb6), 0xbc);
        // CB BC 017D
        gbc.setState(0xa032, 0x4489, 0x5d80, 0xf9ae, 0x4f81, 0x321f, 0x1, 0x0);
        gbc.writeMem(0xa032, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0x5d);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0xae);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0x81);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0x4489);
        EXPECT(gbc.pc(), 0xa034);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa032), 0xcb);
        EXPECT(gbc.readMem(0xa033), 0xbc);
        // CB BC 017E
        gbc.setState(0x32fd, 0xe926, 0x1860, 0x8d96, 0x3801, 0x76de, 0x1, 0x1);
        gbc.writeMem(0x32fd, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0x8d);
        EXPECT(gbc.c(),  0x96);
        EXPECT(gbc.d(),  0x38);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0x76);
        EXPECT(gbc.l(),  0xde);
        EXPECT(gbc.sp(), 0xe926);
        EXPECT(gbc.pc(), 0x32ff);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB BC 017F
        gbc.setState(0x8d42, 0x629b, 0xf430, 0x52e, 0x82db, 0x7cb1, 0x1, 0x1);
        gbc.writeMem(0x8d42, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0x2e);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0xdb);
        EXPECT(gbc.h(),  0x7c);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0x629b);
        EXPECT(gbc.pc(), 0x8d44);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8d42), 0xcb);
        EXPECT(gbc.readMem(0x8d43), 0xbc);
        // CB BC 0181
        gbc.setState(0x5a10, 0xdf14, 0x64c0, 0xde2e, 0xf753, 0x5812, 0x1, 0x0);
        gbc.writeMem(0x5a10, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0xde);
        EXPECT(gbc.c(),  0x2e);
        EXPECT(gbc.d(),  0xf7);
        EXPECT(gbc.e(),  0x53);
        EXPECT(gbc.h(),  0x58);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0xdf14);
        EXPECT(gbc.pc(), 0x5a12);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB BC 0182
        gbc.setState(0x680, 0x2b90, 0xd730, 0xb236, 0xebfd, 0x175e, 0x0, 0x0);
        gbc.writeMem(0x680, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0xd7);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0xeb);
        EXPECT(gbc.e(),  0xfd);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0x2b90);
        EXPECT(gbc.pc(), 0x682);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB BC 0183
        gbc.setState(0xdda2, 0xc3ac, 0xa4e0, 0xf0f3, 0xfbd4, 0xade9, 0x0, 0x1);
        gbc.writeMem(0xdda2, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0xa4);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0xf3);
        EXPECT(gbc.d(),  0xfb);
        EXPECT(gbc.e(),  0xd4);
        EXPECT(gbc.h(),  0x2d);
        EXPECT(gbc.l(),  0xe9);
        EXPECT(gbc.sp(), 0xc3ac);
        EXPECT(gbc.pc(), 0xdda4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdda2), 0xcb);
        EXPECT(gbc.readMem(0xdda3), 0xbc);
        // CB BC 0184
        gbc.setState(0x70df, 0x66bf, 0xd3b0, 0xf657, 0x5143, 0xfa39, 0x0, 0x1);
        gbc.writeMem(0x70df, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0xd3);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0x51);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0x7a);
        EXPECT(gbc.l(),  0x39);
        EXPECT(gbc.sp(), 0x66bf);
        EXPECT(gbc.pc(), 0x70e1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB BC 0185
        gbc.setState(0x9001, 0x986c, 0xf6f0, 0x5f8, 0x294c, 0x49ba, 0x1, 0x0);
        gbc.writeMem(0x9001, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0xf6);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0xf8);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0x49);
        EXPECT(gbc.l(),  0xba);
        EXPECT(gbc.sp(), 0x986c);
        EXPECT(gbc.pc(), 0x9003);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9001), 0xcb);
        EXPECT(gbc.readMem(0x9002), 0xbc);
        // CB BC 0186
        gbc.setState(0x6a58, 0xeecf, 0x5b60, 0xb95, 0xcdfa, 0xc6c7, 0x0, 0x1);
        gbc.writeMem(0x6a58, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0x95);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0xfa);
        EXPECT(gbc.h(),  0x46);
        EXPECT(gbc.l(),  0xc7);
        EXPECT(gbc.sp(), 0xeecf);
        EXPECT(gbc.pc(), 0x6a5a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB BC 0187
        gbc.setState(0x75d2, 0x764, 0x93b0, 0xf04f, 0x44ec, 0xbc21, 0x1, 0x0);
        gbc.writeMem(0x75d2, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0x93);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0xec);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0x764);
        EXPECT(gbc.pc(), 0x75d4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB BC 0188
        gbc.setState(0x74ff, 0x1cce, 0x44f0, 0x402, 0x1a49, 0x86a, 0x0, 0x0);
        gbc.writeMem(0x74ff, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0x1cce);
        EXPECT(gbc.pc(), 0x7501);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB BC 0189
        gbc.setState(0x86a1, 0x7f22, 0x91c0, 0x7656, 0xe425, 0x2f6d, 0x1, 0x0);
        gbc.writeMem(0x86a1, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0x91);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0x2f);
        EXPECT(gbc.l(),  0x6d);
        EXPECT(gbc.sp(), 0x7f22);
        EXPECT(gbc.pc(), 0x86a3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x86a1), 0xcb);
        EXPECT(gbc.readMem(0x86a2), 0xbc);
        // CB BC 018A
        gbc.setState(0x97da, 0x6742, 0x6c50, 0x250b, 0x3, 0xe04c, 0x0, 0x0);
        gbc.writeMem(0x97da, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0xb);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0x3);
        EXPECT(gbc.h(),  0x60);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0x6742);
        EXPECT(gbc.pc(), 0x97dc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x97da), 0xcb);
        EXPECT(gbc.readMem(0x97db), 0xbc);
        // CB BC 018B
        gbc.setState(0xea51, 0xf2e6, 0x9610, 0xc926, 0x302f, 0x15c, 0x0, 0x1);
        gbc.writeMem(0xea51, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0x96);
        EXPECT(gbc.b(),  0xc9);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0x2f);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0xf2e6);
        EXPECT(gbc.pc(), 0xea53);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xea51), 0xcb);
        EXPECT(gbc.readMem(0xea52), 0xbc);
        // CB BC 018C
        gbc.setState(0xcf23, 0x1574, 0xd520, 0x90d5, 0x62e4, 0x2263, 0x1, 0x1);
        gbc.writeMem(0xcf23, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0xd5);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0x62);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0x22);
        EXPECT(gbc.l(),  0x63);
        EXPECT(gbc.sp(), 0x1574);
        EXPECT(gbc.pc(), 0xcf25);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcf23), 0xcb);
        EXPECT(gbc.readMem(0xcf24), 0xbc);
        // CB BC 018D
        gbc.setState(0xab78, 0x9b29, 0x1e10, 0x960d, 0x4dce, 0xbd27, 0x1, 0x1);
        gbc.writeMem(0xab78, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0x96);
        EXPECT(gbc.c(),  0xd);
        EXPECT(gbc.d(),  0x4d);
        EXPECT(gbc.e(),  0xce);
        EXPECT(gbc.h(),  0x3d);
        EXPECT(gbc.l(),  0x27);
        EXPECT(gbc.sp(), 0x9b29);
        EXPECT(gbc.pc(), 0xab7a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xab78), 0xcb);
        EXPECT(gbc.readMem(0xab79), 0xbc);
        // CB BC 018E
        gbc.setState(0x7a3, 0xf796, 0xee40, 0xdf22, 0x4299, 0xbdf0, 0x0, 0x0);
        gbc.writeMem(0x7a3, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0xee);
        EXPECT(gbc.b(),  0xdf);
        EXPECT(gbc.c(),  0x22);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0x99);
        EXPECT(gbc.h(),  0x3d);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0xf796);
        EXPECT(gbc.pc(), 0x7a5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB BC 018F
        gbc.setState(0xcf91, 0xf2a2, 0x1310, 0x940b, 0x4a86, 0x7b76, 0x1, 0x0);
        gbc.writeMem(0xcf91, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0x13);
        EXPECT(gbc.b(),  0x94);
        EXPECT(gbc.c(),  0xb);
        EXPECT(gbc.d(),  0x4a);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0x7b);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0xf2a2);
        EXPECT(gbc.pc(), 0xcf93);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcf91), 0xcb);
        EXPECT(gbc.readMem(0xcf92), 0xbc);
        // CB BC 0190
        gbc.setState(0x53b3, 0xc1fc, 0xd110, 0x77d1, 0x354b, 0xd73b, 0x1, 0x0);
        gbc.writeMem(0x53b3, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0xd1);
        EXPECT(gbc.b(),  0x77);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0x35);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0x57);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0xc1fc);
        EXPECT(gbc.pc(), 0x53b5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB BC 0191
        gbc.setState(0xbeb4, 0x5bef, 0xb200, 0xef73, 0xc53f, 0x2e78, 0x1, 0x1);
        gbc.writeMem(0xbeb4, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0xb2);
        EXPECT(gbc.b(),  0xef);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0xc5);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0x2e);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0x5bef);
        EXPECT(gbc.pc(), 0xbeb6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbeb4), 0xcb);
        EXPECT(gbc.readMem(0xbeb5), 0xbc);
        // CB BC 0192
        gbc.setState(0xe338, 0xee8d, 0xc7d0, 0x8856, 0x4e03, 0x4499, 0x0, 0x0);
        gbc.writeMem(0xe338, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0xc7);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0x4e);
        EXPECT(gbc.e(),  0x3);
        EXPECT(gbc.h(),  0x44);
        EXPECT(gbc.l(),  0x99);
        EXPECT(gbc.sp(), 0xee8d);
        EXPECT(gbc.pc(), 0xe33a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe338), 0xcb);
        EXPECT(gbc.readMem(0xe339), 0xbc);
        // CB BC 0193
        gbc.setState(0x1044, 0x81fd, 0x1790, 0xe573, 0x7b48, 0x9969, 0x1, 0x1);
        gbc.writeMem(0x1044, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0x17);
        EXPECT(gbc.b(),  0xe5);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0x7b);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0x19);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0x81fd);
        EXPECT(gbc.pc(), 0x1046);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB BC 0194
        gbc.setState(0xe1dd, 0xe64e, 0xf50, 0x7a4c, 0x9908, 0x3792, 0x0, 0x1);
        gbc.writeMem(0xe1dd, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0xf);
        EXPECT(gbc.b(),  0x7a);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0x99);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0xe64e);
        EXPECT(gbc.pc(), 0xe1df);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe1dd), 0xcb);
        EXPECT(gbc.readMem(0xe1de), 0xbc);
        // CB BC 0195
        gbc.setState(0xec83, 0x5e45, 0x70a0, 0xe0fe, 0xb0af, 0xb7ca, 0x0, 0x0);
        gbc.writeMem(0xec83, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0x70);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0xca);
        EXPECT(gbc.sp(), 0x5e45);
        EXPECT(gbc.pc(), 0xec85);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xec83), 0xcb);
        EXPECT(gbc.readMem(0xec84), 0xbc);
        // CB BC 0196
        gbc.setState(0xcea7, 0xaf5, 0xf220, 0xc460, 0xa78b, 0x4b7f, 0x0, 0x1);
        gbc.writeMem(0xcea7, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0x60);
        EXPECT(gbc.d(),  0xa7);
        EXPECT(gbc.e(),  0x8b);
        EXPECT(gbc.h(),  0x4b);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0xaf5);
        EXPECT(gbc.pc(), 0xcea9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcea7), 0xcb);
        EXPECT(gbc.readMem(0xcea8), 0xbc);
        // CB BC 0197
        gbc.setState(0x99b7, 0xc757, 0x5630, 0xe2f3, 0x21b0, 0xe3bd, 0x0, 0x1);
        gbc.writeMem(0x99b7, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0xe2);
        EXPECT(gbc.c(),  0xf3);
        EXPECT(gbc.d(),  0x21);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0x63);
        EXPECT(gbc.l(),  0xbd);
        EXPECT(gbc.sp(), 0xc757);
        EXPECT(gbc.pc(), 0x99b9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x99b7), 0xcb);
        EXPECT(gbc.readMem(0x99b8), 0xbc);
        // CB BC 0198
        gbc.setState(0x4ee9, 0x13bb, 0x8200, 0xcb68, 0x73d5, 0xa1f8, 0x1, 0x1);
        gbc.writeMem(0x4ee9, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0x82);
        EXPECT(gbc.b(),  0xcb);
        EXPECT(gbc.c(),  0x68);
        EXPECT(gbc.d(),  0x73);
        EXPECT(gbc.e(),  0xd5);
        EXPECT(gbc.h(),  0x21);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0x13bb);
        EXPECT(gbc.pc(), 0x4eeb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB BC 019A
        gbc.setState(0x7d19, 0xd6d6, 0xb930, 0xff84, 0x5ad5, 0x7489, 0x0, 0x1);
        gbc.writeMem(0x7d19, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0xff);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0xd5);
        EXPECT(gbc.h(),  0x74);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0xd6d6);
        EXPECT(gbc.pc(), 0x7d1b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB BC 019B
        gbc.setState(0x38cc, 0x413b, 0x40, 0x5a5c, 0x3985, 0x3c02, 0x0, 0x1);
        gbc.writeMem(0x38cc, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x5a);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0x39);
        EXPECT(gbc.e(),  0x85);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0x413b);
        EXPECT(gbc.pc(), 0x38ce);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB BC 019C
        gbc.setState(0x840b, 0xfcdf, 0xba00, 0xa69d, 0xb147, 0x7296, 0x1, 0x1);
        gbc.writeMem(0x840b, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0xa6);
        EXPECT(gbc.c(),  0x9d);
        EXPECT(gbc.d(),  0xb1);
        EXPECT(gbc.e(),  0x47);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0xfcdf);
        EXPECT(gbc.pc(), 0x840d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x840b), 0xcb);
        EXPECT(gbc.readMem(0x840c), 0xbc);
        // CB BC 019D
        gbc.setState(0xa92b, 0xcacf, 0xa130, 0x8677, 0x52ed, 0xca8b, 0x0, 0x1);
        gbc.writeMem(0xa92b, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0xa1);
        EXPECT(gbc.b(),  0x86);
        EXPECT(gbc.c(),  0x77);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0xed);
        EXPECT(gbc.h(),  0x4a);
        EXPECT(gbc.l(),  0x8b);
        EXPECT(gbc.sp(), 0xcacf);
        EXPECT(gbc.pc(), 0xa92d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa92b), 0xcb);
        EXPECT(gbc.readMem(0xa92c), 0xbc);
        // CB BC 019E
        gbc.setState(0x8791, 0xcdf8, 0xc5e0, 0x69d5, 0x9bf, 0x3604, 0x0, 0x1);
        gbc.writeMem(0x8791, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0xc5);
        EXPECT(gbc.b(),  0x69);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0x9);
        EXPECT(gbc.e(),  0xbf);
        EXPECT(gbc.h(),  0x36);
        EXPECT(gbc.l(),  0x4);
        EXPECT(gbc.sp(), 0xcdf8);
        EXPECT(gbc.pc(), 0x8793);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8791), 0xcb);
        EXPECT(gbc.readMem(0x8792), 0xbc);
        // CB BC 019F
        gbc.setState(0x7928, 0x58cc, 0xf610, 0x4e96, 0x4f83, 0x6820, 0x0, 0x1);
        gbc.writeMem(0x7928, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0xf6);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0x96);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0x83);
        EXPECT(gbc.h(),  0x68);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0x58cc);
        EXPECT(gbc.pc(), 0x792a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB BC 01A0
        gbc.setState(0x6487, 0x34e3, 0xf490, 0x1c7e, 0x68c0, 0xe564, 0x0, 0x1);
        gbc.writeMem(0x6487, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0x68);
        EXPECT(gbc.e(),  0xc0);
        EXPECT(gbc.h(),  0x65);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0x34e3);
        EXPECT(gbc.pc(), 0x6489);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB BC 01A1
        gbc.setState(0x408b, 0x6576, 0x41b0, 0xdb8d, 0xeb4e, 0x12fa, 0x0, 0x1);
        gbc.writeMem(0x408b, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0xdb);
        EXPECT(gbc.c(),  0x8d);
        EXPECT(gbc.d(),  0xeb);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0x6576);
        EXPECT(gbc.pc(), 0x408d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB BC 01A2
        gbc.setState(0x26a3, 0x5044, 0xb140, 0x5bfb, 0x215a, 0x4b12, 0x0, 0x0);
        gbc.writeMem(0x26a3, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0x21);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0x4b);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0x5044);
        EXPECT(gbc.pc(), 0x26a5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB BC 01A3
        gbc.setState(0xc822, 0x5e79, 0x32d0, 0x336c, 0x5c5f, 0x7622, 0x1, 0x1);
        gbc.writeMem(0xc822, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0x5c);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0x76);
        EXPECT(gbc.l(),  0x22);
        EXPECT(gbc.sp(), 0x5e79);
        EXPECT(gbc.pc(), 0xc824);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc822), 0xcb);
        EXPECT(gbc.readMem(0xc823), 0xbc);
        // CB BC 01A4
        gbc.setState(0xe614, 0x168b, 0xeb40, 0xc14c, 0x9676, 0xca03, 0x0, 0x0);
        gbc.writeMem(0xe614, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0xc1);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0x76);
        EXPECT(gbc.h(),  0x4a);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0x168b);
        EXPECT(gbc.pc(), 0xe616);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe614), 0xcb);
        EXPECT(gbc.readMem(0xe615), 0xbc);
        // CB BC 01A5
        gbc.setState(0x118d, 0x3026, 0xb2a0, 0x8476, 0x5463, 0x6cc7, 0x1, 0x1);
        gbc.writeMem(0x118d, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0xb2);
        EXPECT(gbc.b(),  0x84);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0x54);
        EXPECT(gbc.e(),  0x63);
        EXPECT(gbc.h(),  0x6c);
        EXPECT(gbc.l(),  0xc7);
        EXPECT(gbc.sp(), 0x3026);
        EXPECT(gbc.pc(), 0x118f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB BC 01A6
        gbc.setState(0xc7c9, 0x21e, 0x7680, 0xe67, 0x485b, 0xf65, 0x1, 0x0);
        gbc.writeMem(0xc7c9, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0x48);
        EXPECT(gbc.e(),  0x5b);
        EXPECT(gbc.h(),  0xf);
        EXPECT(gbc.l(),  0x65);
        EXPECT(gbc.sp(), 0x21e);
        EXPECT(gbc.pc(), 0xc7cb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc7c9), 0xcb);
        EXPECT(gbc.readMem(0xc7ca), 0xbc);
        // CB BC 01A7
        gbc.setState(0x47b8, 0x7cd6, 0x16d0, 0x4c0c, 0x69b2, 0x6757, 0x0, 0x1);
        gbc.writeMem(0x47b8, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0x16);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0xc);
        EXPECT(gbc.d(),  0x69);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0x67);
        EXPECT(gbc.l(),  0x57);
        EXPECT(gbc.sp(), 0x7cd6);
        EXPECT(gbc.pc(), 0x47ba);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB BC 01A9
        gbc.setState(0x5315, 0xa30d, 0xd140, 0xffd2, 0x14ee, 0x488c, 0x1, 0x1);
        gbc.writeMem(0x5315, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0xd1);
        EXPECT(gbc.b(),  0xff);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0x14);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0x48);
        EXPECT(gbc.l(),  0x8c);
        EXPECT(gbc.sp(), 0xa30d);
        EXPECT(gbc.pc(), 0x5317);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB BC 01AA
        gbc.setState(0x9267, 0xad6a, 0x12e0, 0x776e, 0x6610, 0xd90f, 0x0, 0x1);
        gbc.writeMem(0x9267, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0x12);
        EXPECT(gbc.b(),  0x77);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0x66);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0xf);
        EXPECT(gbc.sp(), 0xad6a);
        EXPECT(gbc.pc(), 0x9269);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9267), 0xcb);
        EXPECT(gbc.readMem(0x9268), 0xbc);
        // CB BC 01AB
        gbc.setState(0x3b22, 0x2b79, 0x1fa0, 0xb7cb, 0x3326, 0xaf2f, 0x0, 0x1);
        gbc.writeMem(0x3b22, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0x33);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0x2f);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0x2b79);
        EXPECT(gbc.pc(), 0x3b24);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB BC 01AC
        gbc.setState(0x9f28, 0x2702, 0xfab0, 0x342e, 0x294, 0x3514, 0x0, 0x0);
        gbc.writeMem(0x9f28, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0xfa);
        EXPECT(gbc.b(),  0x34);
        EXPECT(gbc.c(),  0x2e);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0x2702);
        EXPECT(gbc.pc(), 0x9f2a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9f28), 0xcb);
        EXPECT(gbc.readMem(0x9f29), 0xbc);
        // CB BC 01AD
        gbc.setState(0xbef2, 0x9bc3, 0xbc90, 0x1352, 0xa11d, 0x46f9, 0x1, 0x0);
        gbc.writeMem(0xbef2, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0x52);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0x46);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0x9bc3);
        EXPECT(gbc.pc(), 0xbef4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbef2), 0xcb);
        EXPECT(gbc.readMem(0xbef3), 0xbc);
        // CB BC 01AE
        gbc.setState(0x6ba5, 0x1149, 0x87c0, 0x7ad, 0x325f, 0x7e32, 0x1, 0x0);
        gbc.writeMem(0x6ba5, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0x87);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0x7e);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0x1149);
        EXPECT(gbc.pc(), 0x6ba7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB BC 01AF
        gbc.setState(0x7b2f, 0xaa55, 0x4bc0, 0x915f, 0x2fda, 0x67bf, 0x1, 0x1);
        gbc.writeMem(0x7b2f, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0xda);
        EXPECT(gbc.h(),  0x67);
        EXPECT(gbc.l(),  0xbf);
        EXPECT(gbc.sp(), 0xaa55);
        EXPECT(gbc.pc(), 0x7b31);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB BC 01B0
        gbc.setState(0x5604, 0xdd9e, 0xb110, 0x892, 0x52af, 0xb544, 0x1, 0x1);
        gbc.writeMem(0x5604, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0x8);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0xdd9e);
        EXPECT(gbc.pc(), 0x5606);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB BC 01B1
        gbc.setState(0x5625, 0xf604, 0x5d20, 0x3f9a, 0x129e, 0xf321, 0x1, 0x0);
        gbc.writeMem(0x5625, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0x5d);
        EXPECT(gbc.b(),  0x3f);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0x73);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0xf604);
        EXPECT(gbc.pc(), 0x5627);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB BC 01B2
        gbc.setState(0x9b40, 0x38a6, 0x4d20, 0x5ee8, 0x85b1, 0x64e2, 0x1, 0x1);
        gbc.writeMem(0x9b40, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0x4d);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0xb1);
        EXPECT(gbc.h(),  0x64);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0x38a6);
        EXPECT(gbc.pc(), 0x9b42);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9b40), 0xcb);
        EXPECT(gbc.readMem(0x9b41), 0xbc);
        // CB BC 01B3
        gbc.setState(0x4138, 0xecbe, 0x1cf0, 0xe9e, 0x7cd, 0x399b, 0x1, 0x0);
        gbc.writeMem(0x4138, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0x1c);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0x9e);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0xcd);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0x9b);
        EXPECT(gbc.sp(), 0xecbe);
        EXPECT(gbc.pc(), 0x413a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB BC 01B4
        gbc.setState(0xc1, 0x2a7, 0x8e70, 0x1fb9, 0x3971, 0xc0b, 0x1, 0x1);
        gbc.writeMem(0xc1, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0x39);
        EXPECT(gbc.e(),  0x71);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0x2a7);
        EXPECT(gbc.pc(), 0xc3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB BC 01B5
        gbc.setState(0x1039, 0x9baf, 0x4620, 0x8d2f, 0x8300, 0x937a, 0x0, 0x1);
        gbc.writeMem(0x1039, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0x46);
        EXPECT(gbc.b(),  0x8d);
        EXPECT(gbc.c(),  0x2f);
        EXPECT(gbc.d(),  0x83);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0x13);
        EXPECT(gbc.l(),  0x7a);
        EXPECT(gbc.sp(), 0x9baf);
        EXPECT(gbc.pc(), 0x103b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB BC 01B6
        gbc.setState(0xb444, 0x3108, 0x2a60, 0x4ba4, 0xab70, 0xdd27, 0x0, 0x1);
        gbc.writeMem(0xb444, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0xa4);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0x5d);
        EXPECT(gbc.l(),  0x27);
        EXPECT(gbc.sp(), 0x3108);
        EXPECT(gbc.pc(), 0xb446);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb444), 0xcb);
        EXPECT(gbc.readMem(0xb445), 0xbc);
        // CB BC 01B7
        gbc.setState(0x6d50, 0x1fc2, 0xfc10, 0x1b, 0xb444, 0xd78f, 0x0, 0x1);
        gbc.writeMem(0x6d50, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0x57);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0x1fc2);
        EXPECT(gbc.pc(), 0x6d52);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB BC 01B8
        gbc.setState(0x22dd, 0xb826, 0x7840, 0x3168, 0xc02a, 0x399b, 0x1, 0x1);
        gbc.writeMem(0x22dd, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0x68);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0x9b);
        EXPECT(gbc.sp(), 0xb826);
        EXPECT(gbc.pc(), 0x22df);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB BC 01B9
        gbc.setState(0x5b33, 0x19ad, 0xfaf0, 0xe72b, 0xef2a, 0xe28f, 0x0, 0x0);
        gbc.writeMem(0x5b33, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0xfa);
        EXPECT(gbc.b(),  0xe7);
        EXPECT(gbc.c(),  0x2b);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0x62);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0x19ad);
        EXPECT(gbc.pc(), 0x5b35);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB BC 01BA
        gbc.setState(0xaa39, 0x5c5b, 0x61b0, 0x809e, 0x5929, 0x4e42, 0x0, 0x0);
        gbc.writeMem(0xaa39, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0x80);
        EXPECT(gbc.c(),  0x9e);
        EXPECT(gbc.d(),  0x59);
        EXPECT(gbc.e(),  0x29);
        EXPECT(gbc.h(),  0x4e);
        EXPECT(gbc.l(),  0x42);
        EXPECT(gbc.sp(), 0x5c5b);
        EXPECT(gbc.pc(), 0xaa3b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaa39), 0xcb);
        EXPECT(gbc.readMem(0xaa3a), 0xbc);
        // CB BC 01BB
        gbc.setState(0xea87, 0x8199, 0xa090, 0x6f1f, 0xec48, 0xed22, 0x0, 0x0);
        gbc.writeMem(0xea87, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0x6f);
        EXPECT(gbc.c(),  0x1f);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0x6d);
        EXPECT(gbc.l(),  0x22);
        EXPECT(gbc.sp(), 0x8199);
        EXPECT(gbc.pc(), 0xea89);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xea87), 0xcb);
        EXPECT(gbc.readMem(0xea88), 0xbc);
        // CB BC 01BC
        gbc.setState(0xaaa8, 0xec87, 0x8ff0, 0xcc41, 0x2c6b, 0x7f31, 0x1, 0x1);
        gbc.writeMem(0xaaa8, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0x8f);
        EXPECT(gbc.b(),  0xcc);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0x2c);
        EXPECT(gbc.e(),  0x6b);
        EXPECT(gbc.h(),  0x7f);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0xec87);
        EXPECT(gbc.pc(), 0xaaaa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaaa8), 0xcb);
        EXPECT(gbc.readMem(0xaaa9), 0xbc);
        // CB BC 01BD
        gbc.setState(0x330e, 0x8972, 0x7530, 0x6985, 0xb5c4, 0x3b20, 0x0, 0x0);
        gbc.writeMem(0x330e, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0x69);
        EXPECT(gbc.c(),  0x85);
        EXPECT(gbc.d(),  0xb5);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0x3b);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0x8972);
        EXPECT(gbc.pc(), 0x3310);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB BC 01BE
        gbc.setState(0xaa27, 0x1e39, 0x59a0, 0x31c3, 0x9deb, 0xc601, 0x1, 0x0);
        gbc.writeMem(0xaa27, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0xc3);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0x46);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0x1e39);
        EXPECT(gbc.pc(), 0xaa29);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaa27), 0xcb);
        EXPECT(gbc.readMem(0xaa28), 0xbc);
        // CB BC 01BF
        gbc.setState(0xdbcd, 0xf914, 0x1640, 0x9db1, 0x8e6a, 0xd13f, 0x0, 0x1);
        gbc.writeMem(0xdbcd, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0x16);
        EXPECT(gbc.b(),  0x9d);
        EXPECT(gbc.c(),  0xb1);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0x6a);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0xf914);
        EXPECT(gbc.pc(), 0xdbcf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdbcd), 0xcb);
        EXPECT(gbc.readMem(0xdbce), 0xbc);
        // CB BC 01C0
        gbc.setState(0x20b4, 0x39ed, 0x1d90, 0x6715, 0x8a0a, 0x8f76, 0x1, 0x1);
        gbc.writeMem(0x20b4, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0x67);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0xf);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0x39ed);
        EXPECT(gbc.pc(), 0x20b6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB BC 01C1
        gbc.setState(0xa4b7, 0x3a57, 0x4b20, 0x10da, 0xa129, 0xa34b, 0x1, 0x1);
        gbc.writeMem(0xa4b7, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0x29);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0x4b);
        EXPECT(gbc.sp(), 0x3a57);
        EXPECT(gbc.pc(), 0xa4b9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa4b7), 0xcb);
        EXPECT(gbc.readMem(0xa4b8), 0xbc);
        // CB BC 01C2
        gbc.setState(0x6e37, 0x9e40, 0xc9d0, 0x28c5, 0x556b, 0x3bca, 0x1, 0x0);
        gbc.writeMem(0x6e37, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0xc9);
        EXPECT(gbc.b(),  0x28);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0x6b);
        EXPECT(gbc.h(),  0x3b);
        EXPECT(gbc.l(),  0xca);
        EXPECT(gbc.sp(), 0x9e40);
        EXPECT(gbc.pc(), 0x6e39);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB BC 01C3
        gbc.setState(0x358e, 0x85ef, 0xb050, 0x9522, 0x1f38, 0x865f, 0x1, 0x0);
        gbc.writeMem(0x358e, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0x95);
        EXPECT(gbc.c(),  0x22);
        EXPECT(gbc.d(),  0x1f);
        EXPECT(gbc.e(),  0x38);
        EXPECT(gbc.h(),  0x6);
        EXPECT(gbc.l(),  0x5f);
        EXPECT(gbc.sp(), 0x85ef);
        EXPECT(gbc.pc(), 0x3590);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB BC 01C4
        gbc.setState(0x3d05, 0xf3a1, 0x5530, 0xbc8a, 0x4ec1, 0x2e49, 0x0, 0x0);
        gbc.writeMem(0x3d05, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0xbc);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0x4e);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0x2e);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0xf3a1);
        EXPECT(gbc.pc(), 0x3d07);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB BC 01C5
        gbc.setState(0x93db, 0xd5ca, 0xeb80, 0x8392, 0xbb7f, 0xf6a0, 0x0, 0x0);
        gbc.writeMem(0x93db, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0x83);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0x76);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0xd5ca);
        EXPECT(gbc.pc(), 0x93dd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x93db), 0xcb);
        EXPECT(gbc.readMem(0x93dc), 0xbc);
        // CB BC 01C6
        gbc.setState(0xaefc, 0x86b, 0x9b90, 0xd2bc, 0x556d, 0x14ab, 0x1, 0x0);
        gbc.writeMem(0xaefc, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0x9b);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0xbc);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0x6d);
        EXPECT(gbc.h(),  0x14);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0x86b);
        EXPECT(gbc.pc(), 0xaefe);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaefc), 0xcb);
        EXPECT(gbc.readMem(0xaefd), 0xbc);
        // CB BC 01C7
        gbc.setState(0x2c2c, 0x9de3, 0xc9b0, 0xc028, 0xe84f, 0x456b, 0x1, 0x1);
        gbc.writeMem(0x2c2c, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0xc9);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0xe8);
        EXPECT(gbc.e(),  0x4f);
        EXPECT(gbc.h(),  0x45);
        EXPECT(gbc.l(),  0x6b);
        EXPECT(gbc.sp(), 0x9de3);
        EXPECT(gbc.pc(), 0x2c2e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB BC 01C8
        gbc.setState(0x6a86, 0xf9fc, 0x5920, 0xfdae, 0xaeb1, 0x67a1, 0x1, 0x1);
        gbc.writeMem(0x6a86, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0xae);
        EXPECT(gbc.d(),  0xae);
        EXPECT(gbc.e(),  0xb1);
        EXPECT(gbc.h(),  0x67);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0xf9fc);
        EXPECT(gbc.pc(), 0x6a88);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB BC 01C9
        gbc.setState(0x97b5, 0xa9e1, 0xc3f0, 0xa739, 0xe0c1, 0xbe06, 0x1, 0x0);
        gbc.writeMem(0x97b5, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0xc3);
        EXPECT(gbc.b(),  0xa7);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0xa9e1);
        EXPECT(gbc.pc(), 0x97b7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x97b5), 0xcb);
        EXPECT(gbc.readMem(0x97b6), 0xbc);
        // CB BC 01CA
        gbc.setState(0x80c7, 0x3800, 0x7120, 0xaf80, 0x8bd8, 0xe522, 0x0, 0x1);
        gbc.writeMem(0x80c7, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0x71);
        EXPECT(gbc.b(),  0xaf);
        EXPECT(gbc.c(),  0x80);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0x65);
        EXPECT(gbc.l(),  0x22);
        EXPECT(gbc.sp(), 0x3800);
        EXPECT(gbc.pc(), 0x80c9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x80c7), 0xcb);
        EXPECT(gbc.readMem(0x80c8), 0xbc);
        // CB BC 01CC
        gbc.setState(0x5cfd, 0x44cb, 0x2710, 0xd51d, 0x43ea, 0x30f1, 0x1, 0x0);
        gbc.writeMem(0x5cfd, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0x27);
        EXPECT(gbc.b(),  0xd5);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0x30);
        EXPECT(gbc.l(),  0xf1);
        EXPECT(gbc.sp(), 0x44cb);
        EXPECT(gbc.pc(), 0x5cff);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB BC 01CD
        gbc.setState(0x95ad, 0x8e92, 0x79b0, 0xe25b, 0x3621, 0x2fd6, 0x1, 0x0);
        gbc.writeMem(0x95ad, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0xe2);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0x2f);
        EXPECT(gbc.l(),  0xd6);
        EXPECT(gbc.sp(), 0x8e92);
        EXPECT(gbc.pc(), 0x95af);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x95ad), 0xcb);
        EXPECT(gbc.readMem(0x95ae), 0xbc);
        // CB BC 01CE
        gbc.setState(0x6e5c, 0x4254, 0xf40, 0x4db0, 0x492d, 0x5668, 0x1, 0x0);
        gbc.writeMem(0x6e5c, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0xf);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0x68);
        EXPECT(gbc.sp(), 0x4254);
        EXPECT(gbc.pc(), 0x6e5e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB BC 01CF
        gbc.setState(0x87e5, 0x98f4, 0xbcd0, 0x1a3c, 0x6962, 0x89a0, 0x0, 0x1);
        gbc.writeMem(0x87e5, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0x1a);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0x69);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0x9);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0x98f4);
        EXPECT(gbc.pc(), 0x87e7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x87e5), 0xcb);
        EXPECT(gbc.readMem(0x87e6), 0xbc);
        // CB BC 01D0
        gbc.setState(0xaa20, 0xd66e, 0x1ab0, 0xc6a5, 0x7e5e, 0x5577, 0x1, 0x1);
        gbc.writeMem(0xaa20, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0x1a);
        EXPECT(gbc.b(),  0xc6);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0x7e);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0xd66e);
        EXPECT(gbc.pc(), 0xaa22);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaa20), 0xcb);
        EXPECT(gbc.readMem(0xaa21), 0xbc);
        // CB BC 01D2
        gbc.setState(0xb11, 0x4292, 0x7f00, 0x373a, 0x8971, 0x1084, 0x0, 0x0);
        gbc.writeMem(0xb11, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0x89);
        EXPECT(gbc.e(),  0x71);
        EXPECT(gbc.h(),  0x10);
        EXPECT(gbc.l(),  0x84);
        EXPECT(gbc.sp(), 0x4292);
        EXPECT(gbc.pc(), 0xb13);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB BC 01D3
        gbc.setState(0x31f, 0x16fb, 0x7d60, 0xef1c, 0x835, 0x8281, 0x0, 0x0);
        gbc.writeMem(0x31f, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0x7d);
        EXPECT(gbc.b(),  0xef);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0x35);
        EXPECT(gbc.h(),  0x2);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0x16fb);
        EXPECT(gbc.pc(), 0x321);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB BC 01D5
        gbc.setState(0x7fed, 0xf0b3, 0x190, 0x6bad, 0xca48, 0xc9d4, 0x0, 0x0);
        gbc.writeMem(0x7fed, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0x1);
        EXPECT(gbc.b(),  0x6b);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0xca);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0x49);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0xf0b3);
        EXPECT(gbc.pc(), 0x7fef);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB BC 01D6
        gbc.setState(0x5c6f, 0xed91, 0x6770, 0xb47a, 0x1e5e, 0xfc8f, 0x1, 0x1);
        gbc.writeMem(0x5c6f, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0x67);
        EXPECT(gbc.b(),  0xb4);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0x1e);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0x7c);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0xed91);
        EXPECT(gbc.pc(), 0x5c71);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB BC 01D7
        gbc.setState(0x753b, 0x4725, 0x3870, 0xfa8d, 0x7286, 0xc53c, 0x0, 0x0);
        gbc.writeMem(0x753b, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0x8d);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0x45);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0x4725);
        EXPECT(gbc.pc(), 0x753d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB BC 01D8
        gbc.setState(0x49c6, 0xc04a, 0x2620, 0xa924, 0xdca8, 0xe60b, 0x0, 0x0);
        gbc.writeMem(0x49c6, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0xa9);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0x66);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0xc04a);
        EXPECT(gbc.pc(), 0x49c8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB BC 01D9
        gbc.setState(0x95cd, 0x59c9, 0x7c90, 0x7b1, 0x412d, 0xecaa, 0x1, 0x1);
        gbc.writeMem(0x95cd, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0x7c);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0xb1);
        EXPECT(gbc.d(),  0x41);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0x6c);
        EXPECT(gbc.l(),  0xaa);
        EXPECT(gbc.sp(), 0x59c9);
        EXPECT(gbc.pc(), 0x95cf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x95cd), 0xcb);
        EXPECT(gbc.readMem(0x95ce), 0xbc);
        // CB BC 01DA
        gbc.setState(0x82c, 0xd78f, 0x6590, 0x857d, 0x185f, 0x9018, 0x0, 0x0);
        gbc.writeMem(0x82c, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0x65);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0x10);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0xd78f);
        EXPECT(gbc.pc(), 0x82e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB BC 01DC
        gbc.setState(0xdf93, 0xec22, 0x69c0, 0x27, 0x4ef7, 0x6bcd, 0x1, 0x1);
        gbc.writeMem(0xdf93, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0x4e);
        EXPECT(gbc.e(),  0xf7);
        EXPECT(gbc.h(),  0x6b);
        EXPECT(gbc.l(),  0xcd);
        EXPECT(gbc.sp(), 0xec22);
        EXPECT(gbc.pc(), 0xdf95);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdf93), 0xcb);
        EXPECT(gbc.readMem(0xdf94), 0xbc);
        // CB BC 01DD
        gbc.setState(0xc951, 0x2723, 0x8540, 0xb05f, 0x7f2a, 0x2611, 0x0, 0x1);
        gbc.writeMem(0xc951, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0x85);
        EXPECT(gbc.b(),  0xb0);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0x11);
        EXPECT(gbc.sp(), 0x2723);
        EXPECT(gbc.pc(), 0xc953);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc951), 0xcb);
        EXPECT(gbc.readMem(0xc952), 0xbc);
        // CB BC 01DE
        gbc.setState(0x7a8, 0xe1f5, 0xdfb0, 0xd16a, 0x7619, 0x48a7, 0x0, 0x0);
        gbc.writeMem(0x7a8, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0xdf);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0x6a);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0x19);
        EXPECT(gbc.h(),  0x48);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0xe1f5);
        EXPECT(gbc.pc(), 0x7aa);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB BC 01DF
        gbc.setState(0x32be, 0xc99, 0x9e0, 0xf92e, 0x8d6, 0xfef4, 0x1, 0x1);
        gbc.writeMem(0x32be, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0x2e);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0xd6);
        EXPECT(gbc.h(),  0x7e);
        EXPECT(gbc.l(),  0xf4);
        EXPECT(gbc.sp(), 0xc99);
        EXPECT(gbc.pc(), 0x32c0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB BC 01E0
        gbc.setState(0x4f80, 0x9a80, 0xf000, 0x2d0, 0xed37, 0x4c5d, 0x0, 0x1);
        gbc.writeMem(0x4f80, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0xf0);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0xed);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0x9a80);
        EXPECT(gbc.pc(), 0x4f82);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB BC 01E1
        gbc.setState(0x88, 0x4037, 0x8380, 0x9266, 0x3866, 0xf0a4, 0x1, 0x0);
        gbc.writeMem(0x88, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0x83);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0x38);
        EXPECT(gbc.e(),  0x66);
        EXPECT(gbc.h(),  0x70);
        EXPECT(gbc.l(),  0xa4);
        EXPECT(gbc.sp(), 0x4037);
        EXPECT(gbc.pc(), 0x8a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB BC 01E2
        gbc.setState(0xc201, 0x5cc1, 0x23c0, 0xf273, 0xab2c, 0x4cf2, 0x1, 0x1);
        gbc.writeMem(0xc201, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0xf2);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0xf2);
        EXPECT(gbc.sp(), 0x5cc1);
        EXPECT(gbc.pc(), 0xc203);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc201), 0xcb);
        EXPECT(gbc.readMem(0xc202), 0xbc);
        // CB BC 01E4
        gbc.setState(0x31e5, 0x1ef6, 0xf140, 0x9669, 0x925e, 0x6c37, 0x0, 0x1);
        gbc.writeMem(0x31e5, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0xf1);
        EXPECT(gbc.b(),  0x96);
        EXPECT(gbc.c(),  0x69);
        EXPECT(gbc.d(),  0x92);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0x6c);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0x1ef6);
        EXPECT(gbc.pc(), 0x31e7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB BC 01E5
        gbc.setState(0xb06c, 0x3a0d, 0xcde0, 0x5135, 0xea6, 0x2f39, 0x0, 0x0);
        gbc.writeMem(0xb06c, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0xe);
        EXPECT(gbc.e(),  0xa6);
        EXPECT(gbc.h(),  0x2f);
        EXPECT(gbc.l(),  0x39);
        EXPECT(gbc.sp(), 0x3a0d);
        EXPECT(gbc.pc(), 0xb06e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb06c), 0xcb);
        EXPECT(gbc.readMem(0xb06d), 0xbc);
        // CB BC 01E6
        gbc.setState(0xeb8e, 0x76e5, 0x8c40, 0x9f67, 0x2de3, 0xc80b, 0x0, 0x1);
        gbc.writeMem(0xeb8e, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0x9f);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0xe3);
        EXPECT(gbc.h(),  0x48);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0x76e5);
        EXPECT(gbc.pc(), 0xeb90);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xeb8e), 0xcb);
        EXPECT(gbc.readMem(0xeb8f), 0xbc);
        // CB BC 01E8
        gbc.setState(0xefd4, 0xedbf, 0x8090, 0x503b, 0xe42c, 0xcd6b, 0x0, 0x1);
        gbc.writeMem(0xefd4, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0x50);
        EXPECT(gbc.c(),  0x3b);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0x4d);
        EXPECT(gbc.l(),  0x6b);
        EXPECT(gbc.sp(), 0xedbf);
        EXPECT(gbc.pc(), 0xefd6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xefd4), 0xcb);
        EXPECT(gbc.readMem(0xefd5), 0xbc);
        // CB BC 01E9
        gbc.setState(0x1c7c, 0x75ab, 0xff60, 0x1fb4, 0xf917, 0x568f, 0x1, 0x0);
        gbc.writeMem(0x1c7c, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0xb4);
        EXPECT(gbc.d(),  0xf9);
        EXPECT(gbc.e(),  0x17);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0x75ab);
        EXPECT(gbc.pc(), 0x1c7e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB BC 01EA
        gbc.setState(0xba26, 0xbe9b, 0x2a80, 0x4384, 0x3a1d, 0x76e9, 0x1, 0x1);
        gbc.writeMem(0xba26, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0x43);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0x76);
        EXPECT(gbc.l(),  0xe9);
        EXPECT(gbc.sp(), 0xbe9b);
        EXPECT(gbc.pc(), 0xba28);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xba26), 0xcb);
        EXPECT(gbc.readMem(0xba27), 0xbc);
        // CB BC 01EB
        gbc.setState(0xa4ad, 0x6458, 0x8d50, 0xb81b, 0x64a7, 0x7789, 0x1, 0x1);
        gbc.writeMem(0xa4ad, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0xa7);
        EXPECT(gbc.h(),  0x77);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0x6458);
        EXPECT(gbc.pc(), 0xa4af);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa4ad), 0xcb);
        EXPECT(gbc.readMem(0xa4ae), 0xbc);
        // CB BC 01EC
        gbc.setState(0x3bf4, 0xf109, 0xe780, 0x550b, 0x645d, 0x6664, 0x0, 0x1);
        gbc.writeMem(0x3bf4, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0xe7);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0xb);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0x66);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0xf109);
        EXPECT(gbc.pc(), 0x3bf6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB BC 01ED
        gbc.setState(0xcc8d, 0x3c48, 0xe880, 0x3f0f, 0xd65f, 0x7a7e, 0x1, 0x1);
        gbc.writeMem(0xcc8d, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0x3f);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0x7a);
        EXPECT(gbc.l(),  0x7e);
        EXPECT(gbc.sp(), 0x3c48);
        EXPECT(gbc.pc(), 0xcc8f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcc8d), 0xcb);
        EXPECT(gbc.readMem(0xcc8e), 0xbc);
        // CB BC 01EE
        gbc.setState(0x5938, 0xc5b1, 0x22a0, 0x8931, 0x8f97, 0x546, 0x0, 0x1);
        gbc.writeMem(0x5938, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0x97);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0x46);
        EXPECT(gbc.sp(), 0xc5b1);
        EXPECT(gbc.pc(), 0x593a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB BC 01EF
        gbc.setState(0x1f50, 0x985d, 0x2c50, 0x18f, 0xcf03, 0xd602, 0x0, 0x1);
        gbc.writeMem(0x1f50, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0x2c);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0x8f);
        EXPECT(gbc.d(),  0xcf);
        EXPECT(gbc.e(),  0x3);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0x985d);
        EXPECT(gbc.pc(), 0x1f52);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB BC 01F0
        gbc.setState(0x75fb, 0x33f4, 0x5c70, 0xa817, 0x72e7, 0x783b, 0x0, 0x0);
        gbc.writeMem(0x75fb, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0xa8);
        EXPECT(gbc.c(),  0x17);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0x78);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0x33f4);
        EXPECT(gbc.pc(), 0x75fd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB BC 01F1
        gbc.setState(0xec9c, 0x9295, 0x2b10, 0x2eb5, 0x5e57, 0x648a, 0x1, 0x0);
        gbc.writeMem(0xec9c, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0x2b);
        EXPECT(gbc.b(),  0x2e);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0x57);
        EXPECT(gbc.h(),  0x64);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0x9295);
        EXPECT(gbc.pc(), 0xec9e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xec9c), 0xcb);
        EXPECT(gbc.readMem(0xec9d), 0xbc);
        // CB BC 01F2
        gbc.setState(0x4e3c, 0xc98e, 0x7d30, 0xa886, 0x1213, 0x5300, 0x1, 0x1);
        gbc.writeMem(0x4e3c, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0x7d);
        EXPECT(gbc.b(),  0xa8);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0x53);
        EXPECT(gbc.l(),  0x0);
        EXPECT(gbc.sp(), 0xc98e);
        EXPECT(gbc.pc(), 0x4e3e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB BC 01F3
        gbc.setState(0x4a0b, 0x15d6, 0x8670, 0x297c, 0x2f19, 0x499e, 0x0, 0x1);
        gbc.writeMem(0x4a0b, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0x19);
        EXPECT(gbc.h(),  0x49);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0x15d6);
        EXPECT(gbc.pc(), 0x4a0d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB BC 01F4
        gbc.setState(0x229e, 0xe451, 0x6e40, 0x4da1, 0xa001, 0x6378, 0x1, 0x1);
        gbc.writeMem(0x229e, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0xa1);
        EXPECT(gbc.d(),  0xa0);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0x63);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0xe451);
        EXPECT(gbc.pc(), 0x22a0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB BC 01F5
        gbc.setState(0x542, 0xa11c, 0x2c90, 0xa4cc, 0xdd6, 0xda3f, 0x1, 0x1);
        gbc.writeMem(0x542, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0x2c);
        EXPECT(gbc.b(),  0xa4);
        EXPECT(gbc.c(),  0xcc);
        EXPECT(gbc.d(),  0xd);
        EXPECT(gbc.e(),  0xd6);
        EXPECT(gbc.h(),  0x5a);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0xa11c);
        EXPECT(gbc.pc(), 0x544);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB BC 01F6
        gbc.setState(0xdc5a, 0xfdb2, 0x19a0, 0xbd76, 0x5eaa, 0x901a, 0x1, 0x0);
        gbc.writeMem(0xdc5a, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0x19);
        EXPECT(gbc.b(),  0xbd);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0xaa);
        EXPECT(gbc.h(),  0x10);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0xfdb2);
        EXPECT(gbc.pc(), 0xdc5c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdc5a), 0xcb);
        EXPECT(gbc.readMem(0xdc5b), 0xbc);
        // CB BC 01F7
        gbc.setState(0x83f, 0x3958, 0xf3d0, 0xc61d, 0x9d74, 0x47cd, 0x1, 0x0);
        gbc.writeMem(0x83f, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0xc6);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0xcd);
        EXPECT(gbc.sp(), 0x3958);
        EXPECT(gbc.pc(), 0x841);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB BC 01F9
        gbc.setState(0x2df5, 0x659f, 0x7a40, 0x317d, 0x28bd, 0xf98e, 0x1, 0x1);
        gbc.writeMem(0x2df5, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0x7a);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0x28);
        EXPECT(gbc.e(),  0xbd);
        EXPECT(gbc.h(),  0x79);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0x659f);
        EXPECT(gbc.pc(), 0x2df7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB BC 01FA
        gbc.setState(0xcec0, 0x107b, 0x27e0, 0xb424, 0x38d7, 0xa5f8, 0x0, 0x0);
        gbc.writeMem(0xcec0, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0x27);
        EXPECT(gbc.b(),  0xb4);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0x38);
        EXPECT(gbc.e(),  0xd7);
        EXPECT(gbc.h(),  0x25);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0x107b);
        EXPECT(gbc.pc(), 0xcec2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcec0), 0xcb);
        EXPECT(gbc.readMem(0xcec1), 0xbc);
        // CB BC 01FB
        gbc.setState(0x5023, 0xf7ab, 0xdc50, 0xc86, 0x359a, 0xc418, 0x0, 0x1);
        gbc.writeMem(0x5023, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0xdc);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0x35);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0x44);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0xf7ab);
        EXPECT(gbc.pc(), 0x5025);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB BC 01FC
        gbc.setState(0xc4cb, 0xe35b, 0xc5e0, 0x489e, 0x703e, 0x22a5, 0x0, 0x0);
        gbc.writeMem(0xc4cb, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0xc5);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0x9e);
        EXPECT(gbc.d(),  0x70);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0x22);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0xe35b);
        EXPECT(gbc.pc(), 0xc4cd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc4cb), 0xcb);
        EXPECT(gbc.readMem(0xc4cc), 0xbc);
        // CB BC 01FD
        gbc.setState(0x8889, 0x3356, 0x5780, 0x338d, 0x295, 0x403a, 0x1, 0x0);
        gbc.writeMem(0x8889, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0x57);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0x8d);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0x95);
        EXPECT(gbc.h(),  0x40);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0x3356);
        EXPECT(gbc.pc(), 0x888b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8889), 0xcb);
        EXPECT(gbc.readMem(0x888a), 0xbc);
        // CB BC 01FE
        gbc.setState(0x428d, 0x3e81, 0xace0, 0x8467, 0x2de4, 0x3a79, 0x1, 0x0);
        gbc.writeMem(0x428d, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0xac);
        EXPECT(gbc.b(),  0x84);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0x3a);
        EXPECT(gbc.l(),  0x79);
        EXPECT(gbc.sp(), 0x3e81);
        EXPECT(gbc.pc(), 0x428f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB BC 01FF
        gbc.setState(0xc347, 0x8d5f, 0x1a00, 0x614e, 0xd366, 0xc78b, 0x0, 0x1);
        gbc.writeMem(0xc347, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0x1a);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0x4e);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0x66);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0x8b);
        EXPECT(gbc.sp(), 0x8d5f);
        EXPECT(gbc.pc(), 0xc349);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc347), 0xcb);
        EXPECT(gbc.readMem(0xc348), 0xbc);
        // CB BC 0200
        gbc.setState(0x2b04, 0x7d83, 0x82b0, 0x9c02, 0xb62c, 0xebcf, 0x1, 0x1);
        gbc.writeMem(0x2b04, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0x82);
        EXPECT(gbc.b(),  0x9c);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0x6b);
        EXPECT(gbc.l(),  0xcf);
        EXPECT(gbc.sp(), 0x7d83);
        EXPECT(gbc.pc(), 0x2b06);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB BC 0201
        gbc.setState(0x135, 0x20c0, 0x52e0, 0x6b01, 0x5e52, 0xf0fa, 0x0, 0x1);
        gbc.writeMem(0x135, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0x6b);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0x70);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0x20c0);
        EXPECT(gbc.pc(), 0x137);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB BC 0202
        gbc.setState(0xbb4a, 0xb843, 0xaf30, 0x35f5, 0x9f41, 0xaebb, 0x0, 0x0);
        gbc.writeMem(0xbb4a, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0xaf);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0x41);
        EXPECT(gbc.h(),  0x2e);
        EXPECT(gbc.l(),  0xbb);
        EXPECT(gbc.sp(), 0xb843);
        EXPECT(gbc.pc(), 0xbb4c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbb4a), 0xcb);
        EXPECT(gbc.readMem(0xbb4b), 0xbc);
        // CB BC 0203
        gbc.setState(0xbfa0, 0xcfc, 0x7540, 0xd8f8, 0xc460, 0xe6b, 0x0, 0x0);
        gbc.writeMem(0xbfa0, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0xf8);
        EXPECT(gbc.d(),  0xc4);
        EXPECT(gbc.e(),  0x60);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0x6b);
        EXPECT(gbc.sp(), 0xcfc);
        EXPECT(gbc.pc(), 0xbfa2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbfa0), 0xcb);
        EXPECT(gbc.readMem(0xbfa1), 0xbc);
        // CB BC 0204
        gbc.setState(0xaa3, 0xa51c, 0x7f90, 0x8c63, 0x9840, 0xa3cf, 0x0, 0x1);
        gbc.writeMem(0xaa3, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0x63);
        EXPECT(gbc.d(),  0x98);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0xcf);
        EXPECT(gbc.sp(), 0xa51c);
        EXPECT(gbc.pc(), 0xaa5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB BC 0205
        gbc.setState(0xe9d1, 0xd74d, 0x7240, 0x9ec8, 0x50a1, 0x6ee8, 0x0, 0x0);
        gbc.writeMem(0xe9d1, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0x9e);
        EXPECT(gbc.c(),  0xc8);
        EXPECT(gbc.d(),  0x50);
        EXPECT(gbc.e(),  0xa1);
        EXPECT(gbc.h(),  0x6e);
        EXPECT(gbc.l(),  0xe8);
        EXPECT(gbc.sp(), 0xd74d);
        EXPECT(gbc.pc(), 0xe9d3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe9d1), 0xcb);
        EXPECT(gbc.readMem(0xe9d2), 0xbc);
        // CB BC 0206
        gbc.setState(0x2e71, 0xdd29, 0x89a0, 0xfe18, 0xc842, 0xf181, 0x0, 0x0);
        gbc.writeMem(0x2e71, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0x42);
        EXPECT(gbc.h(),  0x71);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0xdd29);
        EXPECT(gbc.pc(), 0x2e73);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB BC 0207
        gbc.setState(0xaa3c, 0xe1e0, 0xa2e0, 0xbc05, 0x2213, 0x82bc, 0x1, 0x0);
        gbc.writeMem(0xaa3c, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0xbc);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0x2);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0xe1e0);
        EXPECT(gbc.pc(), 0xaa3e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaa3c), 0xcb);
        EXPECT(gbc.readMem(0xaa3d), 0xbc);
        // CB BC 0208
        gbc.setState(0x3ccc, 0xd474, 0x8fe0, 0xfdfc, 0xe053, 0x313a, 0x0, 0x1);
        gbc.writeMem(0x3ccc, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0x8f);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0x53);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0xd474);
        EXPECT(gbc.pc(), 0x3cce);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB BC 0209
        gbc.setState(0x6a09, 0xe4ff, 0xed80, 0xa741, 0x85a9, 0x2551, 0x0, 0x1);
        gbc.writeMem(0x6a09, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0xa7);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0x25);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0xe4ff);
        EXPECT(gbc.pc(), 0x6a0b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB BC 020A
        gbc.setState(0xcd06, 0x74f9, 0x1910, 0x62cb, 0x4ac8, 0xfe6b, 0x1, 0x0);
        gbc.writeMem(0xcd06, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0x19);
        EXPECT(gbc.b(),  0x62);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0x4a);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0x7e);
        EXPECT(gbc.l(),  0x6b);
        EXPECT(gbc.sp(), 0x74f9);
        EXPECT(gbc.pc(), 0xcd08);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcd06), 0xcb);
        EXPECT(gbc.readMem(0xcd07), 0xbc);
        // CB BC 020B
        gbc.setState(0xb882, 0xec90, 0x3b70, 0xc6ea, 0x4810, 0x57c3, 0x0, 0x0);
        gbc.writeMem(0xb882, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0xc6);
        EXPECT(gbc.c(),  0xea);
        EXPECT(gbc.d(),  0x48);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0x57);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0xec90);
        EXPECT(gbc.pc(), 0xb884);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb882), 0xcb);
        EXPECT(gbc.readMem(0xb883), 0xbc);
        // CB BC 020C
        gbc.setState(0x9f68, 0xa502, 0x3720, 0x2e65, 0x3584, 0x702f, 0x0, 0x0);
        gbc.writeMem(0x9f68, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0x2e);
        EXPECT(gbc.c(),  0x65);
        EXPECT(gbc.d(),  0x35);
        EXPECT(gbc.e(),  0x84);
        EXPECT(gbc.h(),  0x70);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0xa502);
        EXPECT(gbc.pc(), 0x9f6a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9f68), 0xcb);
        EXPECT(gbc.readMem(0x9f69), 0xbc);
        // CB BC 020D
        gbc.setState(0x33, 0xab68, 0x5c30, 0x8a83, 0x7e33, 0x9833, 0x1, 0x1);
        gbc.writeMem(0x33, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0x7e);
        EXPECT(gbc.e(),  0x33);
        EXPECT(gbc.h(),  0x18);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0xab68);
        EXPECT(gbc.pc(), 0x35);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB BC 020E
        gbc.setState(0x3c77, 0xae3, 0x6420, 0x2210, 0xebae, 0x3f58, 0x0, 0x1);
        gbc.writeMem(0x3c77, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0xeb);
        EXPECT(gbc.e(),  0xae);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0xae3);
        EXPECT(gbc.pc(), 0x3c79);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB BC 020F
        gbc.setState(0x2a30, 0xde1b, 0x9e20, 0x177f, 0xe963, 0xc2a, 0x1, 0x0);
        gbc.writeMem(0x2a30, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0x17);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0xe9);
        EXPECT(gbc.e(),  0x63);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0x2a);
        EXPECT(gbc.sp(), 0xde1b);
        EXPECT(gbc.pc(), 0x2a32);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB BC 0210
        gbc.setState(0x2daf, 0x72cb, 0xafe0, 0x6a6b, 0x1f45, 0x6091, 0x0, 0x1);
        gbc.writeMem(0x2daf, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0xaf);
        EXPECT(gbc.b(),  0x6a);
        EXPECT(gbc.c(),  0x6b);
        EXPECT(gbc.d(),  0x1f);
        EXPECT(gbc.e(),  0x45);
        EXPECT(gbc.h(),  0x60);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0x72cb);
        EXPECT(gbc.pc(), 0x2db1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB BC 0211
        gbc.setState(0x88b2, 0x1995, 0xa0f0, 0xb81d, 0x972f, 0x71a4, 0x0, 0x0);
        gbc.writeMem(0x88b2, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0x2f);
        EXPECT(gbc.h(),  0x71);
        EXPECT(gbc.l(),  0xa4);
        EXPECT(gbc.sp(), 0x1995);
        EXPECT(gbc.pc(), 0x88b4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x88b2), 0xcb);
        EXPECT(gbc.readMem(0x88b3), 0xbc);
        // CB BC 0213
        gbc.setState(0x4c2, 0xa13e, 0x8d40, 0xfad3, 0x904b, 0xd011, 0x0, 0x0);
        gbc.writeMem(0x4c2, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0xd3);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0x11);
        EXPECT(gbc.sp(), 0xa13e);
        EXPECT(gbc.pc(), 0x4c4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB BC 0214
        gbc.setState(0x1fa2, 0xbf9, 0x72b0, 0xe146, 0xd453, 0xc767, 0x0, 0x0);
        gbc.writeMem(0x1fa2, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0x53);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0x67);
        EXPECT(gbc.sp(), 0xbf9);
        EXPECT(gbc.pc(), 0x1fa4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB BC 0215
        gbc.setState(0x4f75, 0x3327, 0x2b70, 0xf002, 0x8d1a, 0xacb1, 0x1, 0x1);
        gbc.writeMem(0x4f75, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0x2b);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0x8d);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0x3327);
        EXPECT(gbc.pc(), 0x4f77);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB BC 0217
        gbc.setState(0xa003, 0x77df, 0x13d0, 0x7049, 0x7a8, 0x8750, 0x1, 0x0);
        gbc.writeMem(0xa003, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0x13);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0x49);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0x50);
        EXPECT(gbc.sp(), 0x77df);
        EXPECT(gbc.pc(), 0xa005);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa003), 0xcb);
        EXPECT(gbc.readMem(0xa004), 0xbc);
        // CB BC 0218
        gbc.setState(0xcae6, 0xf949, 0xad90, 0x8e46, 0x242b, 0xa7e3, 0x0, 0x0);
        gbc.writeMem(0xcae6, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0xad);
        EXPECT(gbc.b(),  0x8e);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0x27);
        EXPECT(gbc.l(),  0xe3);
        EXPECT(gbc.sp(), 0xf949);
        EXPECT(gbc.pc(), 0xcae8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcae6), 0xcb);
        EXPECT(gbc.readMem(0xcae7), 0xbc);
        // CB BC 0219
        gbc.setState(0x151, 0x76cb, 0x1030, 0xd680, 0x26d9, 0xade2, 0x0, 0x0);
        gbc.writeMem(0x151, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0x10);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0x80);
        EXPECT(gbc.d(),  0x26);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0x2d);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0x76cb);
        EXPECT(gbc.pc(), 0x153);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB BC 021A
        gbc.setState(0x138c, 0x9106, 0x2070, 0xba40, 0x69f2, 0x2a0b, 0x1, 0x0);
        gbc.writeMem(0x138c, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0x20);
        EXPECT(gbc.b(),  0xba);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0x69);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0x2a);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0x9106);
        EXPECT(gbc.pc(), 0x138e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB BC 021B
        gbc.setState(0x7c68, 0x9ed7, 0xec90, 0x5f1, 0xd1cf, 0xb8b8, 0x1, 0x0);
        gbc.writeMem(0x7c68, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0xcf);
        EXPECT(gbc.h(),  0x38);
        EXPECT(gbc.l(),  0xb8);
        EXPECT(gbc.sp(), 0x9ed7);
        EXPECT(gbc.pc(), 0x7c6a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB BC 021C
        gbc.setState(0x3f34, 0x7549, 0x8010, 0x5030, 0xc891, 0x154b, 0x0, 0x1);
        gbc.writeMem(0x3f34, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0x50);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0x91);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0x4b);
        EXPECT(gbc.sp(), 0x7549);
        EXPECT(gbc.pc(), 0x3f36);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB BC 021E
        gbc.setState(0x2156, 0xeffa, 0xa980, 0xa9d7, 0x8296, 0xed0, 0x0, 0x1);
        gbc.writeMem(0x2156, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0xa9);
        EXPECT(gbc.b(),  0xa9);
        EXPECT(gbc.c(),  0xd7);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0xd0);
        EXPECT(gbc.sp(), 0xeffa);
        EXPECT(gbc.pc(), 0x2158);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB BC 021F
        gbc.setState(0xe2a9, 0x932f, 0xb420, 0x239d, 0x7245, 0x881a, 0x0, 0x0);
        gbc.writeMem(0xe2a9, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0xb4);
        EXPECT(gbc.b(),  0x23);
        EXPECT(gbc.c(),  0x9d);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0x45);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0x932f);
        EXPECT(gbc.pc(), 0xe2ab);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe2a9), 0xcb);
        EXPECT(gbc.readMem(0xe2aa), 0xbc);
        // CB BC 0220
        gbc.setState(0xdcb5, 0xc290, 0xa840, 0x4067, 0x596c, 0xade3, 0x1, 0x0);
        gbc.writeMem(0xdcb5, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0xa8);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0x59);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0x2d);
        EXPECT(gbc.l(),  0xe3);
        EXPECT(gbc.sp(), 0xc290);
        EXPECT(gbc.pc(), 0xdcb7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdcb5), 0xcb);
        EXPECT(gbc.readMem(0xdcb6), 0xbc);
        // CB BC 0221
        gbc.setState(0x9caf, 0xc7bb, 0xcc20, 0xb9d4, 0xf7d, 0x44a1, 0x1, 0x1);
        gbc.writeMem(0x9caf, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0xb9);
        EXPECT(gbc.c(),  0xd4);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0x7d);
        EXPECT(gbc.h(),  0x44);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0xc7bb);
        EXPECT(gbc.pc(), 0x9cb1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9caf), 0xcb);
        EXPECT(gbc.readMem(0x9cb0), 0xbc);
        // CB BC 0222
        gbc.setState(0x582e, 0x5f3f, 0x6480, 0x30e1, 0xac3b, 0x430c, 0x0, 0x0);
        gbc.writeMem(0x582e, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0xe1);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0x3b);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0x5f3f);
        EXPECT(gbc.pc(), 0x5830);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB BC 0223
        gbc.setState(0x9838, 0x524f, 0x2560, 0xf7f7, 0x295, 0x9270, 0x0, 0x0);
        gbc.writeMem(0x9838, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0x25);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0x95);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0x70);
        EXPECT(gbc.sp(), 0x524f);
        EXPECT(gbc.pc(), 0x983a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9838), 0xcb);
        EXPECT(gbc.readMem(0x9839), 0xbc);
        // CB BC 0224
        gbc.setState(0xd4d6, 0x74d8, 0x7c10, 0xcbd, 0xccd8, 0xb7f7, 0x1, 0x1);
        gbc.writeMem(0xd4d6, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0x7c);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0xbd);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0xf7);
        EXPECT(gbc.sp(), 0x74d8);
        EXPECT(gbc.pc(), 0xd4d8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd4d6), 0xcb);
        EXPECT(gbc.readMem(0xd4d7), 0xbc);
        // CB BC 0225
        gbc.setState(0xee96, 0xf83a, 0x4ed0, 0x22cc, 0x55ed, 0x4396, 0x1, 0x0);
        gbc.writeMem(0xee96, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0xcc);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0xed);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0xf83a);
        EXPECT(gbc.pc(), 0xee98);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xee96), 0xcb);
        EXPECT(gbc.readMem(0xee97), 0xbc);
        // CB BC 0226
        gbc.setState(0x1ff9, 0xd7ac, 0xf4c0, 0x926e, 0x43ae, 0xeef5, 0x0, 0x0);
        gbc.writeMem(0x1ff9, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0xae);
        EXPECT(gbc.h(),  0x6e);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0xd7ac);
        EXPECT(gbc.pc(), 0x1ffb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB BC 0227
        gbc.setState(0x8cbe, 0x9e9, 0x1330, 0x6d68, 0xb839, 0x40fd, 0x0, 0x1);
        gbc.writeMem(0x8cbe, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0x13);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0x68);
        EXPECT(gbc.d(),  0xb8);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0x40);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0x9e9);
        EXPECT(gbc.pc(), 0x8cc0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8cbe), 0xcb);
        EXPECT(gbc.readMem(0x8cbf), 0xbc);
        // CB BC 0228
        gbc.setState(0xe30f, 0xb7cd, 0x7b60, 0xc77, 0x442e, 0x617, 0x1, 0x0);
        gbc.writeMem(0xe30f, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0x77);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0x6);
        EXPECT(gbc.l(),  0x17);
        EXPECT(gbc.sp(), 0xb7cd);
        EXPECT(gbc.pc(), 0xe311);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe30f), 0xcb);
        EXPECT(gbc.readMem(0xe310), 0xbc);
        // CB BC 0229
        gbc.setState(0x7846, 0xc69f, 0x31f0, 0x60a1, 0x87f8, 0x21f4, 0x1, 0x0);
        gbc.writeMem(0x7846, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0x31);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0xa1);
        EXPECT(gbc.d(),  0x87);
        EXPECT(gbc.e(),  0xf8);
        EXPECT(gbc.h(),  0x21);
        EXPECT(gbc.l(),  0xf4);
        EXPECT(gbc.sp(), 0xc69f);
        EXPECT(gbc.pc(), 0x7848);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB BC 022A
        gbc.setState(0x340b, 0xfda8, 0x1d0, 0xa01a, 0xe247, 0xcee0, 0x1, 0x0);
        gbc.writeMem(0x340b, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0x1);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0xe2);
        EXPECT(gbc.e(),  0x47);
        EXPECT(gbc.h(),  0x4e);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0xfda8);
        EXPECT(gbc.pc(), 0x340d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB BC 022B
        gbc.setState(0x9682, 0x4691, 0xff60, 0x7928, 0xb53d, 0xf721, 0x0, 0x1);
        gbc.writeMem(0x9682, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0xb5);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0x77);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0x4691);
        EXPECT(gbc.pc(), 0x9684);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9682), 0xcb);
        EXPECT(gbc.readMem(0x9683), 0xbc);
        // CB BC 022C
        gbc.setState(0x1226, 0x492b, 0x4830, 0x182d, 0xb356, 0x1b8c, 0x1, 0x0);
        gbc.writeMem(0x1226, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0x48);
        EXPECT(gbc.b(),  0x18);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0xb3);
        EXPECT(gbc.e(),  0x56);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0x8c);
        EXPECT(gbc.sp(), 0x492b);
        EXPECT(gbc.pc(), 0x1228);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB BC 022D
        gbc.setState(0xcc97, 0x9558, 0xcc30, 0x861f, 0xe534, 0xa16, 0x0, 0x1);
        gbc.writeMem(0xcc97, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0x86);
        EXPECT(gbc.c(),  0x1f);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0x34);
        EXPECT(gbc.h(),  0xa);
        EXPECT(gbc.l(),  0x16);
        EXPECT(gbc.sp(), 0x9558);
        EXPECT(gbc.pc(), 0xcc99);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcc97), 0xcb);
        EXPECT(gbc.readMem(0xcc98), 0xbc);
        // CB BC 022F
        gbc.setState(0xde8e, 0xfe8b, 0xec30, 0xa959, 0x25b1, 0x694f, 0x0, 0x1);
        gbc.writeMem(0xde8e, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0xa9);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0x25);
        EXPECT(gbc.e(),  0xb1);
        EXPECT(gbc.h(),  0x69);
        EXPECT(gbc.l(),  0x4f);
        EXPECT(gbc.sp(), 0xfe8b);
        EXPECT(gbc.pc(), 0xde90);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xde8e), 0xcb);
        EXPECT(gbc.readMem(0xde8f), 0xbc);
        // CB BC 0231
        gbc.setState(0x1c7d, 0xfa04, 0x1380, 0x6ac7, 0x2371, 0x52cb, 0x1, 0x0);
        gbc.writeMem(0x1c7d, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0x13);
        EXPECT(gbc.b(),  0x6a);
        EXPECT(gbc.c(),  0xc7);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0x71);
        EXPECT(gbc.h(),  0x52);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0xfa04);
        EXPECT(gbc.pc(), 0x1c7f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB BC 0232
        gbc.setState(0xef83, 0x49d2, 0xe660, 0xb773, 0x165c, 0x4912, 0x1, 0x1);
        gbc.writeMem(0xef83, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0x5c);
        EXPECT(gbc.h(),  0x49);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0x49d2);
        EXPECT(gbc.pc(), 0xef85);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xef83), 0xcb);
        EXPECT(gbc.readMem(0xef84), 0xbc);
        // CB BC 0233
        gbc.setState(0xc125, 0xa31a, 0x7960, 0xde4b, 0x1836, 0x8ff, 0x1, 0x0);
        gbc.writeMem(0xc125, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0xde);
        EXPECT(gbc.c(),  0x4b);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0xff);
        EXPECT(gbc.sp(), 0xa31a);
        EXPECT(gbc.pc(), 0xc127);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc125), 0xcb);
        EXPECT(gbc.readMem(0xc126), 0xbc);
        // CB BC 0234
        gbc.setState(0x5034, 0x7016, 0xd90, 0x5a9f, 0x26b9, 0xd62a, 0x1, 0x1);
        gbc.writeMem(0x5034, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0xd);
        EXPECT(gbc.b(),  0x5a);
        EXPECT(gbc.c(),  0x9f);
        EXPECT(gbc.d(),  0x26);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0x2a);
        EXPECT(gbc.sp(), 0x7016);
        EXPECT(gbc.pc(), 0x5036);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB BC 0235
        gbc.setState(0xbb80, 0x467a, 0x31b0, 0xaa0f, 0xc971, 0x7cc5, 0x1, 0x0);
        gbc.writeMem(0xbb80, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0x31);
        EXPECT(gbc.b(),  0xaa);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0xc9);
        EXPECT(gbc.e(),  0x71);
        EXPECT(gbc.h(),  0x7c);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0x467a);
        EXPECT(gbc.pc(), 0xbb82);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbb80), 0xcb);
        EXPECT(gbc.readMem(0xbb81), 0xbc);
        // CB BC 0236
        gbc.setState(0x9915, 0xb665, 0xcc60, 0x2eb3, 0x771, 0x7a92, 0x1, 0x1);
        gbc.writeMem(0x9915, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0x2e);
        EXPECT(gbc.c(),  0xb3);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0x71);
        EXPECT(gbc.h(),  0x7a);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0xb665);
        EXPECT(gbc.pc(), 0x9917);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9915), 0xcb);
        EXPECT(gbc.readMem(0x9916), 0xbc);
        // CB BC 0237
        gbc.setState(0x9d48, 0x5249, 0xd4e0, 0xaa92, 0xadcd, 0xaa96, 0x1, 0x1);
        gbc.writeMem(0x9d48, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0xaa);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0xad);
        EXPECT(gbc.e(),  0xcd);
        EXPECT(gbc.h(),  0x2a);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0x5249);
        EXPECT(gbc.pc(), 0x9d4a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9d48), 0xcb);
        EXPECT(gbc.readMem(0x9d49), 0xbc);
        // CB BC 0238
        gbc.setState(0x4e9c, 0x598b, 0x4980, 0xccb7, 0xa155, 0xd10e, 0x1, 0x0);
        gbc.writeMem(0x4e9c, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0xcc);
        EXPECT(gbc.c(),  0xb7);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0x55);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0xe);
        EXPECT(gbc.sp(), 0x598b);
        EXPECT(gbc.pc(), 0x4e9e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB BC 0239
        gbc.setState(0xa61a, 0x7c35, 0x1c30, 0xedbf, 0xee5a, 0x12e3, 0x1, 0x1);
        gbc.writeMem(0xa61a, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0x1c);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0xbf);
        EXPECT(gbc.d(),  0xee);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0xe3);
        EXPECT(gbc.sp(), 0x7c35);
        EXPECT(gbc.pc(), 0xa61c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa61a), 0xcb);
        EXPECT(gbc.readMem(0xa61b), 0xbc);
        // CB BC 023A
        gbc.setState(0xa03e, 0xcf8b, 0xee30, 0xfb3d, 0xbaff, 0x4776, 0x1, 0x0);
        gbc.writeMem(0xa03e, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0xee);
        EXPECT(gbc.b(),  0xfb);
        EXPECT(gbc.c(),  0x3d);
        EXPECT(gbc.d(),  0xba);
        EXPECT(gbc.e(),  0xff);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0xcf8b);
        EXPECT(gbc.pc(), 0xa040);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa03e), 0xcb);
        EXPECT(gbc.readMem(0xa03f), 0xbc);
        // CB BC 023B
        gbc.setState(0x40d9, 0xf5d2, 0xbc0, 0x9a82, 0x738c, 0xa6c7, 0x1, 0x0);
        gbc.writeMem(0x40d9, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0x9a);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0x73);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0xc7);
        EXPECT(gbc.sp(), 0xf5d2);
        EXPECT(gbc.pc(), 0x40db);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB BC 023C
        gbc.setState(0x4d8a, 0xe03d, 0x2490, 0x86aa, 0x5e75, 0x8ac5, 0x0, 0x1);
        gbc.writeMem(0x4d8a, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0x24);
        EXPECT(gbc.b(),  0x86);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0x75);
        EXPECT(gbc.h(),  0xa);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0xe03d);
        EXPECT(gbc.pc(), 0x4d8c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB BC 023D
        gbc.setState(0xa97f, 0xcdc5, 0xe820, 0x6c85, 0xf34c, 0xf185, 0x1, 0x1);
        gbc.writeMem(0xa97f, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0x85);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0x71);
        EXPECT(gbc.l(),  0x85);
        EXPECT(gbc.sp(), 0xcdc5);
        EXPECT(gbc.pc(), 0xa981);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa97f), 0xcb);
        EXPECT(gbc.readMem(0xa980), 0xbc);
        // CB BC 023E
        gbc.setState(0x506e, 0x355e, 0x2a10, 0x650c, 0x9efd, 0x83b, 0x1, 0x0);
        gbc.writeMem(0x506e, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0xc);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0xfd);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0x355e);
        EXPECT(gbc.pc(), 0x5070);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB BC 023F
        gbc.setState(0xea72, 0x2a40, 0x25d0, 0x2748, 0x350a, 0x55b5, 0x1, 0x1);
        gbc.writeMem(0xea72, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0x25);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0x35);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0x2a40);
        EXPECT(gbc.pc(), 0xea74);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xea72), 0xcb);
        EXPECT(gbc.readMem(0xea73), 0xbc);
        // CB BC 0240
        gbc.setState(0x1a8b, 0x258d, 0x1950, 0xb32b, 0xfb0, 0x6b0d, 0x1, 0x0);
        gbc.writeMem(0x1a8b, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0x19);
        EXPECT(gbc.b(),  0xb3);
        EXPECT(gbc.c(),  0x2b);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0x6b);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0x258d);
        EXPECT(gbc.pc(), 0x1a8d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB BC 0241
        gbc.setState(0x9b69, 0x5672, 0xf1f0, 0x81e0, 0x8093, 0x197a, 0x0, 0x1);
        gbc.writeMem(0x9b69, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0xf1);
        EXPECT(gbc.b(),  0x81);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0x19);
        EXPECT(gbc.l(),  0x7a);
        EXPECT(gbc.sp(), 0x5672);
        EXPECT(gbc.pc(), 0x9b6b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9b69), 0xcb);
        EXPECT(gbc.readMem(0x9b6a), 0xbc);
        // CB BC 0242
        gbc.setState(0x8d74, 0x657f, 0xa3e0, 0xe46f, 0x29cd, 0x265e, 0x0, 0x0);
        gbc.writeMem(0x8d74, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0xa3);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0xcd);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0x657f);
        EXPECT(gbc.pc(), 0x8d76);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8d74), 0xcb);
        EXPECT(gbc.readMem(0x8d75), 0xbc);
        // CB BC 0243
        gbc.setState(0xdd2a, 0xa590, 0xb500, 0x2eaf, 0x6498, 0xe979, 0x1, 0x0);
        gbc.writeMem(0xdd2a, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0xb5);
        EXPECT(gbc.b(),  0x2e);
        EXPECT(gbc.c(),  0xaf);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0x98);
        EXPECT(gbc.h(),  0x69);
        EXPECT(gbc.l(),  0x79);
        EXPECT(gbc.sp(), 0xa590);
        EXPECT(gbc.pc(), 0xdd2c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdd2a), 0xcb);
        EXPECT(gbc.readMem(0xdd2b), 0xbc);
        // CB BC 0244
        gbc.setState(0xed73, 0xf854, 0xa3a0, 0x46c3, 0xa1f6, 0x3fa6, 0x0, 0x0);
        gbc.writeMem(0xed73, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0xa3);
        EXPECT(gbc.b(),  0x46);
        EXPECT(gbc.c(),  0xc3);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0xf6);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0xa6);
        EXPECT(gbc.sp(), 0xf854);
        EXPECT(gbc.pc(), 0xed75);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xed73), 0xcb);
        EXPECT(gbc.readMem(0xed74), 0xbc);
        // CB BC 0245
        gbc.setState(0xe2ea, 0xef2c, 0x8930, 0x79c3, 0x91ea, 0xc5d6, 0x0, 0x1);
        gbc.writeMem(0xe2ea, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0xc3);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0x45);
        EXPECT(gbc.l(),  0xd6);
        EXPECT(gbc.sp(), 0xef2c);
        EXPECT(gbc.pc(), 0xe2ec);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe2ea), 0xcb);
        EXPECT(gbc.readMem(0xe2eb), 0xbc);
        // CB BC 0246
        gbc.setState(0x8d51, 0xc90b, 0x9ed0, 0x2a04, 0xc78c, 0xd56, 0x0, 0x1);
        gbc.writeMem(0x8d51, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0xd);
        EXPECT(gbc.l(),  0x56);
        EXPECT(gbc.sp(), 0xc90b);
        EXPECT(gbc.pc(), 0x8d53);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8d51), 0xcb);
        EXPECT(gbc.readMem(0x8d52), 0xbc);
        // CB BC 0247
        gbc.setState(0xb786, 0xd756, 0x4f50, 0xf21, 0xc84c, 0x5f77, 0x0, 0x1);
        gbc.writeMem(0xb786, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0xf);
        EXPECT(gbc.c(),  0x21);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0xd756);
        EXPECT(gbc.pc(), 0xb788);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb786), 0xcb);
        EXPECT(gbc.readMem(0xb787), 0xbc);
        // CB BC 0248
        gbc.setState(0x909a, 0xb4aa, 0x80e0, 0xc8a5, 0x9295, 0x1c87, 0x1, 0x1);
        gbc.writeMem(0x909a, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0x92);
        EXPECT(gbc.e(),  0x95);
        EXPECT(gbc.h(),  0x1c);
        EXPECT(gbc.l(),  0x87);
        EXPECT(gbc.sp(), 0xb4aa);
        EXPECT(gbc.pc(), 0x909c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x909a), 0xcb);
        EXPECT(gbc.readMem(0x909b), 0xbc);
        // CB BC 0249
        gbc.setState(0xe58a, 0xc593, 0xc8e0, 0xcd60, 0x945a, 0xed73, 0x0, 0x0);
        gbc.writeMem(0xe58a, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0x60);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0x6d);
        EXPECT(gbc.l(),  0x73);
        EXPECT(gbc.sp(), 0xc593);
        EXPECT(gbc.pc(), 0xe58c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe58a), 0xcb);
        EXPECT(gbc.readMem(0xe58b), 0xbc);
        // CB BC 024B
        gbc.setState(0x9e61, 0x2295, 0x1c70, 0x9b2f, 0xd88b, 0xa046, 0x0, 0x1);
        gbc.writeMem(0x9e61, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0x1c);
        EXPECT(gbc.b(),  0x9b);
        EXPECT(gbc.c(),  0x2f);
        EXPECT(gbc.d(),  0xd8);
        EXPECT(gbc.e(),  0x8b);
        EXPECT(gbc.h(),  0x20);
        EXPECT(gbc.l(),  0x46);
        EXPECT(gbc.sp(), 0x2295);
        EXPECT(gbc.pc(), 0x9e63);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9e61), 0xcb);
        EXPECT(gbc.readMem(0x9e62), 0xbc);
        // CB BC 024C
        gbc.setState(0xdbfc, 0xc0e5, 0xd4d0, 0xbf45, 0xbb28, 0xb748, 0x0, 0x1);
        gbc.writeMem(0xdbfc, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0xbf);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0x28);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0x48);
        EXPECT(gbc.sp(), 0xc0e5);
        EXPECT(gbc.pc(), 0xdbfe);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdbfc), 0xcb);
        EXPECT(gbc.readMem(0xdbfd), 0xbc);
        // CB BC 024D
        gbc.setState(0xbdbd, 0x9db5, 0xc600, 0xc77f, 0x8d56, 0xef74, 0x1, 0x0);
        gbc.writeMem(0xbdbd, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0xc6);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0x8d);
        EXPECT(gbc.e(),  0x56);
        EXPECT(gbc.h(),  0x6f);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0x9db5);
        EXPECT(gbc.pc(), 0xbdbf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbdbd), 0xcb);
        EXPECT(gbc.readMem(0xbdbe), 0xbc);
        // CB BC 024E
        gbc.setState(0x12df, 0x2988, 0x83c0, 0x53df, 0x3178, 0xfc8d, 0x1, 0x0);
        gbc.writeMem(0x12df, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0x83);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0xdf);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0x7c);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0x2988);
        EXPECT(gbc.pc(), 0x12e1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB BC 024F
        gbc.setState(0x9be6, 0x9c5f, 0xc320, 0xa19, 0x2ba8, 0x217c, 0x1, 0x0);
        gbc.writeMem(0x9be6, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0xc3);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0x21);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0x9c5f);
        EXPECT(gbc.pc(), 0x9be8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9be6), 0xcb);
        EXPECT(gbc.readMem(0x9be7), 0xbc);
        // CB BC 0250
        gbc.setState(0x2fe4, 0x83b7, 0xbaf0, 0x2a27, 0x1e51, 0x9e81, 0x1, 0x0);
        gbc.writeMem(0x2fe4, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0x1e);
        EXPECT(gbc.e(),  0x51);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0x83b7);
        EXPECT(gbc.pc(), 0x2fe6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB BC 0251
        gbc.setState(0xc2c2, 0x68e8, 0xfc20, 0xedcd, 0xf7f0, 0x5386, 0x1, 0x1);
        gbc.writeMem(0xc2c2, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0xcd);
        EXPECT(gbc.d(),  0xf7);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0x53);
        EXPECT(gbc.l(),  0x86);
        EXPECT(gbc.sp(), 0x68e8);
        EXPECT(gbc.pc(), 0xc2c4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc2c2), 0xcb);
        EXPECT(gbc.readMem(0xc2c3), 0xbc);
        // CB BC 0252
        gbc.setState(0xfcb, 0x72ef, 0xc090, 0xd91e, 0xcf60, 0x7bf2, 0x0, 0x0);
        gbc.writeMem(0xfcb, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0xcf);
        EXPECT(gbc.e(),  0x60);
        EXPECT(gbc.h(),  0x7b);
        EXPECT(gbc.l(),  0xf2);
        EXPECT(gbc.sp(), 0x72ef);
        EXPECT(gbc.pc(), 0xfcd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB BC 0253
        gbc.setState(0x3165, 0x9f79, 0x31f0, 0x2642, 0x89f5, 0xce02, 0x1, 0x1);
        gbc.writeMem(0x3165, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0x31);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0x89);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0x4e);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0x9f79);
        EXPECT(gbc.pc(), 0x3167);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB BC 0255
        gbc.setState(0x13fa, 0xe088, 0x13a0, 0x3aad, 0x32a3, 0xa207, 0x0, 0x0);
        gbc.writeMem(0x13fa, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0x13);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0xa3);
        EXPECT(gbc.h(),  0x22);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0xe088);
        EXPECT(gbc.pc(), 0x13fc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB BC 0256
        gbc.setState(0xa366, 0x9bfd, 0x1130, 0x4916, 0x4661, 0xa68f, 0x0, 0x0);
        gbc.writeMem(0xa366, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0x11);
        EXPECT(gbc.b(),  0x49);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0x46);
        EXPECT(gbc.e(),  0x61);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0x9bfd);
        EXPECT(gbc.pc(), 0xa368);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa366), 0xcb);
        EXPECT(gbc.readMem(0xa367), 0xbc);
        // CB BC 0257
        gbc.setState(0x1ae8, 0x5fb3, 0x22c0, 0xca24, 0xdf81, 0x2152, 0x1, 0x0);
        gbc.writeMem(0x1ae8, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0xca);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0x81);
        EXPECT(gbc.h(),  0x21);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0x5fb3);
        EXPECT(gbc.pc(), 0x1aea);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB BC 0258
        gbc.setState(0x570d, 0xc1e4, 0xdd0, 0xa74e, 0x7414, 0x2a90, 0x0, 0x0);
        gbc.writeMem(0x570d, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0xd);
        EXPECT(gbc.b(),  0xa7);
        EXPECT(gbc.c(),  0x4e);
        EXPECT(gbc.d(),  0x74);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0x2a);
        EXPECT(gbc.l(),  0x90);
        EXPECT(gbc.sp(), 0xc1e4);
        EXPECT(gbc.pc(), 0x570f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB BC 0259
        gbc.setState(0x337f, 0xc0b8, 0x9b40, 0xe711, 0xa0e4, 0x17bc, 0x0, 0x1);
        gbc.writeMem(0x337f, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0x9b);
        EXPECT(gbc.b(),  0xe7);
        EXPECT(gbc.c(),  0x11);
        EXPECT(gbc.d(),  0xa0);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0xc0b8);
        EXPECT(gbc.pc(), 0x3381);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB BC 025A
        gbc.setState(0xe9f5, 0x1d8, 0x7970, 0x324e, 0x2673, 0x87f7, 0x1, 0x1);
        gbc.writeMem(0xe9f5, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0x32);
        EXPECT(gbc.c(),  0x4e);
        EXPECT(gbc.d(),  0x26);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0xf7);
        EXPECT(gbc.sp(), 0x1d8);
        EXPECT(gbc.pc(), 0xe9f7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe9f5), 0xcb);
        EXPECT(gbc.readMem(0xe9f6), 0xbc);
        // CB BC 025B
        gbc.setState(0xd8bc, 0x6a7b, 0x2580, 0x993, 0x6647, 0x8870, 0x0, 0x0);
        gbc.writeMem(0xd8bc, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0x25);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0x93);
        EXPECT(gbc.d(),  0x66);
        EXPECT(gbc.e(),  0x47);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0x70);
        EXPECT(gbc.sp(), 0x6a7b);
        EXPECT(gbc.pc(), 0xd8be);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd8bc), 0xcb);
        EXPECT(gbc.readMem(0xd8bd), 0xbc);
        // CB BC 025C
        gbc.setState(0x7d0a, 0xf392, 0x4890, 0x4c1e, 0xe65d, 0xca88, 0x1, 0x1);
        gbc.writeMem(0x7d0a, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0x48);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0x4a);
        EXPECT(gbc.l(),  0x88);
        EXPECT(gbc.sp(), 0xf392);
        EXPECT(gbc.pc(), 0x7d0c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB BC 025E
        gbc.setState(0x88cb, 0xdc42, 0x6b60, 0x8ee9, 0x7926, 0xe7de, 0x1, 0x0);
        gbc.writeMem(0x88cb, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0x8e);
        EXPECT(gbc.c(),  0xe9);
        EXPECT(gbc.d(),  0x79);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0x67);
        EXPECT(gbc.l(),  0xde);
        EXPECT(gbc.sp(), 0xdc42);
        EXPECT(gbc.pc(), 0x88cd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x88cb), 0xcb);
        EXPECT(gbc.readMem(0x88cc), 0xbc);
        // CB BC 025F
        gbc.setState(0x3dc0, 0x1922, 0x1070, 0x40f3, 0x13f9, 0x1919, 0x1, 0x1);
        gbc.writeMem(0x3dc0, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0x10);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0xf3);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0xf9);
        EXPECT(gbc.h(),  0x19);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0x1922);
        EXPECT(gbc.pc(), 0x3dc2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB BC 0260
        gbc.setState(0xb3c4, 0x7044, 0x8860, 0xa1ca, 0xe778, 0xf0b7, 0x0, 0x0);
        gbc.writeMem(0xb3c4, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0xe7);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0x70);
        EXPECT(gbc.l(),  0xb7);
        EXPECT(gbc.sp(), 0x7044);
        EXPECT(gbc.pc(), 0xb3c6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb3c4), 0xcb);
        EXPECT(gbc.readMem(0xb3c5), 0xbc);
        // CB BC 0261
        gbc.setState(0xb8a5, 0xa230, 0x52d0, 0xc9c8, 0x1d91, 0x6766, 0x0, 0x0);
        gbc.writeMem(0xb8a5, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0xc9);
        EXPECT(gbc.c(),  0xc8);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0x91);
        EXPECT(gbc.h(),  0x67);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0xa230);
        EXPECT(gbc.pc(), 0xb8a7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb8a5), 0xcb);
        EXPECT(gbc.readMem(0xb8a6), 0xbc);
        // CB BC 0262
        gbc.setState(0x9e04, 0x7808, 0x5910, 0x50, 0xbc5d, 0x9af6, 0x1, 0x1);
        gbc.writeMem(0x9e04, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0xbc);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0x1a);
        EXPECT(gbc.l(),  0xf6);
        EXPECT(gbc.sp(), 0x7808);
        EXPECT(gbc.pc(), 0x9e06);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9e04), 0xcb);
        EXPECT(gbc.readMem(0x9e05), 0xbc);
        // CB BC 0263
        gbc.setState(0x60fc, 0x1e4f, 0xfc70, 0x9434, 0x2846, 0x95f6, 0x0, 0x1);
        gbc.writeMem(0x60fc, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0x94);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0x28);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0xf6);
        EXPECT(gbc.sp(), 0x1e4f);
        EXPECT(gbc.pc(), 0x60fe);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB BC 0264
        gbc.setState(0xa19e, 0xc139, 0x4fa0, 0x39bb, 0x6dbe, 0x69c7, 0x1, 0x0);
        gbc.writeMem(0xa19e, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0xbb);
        EXPECT(gbc.d(),  0x6d);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0x69);
        EXPECT(gbc.l(),  0xc7);
        EXPECT(gbc.sp(), 0xc139);
        EXPECT(gbc.pc(), 0xa1a0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa19e), 0xcb);
        EXPECT(gbc.readMem(0xa19f), 0xbc);
        // CB BC 0265
        gbc.setState(0x824, 0xdf83, 0xd690, 0xb6b1, 0x388d, 0xfd7c, 0x0, 0x0);
        gbc.writeMem(0x824, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0xb1);
        EXPECT(gbc.d(),  0x38);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0xdf83);
        EXPECT(gbc.pc(), 0x826);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB BC 0266
        gbc.setState(0x6c74, 0xbeb8, 0xc810, 0x399f, 0xb7dc, 0xa666, 0x1, 0x0);
        gbc.writeMem(0x6c74, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0x9f);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0xbeb8);
        EXPECT(gbc.pc(), 0x6c76);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB BC 0267
        gbc.setState(0xa6a5, 0x58a3, 0x83c0, 0xbb22, 0xc51, 0x9cf0, 0x1, 0x0);
        gbc.writeMem(0xa6a5, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0x83);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0x22);
        EXPECT(gbc.d(),  0xc);
        EXPECT(gbc.e(),  0x51);
        EXPECT(gbc.h(),  0x1c);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0x58a3);
        EXPECT(gbc.pc(), 0xa6a7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa6a5), 0xcb);
        EXPECT(gbc.readMem(0xa6a6), 0xbc);
        // CB BC 0268
        gbc.setState(0xaee0, 0xc89e, 0x780, 0x98e9, 0xea, 0xf57f, 0x1, 0x0);
        gbc.writeMem(0xaee0, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0x98);
        EXPECT(gbc.c(),  0xe9);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0xc89e);
        EXPECT(gbc.pc(), 0xaee2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaee0), 0xcb);
        EXPECT(gbc.readMem(0xaee1), 0xbc);
        // CB BC 0269
        gbc.setState(0xb84d, 0x4b06, 0xfc90, 0x6234, 0x5c6, 0x2048, 0x0, 0x1);
        gbc.writeMem(0xb84d, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0x62);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0x5);
        EXPECT(gbc.e(),  0xc6);
        EXPECT(gbc.h(),  0x20);
        EXPECT(gbc.l(),  0x48);
        EXPECT(gbc.sp(), 0x4b06);
        EXPECT(gbc.pc(), 0xb84f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb84d), 0xcb);
        EXPECT(gbc.readMem(0xb84e), 0xbc);
        // CB BC 026A
        gbc.setState(0x65b2, 0x5155, 0x7060, 0x3cb9, 0xde4b, 0x77cd, 0x1, 0x0);
        gbc.writeMem(0x65b2, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0x70);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0x77);
        EXPECT(gbc.l(),  0xcd);
        EXPECT(gbc.sp(), 0x5155);
        EXPECT(gbc.pc(), 0x65b4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB BC 026B
        gbc.setState(0x7a72, 0x406e, 0xdf20, 0xafda, 0x165d, 0xd124, 0x0, 0x1);
        gbc.writeMem(0x7a72, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0xdf);
        EXPECT(gbc.b(),  0xaf);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0x406e);
        EXPECT(gbc.pc(), 0x7a74);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB BC 026C
        gbc.setState(0x6082, 0xbea7, 0xcec0, 0xe07c, 0xfc76, 0xe2e7, 0x0, 0x0);
        gbc.writeMem(0x6082, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0xce);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0x76);
        EXPECT(gbc.h(),  0x62);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0xbea7);
        EXPECT(gbc.pc(), 0x6084);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB BC 026D
        gbc.setState(0x6f6f, 0x7739, 0x510, 0x4045, 0x2055, 0x5887, 0x1, 0x0);
        gbc.writeMem(0x6f6f, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0x5);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0x55);
        EXPECT(gbc.h(),  0x58);
        EXPECT(gbc.l(),  0x87);
        EXPECT(gbc.sp(), 0x7739);
        EXPECT(gbc.pc(), 0x6f71);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB BC 026E
        gbc.setState(0xc44, 0x548a, 0x21a0, 0x8ca8, 0xff8e, 0xd22f, 0x1, 0x1);
        gbc.writeMem(0xc44, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0xa8);
        EXPECT(gbc.d(),  0xff);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0x52);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0x548a);
        EXPECT(gbc.pc(), 0xc46);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB BC 026F
        gbc.setState(0xd3bd, 0x150a, 0x900, 0x8a4e, 0xfc5a, 0x8f1b, 0x0, 0x1);
        gbc.writeMem(0xd3bd, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0x4e);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0xf);
        EXPECT(gbc.l(),  0x1b);
        EXPECT(gbc.sp(), 0x150a);
        EXPECT(gbc.pc(), 0xd3bf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd3bd), 0xcb);
        EXPECT(gbc.readMem(0xd3be), 0xbc);
        // CB BC 0270
        gbc.setState(0x9190, 0x1293, 0xe250, 0x8447, 0x6db3, 0x43a5, 0x1, 0x1);
        gbc.writeMem(0x9190, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0x84);
        EXPECT(gbc.c(),  0x47);
        EXPECT(gbc.d(),  0x6d);
        EXPECT(gbc.e(),  0xb3);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0x1293);
        EXPECT(gbc.pc(), 0x9192);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9190), 0xcb);
        EXPECT(gbc.readMem(0x9191), 0xbc);
        // CB BC 0271
        gbc.setState(0xc4c2, 0x3b74, 0xb070, 0xdec7, 0x388e, 0x7fb1, 0x0, 0x0);
        gbc.writeMem(0xc4c2, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0xde);
        EXPECT(gbc.c(),  0xc7);
        EXPECT(gbc.d(),  0x38);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0x7f);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0x3b74);
        EXPECT(gbc.pc(), 0xc4c4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc4c2), 0xcb);
        EXPECT(gbc.readMem(0xc4c3), 0xbc);
        // CB BC 0272
        gbc.setState(0x259f, 0x4e8b, 0x3a10, 0xe5a8, 0x648b, 0x7cb4, 0x1, 0x0);
        gbc.writeMem(0x259f, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0xe5);
        EXPECT(gbc.c(),  0xa8);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0x8b);
        EXPECT(gbc.h(),  0x7c);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0x4e8b);
        EXPECT(gbc.pc(), 0x25a1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB BC 0273
        gbc.setState(0xb3a5, 0xf2b8, 0x820, 0xcdf0, 0x8c28, 0x84b0, 0x0, 0x1);
        gbc.writeMem(0xb3a5, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0xf0);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0x28);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0xf2b8);
        EXPECT(gbc.pc(), 0xb3a7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb3a5), 0xcb);
        EXPECT(gbc.readMem(0xb3a6), 0xbc);
        // CB BC 0275
        gbc.setState(0x5863, 0x8135, 0x8820, 0xac50, 0x381f, 0x2786, 0x1, 0x0);
        gbc.writeMem(0x5863, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0xac);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0x38);
        EXPECT(gbc.e(),  0x1f);
        EXPECT(gbc.h(),  0x27);
        EXPECT(gbc.l(),  0x86);
        EXPECT(gbc.sp(), 0x8135);
        EXPECT(gbc.pc(), 0x5865);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB BC 0276
        gbc.setState(0xc06c, 0xdf3d, 0x5560, 0xd96f, 0xde29, 0xd47e, 0x0, 0x0);
        gbc.writeMem(0xc06c, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0x29);
        EXPECT(gbc.h(),  0x54);
        EXPECT(gbc.l(),  0x7e);
        EXPECT(gbc.sp(), 0xdf3d);
        EXPECT(gbc.pc(), 0xc06e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc06c), 0xcb);
        EXPECT(gbc.readMem(0xc06d), 0xbc);
        // CB BC 0277
        gbc.setState(0xc240, 0x18ff, 0xd80, 0x3f43, 0xf86, 0x795c, 0x1, 0x1);
        gbc.writeMem(0xc240, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0xd);
        EXPECT(gbc.b(),  0x3f);
        EXPECT(gbc.c(),  0x43);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0x79);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0x18ff);
        EXPECT(gbc.pc(), 0xc242);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc240), 0xcb);
        EXPECT(gbc.readMem(0xc241), 0xbc);
        // CB BC 0278
        gbc.setState(0x631, 0xdf5b, 0x2500, 0x93d9, 0x5dd5, 0xdab4, 0x1, 0x0);
        gbc.writeMem(0x631, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0x25);
        EXPECT(gbc.b(),  0x93);
        EXPECT(gbc.c(),  0xd9);
        EXPECT(gbc.d(),  0x5d);
        EXPECT(gbc.e(),  0xd5);
        EXPECT(gbc.h(),  0x5a);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0xdf5b);
        EXPECT(gbc.pc(), 0x633);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB BC 0279
        gbc.setState(0xceda, 0xdf80, 0xc470, 0x4ad2, 0x8ccb, 0xfc77, 0x0, 0x1);
        gbc.writeMem(0xceda, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0xc4);
        EXPECT(gbc.b(),  0x4a);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0xcb);
        EXPECT(gbc.h(),  0x7c);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0xdf80);
        EXPECT(gbc.pc(), 0xcedc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xceda), 0xcb);
        EXPECT(gbc.readMem(0xcedb), 0xbc);
        // CB BC 027A
        gbc.setState(0x4224, 0xc566, 0x2b30, 0x5721, 0x8707, 0x9d1f, 0x1, 0x1);
        gbc.writeMem(0x4224, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0x2b);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0x21);
        EXPECT(gbc.d(),  0x87);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0xc566);
        EXPECT(gbc.pc(), 0x4226);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB BC 027B
        gbc.setState(0x9f95, 0xd7e8, 0x1530, 0x4951, 0xf9b1, 0xd7cf, 0x1, 0x0);
        gbc.writeMem(0x9f95, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0x15);
        EXPECT(gbc.b(),  0x49);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0xf9);
        EXPECT(gbc.e(),  0xb1);
        EXPECT(gbc.h(),  0x57);
        EXPECT(gbc.l(),  0xcf);
        EXPECT(gbc.sp(), 0xd7e8);
        EXPECT(gbc.pc(), 0x9f97);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9f95), 0xcb);
        EXPECT(gbc.readMem(0x9f96), 0xbc);
        // CB BC 027C
        gbc.setState(0xd3c9, 0xf2a3, 0xd800, 0x7836, 0x3c1b, 0xe52d, 0x1, 0x0);
        gbc.writeMem(0xd3c9, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0xd8);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0x1b);
        EXPECT(gbc.h(),  0x65);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0xf2a3);
        EXPECT(gbc.pc(), 0xd3cb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd3c9), 0xcb);
        EXPECT(gbc.readMem(0xd3ca), 0xbc);
        // CB BC 027D
        gbc.setState(0x9ffb, 0x2ca3, 0x7630, 0x6dfd, 0xa7d9, 0x364, 0x0, 0x1);
        gbc.writeMem(0x9ffb, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0xfd);
        EXPECT(gbc.d(),  0xa7);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0x3);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0x2ca3);
        EXPECT(gbc.pc(), 0x9ffd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9ffb), 0xcb);
        EXPECT(gbc.readMem(0x9ffc), 0xbc);
        // CB BC 027E
        gbc.setState(0x2dd, 0x5eac, 0x47a0, 0xb2de, 0x13ce, 0xebbc, 0x0, 0x0);
        gbc.writeMem(0x2dd, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0xce);
        EXPECT(gbc.h(),  0x6b);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0x5eac);
        EXPECT(gbc.pc(), 0x2df);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB BC 027F
        gbc.setState(0xea02, 0xfd5d, 0x3ce0, 0x6f92, 0x9e5, 0x1f67, 0x0, 0x1);
        gbc.writeMem(0xea02, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0x6f);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0x9);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0x1f);
        EXPECT(gbc.l(),  0x67);
        EXPECT(gbc.sp(), 0xfd5d);
        EXPECT(gbc.pc(), 0xea04);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xea02), 0xcb);
        EXPECT(gbc.readMem(0xea03), 0xbc);
        // CB BC 0280
        gbc.setState(0xce64, 0x16c, 0xd5a0, 0x4a76, 0x8d9, 0x9b08, 0x1, 0x1);
        gbc.writeMem(0xce64, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0xd5);
        EXPECT(gbc.b(),  0x4a);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0x8);
        EXPECT(gbc.sp(), 0x16c);
        EXPECT(gbc.pc(), 0xce66);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xce64), 0xcb);
        EXPECT(gbc.readMem(0xce65), 0xbc);
        // CB BC 0281
        gbc.setState(0xb299, 0xbb3c, 0xda90, 0xc8ca, 0x23b2, 0x8c22, 0x0, 0x0);
        gbc.writeMem(0xb299, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0x22);
        EXPECT(gbc.sp(), 0xbb3c);
        EXPECT(gbc.pc(), 0xb29b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb299), 0xcb);
        EXPECT(gbc.readMem(0xb29a), 0xbc);
        // CB BC 0282
        gbc.setState(0x81fd, 0x418f, 0x92f0, 0x5aac, 0x6784, 0x7885, 0x1, 0x1);
        gbc.writeMem(0x81fd, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0x5a);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0x84);
        EXPECT(gbc.h(),  0x78);
        EXPECT(gbc.l(),  0x85);
        EXPECT(gbc.sp(), 0x418f);
        EXPECT(gbc.pc(), 0x81ff);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x81fd), 0xcb);
        EXPECT(gbc.readMem(0x81fe), 0xbc);
        // CB BC 0283
        gbc.setState(0xb861, 0xcc01, 0x7f50, 0x6b54, 0xcfb5, 0x2d04, 0x0, 0x1);
        gbc.writeMem(0xb861, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0x6b);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0xcf);
        EXPECT(gbc.e(),  0xb5);
        EXPECT(gbc.h(),  0x2d);
        EXPECT(gbc.l(),  0x4);
        EXPECT(gbc.sp(), 0xcc01);
        EXPECT(gbc.pc(), 0xb863);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb861), 0xcb);
        EXPECT(gbc.readMem(0xb862), 0xbc);
        // CB BC 0284
        gbc.setState(0x49ac, 0xad78, 0xe90, 0x6e74, 0xf90c, 0x4d62, 0x0, 0x0);
        gbc.writeMem(0x49ac, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0xf9);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0x4d);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0xad78);
        EXPECT(gbc.pc(), 0x49ae);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB BC 0285
        gbc.setState(0xb1f3, 0x51d5, 0xbc70, 0xd605, 0x4547, 0xb546, 0x0, 0x0);
        gbc.writeMem(0xb1f3, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0x47);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0x46);
        EXPECT(gbc.sp(), 0x51d5);
        EXPECT(gbc.pc(), 0xb1f5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb1f3), 0xcb);
        EXPECT(gbc.readMem(0xb1f4), 0xbc);
        // CB BC 0286
        gbc.setState(0x8776, 0x5511, 0x3b30, 0x2781, 0x5caf, 0x6d34, 0x0, 0x0);
        gbc.writeMem(0x8776, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0x81);
        EXPECT(gbc.d(),  0x5c);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0x6d);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0x5511);
        EXPECT(gbc.pc(), 0x8778);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8776), 0xcb);
        EXPECT(gbc.readMem(0x8777), 0xbc);
        // CB BC 0287
        gbc.setState(0xc97c, 0x33c5, 0xf10, 0x350f, 0xa420, 0x8c06, 0x0, 0x1);
        gbc.writeMem(0xc97c, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0xf);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0xa4);
        EXPECT(gbc.e(),  0x20);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0x33c5);
        EXPECT(gbc.pc(), 0xc97e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc97c), 0xcb);
        EXPECT(gbc.readMem(0xc97d), 0xbc);
        // CB BC 0288
        gbc.setState(0x421f, 0x63ef, 0xa520, 0x877c, 0xd14, 0xfbc5, 0x0, 0x0);
        gbc.writeMem(0x421f, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0xa5);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0xd);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0x7b);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0x63ef);
        EXPECT(gbc.pc(), 0x4221);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB BC 0289
        gbc.setState(0x1d1d, 0x7335, 0x88e0, 0xc830, 0x78e, 0x8c68, 0x1, 0x0);
        gbc.writeMem(0x1d1d, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0x68);
        EXPECT(gbc.sp(), 0x7335);
        EXPECT(gbc.pc(), 0x1d1f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB BC 028A
        gbc.setState(0x5e5, 0xbe1a, 0x1fa0, 0x4e65, 0xdf13, 0xae31, 0x1, 0x0);
        gbc.writeMem(0x5e5, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0x65);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0x2e);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0xbe1a);
        EXPECT(gbc.pc(), 0x5e7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB BC 028B
        gbc.setState(0x8240, 0xae22, 0xa180, 0x6822, 0xae6f, 0xcc9b, 0x1, 0x1);
        gbc.writeMem(0x8240, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0xa1);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0x22);
        EXPECT(gbc.d(),  0xae);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0x9b);
        EXPECT(gbc.sp(), 0xae22);
        EXPECT(gbc.pc(), 0x8242);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8240), 0xcb);
        EXPECT(gbc.readMem(0x8241), 0xbc);
        // CB BC 028C
        gbc.setState(0x9c91, 0xbbbf, 0xaec0, 0xfa9a, 0x29f6, 0xc334, 0x0, 0x0);
        gbc.writeMem(0x9c91, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0xae);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0xf6);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0xbbbf);
        EXPECT(gbc.pc(), 0x9c93);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9c91), 0xcb);
        EXPECT(gbc.readMem(0x9c92), 0xbc);
        // CB BC 028D
        gbc.setState(0x6275, 0x1d7e, 0xe220, 0x6ed, 0xa15b, 0x1c26, 0x1, 0x0);
        gbc.writeMem(0x6275, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0x6);
        EXPECT(gbc.c(),  0xed);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0x5b);
        EXPECT(gbc.h(),  0x1c);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0x1d7e);
        EXPECT(gbc.pc(), 0x6277);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB BC 028E
        gbc.setState(0xe1fc, 0xd197, 0xa150, 0x9756, 0xa43a, 0x98ea, 0x1, 0x1);
        gbc.writeMem(0xe1fc, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0xa1);
        EXPECT(gbc.b(),  0x97);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0xa4);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0x18);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0xd197);
        EXPECT(gbc.pc(), 0xe1fe);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe1fc), 0xcb);
        EXPECT(gbc.readMem(0xe1fd), 0xbc);
        // CB BC 028F
        gbc.setState(0xd42d, 0xbb39, 0x4460, 0x10be, 0xb572, 0xa6aa, 0x0, 0x1);
        gbc.writeMem(0xd42d, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0xbe);
        EXPECT(gbc.d(),  0xb5);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0xaa);
        EXPECT(gbc.sp(), 0xbb39);
        EXPECT(gbc.pc(), 0xd42f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd42d), 0xcb);
        EXPECT(gbc.readMem(0xd42e), 0xbc);
        // CB BC 0290
        gbc.setState(0x6298, 0x3c93, 0x1d40, 0xb31d, 0x8845, 0x7d2f, 0x0, 0x0);
        gbc.writeMem(0x6298, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0xb3);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0x88);
        EXPECT(gbc.e(),  0x45);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0x3c93);
        EXPECT(gbc.pc(), 0x629a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB BC 0291
        gbc.setState(0x6e10, 0xa5bc, 0x1b40, 0x8de4, 0x1642, 0x2e81, 0x0, 0x1);
        gbc.writeMem(0x6e10, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0x8d);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0x42);
        EXPECT(gbc.h(),  0x2e);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0xa5bc);
        EXPECT(gbc.pc(), 0x6e12);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB BC 0292
        gbc.setState(0x4c60, 0x7e4c, 0xa480, 0x9c1c, 0x319c, 0xa7ce, 0x1, 0x0);
        gbc.writeMem(0x4c60, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0xa4);
        EXPECT(gbc.b(),  0x9c);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0x9c);
        EXPECT(gbc.h(),  0x27);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0x7e4c);
        EXPECT(gbc.pc(), 0x4c62);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB BC 0293
        gbc.setState(0x69f7, 0xbfe1, 0xe2c0, 0xba94, 0x13c3, 0x6fad, 0x1, 0x1);
        gbc.writeMem(0x69f7, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0xba);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0xc3);
        EXPECT(gbc.h(),  0x6f);
        EXPECT(gbc.l(),  0xad);
        EXPECT(gbc.sp(), 0xbfe1);
        EXPECT(gbc.pc(), 0x69f9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB BC 0294
        gbc.setState(0xf9d, 0xcb17, 0x97d0, 0x8646, 0x2d7a, 0xd821, 0x1, 0x0);
        gbc.writeMem(0xf9d, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0x97);
        EXPECT(gbc.b(),  0x86);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0x7a);
        EXPECT(gbc.h(),  0x58);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0xcb17);
        EXPECT(gbc.pc(), 0xf9f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB BC 0295
        gbc.setState(0x67b, 0xf6f2, 0xc5a0, 0x2696, 0x8195, 0x7f4e, 0x0, 0x1);
        gbc.writeMem(0x67b, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0xc5);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0x96);
        EXPECT(gbc.d(),  0x81);
        EXPECT(gbc.e(),  0x95);
        EXPECT(gbc.h(),  0x7f);
        EXPECT(gbc.l(),  0x4e);
        EXPECT(gbc.sp(), 0xf6f2);
        EXPECT(gbc.pc(), 0x67d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB BC 0296
        gbc.setState(0xcca7, 0x90c6, 0x4080, 0x5f5b, 0x98d4, 0xb8b5, 0x1, 0x0);
        gbc.writeMem(0xcca7, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0x40);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0x98);
        EXPECT(gbc.e(),  0xd4);
        EXPECT(gbc.h(),  0x38);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0x90c6);
        EXPECT(gbc.pc(), 0xcca9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcca7), 0xcb);
        EXPECT(gbc.readMem(0xcca8), 0xbc);
        // CB BC 0297
        gbc.setState(0x4558, 0x9310, 0x4bb0, 0xf97f, 0xa5ec, 0x689c, 0x1, 0x1);
        gbc.writeMem(0x4558, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0xa5);
        EXPECT(gbc.e(),  0xec);
        EXPECT(gbc.h(),  0x68);
        EXPECT(gbc.l(),  0x9c);
        EXPECT(gbc.sp(), 0x9310);
        EXPECT(gbc.pc(), 0x455a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB BC 0298
        gbc.setState(0xc818, 0xf681, 0x3f30, 0xf0f3, 0xe1d4, 0xb380, 0x0, 0x0);
        gbc.writeMem(0xc818, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0xf3);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0xd4);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0x80);
        EXPECT(gbc.sp(), 0xf681);
        EXPECT(gbc.pc(), 0xc81a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc818), 0xcb);
        EXPECT(gbc.readMem(0xc819), 0xbc);
        // CB BC 0299
        gbc.setState(0x8ec5, 0xf7ad, 0x7ac0, 0xc6d9, 0xa85d, 0x5574, 0x0, 0x0);
        gbc.writeMem(0x8ec5, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0x7a);
        EXPECT(gbc.b(),  0xc6);
        EXPECT(gbc.c(),  0xd9);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0xf7ad);
        EXPECT(gbc.pc(), 0x8ec7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8ec5), 0xcb);
        EXPECT(gbc.readMem(0x8ec6), 0xbc);
        // CB BC 029A
        gbc.setState(0xac6f, 0x268e, 0xb4e0, 0x5eb7, 0x1897, 0xaf7c, 0x1, 0x0);
        gbc.writeMem(0xac6f, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0xb4);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0xb7);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0x97);
        EXPECT(gbc.h(),  0x2f);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0x268e);
        EXPECT(gbc.pc(), 0xac71);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xac6f), 0xcb);
        EXPECT(gbc.readMem(0xac70), 0xbc);
        // CB BC 029B
        gbc.setState(0x75df, 0xe64c, 0xffb0, 0xb707, 0xc6cf, 0xe8f6, 0x0, 0x0);
        gbc.writeMem(0x75df, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0xcf);
        EXPECT(gbc.h(),  0x68);
        EXPECT(gbc.l(),  0xf6);
        EXPECT(gbc.sp(), 0xe64c);
        EXPECT(gbc.pc(), 0x75e1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB BC 029C
        gbc.setState(0x962a, 0xfd9a, 0xf990, 0xac93, 0xd528, 0xb509, 0x1, 0x1);
        gbc.writeMem(0x962a, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0xf9);
        EXPECT(gbc.b(),  0xac);
        EXPECT(gbc.c(),  0x93);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0x28);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0x9);
        EXPECT(gbc.sp(), 0xfd9a);
        EXPECT(gbc.pc(), 0x962c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x962a), 0xcb);
        EXPECT(gbc.readMem(0x962b), 0xbc);
        // CB BC 029D
        gbc.setState(0x6fdb, 0xa8e5, 0x4940, 0x42d7, 0x25e7, 0xdaca, 0x0, 0x1);
        gbc.writeMem(0x6fdb, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0xd7);
        EXPECT(gbc.d(),  0x25);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0x5a);
        EXPECT(gbc.l(),  0xca);
        EXPECT(gbc.sp(), 0xa8e5);
        EXPECT(gbc.pc(), 0x6fdd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB BC 029E
        gbc.setState(0xca7b, 0x58bd, 0x4b0, 0xcf0f, 0xa0be, 0xf29, 0x1, 0x0);
        gbc.writeMem(0xca7b, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0x4);
        EXPECT(gbc.b(),  0xcf);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0xa0);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0xf);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0x58bd);
        EXPECT(gbc.pc(), 0xca7d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xca7b), 0xcb);
        EXPECT(gbc.readMem(0xca7c), 0xbc);
        // CB BC 029F
        gbc.setState(0xca4e, 0xb890, 0x2b0, 0xd75d, 0x6d19, 0x9e6a, 0x0, 0x1);
        gbc.writeMem(0xca4e, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0x6d);
        EXPECT(gbc.e(),  0x19);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0xb890);
        EXPECT(gbc.pc(), 0xca50);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xca4e), 0xcb);
        EXPECT(gbc.readMem(0xca4f), 0xbc);
        // CB BC 02A0
        gbc.setState(0x8757, 0x4ba2, 0x9420, 0x1209, 0xc0ea, 0x3e7e, 0x0, 0x1);
        gbc.writeMem(0x8757, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0x94);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0x7e);
        EXPECT(gbc.sp(), 0x4ba2);
        EXPECT(gbc.pc(), 0x8759);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8757), 0xcb);
        EXPECT(gbc.readMem(0x8758), 0xbc);
        // CB BC 02A1
        gbc.setState(0x1175, 0x78cd, 0x5af0, 0x5ce7, 0xf5ae, 0xe738, 0x1, 0x1);
        gbc.writeMem(0x1175, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0x5c);
        EXPECT(gbc.c(),  0xe7);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0xae);
        EXPECT(gbc.h(),  0x67);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0x78cd);
        EXPECT(gbc.pc(), 0x1177);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB BC 02A2
        gbc.setState(0xb80f, 0x4b06, 0xc3c0, 0x2be9, 0xd734, 0xf4bc, 0x0, 0x1);
        gbc.writeMem(0xb80f, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0xc3);
        EXPECT(gbc.b(),  0x2b);
        EXPECT(gbc.c(),  0xe9);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0x34);
        EXPECT(gbc.h(),  0x74);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0x4b06);
        EXPECT(gbc.pc(), 0xb811);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb80f), 0xcb);
        EXPECT(gbc.readMem(0xb810), 0xbc);
        // CB BC 02A3
        gbc.setState(0x7d01, 0x10b0, 0xb990, 0x62f4, 0xd339, 0x98d5, 0x0, 0x0);
        gbc.writeMem(0x7d01, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0x62);
        EXPECT(gbc.c(),  0xf4);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0x18);
        EXPECT(gbc.l(),  0xd5);
        EXPECT(gbc.sp(), 0x10b0);
        EXPECT(gbc.pc(), 0x7d03);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB BC 02A4
        gbc.setState(0xe639, 0x5fc7, 0x13b0, 0x1c4b, 0x60c2, 0x6990, 0x0, 0x0);
        gbc.writeMem(0xe639, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0x13);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0x4b);
        EXPECT(gbc.d(),  0x60);
        EXPECT(gbc.e(),  0xc2);
        EXPECT(gbc.h(),  0x69);
        EXPECT(gbc.l(),  0x90);
        EXPECT(gbc.sp(), 0x5fc7);
        EXPECT(gbc.pc(), 0xe63b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe639), 0xcb);
        EXPECT(gbc.readMem(0xe63a), 0xbc);
        // CB BC 02A5
        gbc.setState(0xa67a, 0xc440, 0xe4f0, 0x58d4, 0xfa95, 0x99b4, 0x1, 0x0);
        gbc.writeMem(0xa67a, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0xe4);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0xd4);
        EXPECT(gbc.d(),  0xfa);
        EXPECT(gbc.e(),  0x95);
        EXPECT(gbc.h(),  0x19);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0xc440);
        EXPECT(gbc.pc(), 0xa67c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa67a), 0xcb);
        EXPECT(gbc.readMem(0xa67b), 0xbc);
        // CB BC 02A6
        gbc.setState(0x1376, 0x291f, 0x6ff0, 0x7e8b, 0x8966, 0x589, 0x1, 0x0);
        gbc.writeMem(0x1376, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0x8b);
        EXPECT(gbc.d(),  0x89);
        EXPECT(gbc.e(),  0x66);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0x291f);
        EXPECT(gbc.pc(), 0x1378);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB BC 02A9
        gbc.setState(0xc0a9, 0xd48a, 0xe490, 0x6ef1, 0x5f37, 0xb243, 0x0, 0x0);
        gbc.writeMem(0xc0a9, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0xe4);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0x5f);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0xd48a);
        EXPECT(gbc.pc(), 0xc0ab);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc0a9), 0xcb);
        EXPECT(gbc.readMem(0xc0aa), 0xbc);
        // CB BC 02AA
        gbc.setState(0xafe7, 0xe21f, 0xda20, 0x1258, 0xd40, 0x443f, 0x0, 0x1);
        gbc.writeMem(0xafe7, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0xd);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0x44);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0xe21f);
        EXPECT(gbc.pc(), 0xafe9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xafe7), 0xcb);
        EXPECT(gbc.readMem(0xafe8), 0xbc);
        // CB BC 02AB
        gbc.setState(0xa604, 0xab9e, 0x7f00, 0x700e, 0x17b4, 0xc7ee, 0x1, 0x1);
        gbc.writeMem(0xa604, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0x17);
        EXPECT(gbc.e(),  0xb4);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0xee);
        EXPECT(gbc.sp(), 0xab9e);
        EXPECT(gbc.pc(), 0xa606);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa604), 0xcb);
        EXPECT(gbc.readMem(0xa605), 0xbc);
        // CB BC 02AC
        gbc.setState(0xd491, 0xd6f1, 0xb340, 0xe026, 0xef40, 0xf669, 0x0, 0x0);
        gbc.writeMem(0xd491, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0xb3);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0x76);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0xd6f1);
        EXPECT(gbc.pc(), 0xd493);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd491), 0xcb);
        EXPECT(gbc.readMem(0xd492), 0xbc);
        // CB BC 02AD
        gbc.setState(0xbe03, 0x752d, 0x5260, 0x5215, 0xd8cd, 0x7172, 0x0, 0x0);
        gbc.writeMem(0xbe03, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0xd8);
        EXPECT(gbc.e(),  0xcd);
        EXPECT(gbc.h(),  0x71);
        EXPECT(gbc.l(),  0x72);
        EXPECT(gbc.sp(), 0x752d);
        EXPECT(gbc.pc(), 0xbe05);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbe03), 0xcb);
        EXPECT(gbc.readMem(0xbe04), 0xbc);
        // CB BC 02AE
        gbc.setState(0x56e5, 0x925, 0x3810, 0x82a2, 0x525b, 0xfa98, 0x0, 0x0);
        gbc.writeMem(0x56e5, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0x5b);
        EXPECT(gbc.h(),  0x7a);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0x925);
        EXPECT(gbc.pc(), 0x56e7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB BC 02B0
        gbc.setState(0x476d, 0xdd98, 0x3d90, 0xc9be, 0x4166, 0x4cbe, 0x0, 0x0);
        gbc.writeMem(0x476d, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0x3d);
        EXPECT(gbc.b(),  0xc9);
        EXPECT(gbc.c(),  0xbe);
        EXPECT(gbc.d(),  0x41);
        EXPECT(gbc.e(),  0x66);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0xbe);
        EXPECT(gbc.sp(), 0xdd98);
        EXPECT(gbc.pc(), 0x476f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB BC 02B1
        gbc.setState(0xa2da, 0x5f77, 0xe850, 0xccef, 0xd03a, 0x659b, 0x0, 0x1);
        gbc.writeMem(0xa2da, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0xcc);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0x65);
        EXPECT(gbc.l(),  0x9b);
        EXPECT(gbc.sp(), 0x5f77);
        EXPECT(gbc.pc(), 0xa2dc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa2da), 0xcb);
        EXPECT(gbc.readMem(0xa2db), 0xbc);
        // CB BC 02B3
        gbc.setState(0xa82b, 0xe936, 0x2020, 0x516, 0xf6fa, 0x4d5e, 0x0, 0x0);
        gbc.writeMem(0xa82b, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0x20);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0xfa);
        EXPECT(gbc.h(),  0x4d);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0xe936);
        EXPECT(gbc.pc(), 0xa82d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa82b), 0xcb);
        EXPECT(gbc.readMem(0xa82c), 0xbc);
        // CB BC 02B4
        gbc.setState(0x922b, 0x621a, 0x7e40, 0xafb9, 0x6327, 0x64b0, 0x0, 0x0);
        gbc.writeMem(0x922b, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0xaf);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0x63);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0x64);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0x621a);
        EXPECT(gbc.pc(), 0x922d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x922b), 0xcb);
        EXPECT(gbc.readMem(0x922c), 0xbc);
        // CB BC 02B5
        gbc.setState(0x7cb, 0x6420, 0x7430, 0xa0c2, 0x8240, 0x4baa, 0x1, 0x0);
        gbc.writeMem(0x7cb, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0x74);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0x4b);
        EXPECT(gbc.l(),  0xaa);
        EXPECT(gbc.sp(), 0x6420);
        EXPECT(gbc.pc(), 0x7cd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB BC 02B6
        gbc.setState(0x9461, 0xf5bb, 0x4100, 0xcd6c, 0xb99c, 0xdca3, 0x1, 0x0);
        gbc.writeMem(0x9461, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0xb9);
        EXPECT(gbc.e(),  0x9c);
        EXPECT(gbc.h(),  0x5c);
        EXPECT(gbc.l(),  0xa3);
        EXPECT(gbc.sp(), 0xf5bb);
        EXPECT(gbc.pc(), 0x9463);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9461), 0xcb);
        EXPECT(gbc.readMem(0x9462), 0xbc);
        // CB BC 02B7
        gbc.setState(0x1690, 0xc762, 0xe7c0, 0x444f, 0x1e1, 0xa45d, 0x1, 0x0);
        gbc.writeMem(0x1690, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0xe7);
        EXPECT(gbc.b(),  0x44);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0x1);
        EXPECT(gbc.e(),  0xe1);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0xc762);
        EXPECT(gbc.pc(), 0x1692);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB BC 02B8
        gbc.setState(0x2107, 0x1681, 0x8600, 0x9e3b, 0x3c2b, 0x24cc, 0x1, 0x0);
        gbc.writeMem(0x2107, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0x9e);
        EXPECT(gbc.c(),  0x3b);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0xcc);
        EXPECT(gbc.sp(), 0x1681);
        EXPECT(gbc.pc(), 0x2109);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB BC 02B9
        gbc.setState(0x6a31, 0xb981, 0xa5e0, 0x5ad1, 0xdba1, 0x3050, 0x1, 0x1);
        gbc.writeMem(0x6a31, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0xa5);
        EXPECT(gbc.b(),  0x5a);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0xa1);
        EXPECT(gbc.h(),  0x30);
        EXPECT(gbc.l(),  0x50);
        EXPECT(gbc.sp(), 0xb981);
        EXPECT(gbc.pc(), 0x6a33);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB BC 02BA
        gbc.setState(0x3075, 0x31b8, 0xdf90, 0x9ee5, 0x4319, 0xc7b9, 0x1, 0x1);
        gbc.writeMem(0x3075, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0xdf);
        EXPECT(gbc.b(),  0x9e);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0x19);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0x31b8);
        EXPECT(gbc.pc(), 0x3077);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB BC 02BB
        gbc.setState(0xb34a, 0x18ba, 0xb900, 0xf3e6, 0x5ae5, 0x1ba0, 0x0, 0x0);
        gbc.writeMem(0xb34a, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0xf3);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0x18ba);
        EXPECT(gbc.pc(), 0xb34c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb34a), 0xcb);
        EXPECT(gbc.readMem(0xb34b), 0xbc);
        // CB BC 02BC
        gbc.setState(0xec6f, 0xa7c3, 0x5240, 0x1cc4, 0xadbf, 0xa4f6, 0x0, 0x1);
        gbc.writeMem(0xec6f, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0xc4);
        EXPECT(gbc.d(),  0xad);
        EXPECT(gbc.e(),  0xbf);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0xf6);
        EXPECT(gbc.sp(), 0xa7c3);
        EXPECT(gbc.pc(), 0xec71);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xec6f), 0xcb);
        EXPECT(gbc.readMem(0xec70), 0xbc);
        // CB BC 02BD
        gbc.setState(0xcae1, 0x4795, 0x8a20, 0xea7f, 0x42b9, 0xe537, 0x0, 0x1);
        gbc.writeMem(0xcae1, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0x8a);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0x65);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0x4795);
        EXPECT(gbc.pc(), 0xcae3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcae1), 0xcb);
        EXPECT(gbc.readMem(0xcae2), 0xbc);
        // CB BC 02BE
        gbc.setState(0x7c7c, 0x991c, 0xa8c0, 0x3670, 0x9fdf, 0xfad6, 0x1, 0x1);
        gbc.writeMem(0x7c7c, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0xa8);
        EXPECT(gbc.b(),  0x36);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0xdf);
        EXPECT(gbc.h(),  0x7a);
        EXPECT(gbc.l(),  0xd6);
        EXPECT(gbc.sp(), 0x991c);
        EXPECT(gbc.pc(), 0x7c7e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB BC 02BF
        gbc.setState(0xc2ee, 0x4ff1, 0x1700, 0xdda1, 0x1ddc, 0x3831, 0x1, 0x1);
        gbc.writeMem(0xc2ee, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0x17);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0xa1);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0x38);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0x4ff1);
        EXPECT(gbc.pc(), 0xc2f0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc2ee), 0xcb);
        EXPECT(gbc.readMem(0xc2ef), 0xbc);
        // CB BC 02C0
        gbc.setState(0x51c9, 0xe73a, 0x3c70, 0x1a47, 0x7e45, 0xb094, 0x1, 0x0);
        gbc.writeMem(0x51c9, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0x1a);
        EXPECT(gbc.c(),  0x47);
        EXPECT(gbc.d(),  0x7e);
        EXPECT(gbc.e(),  0x45);
        EXPECT(gbc.h(),  0x30);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0xe73a);
        EXPECT(gbc.pc(), 0x51cb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB BC 02C1
        gbc.setState(0xaf13, 0xdb00, 0xeba0, 0xee2d, 0xcad2, 0x7b41, 0x1, 0x1);
        gbc.writeMem(0xaf13, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0xca);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0x7b);
        EXPECT(gbc.l(),  0x41);
        EXPECT(gbc.sp(), 0xdb00);
        EXPECT(gbc.pc(), 0xaf15);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaf13), 0xcb);
        EXPECT(gbc.readMem(0xaf14), 0xbc);
        // CB BC 02C2
        gbc.setState(0x2820, 0x66b8, 0xfec0, 0xa05b, 0x6e1f, 0x6d48, 0x0, 0x1);
        gbc.writeMem(0x2820, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0x1f);
        EXPECT(gbc.h(),  0x6d);
        EXPECT(gbc.l(),  0x48);
        EXPECT(gbc.sp(), 0x66b8);
        EXPECT(gbc.pc(), 0x2822);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB BC 02C3
        gbc.setState(0x8c8d, 0x766, 0x2b00, 0xce95, 0x7690, 0x582b, 0x1, 0x1);
        gbc.writeMem(0x8c8d, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0x2b);
        EXPECT(gbc.b(),  0xce);
        EXPECT(gbc.c(),  0x95);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0x58);
        EXPECT(gbc.l(),  0x2b);
        EXPECT(gbc.sp(), 0x766);
        EXPECT(gbc.pc(), 0x8c8f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8c8d), 0xcb);
        EXPECT(gbc.readMem(0x8c8e), 0xbc);
        // CB BC 02C4
        gbc.setState(0xaa73, 0xe5e2, 0x7a70, 0xb97f, 0xdab6, 0xa4b9, 0x0, 0x0);
        gbc.writeMem(0xaa73, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0x7a);
        EXPECT(gbc.b(),  0xb9);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0xb6);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0xe5e2);
        EXPECT(gbc.pc(), 0xaa75);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaa73), 0xcb);
        EXPECT(gbc.readMem(0xaa74), 0xbc);
        // CB BC 02C5
        gbc.setState(0x7f5b, 0xae32, 0x4810, 0xe84d, 0xa8cb, 0x3ada, 0x1, 0x0);
        gbc.writeMem(0x7f5b, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0x48);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0xcb);
        EXPECT(gbc.h(),  0x3a);
        EXPECT(gbc.l(),  0xda);
        EXPECT(gbc.sp(), 0xae32);
        EXPECT(gbc.pc(), 0x7f5d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB BC 02C6
        gbc.setState(0x8226, 0x91fb, 0x7860, 0x8102, 0xdfe7, 0x2443, 0x0, 0x1);
        gbc.writeMem(0x8226, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0x81);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0x91fb);
        EXPECT(gbc.pc(), 0x8228);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8226), 0xcb);
        EXPECT(gbc.readMem(0x8227), 0xbc);
        // CB BC 02C7
        gbc.setState(0x5eb0, 0x8505, 0x3b30, 0x6821, 0xe2ab, 0x6ea1, 0x0, 0x0);
        gbc.writeMem(0x5eb0, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0x21);
        EXPECT(gbc.d(),  0xe2);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0x6e);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0x8505);
        EXPECT(gbc.pc(), 0x5eb2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB BC 02C8
        gbc.setState(0xe33, 0x3c71, 0xd570, 0xfd77, 0x2c19, 0x2ee8, 0x0, 0x1);
        gbc.writeMem(0xe33, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0xd5);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0x77);
        EXPECT(gbc.d(),  0x2c);
        EXPECT(gbc.e(),  0x19);
        EXPECT(gbc.h(),  0x2e);
        EXPECT(gbc.l(),  0xe8);
        EXPECT(gbc.sp(), 0x3c71);
        EXPECT(gbc.pc(), 0xe35);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB BC 02C9
        gbc.setState(0x7735, 0x4228, 0x4ba0, 0x69db, 0xd871, 0x1829, 0x0, 0x1);
        gbc.writeMem(0x7735, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0x69);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0xd8);
        EXPECT(gbc.e(),  0x71);
        EXPECT(gbc.h(),  0x18);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0x4228);
        EXPECT(gbc.pc(), 0x7737);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB BC 02CA
        gbc.setState(0xea6f, 0x10d8, 0x9c40, 0xf1f6, 0x2346, 0x29af, 0x1, 0x0);
        gbc.writeMem(0xea6f, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0x9c);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0xf6);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0x29);
        EXPECT(gbc.l(),  0xaf);
        EXPECT(gbc.sp(), 0x10d8);
        EXPECT(gbc.pc(), 0xea71);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xea6f), 0xcb);
        EXPECT(gbc.readMem(0xea70), 0xbc);
        // CB BC 02CB
        gbc.setState(0x88f9, 0x7432, 0x57c0, 0xa7ad, 0xed51, 0x9dc, 0x0, 0x1);
        gbc.writeMem(0x88f9, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0x57);
        EXPECT(gbc.b(),  0xa7);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0xed);
        EXPECT(gbc.e(),  0x51);
        EXPECT(gbc.h(),  0x9);
        EXPECT(gbc.l(),  0xdc);
        EXPECT(gbc.sp(), 0x7432);
        EXPECT(gbc.pc(), 0x88fb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x88f9), 0xcb);
        EXPECT(gbc.readMem(0x88fa), 0xbc);
        // CB BC 02CC
        gbc.setState(0x5b9b, 0x3e4c, 0xbc40, 0xc177, 0x4e4c, 0x7118, 0x0, 0x0);
        gbc.writeMem(0x5b9b, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0xc1);
        EXPECT(gbc.c(),  0x77);
        EXPECT(gbc.d(),  0x4e);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0x71);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0x3e4c);
        EXPECT(gbc.pc(), 0x5b9d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB BC 02CD
        gbc.setState(0xbced, 0x1787, 0xe920, 0x84a8, 0xa7bc, 0x829a, 0x0, 0x1);
        gbc.writeMem(0xbced, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0xe9);
        EXPECT(gbc.b(),  0x84);
        EXPECT(gbc.c(),  0xa8);
        EXPECT(gbc.d(),  0xa7);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0x2);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0x1787);
        EXPECT(gbc.pc(), 0xbcef);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbced), 0xcb);
        EXPECT(gbc.readMem(0xbcee), 0xbc);
        // CB BC 02CE
        gbc.setState(0x40f5, 0x8aee, 0xf790, 0x55e9, 0xcfef, 0x2a6a, 0x0, 0x1);
        gbc.writeMem(0x40f5, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0xe9);
        EXPECT(gbc.d(),  0xcf);
        EXPECT(gbc.e(),  0xef);
        EXPECT(gbc.h(),  0x2a);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0x8aee);
        EXPECT(gbc.pc(), 0x40f7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB BC 02CF
        gbc.setState(0xd833, 0x3b4b, 0x1440, 0xc94f, 0xeb11, 0x2253, 0x1, 0x1);
        gbc.writeMem(0xd833, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0x14);
        EXPECT(gbc.b(),  0xc9);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0xeb);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0x22);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0x3b4b);
        EXPECT(gbc.pc(), 0xd835);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd833), 0xcb);
        EXPECT(gbc.readMem(0xd834), 0xbc);
        // CB BC 02D0
        gbc.setState(0xbf70, 0x2309, 0x9a30, 0xe8f8, 0x934a, 0x6c07, 0x1, 0x0);
        gbc.writeMem(0xbf70, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0x9a);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0xf8);
        EXPECT(gbc.d(),  0x93);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0x6c);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0x2309);
        EXPECT(gbc.pc(), 0xbf72);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbf70), 0xcb);
        EXPECT(gbc.readMem(0xbf71), 0xbc);
        // CB BC 02D1
        gbc.setState(0x7b6a, 0x90e5, 0xb530, 0x23be, 0x8f8, 0xfd08, 0x0, 0x0);
        gbc.writeMem(0x7b6a, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0xb5);
        EXPECT(gbc.b(),  0x23);
        EXPECT(gbc.c(),  0xbe);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0xf8);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0x8);
        EXPECT(gbc.sp(), 0x90e5);
        EXPECT(gbc.pc(), 0x7b6c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB BC 02D2
        gbc.setState(0x6ef1, 0xc40a, 0x5820, 0x21b0, 0x80dc, 0xf79, 0x1, 0x0);
        gbc.writeMem(0x6ef1, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0x58);
        EXPECT(gbc.b(),  0x21);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0xf);
        EXPECT(gbc.l(),  0x79);
        EXPECT(gbc.sp(), 0xc40a);
        EXPECT(gbc.pc(), 0x6ef3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB BC 02D3
        gbc.setState(0x3e3d, 0x4626, 0x4490, 0xdfa7, 0x11a1, 0xc93d, 0x0, 0x1);
        gbc.writeMem(0x3e3d, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0xdf);
        EXPECT(gbc.c(),  0xa7);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0xa1);
        EXPECT(gbc.h(),  0x49);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0x4626);
        EXPECT(gbc.pc(), 0x3e3f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB BC 02D4
        gbc.setState(0x25d4, 0x269e, 0x89e0, 0x547b, 0xe9d8, 0x1d9f, 0x0, 0x1);
        gbc.writeMem(0x25d4, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0xe9);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0x9f);
        EXPECT(gbc.sp(), 0x269e);
        EXPECT(gbc.pc(), 0x25d6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB BC 02D5
        gbc.setState(0x8862, 0xad94, 0x1b80, 0x20a5, 0xca1d, 0xda71, 0x0, 0x0);
        gbc.writeMem(0x8862, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0xca);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0x5a);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0xad94);
        EXPECT(gbc.pc(), 0x8864);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8862), 0xcb);
        EXPECT(gbc.readMem(0x8863), 0xbc);
        // CB BC 02D6
        gbc.setState(0x2b5, 0x2e0b, 0x9370, 0x2438, 0xfe28, 0x774d, 0x0, 0x0);
        gbc.writeMem(0x2b5, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0x93);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0x38);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0x28);
        EXPECT(gbc.h(),  0x77);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0x2e0b);
        EXPECT(gbc.pc(), 0x2b7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB BC 02D7
        gbc.setState(0x363, 0xf4ad, 0xe350, 0x590e, 0xffe0, 0x86ca, 0x1, 0x1);
        gbc.writeMem(0x363, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0x59);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0xff);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0x6);
        EXPECT(gbc.l(),  0xca);
        EXPECT(gbc.sp(), 0xf4ad);
        EXPECT(gbc.pc(), 0x365);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB BC 02D8
        gbc.setState(0xf63, 0x6756, 0x51a0, 0xec44, 0x6f47, 0x434e, 0x0, 0x1);
        gbc.writeMem(0xf63, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0x6f);
        EXPECT(gbc.e(),  0x47);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0x4e);
        EXPECT(gbc.sp(), 0x6756);
        EXPECT(gbc.pc(), 0xf65);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB BC 02D9
        gbc.setState(0x7f2a, 0x664b, 0x41c0, 0x7f76, 0x4a4, 0x2e2f, 0x0, 0x1);
        gbc.writeMem(0x7f2a, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0xa4);
        EXPECT(gbc.h(),  0x2e);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0x664b);
        EXPECT(gbc.pc(), 0x7f2c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB BC 02DA
        gbc.setState(0x4411, 0x10d4, 0xeff0, 0xf3a4, 0x8615, 0x1aa5, 0x1, 0x0);
        gbc.writeMem(0x4411, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0xef);
        EXPECT(gbc.b(),  0xf3);
        EXPECT(gbc.c(),  0xa4);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0x1a);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0x10d4);
        EXPECT(gbc.pc(), 0x4413);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB BC 02DB
        gbc.setState(0xdb99, 0xe9f, 0xefe0, 0x69b6, 0xbf38, 0x3505, 0x1, 0x0);
        gbc.writeMem(0xdb99, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0xef);
        EXPECT(gbc.b(),  0x69);
        EXPECT(gbc.c(),  0xb6);
        EXPECT(gbc.d(),  0xbf);
        EXPECT(gbc.e(),  0x38);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0x5);
        EXPECT(gbc.sp(), 0xe9f);
        EXPECT(gbc.pc(), 0xdb9b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdb99), 0xcb);
        EXPECT(gbc.readMem(0xdb9a), 0xbc);
        // CB BC 02DC
        gbc.setState(0xa1bf, 0x809c, 0x41a0, 0x2c40, 0xd076, 0x9dbf, 0x1, 0x1);
        gbc.writeMem(0xa1bf, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0x76);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0xbf);
        EXPECT(gbc.sp(), 0x809c);
        EXPECT(gbc.pc(), 0xa1c1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa1bf), 0xcb);
        EXPECT(gbc.readMem(0xa1c0), 0xbc);
        // CB BC 02DD
        gbc.setState(0x515f, 0x64b8, 0x5c30, 0x30bb, 0x34ee, 0x9eaf, 0x0, 0x1);
        gbc.writeMem(0x515f, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0xbb);
        EXPECT(gbc.d(),  0x34);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0xaf);
        EXPECT(gbc.sp(), 0x64b8);
        EXPECT(gbc.pc(), 0x5161);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB BC 02DE
        gbc.setState(0xd6e6, 0x4734, 0xf770, 0xc43b, 0xa895, 0x77a2, 0x1, 0x1);
        gbc.writeMem(0xd6e6, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0x3b);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0x95);
        EXPECT(gbc.h(),  0x77);
        EXPECT(gbc.l(),  0xa2);
        EXPECT(gbc.sp(), 0x4734);
        EXPECT(gbc.pc(), 0xd6e8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd6e6), 0xcb);
        EXPECT(gbc.readMem(0xd6e7), 0xbc);
        // CB BC 02DF
        gbc.setState(0x2b3f, 0x5484, 0x140, 0x861c, 0x6a74, 0x94f6, 0x0, 0x1);
        gbc.writeMem(0x2b3f, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0x1);
        EXPECT(gbc.b(),  0x86);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0x6a);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0x14);
        EXPECT(gbc.l(),  0xf6);
        EXPECT(gbc.sp(), 0x5484);
        EXPECT(gbc.pc(), 0x2b41);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB BC 02E0
        gbc.setState(0x72ce, 0x9224, 0x97d0, 0x81b8, 0xe8b2, 0xa0ac, 0x0, 0x0);
        gbc.writeMem(0x72ce, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0x97);
        EXPECT(gbc.b(),  0x81);
        EXPECT(gbc.c(),  0xb8);
        EXPECT(gbc.d(),  0xe8);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0x20);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0x9224);
        EXPECT(gbc.pc(), 0x72d0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB BC 02E1
        gbc.setState(0xcfff, 0xc04f, 0x6cb0, 0x86b8, 0xee52, 0xe3c3, 0x0, 0x0);
        gbc.writeMem(0xcfff, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0x86);
        EXPECT(gbc.c(),  0xb8);
        EXPECT(gbc.d(),  0xee);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0x63);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0xc04f);
        EXPECT(gbc.pc(), 0xd001);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcfff), 0xcb);
        EXPECT(gbc.readMem(0xd000), 0xbc);
        // CB BC 02E2
        gbc.setState(0x99be, 0x454d, 0x4270, 0x6928, 0x1297, 0x9e08, 0x1, 0x1);
        gbc.writeMem(0x99be, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0x42);
        EXPECT(gbc.b(),  0x69);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0x97);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0x8);
        EXPECT(gbc.sp(), 0x454d);
        EXPECT(gbc.pc(), 0x99c0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x99be), 0xcb);
        EXPECT(gbc.readMem(0x99bf), 0xbc);
        // CB BC 02E3
        gbc.setState(0x4f86, 0x7b34, 0xe640, 0xbc9f, 0x4956, 0x2ac1, 0x1, 0x1);
        gbc.writeMem(0x4f86, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0xbc);
        EXPECT(gbc.c(),  0x9f);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0x56);
        EXPECT(gbc.h(),  0x2a);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0x7b34);
        EXPECT(gbc.pc(), 0x4f88);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB BC 02E4
        gbc.setState(0x8f9c, 0xb6b7, 0x2a50, 0xfe8b, 0x488, 0x212, 0x0, 0x1);
        gbc.writeMem(0x8f9c, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0x8b);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0x88);
        EXPECT(gbc.h(),  0x2);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0xb6b7);
        EXPECT(gbc.pc(), 0x8f9e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8f9c), 0xcb);
        EXPECT(gbc.readMem(0x8f9d), 0xbc);
        // CB BC 02E5
        gbc.setState(0x552e, 0xe3cc, 0xd610, 0x8a80, 0xedf, 0x372a, 0x1, 0x0);
        gbc.writeMem(0x552e, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0x80);
        EXPECT(gbc.d(),  0xe);
        EXPECT(gbc.e(),  0xdf);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0x2a);
        EXPECT(gbc.sp(), 0xe3cc);
        EXPECT(gbc.pc(), 0x5530);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB BC 02E6
        gbc.setState(0x2e51, 0x4fbf, 0x63c0, 0xb607, 0xa965, 0x41f7, 0x0, 0x1);
        gbc.writeMem(0x2e51, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0xa9);
        EXPECT(gbc.e(),  0x65);
        EXPECT(gbc.h(),  0x41);
        EXPECT(gbc.l(),  0xf7);
        EXPECT(gbc.sp(), 0x4fbf);
        EXPECT(gbc.pc(), 0x2e53);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB BC 02E7
        gbc.setState(0x21a9, 0x568, 0x28f0, 0xa8c0, 0x9b51, 0x97cb, 0x1, 0x1);
        gbc.writeMem(0x21a9, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0xa8);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0x51);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0x568);
        EXPECT(gbc.pc(), 0x21ab);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB BC 02E8
        gbc.setState(0x9f6c, 0x5454, 0x1030, 0x1523, 0x92e, 0xfb24, 0x0, 0x0);
        gbc.writeMem(0x9f6c, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0x10);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0x9);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0x7b);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0x5454);
        EXPECT(gbc.pc(), 0x9f6e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9f6c), 0xcb);
        EXPECT(gbc.readMem(0x9f6d), 0xbc);
        // CB BC 02E9
        gbc.setState(0xe589, 0x78b4, 0xe080, 0x13e7, 0x1766, 0x5999, 0x0, 0x0);
        gbc.writeMem(0xe589, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0xe0);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0xe7);
        EXPECT(gbc.d(),  0x17);
        EXPECT(gbc.e(),  0x66);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0x99);
        EXPECT(gbc.sp(), 0x78b4);
        EXPECT(gbc.pc(), 0xe58b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe589), 0xcb);
        EXPECT(gbc.readMem(0xe58a), 0xbc);
        // CB BC 02EA
        gbc.setState(0x63e9, 0x7002, 0x7000, 0x7eca, 0x9643, 0x9914, 0x1, 0x1);
        gbc.writeMem(0x63e9, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0x70);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0x19);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0x7002);
        EXPECT(gbc.pc(), 0x63eb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB BC 02EB
        gbc.setState(0x4c91, 0x3951, 0xe450, 0x269f, 0x56fa, 0x233b, 0x0, 0x1);
        gbc.writeMem(0x4c91, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0xe4);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0x9f);
        EXPECT(gbc.d(),  0x56);
        EXPECT(gbc.e(),  0xfa);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0x3951);
        EXPECT(gbc.pc(), 0x4c93);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB BC 02ED
        gbc.setState(0x90d4, 0x6970, 0x3640, 0x14e5, 0xc9f5, 0x17f0, 0x1, 0x1);
        gbc.writeMem(0x90d4, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0x36);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0xc9);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0x6970);
        EXPECT(gbc.pc(), 0x90d6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x90d4), 0xcb);
        EXPECT(gbc.readMem(0x90d5), 0xbc);
        // CB BC 02EE
        gbc.setState(0xe885, 0x7d08, 0x4a0, 0x92, 0xce4c, 0xd861, 0x0, 0x1);
        gbc.writeMem(0xe885, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0x4);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0xce);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0x58);
        EXPECT(gbc.l(),  0x61);
        EXPECT(gbc.sp(), 0x7d08);
        EXPECT(gbc.pc(), 0xe887);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe885), 0xcb);
        EXPECT(gbc.readMem(0xe886), 0xbc);
        // CB BC 02EF
        gbc.setState(0x33e7, 0xb253, 0x7910, 0xd91f, 0x2724, 0x12ed, 0x0, 0x0);
        gbc.writeMem(0x33e7, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0x1f);
        EXPECT(gbc.d(),  0x27);
        EXPECT(gbc.e(),  0x24);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0xb253);
        EXPECT(gbc.pc(), 0x33e9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB BC 02F0
        gbc.setState(0x9479, 0x43e, 0x96f0, 0xe338, 0x4a3, 0x501a, 0x1, 0x0);
        gbc.writeMem(0x9479, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0x96);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0x38);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0xa3);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0x43e);
        EXPECT(gbc.pc(), 0x947b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9479), 0xcb);
        EXPECT(gbc.readMem(0x947a), 0xbc);
        // CB BC 02F2
        gbc.setState(0x6180, 0x245d, 0xdaf0, 0xf7bf, 0xe72a, 0x1806, 0x1, 0x1);
        gbc.writeMem(0x6180, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0xbf);
        EXPECT(gbc.d(),  0xe7);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0x18);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0x245d);
        EXPECT(gbc.pc(), 0x6182);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB BC 02F3
        gbc.setState(0xa2e6, 0x16cc, 0xf390, 0x8b78, 0xc00b, 0xb599, 0x1, 0x0);
        gbc.writeMem(0xa2e6, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0xb);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0x99);
        EXPECT(gbc.sp(), 0x16cc);
        EXPECT(gbc.pc(), 0xa2e8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa2e6), 0xcb);
        EXPECT(gbc.readMem(0xa2e7), 0xbc);
        // CB BC 02F4
        gbc.setState(0x3fea, 0x5884, 0xa3d0, 0x4ecd, 0x2bdc, 0x4db7, 0x1, 0x1);
        gbc.writeMem(0x3fea, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0xa3);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0xcd);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0x4d);
        EXPECT(gbc.l(),  0xb7);
        EXPECT(gbc.sp(), 0x5884);
        EXPECT(gbc.pc(), 0x3fec);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB BC 02F5
        gbc.setState(0xad93, 0xe264, 0x1210, 0x2dda, 0xdb8f, 0x7b53, 0x1, 0x0);
        gbc.writeMem(0xad93, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0x12);
        EXPECT(gbc.b(),  0x2d);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0x8f);
        EXPECT(gbc.h(),  0x7b);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0xe264);
        EXPECT(gbc.pc(), 0xad95);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xad93), 0xcb);
        EXPECT(gbc.readMem(0xad94), 0xbc);
        // CB BC 02F6
        gbc.setState(0x2536, 0x598a, 0xd260, 0x734c, 0xaa6a, 0xe71c, 0x1, 0x1);
        gbc.writeMem(0x2536, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0x6a);
        EXPECT(gbc.h(),  0x67);
        EXPECT(gbc.l(),  0x1c);
        EXPECT(gbc.sp(), 0x598a);
        EXPECT(gbc.pc(), 0x2538);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB BC 02F7
        gbc.setState(0x940e, 0xfb5a, 0xeb40, 0xb710, 0x5867, 0xc3cf, 0x0, 0x1);
        gbc.writeMem(0x940e, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0x67);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0xcf);
        EXPECT(gbc.sp(), 0xfb5a);
        EXPECT(gbc.pc(), 0x9410);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x940e), 0xcb);
        EXPECT(gbc.readMem(0x940f), 0xbc);
        // CB BC 02F8
        gbc.setState(0x9a8a, 0xcbc3, 0xb4c0, 0x8eda, 0x8cf8, 0x8c33, 0x1, 0x0);
        gbc.writeMem(0x9a8a, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0xb4);
        EXPECT(gbc.b(),  0x8e);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0xf8);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0xcbc3);
        EXPECT(gbc.pc(), 0x9a8c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9a8a), 0xcb);
        EXPECT(gbc.readMem(0x9a8b), 0xbc);
        // CB BC 02F9
        gbc.setState(0x5534, 0x8a1, 0x8e80, 0xb2a7, 0x2f9c, 0x1bb3, 0x0, 0x1);
        gbc.writeMem(0x5534, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0xa7);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0x9c);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0xb3);
        EXPECT(gbc.sp(), 0x8a1);
        EXPECT(gbc.pc(), 0x5536);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB BC 02FA
        gbc.setState(0x7c4e, 0x21d4, 0x3390, 0x7361, 0x7404, 0x9695, 0x1, 0x1);
        gbc.writeMem(0x7c4e, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0x61);
        EXPECT(gbc.d(),  0x74);
        EXPECT(gbc.e(),  0x4);
        EXPECT(gbc.h(),  0x16);
        EXPECT(gbc.l(),  0x95);
        EXPECT(gbc.sp(), 0x21d4);
        EXPECT(gbc.pc(), 0x7c50);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB BC 02FB
        gbc.setState(0xbc7c, 0x62e3, 0x64a0, 0xb2fe, 0x9f11, 0xd44f, 0x0, 0x1);
        gbc.writeMem(0xbc7c, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0x54);
        EXPECT(gbc.l(),  0x4f);
        EXPECT(gbc.sp(), 0x62e3);
        EXPECT(gbc.pc(), 0xbc7e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbc7c), 0xcb);
        EXPECT(gbc.readMem(0xbc7d), 0xbc);
        // CB BC 02FC
        gbc.setState(0x37c1, 0x6118, 0x6870, 0x1c63, 0x26e, 0x1582, 0x0, 0x0);
        gbc.writeMem(0x37c1, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0x68);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0x63);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0x6e);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0x6118);
        EXPECT(gbc.pc(), 0x37c3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB BC 02FD
        gbc.setState(0x2eac, 0x25a0, 0xf170, 0x2fdb, 0xab3, 0x6a91, 0x1, 0x1);
        gbc.writeMem(0x2eac, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0xf1);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0xb3);
        EXPECT(gbc.h(),  0x6a);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0x25a0);
        EXPECT(gbc.pc(), 0x2eae);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB BC 02FE
        gbc.setState(0xb7ef, 0x7579, 0x7580, 0xa694, 0xfbf1, 0x75d5, 0x1, 0x1);
        gbc.writeMem(0xb7ef, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0xa6);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0xfb);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0xd5);
        EXPECT(gbc.sp(), 0x7579);
        EXPECT(gbc.pc(), 0xb7f1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb7ef), 0xcb);
        EXPECT(gbc.readMem(0xb7f0), 0xbc);
        // CB BC 0300
        gbc.setState(0xd5ee, 0xbdea, 0x2f00, 0x13ed, 0x6250, 0xbb63, 0x0, 0x1);
        gbc.writeMem(0xd5ee, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0x2f);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0xed);
        EXPECT(gbc.d(),  0x62);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0x3b);
        EXPECT(gbc.l(),  0x63);
        EXPECT(gbc.sp(), 0xbdea);
        EXPECT(gbc.pc(), 0xd5f0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd5ee), 0xcb);
        EXPECT(gbc.readMem(0xd5ef), 0xbc);
        // CB BC 0301
        gbc.setState(0x3d28, 0xb648, 0x55a0, 0x93c5, 0x46af, 0xc172, 0x0, 0x0);
        gbc.writeMem(0x3d28, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0x93);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0x46);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0x41);
        EXPECT(gbc.l(),  0x72);
        EXPECT(gbc.sp(), 0xb648);
        EXPECT(gbc.pc(), 0x3d2a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB BC 0303
        gbc.setState(0x8258, 0x2165, 0xb670, 0x3a64, 0x3a6e, 0x45e2, 0x1, 0x1);
        gbc.writeMem(0x8258, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0x6e);
        EXPECT(gbc.h(),  0x45);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0x2165);
        EXPECT(gbc.pc(), 0x825a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8258), 0xcb);
        EXPECT(gbc.readMem(0x8259), 0xbc);
        // CB BC 0304
        gbc.setState(0x785a, 0xe5c0, 0x7ed0, 0xce6a, 0x894e, 0xa466, 0x0, 0x0);
        gbc.writeMem(0x785a, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0xce);
        EXPECT(gbc.c(),  0x6a);
        EXPECT(gbc.d(),  0x89);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0xe5c0);
        EXPECT(gbc.pc(), 0x785c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB BC 0305
        gbc.setState(0xbc66, 0x572c, 0x57c0, 0x4108, 0xb2a2, 0xbe9c, 0x0, 0x0);
        gbc.writeMem(0xbc66, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0x57);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0xa2);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0x9c);
        EXPECT(gbc.sp(), 0x572c);
        EXPECT(gbc.pc(), 0xbc68);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbc66), 0xcb);
        EXPECT(gbc.readMem(0xbc67), 0xbc);
        // CB BC 0306
        gbc.setState(0x41ac, 0x4c0b, 0xdda0, 0xdb35, 0x42ca, 0x4bf9, 0x1, 0x0);
        gbc.writeMem(0x41ac, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0xdd);
        EXPECT(gbc.b(),  0xdb);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0xca);
        EXPECT(gbc.h(),  0x4b);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0x4c0b);
        EXPECT(gbc.pc(), 0x41ae);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB BC 0307
        gbc.setState(0xc6a7, 0x9ffd, 0x3770, 0x873d, 0x710, 0x4ed1, 0x0, 0x1);
        gbc.writeMem(0xc6a7, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0x3d);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0x4e);
        EXPECT(gbc.l(),  0xd1);
        EXPECT(gbc.sp(), 0x9ffd);
        EXPECT(gbc.pc(), 0xc6a9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc6a7), 0xcb);
        EXPECT(gbc.readMem(0xc6a8), 0xbc);
        // CB BC 0308
        gbc.setState(0x986, 0xbeab, 0xe350, 0xa7fb, 0x7982, 0x5938, 0x0, 0x0);
        gbc.writeMem(0x986, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0xa7);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0x79);
        EXPECT(gbc.e(),  0x82);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0xbeab);
        EXPECT(gbc.pc(), 0x988);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB BC 0309
        gbc.setState(0xcb60, 0xc8ea, 0xf9e0, 0x4404, 0x49f, 0x5f2a, 0x0, 0x0);
        gbc.writeMem(0xcb60, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0xf9);
        EXPECT(gbc.b(),  0x44);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0x9f);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0x2a);
        EXPECT(gbc.sp(), 0xc8ea);
        EXPECT(gbc.pc(), 0xcb62);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcb60), 0xcb);
        EXPECT(gbc.readMem(0xcb61), 0xbc);
        // CB BC 030A
        gbc.setState(0x5cf0, 0xa35d, 0xec50, 0xe3e6, 0x8072, 0x92b4, 0x0, 0x0);
        gbc.writeMem(0x5cf0, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0xa35d);
        EXPECT(gbc.pc(), 0x5cf2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB BC 030B
        gbc.setState(0xd7b7, 0x18a2, 0x9b60, 0x6544, 0xe886, 0x3e1d, 0x1, 0x1);
        gbc.writeMem(0xd7b7, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0x9b);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0xe8);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0x18a2);
        EXPECT(gbc.pc(), 0xd7b9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd7b7), 0xcb);
        EXPECT(gbc.readMem(0xd7b8), 0xbc);
        // CB BC 030C
        gbc.setState(0xd43e, 0x23d5, 0xe770, 0x1f97, 0xbeab, 0x8a30, 0x1, 0x0);
        gbc.writeMem(0xd43e, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0xe7);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0x97);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0xa);
        EXPECT(gbc.l(),  0x30);
        EXPECT(gbc.sp(), 0x23d5);
        EXPECT(gbc.pc(), 0xd440);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd43e), 0xcb);
        EXPECT(gbc.readMem(0xd43f), 0xbc);
        // CB BC 030D
        gbc.setState(0x31de, 0xbecc, 0xe680, 0xa987, 0x9766, 0x8758, 0x1, 0x1);
        gbc.writeMem(0x31de, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0xa9);
        EXPECT(gbc.c(),  0x87);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0x66);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0xbecc);
        EXPECT(gbc.pc(), 0x31e0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB BC 030E
        gbc.setState(0x9c16, 0xd80d, 0x87a0, 0x5543, 0xc4a4, 0xce6e, 0x0, 0x0);
        gbc.writeMem(0x9c16, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0x87);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0x43);
        EXPECT(gbc.d(),  0xc4);
        EXPECT(gbc.e(),  0xa4);
        EXPECT(gbc.h(),  0x4e);
        EXPECT(gbc.l(),  0x6e);
        EXPECT(gbc.sp(), 0xd80d);
        EXPECT(gbc.pc(), 0x9c18);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9c16), 0xcb);
        EXPECT(gbc.readMem(0x9c17), 0xbc);
        // CB BC 030F
        gbc.setState(0xefd4, 0x5b17, 0xea90, 0xff27, 0x752d, 0xda6d, 0x1, 0x1);
        gbc.writeMem(0xefd4, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0xff);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0x75);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0x5a);
        EXPECT(gbc.l(),  0x6d);
        EXPECT(gbc.sp(), 0x5b17);
        EXPECT(gbc.pc(), 0xefd6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xefd4), 0xcb);
        EXPECT(gbc.readMem(0xefd5), 0xbc);
        // CB BC 0310
        gbc.setState(0x14e8, 0xbe5d, 0x37c0, 0x326e, 0x84e9, 0xb094, 0x1, 0x1);
        gbc.writeMem(0x14e8, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0x32);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0xe9);
        EXPECT(gbc.h(),  0x30);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0xbe5d);
        EXPECT(gbc.pc(), 0x14ea);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB BC 0311
        gbc.setState(0x4bca, 0x33f1, 0x1f90, 0x5356, 0xff1b, 0x1aab, 0x1, 0x1);
        gbc.writeMem(0x4bca, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0xff);
        EXPECT(gbc.e(),  0x1b);
        EXPECT(gbc.h(),  0x1a);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0x33f1);
        EXPECT(gbc.pc(), 0x4bcc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB BC 0312
        gbc.setState(0x3bf4, 0xabf, 0x3900, 0xf7bb, 0x5ae2, 0xb4cd, 0x0, 0x1);
        gbc.writeMem(0x3bf4, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0xbb);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0xe2);
        EXPECT(gbc.h(),  0x34);
        EXPECT(gbc.l(),  0xcd);
        EXPECT(gbc.sp(), 0xabf);
        EXPECT(gbc.pc(), 0x3bf6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB BC 0313
        gbc.setState(0xbf21, 0xc382, 0xff50, 0xa341, 0x60e, 0xb03c, 0x1, 0x1);
        gbc.writeMem(0xbf21, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0xa3);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0x6);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0x30);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0xc382);
        EXPECT(gbc.pc(), 0xbf23);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbf21), 0xcb);
        EXPECT(gbc.readMem(0xbf22), 0xbc);
        // CB BC 0314
        gbc.setState(0x4f92, 0xecc3, 0xd910, 0x6601, 0xf131, 0x9155, 0x1, 0x0);
        gbc.writeMem(0x4f92, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0xd9);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0x31);
        EXPECT(gbc.h(),  0x11);
        EXPECT(gbc.l(),  0x55);
        EXPECT(gbc.sp(), 0xecc3);
        EXPECT(gbc.pc(), 0x4f94);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB BC 0315
        gbc.setState(0x7436, 0x5044, 0xda0, 0x8c1a, 0x7c25, 0xfd7d, 0x1, 0x0);
        gbc.writeMem(0x7436, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0xd);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0x7c);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0x5044);
        EXPECT(gbc.pc(), 0x7438);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB BC 0316
        gbc.setState(0x403d, 0xf95d, 0x2150, 0x6042, 0xeb6, 0xe4ac, 0x1, 0x1);
        gbc.writeMem(0x403d, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0xe);
        EXPECT(gbc.e(),  0xb6);
        EXPECT(gbc.h(),  0x64);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0xf95d);
        EXPECT(gbc.pc(), 0x403f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB BC 0318
        gbc.setState(0xcbfb, 0x8a64, 0xd3e0, 0xb5ee, 0x6d9c, 0x2649, 0x1, 0x0);
        gbc.writeMem(0xcbfb, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0xd3);
        EXPECT(gbc.b(),  0xb5);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0x6d);
        EXPECT(gbc.e(),  0x9c);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0x8a64);
        EXPECT(gbc.pc(), 0xcbfd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcbfb), 0xcb);
        EXPECT(gbc.readMem(0xcbfc), 0xbc);
        // CB BC 0319
        gbc.setState(0x35f9, 0x972b, 0x60f0, 0x2407, 0xb985, 0xcf99, 0x0, 0x0);
        gbc.writeMem(0x35f9, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0xb9);
        EXPECT(gbc.e(),  0x85);
        EXPECT(gbc.h(),  0x4f);
        EXPECT(gbc.l(),  0x99);
        EXPECT(gbc.sp(), 0x972b);
        EXPECT(gbc.pc(), 0x35fb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB BC 031A
        gbc.setState(0x7698, 0x3dae, 0x5050, 0x455c, 0xd021, 0xbdc9, 0x0, 0x0);
        gbc.writeMem(0x7698, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0x3d);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0x3dae);
        EXPECT(gbc.pc(), 0x769a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB BC 031C
        gbc.setState(0x209f, 0x8192, 0x680, 0x7c2b, 0xa970, 0x3aa2, 0x1, 0x1);
        gbc.writeMem(0x209f, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0x7c);
        EXPECT(gbc.c(),  0x2b);
        EXPECT(gbc.d(),  0xa9);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0x3a);
        EXPECT(gbc.l(),  0xa2);
        EXPECT(gbc.sp(), 0x8192);
        EXPECT(gbc.pc(), 0x20a1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB BC 031D
        gbc.setState(0x74f3, 0x8288, 0xcd90, 0x8806, 0x5db3, 0xa69c, 0x1, 0x0);
        gbc.writeMem(0x74f3, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0x5d);
        EXPECT(gbc.e(),  0xb3);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0x9c);
        EXPECT(gbc.sp(), 0x8288);
        EXPECT(gbc.pc(), 0x74f5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB BC 031E
        gbc.setState(0x4194, 0x2d3e, 0xd190, 0xb4b3, 0x4882, 0x3bf8, 0x1, 0x0);
        gbc.writeMem(0x4194, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0xd1);
        EXPECT(gbc.b(),  0xb4);
        EXPECT(gbc.c(),  0xb3);
        EXPECT(gbc.d(),  0x48);
        EXPECT(gbc.e(),  0x82);
        EXPECT(gbc.h(),  0x3b);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0x2d3e);
        EXPECT(gbc.pc(), 0x4196);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB BC 0320
        gbc.setState(0xe888, 0x48b6, 0xec70, 0x7ca5, 0x34a2, 0x311d, 0x1, 0x0);
        gbc.writeMem(0xe888, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0x7c);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0x34);
        EXPECT(gbc.e(),  0xa2);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0x48b6);
        EXPECT(gbc.pc(), 0xe88a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe888), 0xcb);
        EXPECT(gbc.readMem(0xe889), 0xbc);
        // CB BC 0321
        gbc.setState(0xd6a, 0x711f, 0xf590, 0x6dab, 0xf8eb, 0x2eeb, 0x0, 0x0);
        gbc.writeMem(0xd6a, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0xf5);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0x2e);
        EXPECT(gbc.l(),  0xeb);
        EXPECT(gbc.sp(), 0x711f);
        EXPECT(gbc.pc(), 0xd6c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB BC 0322
        gbc.setState(0x5630, 0x165f, 0xd860, 0x79db, 0x4a98, 0x7181, 0x1, 0x0);
        gbc.writeMem(0x5630, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0xd8);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0x4a);
        EXPECT(gbc.e(),  0x98);
        EXPECT(gbc.h(),  0x71);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0x165f);
        EXPECT(gbc.pc(), 0x5632);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB BC 0323
        gbc.setState(0x588f, 0x9454, 0x1990, 0xab3b, 0x33, 0x1b26, 0x1, 0x1);
        gbc.writeMem(0x588f, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0x19);
        EXPECT(gbc.b(),  0xab);
        EXPECT(gbc.c(),  0x3b);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0x33);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0x9454);
        EXPECT(gbc.pc(), 0x5891);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB BC 0324
        gbc.setState(0xc410, 0x98b0, 0xd1a0, 0x24ac, 0x6c2f, 0xfe44, 0x1, 0x1);
        gbc.writeMem(0xc410, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0xd1);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0x6c);
        EXPECT(gbc.e(),  0x2f);
        EXPECT(gbc.h(),  0x7e);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0x98b0);
        EXPECT(gbc.pc(), 0xc412);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc410), 0xcb);
        EXPECT(gbc.readMem(0xc411), 0xbc);
        // CB BC 0326
        gbc.setState(0x3a25, 0x192a, 0xef40, 0xd146, 0x4b90, 0x91e6, 0x1, 0x1);
        gbc.writeMem(0x3a25, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0xef);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0x11);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0x192a);
        EXPECT(gbc.pc(), 0x3a27);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB BC 0327
        gbc.setState(0x65a5, 0xd85f, 0xb120, 0x2f05, 0x1c2e, 0xfb3e, 0x1, 0x0);
        gbc.writeMem(0x65a5, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0x7b);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0xd85f);
        EXPECT(gbc.pc(), 0x65a7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB BC 0328
        gbc.setState(0x758f, 0xe16e, 0x8b30, 0x8d2f, 0xebb1, 0xe1b3, 0x1, 0x0);
        gbc.writeMem(0x758f, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0x8d);
        EXPECT(gbc.c(),  0x2f);
        EXPECT(gbc.d(),  0xeb);
        EXPECT(gbc.e(),  0xb1);
        EXPECT(gbc.h(),  0x61);
        EXPECT(gbc.l(),  0xb3);
        EXPECT(gbc.sp(), 0xe16e);
        EXPECT(gbc.pc(), 0x7591);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB BC 0329
        gbc.setState(0x7225, 0x179b, 0x1d30, 0x9931, 0x11b9, 0x590c, 0x0, 0x0);
        gbc.writeMem(0x7225, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0x99);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0x179b);
        EXPECT(gbc.pc(), 0x7227);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB BC 032A
        gbc.setState(0x939b, 0x53c6, 0x9e60, 0xf29c, 0xfaa5, 0xd0c7, 0x0, 0x1);
        gbc.writeMem(0x939b, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0xf2);
        EXPECT(gbc.c(),  0x9c);
        EXPECT(gbc.d(),  0xfa);
        EXPECT(gbc.e(),  0xa5);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0xc7);
        EXPECT(gbc.sp(), 0x53c6);
        EXPECT(gbc.pc(), 0x939d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x939b), 0xcb);
        EXPECT(gbc.readMem(0x939c), 0xbc);
        // CB BC 032B
        gbc.setState(0x40ed, 0x647f, 0x4b90, 0xab82, 0xfc03, 0xd957, 0x1, 0x0);
        gbc.writeMem(0x40ed, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0xab);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0x3);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0x57);
        EXPECT(gbc.sp(), 0x647f);
        EXPECT(gbc.pc(), 0x40ef);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB BC 032C
        gbc.setState(0x844c, 0x3d6b, 0x5160, 0xc6cb, 0x475c, 0x376b, 0x0, 0x1);
        gbc.writeMem(0x844c, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0xc6);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0x47);
        EXPECT(gbc.e(),  0x5c);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0x6b);
        EXPECT(gbc.sp(), 0x3d6b);
        EXPECT(gbc.pc(), 0x844e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x844c), 0xcb);
        EXPECT(gbc.readMem(0x844d), 0xbc);
        // CB BC 032D
        gbc.setState(0x99dd, 0xaab5, 0x74d0, 0xff74, 0x1083, 0x9969, 0x0, 0x0);
        gbc.writeMem(0x99dd, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0x74);
        EXPECT(gbc.b(),  0xff);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0x10);
        EXPECT(gbc.e(),  0x83);
        EXPECT(gbc.h(),  0x19);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0xaab5);
        EXPECT(gbc.pc(), 0x99df);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x99dd), 0xcb);
        EXPECT(gbc.readMem(0x99de), 0xbc);
        // CB BC 032E
        gbc.setState(0x1ef0, 0xdea4, 0xd460, 0x8265, 0x81bb, 0xee87, 0x0, 0x0);
        gbc.writeMem(0x1ef0, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0x65);
        EXPECT(gbc.d(),  0x81);
        EXPECT(gbc.e(),  0xbb);
        EXPECT(gbc.h(),  0x6e);
        EXPECT(gbc.l(),  0x87);
        EXPECT(gbc.sp(), 0xdea4);
        EXPECT(gbc.pc(), 0x1ef2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB BC 032F
        gbc.setState(0x8058, 0x2e98, 0xe340, 0xf91a, 0xdec4, 0x8848, 0x1, 0x0);
        gbc.writeMem(0x8058, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0x48);
        EXPECT(gbc.sp(), 0x2e98);
        EXPECT(gbc.pc(), 0x805a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8058), 0xcb);
        EXPECT(gbc.readMem(0x8059), 0xbc);
        // CB BC 0330
        gbc.setState(0xefe6, 0x7ac2, 0x2e50, 0xfa57, 0xe7e9, 0x9285, 0x1, 0x0);
        gbc.writeMem(0xefe6, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0xe7);
        EXPECT(gbc.e(),  0xe9);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0x85);
        EXPECT(gbc.sp(), 0x7ac2);
        EXPECT(gbc.pc(), 0xefe8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xefe6), 0xcb);
        EXPECT(gbc.readMem(0xefe7), 0xbc);
        // CB BC 0331
        gbc.setState(0xb72d, 0xfbe3, 0x19b0, 0x8902, 0x63cc, 0x2f33, 0x1, 0x1);
        gbc.writeMem(0xb72d, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0x19);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0x63);
        EXPECT(gbc.e(),  0xcc);
        EXPECT(gbc.h(),  0x2f);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0xfbe3);
        EXPECT(gbc.pc(), 0xb72f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb72d), 0xcb);
        EXPECT(gbc.readMem(0xb72e), 0xbc);
        // CB BC 0332
        gbc.setState(0x5542, 0x2fee, 0x53b0, 0xf8db, 0xb815, 0xef14, 0x1, 0x0);
        gbc.writeMem(0x5542, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0x53);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0xb8);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0x6f);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0x2fee);
        EXPECT(gbc.pc(), 0x5544);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB BC 0333
        gbc.setState(0x7bdc, 0xe9b3, 0x1e50, 0x2fc9, 0x39d0, 0x3d57, 0x0, 0x0);
        gbc.writeMem(0x7bdc, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0xc9);
        EXPECT(gbc.d(),  0x39);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0x3d);
        EXPECT(gbc.l(),  0x57);
        EXPECT(gbc.sp(), 0xe9b3);
        EXPECT(gbc.pc(), 0x7bde);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB BC 0334
        gbc.setState(0x59f2, 0x6c2e, 0x3080, 0x76de, 0x42d8, 0x51e, 0x1, 0x1);
        gbc.writeMem(0x59f2, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0x6c2e);
        EXPECT(gbc.pc(), 0x59f4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB BC 0335
        gbc.setState(0xd8d2, 0x879d, 0x9a10, 0xa034, 0x3c31, 0x5f28, 0x1, 0x1);
        gbc.writeMem(0xd8d2, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0x9a);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0x31);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0x879d);
        EXPECT(gbc.pc(), 0xd8d4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd8d2), 0xcb);
        EXPECT(gbc.readMem(0xd8d3), 0xbc);
        // CB BC 0336
        gbc.setState(0x2f04, 0x6432, 0xbe00, 0x15c8, 0x1a1b, 0x69f3, 0x0, 0x1);
        gbc.writeMem(0x2f04, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0xc8);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0x1b);
        EXPECT(gbc.h(),  0x69);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0x6432);
        EXPECT(gbc.pc(), 0x2f06);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB BC 0337
        gbc.setState(0x7f75, 0xd6dd, 0x20c0, 0x4456, 0xdb83, 0x813, 0x1, 0x0);
        gbc.writeMem(0x7f75, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0x20);
        EXPECT(gbc.b(),  0x44);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0x83);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0xd6dd);
        EXPECT(gbc.pc(), 0x7f77);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB BC 0338
        gbc.setState(0x3260, 0x4cca, 0xbc20, 0x6296, 0x38d5, 0x591c, 0x1, 0x0);
        gbc.writeMem(0x3260, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0x62);
        EXPECT(gbc.c(),  0x96);
        EXPECT(gbc.d(),  0x38);
        EXPECT(gbc.e(),  0xd5);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0x1c);
        EXPECT(gbc.sp(), 0x4cca);
        EXPECT(gbc.pc(), 0x3262);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB BC 0339
        gbc.setState(0x58aa, 0x5faf, 0xc270, 0xf708, 0x29fe, 0x9c70, 0x0, 0x1);
        gbc.writeMem(0x58aa, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0xc2);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0xfe);
        EXPECT(gbc.h(),  0x1c);
        EXPECT(gbc.l(),  0x70);
        EXPECT(gbc.sp(), 0x5faf);
        EXPECT(gbc.pc(), 0x58ac);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB BC 033A
        gbc.setState(0x2028, 0xdf6c, 0x4950, 0x80d1, 0x488f, 0xd9c4, 0x1, 0x0);
        gbc.writeMem(0x2028, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0x80);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0x48);
        EXPECT(gbc.e(),  0x8f);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0xc4);
        EXPECT(gbc.sp(), 0xdf6c);
        EXPECT(gbc.pc(), 0x202a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB BC 033C
        gbc.setState(0x5bdf, 0x4895, 0x9d70, 0x60b5, 0x2e7e, 0x71de, 0x0, 0x1);
        gbc.writeMem(0x5bdf, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0x9d);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0x2e);
        EXPECT(gbc.e(),  0x7e);
        EXPECT(gbc.h(),  0x71);
        EXPECT(gbc.l(),  0xde);
        EXPECT(gbc.sp(), 0x4895);
        EXPECT(gbc.pc(), 0x5be1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB BC 033D
        gbc.setState(0xb5d7, 0x141, 0x3910, 0x486a, 0x8319, 0xe5f2, 0x0, 0x0);
        gbc.writeMem(0xb5d7, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0x6a);
        EXPECT(gbc.d(),  0x83);
        EXPECT(gbc.e(),  0x19);
        EXPECT(gbc.h(),  0x65);
        EXPECT(gbc.l(),  0xf2);
        EXPECT(gbc.sp(), 0x141);
        EXPECT(gbc.pc(), 0xb5d9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb5d7), 0xcb);
        EXPECT(gbc.readMem(0xb5d8), 0xbc);
        // CB BC 033E
        gbc.setState(0x1a39, 0xf695, 0xc4f0, 0xdcc7, 0x4c5a, 0x5d47, 0x0, 0x1);
        gbc.writeMem(0x1a39, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0xc4);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0xc7);
        EXPECT(gbc.d(),  0x4c);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0x5d);
        EXPECT(gbc.l(),  0x47);
        EXPECT(gbc.sp(), 0xf695);
        EXPECT(gbc.pc(), 0x1a3b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB BC 033F
        gbc.setState(0xee92, 0x514b, 0xec70, 0x1d41, 0x9f9d, 0x9610, 0x1, 0x0);
        gbc.writeMem(0xee92, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0x9d);
        EXPECT(gbc.h(),  0x16);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0x514b);
        EXPECT(gbc.pc(), 0xee94);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xee92), 0xcb);
        EXPECT(gbc.readMem(0xee93), 0xbc);
        // CB BC 0340
        gbc.setState(0x1965, 0xd331, 0x1a0, 0xd21f, 0xbbd5, 0x7b87, 0x0, 0x1);
        gbc.writeMem(0x1965, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0x1);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0x1f);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0xd5);
        EXPECT(gbc.h(),  0x7b);
        EXPECT(gbc.l(),  0x87);
        EXPECT(gbc.sp(), 0xd331);
        EXPECT(gbc.pc(), 0x1967);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB BC 0341
        gbc.setState(0x63c6, 0xad3c, 0xbde0, 0xeacb, 0x5d4, 0xfb8a, 0x1, 0x0);
        gbc.writeMem(0x63c6, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0xbd);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0x5);
        EXPECT(gbc.e(),  0xd4);
        EXPECT(gbc.h(),  0x7b);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0xad3c);
        EXPECT(gbc.pc(), 0x63c8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB BC 0342
        gbc.setState(0xa7aa, 0x24da, 0xe980, 0xb2ab, 0xe53f, 0x1a62, 0x0, 0x0);
        gbc.writeMem(0xa7aa, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0xe9);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0x1a);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0x24da);
        EXPECT(gbc.pc(), 0xa7ac);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa7aa), 0xcb);
        EXPECT(gbc.readMem(0xa7ab), 0xbc);
        // CB BC 0343
        gbc.setState(0x7a67, 0xc35f, 0x90b0, 0xb673, 0x966e, 0x8dd5, 0x1, 0x0);
        gbc.writeMem(0x7a67, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0x90);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0x6e);
        EXPECT(gbc.h(),  0xd);
        EXPECT(gbc.l(),  0xd5);
        EXPECT(gbc.sp(), 0xc35f);
        EXPECT(gbc.pc(), 0x7a69);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB BC 0344
        gbc.setState(0xac5a, 0x7655, 0x4540, 0x4fd, 0x9bd0, 0x46ac, 0x0, 0x0);
        gbc.writeMem(0xac5a, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0xfd);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0x46);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0x7655);
        EXPECT(gbc.pc(), 0xac5c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xac5a), 0xcb);
        EXPECT(gbc.readMem(0xac5b), 0xbc);
        // CB BC 0346
        gbc.setState(0x6bee, 0x3ace, 0x44e0, 0xc58d, 0xb6d7, 0xf96, 0x0, 0x0);
        gbc.writeMem(0x6bee, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0x8d);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0xd7);
        EXPECT(gbc.h(),  0xf);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0x3ace);
        EXPECT(gbc.pc(), 0x6bf0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB BC 0347
        gbc.setState(0xb580, 0xf79f, 0x8560, 0xe963, 0x83b0, 0xfa89, 0x0, 0x1);
        gbc.writeMem(0xb580, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0x85);
        EXPECT(gbc.b(),  0xe9);
        EXPECT(gbc.c(),  0x63);
        EXPECT(gbc.d(),  0x83);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0x7a);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0xf79f);
        EXPECT(gbc.pc(), 0xb582);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb580), 0xcb);
        EXPECT(gbc.readMem(0xb581), 0xbc);
        // CB BC 0348
        gbc.setState(0xa02d, 0x4d16, 0xcfd0, 0xbe7c, 0xb2f9, 0x8189, 0x1, 0x1);
        gbc.writeMem(0xa02d, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0xcf);
        EXPECT(gbc.b(),  0xbe);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0xf9);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0x4d16);
        EXPECT(gbc.pc(), 0xa02f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa02d), 0xcb);
        EXPECT(gbc.readMem(0xa02e), 0xbc);
        // CB BC 0349
        gbc.setState(0x7dc0, 0xf6cf, 0xc3e0, 0x2497, 0x22b1, 0xb642, 0x1, 0x1);
        gbc.writeMem(0x7dc0, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0xc3);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0x97);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0xb1);
        EXPECT(gbc.h(),  0x36);
        EXPECT(gbc.l(),  0x42);
        EXPECT(gbc.sp(), 0xf6cf);
        EXPECT(gbc.pc(), 0x7dc2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB BC 034A
        gbc.setState(0x1950, 0xfff4, 0x2210, 0x1aed, 0x8ece, 0xb002, 0x0, 0x0);
        gbc.writeMem(0x1950, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0x1a);
        EXPECT(gbc.c(),  0xed);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0xce);
        EXPECT(gbc.h(),  0x30);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0xfff4);
        EXPECT(gbc.pc(), 0x1952);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB BC 034B
        gbc.setState(0xed50, 0x7b3c, 0x1610, 0xcdfc, 0x9e4f, 0x42c1, 0x0, 0x0);
        gbc.writeMem(0xed50, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0x16);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0x4f);
        EXPECT(gbc.h(),  0x42);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0x7b3c);
        EXPECT(gbc.pc(), 0xed52);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xed50), 0xcb);
        EXPECT(gbc.readMem(0xed51), 0xbc);
        // CB BC 034C
        gbc.setState(0x82e9, 0x57ed, 0xf90, 0x5e27, 0x73f6, 0x8524, 0x0, 0x0);
        gbc.writeMem(0x82e9, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0xf);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0x73);
        EXPECT(gbc.e(),  0xf6);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0x57ed);
        EXPECT(gbc.pc(), 0x82eb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x82e9), 0xcb);
        EXPECT(gbc.readMem(0x82ea), 0xbc);
        // CB BC 034D
        gbc.setState(0x5c94, 0xebe0, 0xf080, 0xc8c8, 0xd15d, 0x4b86, 0x1, 0x1);
        gbc.writeMem(0x5c94, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0xf0);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0xc8);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0x4b);
        EXPECT(gbc.l(),  0x86);
        EXPECT(gbc.sp(), 0xebe0);
        EXPECT(gbc.pc(), 0x5c96);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB BC 034E
        gbc.setState(0x7ad5, 0xfcd8, 0x1090, 0xe7ef, 0x48e1, 0x3e79, 0x0, 0x0);
        gbc.writeMem(0x7ad5, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0x10);
        EXPECT(gbc.b(),  0xe7);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0x48);
        EXPECT(gbc.e(),  0xe1);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0x79);
        EXPECT(gbc.sp(), 0xfcd8);
        EXPECT(gbc.pc(), 0x7ad7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB BC 034F
        gbc.setState(0xc841, 0xe78b, 0xe220, 0xd245, 0xeddd, 0x7e2, 0x1, 0x1);
        gbc.writeMem(0xc841, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0xed);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0xe78b);
        EXPECT(gbc.pc(), 0xc843);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc841), 0xcb);
        EXPECT(gbc.readMem(0xc842), 0xbc);
        // CB BC 0350
        gbc.setState(0xd174, 0x68cb, 0x9040, 0x232, 0x1b81, 0x3ceb, 0x1, 0x0);
        gbc.writeMem(0xd174, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0x90);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0x32);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0x81);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0xeb);
        EXPECT(gbc.sp(), 0x68cb);
        EXPECT(gbc.pc(), 0xd176);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd174), 0xcb);
        EXPECT(gbc.readMem(0xd175), 0xbc);
        // CB BC 0352
        gbc.setState(0xc315, 0xd36f, 0x88f0, 0xfbb9, 0x99b0, 0x4c68, 0x0, 0x1);
        gbc.writeMem(0xc315, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0xfb);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0x99);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0x68);
        EXPECT(gbc.sp(), 0xd36f);
        EXPECT(gbc.pc(), 0xc317);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc315), 0xcb);
        EXPECT(gbc.readMem(0xc316), 0xbc);
        // CB BC 0353
        gbc.setState(0xce5, 0xf862, 0x4e0, 0xc03d, 0xc652, 0x2e9f, 0x1, 0x1);
        gbc.writeMem(0xce5, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0x4);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0x3d);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0x2e);
        EXPECT(gbc.l(),  0x9f);
        EXPECT(gbc.sp(), 0xf862);
        EXPECT(gbc.pc(), 0xce7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB BC 0354
        gbc.setState(0x6887, 0x4d34, 0x1090, 0x6f44, 0xc98d, 0x7812, 0x0, 0x1);
        gbc.writeMem(0x6887, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0x10);
        EXPECT(gbc.b(),  0x6f);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0xc9);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0x78);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0x4d34);
        EXPECT(gbc.pc(), 0x6889);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB BC 0355
        gbc.setState(0x221f, 0x1d11, 0x6e80, 0x2be3, 0x7b2c, 0xa901, 0x0, 0x0);
        gbc.writeMem(0x221f, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0x2b);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0x7b);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0x29);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0x1d11);
        EXPECT(gbc.pc(), 0x2221);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB BC 0356
        gbc.setState(0x58c6, 0x3a7a, 0xa920, 0x834b, 0xcb49, 0x30ec, 0x0, 0x0);
        gbc.writeMem(0x58c6, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0xa9);
        EXPECT(gbc.b(),  0x83);
        EXPECT(gbc.c(),  0x4b);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0x30);
        EXPECT(gbc.l(),  0xec);
        EXPECT(gbc.sp(), 0x3a7a);
        EXPECT(gbc.pc(), 0x58c8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB BC 0357
        gbc.setState(0xa377, 0xbde2, 0x5940, 0x1b4c, 0x6ac1, 0xfd0c, 0x0, 0x0);
        gbc.writeMem(0xa377, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0x6a);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0xbde2);
        EXPECT(gbc.pc(), 0xa379);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa377), 0xcb);
        EXPECT(gbc.readMem(0xa378), 0xbc);
        // CB BC 0358
        gbc.setState(0x8554, 0x4ffe, 0x8ba0, 0x9a8f, 0xe953, 0xbc2c, 0x0, 0x1);
        gbc.writeMem(0x8554, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0x9a);
        EXPECT(gbc.c(),  0x8f);
        EXPECT(gbc.d(),  0xe9);
        EXPECT(gbc.e(),  0x53);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0x2c);
        EXPECT(gbc.sp(), 0x4ffe);
        EXPECT(gbc.pc(), 0x8556);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8554), 0xcb);
        EXPECT(gbc.readMem(0x8555), 0xbc);
        // CB BC 0359
        gbc.setState(0x4ece, 0xeb37, 0x6090, 0x6a4f, 0x3, 0xd1b9, 0x1, 0x0);
        gbc.writeMem(0x4ece, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0x6a);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0x3);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0xeb37);
        EXPECT(gbc.pc(), 0x4ed0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB BC 035A
        gbc.setState(0x1352, 0xef2a, 0x6db0, 0x1b70, 0x37a6, 0x6da1, 0x0, 0x1);
        gbc.writeMem(0x1352, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0x6d);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0x37);
        EXPECT(gbc.e(),  0xa6);
        EXPECT(gbc.h(),  0x6d);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0xef2a);
        EXPECT(gbc.pc(), 0x1354);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB BC 035B
        gbc.setState(0x4ed4, 0xd178, 0x5f70, 0xfdde, 0xae07, 0xac42, 0x0, 0x0);
        gbc.writeMem(0x4ed4, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0xae);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0x42);
        EXPECT(gbc.sp(), 0xd178);
        EXPECT(gbc.pc(), 0x4ed6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB BC 035C
        gbc.setState(0xd59f, 0x9dd3, 0x1a20, 0x79ff, 0x942a, 0x5c2, 0x0, 0x0);
        gbc.writeMem(0xd59f, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0x1a);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0xff);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0x9dd3);
        EXPECT(gbc.pc(), 0xd5a1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd59f), 0xcb);
        EXPECT(gbc.readMem(0xd5a0), 0xbc);
        // CB BC 035D
        gbc.setState(0xed6c, 0x63cc, 0x70c0, 0x76b2, 0x50f0, 0x332e, 0x1, 0x0);
        gbc.writeMem(0xed6c, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0x70);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0x50);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0x63cc);
        EXPECT(gbc.pc(), 0xed6e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xed6c), 0xcb);
        EXPECT(gbc.readMem(0xed6d), 0xbc);
        // CB BC 035E
        gbc.setState(0xa310, 0x34b0, 0xee50, 0x36cc, 0xe0c8, 0xc9f1, 0x0, 0x1);
        gbc.writeMem(0xa310, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0xee);
        EXPECT(gbc.b(),  0x36);
        EXPECT(gbc.c(),  0xcc);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0x49);
        EXPECT(gbc.l(),  0xf1);
        EXPECT(gbc.sp(), 0x34b0);
        EXPECT(gbc.pc(), 0xa312);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa310), 0xcb);
        EXPECT(gbc.readMem(0xa311), 0xbc);
        // CB BC 0360
        gbc.setState(0xd1ee, 0xafb0, 0x2bb0, 0xd1ca, 0xfe76, 0x6964, 0x1, 0x1);
        gbc.writeMem(0xd1ee, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0x2b);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0x76);
        EXPECT(gbc.h(),  0x69);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0xafb0);
        EXPECT(gbc.pc(), 0xd1f0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd1ee), 0xcb);
        EXPECT(gbc.readMem(0xd1ef), 0xbc);
        // CB BC 0361
        gbc.setState(0x3b26, 0xba19, 0xebc0, 0xe512, 0xd495, 0x9d9b, 0x1, 0x1);
        gbc.writeMem(0x3b26, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0xe5);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0x95);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0x9b);
        EXPECT(gbc.sp(), 0xba19);
        EXPECT(gbc.pc(), 0x3b28);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB BC 0362
        gbc.setState(0x1362, 0xa6a9, 0x9e70, 0x9bbb, 0x8194, 0x8b66, 0x0, 0x0);
        gbc.writeMem(0x1362, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0x9b);
        EXPECT(gbc.c(),  0xbb);
        EXPECT(gbc.d(),  0x81);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0xa6a9);
        EXPECT(gbc.pc(), 0x1364);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB BC 0363
        gbc.setState(0xadbf, 0x5c68, 0x70b0, 0xaaaa, 0xb982, 0x5c82, 0x1, 0x0);
        gbc.writeMem(0xadbf, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0x70);
        EXPECT(gbc.b(),  0xaa);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0xb9);
        EXPECT(gbc.e(),  0x82);
        EXPECT(gbc.h(),  0x5c);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0x5c68);
        EXPECT(gbc.pc(), 0xadc1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xadbf), 0xcb);
        EXPECT(gbc.readMem(0xadc0), 0xbc);
        // CB BC 0364
        gbc.setState(0x4bd8, 0x2653, 0x2d60, 0xa82b, 0x93a0, 0xdbdb, 0x1, 0x1);
        gbc.writeMem(0x4bd8, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0xa8);
        EXPECT(gbc.c(),  0x2b);
        EXPECT(gbc.d(),  0x93);
        EXPECT(gbc.e(),  0xa0);
        EXPECT(gbc.h(),  0x5b);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0x2653);
        EXPECT(gbc.pc(), 0x4bda);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB BC 0365
        gbc.setState(0x6d99, 0xf4ff, 0xcc0, 0xa707, 0xbbac, 0xec9a, 0x1, 0x0);
        gbc.writeMem(0x6d99, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0xa7);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0x6c);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0xf4ff);
        EXPECT(gbc.pc(), 0x6d9b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB BC 0366
        gbc.setState(0xcf8d, 0x2583, 0xc90, 0x8cf4, 0xab6, 0xaa54, 0x1, 0x1);
        gbc.writeMem(0xcf8d, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0xf4);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0xb6);
        EXPECT(gbc.h(),  0x2a);
        EXPECT(gbc.l(),  0x54);
        EXPECT(gbc.sp(), 0x2583);
        EXPECT(gbc.pc(), 0xcf8f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcf8d), 0xcb);
        EXPECT(gbc.readMem(0xcf8e), 0xbc);
        // CB BC 0367
        gbc.setState(0x1e08, 0xaf9d, 0xb660, 0x343e, 0xbb8b, 0xda43, 0x0, 0x0);
        gbc.writeMem(0x1e08, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0x34);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0x8b);
        EXPECT(gbc.h(),  0x5a);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0xaf9d);
        EXPECT(gbc.pc(), 0x1e0a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB BC 0368
        gbc.setState(0x9e5d, 0x2a2f, 0x3600, 0x8290, 0x44ee, 0x90ea, 0x0, 0x0);
        gbc.writeMem(0x9e5d, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0x36);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0x90);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0x10);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0x2a2f);
        EXPECT(gbc.pc(), 0x9e5f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9e5d), 0xcb);
        EXPECT(gbc.readMem(0x9e5e), 0xbc);
        // CB BC 0369
        gbc.setState(0x1031, 0xc4, 0x8d10, 0x6c19, 0x5b1a, 0x4115, 0x1, 0x0);
        gbc.writeMem(0x1031, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0x41);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0xc4);
        EXPECT(gbc.pc(), 0x1033);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB BC 036A
        gbc.setState(0xbddf, 0x6333, 0x7de0, 0x4dfd, 0x9de1, 0xf61e, 0x1, 0x0);
        gbc.writeMem(0xbddf, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0x7d);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0xfd);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0xe1);
        EXPECT(gbc.h(),  0x76);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0x6333);
        EXPECT(gbc.pc(), 0xbde1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbddf), 0xcb);
        EXPECT(gbc.readMem(0xbde0), 0xbc);
        // CB BC 036B
        gbc.setState(0x7cff, 0x8a11, 0xe6e0, 0xf4a7, 0xdc1e, 0xdf45, 0x0, 0x0);
        gbc.writeMem(0x7cff, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0xa7);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0x45);
        EXPECT(gbc.sp(), 0x8a11);
        EXPECT(gbc.pc(), 0x7d01);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB BC 036C
        gbc.setState(0x2293, 0x56ac, 0xa0, 0x17b3, 0x70cc, 0xb906, 0x0, 0x0);
        gbc.writeMem(0x2293, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x17);
        EXPECT(gbc.c(),  0xb3);
        EXPECT(gbc.d(),  0x70);
        EXPECT(gbc.e(),  0xcc);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0x56ac);
        EXPECT(gbc.pc(), 0x2295);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB BC 036D
        gbc.setState(0x8d90, 0xa9b3, 0x9de0, 0xf443, 0xe499, 0xffcf, 0x1, 0x0);
        gbc.writeMem(0x8d90, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0x9d);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0x43);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0x99);
        EXPECT(gbc.h(),  0x7f);
        EXPECT(gbc.l(),  0xcf);
        EXPECT(gbc.sp(), 0xa9b3);
        EXPECT(gbc.pc(), 0x8d92);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8d90), 0xcb);
        EXPECT(gbc.readMem(0x8d91), 0xbc);
        // CB BC 036E
        gbc.setState(0x9a42, 0xb648, 0x61e0, 0xfc8f, 0x6e31, 0x847f, 0x1, 0x1);
        gbc.writeMem(0x9a42, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0xfc);
        EXPECT(gbc.c(),  0x8f);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0x31);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0xb648);
        EXPECT(gbc.pc(), 0x9a44);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9a42), 0xcb);
        EXPECT(gbc.readMem(0x9a43), 0xbc);
        // CB BC 036F
        gbc.setState(0x2dd7, 0xe2e8, 0xdbf0, 0x429d, 0xdb2c, 0x3271, 0x1, 0x1);
        gbc.writeMem(0x2dd7, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0xdb);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0x9d);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0xe2e8);
        EXPECT(gbc.pc(), 0x2dd9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB BC 0370
        gbc.setState(0x9898, 0xe695, 0xdd80, 0x7262, 0x55e1, 0x85a9, 0x1, 0x0);
        gbc.writeMem(0x9898, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0xdd);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0xe1);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0xa9);
        EXPECT(gbc.sp(), 0xe695);
        EXPECT(gbc.pc(), 0x989a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9898), 0xcb);
        EXPECT(gbc.readMem(0x9899), 0xbc);
        // CB BC 0371
        gbc.setState(0x1aad, 0x7932, 0x1790, 0x5e3e, 0x17db, 0x2de4, 0x1, 0x1);
        gbc.writeMem(0x1aad, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0x17);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0x17);
        EXPECT(gbc.e(),  0xdb);
        EXPECT(gbc.h(),  0x2d);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0x7932);
        EXPECT(gbc.pc(), 0x1aaf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB BC 0372
        gbc.setState(0x2944, 0x3684, 0x7140, 0xcedb, 0x6a75, 0x3849, 0x1, 0x0);
        gbc.writeMem(0x2944, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0x71);
        EXPECT(gbc.b(),  0xce);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0x6a);
        EXPECT(gbc.e(),  0x75);
        EXPECT(gbc.h(),  0x38);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0x3684);
        EXPECT(gbc.pc(), 0x2946);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB BC 0373
        gbc.setState(0xb16c, 0x36de, 0x8820, 0xf679, 0xf38d, 0xcc7b, 0x1, 0x1);
        gbc.writeMem(0xb16c, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0x79);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0x7b);
        EXPECT(gbc.sp(), 0x36de);
        EXPECT(gbc.pc(), 0xb16e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb16c), 0xcb);
        EXPECT(gbc.readMem(0xb16d), 0xbc);
        // CB BC 0374
        gbc.setState(0xaa53, 0x7b58, 0xb690, 0xb306, 0x3e8e, 0x33a4, 0x0, 0x1);
        gbc.writeMem(0xaa53, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0xb3);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0xa4);
        EXPECT(gbc.sp(), 0x7b58);
        EXPECT(gbc.pc(), 0xaa55);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaa53), 0xcb);
        EXPECT(gbc.readMem(0xaa54), 0xbc);
        // CB BC 0375
        gbc.setState(0x208b, 0xe12a, 0xa6c0, 0xc028, 0x5fad, 0x5288, 0x0, 0x1);
        gbc.writeMem(0x208b, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0xa6);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0x5f);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0x52);
        EXPECT(gbc.l(),  0x88);
        EXPECT(gbc.sp(), 0xe12a);
        EXPECT(gbc.pc(), 0x208d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB BC 0378
        gbc.setState(0xd5e0, 0x4a33, 0x5cf0, 0x6915, 0x74e4, 0x82b1, 0x0, 0x0);
        gbc.writeMem(0xd5e0, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0x69);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0x74);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0x2);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0x4a33);
        EXPECT(gbc.pc(), 0xd5e2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd5e0), 0xcb);
        EXPECT(gbc.readMem(0xd5e1), 0xbc);
        // CB BC 0379
        gbc.setState(0x75fa, 0x4ca8, 0xfca0, 0xf35a, 0x5ea6, 0x9e1f, 0x1, 0x0);
        gbc.writeMem(0x75fa, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0xf3);
        EXPECT(gbc.c(),  0x5a);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0xa6);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0x4ca8);
        EXPECT(gbc.pc(), 0x75fc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB BC 037A
        gbc.setState(0x8c67, 0x7098, 0xd940, 0xf72, 0x1f83, 0x9111, 0x1, 0x0);
        gbc.writeMem(0x8c67, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0xd9);
        EXPECT(gbc.b(),  0xf);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0x1f);
        EXPECT(gbc.e(),  0x83);
        EXPECT(gbc.h(),  0x11);
        EXPECT(gbc.l(),  0x11);
        EXPECT(gbc.sp(), 0x7098);
        EXPECT(gbc.pc(), 0x8c69);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8c67), 0xcb);
        EXPECT(gbc.readMem(0x8c68), 0xbc);
        // CB BC 037B
        gbc.setState(0xce2a, 0xc5d, 0x65c0, 0x876e, 0xfea2, 0xe3ee, 0x0, 0x1);
        gbc.writeMem(0xce2a, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0x65);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0xa2);
        EXPECT(gbc.h(),  0x63);
        EXPECT(gbc.l(),  0xee);
        EXPECT(gbc.sp(), 0xc5d);
        EXPECT(gbc.pc(), 0xce2c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xce2a), 0xcb);
        EXPECT(gbc.readMem(0xce2b), 0xbc);
        // CB BC 037C
        gbc.setState(0xad35, 0x7bb, 0x90b0, 0x94a6, 0x4236, 0x94ee, 0x0, 0x1);
        gbc.writeMem(0xad35, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0x90);
        EXPECT(gbc.b(),  0x94);
        EXPECT(gbc.c(),  0xa6);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0x14);
        EXPECT(gbc.l(),  0xee);
        EXPECT(gbc.sp(), 0x7bb);
        EXPECT(gbc.pc(), 0xad37);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xad35), 0xcb);
        EXPECT(gbc.readMem(0xad36), 0xbc);
        // CB BC 037D
        gbc.setState(0x91c0, 0x5ad2, 0x2710, 0x3916, 0xbbcd, 0x73c7, 0x0, 0x0);
        gbc.writeMem(0x91c0, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0x27);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0xcd);
        EXPECT(gbc.h(),  0x73);
        EXPECT(gbc.l(),  0xc7);
        EXPECT(gbc.sp(), 0x5ad2);
        EXPECT(gbc.pc(), 0x91c2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x91c0), 0xcb);
        EXPECT(gbc.readMem(0x91c1), 0xbc);
        // CB BC 037F
        gbc.setState(0x8a90, 0xd29a, 0xff0, 0x7e61, 0x65b4, 0x5e0, 0x0, 0x1);
        gbc.writeMem(0x8a90, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0xf);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0x61);
        EXPECT(gbc.d(),  0x65);
        EXPECT(gbc.e(),  0xb4);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0xd29a);
        EXPECT(gbc.pc(), 0x8a92);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8a90), 0xcb);
        EXPECT(gbc.readMem(0x8a91), 0xbc);
        // CB BC 0380
        gbc.setState(0xbe9c, 0x5607, 0xc80, 0x6a42, 0x632a, 0x9dfe, 0x0, 0x1);
        gbc.writeMem(0xbe9c, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0x6a);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0x63);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0xfe);
        EXPECT(gbc.sp(), 0x5607);
        EXPECT(gbc.pc(), 0xbe9e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbe9c), 0xcb);
        EXPECT(gbc.readMem(0xbe9d), 0xbc);
        // CB BC 0381
        gbc.setState(0xe187, 0x8351, 0x4420, 0x9409, 0x3e78, 0xafe8, 0x1, 0x0);
        gbc.writeMem(0xe187, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0x94);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0x2f);
        EXPECT(gbc.l(),  0xe8);
        EXPECT(gbc.sp(), 0x8351);
        EXPECT(gbc.pc(), 0xe189);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe187), 0xcb);
        EXPECT(gbc.readMem(0xe188), 0xbc);
        // CB BC 0382
        gbc.setState(0x5b94, 0xea03, 0x82e0, 0x5a6e, 0x1875, 0x260, 0x1, 0x0);
        gbc.writeMem(0x5b94, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0x82);
        EXPECT(gbc.b(),  0x5a);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0x75);
        EXPECT(gbc.h(),  0x2);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0xea03);
        EXPECT(gbc.pc(), 0x5b96);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB BC 0383
        gbc.setState(0xb612, 0x765f, 0xfb0, 0xe834, 0xe8b7, 0x821b, 0x0, 0x0);
        gbc.writeMem(0xb612, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0xf);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0xe8);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0x2);
        EXPECT(gbc.l(),  0x1b);
        EXPECT(gbc.sp(), 0x765f);
        EXPECT(gbc.pc(), 0xb614);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb612), 0xcb);
        EXPECT(gbc.readMem(0xb613), 0xbc);
        // CB BC 0384
        gbc.setState(0x9905, 0x6177, 0x8340, 0x6865, 0xafe5, 0xbb41, 0x1, 0x1);
        gbc.writeMem(0x9905, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0x83);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0x65);
        EXPECT(gbc.d(),  0xaf);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0x3b);
        EXPECT(gbc.l(),  0x41);
        EXPECT(gbc.sp(), 0x6177);
        EXPECT(gbc.pc(), 0x9907);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9905), 0xcb);
        EXPECT(gbc.readMem(0x9906), 0xbc);
        // CB BC 0385
        gbc.setState(0x40c8, 0x4b1c, 0xf7e0, 0x8d2e, 0xb952, 0xa746, 0x1, 0x0);
        gbc.writeMem(0x40c8, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0x8d);
        EXPECT(gbc.c(),  0x2e);
        EXPECT(gbc.d(),  0xb9);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0x27);
        EXPECT(gbc.l(),  0x46);
        EXPECT(gbc.sp(), 0x4b1c);
        EXPECT(gbc.pc(), 0x40ca);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB BC 0386
        gbc.setState(0x1bd0, 0x8783, 0x4090, 0xa72b, 0x4baa, 0xdbdd, 0x0, 0x1);
        gbc.writeMem(0x1bd0, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0x40);
        EXPECT(gbc.b(),  0xa7);
        EXPECT(gbc.c(),  0x2b);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0xaa);
        EXPECT(gbc.h(),  0x5b);
        EXPECT(gbc.l(),  0xdd);
        EXPECT(gbc.sp(), 0x8783);
        EXPECT(gbc.pc(), 0x1bd2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB BC 0387
        gbc.setState(0x68b1, 0xeadf, 0x8da0, 0xcbb1, 0x94c6, 0xc22a, 0x0, 0x1);
        gbc.writeMem(0x68b1, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0xcb);
        EXPECT(gbc.c(),  0xb1);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0xc6);
        EXPECT(gbc.h(),  0x42);
        EXPECT(gbc.l(),  0x2a);
        EXPECT(gbc.sp(), 0xeadf);
        EXPECT(gbc.pc(), 0x68b3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB BC 0388
        gbc.setState(0xb674, 0xd833, 0x6010, 0xcdde, 0x1801, 0x590c, 0x1, 0x1);
        gbc.writeMem(0xb674, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0xd833);
        EXPECT(gbc.pc(), 0xb676);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb674), 0xcb);
        EXPECT(gbc.readMem(0xb675), 0xbc);
        // CB BC 0389
        gbc.setState(0x80ca, 0x52c2, 0x3330, 0xddb3, 0xa2, 0xacc5, 0x1, 0x0);
        gbc.writeMem(0x80ca, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0xb3);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0xa2);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0x52c2);
        EXPECT(gbc.pc(), 0x80cc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x80ca), 0xcb);
        EXPECT(gbc.readMem(0x80cb), 0xbc);
        // CB BC 038A
        gbc.setState(0x800d, 0x5875, 0xd5c0, 0x1db3, 0x6756, 0x92e7, 0x0, 0x0);
        gbc.writeMem(0x800d, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0xd5);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0xb3);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0x56);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0x5875);
        EXPECT(gbc.pc(), 0x800f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x800d), 0xcb);
        EXPECT(gbc.readMem(0x800e), 0xbc);
        // CB BC 038B
        gbc.setState(0x2a64, 0xe694, 0xcac0, 0x49fb, 0x854c, 0x1f72, 0x1, 0x1);
        gbc.writeMem(0x2a64, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0xca);
        EXPECT(gbc.b(),  0x49);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0x1f);
        EXPECT(gbc.l(),  0x72);
        EXPECT(gbc.sp(), 0xe694);
        EXPECT(gbc.pc(), 0x2a66);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB BC 038C
        gbc.setState(0x44ba, 0x658b, 0x6da0, 0xfa59, 0xde78, 0xc25d, 0x1, 0x0);
        gbc.writeMem(0x44ba, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0x6d);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0x42);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0x658b);
        EXPECT(gbc.pc(), 0x44bc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB BC 038D
        gbc.setState(0xd17, 0x68cb, 0xe9b0, 0x2c17, 0xbc3e, 0xfdd6, 0x1, 0x0);
        gbc.writeMem(0xd17, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0xe9);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0x17);
        EXPECT(gbc.d(),  0xbc);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0xd6);
        EXPECT(gbc.sp(), 0x68cb);
        EXPECT(gbc.pc(), 0xd19);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB BC 038E
        gbc.setState(0x4046, 0x496d, 0x9a00, 0x1865, 0xf8a2, 0xc5ec, 0x0, 0x0);
        gbc.writeMem(0x4046, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0x9a);
        EXPECT(gbc.b(),  0x18);
        EXPECT(gbc.c(),  0x65);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0xa2);
        EXPECT(gbc.h(),  0x45);
        EXPECT(gbc.l(),  0xec);
        EXPECT(gbc.sp(), 0x496d);
        EXPECT(gbc.pc(), 0x4048);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB BC 038F
        gbc.setState(0x657c, 0xd5d, 0xd950, 0x67cf, 0x23e5, 0xbfca, 0x1, 0x0);
        gbc.writeMem(0x657c, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0xd9);
        EXPECT(gbc.b(),  0x67);
        EXPECT(gbc.c(),  0xcf);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0xca);
        EXPECT(gbc.sp(), 0xd5d);
        EXPECT(gbc.pc(), 0x657e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB BC 0390
        gbc.setState(0xdb9c, 0xe070, 0x93d0, 0x68b6, 0x87ac, 0x418c, 0x0, 0x1);
        gbc.writeMem(0xdb9c, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0x93);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0xb6);
        EXPECT(gbc.d(),  0x87);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0x41);
        EXPECT(gbc.l(),  0x8c);
        EXPECT(gbc.sp(), 0xe070);
        EXPECT(gbc.pc(), 0xdb9e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdb9c), 0xcb);
        EXPECT(gbc.readMem(0xdb9d), 0xbc);
        // CB BC 0391
        gbc.setState(0x42a3, 0x57ad, 0x4a90, 0x807f, 0x48dc, 0x4d22, 0x0, 0x0);
        gbc.writeMem(0x42a3, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0x4a);
        EXPECT(gbc.b(),  0x80);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0x48);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0x4d);
        EXPECT(gbc.l(),  0x22);
        EXPECT(gbc.sp(), 0x57ad);
        EXPECT(gbc.pc(), 0x42a5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB BC 0392
        gbc.setState(0xdcce, 0x198, 0xb240, 0xd1f1, 0x229f, 0x2592, 0x1, 0x0);
        gbc.writeMem(0xdcce, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0xb2);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0x9f);
        EXPECT(gbc.h(),  0x25);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0x198);
        EXPECT(gbc.pc(), 0xdcd0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdcce), 0xcb);
        EXPECT(gbc.readMem(0xdccf), 0xbc);
        // CB BC 0393
        gbc.setState(0xb984, 0x18cc, 0x5d90, 0xadd6, 0x9f7a, 0x6d75, 0x1, 0x0);
        gbc.writeMem(0xb984, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0x5d);
        EXPECT(gbc.b(),  0xad);
        EXPECT(gbc.c(),  0xd6);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0x7a);
        EXPECT(gbc.h(),  0x6d);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0x18cc);
        EXPECT(gbc.pc(), 0xb986);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb984), 0xcb);
        EXPECT(gbc.readMem(0xb985), 0xbc);
        // CB BC 0394
        gbc.setState(0xb9f4, 0x967e, 0x5090, 0x10cc, 0x6121, 0x71e0, 0x0, 0x1);
        gbc.writeMem(0xb9f4, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0xcc);
        EXPECT(gbc.d(),  0x61);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0x71);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0x967e);
        EXPECT(gbc.pc(), 0xb9f6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb9f4), 0xcb);
        EXPECT(gbc.readMem(0xb9f5), 0xbc);
        // CB BC 0395
        gbc.setState(0x76f5, 0x50f5, 0x74d0, 0xe8e3, 0x222c, 0x98c7, 0x0, 0x1);
        gbc.writeMem(0x76f5, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0x74);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0x18);
        EXPECT(gbc.l(),  0xc7);
        EXPECT(gbc.sp(), 0x50f5);
        EXPECT(gbc.pc(), 0x76f7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB BC 0396
        gbc.setState(0x2cd7, 0x8a3b, 0x3ec0, 0x2b2d, 0x390e, 0x1fa3, 0x0, 0x1);
        gbc.writeMem(0x2cd7, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0x2b);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0x39);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0x1f);
        EXPECT(gbc.l(),  0xa3);
        EXPECT(gbc.sp(), 0x8a3b);
        EXPECT(gbc.pc(), 0x2cd9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB BC 0397
        gbc.setState(0xc0d7, 0xd5d8, 0x7d70, 0x64e5, 0xba1b, 0xf2aa, 0x1, 0x0);
        gbc.writeMem(0xc0d7, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0x7d);
        EXPECT(gbc.b(),  0x64);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0xba);
        EXPECT(gbc.e(),  0x1b);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0xaa);
        EXPECT(gbc.sp(), 0xd5d8);
        EXPECT(gbc.pc(), 0xc0d9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc0d7), 0xcb);
        EXPECT(gbc.readMem(0xc0d8), 0xbc);
        // CB BC 0398
        gbc.setState(0x636f, 0xc368, 0xcee0, 0xa750, 0x2deb, 0x12fe, 0x0, 0x0);
        gbc.writeMem(0x636f, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0xce);
        EXPECT(gbc.b(),  0xa7);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0xfe);
        EXPECT(gbc.sp(), 0xc368);
        EXPECT(gbc.pc(), 0x6371);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB BC 0399
        gbc.setState(0x45b3, 0x16c9, 0xc540, 0xc5e, 0xf226, 0xb97b, 0x1, 0x1);
        gbc.writeMem(0x45b3, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0xc5);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0xf2);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0x7b);
        EXPECT(gbc.sp(), 0x16c9);
        EXPECT(gbc.pc(), 0x45b5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB BC 039A
        gbc.setState(0xc137, 0x40ee, 0x46d0, 0x3f93, 0xa662, 0xa3cf, 0x1, 0x1);
        gbc.writeMem(0xc137, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0x46);
        EXPECT(gbc.b(),  0x3f);
        EXPECT(gbc.c(),  0x93);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0xcf);
        EXPECT(gbc.sp(), 0x40ee);
        EXPECT(gbc.pc(), 0xc139);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc137), 0xcb);
        EXPECT(gbc.readMem(0xc138), 0xbc);
        // CB BC 039C
        gbc.setState(0xbe90, 0xf1f7, 0xe530, 0x5dba, 0x2802, 0xb213, 0x1, 0x1);
        gbc.writeMem(0xbe90, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0xe5);
        EXPECT(gbc.b(),  0x5d);
        EXPECT(gbc.c(),  0xba);
        EXPECT(gbc.d(),  0x28);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0xf1f7);
        EXPECT(gbc.pc(), 0xbe92);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbe90), 0xcb);
        EXPECT(gbc.readMem(0xbe91), 0xbc);
        // CB BC 039E
        gbc.setState(0x5a26, 0x68e9, 0xa170, 0x512e, 0x85b2, 0xbec4, 0x0, 0x1);
        gbc.writeMem(0x5a26, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0xa1);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0x2e);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0xc4);
        EXPECT(gbc.sp(), 0x68e9);
        EXPECT(gbc.pc(), 0x5a28);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB BC 039F
        gbc.setState(0x765b, 0x2e2d, 0x2de0, 0xa639, 0x510e, 0xc3d9, 0x0, 0x1);
        gbc.writeMem(0x765b, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0xa6);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0x51);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0xd9);
        EXPECT(gbc.sp(), 0x2e2d);
        EXPECT(gbc.pc(), 0x765d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB BC 03A0
        gbc.setState(0x2aff, 0x82a0, 0x3210, 0x5225, 0x96b6, 0xb3b8, 0x0, 0x1);
        gbc.writeMem(0x2aff, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0xb6);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0xb8);
        EXPECT(gbc.sp(), 0x82a0);
        EXPECT(gbc.pc(), 0x2b01);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB BC 03A1
        gbc.setState(0x2771, 0xca7c, 0x3550, 0x1741, 0x8146, 0x13b6, 0x0, 0x0);
        gbc.writeMem(0x2771, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0x35);
        EXPECT(gbc.b(),  0x17);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0x81);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0x13);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0xca7c);
        EXPECT(gbc.pc(), 0x2773);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB BC 03A2
        gbc.setState(0xae3a, 0x49e0, 0xa200, 0xfb87, 0xb6a1, 0x3793, 0x1, 0x0);
        gbc.writeMem(0xae3a, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0xfb);
        EXPECT(gbc.c(),  0x87);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0xa1);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0x93);
        EXPECT(gbc.sp(), 0x49e0);
        EXPECT(gbc.pc(), 0xae3c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xae3a), 0xcb);
        EXPECT(gbc.readMem(0xae3b), 0xbc);
        // CB BC 03A4
        gbc.setState(0x6506, 0xf1e, 0xe50, 0xf4a5, 0xf5b3, 0x75a5, 0x1, 0x1);
        gbc.writeMem(0x6506, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0xb3);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0xf1e);
        EXPECT(gbc.pc(), 0x6508);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB BC 03A5
        gbc.setState(0x703b, 0xde55, 0x41b0, 0x77d6, 0x6caa, 0xce5d, 0x0, 0x0);
        gbc.writeMem(0x703b, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0x77);
        EXPECT(gbc.c(),  0xd6);
        EXPECT(gbc.d(),  0x6c);
        EXPECT(gbc.e(),  0xaa);
        EXPECT(gbc.h(),  0x4e);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0xde55);
        EXPECT(gbc.pc(), 0x703d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB BC 03A6
        gbc.setState(0x3209, 0xa560, 0x3b0, 0x1fac, 0xb37c, 0x4aa9, 0x1, 0x1);
        gbc.writeMem(0x3209, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0xb3);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0x4a);
        EXPECT(gbc.l(),  0xa9);
        EXPECT(gbc.sp(), 0xa560);
        EXPECT(gbc.pc(), 0x320b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB BC 03A7
        gbc.setState(0x3510, 0xe2c0, 0x5ad0, 0x176b, 0xa63f, 0xe984, 0x0, 0x0);
        gbc.writeMem(0x3510, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0x17);
        EXPECT(gbc.c(),  0x6b);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0x69);
        EXPECT(gbc.l(),  0x84);
        EXPECT(gbc.sp(), 0xe2c0);
        EXPECT(gbc.pc(), 0x3512);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB BC 03A8
        gbc.setState(0x6221, 0xcb99, 0xef10, 0x495c, 0x8b01, 0x2f0c, 0x1, 0x0);
        gbc.writeMem(0x6221, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0xef);
        EXPECT(gbc.b(),  0x49);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0x2f);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0xcb99);
        EXPECT(gbc.pc(), 0x6223);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB BC 03A9
        gbc.setState(0xa959, 0xa37a, 0xd1e0, 0x2cb1, 0x53d5, 0x4e31, 0x1, 0x1);
        gbc.writeMem(0xa959, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0xd1);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0xb1);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0xd5);
        EXPECT(gbc.h(),  0x4e);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0xa37a);
        EXPECT(gbc.pc(), 0xa95b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa959), 0xcb);
        EXPECT(gbc.readMem(0xa95a), 0xbc);
        // CB BC 03AA
        gbc.setState(0x7b9f, 0xa85e, 0x7240, 0x14cd, 0x2288, 0xa936, 0x1, 0x1);
        gbc.writeMem(0x7b9f, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0xcd);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0x88);
        EXPECT(gbc.h(),  0x29);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0xa85e);
        EXPECT(gbc.pc(), 0x7ba1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB BC 03AB
        gbc.setState(0x439f, 0x9226, 0x6a00, 0x1807, 0x7711, 0x7ca5, 0x1, 0x0);
        gbc.writeMem(0x439f, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0x18);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0x7c);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0x9226);
        EXPECT(gbc.pc(), 0x43a1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB BC 03AC
        gbc.setState(0xdce2, 0x22c, 0xcfd0, 0x9def, 0xa3e5, 0xae00, 0x1, 0x1);
        gbc.writeMem(0xdce2, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0xcf);
        EXPECT(gbc.b(),  0x9d);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0xa3);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0x2e);
        EXPECT(gbc.l(),  0x0);
        EXPECT(gbc.sp(), 0x22c);
        EXPECT(gbc.pc(), 0xdce4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdce2), 0xcb);
        EXPECT(gbc.readMem(0xdce3), 0xbc);
        // CB BC 03AD
        gbc.setState(0x66d8, 0x30ad, 0xc2d0, 0x9227, 0x5a42, 0x8520, 0x1, 0x0);
        gbc.writeMem(0x66d8, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0xc2);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0x42);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0x30ad);
        EXPECT(gbc.pc(), 0x66da);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB BC 03AE
        gbc.setState(0x4924, 0x7071, 0x2d80, 0x646, 0x8b09, 0x242b, 0x1, 0x0);
        gbc.writeMem(0x4924, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0x6);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0x2b);
        EXPECT(gbc.sp(), 0x7071);
        EXPECT(gbc.pc(), 0x4926);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB BC 03AF
        gbc.setState(0xecef, 0x4a10, 0x1450, 0xc2c9, 0xcf9a, 0xf40, 0x1, 0x0);
        gbc.writeMem(0xecef, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0x14);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0xc9);
        EXPECT(gbc.d(),  0xcf);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0xf);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0x4a10);
        EXPECT(gbc.pc(), 0xecf1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xecef), 0xcb);
        EXPECT(gbc.readMem(0xecf0), 0xbc);
        // CB BC 03B0
        gbc.setState(0xb0e6, 0x7145, 0xa0d0, 0xc1d9, 0x2f76, 0xaa43, 0x1, 0x1);
        gbc.writeMem(0xb0e6, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0xc1);
        EXPECT(gbc.c(),  0xd9);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0x76);
        EXPECT(gbc.h(),  0x2a);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0x7145);
        EXPECT(gbc.pc(), 0xb0e8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb0e6), 0xcb);
        EXPECT(gbc.readMem(0xb0e7), 0xbc);
        // CB BC 03B1
        gbc.setState(0x9715, 0xfeeb, 0x8590, 0xcd79, 0xe194, 0xef53, 0x1, 0x1);
        gbc.writeMem(0x9715, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0x85);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0x79);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0x6f);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0xfeeb);
        EXPECT(gbc.pc(), 0x9717);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9715), 0xcb);
        EXPECT(gbc.readMem(0x9716), 0xbc);
        // CB BC 03B2
        gbc.setState(0x529f, 0x96c5, 0xb490, 0x5e4, 0x623b, 0xbf68, 0x0, 0x1);
        gbc.writeMem(0x529f, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0xb4);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0x62);
        EXPECT(gbc.e(),  0x3b);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0x68);
        EXPECT(gbc.sp(), 0x96c5);
        EXPECT(gbc.pc(), 0x52a1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB BC 03B3
        gbc.setState(0x60e4, 0xe400, 0x5170, 0x31ab, 0x9f83, 0x9e0f, 0x0, 0x1);
        gbc.writeMem(0x60e4, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0x83);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0xf);
        EXPECT(gbc.sp(), 0xe400);
        EXPECT(gbc.pc(), 0x60e6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB BC 03B4
        gbc.setState(0xd137, 0xa25f, 0x5490, 0x4795, 0xb836, 0x10e8, 0x0, 0x1);
        gbc.writeMem(0xd137, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0x54);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0x95);
        EXPECT(gbc.d(),  0xb8);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0x10);
        EXPECT(gbc.l(),  0xe8);
        EXPECT(gbc.sp(), 0xa25f);
        EXPECT(gbc.pc(), 0xd139);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd137), 0xcb);
        EXPECT(gbc.readMem(0xd138), 0xbc);
        // CB BC 03B5
        gbc.setState(0xc9f7, 0xf63e, 0x15c0, 0x6903, 0xfefe, 0xd5ee, 0x0, 0x0);
        gbc.writeMem(0xc9f7, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0x15);
        EXPECT(gbc.b(),  0x69);
        EXPECT(gbc.c(),  0x3);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0xfe);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0xee);
        EXPECT(gbc.sp(), 0xf63e);
        EXPECT(gbc.pc(), 0xc9f9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc9f7), 0xcb);
        EXPECT(gbc.readMem(0xc9f8), 0xbc);
        // CB BC 03B6
        gbc.setState(0x6bf7, 0xe358, 0x5480, 0x4fcb, 0x8536, 0xb966, 0x0, 0x1);
        gbc.writeMem(0x6bf7, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0x54);
        EXPECT(gbc.b(),  0x4f);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0xe358);
        EXPECT(gbc.pc(), 0x6bf9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB BC 03B7
        gbc.setState(0xa7c0, 0xe974, 0x4740, 0x5a07, 0x4300, 0x6c56, 0x0, 0x0);
        gbc.writeMem(0xa7c0, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0x5a);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0x6c);
        EXPECT(gbc.l(),  0x56);
        EXPECT(gbc.sp(), 0xe974);
        EXPECT(gbc.pc(), 0xa7c2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa7c0), 0xcb);
        EXPECT(gbc.readMem(0xa7c1), 0xbc);
        // CB BC 03B8
        gbc.setState(0x206f, 0xc78d, 0x9b90, 0x2731, 0x8ae8, 0x2652, 0x1, 0x1);
        gbc.writeMem(0x206f, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0x9b);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0xc78d);
        EXPECT(gbc.pc(), 0x2071);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB BC 03BA
        gbc.setState(0x1d2f, 0xad4d, 0xd980, 0xd585, 0x3e20, 0x7d36, 0x0, 0x1);
        gbc.writeMem(0x1d2f, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0xd9);
        EXPECT(gbc.b(),  0xd5);
        EXPECT(gbc.c(),  0x85);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0x20);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0xad4d);
        EXPECT(gbc.pc(), 0x1d31);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB BC 03BC
        gbc.setState(0x4ad1, 0xf09a, 0x1590, 0x4d76, 0x6619, 0xc6a9, 0x1, 0x1);
        gbc.writeMem(0x4ad1, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0x15);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0x66);
        EXPECT(gbc.e(),  0x19);
        EXPECT(gbc.h(),  0x46);
        EXPECT(gbc.l(),  0xa9);
        EXPECT(gbc.sp(), 0xf09a);
        EXPECT(gbc.pc(), 0x4ad3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB BC 03BD
        gbc.setState(0x6445, 0x5b10, 0x2fd0, 0xaaab, 0x7049, 0xb65e, 0x0, 0x0);
        gbc.writeMem(0x6445, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0x2f);
        EXPECT(gbc.b(),  0xaa);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0x70);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0x36);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0x5b10);
        EXPECT(gbc.pc(), 0x6447);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB BC 03BE
        gbc.setState(0x6e49, 0x6cec, 0x1a0, 0xf758, 0xf673, 0xb3aa, 0x1, 0x1);
        gbc.writeMem(0x6e49, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0x1);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0xaa);
        EXPECT(gbc.sp(), 0x6cec);
        EXPECT(gbc.pc(), 0x6e4b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB BC 03BF
        gbc.setState(0x5331, 0xeb2c, 0x1a0, 0x1121, 0x5313, 0xc6a9, 0x1, 0x0);
        gbc.writeMem(0x5331, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0x1);
        EXPECT(gbc.b(),  0x11);
        EXPECT(gbc.c(),  0x21);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0x46);
        EXPECT(gbc.l(),  0xa9);
        EXPECT(gbc.sp(), 0xeb2c);
        EXPECT(gbc.pc(), 0x5333);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB BC 03C1
        gbc.setState(0x1523, 0x880d, 0xe530, 0x7754, 0x6769, 0x2c05, 0x0, 0x0);
        gbc.writeMem(0x1523, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0xe5);
        EXPECT(gbc.b(),  0x77);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0x5);
        EXPECT(gbc.sp(), 0x880d);
        EXPECT(gbc.pc(), 0x1525);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB BC 03C2
        gbc.setState(0xee3f, 0xddd0, 0x1f60, 0x45d9, 0x2d63, 0x5288, 0x1, 0x1);
        gbc.writeMem(0xee3f, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0xd9);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0x63);
        EXPECT(gbc.h(),  0x52);
        EXPECT(gbc.l(),  0x88);
        EXPECT(gbc.sp(), 0xddd0);
        EXPECT(gbc.pc(), 0xee41);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xee3f), 0xcb);
        EXPECT(gbc.readMem(0xee40), 0xbc);
        // CB BC 03C3
        gbc.setState(0x9083, 0x6aa9, 0x3160, 0xcdc, 0xf314, 0x6d3b, 0x0, 0x1);
        gbc.writeMem(0x9083, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0x31);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0xdc);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0x6d);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0x6aa9);
        EXPECT(gbc.pc(), 0x9085);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9083), 0xcb);
        EXPECT(gbc.readMem(0x9084), 0xbc);
        // CB BC 03C4
        gbc.setState(0xcaba, 0xeb70, 0xec40, 0xf337, 0x7544, 0x7177, 0x0, 0x1);
        gbc.writeMem(0xcaba, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0xf3);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0x75);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0x71);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0xeb70);
        EXPECT(gbc.pc(), 0xcabc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcaba), 0xcb);
        EXPECT(gbc.readMem(0xcabb), 0xbc);
        // CB BC 03C5
        gbc.setState(0xbcbb, 0x1aff, 0x83b0, 0xc6d3, 0x117d, 0x6f, 0x1, 0x1);
        gbc.writeMem(0xbcbb, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0x83);
        EXPECT(gbc.b(),  0xc6);
        EXPECT(gbc.c(),  0xd3);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0x7d);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0x1aff);
        EXPECT(gbc.pc(), 0xbcbd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbcbb), 0xcb);
        EXPECT(gbc.readMem(0xbcbc), 0xbc);
        // CB BC 03C6
        gbc.setState(0xb9a, 0xd84a, 0xf5e0, 0x2154, 0xa752, 0xd75a, 0x0, 0x1);
        gbc.writeMem(0xb9a, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0xf5);
        EXPECT(gbc.b(),  0x21);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0xa7);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0x57);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0xd84a);
        EXPECT(gbc.pc(), 0xb9c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB BC 03C7
        gbc.setState(0x3d3, 0x7926, 0xc410, 0x54d8, 0x9160, 0x1ebe, 0x0, 0x1);
        gbc.writeMem(0x3d3, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0xc4);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0xd8);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0x60);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0xbe);
        EXPECT(gbc.sp(), 0x7926);
        EXPECT(gbc.pc(), 0x3d5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB BC 03C8
        gbc.setState(0x5552, 0xc50d, 0x6a80, 0x3fa, 0x50d6, 0x20b9, 0x0, 0x0);
        gbc.writeMem(0x5552, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0xfa);
        EXPECT(gbc.d(),  0x50);
        EXPECT(gbc.e(),  0xd6);
        EXPECT(gbc.h(),  0x20);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0xc50d);
        EXPECT(gbc.pc(), 0x5554);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB BC 03C9
        gbc.setState(0x5305, 0x67cc, 0xa0a0, 0xe709, 0x4b5d, 0x8e2c, 0x0, 0x0);
        gbc.writeMem(0x5305, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0xe7);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0x2c);
        EXPECT(gbc.sp(), 0x67cc);
        EXPECT(gbc.pc(), 0x5307);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB BC 03CA
        gbc.setState(0x18f8, 0x5230, 0xf310, 0x7cd8, 0x38dc, 0x1ec8, 0x0, 0x0);
        gbc.writeMem(0x18f8, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0x7c);
        EXPECT(gbc.c(),  0xd8);
        EXPECT(gbc.d(),  0x38);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0x5230);
        EXPECT(gbc.pc(), 0x18fa);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB BC 03CB
        gbc.setState(0x490e, 0x64b3, 0x7a80, 0xaff5, 0xcb30, 0x1210, 0x1, 0x1);
        gbc.writeMem(0x490e, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0x7a);
        EXPECT(gbc.b(),  0xaf);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0x64b3);
        EXPECT(gbc.pc(), 0x4910);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB BC 03CC
        gbc.setState(0x79de, 0xbcbc, 0x9fd0, 0x2368, 0xd556, 0x7b1c, 0x0, 0x0);
        gbc.writeMem(0x79de, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0x9f);
        EXPECT(gbc.b(),  0x23);
        EXPECT(gbc.c(),  0x68);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0x56);
        EXPECT(gbc.h(),  0x7b);
        EXPECT(gbc.l(),  0x1c);
        EXPECT(gbc.sp(), 0xbcbc);
        EXPECT(gbc.pc(), 0x79e0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB BC 03CD
        gbc.setState(0xc3f7, 0x1002, 0x1b50, 0xa757, 0xc23d, 0xc07a, 0x0, 0x1);
        gbc.writeMem(0xc3f7, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0xa7);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0x40);
        EXPECT(gbc.l(),  0x7a);
        EXPECT(gbc.sp(), 0x1002);
        EXPECT(gbc.pc(), 0xc3f9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc3f7), 0xcb);
        EXPECT(gbc.readMem(0xc3f8), 0xbc);
        // CB BC 03CE
        gbc.setState(0xe45e, 0x7d66, 0x4e70, 0x1e2, 0x1dd1, 0x5e47, 0x0, 0x1);
        gbc.writeMem(0xe45e, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0xd1);
        EXPECT(gbc.h(),  0x5e);
        EXPECT(gbc.l(),  0x47);
        EXPECT(gbc.sp(), 0x7d66);
        EXPECT(gbc.pc(), 0xe460);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe45e), 0xcb);
        EXPECT(gbc.readMem(0xe45f), 0xbc);
        // CB BC 03CF
        gbc.setState(0x3af2, 0xe3e4, 0xe4b0, 0x2a38, 0x99a6, 0x4e07, 0x1, 0x0);
        gbc.writeMem(0x3af2, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0xe4);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0x38);
        EXPECT(gbc.d(),  0x99);
        EXPECT(gbc.e(),  0xa6);
        EXPECT(gbc.h(),  0x4e);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0xe3e4);
        EXPECT(gbc.pc(), 0x3af4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB BC 03D0
        gbc.setState(0xd776, 0x397f, 0xa260, 0xb49a, 0x6911, 0xe759, 0x0, 0x1);
        gbc.writeMem(0xd776, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0xb4);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0x69);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0x67);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0x397f);
        EXPECT(gbc.pc(), 0xd778);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd776), 0xcb);
        EXPECT(gbc.readMem(0xd777), 0xbc);
        // CB BC 03D2
        gbc.setState(0xaca1, 0x2fcd, 0x6850, 0x59bf, 0x4e59, 0x5b6b, 0x0, 0x1);
        gbc.writeMem(0xaca1, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0x68);
        EXPECT(gbc.b(),  0x59);
        EXPECT(gbc.c(),  0xbf);
        EXPECT(gbc.d(),  0x4e);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0x5b);
        EXPECT(gbc.l(),  0x6b);
        EXPECT(gbc.sp(), 0x2fcd);
        EXPECT(gbc.pc(), 0xaca3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaca1), 0xcb);
        EXPECT(gbc.readMem(0xaca2), 0xbc);
        // CB BC 03D3
        gbc.setState(0xd0c5, 0x504a, 0x5bd0, 0xa514, 0x3856, 0x34b0, 0x1, 0x1);
        gbc.writeMem(0xd0c5, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0xa5);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0x38);
        EXPECT(gbc.e(),  0x56);
        EXPECT(gbc.h(),  0x34);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0x504a);
        EXPECT(gbc.pc(), 0xd0c7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd0c5), 0xcb);
        EXPECT(gbc.readMem(0xd0c6), 0xbc);
        // CB BC 03D4
        gbc.setState(0x286, 0xec3f, 0x3d70, 0xbf1a, 0x6dfd, 0x614c, 0x0, 0x0);
        gbc.writeMem(0x286, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0x3d);
        EXPECT(gbc.b(),  0xbf);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0x6d);
        EXPECT(gbc.e(),  0xfd);
        EXPECT(gbc.h(),  0x61);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0xec3f);
        EXPECT(gbc.pc(), 0x288);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB BC 03D5
        gbc.setState(0x691c, 0x3642, 0xa220, 0xdbdc, 0xb738, 0x815a, 0x0, 0x1);
        gbc.writeMem(0x691c, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0xdb);
        EXPECT(gbc.c(),  0xdc);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0x38);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0x3642);
        EXPECT(gbc.pc(), 0x691e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB BC 03D6
        gbc.setState(0x3d05, 0x27fd, 0x5e10, 0xccc0, 0xa94, 0x74b2, 0x0, 0x0);
        gbc.writeMem(0x3d05, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0x5e);
        EXPECT(gbc.b(),  0xcc);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0x74);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0x27fd);
        EXPECT(gbc.pc(), 0x3d07);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB BC 03D7
        gbc.setState(0x7a84, 0x9fa, 0x9ea0, 0x5932, 0xc77d, 0x53e1, 0x1, 0x1);
        gbc.writeMem(0x7a84, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0x59);
        EXPECT(gbc.c(),  0x32);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0x7d);
        EXPECT(gbc.h(),  0x53);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0x9fa);
        EXPECT(gbc.pc(), 0x7a86);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB BC 03D8
        gbc.setState(0xb666, 0x3553, 0xe030, 0xd095, 0x6a67, 0x63fb, 0x1, 0x1);
        gbc.writeMem(0xb666, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0xe0);
        EXPECT(gbc.b(),  0xd0);
        EXPECT(gbc.c(),  0x95);
        EXPECT(gbc.d(),  0x6a);
        EXPECT(gbc.e(),  0x67);
        EXPECT(gbc.h(),  0x63);
        EXPECT(gbc.l(),  0xfb);
        EXPECT(gbc.sp(), 0x3553);
        EXPECT(gbc.pc(), 0xb668);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb666), 0xcb);
        EXPECT(gbc.readMem(0xb667), 0xbc);
        // CB BC 03D9
        gbc.setState(0x7cee, 0x6e51, 0x7d90, 0xbf20, 0x16e, 0xa8d9, 0x0, 0x0);
        gbc.writeMem(0x7cee, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0x7d);
        EXPECT(gbc.b(),  0xbf);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0x1);
        EXPECT(gbc.e(),  0x6e);
        EXPECT(gbc.h(),  0x28);
        EXPECT(gbc.l(),  0xd9);
        EXPECT(gbc.sp(), 0x6e51);
        EXPECT(gbc.pc(), 0x7cf0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB BC 03DA
        gbc.setState(0x8dc7, 0x8bb0, 0x36f0, 0x3219, 0x5706, 0x3e9c, 0x1, 0x1);
        gbc.writeMem(0x8dc7, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0x36);
        EXPECT(gbc.b(),  0x32);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0x57);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0x9c);
        EXPECT(gbc.sp(), 0x8bb0);
        EXPECT(gbc.pc(), 0x8dc9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8dc7), 0xcb);
        EXPECT(gbc.readMem(0x8dc8), 0xbc);
        // CB BC 03DB
        gbc.setState(0x9f5c, 0x58ed, 0xf7d0, 0x37af, 0xb729, 0xa590, 0x1, 0x0);
        gbc.writeMem(0x9f5c, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0xaf);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0x29);
        EXPECT(gbc.h(),  0x25);
        EXPECT(gbc.l(),  0x90);
        EXPECT(gbc.sp(), 0x58ed);
        EXPECT(gbc.pc(), 0x9f5e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9f5c), 0xcb);
        EXPECT(gbc.readMem(0x9f5d), 0xbc);
        // CB BC 03DC
        gbc.setState(0xa0ed, 0xcc6d, 0x3040, 0x888e, 0x6506, 0x66db, 0x0, 0x1);
        gbc.writeMem(0xa0ed, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0x8e);
        EXPECT(gbc.d(),  0x65);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0x66);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0xcc6d);
        EXPECT(gbc.pc(), 0xa0ef);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa0ed), 0xcb);
        EXPECT(gbc.readMem(0xa0ee), 0xbc);
        // CB BC 03DD
        gbc.setState(0x4678, 0xb04a, 0xb590, 0x61bf, 0x2d39, 0xcbf8, 0x1, 0x0);
        gbc.writeMem(0x4678, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0xb5);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0xbf);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0x4b);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0xb04a);
        EXPECT(gbc.pc(), 0x467a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB BC 03DE
        gbc.setState(0x12f, 0xc5d2, 0xe1c0, 0x14a0, 0xa780, 0xb88a, 0x1, 0x1);
        gbc.writeMem(0x12f, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0xe1);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0xa0);
        EXPECT(gbc.d(),  0xa7);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0x38);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0xc5d2);
        EXPECT(gbc.pc(), 0x131);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB BC 03DF
        gbc.setState(0x6b21, 0x56de, 0xbdc0, 0xef2c, 0x5760, 0x9765, 0x1, 0x1);
        gbc.writeMem(0x6b21, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0xbd);
        EXPECT(gbc.b(),  0xef);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0x57);
        EXPECT(gbc.e(),  0x60);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0x65);
        EXPECT(gbc.sp(), 0x56de);
        EXPECT(gbc.pc(), 0x6b23);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB BC 03E0
        gbc.setState(0x5356, 0x5bf0, 0x1ed0, 0xadfa, 0x4034, 0x6b0e, 0x0, 0x0);
        gbc.writeMem(0x5356, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0xad);
        EXPECT(gbc.c(),  0xfa);
        EXPECT(gbc.d(),  0x40);
        EXPECT(gbc.e(),  0x34);
        EXPECT(gbc.h(),  0x6b);
        EXPECT(gbc.l(),  0xe);
        EXPECT(gbc.sp(), 0x5bf0);
        EXPECT(gbc.pc(), 0x5358);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB BC 03E1
        gbc.setState(0xb87e, 0x819e, 0x770, 0xa36, 0xc8c4, 0xb3d5, 0x0, 0x1);
        gbc.writeMem(0xb87e, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0xd5);
        EXPECT(gbc.sp(), 0x819e);
        EXPECT(gbc.pc(), 0xb880);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb87e), 0xcb);
        EXPECT(gbc.readMem(0xb87f), 0xbc);
        // CB BC 03E2
        gbc.setState(0x3a1, 0x3568, 0xaa50, 0x90b9, 0x7427, 0xcc77, 0x1, 0x0);
        gbc.writeMem(0x3a1, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0xaa);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0x74);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0x3568);
        EXPECT(gbc.pc(), 0x3a3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB BC 03E3
        gbc.setState(0x29e8, 0xa3a8, 0x4320, 0xfafc, 0x4104, 0x6350, 0x0, 0x0);
        gbc.writeMem(0x29e8, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0x43);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0x41);
        EXPECT(gbc.e(),  0x4);
        EXPECT(gbc.h(),  0x63);
        EXPECT(gbc.l(),  0x50);
        EXPECT(gbc.sp(), 0xa3a8);
        EXPECT(gbc.pc(), 0x29ea);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB BC 03E4
        gbc.setState(0xdbb5, 0xf87c, 0xb110, 0x5736, 0x24a8, 0xd919, 0x1, 0x0);
        gbc.writeMem(0xdbb5, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0xf87c);
        EXPECT(gbc.pc(), 0xdbb7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdbb5), 0xcb);
        EXPECT(gbc.readMem(0xdbb6), 0xbc);
        // CB BC 03E5
        gbc.setState(0x6fb5, 0xc990, 0x9a90, 0xa91a, 0x818d, 0xe6fa, 0x1, 0x1);
        gbc.writeMem(0x6fb5, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0x9a);
        EXPECT(gbc.b(),  0xa9);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0x81);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0x66);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0xc990);
        EXPECT(gbc.pc(), 0x6fb7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB BC 03E6
        gbc.setState(0x980b, 0xc38f, 0xe200, 0xe96f, 0xeda9, 0x1bf3, 0x1, 0x1);
        gbc.writeMem(0x980b, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0xe9);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0xed);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0xc38f);
        EXPECT(gbc.pc(), 0x980d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x980b), 0xcb);
        EXPECT(gbc.readMem(0x980c), 0xbc);
        // CB BC 03E7
        gbc.setState(0xb6f5, 0xfc10, 0x1be0, 0xf39f, 0xee8b, 0x3fd2, 0x1, 0x0);
        gbc.writeMem(0xb6f5, { 0xcb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0xf3);
        EXPECT(gbc.c(),  0x9f);
        EXPECT(gbc.d(),  0xee);
        EXPECT(gbc.e(),  0x8b);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0xfc10);
        EXPECT(gbc.pc(), 0xb6f7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb6f5), 0xcb);
        EXPECT(gbc.readMem(0xb6f6), 0xbc);
    }
}
#endif
