    TEST(gbcemu, opcode_c1) {
        GBCEmu gbc{"", nullptr};
        uint8_t cartridge[0x8000];
        cartridge[0x149] = 0x02; // 8kb external RAM
        gbc.loadCartridge(new FlashGamePak(cartridge));
        // C1 0000
        gbc.setState(0x2a19, 0x4288, 0x3d00, 0xd678, 0xe43b, 0x8098, 0x0, 0x1);
        gbc.writeMem(0x2a19, { 0xc1 });
        gbc.writeMem(0x4288, { 0x81, 0x57 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x428a, gbc.sp());
        EXPECT(0x2a1a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C1 0001
        gbc.setState(0x580d, 0x9026, 0x35c0, 0x3ff4, 0x9a63, 0x3418, 0x1, 0x0);
        gbc.writeMem(0x580d, { 0xc1 });
        gbc.writeMem(0x9026, { 0x36, 0xb6 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x9028, gbc.sp());
        EXPECT(0x580e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x36, gbc.readMem(0x9026));
        EXPECT(0xb6, gbc.readMem(0x9027));
        // C1 0002
        gbc.setState(0x6701, 0xe10f, 0xeb0, 0xdbb, 0x2d5f, 0x966d, 0x1, 0x1);
        gbc.writeMem(0x6701, { 0xc1 });
        gbc.writeMem(0xe10f, { 0x1a, 0xa6 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0xe111, gbc.sp());
        EXPECT(0x6702, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1a, gbc.readMem(0xe10f));
        EXPECT(0xa6, gbc.readMem(0xe110));
        // C1 0004
        gbc.setState(0x6316, 0x733c, 0xed40, 0x4e66, 0xdd03, 0x8fa5, 0x0, 0x1);
        gbc.writeMem(0x6316, { 0xc1 });
        gbc.writeMem(0x733c, { 0xfe, 0x4e });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x733e, gbc.sp());
        EXPECT(0x6317, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C1 0005
        gbc.setState(0x1265, 0xb831, 0x3280, 0xfb22, 0x3b9e, 0xfea0, 0x1, 0x1);
        gbc.writeMem(0x1265, { 0xc1 });
        gbc.writeMem(0xb831, { 0x31, 0x15 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0xb833, gbc.sp());
        EXPECT(0x1266, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x31, gbc.readMem(0xb831));
        EXPECT(0x15, gbc.readMem(0xb832));
        // C1 0006
        gbc.setState(0x89da, 0x66cc, 0x5f40, 0xa762, 0xc317, 0x6041, 0x1, 0x0);
        gbc.writeMem(0x66cc, { 0x39, 0x9f });
        gbc.writeMem(0x89da, { 0xc1 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x66ce, gbc.sp());
        EXPECT(0x89db, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc1, gbc.readMem(0x89da));
        // C1 0007
        gbc.setState(0x535a, 0x5894, 0x8130, 0xcbba, 0xea39, 0xf48b, 0x0, 0x1);
        gbc.writeMem(0x535a, { 0xc1 });
        gbc.writeMem(0x5894, { 0xfa, 0x16 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x5896, gbc.sp());
        EXPECT(0x535b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C1 0008
        gbc.setState(0x31fb, 0xc49a, 0x25e0, 0xd9f4, 0x5755, 0xeb8e, 0x0, 0x0);
        gbc.writeMem(0x31fb, { 0xc1 });
        gbc.writeMem(0xc49a, { 0xb5, 0xaf });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0xc49c, gbc.sp());
        EXPECT(0x31fc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb5, gbc.readMem(0xc49a));
        EXPECT(0xaf, gbc.readMem(0xc49b));
        // C1 0009
        gbc.setState(0x4fa6, 0x15b2, 0xcab0, 0x4830, 0xe214, 0x2843, 0x0, 0x0);
        gbc.writeMem(0x15b2, { 0x5d, 0x25 });
        gbc.writeMem(0x4fa6, { 0xc1 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x15b4, gbc.sp());
        EXPECT(0x4fa7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C1 000A
        gbc.setState(0x808c, 0x8c9f, 0x94d0, 0x52d5, 0x814e, 0xb1e4, 0x0, 0x0);
        gbc.writeMem(0x808c, { 0xc1 });
        gbc.writeMem(0x8c9f, { 0xed, 0xe0 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x8ca1, gbc.sp());
        EXPECT(0x808d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc1, gbc.readMem(0x808c));
        EXPECT(0xed, gbc.readMem(0x8c9f));
        EXPECT(0xe0, gbc.readMem(0x8ca0));
        // C1 000B
        gbc.setState(0x3366, 0x88db, 0x12b0, 0x3fc1, 0x2d55, 0x4afa, 0x0, 0x0);
        gbc.writeMem(0x3366, { 0xc1 });
        gbc.writeMem(0x88db, { 0x2f, 0x3b });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0x88dd, gbc.sp());
        EXPECT(0x3367, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2f, gbc.readMem(0x88db));
        EXPECT(0x3b, gbc.readMem(0x88dc));
        // C1 000C
        gbc.setState(0x6b6b, 0xf936, 0x1140, 0xeb03, 0xf91f, 0x96ea, 0x1, 0x1);
        gbc.writeMem(0x6b6b, { 0xc1 });
        gbc.writeMem(0xf936, { 0xde, 0x26 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0xf938, gbc.sp());
        EXPECT(0x6b6c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xde, gbc.readMem(0xf936));
        EXPECT(0x26, gbc.readMem(0xf937));
        // C1 000D
        gbc.setState(0x5f5a, 0x2e38, 0x10c0, 0x368, 0x7777, 0x5340, 0x1, 0x0);
        gbc.writeMem(0x2e38, { 0xcd, 0x96 });
        gbc.writeMem(0x5f5a, { 0xc1 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x2e3a, gbc.sp());
        EXPECT(0x5f5b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C1 000E
        gbc.setState(0x4e07, 0xe10d, 0xc060, 0x652c, 0x7438, 0x3ac4, 0x1, 0x1);
        gbc.writeMem(0x4e07, { 0xc1 });
        gbc.writeMem(0xe10d, { 0xbf, 0x91 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0xe10f, gbc.sp());
        EXPECT(0x4e08, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbf, gbc.readMem(0xe10d));
        EXPECT(0x91, gbc.readMem(0xe10e));
        // C1 000F
        gbc.setState(0xed44, 0x9131, 0x9d40, 0xfbf0, 0x486, 0x983a, 0x1, 0x0);
        gbc.writeMem(0x9131, { 0xfc, 0xcc });
        gbc.writeMem(0xed44, { 0xc1 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x9133, gbc.sp());
        EXPECT(0xed45, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xfc, gbc.readMem(0x9131));
        EXPECT(0xcc, gbc.readMem(0x9132));
        EXPECT(0xc1, gbc.readMem(0xed44));
        // C1 0010
        gbc.setState(0xa876, 0x1016, 0xa640, 0x857f, 0xe05f, 0xa00e, 0x0, 0x1);
        gbc.writeMem(0x1016, { 0x2d, 0x52 });
        gbc.writeMem(0xa876, { 0xc1 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x1018, gbc.sp());
        EXPECT(0xa877, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc1, gbc.readMem(0xa876));
        // C1 0011
        gbc.setState(0x5b96, 0x12c1, 0x180, 0x373e, 0x3e87, 0xa7d4, 0x1, 0x1);
        gbc.writeMem(0x12c1, { 0x9a, 0x49 });
        gbc.writeMem(0x5b96, { 0xc1 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x12c3, gbc.sp());
        EXPECT(0x5b97, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C1 0012
        gbc.setState(0x7cc4, 0xe95d, 0x4260, 0x49d9, 0x798f, 0xb1cf, 0x1, 0x0);
        gbc.writeMem(0x7cc4, { 0xc1 });
        gbc.writeMem(0xe95d, { 0x56, 0x1a });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0xe95f, gbc.sp());
        EXPECT(0x7cc5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x56, gbc.readMem(0xe95d));
        EXPECT(0x1a, gbc.readMem(0xe95e));
        // C1 0013
        gbc.setState(0x3140, 0x69a5, 0x2060, 0x668d, 0xc6fe, 0xa2f6, 0x1, 0x1);
        gbc.writeMem(0x3140, { 0xc1 });
        gbc.writeMem(0x69a5, { 0xb2, 0x99 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x69a7, gbc.sp());
        EXPECT(0x3141, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C1 0014
        gbc.setState(0x435b, 0x9b32, 0x2b00, 0x8619, 0x82ba, 0x484e, 0x0, 0x1);
        gbc.writeMem(0x435b, { 0xc1 });
        gbc.writeMem(0x9b32, { 0xb9, 0x89 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x9b34, gbc.sp());
        EXPECT(0x435c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb9, gbc.readMem(0x9b32));
        EXPECT(0x89, gbc.readMem(0x9b33));
        // C1 0015
        gbc.setState(0xac22, 0x4c6c, 0x9310, 0x5e7f, 0x2de6, 0x898a, 0x1, 0x1);
        gbc.writeMem(0x4c6c, { 0xcb, 0x2f });
        gbc.writeMem(0xac22, { 0xc1 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x4c6e, gbc.sp());
        EXPECT(0xac23, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc1, gbc.readMem(0xac22));
        // C1 0016
        gbc.setState(0x3d17, 0x2ca5, 0x93e0, 0x304c, 0xe1bd, 0xe203, 0x1, 0x0);
        gbc.writeMem(0x2ca5, { 0xe3, 0x8d });
        gbc.writeMem(0x3d17, { 0xc1 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x2ca7, gbc.sp());
        EXPECT(0x3d18, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C1 0017
        gbc.setState(0xcc29, 0x4146, 0xca00, 0x59fd, 0x70e8, 0xdb8d, 0x1, 0x1);
        gbc.writeMem(0x4146, { 0x2d, 0x5a });
        gbc.writeMem(0xcc29, { 0xc1 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x4148, gbc.sp());
        EXPECT(0xcc2a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc1, gbc.readMem(0xcc29));
        // C1 0018
        gbc.setState(0x4368, 0x9de8, 0xac50, 0xc65a, 0x4cd, 0x42e, 0x1, 0x0);
        gbc.writeMem(0x4368, { 0xc1 });
        gbc.writeMem(0x9de8, { 0x10, 0x53 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x9dea, gbc.sp());
        EXPECT(0x4369, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x10, gbc.readMem(0x9de8));
        EXPECT(0x53, gbc.readMem(0x9de9));
        // C1 0019
        gbc.setState(0x16c3, 0xb6fd, 0xced0, 0xb267, 0x203f, 0x4bc7, 0x1, 0x1);
        gbc.writeMem(0x16c3, { 0xc1 });
        gbc.writeMem(0xb6fd, { 0x19, 0x66 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0xb6ff, gbc.sp());
        EXPECT(0x16c4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x19, gbc.readMem(0xb6fd));
        EXPECT(0x66, gbc.readMem(0xb6fe));
        // C1 001A
        gbc.setState(0xc66c, 0x3685, 0x5bb0, 0x417b, 0x8ca7, 0xfdb5, 0x0, 0x0);
        gbc.writeMem(0x3685, { 0x87, 0x16 });
        gbc.writeMem(0xc66c, { 0xc1 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x3687, gbc.sp());
        EXPECT(0xc66d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc1, gbc.readMem(0xc66c));
        // C1 001B
        gbc.setState(0x75a3, 0xdbdb, 0xef0, 0xaa55, 0x1ba3, 0xf792, 0x1, 0x0);
        gbc.writeMem(0x75a3, { 0xc1 });
        gbc.writeMem(0xdbdb, { 0x97, 0x72 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0xdbdd, gbc.sp());
        EXPECT(0x75a4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x97, gbc.readMem(0xdbdb));
        EXPECT(0x72, gbc.readMem(0xdbdc));
        // C1 001C
        gbc.setState(0x6c30, 0x15dc, 0x390, 0xf0cc, 0x79b, 0xac73, 0x0, 0x1);
        gbc.writeMem(0x15dc, { 0xe9, 0xf1 });
        gbc.writeMem(0x6c30, { 0xc1 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x15de, gbc.sp());
        EXPECT(0x6c31, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C1 001D
        gbc.setState(0x20e9, 0x940e, 0x20b0, 0xf34a, 0xed73, 0x758c, 0x1, 0x1);
        gbc.writeMem(0x20e9, { 0xc1 });
        gbc.writeMem(0x940e, { 0xaf, 0xad });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x9410, gbc.sp());
        EXPECT(0x20ea, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xaf, gbc.readMem(0x940e));
        EXPECT(0xad, gbc.readMem(0x940f));
        // C1 001E
        gbc.setState(0x6b3e, 0x5ed9, 0x5340, 0xf5fb, 0xc070, 0x772b, 0x1, 0x0);
        gbc.writeMem(0x5ed9, { 0x84, 0x31 });
        gbc.writeMem(0x6b3e, { 0xc1 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x5edb, gbc.sp());
        EXPECT(0x6b3f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C1 0020
        gbc.setState(0x6405, 0xe934, 0x8dd0, 0xa8ed, 0xec0b, 0xc7fa, 0x0, 0x0);
        gbc.writeMem(0x6405, { 0xc1 });
        gbc.writeMem(0xe934, { 0x1d, 0xc8 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0xe936, gbc.sp());
        EXPECT(0x6406, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1d, gbc.readMem(0xe934));
        EXPECT(0xc8, gbc.readMem(0xe935));
        // C1 0021
        gbc.setState(0x4697, 0xe526, 0xfd60, 0x2fe5, 0x3e66, 0x2bb, 0x0, 0x1);
        gbc.writeMem(0x4697, { 0xc1 });
        gbc.writeMem(0xe526, { 0xe7, 0x11 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0xe528, gbc.sp());
        EXPECT(0x4698, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe7, gbc.readMem(0xe526));
        EXPECT(0x11, gbc.readMem(0xe527));
        // C1 0022
        gbc.setState(0x6be5, 0x238d, 0xaf40, 0x69ce, 0x99ac, 0x68ad, 0x0, 0x1);
        gbc.writeMem(0x238d, { 0xbd, 0x3c });
        gbc.writeMem(0x6be5, { 0xc1 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x238f, gbc.sp());
        EXPECT(0x6be6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C1 0023
        gbc.setState(0xccd2, 0xd358, 0x9190, 0xbad, 0x5406, 0x8731, 0x1, 0x0);
        gbc.writeMem(0xccd2, { 0xc1 });
        gbc.writeMem(0xd358, { 0x7d, 0xbe });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0xd35a, gbc.sp());
        EXPECT(0xccd3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc1, gbc.readMem(0xccd2));
        EXPECT(0x7d, gbc.readMem(0xd358));
        EXPECT(0xbe, gbc.readMem(0xd359));
        // C1 0024
        gbc.setState(0x74ed, 0x672a, 0xd110, 0x2c58, 0xd713, 0x60f, 0x1, 0x0);
        gbc.writeMem(0x672a, { 0x10, 0xb0 });
        gbc.writeMem(0x74ed, { 0xc1 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x672c, gbc.sp());
        EXPECT(0x74ee, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C1 0025
        gbc.setState(0x5a04, 0x7f85, 0x3700, 0x8fb5, 0xfa25, 0x102d, 0x1, 0x0);
        gbc.writeMem(0x5a04, { 0xc1 });
        gbc.writeMem(0x7f85, { 0x8f, 0xbd });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x7f87, gbc.sp());
        EXPECT(0x5a05, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C1 0026
        gbc.setState(0xa229, 0x4646, 0x5220, 0x536a, 0xe08d, 0x6440, 0x1, 0x0);
        gbc.writeMem(0x4646, { 0xce, 0x93 });
        gbc.writeMem(0xa229, { 0xc1 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x4648, gbc.sp());
        EXPECT(0xa22a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc1, gbc.readMem(0xa229));
        // C1 0027
        gbc.setState(0x7a4b, 0x98cf, 0xab80, 0xe97, 0x4d17, 0xecda, 0x0, 0x1);
        gbc.writeMem(0x7a4b, { 0xc1 });
        gbc.writeMem(0x98cf, { 0x8b, 0xaf });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x98d1, gbc.sp());
        EXPECT(0x7a4c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8b, gbc.readMem(0x98cf));
        EXPECT(0xaf, gbc.readMem(0x98d0));
        // C1 0028
        gbc.setState(0xaeed, 0xed3a, 0x6fe0, 0x7deb, 0x5757, 0xba65, 0x0, 0x0);
        gbc.writeMem(0xaeed, { 0xc1 });
        gbc.writeMem(0xed3a, { 0x7c, 0x33 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0xed3c, gbc.sp());
        EXPECT(0xaeee, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc1, gbc.readMem(0xaeed));
        EXPECT(0x7c, gbc.readMem(0xed3a));
        EXPECT(0x33, gbc.readMem(0xed3b));
        // C1 0029
        gbc.setState(0x2ce3, 0x4cff, 0x5bd0, 0x5498, 0xbbac, 0x4365, 0x1, 0x1);
        gbc.writeMem(0x2ce3, { 0xc1 });
        gbc.writeMem(0x4cff, { 0xc5, 0xaf });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x4d01, gbc.sp());
        EXPECT(0x2ce4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C1 002A
        gbc.setState(0xe7a0, 0xcaec, 0x6f90, 0x6d0a, 0xdba4, 0x708f, 0x0, 0x0);
        gbc.writeMem(0xcaec, { 0xe6, 0x15 });
        gbc.writeMem(0xe7a0, { 0xc1 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0xcaee, gbc.sp());
        EXPECT(0xe7a1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe6, gbc.readMem(0xcaec));
        EXPECT(0x15, gbc.readMem(0xcaed));
        EXPECT(0xc1, gbc.readMem(0xe7a0));
        // C1 002B
        gbc.setState(0xaa81, 0xd68c, 0xdfd0, 0xea30, 0xaa71, 0xc759, 0x1, 0x1);
        gbc.writeMem(0xaa81, { 0xc1 });
        gbc.writeMem(0xd68c, { 0x41, 0xb0 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0xd68e, gbc.sp());
        EXPECT(0xaa82, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc1, gbc.readMem(0xaa81));
        EXPECT(0x41, gbc.readMem(0xd68c));
        EXPECT(0xb0, gbc.readMem(0xd68d));
        // C1 002D
        gbc.setState(0x8053, 0xe666, 0xd3e0, 0x62f1, 0x1013, 0xc358, 0x1, 0x0);
        gbc.writeMem(0x8053, { 0xc1 });
        gbc.writeMem(0xe666, { 0xe7, 0xa6 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0xe668, gbc.sp());
        EXPECT(0x8054, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc1, gbc.readMem(0x8053));
        EXPECT(0xe7, gbc.readMem(0xe666));
        EXPECT(0xa6, gbc.readMem(0xe667));
        // C1 002E
        gbc.setState(0xeff0, 0x2253, 0xc210, 0x404d, 0xd2e0, 0x3d4d, 0x0, 0x1);
        gbc.writeMem(0x2253, { 0x8f, 0xb2 });
        gbc.writeMem(0xeff0, { 0xc1 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x2255, gbc.sp());
        EXPECT(0xeff1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc1, gbc.readMem(0xeff0));
        // C1 002F
        gbc.setState(0x84c0, 0xd62, 0x16c0, 0x3705, 0x8743, 0x86d1, 0x1, 0x1);
        gbc.writeMem(0xd62, { 0xff, 0xe7 });
        gbc.writeMem(0x84c0, { 0xc1 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0xd64, gbc.sp());
        EXPECT(0x84c1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc1, gbc.readMem(0x84c0));
        // C1 0030
        gbc.setState(0xc90d, 0x5e8, 0x74f0, 0xf6d2, 0xc158, 0x23c3, 0x1, 0x0);
        gbc.writeMem(0x5e8, { 0x16, 0x80 });
        gbc.writeMem(0xc90d, { 0xc1 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x5ea, gbc.sp());
        EXPECT(0xc90e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc1, gbc.readMem(0xc90d));
        // C1 0031
        gbc.setState(0x5b15, 0xee21, 0xba80, 0x85da, 0x16b8, 0x5507, 0x0, 0x1);
        gbc.writeMem(0x5b15, { 0xc1 });
        gbc.writeMem(0xee21, { 0xd, 0xc9 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0xee23, gbc.sp());
        EXPECT(0x5b16, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd, gbc.readMem(0xee21));
        EXPECT(0xc9, gbc.readMem(0xee22));
        // C1 0032
        gbc.setState(0x19fc, 0x6fcf, 0xa7e0, 0x3a27, 0x945b, 0xf187, 0x1, 0x0);
        gbc.writeMem(0x19fc, { 0xc1 });
        gbc.writeMem(0x6fcf, { 0x2f, 0x18 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x6fd1, gbc.sp());
        EXPECT(0x19fd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C1 0033
        gbc.setState(0x35c0, 0xdbab, 0x470, 0xe8b2, 0xaa00, 0x6209, 0x1, 0x1);
        gbc.writeMem(0x35c0, { 0xc1 });
        gbc.writeMem(0xdbab, { 0x46, 0x4b });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0xdbad, gbc.sp());
        EXPECT(0x35c1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x46, gbc.readMem(0xdbab));
        EXPECT(0x4b, gbc.readMem(0xdbac));
        // C1 0034
        gbc.setState(0x5d9b, 0x48cb, 0x7d60, 0x1e39, 0xbb04, 0x2191, 0x1, 0x1);
        gbc.writeMem(0x48cb, { 0x2, 0x2 });
        gbc.writeMem(0x5d9b, { 0xc1 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x48cd, gbc.sp());
        EXPECT(0x5d9c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C1 0035
        gbc.setState(0xbaa0, 0x9165, 0x2180, 0xe672, 0xb483, 0x8593, 0x0, 0x1);
        gbc.writeMem(0x9165, { 0x45, 0xfc });
        gbc.writeMem(0xbaa0, { 0xc1 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0x9167, gbc.sp());
        EXPECT(0xbaa1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x45, gbc.readMem(0x9165));
        EXPECT(0xfc, gbc.readMem(0x9166));
        EXPECT(0xc1, gbc.readMem(0xbaa0));
        // C1 0037
        gbc.setState(0xb258, 0x5c6b, 0x7b00, 0x4da5, 0x296c, 0xccc1, 0x1, 0x1);
        gbc.writeMem(0x5c6b, { 0xb3, 0x57 });
        gbc.writeMem(0xb258, { 0xc1 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x5c6d, gbc.sp());
        EXPECT(0xb259, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc1, gbc.readMem(0xb258));
        // C1 0038
        gbc.setState(0xba31, 0xc879, 0xd020, 0xa8a0, 0xeeb4, 0xba7b, 0x0, 0x0);
        gbc.writeMem(0xba31, { 0xc1 });
        gbc.writeMem(0xc879, { 0x27, 0xe0 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0xc87b, gbc.sp());
        EXPECT(0xba32, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc1, gbc.readMem(0xba31));
        EXPECT(0x27, gbc.readMem(0xc879));
        EXPECT(0xe0, gbc.readMem(0xc87a));
        // C1 0039
        gbc.setState(0x626e, 0xcff4, 0xddc0, 0x664e, 0x572d, 0x110a, 0x0, 0x0);
        gbc.writeMem(0x626e, { 0xc1 });
        gbc.writeMem(0xcff4, { 0x93, 0x90 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0xcff6, gbc.sp());
        EXPECT(0x626f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x93, gbc.readMem(0xcff4));
        EXPECT(0x90, gbc.readMem(0xcff5));
        // C1 003A
        gbc.setState(0x3aaa, 0xfebf, 0xf40, 0xa58, 0x476, 0x79a3, 0x0, 0x0);
        gbc.writeMem(0x3aaa, { 0xc1 });
        gbc.writeMem(0xfebf, { 0xfa, 0xf });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0xfec1, gbc.sp());
        EXPECT(0x3aab, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xfa, gbc.readMem(0xfebf));
        EXPECT(0xf, gbc.readMem(0xfec0));
        // C1 003C
        gbc.setState(0x8eef, 0x23c9, 0x4a70, 0x2c30, 0xab27, 0x6b5c, 0x1, 0x0);
        gbc.writeMem(0x23c9, { 0x4f, 0x77 });
        gbc.writeMem(0x8eef, { 0xc1 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x23cb, gbc.sp());
        EXPECT(0x8ef0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc1, gbc.readMem(0x8eef));
        // C1 003D
        gbc.setState(0x6d42, 0x1815, 0x7450, 0x8d01, 0x4ed4, 0x982c, 0x0, 0x0);
        gbc.writeMem(0x1815, { 0x59, 0x33 });
        gbc.writeMem(0x6d42, { 0xc1 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x1817, gbc.sp());
        EXPECT(0x6d43, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C1 003E
        gbc.setState(0x9b09, 0x14e2, 0xa320, 0x5af8, 0xcb7b, 0xf399, 0x0, 0x1);
        gbc.writeMem(0x14e2, { 0x16, 0xf7 });
        gbc.writeMem(0x9b09, { 0xc1 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x14e4, gbc.sp());
        EXPECT(0x9b0a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc1, gbc.readMem(0x9b09));
        // C1 003F
        gbc.setState(0xaa1, 0xd8fa, 0xa60, 0x14e9, 0x87b6, 0x94c3, 0x0, 0x1);
        gbc.writeMem(0xaa1, { 0xc1 });
        gbc.writeMem(0xd8fa, { 0xf0, 0x14 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0xd8fc, gbc.sp());
        EXPECT(0xaa2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf0, gbc.readMem(0xd8fa));
        EXPECT(0x14, gbc.readMem(0xd8fb));
        // C1 0040
        gbc.setState(0xad9b, 0x45f5, 0x89f0, 0x11c9, 0xf978, 0xde7, 0x0, 0x1);
        gbc.writeMem(0x45f5, { 0x5b, 0x4b });
        gbc.writeMem(0xad9b, { 0xc1 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x45f7, gbc.sp());
        EXPECT(0xad9c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc1, gbc.readMem(0xad9b));
        // C1 0041
        gbc.setState(0x79d0, 0x149f, 0x1510, 0x820c, 0xf551, 0x83da, 0x1, 0x0);
        gbc.writeMem(0x149f, { 0x26, 0xfb });
        gbc.writeMem(0x79d0, { 0xc1 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x14a1, gbc.sp());
        EXPECT(0x79d1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C1 0042
        gbc.setState(0x6e76, 0x4b67, 0xde30, 0xc967, 0x4267, 0xb828, 0x1, 0x0);
        gbc.writeMem(0x4b67, { 0x4e, 0xc1 });
        gbc.writeMem(0x6e76, { 0xc1 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x4b69, gbc.sp());
        EXPECT(0x6e77, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C1 0043
        gbc.setState(0xbe04, 0x2d60, 0xf7c0, 0xe472, 0x1a37, 0x8145, 0x0, 0x1);
        gbc.writeMem(0x2d60, { 0x32, 0x6b });
        gbc.writeMem(0xbe04, { 0xc1 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x2d62, gbc.sp());
        EXPECT(0xbe05, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc1, gbc.readMem(0xbe04));
        // C1 0044
        gbc.setState(0xbc64, 0x1b28, 0x8f80, 0x273a, 0x9bbe, 0x370d, 0x0, 0x0);
        gbc.writeMem(0x1b28, { 0x0, 0xea });
        gbc.writeMem(0xbc64, { 0xc1 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x1b2a, gbc.sp());
        EXPECT(0xbc65, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc1, gbc.readMem(0xbc64));
        // C1 0045
        gbc.setState(0xb5fc, 0xca76, 0xc680, 0x1f1a, 0x7730, 0x43cd, 0x1, 0x0);
        gbc.writeMem(0xb5fc, { 0xc1 });
        gbc.writeMem(0xca76, { 0x7, 0xfd });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0xca78, gbc.sp());
        EXPECT(0xb5fd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc1, gbc.readMem(0xb5fc));
        EXPECT(0x7, gbc.readMem(0xca76));
        EXPECT(0xfd, gbc.readMem(0xca77));
        // C1 0047
        gbc.setState(0xb82f, 0xf021, 0xd620, 0xd736, 0x358a, 0x5361, 0x0, 0x1);
        gbc.writeMem(0xb82f, { 0xc1 });
        gbc.writeMem(0xf021, { 0xa, 0xa3 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0xf023, gbc.sp());
        EXPECT(0xb830, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc1, gbc.readMem(0xb82f));
        EXPECT(0xa, gbc.readMem(0xf021));
        EXPECT(0xa3, gbc.readMem(0xf022));
        // C1 0048
        gbc.setState(0xba5, 0x346d, 0x2210, 0x8112, 0x262e, 0x716b, 0x0, 0x1);
        gbc.writeMem(0xba5, { 0xc1 });
        gbc.writeMem(0x346d, { 0xfc, 0xc6 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x346f, gbc.sp());
        EXPECT(0xba6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C1 0049
        gbc.setState(0xe598, 0xd94d, 0xd980, 0x88, 0x296e, 0x1924, 0x0, 0x1);
        gbc.writeMem(0xd94d, { 0xe1, 0xef });
        gbc.writeMem(0xe598, { 0xc1 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0xd94f, gbc.sp());
        EXPECT(0xe599, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe1, gbc.readMem(0xd94d));
        EXPECT(0xef, gbc.readMem(0xd94e));
        EXPECT(0xc1, gbc.readMem(0xe598));
        // C1 004A
        gbc.setState(0x2ecb, 0x895, 0x63f0, 0x89b1, 0xacde, 0x2185, 0x1, 0x0);
        gbc.writeMem(0x895, { 0xff, 0xdb });
        gbc.writeMem(0x2ecb, { 0xc1 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x897, gbc.sp());
        EXPECT(0x2ecc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C1 004B
        gbc.setState(0x5dbc, 0x31c5, 0xc350, 0xccf0, 0xdc0c, 0x4066, 0x1, 0x0);
        gbc.writeMem(0x31c5, { 0xe5, 0x4b });
        gbc.writeMem(0x5dbc, { 0xc1 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x31c7, gbc.sp());
        EXPECT(0x5dbd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C1 004C
        gbc.setState(0xe677, 0x81a, 0xfde0, 0xf003, 0x694a, 0x620f, 0x0, 0x1);
        gbc.writeMem(0x81a, { 0xe1, 0xab });
        gbc.writeMem(0xe677, { 0xc1 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x81c, gbc.sp());
        EXPECT(0xe678, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc1, gbc.readMem(0xe677));
        // C1 004D
        gbc.setState(0xea82, 0xfd46, 0xe360, 0x4507, 0x21ca, 0xcd78, 0x0, 0x1);
        gbc.writeMem(0xea82, { 0xc1 });
        gbc.writeMem(0xfd46, { 0xfa, 0xaf });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0xfd48, gbc.sp());
        EXPECT(0xea83, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc1, gbc.readMem(0xea82));
        EXPECT(0xfa, gbc.readMem(0xfd46));
        EXPECT(0xaf, gbc.readMem(0xfd47));
        // C1 004E
        gbc.setState(0x31c9, 0x4547, 0x2330, 0x2e59, 0x5152, 0x688a, 0x0, 0x1);
        gbc.writeMem(0x31c9, { 0xc1 });
        gbc.writeMem(0x4547, { 0xf3, 0x56 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x4549, gbc.sp());
        EXPECT(0x31ca, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C1 004F
        gbc.setState(0xde30, 0x8378, 0xe7d0, 0xa406, 0x65f4, 0x296f, 0x0, 0x1);
        gbc.writeMem(0x8378, { 0xe7, 0xaa });
        gbc.writeMem(0xde30, { 0xc1 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x837a, gbc.sp());
        EXPECT(0xde31, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe7, gbc.readMem(0x8378));
        EXPECT(0xaa, gbc.readMem(0x8379));
        EXPECT(0xc1, gbc.readMem(0xde30));
        // C1 0050
        gbc.setState(0x956, 0x550b, 0xf0a0, 0x745e, 0x557f, 0xfa4b, 0x0, 0x1);
        gbc.writeMem(0x956, { 0xc1 });
        gbc.writeMem(0x550b, { 0xb8, 0x9f });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x550d, gbc.sp());
        EXPECT(0x957, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C1 0051
        gbc.setState(0x9a63, 0x2c45, 0x1db0, 0x6274, 0x8248, 0x20a1, 0x1, 0x0);
        gbc.writeMem(0x2c45, { 0x8b, 0xa9 });
        gbc.writeMem(0x9a63, { 0xc1 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x2c47, gbc.sp());
        EXPECT(0x9a64, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc1, gbc.readMem(0x9a63));
        // C1 0052
        gbc.setState(0x7ea9, 0x3a4e, 0x910, 0xd10f, 0x1fd7, 0x3657, 0x1, 0x1);
        gbc.writeMem(0x3a4e, { 0xc1, 0xaa });
        gbc.writeMem(0x7ea9, { 0xc1 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x3a50, gbc.sp());
        EXPECT(0x7eaa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C1 0053
        gbc.setState(0x9046, 0x42e6, 0x8c00, 0x95e7, 0xeef3, 0x13ad, 0x1, 0x0);
        gbc.writeMem(0x42e6, { 0x5e, 0x13 });
        gbc.writeMem(0x9046, { 0xc1 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x42e8, gbc.sp());
        EXPECT(0x9047, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc1, gbc.readMem(0x9046));
        // C1 0054
        gbc.setState(0x7fed, 0x1a63, 0xb530, 0xd724, 0x2d4d, 0x4746, 0x0, 0x0);
        gbc.writeMem(0x1a63, { 0x25, 0xa3 });
        gbc.writeMem(0x7fed, { 0xc1 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x1a65, gbc.sp());
        EXPECT(0x7fee, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C1 0055
        gbc.setState(0xba4a, 0x16d2, 0xb680, 0x9d09, 0x4f6e, 0x231b, 0x1, 0x1);
        gbc.writeMem(0x16d2, { 0x69, 0xee });
        gbc.writeMem(0xba4a, { 0xc1 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x16d4, gbc.sp());
        EXPECT(0xba4b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc1, gbc.readMem(0xba4a));
        // C1 0056
        gbc.setState(0xc1ab, 0xbbf8, 0xd0e0, 0x74a5, 0xc20f, 0xb521, 0x1, 0x0);
        gbc.writeMem(0xbbf8, { 0xb1, 0x9e });
        gbc.writeMem(0xc1ab, { 0xc1 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0xbbfa, gbc.sp());
        EXPECT(0xc1ac, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb1, gbc.readMem(0xbbf8));
        EXPECT(0x9e, gbc.readMem(0xbbf9));
        EXPECT(0xc1, gbc.readMem(0xc1ab));
        // C1 0057
        gbc.setState(0x94ea, 0x60e, 0xbf80, 0x605f, 0xf78d, 0x38b3, 0x1, 0x0);
        gbc.writeMem(0x60e, { 0x2d, 0x88 });
        gbc.writeMem(0x94ea, { 0xc1 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x610, gbc.sp());
        EXPECT(0x94eb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc1, gbc.readMem(0x94ea));
        // C1 0058
        gbc.setState(0x40a5, 0x1277, 0x1960, 0x4b8a, 0xaa4c, 0x9338, 0x0, 0x0);
        gbc.writeMem(0x1277, { 0x5c, 0xfe });
        gbc.writeMem(0x40a5, { 0xc1 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x1279, gbc.sp());
        EXPECT(0x40a6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C1 0059
        gbc.setState(0x84e1, 0x597c, 0x2ad0, 0x9cc9, 0x8774, 0xcec, 0x1, 0x1);
        gbc.writeMem(0x597c, { 0x8, 0xf2 });
        gbc.writeMem(0x84e1, { 0xc1 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x597e, gbc.sp());
        EXPECT(0x84e2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc1, gbc.readMem(0x84e1));
        // C1 005A
        gbc.setState(0x8ae3, 0x51fc, 0x9140, 0x611d, 0xe76c, 0x74d9, 0x1, 0x1);
        gbc.writeMem(0x51fc, { 0x3d, 0x9b });
        gbc.writeMem(0x8ae3, { 0xc1 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x51fe, gbc.sp());
        EXPECT(0x8ae4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc1, gbc.readMem(0x8ae3));
        // C1 005B
        gbc.setState(0xab0f, 0xb070, 0x3c20, 0x9f6d, 0x68d0, 0x6378, 0x0, 0x1);
        gbc.writeMem(0xab0f, { 0xc1 });
        gbc.writeMem(0xb070, { 0xba, 0xfa });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0xb072, gbc.sp());
        EXPECT(0xab10, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc1, gbc.readMem(0xab0f));
        EXPECT(0xba, gbc.readMem(0xb070));
        EXPECT(0xfa, gbc.readMem(0xb071));
        // C1 005C
        gbc.setState(0xd66f, 0x5227, 0x25e0, 0xb834, 0xa0ee, 0xe04b, 0x1, 0x0);
        gbc.writeMem(0x5227, { 0xb2, 0x4a });
        gbc.writeMem(0xd66f, { 0xc1 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x5229, gbc.sp());
        EXPECT(0xd670, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc1, gbc.readMem(0xd66f));
        // C1 005E
        gbc.setState(0x6458, 0x756a, 0xc7e0, 0x9043, 0x25d0, 0x3bfd, 0x1, 0x1);
        gbc.writeMem(0x6458, { 0xc1 });
        gbc.writeMem(0x756a, { 0x56, 0xd5 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x756c, gbc.sp());
        EXPECT(0x6459, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C1 005F
        gbc.setState(0x569e, 0xff5a, 0x1240, 0x4c8c, 0x5dad, 0x234c, 0x1, 0x0);
        gbc.writeMem(0x569e, { 0xc1 });
        gbc.writeMem(0xff5a, { 0x6a, 0xff });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0xff5c, gbc.sp());
        EXPECT(0x569f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6a, gbc.readMem(0xff5a));
        EXPECT(0xff, gbc.readMem(0xff5b));
        // C1 0060
        gbc.setState(0x99e4, 0x9c53, 0x3f60, 0xc21c, 0xe1c2, 0xbbfe, 0x1, 0x0);
        gbc.writeMem(0x99e4, { 0xc1 });
        gbc.writeMem(0x9c53, { 0x89, 0x62 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x9c55, gbc.sp());
        EXPECT(0x99e5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc1, gbc.readMem(0x99e4));
        EXPECT(0x89, gbc.readMem(0x9c53));
        EXPECT(0x62, gbc.readMem(0x9c54));
        // C1 0061
        gbc.setState(0xba63, 0x9a0a, 0xe690, 0x8d26, 0xb6fd, 0xf1ac, 0x1, 0x1);
        gbc.writeMem(0x9a0a, { 0x75, 0x47 });
        gbc.writeMem(0xba63, { 0xc1 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x9a0c, gbc.sp());
        EXPECT(0xba64, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x75, gbc.readMem(0x9a0a));
        EXPECT(0x47, gbc.readMem(0x9a0b));
        EXPECT(0xc1, gbc.readMem(0xba63));
        // C1 0062
        gbc.setState(0x5f67, 0xfdd9, 0x7530, 0x1f8c, 0x7454, 0x1ae3, 0x1, 0x1);
        gbc.writeMem(0x5f67, { 0xc1 });
        gbc.writeMem(0xfdd9, { 0xe0, 0xd3 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0xfddb, gbc.sp());
        EXPECT(0x5f68, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe0, gbc.readMem(0xfdd9));
        EXPECT(0xd3, gbc.readMem(0xfdda));
        // C1 0063
        gbc.setState(0x4e7e, 0x19bb, 0x4890, 0x4af3, 0x5fe, 0x6420, 0x1, 0x0);
        gbc.writeMem(0x19bb, { 0x94, 0xd3 });
        gbc.writeMem(0x4e7e, { 0xc1 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x19bd, gbc.sp());
        EXPECT(0x4e7f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C1 0064
        gbc.setState(0x101, 0xbff, 0x8580, 0x3f06, 0x1f5f, 0x7980, 0x1, 0x0);
        gbc.writeMem(0x101, { 0xc1 });
        gbc.writeMem(0xbff, { 0xc3, 0x63 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0xc01, gbc.sp());
        EXPECT(0x102, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C1 0065
        gbc.setState(0x3792, 0x78b6, 0xf570, 0x3b7f, 0xb257, 0x4835, 0x0, 0x0);
        gbc.writeMem(0x3792, { 0xc1 });
        gbc.writeMem(0x78b6, { 0x17, 0xd2 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x78b8, gbc.sp());
        EXPECT(0x3793, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C1 0066
        gbc.setState(0x3672, 0xbfff, 0xc790, 0x7390, 0xc089, 0xca12, 0x1, 0x0);
        gbc.writeMem(0x3672, { 0xc1 });
        gbc.writeMem(0xbfff, { 0x41, 0xd1 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0xc001, gbc.sp());
        EXPECT(0x3673, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x41, gbc.readMem(0xbfff));
        EXPECT(0xd1, gbc.readMem(0xc000));
        // C1 0067
        gbc.setState(0x41a, 0x8a94, 0x4ac0, 0xfb3f, 0xf801, 0x2ceb, 0x1, 0x1);
        gbc.writeMem(0x41a, { 0xc1 });
        gbc.writeMem(0x8a94, { 0x12, 0x2e });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x8a96, gbc.sp());
        EXPECT(0x41b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x12, gbc.readMem(0x8a94));
        EXPECT(0x2e, gbc.readMem(0x8a95));
        // C1 0068
        gbc.setState(0xad9f, 0x60ea, 0x800, 0xcf90, 0x473f, 0x8997, 0x1, 0x0);
        gbc.writeMem(0x60ea, { 0xa3, 0xa2 });
        gbc.writeMem(0xad9f, { 0xc1 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0x60ec, gbc.sp());
        EXPECT(0xada0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc1, gbc.readMem(0xad9f));
        // C1 0069
        gbc.setState(0x646c, 0xa966, 0x4590, 0x5086, 0xa2b6, 0x379f, 0x1, 0x0);
        gbc.writeMem(0x646c, { 0xc1 });
        gbc.writeMem(0xa966, { 0x33, 0x8 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0xa968, gbc.sp());
        EXPECT(0x646d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x33, gbc.readMem(0xa966));
        EXPECT(0x8, gbc.readMem(0xa967));
        // C1 006A
        gbc.setState(0x1461, 0xc497, 0x3540, 0x381a, 0xcf57, 0x7621, 0x1, 0x0);
        gbc.writeMem(0x1461, { 0xc1 });
        gbc.writeMem(0xc497, { 0x7c, 0x3c });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0xc499, gbc.sp());
        EXPECT(0x1462, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7c, gbc.readMem(0xc497));
        EXPECT(0x3c, gbc.readMem(0xc498));
        // C1 006B
        gbc.setState(0x858d, 0x29de, 0xc980, 0x59e2, 0xe35, 0x9a3, 0x0, 0x1);
        gbc.writeMem(0x29de, { 0xe0, 0x11 });
        gbc.writeMem(0x858d, { 0xc1 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0x29e0, gbc.sp());
        EXPECT(0x858e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc1, gbc.readMem(0x858d));
        // C1 006C
        gbc.setState(0xbeb6, 0xdefc, 0xae00, 0x3ee, 0x5869, 0xab56, 0x1, 0x1);
        gbc.writeMem(0xbeb6, { 0xc1 });
        gbc.writeMem(0xdefc, { 0xba, 0xe0 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0xdefe, gbc.sp());
        EXPECT(0xbeb7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc1, gbc.readMem(0xbeb6));
        EXPECT(0xba, gbc.readMem(0xdefc));
        EXPECT(0xe0, gbc.readMem(0xdefd));
        // C1 006E
        gbc.setState(0x36ee, 0x7221, 0x1200, 0xf1f9, 0x5a66, 0x4924, 0x0, 0x0);
        gbc.writeMem(0x36ee, { 0xc1 });
        gbc.writeMem(0x7221, { 0x70, 0x15 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x7223, gbc.sp());
        EXPECT(0x36ef, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C1 006F
        gbc.setState(0x9fbc, 0x747b, 0xf6c0, 0xb3e8, 0xb803, 0x8380, 0x0, 0x0);
        gbc.writeMem(0x747b, { 0xf9, 0x54 });
        gbc.writeMem(0x9fbc, { 0xc1 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x747d, gbc.sp());
        EXPECT(0x9fbd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc1, gbc.readMem(0x9fbc));
        // C1 0070
        gbc.setState(0xd34f, 0x65ae, 0xe840, 0x142a, 0xdbb3, 0x2e9, 0x0, 0x0);
        gbc.writeMem(0x65ae, { 0xa4, 0x20 });
        gbc.writeMem(0xd34f, { 0xc1 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x65b0, gbc.sp());
        EXPECT(0xd350, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc1, gbc.readMem(0xd34f));
        // C1 0071
        gbc.setState(0x28ca, 0x8f91, 0x1a80, 0x16a0, 0x4afe, 0xb837, 0x0, 0x1);
        gbc.writeMem(0x28ca, { 0xc1 });
        gbc.writeMem(0x8f91, { 0x9a, 0x5f });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x8f93, gbc.sp());
        EXPECT(0x28cb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9a, gbc.readMem(0x8f91));
        EXPECT(0x5f, gbc.readMem(0x8f92));
        // C1 0072
        gbc.setState(0x54c5, 0xcd51, 0x31d0, 0x4222, 0xc5bf, 0x9f7e, 0x1, 0x1);
        gbc.writeMem(0x54c5, { 0xc1 });
        gbc.writeMem(0xcd51, { 0xf, 0x36 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0xcd53, gbc.sp());
        EXPECT(0x54c6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf, gbc.readMem(0xcd51));
        EXPECT(0x36, gbc.readMem(0xcd52));
        // C1 0073
        gbc.setState(0x821d, 0x5882, 0x4170, 0xc2d6, 0x3f24, 0xde4a, 0x0, 0x0);
        gbc.writeMem(0x5882, { 0x82, 0x9e });
        gbc.writeMem(0x821d, { 0xc1 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x5884, gbc.sp());
        EXPECT(0x821e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc1, gbc.readMem(0x821d));
        // C1 0074
        gbc.setState(0x9649, 0xd43f, 0x5610, 0xce30, 0x9406, 0xd316, 0x1, 0x1);
        gbc.writeMem(0x9649, { 0xc1 });
        gbc.writeMem(0xd43f, { 0x84, 0x27 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0xd441, gbc.sp());
        EXPECT(0x964a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc1, gbc.readMem(0x9649));
        EXPECT(0x84, gbc.readMem(0xd43f));
        EXPECT(0x27, gbc.readMem(0xd440));
        // C1 0075
        gbc.setState(0x3b5b, 0xefac, 0x6970, 0x48f2, 0x6ad5, 0xc512, 0x0, 0x0);
        gbc.writeMem(0x3b5b, { 0xc1 });
        gbc.writeMem(0xefac, { 0xa, 0x5c });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0xefae, gbc.sp());
        EXPECT(0x3b5c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa, gbc.readMem(0xefac));
        EXPECT(0x5c, gbc.readMem(0xefad));
        // C1 0076
        gbc.setState(0x4040, 0xa118, 0x45d0, 0x8db, 0xf0e1, 0x7cfe, 0x0, 0x1);
        gbc.writeMem(0x4040, { 0xc1 });
        gbc.writeMem(0xa118, { 0x3e, 0x3c });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0xa11a, gbc.sp());
        EXPECT(0x4041, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3e, gbc.readMem(0xa118));
        EXPECT(0x3c, gbc.readMem(0xa119));
        // C1 0077
        gbc.setState(0x7996, 0x70f, 0x3180, 0x38c6, 0xb49d, 0xfc4, 0x1, 0x1);
        gbc.writeMem(0x70f, { 0x34, 0x81 });
        gbc.writeMem(0x7996, { 0xc1 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x711, gbc.sp());
        EXPECT(0x7997, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C1 0078
        gbc.setState(0x970a, 0xc179, 0x7f30, 0xd1a2, 0xe3ff, 0xd443, 0x0, 0x0);
        gbc.writeMem(0x970a, { 0xc1 });
        gbc.writeMem(0xc179, { 0x4c, 0x9f });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0xc17b, gbc.sp());
        EXPECT(0x970b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc1, gbc.readMem(0x970a));
        EXPECT(0x4c, gbc.readMem(0xc179));
        EXPECT(0x9f, gbc.readMem(0xc17a));
        // C1 0079
        gbc.setState(0x31a3, 0x426c, 0x7c60, 0xe1e8, 0xf7aa, 0xd78a, 0x1, 0x0);
        gbc.writeMem(0x31a3, { 0xc1 });
        gbc.writeMem(0x426c, { 0x17, 0xe2 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x426e, gbc.sp());
        EXPECT(0x31a4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C1 007A
        gbc.setState(0x6597, 0xdc09, 0xf920, 0x286e, 0xf7fa, 0x2e6a, 0x1, 0x0);
        gbc.writeMem(0x6597, { 0xc1 });
        gbc.writeMem(0xdc09, { 0xd3, 0x6d });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0xdc0b, gbc.sp());
        EXPECT(0x6598, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd3, gbc.readMem(0xdc09));
        EXPECT(0x6d, gbc.readMem(0xdc0a));
        // C1 007B
        gbc.setState(0x2819, 0xf882, 0x8050, 0x1f17, 0x1c68, 0xfc6b, 0x1, 0x1);
        gbc.writeMem(0x2819, { 0xc1 });
        gbc.writeMem(0xf882, { 0xc1, 0x44 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0xf884, gbc.sp());
        EXPECT(0x281a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc1, gbc.readMem(0xf882));
        EXPECT(0x44, gbc.readMem(0xf883));
        // C1 007C
        gbc.setState(0xdd56, 0x6028, 0x8bf0, 0x3dad, 0xb73f, 0xd563, 0x1, 0x1);
        gbc.writeMem(0x6028, { 0xa1, 0xda });
        gbc.writeMem(0xdd56, { 0xc1 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x602a, gbc.sp());
        EXPECT(0xdd57, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc1, gbc.readMem(0xdd56));
        // C1 007D
        gbc.setState(0x269f, 0xdd36, 0xefb0, 0x500c, 0xd2e4, 0xdc76, 0x1, 0x0);
        gbc.writeMem(0x269f, { 0xc1 });
        gbc.writeMem(0xdd36, { 0x4d, 0x9c });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0xdd38, gbc.sp());
        EXPECT(0x26a0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4d, gbc.readMem(0xdd36));
        EXPECT(0x9c, gbc.readMem(0xdd37));
        // C1 007E
        gbc.setState(0x7d19, 0xdffe, 0x4130, 0x98a3, 0x2a8b, 0xd233, 0x1, 0x1);
        gbc.writeMem(0x7d19, { 0xc1 });
        gbc.writeMem(0xdffe, { 0x7c, 0xe3 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0xe000, gbc.sp());
        EXPECT(0x7d1a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7c, gbc.readMem(0xdffe));
        EXPECT(0xe3, gbc.readMem(0xdfff));
        // C1 007F
        gbc.setState(0x4aee, 0x4b05, 0xb660, 0x3f35, 0x4004, 0x61d4, 0x1, 0x0);
        gbc.writeMem(0x4aee, { 0xc1 });
        gbc.writeMem(0x4b05, { 0x50, 0xca });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x4b07, gbc.sp());
        EXPECT(0x4aef, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C1 0080
        gbc.setState(0xe78b, 0x9b74, 0x7330, 0xb328, 0xb0d5, 0x30e2, 0x0, 0x1);
        gbc.writeMem(0x9b74, { 0x77, 0xac });
        gbc.writeMem(0xe78b, { 0xc1 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x9b76, gbc.sp());
        EXPECT(0xe78c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x77, gbc.readMem(0x9b74));
        EXPECT(0xac, gbc.readMem(0x9b75));
        EXPECT(0xc1, gbc.readMem(0xe78b));
        // C1 0081
        gbc.setState(0x74d3, 0x7a45, 0x3f00, 0x786a, 0xbc25, 0x2066, 0x1, 0x1);
        gbc.writeMem(0x74d3, { 0xc1 });
        gbc.writeMem(0x7a45, { 0xb7, 0x56 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x7a47, gbc.sp());
        EXPECT(0x74d4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C1 0082
        gbc.setState(0xb71f, 0x2293, 0x1390, 0xd0d3, 0x546f, 0xdb47, 0x1, 0x0);
        gbc.writeMem(0x2293, { 0x74, 0xc3 });
        gbc.writeMem(0xb71f, { 0xc1 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x2295, gbc.sp());
        EXPECT(0xb720, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc1, gbc.readMem(0xb71f));
        // C1 0083
        gbc.setState(0x602c, 0x8982, 0xb2f0, 0x8709, 0x35d4, 0xc44e, 0x1, 0x0);
        gbc.writeMem(0x602c, { 0xc1 });
        gbc.writeMem(0x8982, { 0xc3, 0x84 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x8984, gbc.sp());
        EXPECT(0x602d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc3, gbc.readMem(0x8982));
        EXPECT(0x84, gbc.readMem(0x8983));
        // C1 0084
        gbc.setState(0x803, 0x733d, 0x98f0, 0xd5c8, 0x33d1, 0x976f, 0x0, 0x1);
        gbc.writeMem(0x803, { 0xc1 });
        gbc.writeMem(0x733d, { 0x4e, 0xfd });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x733f, gbc.sp());
        EXPECT(0x804, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C1 0085
        gbc.setState(0xc04f, 0xb73b, 0x4b10, 0x24b7, 0x8efc, 0x87a5, 0x0, 0x1);
        gbc.writeMem(0xb73b, { 0x88, 0x43 });
        gbc.writeMem(0xc04f, { 0xc1 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0xb73d, gbc.sp());
        EXPECT(0xc050, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x88, gbc.readMem(0xb73b));
        EXPECT(0x43, gbc.readMem(0xb73c));
        EXPECT(0xc1, gbc.readMem(0xc04f));
        // C1 0086
        gbc.setState(0x309e, 0xefbd, 0xc1a0, 0x952a, 0xd4be, 0xcabe, 0x0, 0x1);
        gbc.writeMem(0x309e, { 0xc1 });
        gbc.writeMem(0xefbd, { 0xae, 0x1f });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0xefbf, gbc.sp());
        EXPECT(0x309f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xae, gbc.readMem(0xefbd));
        EXPECT(0x1f, gbc.readMem(0xefbe));
        // C1 0087
        gbc.setState(0x1831, 0x97a, 0x5960, 0xef12, 0xdc69, 0x2752, 0x0, 0x1);
        gbc.writeMem(0x97a, { 0x13, 0xb1 });
        gbc.writeMem(0x1831, { 0xc1 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x97c, gbc.sp());
        EXPECT(0x1832, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C1 0088
        gbc.setState(0xb627, 0x64c3, 0xf360, 0x81da, 0x81d9, 0xdfca, 0x0, 0x0);
        gbc.writeMem(0x64c3, { 0x34, 0x64 });
        gbc.writeMem(0xb627, { 0xc1 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x64c5, gbc.sp());
        EXPECT(0xb628, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc1, gbc.readMem(0xb627));
        // C1 0089
        gbc.setState(0x7266, 0x6861, 0x5420, 0xcc1e, 0x1327, 0x7ed5, 0x1, 0x0);
        gbc.writeMem(0x6861, { 0xd1, 0xb5 });
        gbc.writeMem(0x7266, { 0xc1 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x6863, gbc.sp());
        EXPECT(0x7267, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C1 008A
        gbc.setState(0xb19, 0x3342, 0xad60, 0x2c34, 0x8ed2, 0x1c3e, 0x0, 0x1);
        gbc.writeMem(0xb19, { 0xc1 });
        gbc.writeMem(0x3342, { 0x59, 0xc0 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x3344, gbc.sp());
        EXPECT(0xb1a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C1 008B
        gbc.setState(0x20fa, 0x7387, 0x7470, 0xa428, 0x4a3, 0x3685, 0x0, 0x1);
        gbc.writeMem(0x20fa, { 0xc1 });
        gbc.writeMem(0x7387, { 0xd3, 0x12 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x7389, gbc.sp());
        EXPECT(0x20fb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C1 008C
        gbc.setState(0xc2ae, 0x98f, 0x46a0, 0x15dd, 0x45b3, 0x61ab, 0x1, 0x1);
        gbc.writeMem(0x98f, { 0x40, 0x8e });
        gbc.writeMem(0xc2ae, { 0xc1 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x991, gbc.sp());
        EXPECT(0xc2af, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc1, gbc.readMem(0xc2ae));
        // C1 008D
        gbc.setState(0xd863, 0x684e, 0xd720, 0x7a00, 0x7ed, 0x665e, 0x0, 0x0);
        gbc.writeMem(0x684e, { 0xf8, 0xe7 });
        gbc.writeMem(0xd863, { 0xc1 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x6850, gbc.sp());
        EXPECT(0xd864, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc1, gbc.readMem(0xd863));
        // C1 008E
        gbc.setState(0xbb50, 0xdf2d, 0x37a0, 0xe59c, 0x8038, 0xd106, 0x0, 0x0);
        gbc.writeMem(0xbb50, { 0xc1 });
        gbc.writeMem(0xdf2d, { 0x5f, 0xa6 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0xdf2f, gbc.sp());
        EXPECT(0xbb51, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc1, gbc.readMem(0xbb50));
        EXPECT(0x5f, gbc.readMem(0xdf2d));
        EXPECT(0xa6, gbc.readMem(0xdf2e));
        // C1 008F
        gbc.setState(0xc32b, 0xa881, 0x9e40, 0x5821, 0x9565, 0x2fe2, 0x1, 0x0);
        gbc.writeMem(0xa881, { 0x25, 0xf });
        gbc.writeMem(0xc32b, { 0xc1 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0xa883, gbc.sp());
        EXPECT(0xc32c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x25, gbc.readMem(0xa881));
        EXPECT(0xf, gbc.readMem(0xa882));
        EXPECT(0xc1, gbc.readMem(0xc32b));
        // C1 0091
        gbc.setState(0x462d, 0x5dd6, 0x74f0, 0x37e1, 0x9, 0x81d0, 0x1, 0x0);
        gbc.writeMem(0x462d, { 0xc1 });
        gbc.writeMem(0x5dd6, { 0x2d, 0x52 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x5dd8, gbc.sp());
        EXPECT(0x462e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C1 0092
        gbc.setState(0xc675, 0x4245, 0x18d0, 0x75fd, 0xd963, 0x4e56, 0x1, 0x0);
        gbc.writeMem(0x4245, { 0x87, 0x98 });
        gbc.writeMem(0xc675, { 0xc1 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0x4247, gbc.sp());
        EXPECT(0xc676, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc1, gbc.readMem(0xc675));
        // C1 0093
        gbc.setState(0xc62a, 0x6ded, 0x88f0, 0xd5f9, 0x60b6, 0xb4eb, 0x1, 0x1);
        gbc.writeMem(0x6ded, { 0x66, 0x48 });
        gbc.writeMem(0xc62a, { 0xc1 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x6def, gbc.sp());
        EXPECT(0xc62b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc1, gbc.readMem(0xc62a));
        // C1 0094
        gbc.setState(0x652d, 0x7071, 0x6eb0, 0x86a6, 0x9457, 0x88d2, 0x0, 0x1);
        gbc.writeMem(0x652d, { 0xc1 });
        gbc.writeMem(0x7071, { 0x43, 0x4f });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x7073, gbc.sp());
        EXPECT(0x652e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C1 0095
        gbc.setState(0xae06, 0x9a8f, 0x8130, 0xf7b8, 0x1d3e, 0xb1fe, 0x0, 0x0);
        gbc.writeMem(0x9a8f, { 0xeb, 0xb8 });
        gbc.writeMem(0xae06, { 0xc1 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x9a91, gbc.sp());
        EXPECT(0xae07, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xeb, gbc.readMem(0x9a8f));
        EXPECT(0xb8, gbc.readMem(0x9a90));
        EXPECT(0xc1, gbc.readMem(0xae06));
        // C1 0096
        gbc.setState(0xda33, 0xedde, 0x7710, 0xcd77, 0x2a7a, 0xcc40, 0x1, 0x0);
        gbc.writeMem(0xda33, { 0xc1 });
        gbc.writeMem(0xedde, { 0x1e, 0x4f });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0xede0, gbc.sp());
        EXPECT(0xda34, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc1, gbc.readMem(0xda33));
        EXPECT(0x1e, gbc.readMem(0xedde));
        EXPECT(0x4f, gbc.readMem(0xeddf));
        // C1 0097
        gbc.setState(0x25f5, 0x633f, 0x3aa0, 0x7941, 0x4f22, 0x8ed, 0x1, 0x0);
        gbc.writeMem(0x25f5, { 0xc1 });
        gbc.writeMem(0x633f, { 0xdc, 0x92 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x6341, gbc.sp());
        EXPECT(0x25f6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C1 0099
        gbc.setState(0x9639, 0x30c0, 0xf310, 0x80ee, 0x6b7b, 0xeba5, 0x1, 0x1);
        gbc.writeMem(0x30c0, { 0x1f, 0x41 });
        gbc.writeMem(0x9639, { 0xc1 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x30c2, gbc.sp());
        EXPECT(0x963a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc1, gbc.readMem(0x9639));
        // C1 009A
        gbc.setState(0x25b5, 0x83f6, 0x8b70, 0xb7e8, 0xb64a, 0x8bf8, 0x0, 0x1);
        gbc.writeMem(0x25b5, { 0xc1 });
        gbc.writeMem(0x83f6, { 0xee, 0xd1 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x83f8, gbc.sp());
        EXPECT(0x25b6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xee, gbc.readMem(0x83f6));
        EXPECT(0xd1, gbc.readMem(0x83f7));
        // C1 009B
        gbc.setState(0x8e70, 0x6aa4, 0x53c0, 0x1b4d, 0x4008, 0xaf9f, 0x0, 0x0);
        gbc.writeMem(0x6aa4, { 0x7e, 0xd6 });
        gbc.writeMem(0x8e70, { 0xc1 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x6aa6, gbc.sp());
        EXPECT(0x8e71, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc1, gbc.readMem(0x8e70));
        // C1 009C
        gbc.setState(0x45b3, 0xe516, 0x83f0, 0xca25, 0xc410, 0x2130, 0x0, 0x1);
        gbc.writeMem(0x45b3, { 0xc1 });
        gbc.writeMem(0xe516, { 0xad, 0xac });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0xe518, gbc.sp());
        EXPECT(0x45b4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xad, gbc.readMem(0xe516));
        EXPECT(0xac, gbc.readMem(0xe517));
        // C1 009D
        gbc.setState(0xd599, 0x9cb8, 0xdd30, 0x7dab, 0xeb14, 0xb805, 0x1, 0x1);
        gbc.writeMem(0x9cb8, { 0xd4, 0x18 });
        gbc.writeMem(0xd599, { 0xc1 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x9cba, gbc.sp());
        EXPECT(0xd59a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd4, gbc.readMem(0x9cb8));
        EXPECT(0x18, gbc.readMem(0x9cb9));
        EXPECT(0xc1, gbc.readMem(0xd599));
        // C1 00A0
        gbc.setState(0xd6bd, 0x82da, 0x7e90, 0xe52f, 0x5344, 0x632, 0x1, 0x0);
        gbc.writeMem(0x82da, { 0xc0, 0x8c });
        gbc.writeMem(0xd6bd, { 0xc1 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x82dc, gbc.sp());
        EXPECT(0xd6be, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc0, gbc.readMem(0x82da));
        EXPECT(0x8c, gbc.readMem(0x82db));
        EXPECT(0xc1, gbc.readMem(0xd6bd));
        // C1 00A1
        gbc.setState(0xbba9, 0x7a08, 0x5fa0, 0x88e6, 0x73f9, 0xece2, 0x0, 0x0);
        gbc.writeMem(0x7a08, { 0xde, 0xb5 });
        gbc.writeMem(0xbba9, { 0xc1 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x7a0a, gbc.sp());
        EXPECT(0xbbaa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc1, gbc.readMem(0xbba9));
        // C1 00A2
        gbc.setState(0xdb05, 0x19c4, 0x93f0, 0xdd24, 0x9296, 0x3ba1, 0x0, 0x1);
        gbc.writeMem(0x19c4, { 0x92, 0xc });
        gbc.writeMem(0xdb05, { 0xc1 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x19c6, gbc.sp());
        EXPECT(0xdb06, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc1, gbc.readMem(0xdb05));
        // C1 00A3
        gbc.setState(0xc33e, 0x34eb, 0x64d0, 0x394f, 0xd710, 0xff22, 0x1, 0x1);
        gbc.writeMem(0x34eb, { 0x25, 0x84 });
        gbc.writeMem(0xc33e, { 0xc1 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x34ed, gbc.sp());
        EXPECT(0xc33f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc1, gbc.readMem(0xc33e));
        // C1 00A4
        gbc.setState(0x56c3, 0xfd56, 0x5980, 0xb769, 0x7ba9, 0x206f, 0x1, 0x0);
        gbc.writeMem(0x56c3, { 0xc1 });
        gbc.writeMem(0xfd56, { 0x4d, 0x71 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0xfd58, gbc.sp());
        EXPECT(0x56c4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4d, gbc.readMem(0xfd56));
        EXPECT(0x71, gbc.readMem(0xfd57));
        // C1 00A5
        gbc.setState(0xf58, 0x3b21, 0x7b30, 0x9d5c, 0x5cf1, 0x3730, 0x0, 0x1);
        gbc.writeMem(0xf58, { 0xc1 });
        gbc.writeMem(0x3b21, { 0xdc, 0xce });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x3b23, gbc.sp());
        EXPECT(0xf59, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C1 00A6
        gbc.setState(0x24ab, 0xb7e2, 0x2a10, 0x8302, 0xd6b3, 0x617c, 0x1, 0x0);
        gbc.writeMem(0x24ab, { 0xc1 });
        gbc.writeMem(0xb7e2, { 0x3a, 0xe4 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0xb7e4, gbc.sp());
        EXPECT(0x24ac, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3a, gbc.readMem(0xb7e2));
        EXPECT(0xe4, gbc.readMem(0xb7e3));
        // C1 00A7
        gbc.setState(0x1fcd, 0x4f1f, 0x9fa0, 0xaf60, 0x6de8, 0x1057, 0x0, 0x0);
        gbc.writeMem(0x1fcd, { 0xc1 });
        gbc.writeMem(0x4f1f, { 0x94, 0xb9 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x4f21, gbc.sp());
        EXPECT(0x1fce, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C1 00A8
        gbc.setState(0xd02c, 0xdb41, 0xa5e0, 0x4b76, 0xf020, 0xe224, 0x1, 0x1);
        gbc.writeMem(0xd02c, { 0xc1 });
        gbc.writeMem(0xdb41, { 0xfc, 0xee });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0xdb43, gbc.sp());
        EXPECT(0xd02d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc1, gbc.readMem(0xd02c));
        EXPECT(0xfc, gbc.readMem(0xdb41));
        EXPECT(0xee, gbc.readMem(0xdb42));
        // C1 00A9
        gbc.setState(0x7b74, 0x7a8b, 0xed0, 0xf037, 0x10ff, 0x469f, 0x1, 0x1);
        gbc.writeMem(0x7a8b, { 0xba, 0xf3 });
        gbc.writeMem(0x7b74, { 0xc1 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x7a8d, gbc.sp());
        EXPECT(0x7b75, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C1 00AA
        gbc.setState(0x18c3, 0x8736, 0xc710, 0x824, 0xfc1e, 0x3b7, 0x1, 0x1);
        gbc.writeMem(0x18c3, { 0xc1 });
        gbc.writeMem(0x8736, { 0xe, 0xb });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x8738, gbc.sp());
        EXPECT(0x18c4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe, gbc.readMem(0x8736));
        EXPECT(0xb, gbc.readMem(0x8737));
        // C1 00AB
        gbc.setState(0x94e8, 0x7e64, 0x6170, 0xe3c4, 0x3116, 0xe786, 0x0, 0x1);
        gbc.writeMem(0x7e64, { 0xb8, 0x6e });
        gbc.writeMem(0x94e8, { 0xc1 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x7e66, gbc.sp());
        EXPECT(0x94e9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc1, gbc.readMem(0x94e8));
        // C1 00AC
        gbc.setState(0x60f, 0xe17d, 0xba70, 0xa163, 0x8a57, 0x5bb4, 0x1, 0x1);
        gbc.writeMem(0x60f, { 0xc1 });
        gbc.writeMem(0xe17d, { 0x2d, 0x1a });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0xe17f, gbc.sp());
        EXPECT(0x610, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2d, gbc.readMem(0xe17d));
        EXPECT(0x1a, gbc.readMem(0xe17e));
        // C1 00AD
        gbc.setState(0xe209, 0x674f, 0x42a0, 0xc5f5, 0xdefd, 0x9fe1, 0x1, 0x1);
        gbc.writeMem(0x674f, { 0xbc, 0x1f });
        gbc.writeMem(0xe209, { 0xc1 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0x6751, gbc.sp());
        EXPECT(0xe20a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc1, gbc.readMem(0xe209));
        // C1 00AE
        gbc.setState(0x3f19, 0xecab, 0x92c0, 0xa3d5, 0xfd79, 0x7924, 0x1, 0x0);
        gbc.writeMem(0x3f19, { 0xc1 });
        gbc.writeMem(0xecab, { 0x99, 0x82 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0xecad, gbc.sp());
        EXPECT(0x3f1a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x99, gbc.readMem(0xecab));
        EXPECT(0x82, gbc.readMem(0xecac));
        // C1 00AF
        gbc.setState(0x161e, 0x5630, 0xdb10, 0x1b98, 0xd8d2, 0xd1a3, 0x1, 0x1);
        gbc.writeMem(0x161e, { 0xc1 });
        gbc.writeMem(0x5630, { 0x79, 0xa9 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0x5632, gbc.sp());
        EXPECT(0x161f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C1 00B0
        gbc.setState(0x6f3e, 0x8672, 0x6b90, 0x5787, 0x7946, 0xf9d9, 0x1, 0x1);
        gbc.writeMem(0x6f3e, { 0xc1 });
        gbc.writeMem(0x8672, { 0xaa, 0xa5 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x8674, gbc.sp());
        EXPECT(0x6f3f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xaa, gbc.readMem(0x8672));
        EXPECT(0xa5, gbc.readMem(0x8673));
        // C1 00B1
        gbc.setState(0xe948, 0xdea8, 0xbe50, 0x2a7f, 0x25a1, 0x92c0, 0x0, 0x1);
        gbc.writeMem(0xdea8, { 0x7f, 0xfd });
        gbc.writeMem(0xe948, { 0xc1 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0xdeaa, gbc.sp());
        EXPECT(0xe949, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7f, gbc.readMem(0xdea8));
        EXPECT(0xfd, gbc.readMem(0xdea9));
        EXPECT(0xc1, gbc.readMem(0xe948));
        // C1 00B2
        gbc.setState(0x9f26, 0x1917, 0x37d0, 0x5521, 0x5c97, 0x65c5, 0x1, 0x1);
        gbc.writeMem(0x1917, { 0xac, 0xaf });
        gbc.writeMem(0x9f26, { 0xc1 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x1919, gbc.sp());
        EXPECT(0x9f27, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc1, gbc.readMem(0x9f26));
        // C1 00B3
        gbc.setState(0x880f, 0xf407, 0x950, 0x6e99, 0x9896, 0x1206, 0x1, 0x0);
        gbc.writeMem(0x880f, { 0xc1 });
        gbc.writeMem(0xf407, { 0x90, 0xd4 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0xf409, gbc.sp());
        EXPECT(0x8810, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc1, gbc.readMem(0x880f));
        EXPECT(0x90, gbc.readMem(0xf407));
        EXPECT(0xd4, gbc.readMem(0xf408));
        // C1 00B4
        gbc.setState(0xd0ea, 0x3217, 0x6a40, 0x3970, 0x14ef, 0x8d68, 0x0, 0x0);
        gbc.writeMem(0x3217, { 0x60, 0xf5 });
        gbc.writeMem(0xd0ea, { 0xc1 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x3219, gbc.sp());
        EXPECT(0xd0eb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc1, gbc.readMem(0xd0ea));
        // C1 00B5
        gbc.setState(0x6519, 0xc647, 0x84a0, 0x6c7a, 0x36da, 0x84d5, 0x0, 0x0);
        gbc.writeMem(0x6519, { 0xc1 });
        gbc.writeMem(0xc647, { 0xc3, 0x88 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0xc649, gbc.sp());
        EXPECT(0x651a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc3, gbc.readMem(0xc647));
        EXPECT(0x88, gbc.readMem(0xc648));
        // C1 00B6
        gbc.setState(0xdc2c, 0x783d, 0xa90, 0x63bb, 0xc265, 0x7a94, 0x0, 0x0);
        gbc.writeMem(0x783d, { 0xe6, 0x5c });
        gbc.writeMem(0xdc2c, { 0xc1 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x783f, gbc.sp());
        EXPECT(0xdc2d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc1, gbc.readMem(0xdc2c));
        // C1 00B7
        gbc.setState(0xaf3b, 0xc036, 0x88a0, 0x943, 0x6f78, 0x4281, 0x1, 0x0);
        gbc.writeMem(0xaf3b, { 0xc1 });
        gbc.writeMem(0xc036, { 0x68, 0xa });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0xc038, gbc.sp());
        EXPECT(0xaf3c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc1, gbc.readMem(0xaf3b));
        EXPECT(0x68, gbc.readMem(0xc036));
        EXPECT(0xa, gbc.readMem(0xc037));
        // C1 00B8
        gbc.setState(0x81bb, 0x52f5, 0xe8e0, 0x6ce6, 0x42a2, 0xf60a, 0x0, 0x0);
        gbc.writeMem(0x52f5, { 0x58, 0x11 });
        gbc.writeMem(0x81bb, { 0xc1 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x52f7, gbc.sp());
        EXPECT(0x81bc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc1, gbc.readMem(0x81bb));
        // C1 00B9
        gbc.setState(0x70bf, 0x6d3d, 0xbbe0, 0xdc4c, 0xa0c2, 0x6287, 0x0, 0x0);
        gbc.writeMem(0x6d3d, { 0xc5, 0xc2 });
        gbc.writeMem(0x70bf, { 0xc1 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x6d3f, gbc.sp());
        EXPECT(0x70c0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C1 00BA
        gbc.setState(0x441c, 0x9015, 0x8960, 0x922, 0xce73, 0xdbd4, 0x1, 0x1);
        gbc.writeMem(0x441c, { 0xc1 });
        gbc.writeMem(0x9015, { 0x45, 0xf0 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x9017, gbc.sp());
        EXPECT(0x441d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x45, gbc.readMem(0x9015));
        EXPECT(0xf0, gbc.readMem(0x9016));
        // C1 00BB
        gbc.setState(0x679c, 0xca0c, 0x22d0, 0x97aa, 0xc092, 0x7bf0, 0x0, 0x0);
        gbc.writeMem(0x679c, { 0xc1 });
        gbc.writeMem(0xca0c, { 0xda, 0xab });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0xca0e, gbc.sp());
        EXPECT(0x679d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xda, gbc.readMem(0xca0c));
        EXPECT(0xab, gbc.readMem(0xca0d));
        // C1 00BC
        gbc.setState(0x3cfa, 0xa4a0, 0xe30, 0x87b3, 0xd19f, 0x5673, 0x0, 0x1);
        gbc.writeMem(0x3cfa, { 0xc1 });
        gbc.writeMem(0xa4a0, { 0x87, 0xf3 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0xa4a2, gbc.sp());
        EXPECT(0x3cfb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x87, gbc.readMem(0xa4a0));
        EXPECT(0xf3, gbc.readMem(0xa4a1));
        // C1 00BD
        gbc.setState(0x9e2c, 0xfdd1, 0x22b0, 0x20ac, 0xaacf, 0x716b, 0x1, 0x1);
        gbc.writeMem(0x9e2c, { 0xc1 });
        gbc.writeMem(0xfdd1, { 0xff, 0x18 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0xfdd3, gbc.sp());
        EXPECT(0x9e2d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc1, gbc.readMem(0x9e2c));
        EXPECT(0xff, gbc.readMem(0xfdd1));
        EXPECT(0x18, gbc.readMem(0xfdd2));
        // C1 00BE
        gbc.setState(0xbb21, 0xd11e, 0x3a10, 0xa5fb, 0x3a4, 0xa059, 0x0, 0x1);
        gbc.writeMem(0xbb21, { 0xc1 });
        gbc.writeMem(0xd11e, { 0x9c, 0x91 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0xd120, gbc.sp());
        EXPECT(0xbb22, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc1, gbc.readMem(0xbb21));
        EXPECT(0x9c, gbc.readMem(0xd11e));
        EXPECT(0x91, gbc.readMem(0xd11f));
        // C1 00BF
        gbc.setState(0xe1fb, 0xa307, 0xd10, 0xb1d3, 0xb619, 0xadc, 0x0, 0x1);
        gbc.writeMem(0xa307, { 0x90, 0x65 });
        gbc.writeMem(0xe1fb, { 0xc1 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0xa309, gbc.sp());
        EXPECT(0xe1fc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x90, gbc.readMem(0xa307));
        EXPECT(0x65, gbc.readMem(0xa308));
        EXPECT(0xc1, gbc.readMem(0xe1fb));
        // C1 00C0
        gbc.setState(0x59fb, 0x412, 0x45e0, 0x644e, 0xec8d, 0x2b1a, 0x0, 0x0);
        gbc.writeMem(0x412, { 0x49, 0x7b });
        gbc.writeMem(0x59fb, { 0xc1 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x414, gbc.sp());
        EXPECT(0x59fc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C1 00C1
        gbc.setState(0x1d0e, 0x535f, 0xc740, 0x6fe9, 0x5e54, 0xe540, 0x0, 0x0);
        gbc.writeMem(0x1d0e, { 0xc1 });
        gbc.writeMem(0x535f, { 0x5b, 0x85 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x5361, gbc.sp());
        EXPECT(0x1d0f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C1 00C2
        gbc.setState(0xddd9, 0xd33c, 0x42b0, 0xab18, 0x5335, 0xc793, 0x0, 0x0);
        gbc.writeMem(0xd33c, { 0xdc, 0x7c });
        gbc.writeMem(0xddd9, { 0xc1 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0xd33e, gbc.sp());
        EXPECT(0xddda, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xdc, gbc.readMem(0xd33c));
        EXPECT(0x7c, gbc.readMem(0xd33d));
        EXPECT(0xc1, gbc.readMem(0xddd9));
        // C1 00C3
        gbc.setState(0x2592, 0x77f1, 0x2f40, 0x4d2b, 0xf149, 0xb60, 0x0, 0x0);
        gbc.writeMem(0x2592, { 0xc1 });
        gbc.writeMem(0x77f1, { 0xd5, 0xc8 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x77f3, gbc.sp());
        EXPECT(0x2593, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C1 00C4
        gbc.setState(0xbf8e, 0x7908, 0x4390, 0x6ce8, 0x8f21, 0x5441, 0x1, 0x0);
        gbc.writeMem(0x7908, { 0xcb, 0x7a });
        gbc.writeMem(0xbf8e, { 0xc1 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x790a, gbc.sp());
        EXPECT(0xbf8f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc1, gbc.readMem(0xbf8e));
        // C1 00C5
        gbc.setState(0x1b37, 0x8ddc, 0xee0, 0x4f1b, 0x8c82, 0x90c, 0x1, 0x1);
        gbc.writeMem(0x1b37, { 0xc1 });
        gbc.writeMem(0x8ddc, { 0x51, 0x70 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x8dde, gbc.sp());
        EXPECT(0x1b38, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x51, gbc.readMem(0x8ddc));
        EXPECT(0x70, gbc.readMem(0x8ddd));
        // C1 00C7
        gbc.setState(0x3715, 0x9cd1, 0x2560, 0x869e, 0x55d9, 0x2b3a, 0x1, 0x1);
        gbc.writeMem(0x3715, { 0xc1 });
        gbc.writeMem(0x9cd1, { 0xb1, 0x3d });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x9cd3, gbc.sp());
        EXPECT(0x3716, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb1, gbc.readMem(0x9cd1));
        EXPECT(0x3d, gbc.readMem(0x9cd2));
        // C1 00C8
        gbc.setState(0x1709, 0x5bac, 0x6020, 0x2fee, 0x9805, 0x7d0c, 0x1, 0x1);
        gbc.writeMem(0x1709, { 0xc1 });
        gbc.writeMem(0x5bac, { 0xea, 0x3e });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x5bae, gbc.sp());
        EXPECT(0x170a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C1 00C9
        gbc.setState(0x7bc6, 0x849f, 0xbc50, 0x8084, 0x916c, 0x598f, 0x1, 0x1);
        gbc.writeMem(0x7bc6, { 0xc1 });
        gbc.writeMem(0x849f, { 0x11, 0x43 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x84a1, gbc.sp());
        EXPECT(0x7bc7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x11, gbc.readMem(0x849f));
        EXPECT(0x43, gbc.readMem(0x84a0));
        // C1 00CA
        gbc.setState(0xd719, 0x520a, 0x7550, 0x6f0d, 0x76c2, 0xfbdc, 0x0, 0x0);
        gbc.writeMem(0x520a, { 0xd0, 0x72 });
        gbc.writeMem(0xd719, { 0xc1 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x520c, gbc.sp());
        EXPECT(0xd71a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc1, gbc.readMem(0xd719));
        // C1 00CB
        gbc.setState(0x81d6, 0x1205, 0x88f0, 0xc9cb, 0x3555, 0x3076, 0x0, 0x1);
        gbc.writeMem(0x1205, { 0x69, 0xfa });
        gbc.writeMem(0x81d6, { 0xc1 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x1207, gbc.sp());
        EXPECT(0x81d7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc1, gbc.readMem(0x81d6));
        // C1 00CC
        gbc.setState(0xeb3c, 0xb15d, 0xbf30, 0x27b6, 0x85d6, 0xc1e7, 0x0, 0x1);
        gbc.writeMem(0xb15d, { 0xe2, 0xf6 });
        gbc.writeMem(0xeb3c, { 0xc1 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0xb15f, gbc.sp());
        EXPECT(0xeb3d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe2, gbc.readMem(0xb15d));
        EXPECT(0xf6, gbc.readMem(0xb15e));
        EXPECT(0xc1, gbc.readMem(0xeb3c));
        // C1 00CD
        gbc.setState(0x409d, 0xe30e, 0x6a90, 0x729b, 0x81a4, 0x2732, 0x0, 0x1);
        gbc.writeMem(0x409d, { 0xc1 });
        gbc.writeMem(0xe30e, { 0x2b, 0xd3 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0xe310, gbc.sp());
        EXPECT(0x409e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2b, gbc.readMem(0xe30e));
        EXPECT(0xd3, gbc.readMem(0xe30f));
        // C1 00CE
        gbc.setState(0xe72c, 0xe479, 0x6e30, 0xab6, 0x595a, 0xb0fc, 0x0, 0x1);
        gbc.writeMem(0xe479, { 0x11, 0x25 });
        gbc.writeMem(0xe72c, { 0xc1 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0xe47b, gbc.sp());
        EXPECT(0xe72d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x11, gbc.readMem(0xe479));
        EXPECT(0x25, gbc.readMem(0xe47a));
        EXPECT(0xc1, gbc.readMem(0xe72c));
        // C1 00CF
        gbc.setState(0x7365, 0x2c57, 0xce90, 0x531a, 0x1579, 0xb53f, 0x0, 0x0);
        gbc.writeMem(0x2c57, { 0xb3, 0x3 });
        gbc.writeMem(0x7365, { 0xc1 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0x2c59, gbc.sp());
        EXPECT(0x7366, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C1 00D0
        gbc.setState(0xc59e, 0x82af, 0xa5f0, 0x90c7, 0xbf09, 0x9b4c, 0x0, 0x0);
        gbc.writeMem(0x82af, { 0x3e, 0x11 });
        gbc.writeMem(0xc59e, { 0xc1 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x82b1, gbc.sp());
        EXPECT(0xc59f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3e, gbc.readMem(0x82af));
        EXPECT(0x11, gbc.readMem(0x82b0));
        EXPECT(0xc1, gbc.readMem(0xc59e));
        // C1 00D1
        gbc.setState(0x6530, 0x380, 0xbd80, 0xd26e, 0x4b61, 0xf039, 0x0, 0x0);
        gbc.writeMem(0x380, { 0x76, 0x4a });
        gbc.writeMem(0x6530, { 0xc1 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x382, gbc.sp());
        EXPECT(0x6531, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C1 00D2
        gbc.setState(0xa2a1, 0x1258, 0x940, 0xc1a6, 0x6a9, 0xb9b6, 0x1, 0x0);
        gbc.writeMem(0x1258, { 0x19, 0xf });
        gbc.writeMem(0xa2a1, { 0xc1 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x125a, gbc.sp());
        EXPECT(0xa2a2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc1, gbc.readMem(0xa2a1));
        // C1 00D4
        gbc.setState(0xb877, 0xd81b, 0x38a0, 0x74d5, 0x86c2, 0xaff6, 0x0, 0x1);
        gbc.writeMem(0xb877, { 0xc1 });
        gbc.writeMem(0xd81b, { 0x1, 0x6e });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0xd81d, gbc.sp());
        EXPECT(0xb878, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc1, gbc.readMem(0xb877));
        EXPECT(0x1, gbc.readMem(0xd81b));
        EXPECT(0x6e, gbc.readMem(0xd81c));
        // C1 00D5
        gbc.setState(0x9dcd, 0x7b35, 0xf150, 0x6b66, 0x4958, 0xac6e, 0x0, 0x1);
        gbc.writeMem(0x7b35, { 0xe2, 0xae });
        gbc.writeMem(0x9dcd, { 0xc1 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x7b37, gbc.sp());
        EXPECT(0x9dce, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc1, gbc.readMem(0x9dcd));
        // C1 00D6
        gbc.setState(0xbdb6, 0x8fd4, 0xbf80, 0x611d, 0xfcd4, 0x6df8, 0x1, 0x1);
        gbc.writeMem(0x8fd4, { 0xb, 0x4d });
        gbc.writeMem(0xbdb6, { 0xc1 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x8fd6, gbc.sp());
        EXPECT(0xbdb7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb, gbc.readMem(0x8fd4));
        EXPECT(0x4d, gbc.readMem(0x8fd5));
        EXPECT(0xc1, gbc.readMem(0xbdb6));
        // C1 00D7
        gbc.setState(0xb3c9, 0x3a86, 0x4040, 0x23ba, 0x9795, 0x785b, 0x0, 0x0);
        gbc.writeMem(0x3a86, { 0xd7, 0xd8 });
        gbc.writeMem(0xb3c9, { 0xc1 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x3a88, gbc.sp());
        EXPECT(0xb3ca, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc1, gbc.readMem(0xb3c9));
        // C1 00D8
        gbc.setState(0xb9d2, 0xb811, 0x4ef0, 0xea48, 0xc23, 0x8e6b, 0x1, 0x1);
        gbc.writeMem(0xb811, { 0x70, 0xe8 });
        gbc.writeMem(0xb9d2, { 0xc1 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0xb813, gbc.sp());
        EXPECT(0xb9d3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x70, gbc.readMem(0xb811));
        EXPECT(0xe8, gbc.readMem(0xb812));
        EXPECT(0xc1, gbc.readMem(0xb9d2));
        // C1 00DA
        gbc.setState(0x3e3f, 0xf7b4, 0xe3a0, 0xbf88, 0xd7e6, 0x291, 0x0, 0x0);
        gbc.writeMem(0x3e3f, { 0xc1 });
        gbc.writeMem(0xf7b4, { 0x2f, 0x3d });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0xf7b6, gbc.sp());
        EXPECT(0x3e40, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2f, gbc.readMem(0xf7b4));
        EXPECT(0x3d, gbc.readMem(0xf7b5));
        // C1 00DB
        gbc.setState(0x96a9, 0x21f1, 0x3850, 0x89a8, 0x3f38, 0xf17e, 0x0, 0x1);
        gbc.writeMem(0x21f1, { 0x59, 0xd2 });
        gbc.writeMem(0x96a9, { 0xc1 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0x21f3, gbc.sp());
        EXPECT(0x96aa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc1, gbc.readMem(0x96a9));
        // C1 00DC
        gbc.setState(0xa838, 0xed12, 0xe1b0, 0x75ee, 0x4241, 0xda25, 0x1, 0x0);
        gbc.writeMem(0xa838, { 0xc1 });
        gbc.writeMem(0xed12, { 0xad, 0x27 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0xed14, gbc.sp());
        EXPECT(0xa839, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc1, gbc.readMem(0xa838));
        EXPECT(0xad, gbc.readMem(0xed12));
        EXPECT(0x27, gbc.readMem(0xed13));
        // C1 00DD
        gbc.setState(0x1b8f, 0x1045, 0xada0, 0xdef6, 0xb79b, 0x8691, 0x1, 0x1);
        gbc.writeMem(0x1045, { 0x4b, 0x2b });
        gbc.writeMem(0x1b8f, { 0xc1 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x1047, gbc.sp());
        EXPECT(0x1b90, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C1 00DE
        gbc.setState(0x5f63, 0x49fa, 0x8ad0, 0xafed, 0x649a, 0x9222, 0x1, 0x1);
        gbc.writeMem(0x49fa, { 0x61, 0x77 });
        gbc.writeMem(0x5f63, { 0xc1 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x49fc, gbc.sp());
        EXPECT(0x5f64, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C1 00DF
        gbc.setState(0x154, 0xec1, 0x23b0, 0x58f1, 0xa40a, 0xe9f5, 0x1, 0x0);
        gbc.writeMem(0x154, { 0xc1 });
        gbc.writeMem(0xec1, { 0x75, 0x3e });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0xec3, gbc.sp());
        EXPECT(0x155, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C1 00E0
        gbc.setState(0x7955, 0xf655, 0x20e0, 0xbdf6, 0xa230, 0x8731, 0x1, 0x1);
        gbc.writeMem(0x7955, { 0xc1 });
        gbc.writeMem(0xf655, { 0x73, 0x36 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0xf657, gbc.sp());
        EXPECT(0x7956, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x73, gbc.readMem(0xf655));
        EXPECT(0x36, gbc.readMem(0xf656));
        // C1 00E1
        gbc.setState(0xa3e4, 0x2afe, 0xc350, 0x4f3d, 0x1360, 0xce4a, 0x0, 0x1);
        gbc.writeMem(0x2afe, { 0x8b, 0xfa });
        gbc.writeMem(0xa3e4, { 0xc1 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x2b00, gbc.sp());
        EXPECT(0xa3e5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc1, gbc.readMem(0xa3e4));
        // C1 00E2
        gbc.setState(0x2a46, 0xfaa6, 0x3db0, 0x8916, 0x9b8c, 0xce3b, 0x1, 0x1);
        gbc.writeMem(0x2a46, { 0xc1 });
        gbc.writeMem(0xfaa6, { 0x5, 0xab });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0xfaa8, gbc.sp());
        EXPECT(0x2a47, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5, gbc.readMem(0xfaa6));
        EXPECT(0xab, gbc.readMem(0xfaa7));
        // C1 00E3
        gbc.setState(0x7762, 0xc31b, 0xef60, 0xe40a, 0xb7ef, 0xa4f3, 0x0, 0x0);
        gbc.writeMem(0x7762, { 0xc1 });
        gbc.writeMem(0xc31b, { 0x5b, 0x60 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0xc31d, gbc.sp());
        EXPECT(0x7763, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5b, gbc.readMem(0xc31b));
        EXPECT(0x60, gbc.readMem(0xc31c));
        // C1 00E4
        gbc.setState(0x4260, 0x613c, 0x42f0, 0x6eac, 0x5835, 0x15bd, 0x0, 0x0);
        gbc.writeMem(0x4260, { 0xc1 });
        gbc.writeMem(0x613c, { 0xfb, 0x8d });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x613e, gbc.sp());
        EXPECT(0x4261, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C1 00E5
        gbc.setState(0xc467, 0x26da, 0xf820, 0x4b3b, 0x9187, 0x8ab6, 0x0, 0x1);
        gbc.writeMem(0x26da, { 0x5c, 0xe1 });
        gbc.writeMem(0xc467, { 0xc1 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x26dc, gbc.sp());
        EXPECT(0xc468, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc1, gbc.readMem(0xc467));
        // C1 00E6
        gbc.setState(0xe6a5, 0xa3c7, 0x5dd0, 0x6c0a, 0xfd75, 0x5130, 0x0, 0x1);
        gbc.writeMem(0xa3c7, { 0x43, 0xd5 });
        gbc.writeMem(0xe6a5, { 0xc1 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0xa3c9, gbc.sp());
        EXPECT(0xe6a6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x43, gbc.readMem(0xa3c7));
        EXPECT(0xd5, gbc.readMem(0xa3c8));
        EXPECT(0xc1, gbc.readMem(0xe6a5));
        // C1 00E8
        gbc.setState(0x1d12, 0xcba3, 0x730, 0x86c9, 0x919c, 0xa9f8, 0x1, 0x1);
        gbc.writeMem(0x1d12, { 0xc1 });
        gbc.writeMem(0xcba3, { 0x4b, 0xd });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0xcba5, gbc.sp());
        EXPECT(0x1d13, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4b, gbc.readMem(0xcba3));
        EXPECT(0xd, gbc.readMem(0xcba4));
        // C1 00E9
        gbc.setState(0x9568, 0xf958, 0xadf0, 0x29a, 0x5d6a, 0xd026, 0x1, 0x1);
        gbc.writeMem(0x9568, { 0xc1 });
        gbc.writeMem(0xf958, { 0x31, 0xef });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0xf95a, gbc.sp());
        EXPECT(0x9569, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc1, gbc.readMem(0x9568));
        EXPECT(0x31, gbc.readMem(0xf958));
        EXPECT(0xef, gbc.readMem(0xf959));
        // C1 00EB
        gbc.setState(0xa470, 0xd33f, 0x1010, 0x8469, 0x9f9f, 0xde55, 0x0, 0x1);
        gbc.writeMem(0xa470, { 0xc1 });
        gbc.writeMem(0xd33f, { 0xbf, 0x1d });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0xd341, gbc.sp());
        EXPECT(0xa471, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc1, gbc.readMem(0xa470));
        EXPECT(0xbf, gbc.readMem(0xd33f));
        EXPECT(0x1d, gbc.readMem(0xd340));
        // C1 00EC
        gbc.setState(0x3c7a, 0xc4d9, 0x5600, 0x911d, 0x1904, 0xfbb9, 0x1, 0x0);
        gbc.writeMem(0x3c7a, { 0xc1 });
        gbc.writeMem(0xc4d9, { 0xc3, 0x70 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0xc4db, gbc.sp());
        EXPECT(0x3c7b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc3, gbc.readMem(0xc4d9));
        EXPECT(0x70, gbc.readMem(0xc4da));
        // C1 00ED
        gbc.setState(0x494b, 0x4d18, 0xa770, 0x1b7c, 0x5867, 0xffae, 0x1, 0x1);
        gbc.writeMem(0x494b, { 0xc1 });
        gbc.writeMem(0x4d18, { 0x69, 0x5d });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0x4d1a, gbc.sp());
        EXPECT(0x494c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C1 00EE
        gbc.setState(0x57ca, 0x2b7d, 0x1cd0, 0xaa62, 0x24e4, 0x7a7a, 0x0, 0x1);
        gbc.writeMem(0x2b7d, { 0xa5, 0x74 });
        gbc.writeMem(0x57ca, { 0xc1 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x2b7f, gbc.sp());
        EXPECT(0x57cb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C1 00EF
        gbc.setState(0xb7cc, 0xa237, 0x520, 0xb739, 0xc39e, 0x72ba, 0x0, 0x0);
        gbc.writeMem(0xa237, { 0xcc, 0x35 });
        gbc.writeMem(0xb7cc, { 0xc1 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0xa239, gbc.sp());
        EXPECT(0xb7cd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcc, gbc.readMem(0xa237));
        EXPECT(0x35, gbc.readMem(0xa238));
        EXPECT(0xc1, gbc.readMem(0xb7cc));
        // C1 00F0
        gbc.setState(0x32fb, 0x1aa2, 0x13b0, 0x9686, 0x68c6, 0xd15d, 0x1, 0x0);
        gbc.writeMem(0x1aa2, { 0xbc, 0xf3 });
        gbc.writeMem(0x32fb, { 0xc1 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x1aa4, gbc.sp());
        EXPECT(0x32fc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C1 00F1
        gbc.setState(0x2d0d, 0x298b, 0x48b0, 0x66e5, 0xbec8, 0x58fb, 0x0, 0x0);
        gbc.writeMem(0x298b, { 0x3c, 0xc7 });
        gbc.writeMem(0x2d0d, { 0xc1 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x298d, gbc.sp());
        EXPECT(0x2d0e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C1 00F2
        gbc.setState(0x8da0, 0x32c, 0x6380, 0x8032, 0x5890, 0xacc, 0x0, 0x1);
        gbc.writeMem(0x32c, { 0x32, 0x10 });
        gbc.writeMem(0x8da0, { 0xc1 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x32e, gbc.sp());
        EXPECT(0x8da1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc1, gbc.readMem(0x8da0));
        // C1 00F3
        gbc.setState(0xbf38, 0x1ed5, 0x5000, 0x6fd8, 0xb9f7, 0xcbfd, 0x0, 0x1);
        gbc.writeMem(0x1ed5, { 0xb, 0x16 });
        gbc.writeMem(0xbf38, { 0xc1 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x1ed7, gbc.sp());
        EXPECT(0xbf39, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc1, gbc.readMem(0xbf38));
        // C1 00F4
        gbc.setState(0x6988, 0x60a1, 0xd7b0, 0xfca0, 0x4d25, 0x8759, 0x0, 0x0);
        gbc.writeMem(0x60a1, { 0x28, 0x85 });
        gbc.writeMem(0x6988, { 0xc1 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x60a3, gbc.sp());
        EXPECT(0x6989, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C1 00F5
        gbc.setState(0xa621, 0xb779, 0xb3d0, 0x8f5d, 0x38dd, 0x23ec, 0x1, 0x0);
        gbc.writeMem(0xa621, { 0xc1 });
        gbc.writeMem(0xb779, { 0x9c, 0x15 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0xb77b, gbc.sp());
        EXPECT(0xa622, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc1, gbc.readMem(0xa621));
        EXPECT(0x9c, gbc.readMem(0xb779));
        EXPECT(0x15, gbc.readMem(0xb77a));
        // C1 00F6
        gbc.setState(0x43fd, 0xb825, 0xd2b0, 0xd411, 0xfc66, 0xf5d4, 0x1, 0x0);
        gbc.writeMem(0x43fd, { 0xc1 });
        gbc.writeMem(0xb825, { 0x7f, 0x35 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0xb827, gbc.sp());
        EXPECT(0x43fe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7f, gbc.readMem(0xb825));
        EXPECT(0x35, gbc.readMem(0xb826));
        // C1 00F7
        gbc.setState(0x3c, 0xfad2, 0xfc40, 0x84b4, 0xcc92, 0xb401, 0x1, 0x1);
        gbc.writeMem(0x3c, { 0xc1 });
        gbc.writeMem(0xfad2, { 0xc8, 0x8b });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0xfad4, gbc.sp());
        EXPECT(0x3d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc8, gbc.readMem(0xfad2));
        EXPECT(0x8b, gbc.readMem(0xfad3));
        // C1 00F8
        gbc.setState(0x614a, 0x27a7, 0x25d0, 0x3dfc, 0x70d8, 0xd78c, 0x1, 0x1);
        gbc.writeMem(0x27a7, { 0x67, 0xab });
        gbc.writeMem(0x614a, { 0xc1 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x27a9, gbc.sp());
        EXPECT(0x614b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C1 00F9
        gbc.setState(0xe3a4, 0x8df6, 0x140, 0x1eda, 0x118f, 0xff27, 0x1, 0x1);
        gbc.writeMem(0x8df6, { 0xec, 0xe6 });
        gbc.writeMem(0xe3a4, { 0xc1 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x8df8, gbc.sp());
        EXPECT(0xe3a5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xec, gbc.readMem(0x8df6));
        EXPECT(0xe6, gbc.readMem(0x8df7));
        EXPECT(0xc1, gbc.readMem(0xe3a4));
        // C1 00FA
        gbc.setState(0xee7f, 0x3ba9, 0xe500, 0x916b, 0x5fc7, 0xf1df, 0x1, 0x0);
        gbc.writeMem(0x3ba9, { 0xae, 0xb4 });
        gbc.writeMem(0xee7f, { 0xc1 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x3bab, gbc.sp());
        EXPECT(0xee80, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc1, gbc.readMem(0xee7f));
        // C1 00FB
        gbc.setState(0x280f, 0xe245, 0x8d20, 0x54e1, 0xb5bc, 0x7bb6, 0x0, 0x0);
        gbc.writeMem(0x280f, { 0xc1 });
        gbc.writeMem(0xe245, { 0x67, 0x4d });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0xe247, gbc.sp());
        EXPECT(0x2810, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x67, gbc.readMem(0xe245));
        EXPECT(0x4d, gbc.readMem(0xe246));
        // C1 00FC
        gbc.setState(0x6144, 0x33a1, 0x4a10, 0x7267, 0x14eb, 0xfdaa, 0x1, 0x0);
        gbc.writeMem(0x33a1, { 0x69, 0xcb });
        gbc.writeMem(0x6144, { 0xc1 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x33a3, gbc.sp());
        EXPECT(0x6145, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C1 00FD
        gbc.setState(0x550e, 0x2b50, 0xa250, 0x8710, 0x3c39, 0x92ae, 0x0, 0x1);
        gbc.writeMem(0x2b50, { 0x6b, 0xd4 });
        gbc.writeMem(0x550e, { 0xc1 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0x2b52, gbc.sp());
        EXPECT(0x550f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C1 00FE
        gbc.setState(0x5da3, 0xc2f2, 0xd0f0, 0xbdf1, 0x40ad, 0xec60, 0x0, 0x0);
        gbc.writeMem(0x5da3, { 0xc1 });
        gbc.writeMem(0xc2f2, { 0xd3, 0x9 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0xc2f4, gbc.sp());
        EXPECT(0x5da4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd3, gbc.readMem(0xc2f2));
        EXPECT(0x9, gbc.readMem(0xc2f3));
        // C1 00FF
        gbc.setState(0xdd6e, 0xdd7b, 0x21e0, 0x3178, 0x31eb, 0xf007, 0x1, 0x0);
        gbc.writeMem(0xdd6e, { 0xc1 });
        gbc.writeMem(0xdd7b, { 0x8d, 0xf2 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0xdd7d, gbc.sp());
        EXPECT(0xdd6f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc1, gbc.readMem(0xdd6e));
        EXPECT(0x8d, gbc.readMem(0xdd7b));
        EXPECT(0xf2, gbc.readMem(0xdd7c));
        // C1 0101
        gbc.setState(0xdb72, 0xc191, 0xae10, 0x2a10, 0x5a2a, 0xf271, 0x1, 0x0);
        gbc.writeMem(0xc191, { 0x40, 0xa9 });
        gbc.writeMem(0xdb72, { 0xc1 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0xc193, gbc.sp());
        EXPECT(0xdb73, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x40, gbc.readMem(0xc191));
        EXPECT(0xa9, gbc.readMem(0xc192));
        EXPECT(0xc1, gbc.readMem(0xdb72));
        // C1 0102
        gbc.setState(0xd69f, 0x4e20, 0xcea0, 0x463, 0x1cae, 0x77ec, 0x0, 0x1);
        gbc.writeMem(0x4e20, { 0xff, 0xea });
        gbc.writeMem(0xd69f, { 0xc1 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x4e22, gbc.sp());
        EXPECT(0xd6a0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc1, gbc.readMem(0xd69f));
        // C1 0103
        gbc.setState(0x109f, 0x8ad8, 0x2ef0, 0x9389, 0xebf5, 0x9a7b, 0x1, 0x1);
        gbc.writeMem(0x109f, { 0xc1 });
        gbc.writeMem(0x8ad8, { 0x91, 0x7a });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x8ada, gbc.sp());
        EXPECT(0x10a0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x91, gbc.readMem(0x8ad8));
        EXPECT(0x7a, gbc.readMem(0x8ad9));
        // C1 0104
        gbc.setState(0x33f1, 0xf231, 0xe1b0, 0x9e9d, 0x3ee3, 0x5a1d, 0x1, 0x1);
        gbc.writeMem(0x33f1, { 0xc1 });
        gbc.writeMem(0xf231, { 0xa8, 0xd6 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0xf233, gbc.sp());
        EXPECT(0x33f2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa8, gbc.readMem(0xf231));
        EXPECT(0xd6, gbc.readMem(0xf232));
        // C1 0105
        gbc.setState(0xd75c, 0xc686, 0xb3e0, 0x922b, 0xee1, 0xf733, 0x1, 0x1);
        gbc.writeMem(0xc686, { 0x6a, 0x37 });
        gbc.writeMem(0xd75c, { 0xc1 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0xc688, gbc.sp());
        EXPECT(0xd75d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6a, gbc.readMem(0xc686));
        EXPECT(0x37, gbc.readMem(0xc687));
        EXPECT(0xc1, gbc.readMem(0xd75c));
        // C1 0106
        gbc.setState(0xb646, 0xb4a9, 0x9c50, 0xdd6b, 0xc37c, 0xca6c, 0x0, 0x0);
        gbc.writeMem(0xb4a9, { 0xaa, 0xa5 });
        gbc.writeMem(0xb646, { 0xc1 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0xb4ab, gbc.sp());
        EXPECT(0xb647, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xaa, gbc.readMem(0xb4a9));
        EXPECT(0xa5, gbc.readMem(0xb4aa));
        EXPECT(0xc1, gbc.readMem(0xb646));
        // C1 0107
        gbc.setState(0x3320, 0xd482, 0x6d0, 0xb3a3, 0x9752, 0x4ddb, 0x0, 0x1);
        gbc.writeMem(0x3320, { 0xc1 });
        gbc.writeMem(0xd482, { 0xd0, 0xe3 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0xd484, gbc.sp());
        EXPECT(0x3321, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd0, gbc.readMem(0xd482));
        EXPECT(0xe3, gbc.readMem(0xd483));
        // C1 0108
        gbc.setState(0x163e, 0xc69a, 0xe680, 0xf00, 0xb6ca, 0xc66f, 0x1, 0x0);
        gbc.writeMem(0x163e, { 0xc1 });
        gbc.writeMem(0xc69a, { 0x22, 0x16 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0xc69c, gbc.sp());
        EXPECT(0x163f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x22, gbc.readMem(0xc69a));
        EXPECT(0x16, gbc.readMem(0xc69b));
        // C1 0109
        gbc.setState(0x5147, 0x34a3, 0x2ed0, 0x6541, 0x20fd, 0xe7ee, 0x0, 0x1);
        gbc.writeMem(0x34a3, { 0xe5, 0x13 });
        gbc.writeMem(0x5147, { 0xc1 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x34a5, gbc.sp());
        EXPECT(0x5148, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C1 010A
        gbc.setState(0x9d16, 0xc146, 0xa510, 0x1cba, 0x8641, 0x2314, 0x1, 0x1);
        gbc.writeMem(0x9d16, { 0xc1 });
        gbc.writeMem(0xc146, { 0x50, 0x65 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0xc148, gbc.sp());
        EXPECT(0x9d17, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc1, gbc.readMem(0x9d16));
        EXPECT(0x50, gbc.readMem(0xc146));
        EXPECT(0x65, gbc.readMem(0xc147));
        // C1 010B
        gbc.setState(0xa5d1, 0xba9f, 0xd890, 0xde9f, 0x7b5, 0x2875, 0x1, 0x1);
        gbc.writeMem(0xa5d1, { 0xc1 });
        gbc.writeMem(0xba9f, { 0xc5, 0xbf });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0xbaa1, gbc.sp());
        EXPECT(0xa5d2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc1, gbc.readMem(0xa5d1));
        EXPECT(0xc5, gbc.readMem(0xba9f));
        EXPECT(0xbf, gbc.readMem(0xbaa0));
        // C1 010C
        gbc.setState(0x6516, 0x4ce9, 0x9170, 0x98a0, 0xc507, 0x1704, 0x0, 0x1);
        gbc.writeMem(0x4ce9, { 0x3f, 0x75 });
        gbc.writeMem(0x6516, { 0xc1 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x4ceb, gbc.sp());
        EXPECT(0x6517, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C1 010D
        gbc.setState(0xaf86, 0x4e32, 0x6800, 0xfbb2, 0xee69, 0x9b5f, 0x1, 0x1);
        gbc.writeMem(0x4e32, { 0xe4, 0x9 });
        gbc.writeMem(0xaf86, { 0xc1 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x4e34, gbc.sp());
        EXPECT(0xaf87, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc1, gbc.readMem(0xaf86));
        // C1 010E
        gbc.setState(0xde8b, 0x6abe, 0x9260, 0xa9c0, 0x63ae, 0x64a2, 0x0, 0x0);
        gbc.writeMem(0x6abe, { 0xda, 0x9f });
        gbc.writeMem(0xde8b, { 0xc1 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x6ac0, gbc.sp());
        EXPECT(0xde8c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc1, gbc.readMem(0xde8b));
        // C1 010F
        gbc.setState(0x957a, 0x81c9, 0x9b50, 0x63b2, 0x110b, 0xde60, 0x1, 0x0);
        gbc.writeMem(0x81c9, { 0x5f, 0xa3 });
        gbc.writeMem(0x957a, { 0xc1 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x81cb, gbc.sp());
        EXPECT(0x957b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5f, gbc.readMem(0x81c9));
        EXPECT(0xa3, gbc.readMem(0x81ca));
        EXPECT(0xc1, gbc.readMem(0x957a));
        // C1 0110
        gbc.setState(0xc3be, 0x7c80, 0xb850, 0x6f1e, 0x5459, 0x1e8a, 0x1, 0x1);
        gbc.writeMem(0x7c80, { 0xbf, 0xee });
        gbc.writeMem(0xc3be, { 0xc1 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x7c82, gbc.sp());
        EXPECT(0xc3bf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc1, gbc.readMem(0xc3be));
        // C1 0111
        gbc.setState(0x5a91, 0xb907, 0x7fb0, 0x8d62, 0xd4bb, 0xae86, 0x0, 0x0);
        gbc.writeMem(0x5a91, { 0xc1 });
        gbc.writeMem(0xb907, { 0x2c, 0x4b });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0xb909, gbc.sp());
        EXPECT(0x5a92, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2c, gbc.readMem(0xb907));
        EXPECT(0x4b, gbc.readMem(0xb908));
        // C1 0112
        gbc.setState(0x6ac7, 0x4c18, 0xc8b0, 0x2000, 0x70b3, 0xc29e, 0x1, 0x1);
        gbc.writeMem(0x4c18, { 0xea, 0xcc });
        gbc.writeMem(0x6ac7, { 0xc1 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x4c1a, gbc.sp());
        EXPECT(0x6ac8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C1 0113
        gbc.setState(0x4703, 0x50f7, 0xe850, 0x3d18, 0xef57, 0x117d, 0x0, 0x1);
        gbc.writeMem(0x4703, { 0xc1 });
        gbc.writeMem(0x50f7, { 0xf8, 0x61 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x50f9, gbc.sp());
        EXPECT(0x4704, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C1 0114
        gbc.setState(0x4a9e, 0x4718, 0xb7a0, 0xc027, 0xa2d3, 0xd0dc, 0x0, 0x1);
        gbc.writeMem(0x4718, { 0x32, 0xbb });
        gbc.writeMem(0x4a9e, { 0xc1 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x471a, gbc.sp());
        EXPECT(0x4a9f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C1 0115
        gbc.setState(0x8c98, 0x4628, 0x9590, 0x6e14, 0xd022, 0x1e7, 0x0, 0x0);
        gbc.writeMem(0x4628, { 0x6d, 0x9e });
        gbc.writeMem(0x8c98, { 0xc1 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x462a, gbc.sp());
        EXPECT(0x8c99, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc1, gbc.readMem(0x8c98));
        // C1 0116
        gbc.setState(0x5fdc, 0x6581, 0xdbf0, 0xe6ad, 0xfe1a, 0x3035, 0x1, 0x0);
        gbc.writeMem(0x5fdc, { 0xc1 });
        gbc.writeMem(0x6581, { 0xf0, 0x82 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x6583, gbc.sp());
        EXPECT(0x5fdd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C1 0117
        gbc.setState(0x29b6, 0x1f81, 0x8c00, 0x634b, 0x5291, 0x3fdc, 0x1, 0x1);
        gbc.writeMem(0x1f81, { 0x49, 0xcb });
        gbc.writeMem(0x29b6, { 0xc1 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x1f83, gbc.sp());
        EXPECT(0x29b7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C1 0118
        gbc.setState(0xd12b, 0xe219, 0x9cd0, 0xd7cd, 0x7f7c, 0x437a, 0x0, 0x0);
        gbc.writeMem(0xd12b, { 0xc1 });
        gbc.writeMem(0xe219, { 0x3f, 0x5 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0xe21b, gbc.sp());
        EXPECT(0xd12c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc1, gbc.readMem(0xd12b));
        EXPECT(0x3f, gbc.readMem(0xe219));
        EXPECT(0x5, gbc.readMem(0xe21a));
        // C1 0119
        gbc.setState(0x3b9b, 0x190a, 0x63d0, 0x349f, 0xb31, 0x58a4, 0x1, 0x0);
        gbc.writeMem(0x190a, { 0x6e, 0x15 });
        gbc.writeMem(0x3b9b, { 0xc1 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x190c, gbc.sp());
        EXPECT(0x3b9c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C1 011A
        gbc.setState(0x78de, 0xa70b, 0x56d0, 0x484e, 0x26d2, 0x9dc, 0x1, 0x1);
        gbc.writeMem(0x78de, { 0xc1 });
        gbc.writeMem(0xa70b, { 0xf5, 0x1f });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0xa70d, gbc.sp());
        EXPECT(0x78df, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf5, gbc.readMem(0xa70b));
        EXPECT(0x1f, gbc.readMem(0xa70c));
        // C1 011B
        gbc.setState(0x6454, 0x1f2, 0x6b0, 0x453c, 0xeca6, 0xdf0e, 0x1, 0x0);
        gbc.writeMem(0x1f2, { 0xcb, 0xf });
        gbc.writeMem(0x6454, { 0xc1 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x1f4, gbc.sp());
        EXPECT(0x6455, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C1 011C
        gbc.setState(0xa256, 0x82c3, 0x5b60, 0x93a, 0xda35, 0xfc14, 0x1, 0x0);
        gbc.writeMem(0x82c3, { 0xe5, 0xcb });
        gbc.writeMem(0xa256, { 0xc1 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x82c5, gbc.sp());
        EXPECT(0xa257, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe5, gbc.readMem(0x82c3));
        EXPECT(0xcb, gbc.readMem(0x82c4));
        EXPECT(0xc1, gbc.readMem(0xa256));
        // C1 011D
        gbc.setState(0x421a, 0xbe82, 0x29b0, 0xa3c1, 0xa2b5, 0x84d2, 0x1, 0x0);
        gbc.writeMem(0x421a, { 0xc1 });
        gbc.writeMem(0xbe82, { 0x12, 0xbe });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0xbe84, gbc.sp());
        EXPECT(0x421b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x12, gbc.readMem(0xbe82));
        EXPECT(0xbe, gbc.readMem(0xbe83));
        // C1 011E
        gbc.setState(0x89b4, 0xe2bb, 0x59d0, 0x768d, 0xb135, 0x1d1c, 0x1, 0x1);
        gbc.writeMem(0x89b4, { 0xc1 });
        gbc.writeMem(0xe2bb, { 0x5c, 0x66 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0xe2bd, gbc.sp());
        EXPECT(0x89b5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc1, gbc.readMem(0x89b4));
        EXPECT(0x5c, gbc.readMem(0xe2bb));
        EXPECT(0x66, gbc.readMem(0xe2bc));
        // C1 011F
        gbc.setState(0x6836, 0xd2ed, 0xd010, 0x1cbc, 0x8882, 0xda42, 0x0, 0x1);
        gbc.writeMem(0x6836, { 0xc1 });
        gbc.writeMem(0xd2ed, { 0xd7, 0x68 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0xd2ef, gbc.sp());
        EXPECT(0x6837, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd7, gbc.readMem(0xd2ed));
        EXPECT(0x68, gbc.readMem(0xd2ee));
        // C1 0120
        gbc.setState(0xa579, 0xe749, 0xea10, 0xceb1, 0xdaf6, 0xbef8, 0x0, 0x1);
        gbc.writeMem(0xa579, { 0xc1 });
        gbc.writeMem(0xe749, { 0x4e, 0x54 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0xe74b, gbc.sp());
        EXPECT(0xa57a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc1, gbc.readMem(0xa579));
        EXPECT(0x4e, gbc.readMem(0xe749));
        EXPECT(0x54, gbc.readMem(0xe74a));
        // C1 0122
        gbc.setState(0xef16, 0x2d16, 0x2230, 0x1a3, 0x4aa4, 0x1da, 0x1, 0x0);
        gbc.writeMem(0x2d16, { 0x70, 0x22 });
        gbc.writeMem(0xef16, { 0xc1 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x2d18, gbc.sp());
        EXPECT(0xef17, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc1, gbc.readMem(0xef16));
        // C1 0123
        gbc.setState(0x84ac, 0xc0f4, 0x5d70, 0x91d8, 0x3cde, 0x5fa5, 0x1, 0x1);
        gbc.writeMem(0x84ac, { 0xc1 });
        gbc.writeMem(0xc0f4, { 0xe3, 0xcf });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0xc0f6, gbc.sp());
        EXPECT(0x84ad, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc1, gbc.readMem(0x84ac));
        EXPECT(0xe3, gbc.readMem(0xc0f4));
        EXPECT(0xcf, gbc.readMem(0xc0f5));
        // C1 0124
        gbc.setState(0x18c1, 0x9d3c, 0x55a0, 0xcd85, 0x8b69, 0x7b96, 0x0, 0x1);
        gbc.writeMem(0x18c1, { 0xc1 });
        gbc.writeMem(0x9d3c, { 0x5f, 0xeb });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x9d3e, gbc.sp());
        EXPECT(0x18c2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5f, gbc.readMem(0x9d3c));
        EXPECT(0xeb, gbc.readMem(0x9d3d));
        // C1 0125
        gbc.setState(0xdf80, 0x7f35, 0x2c50, 0x5ff0, 0x8aa, 0xb321, 0x1, 0x0);
        gbc.writeMem(0x7f35, { 0x9a, 0x1f });
        gbc.writeMem(0xdf80, { 0xc1 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x7f37, gbc.sp());
        EXPECT(0xdf81, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc1, gbc.readMem(0xdf80));
        // C1 0126
        gbc.setState(0x99ec, 0x8b69, 0x5690, 0x8848, 0x7d01, 0x8885, 0x0, 0x1);
        gbc.writeMem(0x8b69, { 0xb4, 0x9f });
        gbc.writeMem(0x99ec, { 0xc1 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x8b6b, gbc.sp());
        EXPECT(0x99ed, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb4, gbc.readMem(0x8b69));
        EXPECT(0x9f, gbc.readMem(0x8b6a));
        EXPECT(0xc1, gbc.readMem(0x99ec));
        // C1 0127
        gbc.setState(0x84bf, 0xacca, 0xbc60, 0x8943, 0xd0e6, 0xfcb6, 0x1, 0x1);
        gbc.writeMem(0x84bf, { 0xc1 });
        gbc.writeMem(0xacca, { 0x17, 0xfb });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0xaccc, gbc.sp());
        EXPECT(0x84c0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc1, gbc.readMem(0x84bf));
        EXPECT(0x17, gbc.readMem(0xacca));
        EXPECT(0xfb, gbc.readMem(0xaccb));
        // C1 0129
        gbc.setState(0x23f0, 0x13b1, 0x5490, 0x8896, 0x259c, 0x53de, 0x0, 0x0);
        gbc.writeMem(0x13b1, { 0x35, 0x5c });
        gbc.writeMem(0x23f0, { 0xc1 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x13b3, gbc.sp());
        EXPECT(0x23f1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C1 012A
        gbc.setState(0x1ff0, 0x3bc3, 0x8a60, 0x6b50, 0x46a5, 0x5767, 0x1, 0x1);
        gbc.writeMem(0x1ff0, { 0xc1 });
        gbc.writeMem(0x3bc3, { 0xb6, 0x25 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x3bc5, gbc.sp());
        EXPECT(0x1ff1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C1 012B
        gbc.setState(0xd053, 0x660e, 0xe820, 0x6e01, 0x2c89, 0x6caa, 0x0, 0x0);
        gbc.writeMem(0x660e, { 0x97, 0x9 });
        gbc.writeMem(0xd053, { 0xc1 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x6610, gbc.sp());
        EXPECT(0xd054, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc1, gbc.readMem(0xd053));
        // C1 012C
        gbc.setState(0x8c8c, 0xa95c, 0x2d80, 0xee7c, 0xf60b, 0x469c, 0x1, 0x0);
        gbc.writeMem(0x8c8c, { 0xc1 });
        gbc.writeMem(0xa95c, { 0x82, 0xd5 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0xa95e, gbc.sp());
        EXPECT(0x8c8d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc1, gbc.readMem(0x8c8c));
        EXPECT(0x82, gbc.readMem(0xa95c));
        EXPECT(0xd5, gbc.readMem(0xa95d));
        // C1 012D
        gbc.setState(0x77ae, 0x6ef0, 0x56d0, 0x9556, 0x9d1c, 0x64d7, 0x1, 0x0);
        gbc.writeMem(0x6ef0, { 0x5e, 0xba });
        gbc.writeMem(0x77ae, { 0xc1 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0x6ef2, gbc.sp());
        EXPECT(0x77af, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C1 012E
        gbc.setState(0xc12d, 0x7f1d, 0x55d0, 0xce9a, 0xc0dc, 0x4ec4, 0x1, 0x1);
        gbc.writeMem(0x7f1d, { 0x97, 0xcc });
        gbc.writeMem(0xc12d, { 0xc1 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x7f1f, gbc.sp());
        EXPECT(0xc12e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc1, gbc.readMem(0xc12d));
        // C1 012F
        gbc.setState(0xec00, 0x4912, 0x8380, 0x737d, 0x6771, 0x67cc, 0x0, 0x0);
        gbc.writeMem(0x4912, { 0xad, 0xe9 });
        gbc.writeMem(0xec00, { 0xc1 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x4914, gbc.sp());
        EXPECT(0xec01, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc1, gbc.readMem(0xec00));
        // C1 0130
        gbc.setState(0xa1e6, 0xcd5f, 0x67e0, 0x6a00, 0x324a, 0xdc53, 0x0, 0x1);
        gbc.writeMem(0xa1e6, { 0xc1 });
        gbc.writeMem(0xcd5f, { 0x12, 0x80 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0xcd61, gbc.sp());
        EXPECT(0xa1e7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc1, gbc.readMem(0xa1e6));
        EXPECT(0x12, gbc.readMem(0xcd5f));
        EXPECT(0x80, gbc.readMem(0xcd60));
        // C1 0131
        gbc.setState(0x8410, 0x12a8, 0xa830, 0x3904, 0xf9c6, 0x2e95, 0x0, 0x0);
        gbc.writeMem(0x12a8, { 0xd, 0xb2 });
        gbc.writeMem(0x8410, { 0xc1 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x12aa, gbc.sp());
        EXPECT(0x8411, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc1, gbc.readMem(0x8410));
        // C1 0132
        gbc.setState(0xe59d, 0x4e29, 0xbed0, 0x3080, 0x2cbb, 0x2d72, 0x1, 0x1);
        gbc.writeMem(0x4e29, { 0x3b, 0x74 });
        gbc.writeMem(0xe59d, { 0xc1 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x4e2b, gbc.sp());
        EXPECT(0xe59e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc1, gbc.readMem(0xe59d));
        // C1 0133
        gbc.setState(0x9ebf, 0x3450, 0x1690, 0x8bdf, 0x8d31, 0x8b5f, 0x1, 0x0);
        gbc.writeMem(0x3450, { 0x34, 0xdf });
        gbc.writeMem(0x9ebf, { 0xc1 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x3452, gbc.sp());
        EXPECT(0x9ec0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc1, gbc.readMem(0x9ebf));
        // C1 0135
        gbc.setState(0x9a56, 0x1c99, 0xc680, 0x9107, 0x343d, 0x9e6, 0x1, 0x1);
        gbc.writeMem(0x1c99, { 0x47, 0xa4 });
        gbc.writeMem(0x9a56, { 0xc1 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x1c9b, gbc.sp());
        EXPECT(0x9a57, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc1, gbc.readMem(0x9a56));
        // C1 0136
        gbc.setState(0x447b, 0xba39, 0x1d00, 0x8f0c, 0xf0d6, 0x2a5e, 0x1, 0x0);
        gbc.writeMem(0x447b, { 0xc1 });
        gbc.writeMem(0xba39, { 0x7d, 0xac });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0xba3b, gbc.sp());
        EXPECT(0x447c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7d, gbc.readMem(0xba39));
        EXPECT(0xac, gbc.readMem(0xba3a));
        // C1 0137
        gbc.setState(0x6322, 0x4e3, 0xe060, 0x5d4b, 0xada4, 0x94df, 0x1, 0x1);
        gbc.writeMem(0x4e3, { 0x59, 0x69 });
        gbc.writeMem(0x6322, { 0xc1 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x4e5, gbc.sp());
        EXPECT(0x6323, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C1 0138
        gbc.setState(0xb267, 0x4107, 0x3030, 0x8837, 0xc860, 0x61fe, 0x1, 0x1);
        gbc.writeMem(0x4107, { 0xfb, 0x80 });
        gbc.writeMem(0xb267, { 0xc1 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x4109, gbc.sp());
        EXPECT(0xb268, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc1, gbc.readMem(0xb267));
        // C1 0139
        gbc.setState(0x6d29, 0x8c86, 0x9c60, 0x96a9, 0xd057, 0x8676, 0x1, 0x1);
        gbc.writeMem(0x6d29, { 0xc1 });
        gbc.writeMem(0x8c86, { 0x9d, 0x84 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x8c88, gbc.sp());
        EXPECT(0x6d2a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9d, gbc.readMem(0x8c86));
        EXPECT(0x84, gbc.readMem(0x8c87));
        // C1 013A
        gbc.setState(0x15e9, 0x76f1, 0x94f0, 0x1147, 0xffe, 0x8f56, 0x0, 0x1);
        gbc.writeMem(0x15e9, { 0xc1 });
        gbc.writeMem(0x76f1, { 0x94, 0x5f });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0x76f3, gbc.sp());
        EXPECT(0x15ea, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C1 013B
        gbc.setState(0x71e0, 0xa489, 0x3490, 0xd6a, 0x6e31, 0xb364, 0x0, 0x1);
        gbc.writeMem(0x71e0, { 0xc1 });
        gbc.writeMem(0xa489, { 0xe6, 0x87 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0xa48b, gbc.sp());
        EXPECT(0x71e1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe6, gbc.readMem(0xa489));
        EXPECT(0x87, gbc.readMem(0xa48a));
        // C1 013C
        gbc.setState(0xcb9e, 0x8e7a, 0xe820, 0xf9bf, 0xeaa0, 0x748d, 0x1, 0x1);
        gbc.writeMem(0x8e7a, { 0x1e, 0x94 });
        gbc.writeMem(0xcb9e, { 0xc1 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x8e7c, gbc.sp());
        EXPECT(0xcb9f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1e, gbc.readMem(0x8e7a));
        EXPECT(0x94, gbc.readMem(0x8e7b));
        EXPECT(0xc1, gbc.readMem(0xcb9e));
        // C1 013D
        gbc.setState(0xeee1, 0x7795, 0x4f90, 0x10aa, 0x760b, 0xedbc, 0x1, 0x1);
        gbc.writeMem(0x7795, { 0x65, 0x6d });
        gbc.writeMem(0xeee1, { 0xc1 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x7797, gbc.sp());
        EXPECT(0xeee2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc1, gbc.readMem(0xeee1));
        // C1 013E
        gbc.setState(0x38c9, 0xdeca, 0xada0, 0x93da, 0xa517, 0x2f40, 0x0, 0x0);
        gbc.writeMem(0x38c9, { 0xc1 });
        gbc.writeMem(0xdeca, { 0x14, 0xda });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0xdecc, gbc.sp());
        EXPECT(0x38ca, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x14, gbc.readMem(0xdeca));
        EXPECT(0xda, gbc.readMem(0xdecb));
        // C1 013F
        gbc.setState(0x443e, 0xe173, 0xe920, 0xf576, 0x4df8, 0xa935, 0x1, 0x0);
        gbc.writeMem(0x443e, { 0xc1 });
        gbc.writeMem(0xe173, { 0xca, 0xf4 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0xe175, gbc.sp());
        EXPECT(0x443f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xca, gbc.readMem(0xe173));
        EXPECT(0xf4, gbc.readMem(0xe174));
        // C1 0140
        gbc.setState(0x1171, 0x2582, 0x84b0, 0xf3b5, 0x76c8, 0x52fc, 0x1, 0x0);
        gbc.writeMem(0x1171, { 0xc1 });
        gbc.writeMem(0x2582, { 0x86, 0xb2 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x2584, gbc.sp());
        EXPECT(0x1172, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C1 0141
        gbc.setState(0x2543, 0x9058, 0xeeb0, 0xdb6e, 0x5f56, 0x27aa, 0x1, 0x1);
        gbc.writeMem(0x2543, { 0xc1 });
        gbc.writeMem(0x9058, { 0xb4, 0xee });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x905a, gbc.sp());
        EXPECT(0x2544, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb4, gbc.readMem(0x9058));
        EXPECT(0xee, gbc.readMem(0x9059));
        // C1 0142
        gbc.setState(0x77cd, 0x4006, 0xff40, 0xe04, 0x2ddf, 0xac30, 0x1, 0x1);
        gbc.writeMem(0x4006, { 0xad, 0xc });
        gbc.writeMem(0x77cd, { 0xc1 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x4008, gbc.sp());
        EXPECT(0x77ce, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C1 0143
        gbc.setState(0xb554, 0x57b8, 0x1870, 0x9a9f, 0xe9a9, 0x7900, 0x1, 0x1);
        gbc.writeMem(0x57b8, { 0x89, 0xfb });
        gbc.writeMem(0xb554, { 0xc1 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x57ba, gbc.sp());
        EXPECT(0xb555, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc1, gbc.readMem(0xb554));
        // C1 0144
        gbc.setState(0x4d24, 0xd26a, 0x1cf0, 0xed16, 0x6c94, 0x4061, 0x1, 0x0);
        gbc.writeMem(0x4d24, { 0xc1 });
        gbc.writeMem(0xd26a, { 0x71, 0xca });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0xd26c, gbc.sp());
        EXPECT(0x4d25, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x71, gbc.readMem(0xd26a));
        EXPECT(0xca, gbc.readMem(0xd26b));
        // C1 0145
        gbc.setState(0xc116, 0xe52b, 0xf120, 0xd33b, 0x3e3e, 0x46d4, 0x1, 0x1);
        gbc.writeMem(0xc116, { 0xc1 });
        gbc.writeMem(0xe52b, { 0x2, 0x2b });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0xe52d, gbc.sp());
        EXPECT(0xc117, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc1, gbc.readMem(0xc116));
        EXPECT(0x2, gbc.readMem(0xe52b));
        EXPECT(0x2b, gbc.readMem(0xe52c));
        // C1 0147
        gbc.setState(0x336c, 0x9e4e, 0x7150, 0xf823, 0xa208, 0xef2c, 0x0, 0x0);
        gbc.writeMem(0x336c, { 0xc1 });
        gbc.writeMem(0x9e4e, { 0xa6, 0x47 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x9e50, gbc.sp());
        EXPECT(0x336d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa6, gbc.readMem(0x9e4e));
        EXPECT(0x47, gbc.readMem(0x9e4f));
        // C1 0149
        gbc.setState(0xeb78, 0x78ad, 0xb380, 0x51d9, 0xabc2, 0xb8c7, 0x1, 0x0);
        gbc.writeMem(0x78ad, { 0xac, 0xd3 });
        gbc.writeMem(0xeb78, { 0xc1 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x78af, gbc.sp());
        EXPECT(0xeb79, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc1, gbc.readMem(0xeb78));
        // C1 014A
        gbc.setState(0x962, 0xbbe, 0xd550, 0x3b0, 0x376b, 0xb570, 0x1, 0x1);
        gbc.writeMem(0x962, { 0xc1 });
        gbc.writeMem(0xbbe, { 0x59, 0xd4 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0xbc0, gbc.sp());
        EXPECT(0x963, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C1 014C
        gbc.setState(0x7a31, 0x8e1, 0xc380, 0x66d2, 0xb9df, 0xff7c, 0x0, 0x1);
        gbc.writeMem(0x8e1, { 0xb0, 0x27 });
        gbc.writeMem(0x7a31, { 0xc1 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x8e3, gbc.sp());
        EXPECT(0x7a32, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C1 014D
        gbc.setState(0xa4a6, 0xc477, 0x61e0, 0x2d58, 0x1a84, 0x9d32, 0x1, 0x1);
        gbc.writeMem(0xa4a6, { 0xc1 });
        gbc.writeMem(0xc477, { 0xec, 0xd });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0xc479, gbc.sp());
        EXPECT(0xa4a7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc1, gbc.readMem(0xa4a6));
        EXPECT(0xec, gbc.readMem(0xc477));
        EXPECT(0xd, gbc.readMem(0xc478));
        // C1 014E
        gbc.setState(0x528f, 0x9020, 0xaee0, 0xb624, 0x11f4, 0x6702, 0x1, 0x1);
        gbc.writeMem(0x528f, { 0xc1 });
        gbc.writeMem(0x9020, { 0x7b, 0x5c });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x9022, gbc.sp());
        EXPECT(0x5290, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7b, gbc.readMem(0x9020));
        EXPECT(0x5c, gbc.readMem(0x9021));
        // C1 014F
        gbc.setState(0x4450, 0xc74a, 0xe9f0, 0xedd8, 0x7d73, 0x7c9f, 0x0, 0x1);
        gbc.writeMem(0x4450, { 0xc1 });
        gbc.writeMem(0xc74a, { 0xbd, 0x9 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0xc74c, gbc.sp());
        EXPECT(0x4451, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbd, gbc.readMem(0xc74a));
        EXPECT(0x9, gbc.readMem(0xc74b));
        // C1 0150
        gbc.setState(0x5e0, 0x2b33, 0x60b0, 0x7c31, 0x59ea, 0x9d19, 0x0, 0x0);
        gbc.writeMem(0x5e0, { 0xc1 });
        gbc.writeMem(0x2b33, { 0xed, 0x5e });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x2b35, gbc.sp());
        EXPECT(0x5e1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C1 0151
        gbc.setState(0x3a8e, 0xe176, 0x71d0, 0x4fd0, 0xe029, 0x8599, 0x0, 0x0);
        gbc.writeMem(0x3a8e, { 0xc1 });
        gbc.writeMem(0xe176, { 0xdf, 0x55 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0xe178, gbc.sp());
        EXPECT(0x3a8f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xdf, gbc.readMem(0xe176));
        EXPECT(0x55, gbc.readMem(0xe177));
        // C1 0152
        gbc.setState(0xa427, 0xe729, 0xa9f0, 0xa180, 0xf207, 0xc34b, 0x1, 0x1);
        gbc.writeMem(0xa427, { 0xc1 });
        gbc.writeMem(0xe729, { 0x9d, 0xd9 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0xe72b, gbc.sp());
        EXPECT(0xa428, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc1, gbc.readMem(0xa427));
        EXPECT(0x9d, gbc.readMem(0xe729));
        EXPECT(0xd9, gbc.readMem(0xe72a));
        // C1 0153
        gbc.setState(0x966c, 0x8cbd, 0x8b70, 0x2e01, 0x182a, 0x4584, 0x1, 0x0);
        gbc.writeMem(0x8cbd, { 0xdd, 0x18 });
        gbc.writeMem(0x966c, { 0xc1 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x8cbf, gbc.sp());
        EXPECT(0x966d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xdd, gbc.readMem(0x8cbd));
        EXPECT(0x18, gbc.readMem(0x8cbe));
        EXPECT(0xc1, gbc.readMem(0x966c));
        // C1 0154
        gbc.setState(0x5883, 0x4692, 0xeff0, 0xe4a9, 0x8307, 0xdd74, 0x1, 0x1);
        gbc.writeMem(0x4692, { 0xd9, 0x9b });
        gbc.writeMem(0x5883, { 0xc1 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x4694, gbc.sp());
        EXPECT(0x5884, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C1 0155
        gbc.setState(0x252a, 0xb784, 0x7dc0, 0x2c1f, 0x530c, 0xc93, 0x0, 0x1);
        gbc.writeMem(0x252a, { 0xc1 });
        gbc.writeMem(0xb784, { 0x49, 0x75 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0xb786, gbc.sp());
        EXPECT(0x252b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x49, gbc.readMem(0xb784));
        EXPECT(0x75, gbc.readMem(0xb785));
        // C1 0156
        gbc.setState(0x976f, 0xe7a9, 0x3490, 0x5b28, 0x9fd8, 0xb052, 0x1, 0x0);
        gbc.writeMem(0x976f, { 0xc1 });
        gbc.writeMem(0xe7a9, { 0xd1, 0xc0 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0xe7ab, gbc.sp());
        EXPECT(0x9770, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc1, gbc.readMem(0x976f));
        EXPECT(0xd1, gbc.readMem(0xe7a9));
        EXPECT(0xc0, gbc.readMem(0xe7aa));
        // C1 0157
        gbc.setState(0xaf4a, 0x5531, 0x7a00, 0x9f80, 0xe3e2, 0x7a0c, 0x0, 0x0);
        gbc.writeMem(0x5531, { 0x3d, 0x2 });
        gbc.writeMem(0xaf4a, { 0xc1 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x5533, gbc.sp());
        EXPECT(0xaf4b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc1, gbc.readMem(0xaf4a));
        // C1 0158
        gbc.setState(0x36b9, 0x6ce1, 0x16a0, 0x6d19, 0xa890, 0x494a, 0x1, 0x1);
        gbc.writeMem(0x36b9, { 0xc1 });
        gbc.writeMem(0x6ce1, { 0x33, 0xa9 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x6ce3, gbc.sp());
        EXPECT(0x36ba, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C1 0159
        gbc.setState(0x9a4, 0x2f7f, 0x5440, 0x3110, 0x56f9, 0xf7bb, 0x0, 0x0);
        gbc.writeMem(0x9a4, { 0xc1 });
        gbc.writeMem(0x2f7f, { 0xd, 0xcc });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x2f81, gbc.sp());
        EXPECT(0x9a5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C1 015A
        gbc.setState(0x5be4, 0x85b1, 0xb1a0, 0x4625, 0xd606, 0x6fde, 0x1, 0x1);
        gbc.writeMem(0x5be4, { 0xc1 });
        gbc.writeMem(0x85b1, { 0xc4, 0x98 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x85b3, gbc.sp());
        EXPECT(0x5be5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc4, gbc.readMem(0x85b1));
        EXPECT(0x98, gbc.readMem(0x85b2));
        // C1 015B
        gbc.setState(0xbc39, 0xb7de, 0x2d20, 0x4cdd, 0x8805, 0xda1f, 0x1, 0x1);
        gbc.writeMem(0xb7de, { 0xdf, 0x40 });
        gbc.writeMem(0xbc39, { 0xc1 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0xb7e0, gbc.sp());
        EXPECT(0xbc3a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xdf, gbc.readMem(0xb7de));
        EXPECT(0x40, gbc.readMem(0xb7df));
        EXPECT(0xc1, gbc.readMem(0xbc39));
        // C1 015C
        gbc.setState(0xcbcb, 0xe546, 0xdb10, 0x37a6, 0x5a4, 0x329b, 0x0, 0x0);
        gbc.writeMem(0xcbcb, { 0xc1 });
        gbc.writeMem(0xe546, { 0x16, 0xb2 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0xe548, gbc.sp());
        EXPECT(0xcbcc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc1, gbc.readMem(0xcbcb));
        EXPECT(0x16, gbc.readMem(0xe546));
        EXPECT(0xb2, gbc.readMem(0xe547));
        // C1 015D
        gbc.setState(0xb3e8, 0x1eb0, 0xd440, 0x4fb5, 0x35b2, 0x31ed, 0x1, 0x1);
        gbc.writeMem(0x1eb0, { 0x4e, 0xed });
        gbc.writeMem(0xb3e8, { 0xc1 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x1eb2, gbc.sp());
        EXPECT(0xb3e9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc1, gbc.readMem(0xb3e8));
        // C1 015E
        gbc.setState(0x70f0, 0x9ffb, 0x3180, 0xa4a7, 0x535e, 0x7cf3, 0x1, 0x1);
        gbc.writeMem(0x70f0, { 0xc1 });
        gbc.writeMem(0x9ffb, { 0x89, 0x39 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x9ffd, gbc.sp());
        EXPECT(0x70f1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x89, gbc.readMem(0x9ffb));
        EXPECT(0x39, gbc.readMem(0x9ffc));
        // C1 015F
        gbc.setState(0x6cb4, 0x4372, 0xe790, 0xee8b, 0x745d, 0x7da0, 0x0, 0x1);
        gbc.writeMem(0x4372, { 0x3b, 0x15 });
        gbc.writeMem(0x6cb4, { 0xc1 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x4374, gbc.sp());
        EXPECT(0x6cb5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C1 0160
        gbc.setState(0xd87, 0x8044, 0x8510, 0xb42d, 0x608f, 0x52c1, 0x0, 0x0);
        gbc.writeMem(0xd87, { 0xc1 });
        gbc.writeMem(0x8044, { 0x1a, 0xf3 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x8046, gbc.sp());
        EXPECT(0xd88, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1a, gbc.readMem(0x8044));
        EXPECT(0xf3, gbc.readMem(0x8045));
        // C1 0161
        gbc.setState(0x4bd1, 0x1644, 0xdd10, 0x2938, 0x7db6, 0xec74, 0x0, 0x0);
        gbc.writeMem(0x1644, { 0xd9, 0x26 });
        gbc.writeMem(0x4bd1, { 0xc1 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x1646, gbc.sp());
        EXPECT(0x4bd2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C1 0162
        gbc.setState(0xd03e, 0x941, 0x1c0, 0x6ef3, 0xb917, 0x7fbf, 0x0, 0x1);
        gbc.writeMem(0x941, { 0x5a, 0x4d });
        gbc.writeMem(0xd03e, { 0xc1 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x943, gbc.sp());
        EXPECT(0xd03f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc1, gbc.readMem(0xd03e));
        // C1 0163
        gbc.setState(0xdd2c, 0x3ec8, 0x1160, 0xda32, 0xf167, 0xe889, 0x1, 0x1);
        gbc.writeMem(0x3ec8, { 0xc0, 0x63 });
        gbc.writeMem(0xdd2c, { 0xc1 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x3eca, gbc.sp());
        EXPECT(0xdd2d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc1, gbc.readMem(0xdd2c));
        // C1 0165
        gbc.setState(0x2525, 0x9396, 0xb550, 0x39c5, 0x3531, 0x87dc, 0x0, 0x0);
        gbc.writeMem(0x2525, { 0xc1 });
        gbc.writeMem(0x9396, { 0xa1, 0x5 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x9398, gbc.sp());
        EXPECT(0x2526, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa1, gbc.readMem(0x9396));
        EXPECT(0x5, gbc.readMem(0x9397));
        // C1 0166
        gbc.setState(0xb24e, 0x1d91, 0xee0, 0x886b, 0xc9db, 0xab40, 0x0, 0x1);
        gbc.writeMem(0x1d91, { 0xa6, 0xb5 });
        gbc.writeMem(0xb24e, { 0xc1 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x1d93, gbc.sp());
        EXPECT(0xb24f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc1, gbc.readMem(0xb24e));
        // C1 0167
        gbc.setState(0x7b15, 0xc1c2, 0xcb30, 0x61f5, 0x3c34, 0xf73b, 0x0, 0x1);
        gbc.writeMem(0x7b15, { 0xc1 });
        gbc.writeMem(0xc1c2, { 0xe9, 0xd1 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0xc1c4, gbc.sp());
        EXPECT(0x7b16, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe9, gbc.readMem(0xc1c2));
        EXPECT(0xd1, gbc.readMem(0xc1c3));
        // C1 0168
        gbc.setState(0x7c19, 0xa6c5, 0xbd20, 0xf7f2, 0xc4c5, 0x6734, 0x0, 0x0);
        gbc.writeMem(0x7c19, { 0xc1 });
        gbc.writeMem(0xa6c5, { 0x30, 0x71 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0xa6c7, gbc.sp());
        EXPECT(0x7c1a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x30, gbc.readMem(0xa6c5));
        EXPECT(0x71, gbc.readMem(0xa6c6));
        // C1 0169
        gbc.setState(0x246d, 0xb14e, 0x9040, 0xd32f, 0xcf37, 0x180, 0x1, 0x1);
        gbc.writeMem(0x246d, { 0xc1 });
        gbc.writeMem(0xb14e, { 0x84, 0xd6 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0xb150, gbc.sp());
        EXPECT(0x246e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x84, gbc.readMem(0xb14e));
        EXPECT(0xd6, gbc.readMem(0xb14f));
        // C1 016A
        gbc.setState(0xe138, 0x524b, 0xe5b0, 0x3cf2, 0x1c53, 0x751e, 0x0, 0x0);
        gbc.writeMem(0x524b, { 0x8f, 0xe4 });
        gbc.writeMem(0xe138, { 0xc1 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x524d, gbc.sp());
        EXPECT(0xe139, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc1, gbc.readMem(0xe138));
        // C1 016B
        gbc.setState(0x216d, 0x980, 0xac40, 0x17ef, 0xb681, 0x476, 0x0, 0x1);
        gbc.writeMem(0x980, { 0x1d, 0x86 });
        gbc.writeMem(0x216d, { 0xc1 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x982, gbc.sp());
        EXPECT(0x216e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C1 016C
        gbc.setState(0x9166, 0x19c8, 0xf20, 0xe2b1, 0x6124, 0xb6e8, 0x1, 0x1);
        gbc.writeMem(0x19c8, { 0x29, 0xa2 });
        gbc.writeMem(0x9166, { 0xc1 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x19ca, gbc.sp());
        EXPECT(0x9167, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc1, gbc.readMem(0x9166));
        // C1 016D
        gbc.setState(0x6622, 0x9809, 0x98c0, 0xc019, 0x750e, 0xeef9, 0x0, 0x0);
        gbc.writeMem(0x6622, { 0xc1 });
        gbc.writeMem(0x9809, { 0x4f, 0x49 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x980b, gbc.sp());
        EXPECT(0x6623, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4f, gbc.readMem(0x9809));
        EXPECT(0x49, gbc.readMem(0x980a));
        // C1 016E
        gbc.setState(0xcef9, 0x21fc, 0xaf00, 0x2f32, 0xf525, 0xc1c7, 0x0, 0x0);
        gbc.writeMem(0x21fc, { 0x79, 0x10 });
        gbc.writeMem(0xcef9, { 0xc1 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x21fe, gbc.sp());
        EXPECT(0xcefa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc1, gbc.readMem(0xcef9));
        // C1 016F
        gbc.setState(0xa9de, 0x305e, 0x15c0, 0x52e0, 0x4c1, 0x63eb, 0x0, 0x0);
        gbc.writeMem(0x305e, { 0x56, 0x9c });
        gbc.writeMem(0xa9de, { 0xc1 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x3060, gbc.sp());
        EXPECT(0xa9df, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc1, gbc.readMem(0xa9de));
        // C1 0170
        gbc.setState(0x2a8c, 0x6665, 0x5980, 0x4e0e, 0x30d9, 0x68c8, 0x1, 0x1);
        gbc.writeMem(0x2a8c, { 0xc1 });
        gbc.writeMem(0x6665, { 0x52, 0x2c });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x6667, gbc.sp());
        EXPECT(0x2a8d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C1 0171
        gbc.setState(0x600a, 0xe61f, 0x9850, 0xac7e, 0xc92f, 0x4c9d, 0x1, 0x1);
        gbc.writeMem(0x600a, { 0xc1 });
        gbc.writeMem(0xe61f, { 0xf3, 0x6b });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0xe621, gbc.sp());
        EXPECT(0x600b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf3, gbc.readMem(0xe61f));
        EXPECT(0x6b, gbc.readMem(0xe620));
        // C1 0172
        gbc.setState(0xe5cc, 0x17e4, 0xf610, 0xe02d, 0x4782, 0x4322, 0x0, 0x1);
        gbc.writeMem(0x17e4, { 0xd, 0xd7 });
        gbc.writeMem(0xe5cc, { 0xc1 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x17e6, gbc.sp());
        EXPECT(0xe5cd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc1, gbc.readMem(0xe5cc));
        // C1 0173
        gbc.setState(0x4bf3, 0xaf59, 0x5420, 0x587e, 0xdd4c, 0xb818, 0x1, 0x0);
        gbc.writeMem(0x4bf3, { 0xc1 });
        gbc.writeMem(0xaf59, { 0x7, 0xb1 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0xaf5b, gbc.sp());
        EXPECT(0x4bf4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7, gbc.readMem(0xaf59));
        EXPECT(0xb1, gbc.readMem(0xaf5a));
        // C1 0174
        gbc.setState(0xe2d2, 0xfbbf, 0xfa00, 0x5a7, 0xae66, 0x83b4, 0x1, 0x0);
        gbc.writeMem(0xe2d2, { 0xc1 });
        gbc.writeMem(0xfbbf, { 0x6b, 0x78 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0xfbc1, gbc.sp());
        EXPECT(0xe2d3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc1, gbc.readMem(0xe2d2));
        EXPECT(0x6b, gbc.readMem(0xfbbf));
        EXPECT(0x78, gbc.readMem(0xfbc0));
        // C1 0175
        gbc.setState(0x8d9d, 0x448c, 0xb020, 0x6ae8, 0x6ba, 0xa6e4, 0x1, 0x1);
        gbc.writeMem(0x448c, { 0x4a, 0x34 });
        gbc.writeMem(0x8d9d, { 0xc1 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x448e, gbc.sp());
        EXPECT(0x8d9e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc1, gbc.readMem(0x8d9d));
        // C1 0176
        gbc.setState(0x832a, 0xe46c, 0x19a0, 0x7ab2, 0x5f7e, 0x23d4, 0x1, 0x1);
        gbc.writeMem(0x832a, { 0xc1 });
        gbc.writeMem(0xe46c, { 0x71, 0xeb });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0xe46e, gbc.sp());
        EXPECT(0x832b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc1, gbc.readMem(0x832a));
        EXPECT(0x71, gbc.readMem(0xe46c));
        EXPECT(0xeb, gbc.readMem(0xe46d));
        // C1 0177
        gbc.setState(0xc7a4, 0xd369, 0xa2e0, 0xc849, 0x4a1e, 0x417b, 0x1, 0x0);
        gbc.writeMem(0xc7a4, { 0xc1 });
        gbc.writeMem(0xd369, { 0x25, 0xdd });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0xd36b, gbc.sp());
        EXPECT(0xc7a5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc1, gbc.readMem(0xc7a4));
        EXPECT(0x25, gbc.readMem(0xd369));
        EXPECT(0xdd, gbc.readMem(0xd36a));
        // C1 0178
        gbc.setState(0x1d4f, 0xa670, 0xf7f0, 0x9e32, 0x806b, 0x3a2a, 0x0, 0x0);
        gbc.writeMem(0x1d4f, { 0xc1 });
        gbc.writeMem(0xa670, { 0xd0, 0x76 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0xa672, gbc.sp());
        EXPECT(0x1d50, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd0, gbc.readMem(0xa670));
        EXPECT(0x76, gbc.readMem(0xa671));
        // C1 0179
        gbc.setState(0xdd99, 0x65d5, 0xeaf0, 0x28a1, 0x88a6, 0x8f2a, 0x0, 0x1);
        gbc.writeMem(0x65d5, { 0x39, 0xd1 });
        gbc.writeMem(0xdd99, { 0xc1 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x65d7, gbc.sp());
        EXPECT(0xdd9a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc1, gbc.readMem(0xdd99));
        // C1 017A
        gbc.setState(0xc72b, 0xbbf, 0x1cf0, 0xa3a, 0x93a5, 0xd7f, 0x1, 0x0);
        gbc.writeMem(0xbbf, { 0xd4, 0x5d });
        gbc.writeMem(0xc72b, { 0xc1 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0xbc1, gbc.sp());
        EXPECT(0xc72c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc1, gbc.readMem(0xc72b));
        // C1 017B
        gbc.setState(0xb9dc, 0xe6e2, 0x41a0, 0x2ce4, 0x6b57, 0x9acd, 0x0, 0x1);
        gbc.writeMem(0xb9dc, { 0xc1 });
        gbc.writeMem(0xe6e2, { 0xd3, 0x49 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0xe6e4, gbc.sp());
        EXPECT(0xb9dd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc1, gbc.readMem(0xb9dc));
        EXPECT(0xd3, gbc.readMem(0xe6e2));
        EXPECT(0x49, gbc.readMem(0xe6e3));
        // C1 017C
        gbc.setState(0xb492, 0x69f9, 0xfc40, 0x1cfd, 0xb18e, 0x7553, 0x0, 0x0);
        gbc.writeMem(0x69f9, { 0xc0, 0x80 });
        gbc.writeMem(0xb492, { 0xc1 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x69fb, gbc.sp());
        EXPECT(0xb493, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc1, gbc.readMem(0xb492));
        // C1 017D
        gbc.setState(0x2c26, 0xfcb, 0xaf20, 0x59b, 0xfb1e, 0x3360, 0x0, 0x0);
        gbc.writeMem(0xfcb, { 0x69, 0x6e });
        gbc.writeMem(0x2c26, { 0xc1 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0xfcd, gbc.sp());
        EXPECT(0x2c27, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C1 017E
        gbc.setState(0xe803, 0x1436, 0x9640, 0x40d9, 0x7f4, 0x5552, 0x1, 0x0);
        gbc.writeMem(0x1436, { 0xb6, 0x10 });
        gbc.writeMem(0xe803, { 0xc1 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x1438, gbc.sp());
        EXPECT(0xe804, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc1, gbc.readMem(0xe803));
        // C1 017F
        gbc.setState(0x7795, 0xf1d3, 0x3250, 0xe96c, 0xa755, 0x154f, 0x0, 0x1);
        gbc.writeMem(0x7795, { 0xc1 });
        gbc.writeMem(0xf1d3, { 0x86, 0x5e });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0xf1d5, gbc.sp());
        EXPECT(0x7796, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x86, gbc.readMem(0xf1d3));
        EXPECT(0x5e, gbc.readMem(0xf1d4));
        // C1 0180
        gbc.setState(0x7bc, 0xc9eb, 0xfb10, 0xa317, 0xde33, 0xceb7, 0x1, 0x0);
        gbc.writeMem(0x7bc, { 0xc1 });
        gbc.writeMem(0xc9eb, { 0x26, 0x6d });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0xc9ed, gbc.sp());
        EXPECT(0x7bd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x26, gbc.readMem(0xc9eb));
        EXPECT(0x6d, gbc.readMem(0xc9ec));
        // C1 0181
        gbc.setState(0x8c19, 0x8251, 0xe4e0, 0xc5ef, 0x271, 0xb6d1, 0x1, 0x0);
        gbc.writeMem(0x8251, { 0xa9, 0xb5 });
        gbc.writeMem(0x8c19, { 0xc1 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x8253, gbc.sp());
        EXPECT(0x8c1a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa9, gbc.readMem(0x8251));
        EXPECT(0xb5, gbc.readMem(0x8252));
        EXPECT(0xc1, gbc.readMem(0x8c19));
        // C1 0182
        gbc.setState(0xc0a4, 0x7aa2, 0x2890, 0x5898, 0x45a3, 0xd866, 0x1, 0x1);
        gbc.writeMem(0x7aa2, { 0xa, 0xf });
        gbc.writeMem(0xc0a4, { 0xc1 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x7aa4, gbc.sp());
        EXPECT(0xc0a5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc1, gbc.readMem(0xc0a4));
        // C1 0183
        gbc.setState(0x11cd, 0x4c06, 0x4ee0, 0xaa41, 0x2d68, 0x2ae6, 0x1, 0x1);
        gbc.writeMem(0x11cd, { 0xc1 });
        gbc.writeMem(0x4c06, { 0x3b, 0x89 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x4c08, gbc.sp());
        EXPECT(0x11ce, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C1 0184
        gbc.setState(0xc7c6, 0xee19, 0x1740, 0xfade, 0xb317, 0xbec6, 0x0, 0x1);
        gbc.writeMem(0xc7c6, { 0xc1 });
        gbc.writeMem(0xee19, { 0xac, 0xba });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0xee1b, gbc.sp());
        EXPECT(0xc7c7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc1, gbc.readMem(0xc7c6));
        EXPECT(0xac, gbc.readMem(0xee19));
        EXPECT(0xba, gbc.readMem(0xee1a));
        // C1 0185
        gbc.setState(0x8ea1, 0x9511, 0x6fa0, 0x446b, 0x21c6, 0x88b4, 0x0, 0x1);
        gbc.writeMem(0x8ea1, { 0xc1 });
        gbc.writeMem(0x9511, { 0x14, 0xdf });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x9513, gbc.sp());
        EXPECT(0x8ea2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc1, gbc.readMem(0x8ea1));
        EXPECT(0x14, gbc.readMem(0x9511));
        EXPECT(0xdf, gbc.readMem(0x9512));
        // C1 0186
        gbc.setState(0xee9c, 0x5ede, 0xf0, 0x3a93, 0xfa3, 0x3b01, 0x0, 0x0);
        gbc.writeMem(0x5ede, { 0xc2, 0x18 });
        gbc.writeMem(0xee9c, { 0xc1 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x5ee0, gbc.sp());
        EXPECT(0xee9d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc1, gbc.readMem(0xee9c));
        // C1 0187
        gbc.setState(0xdc74, 0xe688, 0x32f0, 0x30e1, 0x1514, 0xad80, 0x1, 0x0);
        gbc.writeMem(0xdc74, { 0xc1 });
        gbc.writeMem(0xe688, { 0x2, 0x95 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0xe68a, gbc.sp());
        EXPECT(0xdc75, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc1, gbc.readMem(0xdc74));
        EXPECT(0x2, gbc.readMem(0xe688));
        EXPECT(0x95, gbc.readMem(0xe689));
        // C1 0188
        gbc.setState(0x5544, 0xf160, 0x9a70, 0xcb0f, 0x1192, 0x2578, 0x0, 0x1);
        gbc.writeMem(0x5544, { 0xc1 });
        gbc.writeMem(0xf160, { 0xd5, 0xb0 });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0xf162, gbc.sp());
        EXPECT(0x5545, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd5, gbc.readMem(0xf160));
        EXPECT(0xb0, gbc.readMem(0xf161));
        // C1 0189
        gbc.setState(0x19dc, 0x2501, 0x37e0, 0xb481, 0x8898, 0x74b8, 0x1, 0x1);
        gbc.writeMem(0x19dc, { 0xc1 });
        gbc.writeMem(0x2501, { 0x9d, 0x7 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x2503, gbc.sp());
        EXPECT(0x19dd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C1 018A
        gbc.setState(0xc2a6, 0x816a, 0x3980, 0x2d97, 0x2ac7, 0xbcaf, 0x0, 0x1);
        gbc.writeMem(0x816a, { 0x7c, 0xeb });
        gbc.writeMem(0xc2a6, { 0xc1 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x816c, gbc.sp());
        EXPECT(0xc2a7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7c, gbc.readMem(0x816a));
        EXPECT(0xeb, gbc.readMem(0x816b));
        EXPECT(0xc1, gbc.readMem(0xc2a6));
        // C1 018B
        gbc.setState(0x685e, 0xc328, 0x8a90, 0xf325, 0x9746, 0x11d7, 0x1, 0x1);
        gbc.writeMem(0x685e, { 0xc1 });
        gbc.writeMem(0xc328, { 0x2b, 0x10 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0xc32a, gbc.sp());
        EXPECT(0x685f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2b, gbc.readMem(0xc328));
        EXPECT(0x10, gbc.readMem(0xc329));
        // C1 018C
        gbc.setState(0x4e86, 0xc42d, 0x8cd0, 0x144, 0x8bc7, 0xd5f7, 0x0, 0x0);
        gbc.writeMem(0x4e86, { 0xc1 });
        gbc.writeMem(0xc42d, { 0xa6, 0x89 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0xc42f, gbc.sp());
        EXPECT(0x4e87, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa6, gbc.readMem(0xc42d));
        EXPECT(0x89, gbc.readMem(0xc42e));
        // C1 018E
        gbc.setState(0x81e0, 0xfd18, 0x8720, 0xad6c, 0x9226, 0x68a7, 0x0, 0x1);
        gbc.writeMem(0x81e0, { 0xc1 });
        gbc.writeMem(0xfd18, { 0xaf, 0x8a });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0xfd1a, gbc.sp());
        EXPECT(0x81e1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc1, gbc.readMem(0x81e0));
        EXPECT(0xaf, gbc.readMem(0xfd18));
        EXPECT(0x8a, gbc.readMem(0xfd19));
        // C1 018F
        gbc.setState(0x872c, 0x8f0b, 0x9270, 0xb7cb, 0x3902, 0x1237, 0x0, 0x0);
        gbc.writeMem(0x872c, { 0xc1 });
        gbc.writeMem(0x8f0b, { 0xa8, 0xfd });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x8f0d, gbc.sp());
        EXPECT(0x872d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc1, gbc.readMem(0x872c));
        EXPECT(0xa8, gbc.readMem(0x8f0b));
        EXPECT(0xfd, gbc.readMem(0x8f0c));
        // C1 0190
        gbc.setState(0x261b, 0xbff5, 0x58d0, 0xc118, 0x6ff3, 0x65cf, 0x1, 0x0);
        gbc.writeMem(0x261b, { 0xc1 });
        gbc.writeMem(0xbff5, { 0x33, 0x62 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0xbff7, gbc.sp());
        EXPECT(0x261c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x33, gbc.readMem(0xbff5));
        EXPECT(0x62, gbc.readMem(0xbff6));
        // C1 0191
        gbc.setState(0xb036, 0xb920, 0x8270, 0xac02, 0xf5fc, 0xbdfd, 0x1, 0x0);
        gbc.writeMem(0xb036, { 0xc1 });
        gbc.writeMem(0xb920, { 0xd, 0x2d });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0xb922, gbc.sp());
        EXPECT(0xb037, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc1, gbc.readMem(0xb036));
        EXPECT(0xd, gbc.readMem(0xb920));
        EXPECT(0x2d, gbc.readMem(0xb921));
        // C1 0194
        gbc.setState(0x350c, 0xc618, 0x8a20, 0x8057, 0xc5c, 0x20f4, 0x0, 0x0);
        gbc.writeMem(0x350c, { 0xc1 });
        gbc.writeMem(0xc618, { 0x3a, 0x7 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0xc61a, gbc.sp());
        EXPECT(0x350d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3a, gbc.readMem(0xc618));
        EXPECT(0x7, gbc.readMem(0xc619));
        // C1 0195
        gbc.setState(0x3931, 0xc80, 0xb2e0, 0x5f03, 0x8a4a, 0xf90a, 0x1, 0x1);
        gbc.writeMem(0xc80, { 0x8e, 0x51 });
        gbc.writeMem(0x3931, { 0xc1 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0xc82, gbc.sp());
        EXPECT(0x3932, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C1 0196
        gbc.setState(0x26ee, 0x6d8b, 0xa260, 0xa0f6, 0x3fbd, 0x30b2, 0x1, 0x0);
        gbc.writeMem(0x26ee, { 0xc1 });
        gbc.writeMem(0x6d8b, { 0xbf, 0x21 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x6d8d, gbc.sp());
        EXPECT(0x26ef, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C1 0197
        gbc.setState(0x563f, 0x6ae2, 0xf040, 0xd11, 0xc10, 0xda4c, 0x0, 0x0);
        gbc.writeMem(0x563f, { 0xc1 });
        gbc.writeMem(0x6ae2, { 0xd0, 0x18 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x6ae4, gbc.sp());
        EXPECT(0x5640, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C1 0198
        gbc.setState(0x68e, 0x5b83, 0x9230, 0x5e48, 0x3883, 0x33e8, 0x1, 0x0);
        gbc.writeMem(0x68e, { 0xc1 });
        gbc.writeMem(0x5b83, { 0x68, 0x2f });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x5b85, gbc.sp());
        EXPECT(0x68f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C1 0199
        gbc.setState(0x171b, 0x873, 0xb710, 0xb50a, 0x543b, 0xc045, 0x0, 0x1);
        gbc.writeMem(0x873, { 0x6d, 0x65 });
        gbc.writeMem(0x171b, { 0xc1 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x875, gbc.sp());
        EXPECT(0x171c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C1 019A
        gbc.setState(0xcdd9, 0xe129, 0xcce0, 0x8ff2, 0xbd86, 0xeec8, 0x0, 0x1);
        gbc.writeMem(0xcdd9, { 0xc1 });
        gbc.writeMem(0xe129, { 0x5e, 0x8c });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0xe12b, gbc.sp());
        EXPECT(0xcdda, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc1, gbc.readMem(0xcdd9));
        EXPECT(0x5e, gbc.readMem(0xe129));
        EXPECT(0x8c, gbc.readMem(0xe12a));
        // C1 019B
        gbc.setState(0x6f7f, 0x3a94, 0x5f10, 0xc1f4, 0x9868, 0x5868, 0x0, 0x0);
        gbc.writeMem(0x3a94, { 0xaf, 0xaf });
        gbc.writeMem(0x6f7f, { 0xc1 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x3a96, gbc.sp());
        EXPECT(0x6f80, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C1 019C
        gbc.setState(0xda24, 0xf75d, 0xbc40, 0xfdbc, 0xa7b2, 0xd2e9, 0x1, 0x0);
        gbc.writeMem(0xda24, { 0xc1 });
        gbc.writeMem(0xf75d, { 0xb7, 0x1 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0xf75f, gbc.sp());
        EXPECT(0xda25, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc1, gbc.readMem(0xda24));
        EXPECT(0xb7, gbc.readMem(0xf75d));
        EXPECT(0x1, gbc.readMem(0xf75e));
        // C1 019D
        gbc.setState(0x7c67, 0x6c62, 0x2a60, 0x957f, 0x653d, 0xe21d, 0x0, 0x1);
        gbc.writeMem(0x6c62, { 0xcf, 0xf1 });
        gbc.writeMem(0x7c67, { 0xc1 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x6c64, gbc.sp());
        EXPECT(0x7c68, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C1 019E
        gbc.setState(0xedc0, 0x7b63, 0xbb60, 0x7935, 0x7212, 0x989b, 0x0, 0x0);
        gbc.writeMem(0x7b63, { 0xdb, 0x3e });
        gbc.writeMem(0xedc0, { 0xc1 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x7b65, gbc.sp());
        EXPECT(0xedc1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc1, gbc.readMem(0xedc0));
        // C1 019F
        gbc.setState(0x3577, 0x7980, 0x7e80, 0x7aaa, 0xd14f, 0x3554, 0x1, 0x0);
        gbc.writeMem(0x3577, { 0xc1 });
        gbc.writeMem(0x7980, { 0x76, 0xde });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x7982, gbc.sp());
        EXPECT(0x3578, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C1 01A0
        gbc.setState(0x1d96, 0x6b34, 0x22e0, 0xa8ce, 0x8ee1, 0xe3ae, 0x1, 0x0);
        gbc.writeMem(0x1d96, { 0xc1 });
        gbc.writeMem(0x6b34, { 0x5e, 0xea });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0x6b36, gbc.sp());
        EXPECT(0x1d97, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C1 01A1
        gbc.setState(0xee0b, 0x7c3c, 0x3cb0, 0xd401, 0x3dc2, 0xf820, 0x1, 0x1);
        gbc.writeMem(0x7c3c, { 0xd0, 0xa7 });
        gbc.writeMem(0xee0b, { 0xc1 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x7c3e, gbc.sp());
        EXPECT(0xee0c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc1, gbc.readMem(0xee0b));
        // C1 01A2
        gbc.setState(0x721c, 0x954, 0x4210, 0xb604, 0x2756, 0x780, 0x1, 0x0);
        gbc.writeMem(0x954, { 0xe3, 0x47 });
        gbc.writeMem(0x721c, { 0xc1 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x956, gbc.sp());
        EXPECT(0x721d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C1 01A3
        gbc.setState(0xbc25, 0xc862, 0x1d50, 0x739b, 0x751c, 0x901e, 0x0, 0x1);
        gbc.writeMem(0xbc25, { 0xc1 });
        gbc.writeMem(0xc862, { 0x5, 0xe2 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0xc864, gbc.sp());
        EXPECT(0xbc26, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc1, gbc.readMem(0xbc25));
        EXPECT(0x5, gbc.readMem(0xc862));
        EXPECT(0xe2, gbc.readMem(0xc863));
        // C1 01A4
        gbc.setState(0x7560, 0x64d8, 0xc60, 0x6bc3, 0x158e, 0x286c, 0x0, 0x1);
        gbc.writeMem(0x64d8, { 0xff, 0x66 });
        gbc.writeMem(0x7560, { 0xc1 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x64da, gbc.sp());
        EXPECT(0x7561, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C1 01A5
        gbc.setState(0xc73b, 0x96b0, 0x6f40, 0x13b3, 0x4038, 0x9308, 0x1, 0x1);
        gbc.writeMem(0x96b0, { 0x2, 0xed });
        gbc.writeMem(0xc73b, { 0xc1 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x96b2, gbc.sp());
        EXPECT(0xc73c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2, gbc.readMem(0x96b0));
        EXPECT(0xed, gbc.readMem(0x96b1));
        EXPECT(0xc1, gbc.readMem(0xc73b));
        // C1 01A6
        gbc.setState(0x9f7b, 0x9cbe, 0x2a20, 0xf92a, 0xd677, 0x6c, 0x0, 0x1);
        gbc.writeMem(0x9cbe, { 0xa0, 0xdb });
        gbc.writeMem(0x9f7b, { 0xc1 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x9cc0, gbc.sp());
        EXPECT(0x9f7c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa0, gbc.readMem(0x9cbe));
        EXPECT(0xdb, gbc.readMem(0x9cbf));
        EXPECT(0xc1, gbc.readMem(0x9f7b));
        // C1 01A7
        gbc.setState(0xa602, 0x4613, 0x8da0, 0x2b6e, 0x9fa4, 0x9c22, 0x1, 0x0);
        gbc.writeMem(0x4613, { 0xc6, 0x0 });
        gbc.writeMem(0xa602, { 0xc1 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x4615, gbc.sp());
        EXPECT(0xa603, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc1, gbc.readMem(0xa602));
        // C1 01A8
        gbc.setState(0x38e1, 0xbc67, 0x400, 0x45bf, 0x5571, 0x93d0, 0x0, 0x0);
        gbc.writeMem(0x38e1, { 0xc1 });
        gbc.writeMem(0xbc67, { 0x26, 0x90 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0xbc69, gbc.sp());
        EXPECT(0x38e2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x26, gbc.readMem(0xbc67));
        EXPECT(0x90, gbc.readMem(0xbc68));
        // C1 01A9
        gbc.setState(0x254a, 0x4460, 0x1310, 0x5626, 0x4bac, 0x77dd, 0x1, 0x1);
        gbc.writeMem(0x254a, { 0xc1 });
        gbc.writeMem(0x4460, { 0x37, 0xdb });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x4462, gbc.sp());
        EXPECT(0x254b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C1 01AA
        gbc.setState(0xee67, 0x602a, 0xb6d0, 0x5789, 0xf778, 0x957e, 0x1, 0x1);
        gbc.writeMem(0x602a, { 0x1f, 0x6a });
        gbc.writeMem(0xee67, { 0xc1 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0x602c, gbc.sp());
        EXPECT(0xee68, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc1, gbc.readMem(0xee67));
        // C1 01AB
        gbc.setState(0xde39, 0xe7a9, 0x2cb0, 0x7fc2, 0x5000, 0xbbc3, 0x1, 0x1);
        gbc.writeMem(0xde39, { 0xc1 });
        gbc.writeMem(0xe7a9, { 0xd1, 0xc0 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0xe7ab, gbc.sp());
        EXPECT(0xde3a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc1, gbc.readMem(0xde39));
        EXPECT(0xd1, gbc.readMem(0xe7a9));
        EXPECT(0xc0, gbc.readMem(0xe7aa));
        // C1 01AC
        gbc.setState(0xc437, 0x5c8a, 0x3670, 0xf231, 0x49be, 0x181d, 0x1, 0x0);
        gbc.writeMem(0x5c8a, { 0x52, 0x25 });
        gbc.writeMem(0xc437, { 0xc1 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x5c8c, gbc.sp());
        EXPECT(0xc438, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc1, gbc.readMem(0xc437));
        // C1 01AD
        gbc.setState(0xd7bd, 0xf48e, 0x91b0, 0x3e0d, 0x2c3e, 0x5487, 0x0, 0x0);
        gbc.writeMem(0xd7bd, { 0xc1 });
        gbc.writeMem(0xf48e, { 0x27, 0x17 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0xf490, gbc.sp());
        EXPECT(0xd7be, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc1, gbc.readMem(0xd7bd));
        EXPECT(0x27, gbc.readMem(0xf48e));
        EXPECT(0x17, gbc.readMem(0xf48f));
        // C1 01AE
        gbc.setState(0xa55b, 0x9acd, 0xde80, 0xd6f4, 0xe4af, 0x755, 0x0, 0x0);
        gbc.writeMem(0x9acd, { 0xd, 0xcf });
        gbc.writeMem(0xa55b, { 0xc1 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x9acf, gbc.sp());
        EXPECT(0xa55c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd, gbc.readMem(0x9acd));
        EXPECT(0xcf, gbc.readMem(0x9ace));
        EXPECT(0xc1, gbc.readMem(0xa55b));
        // C1 01AF
        gbc.setState(0x5e79, 0x95fe, 0x9c40, 0x8bf0, 0x9f62, 0x7284, 0x1, 0x1);
        gbc.writeMem(0x5e79, { 0xc1 });
        gbc.writeMem(0x95fe, { 0xb0, 0x91 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x9600, gbc.sp());
        EXPECT(0x5e7a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb0, gbc.readMem(0x95fe));
        EXPECT(0x91, gbc.readMem(0x95ff));
        // C1 01B0
        gbc.setState(0x826d, 0x5e93, 0xa860, 0xf9a5, 0xbef0, 0x57c1, 0x0, 0x0);
        gbc.writeMem(0x5e93, { 0x12, 0x31 });
        gbc.writeMem(0x826d, { 0xc1 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x5e95, gbc.sp());
        EXPECT(0x826e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc1, gbc.readMem(0x826d));
        // C1 01B1
        gbc.setState(0x806e, 0xcd80, 0xdee0, 0x9af8, 0xf73f, 0x6636, 0x0, 0x1);
        gbc.writeMem(0x806e, { 0xc1 });
        gbc.writeMem(0xcd80, { 0x23, 0x15 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0xcd82, gbc.sp());
        EXPECT(0x806f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc1, gbc.readMem(0x806e));
        EXPECT(0x23, gbc.readMem(0xcd80));
        EXPECT(0x15, gbc.readMem(0xcd81));
        // C1 01B2
        gbc.setState(0x50c8, 0x4e5f, 0xeff0, 0xef64, 0xd598, 0x17de, 0x0, 0x1);
        gbc.writeMem(0x4e5f, { 0xed, 0x7d });
        gbc.writeMem(0x50c8, { 0xc1 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x4e61, gbc.sp());
        EXPECT(0x50c9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C1 01B3
        gbc.setState(0xeda4, 0x3c47, 0x27f0, 0x8ff, 0x4422, 0x71be, 0x1, 0x0);
        gbc.writeMem(0x3c47, { 0xa6, 0x78 });
        gbc.writeMem(0xeda4, { 0xc1 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0x3c49, gbc.sp());
        EXPECT(0xeda5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc1, gbc.readMem(0xeda4));
        // C1 01B4
        gbc.setState(0xe662, 0xbdb6, 0x9400, 0xa902, 0xefac, 0x411b, 0x0, 0x1);
        gbc.writeMem(0xbdb6, { 0x12, 0x86 });
        gbc.writeMem(0xe662, { 0xc1 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0xbdb8, gbc.sp());
        EXPECT(0xe663, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x12, gbc.readMem(0xbdb6));
        EXPECT(0x86, gbc.readMem(0xbdb7));
        EXPECT(0xc1, gbc.readMem(0xe662));
        // C1 01B5
        gbc.setState(0x5725, 0xe741, 0x5b0, 0xf4c7, 0x3ce7, 0x9e4a, 0x0, 0x0);
        gbc.writeMem(0x5725, { 0xc1 });
        gbc.writeMem(0xe741, { 0x6e, 0xf9 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0xe743, gbc.sp());
        EXPECT(0x5726, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6e, gbc.readMem(0xe741));
        EXPECT(0xf9, gbc.readMem(0xe742));
        // C1 01B6
        gbc.setState(0xa8e4, 0x81db, 0x1e80, 0xf181, 0xf6a5, 0x289e, 0x0, 0x0);
        gbc.writeMem(0x81db, { 0x39, 0x4c });
        gbc.writeMem(0xa8e4, { 0xc1 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x81dd, gbc.sp());
        EXPECT(0xa8e5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x39, gbc.readMem(0x81db));
        EXPECT(0x4c, gbc.readMem(0x81dc));
        EXPECT(0xc1, gbc.readMem(0xa8e4));
        // C1 01B7
        gbc.setState(0x5111, 0xf111, 0x9b70, 0x6932, 0x2460, 0x8371, 0x0, 0x1);
        gbc.writeMem(0x5111, { 0xc1 });
        gbc.writeMem(0xf111, { 0x74, 0x1e });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0xf113, gbc.sp());
        EXPECT(0x5112, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x74, gbc.readMem(0xf111));
        EXPECT(0x1e, gbc.readMem(0xf112));
        // C1 01B8
        gbc.setState(0x561b, 0x379e, 0xd090, 0x24fe, 0x10fd, 0xb2c1, 0x0, 0x0);
        gbc.writeMem(0x379e, { 0x85, 0xc4 });
        gbc.writeMem(0x561b, { 0xc1 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x37a0, gbc.sp());
        EXPECT(0x561c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C1 01B9
        gbc.setState(0x38e, 0x16fc, 0xd080, 0x57d6, 0xbd0, 0x7df1, 0x1, 0x0);
        gbc.writeMem(0x38e, { 0xc1 });
        gbc.writeMem(0x16fc, { 0x88, 0xb8 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x16fe, gbc.sp());
        EXPECT(0x38f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C1 01BA
        gbc.setState(0xb44, 0xed51, 0xbb40, 0x46f9, 0xa55a, 0xcf0d, 0x1, 0x1);
        gbc.writeMem(0xb44, { 0xc1 });
        gbc.writeMem(0xed51, { 0x6c, 0xee });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0xed53, gbc.sp());
        EXPECT(0xb45, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6c, gbc.readMem(0xed51));
        EXPECT(0xee, gbc.readMem(0xed52));
        // C1 01BB
        gbc.setState(0x562a, 0xb21c, 0xa6c0, 0x3292, 0x4c2, 0xb0d5, 0x1, 0x1);
        gbc.writeMem(0x562a, { 0xc1 });
        gbc.writeMem(0xb21c, { 0x43, 0xb8 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0xb21e, gbc.sp());
        EXPECT(0x562b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x43, gbc.readMem(0xb21c));
        EXPECT(0xb8, gbc.readMem(0xb21d));
        // C1 01BC
        gbc.setState(0xe7e6, 0xa7bf, 0xce80, 0x8003, 0xf8af, 0x8c5e, 0x1, 0x0);
        gbc.writeMem(0xa7bf, { 0x76, 0x69 });
        gbc.writeMem(0xe7e6, { 0xc1 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0xa7c1, gbc.sp());
        EXPECT(0xe7e7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x76, gbc.readMem(0xa7bf));
        EXPECT(0x69, gbc.readMem(0xa7c0));
        EXPECT(0xc1, gbc.readMem(0xe7e6));
        // C1 01BD
        gbc.setState(0x7c4e, 0x1549, 0x5d00, 0x4441, 0xe704, 0xa728, 0x1, 0x0);
        gbc.writeMem(0x1549, { 0xb4, 0x57 });
        gbc.writeMem(0x7c4e, { 0xc1 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x154b, gbc.sp());
        EXPECT(0x7c4f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C1 01BE
        gbc.setState(0xac2f, 0x394a, 0x2210, 0x1849, 0xc214, 0x4895, 0x1, 0x1);
        gbc.writeMem(0x394a, { 0x2a, 0x3 });
        gbc.writeMem(0xac2f, { 0xc1 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x394c, gbc.sp());
        EXPECT(0xac30, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc1, gbc.readMem(0xac2f));
        // C1 01BF
        gbc.setState(0xea77, 0x983, 0xaf60, 0xd8c6, 0xef04, 0x12f0, 0x1, 0x0);
        gbc.writeMem(0x983, { 0x8e, 0x35 });
        gbc.writeMem(0xea77, { 0xc1 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x985, gbc.sp());
        EXPECT(0xea78, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc1, gbc.readMem(0xea77));
        // C1 01C0
        gbc.setState(0x52f5, 0xfa2e, 0xa6f0, 0x27cf, 0xa0e7, 0xb7f6, 0x0, 0x0);
        gbc.writeMem(0x52f5, { 0xc1 });
        gbc.writeMem(0xfa2e, { 0xb9, 0xe2 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0xfa30, gbc.sp());
        EXPECT(0x52f6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb9, gbc.readMem(0xfa2e));
        EXPECT(0xe2, gbc.readMem(0xfa2f));
        // C1 01C1
        gbc.setState(0x3bcb, 0x98ab, 0x45c0, 0xd6d, 0x10dd, 0x896b, 0x1, 0x1);
        gbc.writeMem(0x3bcb, { 0xc1 });
        gbc.writeMem(0x98ab, { 0x3f, 0x88 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x98ad, gbc.sp());
        EXPECT(0x3bcc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3f, gbc.readMem(0x98ab));
        EXPECT(0x88, gbc.readMem(0x98ac));
        // C1 01C2
        gbc.setState(0x4264, 0xb4b, 0x9fb0, 0xc1eb, 0xfca8, 0xb0f3, 0x1, 0x0);
        gbc.writeMem(0xb4b, { 0x2, 0x71 });
        gbc.writeMem(0x4264, { 0xc1 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0xb4d, gbc.sp());
        EXPECT(0x4265, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C1 01C3
        gbc.setState(0x5c3b, 0xc965, 0x1f70, 0xefbc, 0xf3d2, 0x5dc3, 0x0, 0x1);
        gbc.writeMem(0x5c3b, { 0xc1 });
        gbc.writeMem(0xc965, { 0x80, 0xc1 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0xc967, gbc.sp());
        EXPECT(0x5c3c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x80, gbc.readMem(0xc965));
        EXPECT(0xc1, gbc.readMem(0xc966));
        // C1 01C5
        gbc.setState(0xe24c, 0x6774, 0xb350, 0x1935, 0x2639, 0x1a25, 0x1, 0x1);
        gbc.writeMem(0x6774, { 0xf7, 0x25 });
        gbc.writeMem(0xe24c, { 0xc1 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x6776, gbc.sp());
        EXPECT(0xe24d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc1, gbc.readMem(0xe24c));
        // C1 01C6
        gbc.setState(0x4bfb, 0x2356, 0x50c0, 0xab5b, 0xdd40, 0x4f35, 0x0, 0x1);
        gbc.writeMem(0x2356, { 0xd6, 0xaa });
        gbc.writeMem(0x4bfb, { 0xc1 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x2358, gbc.sp());
        EXPECT(0x4bfc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C1 01C7
        gbc.setState(0xa092, 0xfb77, 0x65a0, 0xe7b5, 0xbf3f, 0xc875, 0x1, 0x1);
        gbc.writeMem(0xa092, { 0xc1 });
        gbc.writeMem(0xfb77, { 0x88, 0xe7 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0xfb79, gbc.sp());
        EXPECT(0xa093, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc1, gbc.readMem(0xa092));
        EXPECT(0x88, gbc.readMem(0xfb77));
        EXPECT(0xe7, gbc.readMem(0xfb78));
        // C1 01C8
        gbc.setState(0x97f, 0xa210, 0xdd0, 0xfdb, 0xb4ac, 0xd5a2, 0x0, 0x0);
        gbc.writeMem(0x97f, { 0xc1 });
        gbc.writeMem(0xa210, { 0x76, 0x9e });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0xa212, gbc.sp());
        EXPECT(0x980, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x76, gbc.readMem(0xa210));
        EXPECT(0x9e, gbc.readMem(0xa211));
        // C1 01C9
        gbc.setState(0x35de, 0x8de3, 0x6ae0, 0x539e, 0x4099, 0x5a5b, 0x0, 0x1);
        gbc.writeMem(0x35de, { 0xc1 });
        gbc.writeMem(0x8de3, { 0x3, 0xa4 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x8de5, gbc.sp());
        EXPECT(0x35df, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3, gbc.readMem(0x8de3));
        EXPECT(0xa4, gbc.readMem(0x8de4));
        // C1 01CA
        gbc.setState(0xb83d, 0xb12d, 0xa2e0, 0x8174, 0x7df5, 0xc67c, 0x1, 0x1);
        gbc.writeMem(0xb12d, { 0xab, 0xcb });
        gbc.writeMem(0xb83d, { 0xc1 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0xb12f, gbc.sp());
        EXPECT(0xb83e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xab, gbc.readMem(0xb12d));
        EXPECT(0xcb, gbc.readMem(0xb12e));
        EXPECT(0xc1, gbc.readMem(0xb83d));
        // C1 01CB
        gbc.setState(0xa1d5, 0x2f29, 0xfb70, 0x81d1, 0xb6ce, 0x9527, 0x0, 0x1);
        gbc.writeMem(0x2f29, { 0x2c, 0x90 });
        gbc.writeMem(0xa1d5, { 0xc1 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x2f2b, gbc.sp());
        EXPECT(0xa1d6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc1, gbc.readMem(0xa1d5));
        // C1 01CC
        gbc.setState(0xcbfe, 0x3ef1, 0xca10, 0x8e1, 0x5579, 0x666c, 0x0, 0x1);
        gbc.writeMem(0x3ef1, { 0xde, 0xfe });
        gbc.writeMem(0xcbfe, { 0xc1 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x3ef3, gbc.sp());
        EXPECT(0xcbff, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc1, gbc.readMem(0xcbfe));
        // C1 01CD
        gbc.setState(0x7541, 0x7357, 0x2a00, 0x3f18, 0xe0cf, 0xa211, 0x0, 0x1);
        gbc.writeMem(0x7357, { 0x5f, 0x87 });
        gbc.writeMem(0x7541, { 0xc1 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x7359, gbc.sp());
        EXPECT(0x7542, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C1 01CE
        gbc.setState(0x51c0, 0x632d, 0xc3b0, 0x95a0, 0xc8fc, 0x132, 0x1, 0x0);
        gbc.writeMem(0x51c0, { 0xc1 });
        gbc.writeMem(0x632d, { 0xfc, 0xa2 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x632f, gbc.sp());
        EXPECT(0x51c1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C1 01CF
        gbc.setState(0x364, 0x630b, 0x6450, 0xa757, 0x74a4, 0xb685, 0x0, 0x0);
        gbc.writeMem(0x364, { 0xc1 });
        gbc.writeMem(0x630b, { 0x6d, 0xf5 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x630d, gbc.sp());
        EXPECT(0x365, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C1 01D0
        gbc.setState(0xa7d, 0xa4ea, 0x2c20, 0xa0e0, 0x3bfc, 0xda1c, 0x1, 0x1);
        gbc.writeMem(0xa7d, { 0xc1 });
        gbc.writeMem(0xa4ea, { 0x94, 0x39 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0xa4ec, gbc.sp());
        EXPECT(0xa7e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x94, gbc.readMem(0xa4ea));
        EXPECT(0x39, gbc.readMem(0xa4eb));
        // C1 01D1
        gbc.setState(0x64e8, 0x8757, 0x9330, 0xa704, 0x7d5d, 0x2ea5, 0x1, 0x0);
        gbc.writeMem(0x64e8, { 0xc1 });
        gbc.writeMem(0x8757, { 0xc9, 0x8 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x8759, gbc.sp());
        EXPECT(0x64e9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc9, gbc.readMem(0x8757));
        EXPECT(0x8, gbc.readMem(0x8758));
        // C1 01D2
        gbc.setState(0x3f7d, 0xee03, 0x2c90, 0x944d, 0x129c, 0xab9d, 0x1, 0x1);
        gbc.writeMem(0x3f7d, { 0xc1 });
        gbc.writeMem(0xee03, { 0x33, 0xd2 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0xee05, gbc.sp());
        EXPECT(0x3f7e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x33, gbc.readMem(0xee03));
        EXPECT(0xd2, gbc.readMem(0xee04));
        // C1 01D3
        gbc.setState(0x699b, 0xeaec, 0x400, 0xa9ba, 0xcbac, 0x50e0, 0x1, 0x0);
        gbc.writeMem(0x699b, { 0xc1 });
        gbc.writeMem(0xeaec, { 0x18, 0x97 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0xeaee, gbc.sp());
        EXPECT(0x699c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x18, gbc.readMem(0xeaec));
        EXPECT(0x97, gbc.readMem(0xeaed));
        // C1 01D4
        gbc.setState(0xb8e4, 0x6e2e, 0xab0, 0xf775, 0xbe37, 0x9d69, 0x0, 0x1);
        gbc.writeMem(0x6e2e, { 0xb2, 0x94 });
        gbc.writeMem(0xb8e4, { 0xc1 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0x6e30, gbc.sp());
        EXPECT(0xb8e5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc1, gbc.readMem(0xb8e4));
        // C1 01D5
        gbc.setState(0x283e, 0x958e, 0xf250, 0x898d, 0xc0b3, 0x9d91, 0x0, 0x1);
        gbc.writeMem(0x283e, { 0xc1 });
        gbc.writeMem(0x958e, { 0xed, 0x8b });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x9590, gbc.sp());
        EXPECT(0x283f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xed, gbc.readMem(0x958e));
        EXPECT(0x8b, gbc.readMem(0x958f));
        // C1 01D6
        gbc.setState(0x23d3, 0xa862, 0x8850, 0x3e0f, 0x1fcc, 0x24c4, 0x0, 0x1);
        gbc.writeMem(0x23d3, { 0xc1 });
        gbc.writeMem(0xa862, { 0x16, 0x6f });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0xa864, gbc.sp());
        EXPECT(0x23d4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x16, gbc.readMem(0xa862));
        EXPECT(0x6f, gbc.readMem(0xa863));
        // C1 01D8
        gbc.setState(0x3ab0, 0x5c44, 0xe250, 0xd954, 0xcdba, 0x9ab, 0x0, 0x1);
        gbc.writeMem(0x3ab0, { 0xc1 });
        gbc.writeMem(0x5c44, { 0xe7, 0x81 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x5c46, gbc.sp());
        EXPECT(0x3ab1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C1 01D9
        gbc.setState(0x80a5, 0x4618, 0x1cf0, 0x75f6, 0x55da, 0xbc85, 0x1, 0x1);
        gbc.writeMem(0x4618, { 0xf8, 0xb });
        gbc.writeMem(0x80a5, { 0xc1 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x461a, gbc.sp());
        EXPECT(0x80a6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc1, gbc.readMem(0x80a5));
        // C1 01DA
        gbc.setState(0x82b7, 0xb1d9, 0xffe0, 0x8e5, 0xf725, 0xc60e, 0x0, 0x1);
        gbc.writeMem(0x82b7, { 0xc1 });
        gbc.writeMem(0xb1d9, { 0x2d, 0xd4 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0xb1db, gbc.sp());
        EXPECT(0x82b8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc1, gbc.readMem(0x82b7));
        EXPECT(0x2d, gbc.readMem(0xb1d9));
        EXPECT(0xd4, gbc.readMem(0xb1da));
        // C1 01DB
        gbc.setState(0x4f4f, 0x7948, 0xfb60, 0x7592, 0x21d6, 0x31b5, 0x0, 0x0);
        gbc.writeMem(0x4f4f, { 0xc1 });
        gbc.writeMem(0x7948, { 0x67, 0x80 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x794a, gbc.sp());
        EXPECT(0x4f50, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C1 01DC
        gbc.setState(0xb99c, 0xe6aa, 0x1ee0, 0xda98, 0x9753, 0x8c37, 0x0, 0x0);
        gbc.writeMem(0xb99c, { 0xc1 });
        gbc.writeMem(0xe6aa, { 0x97, 0xdb });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0xe6ac, gbc.sp());
        EXPECT(0xb99d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc1, gbc.readMem(0xb99c));
        EXPECT(0x97, gbc.readMem(0xe6aa));
        EXPECT(0xdb, gbc.readMem(0xe6ab));
        // C1 01DD
        gbc.setState(0xe89a, 0xf59b, 0x6ec0, 0xc3b7, 0x5c30, 0xefe2, 0x0, 0x1);
        gbc.writeMem(0xe89a, { 0xc1 });
        gbc.writeMem(0xf59b, { 0x90, 0xc8 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0xf59d, gbc.sp());
        EXPECT(0xe89b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc1, gbc.readMem(0xe89a));
        EXPECT(0x90, gbc.readMem(0xf59b));
        EXPECT(0xc8, gbc.readMem(0xf59c));
        // C1 01DE
        gbc.setState(0x3a3b, 0xd58d, 0x1310, 0x167f, 0x1772, 0x958b, 0x0, 0x0);
        gbc.writeMem(0x3a3b, { 0xc1 });
        gbc.writeMem(0xd58d, { 0xf6, 0xb5 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0xd58f, gbc.sp());
        EXPECT(0x3a3c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf6, gbc.readMem(0xd58d));
        EXPECT(0xb5, gbc.readMem(0xd58e));
        // C1 01DF
        gbc.setState(0x4636, 0xd5c1, 0x74d0, 0x5d07, 0x553a, 0xe64f, 0x0, 0x1);
        gbc.writeMem(0x4636, { 0xc1 });
        gbc.writeMem(0xd5c1, { 0x91, 0xcb });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0xd5c3, gbc.sp());
        EXPECT(0x4637, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x91, gbc.readMem(0xd5c1));
        EXPECT(0xcb, gbc.readMem(0xd5c2));
        // C1 01E0
        gbc.setState(0xe86e, 0x63e, 0xedc0, 0x59fb, 0xce39, 0xc4b3, 0x1, 0x1);
        gbc.writeMem(0x63e, { 0xda, 0x7d });
        gbc.writeMem(0xe86e, { 0xc1 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x640, gbc.sp());
        EXPECT(0xe86f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc1, gbc.readMem(0xe86e));
        // C1 01E1
        gbc.setState(0xcd05, 0x5c9e, 0x6f0, 0xc8ce, 0xd3c0, 0xac99, 0x1, 0x1);
        gbc.writeMem(0x5c9e, { 0x82, 0xa });
        gbc.writeMem(0xcd05, { 0xc1 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x5ca0, gbc.sp());
        EXPECT(0xcd06, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc1, gbc.readMem(0xcd05));
        // C1 01E2
        gbc.setState(0x6e03, 0x6f7f, 0x7640, 0x1f38, 0xd644, 0x516b, 0x1, 0x1);
        gbc.writeMem(0x6e03, { 0xc1 });
        gbc.writeMem(0x6f7f, { 0x8b, 0xd5 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x6f81, gbc.sp());
        EXPECT(0x6e04, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C1 01E3
        gbc.setState(0x33e4, 0x6958, 0x4f50, 0xc8b5, 0xe432, 0x1232, 0x0, 0x0);
        gbc.writeMem(0x33e4, { 0xc1 });
        gbc.writeMem(0x6958, { 0xcd, 0x15 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x695a, gbc.sp());
        EXPECT(0x33e5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C1 01E4
        gbc.setState(0xe697, 0x3e98, 0x94a0, 0x833e, 0xe5f7, 0x3206, 0x1, 0x0);
        gbc.writeMem(0x3e98, { 0xcb, 0xd6 });
        gbc.writeMem(0xe697, { 0xc1 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x3e9a, gbc.sp());
        EXPECT(0xe698, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc1, gbc.readMem(0xe697));
        // C1 01E6
        gbc.setState(0x9bc0, 0x2875, 0xece0, 0xe861, 0xccc, 0x726a, 0x0, 0x1);
        gbc.writeMem(0x2875, { 0xd9, 0x24 });
        gbc.writeMem(0x9bc0, { 0xc1 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x2877, gbc.sp());
        EXPECT(0x9bc1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc1, gbc.readMem(0x9bc0));
        // C1 01E7
        gbc.setState(0x2dcb, 0x4dee, 0x79f0, 0xedf, 0xab12, 0x71bc, 0x0, 0x1);
        gbc.writeMem(0x2dcb, { 0xc1 });
        gbc.writeMem(0x4dee, { 0xda, 0x9b });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x4df0, gbc.sp());
        EXPECT(0x2dcc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C1 01E8
        gbc.setState(0x7a82, 0x7f0, 0xd1a0, 0xde61, 0xed53, 0x7db0, 0x1, 0x0);
        gbc.writeMem(0x7f0, { 0xd, 0x1e });
        gbc.writeMem(0x7a82, { 0xc1 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x7f2, gbc.sp());
        EXPECT(0x7a83, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C1 01E9
        gbc.setState(0x912a, 0xe95a, 0x25c0, 0x5878, 0x1158, 0xeccc, 0x0, 0x1);
        gbc.writeMem(0x912a, { 0xc1 });
        gbc.writeMem(0xe95a, { 0x89, 0x2e });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0xe95c, gbc.sp());
        EXPECT(0x912b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc1, gbc.readMem(0x912a));
        EXPECT(0x89, gbc.readMem(0xe95a));
        EXPECT(0x2e, gbc.readMem(0xe95b));
        // C1 01EA
        gbc.setState(0xaa3b, 0xa5d3, 0x2480, 0xf3a9, 0xfcc1, 0xcdc0, 0x1, 0x0);
        gbc.writeMem(0xa5d3, { 0xd8, 0x61 });
        gbc.writeMem(0xaa3b, { 0xc1 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0xa5d5, gbc.sp());
        EXPECT(0xaa3c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd8, gbc.readMem(0xa5d3));
        EXPECT(0x61, gbc.readMem(0xa5d4));
        EXPECT(0xc1, gbc.readMem(0xaa3b));
        // C1 01EB
        gbc.setState(0xd38c, 0x638b, 0xbe80, 0xc939, 0xa179, 0x9fee, 0x0, 0x0);
        gbc.writeMem(0x638b, { 0xe9, 0x88 });
        gbc.writeMem(0xd38c, { 0xc1 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x638d, gbc.sp());
        EXPECT(0xd38d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc1, gbc.readMem(0xd38c));
        // C1 01EC
        gbc.setState(0x9a20, 0xca6b, 0xa810, 0x993c, 0x1d2d, 0xf528, 0x0, 0x1);
        gbc.writeMem(0x9a20, { 0xc1 });
        gbc.writeMem(0xca6b, { 0x38, 0x7d });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0xca6d, gbc.sp());
        EXPECT(0x9a21, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc1, gbc.readMem(0x9a20));
        EXPECT(0x38, gbc.readMem(0xca6b));
        EXPECT(0x7d, gbc.readMem(0xca6c));
        // C1 01ED
        gbc.setState(0xe492, 0x9265, 0x3d0, 0xde6, 0x21a9, 0xd610, 0x0, 0x1);
        gbc.writeMem(0x9265, { 0x88, 0xb5 });
        gbc.writeMem(0xe492, { 0xc1 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x9267, gbc.sp());
        EXPECT(0xe493, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x88, gbc.readMem(0x9265));
        EXPECT(0xb5, gbc.readMem(0x9266));
        EXPECT(0xc1, gbc.readMem(0xe492));
        // C1 01EF
        gbc.setState(0x991, 0x273c, 0x4e60, 0x8447, 0x888, 0xf7d8, 0x1, 0x1);
        gbc.writeMem(0x991, { 0xc1 });
        gbc.writeMem(0x273c, { 0x37, 0xeb });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x273e, gbc.sp());
        EXPECT(0x992, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C1 01F0
        gbc.setState(0x9d2a, 0x15f0, 0x7360, 0x80a1, 0x84d7, 0x6920, 0x0, 0x0);
        gbc.writeMem(0x15f0, { 0x15, 0x94 });
        gbc.writeMem(0x9d2a, { 0xc1 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x15f2, gbc.sp());
        EXPECT(0x9d2b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc1, gbc.readMem(0x9d2a));
        // C1 01F1
        gbc.setState(0x9f8b, 0xd618, 0x5d0, 0x3ef9, 0x2e6, 0x526e, 0x0, 0x1);
        gbc.writeMem(0x9f8b, { 0xc1 });
        gbc.writeMem(0xd618, { 0x9c, 0x80 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0xd61a, gbc.sp());
        EXPECT(0x9f8c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc1, gbc.readMem(0x9f8b));
        EXPECT(0x9c, gbc.readMem(0xd618));
        EXPECT(0x80, gbc.readMem(0xd619));
        // C1 01F2
        gbc.setState(0x266e, 0xa1a3, 0x3820, 0x4754, 0x59e4, 0xa78f, 0x0, 0x1);
        gbc.writeMem(0x266e, { 0xc1 });
        gbc.writeMem(0xa1a3, { 0xfe, 0xfa });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0xa1a5, gbc.sp());
        EXPECT(0x266f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xfe, gbc.readMem(0xa1a3));
        EXPECT(0xfa, gbc.readMem(0xa1a4));
        // C1 01F4
        gbc.setState(0xdb75, 0x1e88, 0x7a30, 0xb28f, 0xfc88, 0x6cd9, 0x1, 0x1);
        gbc.writeMem(0x1e88, { 0x46, 0x59 });
        gbc.writeMem(0xdb75, { 0xc1 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x1e8a, gbc.sp());
        EXPECT(0xdb76, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc1, gbc.readMem(0xdb75));
        // C1 01F5
        gbc.setState(0x1f29, 0x3330, 0x33b0, 0x979e, 0xc36d, 0xadba, 0x1, 0x0);
        gbc.writeMem(0x1f29, { 0xc1 });
        gbc.writeMem(0x3330, { 0x7b, 0xe1 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0x3332, gbc.sp());
        EXPECT(0x1f2a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C1 01F6
        gbc.setState(0x5508, 0x9d43, 0x7360, 0xb6c, 0xe9b2, 0x71fb, 0x1, 0x0);
        gbc.writeMem(0x5508, { 0xc1 });
        gbc.writeMem(0x9d43, { 0xd4, 0x53 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x9d45, gbc.sp());
        EXPECT(0x5509, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd4, gbc.readMem(0x9d43));
        EXPECT(0x53, gbc.readMem(0x9d44));
        // C1 01F7
        gbc.setState(0x78e5, 0x36fa, 0xcd00, 0x9443, 0xee0e, 0xbb6d, 0x0, 0x1);
        gbc.writeMem(0x36fa, { 0xd0, 0x3d });
        gbc.writeMem(0x78e5, { 0xc1 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x36fc, gbc.sp());
        EXPECT(0x78e6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C1 01F8
        gbc.setState(0xc258, 0xd55b, 0x40e0, 0xba5b, 0xe7c2, 0xc2d6, 0x0, 0x1);
        gbc.writeMem(0xc258, { 0xc1 });
        gbc.writeMem(0xd55b, { 0xf2, 0x84 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0xd55d, gbc.sp());
        EXPECT(0xc259, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc1, gbc.readMem(0xc258));
        EXPECT(0xf2, gbc.readMem(0xd55b));
        EXPECT(0x84, gbc.readMem(0xd55c));
        // C1 01F9
        gbc.setState(0x2aae, 0xff87, 0x3d70, 0xa70e, 0x87c6, 0x76b9, 0x1, 0x1);
        gbc.writeMem(0x2aae, { 0xc1 });
        gbc.writeMem(0xff87, { 0xb1, 0x49 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0xff89, gbc.sp());
        EXPECT(0x2aaf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb1, gbc.readMem(0xff87));
        EXPECT(0x49, gbc.readMem(0xff88));
        // C1 01FA
        gbc.setState(0x2892, 0x4914, 0x6860, 0xb00a, 0xfc59, 0x28e6, 0x1, 0x0);
        gbc.writeMem(0x2892, { 0xc1 });
        gbc.writeMem(0x4914, { 0xf6, 0x8c });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x4916, gbc.sp());
        EXPECT(0x2893, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C1 01FB
        gbc.setState(0xa6e, 0xe06, 0x7700, 0x8955, 0xa206, 0xd397, 0x1, 0x1);
        gbc.writeMem(0xa6e, { 0xc1 });
        gbc.writeMem(0xe06, { 0xed, 0x82 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0xe08, gbc.sp());
        EXPECT(0xa6f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C1 01FC
        gbc.setState(0x53ed, 0x54a, 0x3360, 0xbc6, 0xbb96, 0x142a, 0x0, 0x1);
        gbc.writeMem(0x54a, { 0xdf, 0x61 });
        gbc.writeMem(0x53ed, { 0xc1 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x54c, gbc.sp());
        EXPECT(0x53ee, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C1 01FD
        gbc.setState(0xc6ad, 0xd15c, 0x9030, 0xf44a, 0x55e8, 0xf186, 0x1, 0x1);
        gbc.writeMem(0xc6ad, { 0xc1 });
        gbc.writeMem(0xd15c, { 0x56, 0xae });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0xd15e, gbc.sp());
        EXPECT(0xc6ae, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc1, gbc.readMem(0xc6ad));
        EXPECT(0x56, gbc.readMem(0xd15c));
        EXPECT(0xae, gbc.readMem(0xd15d));
        // C1 01FE
        gbc.setState(0x94fc, 0x2d9d, 0x76b0, 0xdac6, 0xf258, 0xea79, 0x0, 0x1);
        gbc.writeMem(0x2d9d, { 0xf0, 0xf0 });
        gbc.writeMem(0x94fc, { 0xc1 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x2d9f, gbc.sp());
        EXPECT(0x94fd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc1, gbc.readMem(0x94fc));
        // C1 01FF
        gbc.setState(0xba3b, 0x66c1, 0xfe10, 0xd38b, 0xa6c8, 0xe0c5, 0x1, 0x1);
        gbc.writeMem(0x66c1, { 0xe, 0x71 });
        gbc.writeMem(0xba3b, { 0xc1 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x66c3, gbc.sp());
        EXPECT(0xba3c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc1, gbc.readMem(0xba3b));
        // C1 0200
        gbc.setState(0xd324, 0xb885, 0xc170, 0x3f1c, 0x703e, 0x4d24, 0x0, 0x1);
        gbc.writeMem(0xb885, { 0xac, 0xdf });
        gbc.writeMem(0xd324, { 0xc1 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0xb887, gbc.sp());
        EXPECT(0xd325, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xac, gbc.readMem(0xb885));
        EXPECT(0xdf, gbc.readMem(0xb886));
        EXPECT(0xc1, gbc.readMem(0xd324));
        // C1 0201
        gbc.setState(0x6281, 0x9a2, 0x1b0, 0xcba3, 0x6eea, 0x7aaf, 0x0, 0x0);
        gbc.writeMem(0x9a2, { 0x22, 0xe });
        gbc.writeMem(0x6281, { 0xc1 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x9a4, gbc.sp());
        EXPECT(0x6282, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C1 0202
        gbc.setState(0x5ebd, 0xb22d, 0xa370, 0xdd6c, 0x6c9f, 0xda51, 0x1, 0x0);
        gbc.writeMem(0x5ebd, { 0xc1 });
        gbc.writeMem(0xb22d, { 0xb2, 0x27 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0xb22f, gbc.sp());
        EXPECT(0x5ebe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb2, gbc.readMem(0xb22d));
        EXPECT(0x27, gbc.readMem(0xb22e));
        // C1 0203
        gbc.setState(0xe3a8, 0x94e, 0x9380, 0x5654, 0xae51, 0x4c7f, 0x1, 0x1);
        gbc.writeMem(0x94e, { 0xf3, 0xa8 });
        gbc.writeMem(0xe3a8, { 0xc1 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x950, gbc.sp());
        EXPECT(0xe3a9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc1, gbc.readMem(0xe3a8));
        // C1 0204
        gbc.setState(0x2dda, 0x555b, 0x9a0, 0xe070, 0x51b8, 0x75b8, 0x0, 0x0);
        gbc.writeMem(0x2dda, { 0xc1 });
        gbc.writeMem(0x555b, { 0xc2, 0x8f });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x555d, gbc.sp());
        EXPECT(0x2ddb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C1 0205
        gbc.setState(0x232a, 0xf630, 0xac90, 0x653c, 0x6b73, 0xd19e, 0x1, 0x1);
        gbc.writeMem(0x232a, { 0xc1 });
        gbc.writeMem(0xf630, { 0xab, 0xfd });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0xf632, gbc.sp());
        EXPECT(0x232b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xab, gbc.readMem(0xf630));
        EXPECT(0xfd, gbc.readMem(0xf631));
        // C1 0206
        gbc.setState(0x4afa, 0x9452, 0x6900, 0x31fb, 0x3703, 0x739, 0x0, 0x0);
        gbc.writeMem(0x4afa, { 0xc1 });
        gbc.writeMem(0x9452, { 0xf, 0x2a });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x9454, gbc.sp());
        EXPECT(0x4afb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf, gbc.readMem(0x9452));
        EXPECT(0x2a, gbc.readMem(0x9453));
        // C1 0207
        gbc.setState(0x2146, 0xb299, 0x5f40, 0xee1d, 0xb54e, 0x559, 0x1, 0x0);
        gbc.writeMem(0x2146, { 0xc1 });
        gbc.writeMem(0xb299, { 0x87, 0xe3 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0xb29b, gbc.sp());
        EXPECT(0x2147, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x87, gbc.readMem(0xb299));
        EXPECT(0xe3, gbc.readMem(0xb29a));
        // C1 0208
        gbc.setState(0x5919, 0x12a3, 0x9e30, 0xe79c, 0x24d0, 0x45, 0x0, 0x1);
        gbc.writeMem(0x12a3, { 0x42, 0xbe });
        gbc.writeMem(0x5919, { 0xc1 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x12a5, gbc.sp());
        EXPECT(0x591a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C1 0209
        gbc.setState(0x46d4, 0x2cfe, 0x9a40, 0x9dc0, 0x2be6, 0x8773, 0x1, 0x1);
        gbc.writeMem(0x2cfe, { 0x99, 0x90 });
        gbc.writeMem(0x46d4, { 0xc1 });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x2d00, gbc.sp());
        EXPECT(0x46d5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C1 020A
        gbc.setState(0x3ffc, 0x2713, 0x7f40, 0x49da, 0x7dab, 0xc, 0x0, 0x0);
        gbc.writeMem(0x2713, { 0xd3, 0x8e });
        gbc.writeMem(0x3ffc, { 0xc1 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x2715, gbc.sp());
        EXPECT(0x3ffd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C1 020B
        gbc.setState(0x8c9a, 0xa9a2, 0xf350, 0xc180, 0x5b27, 0xe732, 0x1, 0x0);
        gbc.writeMem(0x8c9a, { 0xc1 });
        gbc.writeMem(0xa9a2, { 0xd6, 0x5c });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0xa9a4, gbc.sp());
        EXPECT(0x8c9b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc1, gbc.readMem(0x8c9a));
        EXPECT(0xd6, gbc.readMem(0xa9a2));
        EXPECT(0x5c, gbc.readMem(0xa9a3));
        // C1 020C
        gbc.setState(0x249a, 0x5f1c, 0x7f70, 0xb348, 0x254, 0x863c, 0x0, 0x1);
        gbc.writeMem(0x249a, { 0xc1 });
        gbc.writeMem(0x5f1c, { 0xb, 0x6d });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x5f1e, gbc.sp());
        EXPECT(0x249b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C1 020D
        gbc.setState(0xcca2, 0xbcab, 0x6cd0, 0x988b, 0xdf17, 0xedc3, 0x0, 0x0);
        gbc.writeMem(0xbcab, { 0xa, 0x5d });
        gbc.writeMem(0xcca2, { 0xc1 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0xbcad, gbc.sp());
        EXPECT(0xcca3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa, gbc.readMem(0xbcab));
        EXPECT(0x5d, gbc.readMem(0xbcac));
        EXPECT(0xc1, gbc.readMem(0xcca2));
        // C1 020E
        gbc.setState(0xd386, 0x9499, 0x6670, 0x7fad, 0xa941, 0xf2e, 0x0, 0x1);
        gbc.writeMem(0x9499, { 0xb9, 0xe });
        gbc.writeMem(0xd386, { 0xc1 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x949b, gbc.sp());
        EXPECT(0xd387, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb9, gbc.readMem(0x9499));
        EXPECT(0xe, gbc.readMem(0x949a));
        EXPECT(0xc1, gbc.readMem(0xd386));
        // C1 020F
        gbc.setState(0x32d2, 0x603a, 0xea20, 0xd2e4, 0x7803, 0x9bf3, 0x1, 0x0);
        gbc.writeMem(0x32d2, { 0xc1 });
        gbc.writeMem(0x603a, { 0xe0, 0x8f });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x603c, gbc.sp());
        EXPECT(0x32d3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C1 0210
        gbc.setState(0xd6e0, 0x74c3, 0x6ff0, 0xda99, 0x8b13, 0xdf4a, 0x1, 0x1);
        gbc.writeMem(0x74c3, { 0x91, 0x88 });
        gbc.writeMem(0xd6e0, { 0xc1 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x74c5, gbc.sp());
        EXPECT(0xd6e1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc1, gbc.readMem(0xd6e0));
        // C1 0211
        gbc.setState(0xb6a0, 0xda8c, 0xb940, 0x6faf, 0xcece, 0x18a8, 0x1, 0x0);
        gbc.writeMem(0xb6a0, { 0xc1 });
        gbc.writeMem(0xda8c, { 0x46, 0x98 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0xda8e, gbc.sp());
        EXPECT(0xb6a1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc1, gbc.readMem(0xb6a0));
        EXPECT(0x46, gbc.readMem(0xda8c));
        EXPECT(0x98, gbc.readMem(0xda8d));
        // C1 0212
        gbc.setState(0xa3bd, 0x11e5, 0xd450, 0xfeca, 0x2767, 0x7d1c, 0x0, 0x0);
        gbc.writeMem(0x11e5, { 0x79, 0x3b });
        gbc.writeMem(0xa3bd, { 0xc1 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x11e7, gbc.sp());
        EXPECT(0xa3be, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc1, gbc.readMem(0xa3bd));
        // C1 0213
        gbc.setState(0x37be, 0xd379, 0x2a80, 0xd680, 0x21be, 0x4c57, 0x0, 0x0);
        gbc.writeMem(0x37be, { 0xc1 });
        gbc.writeMem(0xd379, { 0x20, 0x81 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0xd37b, gbc.sp());
        EXPECT(0x37bf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x20, gbc.readMem(0xd379));
        EXPECT(0x81, gbc.readMem(0xd37a));
        // C1 0214
        gbc.setState(0x3929, 0xd815, 0x3ab0, 0x67f4, 0x72e6, 0x1f76, 0x1, 0x1);
        gbc.writeMem(0x3929, { 0xc1 });
        gbc.writeMem(0xd815, { 0x82, 0xf7 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0xd817, gbc.sp());
        EXPECT(0x392a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x82, gbc.readMem(0xd815));
        EXPECT(0xf7, gbc.readMem(0xd816));
        // C1 0215
        gbc.setState(0xa5d9, 0x2942, 0x8490, 0xd85e, 0xcc96, 0xbef9, 0x0, 0x1);
        gbc.writeMem(0x2942, { 0x7a, 0xf2 });
        gbc.writeMem(0xa5d9, { 0xc1 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x2944, gbc.sp());
        EXPECT(0xa5da, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc1, gbc.readMem(0xa5d9));
        // C1 0216
        gbc.setState(0x12a4, 0xbac3, 0x93d0, 0xba02, 0xa419, 0xccb4, 0x0, 0x0);
        gbc.writeMem(0x12a4, { 0xc1 });
        gbc.writeMem(0xbac3, { 0xa4, 0x8a });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0xbac5, gbc.sp());
        EXPECT(0x12a5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa4, gbc.readMem(0xbac3));
        EXPECT(0x8a, gbc.readMem(0xbac4));
        // C1 0217
        gbc.setState(0x7150, 0x8298, 0xbed0, 0x76b6, 0x28e2, 0x1a26, 0x0, 0x0);
        gbc.writeMem(0x7150, { 0xc1 });
        gbc.writeMem(0x8298, { 0x45, 0xc4 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x829a, gbc.sp());
        EXPECT(0x7151, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x45, gbc.readMem(0x8298));
        EXPECT(0xc4, gbc.readMem(0x8299));
        // C1 0218
        gbc.setState(0x8fba, 0x5b9, 0x92a0, 0xd810, 0xd428, 0x40f2, 0x0, 0x0);
        gbc.writeMem(0x5b9, { 0xf5, 0x2c });
        gbc.writeMem(0x8fba, { 0xc1 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x5bb, gbc.sp());
        EXPECT(0x8fbb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc1, gbc.readMem(0x8fba));
        // C1 0219
        gbc.setState(0xdb81, 0x8a95, 0xfc90, 0x42c0, 0xa9e9, 0xa59a, 0x0, 0x1);
        gbc.writeMem(0x8a95, { 0x2e, 0xf });
        gbc.writeMem(0xdb81, { 0xc1 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x8a97, gbc.sp());
        EXPECT(0xdb82, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2e, gbc.readMem(0x8a95));
        EXPECT(0xf, gbc.readMem(0x8a96));
        EXPECT(0xc1, gbc.readMem(0xdb81));
        // C1 021A
        gbc.setState(0x83c9, 0xf6c9, 0xfad0, 0xb7b1, 0x54c7, 0x5040, 0x1, 0x0);
        gbc.writeMem(0x83c9, { 0xc1 });
        gbc.writeMem(0xf6c9, { 0x6c, 0x49 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0xf6cb, gbc.sp());
        EXPECT(0x83ca, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc1, gbc.readMem(0x83c9));
        EXPECT(0x6c, gbc.readMem(0xf6c9));
        EXPECT(0x49, gbc.readMem(0xf6ca));
        // C1 021B
        gbc.setState(0xbb5f, 0x6c72, 0x55d0, 0xdf13, 0xd358, 0xb7ab, 0x1, 0x0);
        gbc.writeMem(0x6c72, { 0x13, 0xed });
        gbc.writeMem(0xbb5f, { 0xc1 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x6c74, gbc.sp());
        EXPECT(0xbb60, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc1, gbc.readMem(0xbb5f));
        // C1 021C
        gbc.setState(0x53d8, 0x7412, 0xd550, 0x9f9a, 0x9a7d, 0x94d9, 0x0, 0x1);
        gbc.writeMem(0x53d8, { 0xc1 });
        gbc.writeMem(0x7412, { 0xbd, 0xdc });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x7414, gbc.sp());
        EXPECT(0x53d9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C1 021D
        gbc.setState(0x1b74, 0x4eac, 0x3240, 0x411c, 0x227, 0xb301, 0x1, 0x0);
        gbc.writeMem(0x1b74, { 0xc1 });
        gbc.writeMem(0x4eac, { 0x7d, 0x2f });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x4eae, gbc.sp());
        EXPECT(0x1b75, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C1 021E
        gbc.setState(0xa965, 0xf5a3, 0xfb10, 0xbc86, 0xf4be, 0xa0d4, 0x0, 0x1);
        gbc.writeMem(0xa965, { 0xc1 });
        gbc.writeMem(0xf5a3, { 0xd3, 0x13 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0xf5a5, gbc.sp());
        EXPECT(0xa966, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc1, gbc.readMem(0xa965));
        EXPECT(0xd3, gbc.readMem(0xf5a3));
        EXPECT(0x13, gbc.readMem(0xf5a4));
        // C1 021F
        gbc.setState(0x2b56, 0xcd26, 0x230, 0x6179, 0xe0a1, 0x1ed0, 0x1, 0x0);
        gbc.writeMem(0x2b56, { 0xc1 });
        gbc.writeMem(0xcd26, { 0x84, 0x15 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0xcd28, gbc.sp());
        EXPECT(0x2b57, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x84, gbc.readMem(0xcd26));
        EXPECT(0x15, gbc.readMem(0xcd27));
        // C1 0220
        gbc.setState(0x13c3, 0x2897, 0xc290, 0x7a71, 0x104b, 0x67b2, 0x0, 0x0);
        gbc.writeMem(0x13c3, { 0xc1 });
        gbc.writeMem(0x2897, { 0x88, 0xbe });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x2899, gbc.sp());
        EXPECT(0x13c4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C1 0221
        gbc.setState(0x91cb, 0x38e0, 0x6670, 0x13ef, 0xf29d, 0x4a32, 0x1, 0x1);
        gbc.writeMem(0x38e0, { 0x4f, 0xc9 });
        gbc.writeMem(0x91cb, { 0xc1 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x38e2, gbc.sp());
        EXPECT(0x91cc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc1, gbc.readMem(0x91cb));
        // C1 0222
        gbc.setState(0x15e7, 0x91ff, 0x79d0, 0x118, 0xe7cb, 0x86bc, 0x1, 0x1);
        gbc.writeMem(0x15e7, { 0xc1 });
        gbc.writeMem(0x91ff, { 0xb9, 0x43 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x9201, gbc.sp());
        EXPECT(0x15e8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb9, gbc.readMem(0x91ff));
        EXPECT(0x43, gbc.readMem(0x9200));
        // C1 0223
        gbc.setState(0xbf80, 0x1a6d, 0xf8b0, 0xfe65, 0xd7f3, 0x59b6, 0x1, 0x0);
        gbc.writeMem(0x1a6d, { 0xc, 0xc1 });
        gbc.writeMem(0xbf80, { 0xc1 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x1a6f, gbc.sp());
        EXPECT(0xbf81, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc1, gbc.readMem(0xbf80));
        // C1 0224
        gbc.setState(0x9d1d, 0x189a, 0x7ed0, 0x7ea2, 0xdd29, 0xe251, 0x0, 0x1);
        gbc.writeMem(0x189a, { 0x40, 0xe1 });
        gbc.writeMem(0x9d1d, { 0xc1 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x189c, gbc.sp());
        EXPECT(0x9d1e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc1, gbc.readMem(0x9d1d));
        // C1 0225
        gbc.setState(0x335c, 0xe180, 0x1420, 0xdb45, 0xc6ed, 0x907d, 0x1, 0x1);
        gbc.writeMem(0x335c, { 0xc1 });
        gbc.writeMem(0xe180, { 0xfa, 0xdb });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0xe182, gbc.sp());
        EXPECT(0x335d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xfa, gbc.readMem(0xe180));
        EXPECT(0xdb, gbc.readMem(0xe181));
        // C1 0226
        gbc.setState(0xcf2b, 0x79d8, 0xd470, 0x3ae4, 0x671b, 0xf96f, 0x1, 0x0);
        gbc.writeMem(0x79d8, { 0x53, 0xf1 });
        gbc.writeMem(0xcf2b, { 0xc1 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x79da, gbc.sp());
        EXPECT(0xcf2c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc1, gbc.readMem(0xcf2b));
        // C1 0227
        gbc.setState(0x3744, 0x3dc9, 0xb8e0, 0xd41e, 0x79f1, 0x61e8, 0x1, 0x0);
        gbc.writeMem(0x3744, { 0xc1 });
        gbc.writeMem(0x3dc9, { 0xc0, 0x54 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x3dcb, gbc.sp());
        EXPECT(0x3745, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C1 0228
        gbc.setState(0x5c7d, 0x6537, 0x2670, 0xfafc, 0x7809, 0xead0, 0x1, 0x1);
        gbc.writeMem(0x5c7d, { 0xc1 });
        gbc.writeMem(0x6537, { 0xa7, 0x72 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x6539, gbc.sp());
        EXPECT(0x5c7e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C1 0229
        gbc.setState(0xb0a1, 0xa380, 0x42a0, 0x43d2, 0x71a7, 0x9f45, 0x1, 0x0);
        gbc.writeMem(0xa380, { 0xf, 0x4c });
        gbc.writeMem(0xb0a1, { 0xc1 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0xa382, gbc.sp());
        EXPECT(0xb0a2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf, gbc.readMem(0xa380));
        EXPECT(0x4c, gbc.readMem(0xa381));
        EXPECT(0xc1, gbc.readMem(0xb0a1));
        // C1 022A
        gbc.setState(0xd3ed, 0x1661, 0xe150, 0x4e1a, 0x4fce, 0xc2e3, 0x0, 0x1);
        gbc.writeMem(0x1661, { 0xf0, 0xc4 });
        gbc.writeMem(0xd3ed, { 0xc1 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x1663, gbc.sp());
        EXPECT(0xd3ee, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc1, gbc.readMem(0xd3ed));
        // C1 022B
        gbc.setState(0x6650, 0xa10b, 0x81c0, 0x98ea, 0xab54, 0x1061, 0x0, 0x0);
        gbc.writeMem(0x6650, { 0xc1 });
        gbc.writeMem(0xa10b, { 0x7c, 0xfe });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0xa10d, gbc.sp());
        EXPECT(0x6651, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7c, gbc.readMem(0xa10b));
        EXPECT(0xfe, gbc.readMem(0xa10c));
        // C1 022C
        gbc.setState(0xe524, 0xe301, 0xfaa0, 0x67ae, 0x3ff2, 0x663f, 0x0, 0x1);
        gbc.writeMem(0xe301, { 0xf4, 0xbf });
        gbc.writeMem(0xe524, { 0xc1 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0xe303, gbc.sp());
        EXPECT(0xe525, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf4, gbc.readMem(0xe301));
        EXPECT(0xbf, gbc.readMem(0xe302));
        EXPECT(0xc1, gbc.readMem(0xe524));
        // C1 022D
        gbc.setState(0x5a91, 0x93ac, 0xa990, 0xb9ad, 0xdfa6, 0xa961, 0x0, 0x0);
        gbc.writeMem(0x5a91, { 0xc1 });
        gbc.writeMem(0x93ac, { 0x3e, 0x28 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x93ae, gbc.sp());
        EXPECT(0x5a92, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3e, gbc.readMem(0x93ac));
        EXPECT(0x28, gbc.readMem(0x93ad));
        // C1 022E
        gbc.setState(0x41be, 0x8dbf, 0xcc40, 0xdc5b, 0x9c3a, 0xbbdd, 0x1, 0x0);
        gbc.writeMem(0x41be, { 0xc1 });
        gbc.writeMem(0x8dbf, { 0x67, 0x1d });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x8dc1, gbc.sp());
        EXPECT(0x41bf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x67, gbc.readMem(0x8dbf));
        EXPECT(0x1d, gbc.readMem(0x8dc0));
        // C1 022F
        gbc.setState(0x174a, 0x2e7a, 0x89b0, 0xe261, 0xd29d, 0x2c10, 0x0, 0x0);
        gbc.writeMem(0x174a, { 0xc1 });
        gbc.writeMem(0x2e7a, { 0xaa, 0x77 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x2e7c, gbc.sp());
        EXPECT(0x174b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C1 0230
        gbc.setState(0xd7cf, 0xa5da, 0x2640, 0x856a, 0x4f31, 0x9978, 0x0, 0x1);
        gbc.writeMem(0xa5da, { 0x72, 0x46 });
        gbc.writeMem(0xd7cf, { 0xc1 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0xa5dc, gbc.sp());
        EXPECT(0xd7d0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x72, gbc.readMem(0xa5da));
        EXPECT(0x46, gbc.readMem(0xa5db));
        EXPECT(0xc1, gbc.readMem(0xd7cf));
        // C1 0232
        gbc.setState(0x90d6, 0xd385, 0x1ac0, 0xe960, 0x407d, 0x70b0, 0x1, 0x1);
        gbc.writeMem(0x90d6, { 0xc1 });
        gbc.writeMem(0xd385, { 0xb3, 0x65 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0xd387, gbc.sp());
        EXPECT(0x90d7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc1, gbc.readMem(0x90d6));
        EXPECT(0xb3, gbc.readMem(0xd385));
        EXPECT(0x65, gbc.readMem(0xd386));
        // C1 0233
        gbc.setState(0xe9ce, 0xb164, 0x9770, 0x1a5b, 0x6db3, 0x372d, 0x0, 0x0);
        gbc.writeMem(0xb164, { 0xf4, 0x38 });
        gbc.writeMem(0xe9ce, { 0xc1 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0xb166, gbc.sp());
        EXPECT(0xe9cf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf4, gbc.readMem(0xb164));
        EXPECT(0x38, gbc.readMem(0xb165));
        EXPECT(0xc1, gbc.readMem(0xe9ce));
        // C1 0234
        gbc.setState(0x7853, 0x3142, 0x14b0, 0x8a09, 0x57e8, 0xb17f, 0x1, 0x1);
        gbc.writeMem(0x3142, { 0xd0, 0xaa });
        gbc.writeMem(0x7853, { 0xc1 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x3144, gbc.sp());
        EXPECT(0x7854, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C1 0235
        gbc.setState(0x5ac4, 0xb1f1, 0xec40, 0x5ec7, 0x9a1f, 0x8c93, 0x0, 0x1);
        gbc.writeMem(0x5ac4, { 0xc1 });
        gbc.writeMem(0xb1f1, { 0x7f, 0xc7 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0xb1f3, gbc.sp());
        EXPECT(0x5ac5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7f, gbc.readMem(0xb1f1));
        EXPECT(0xc7, gbc.readMem(0xb1f2));
        // C1 0236
        gbc.setState(0xca80, 0x8f9d, 0x3b80, 0x43c5, 0x9862, 0x8c09, 0x1, 0x0);
        gbc.writeMem(0x8f9d, { 0x86, 0x32 });
        gbc.writeMem(0xca80, { 0xc1 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x8f9f, gbc.sp());
        EXPECT(0xca81, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x86, gbc.readMem(0x8f9d));
        EXPECT(0x32, gbc.readMem(0x8f9e));
        EXPECT(0xc1, gbc.readMem(0xca80));
        // C1 0237
        gbc.setState(0x6d6b, 0x10f2, 0x3910, 0x3be, 0x434d, 0xaa5a, 0x0, 0x0);
        gbc.writeMem(0x10f2, { 0xde, 0xfc });
        gbc.writeMem(0x6d6b, { 0xc1 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x10f4, gbc.sp());
        EXPECT(0x6d6c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C1 0238
        gbc.setState(0x1777, 0x62fc, 0xce80, 0xfa7d, 0xfbc0, 0xc550, 0x1, 0x1);
        gbc.writeMem(0x1777, { 0xc1 });
        gbc.writeMem(0x62fc, { 0x73, 0xd1 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x62fe, gbc.sp());
        EXPECT(0x1778, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C1 0239
        gbc.setState(0x8ed9, 0x2dcb, 0x6a0, 0x9359, 0xcbe2, 0x36c3, 0x0, 0x1);
        gbc.writeMem(0x2dcb, { 0xfc, 0xef });
        gbc.writeMem(0x8ed9, { 0xc1 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x2dcd, gbc.sp());
        EXPECT(0x8eda, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc1, gbc.readMem(0x8ed9));
        // C1 023A
        gbc.setState(0x4f64, 0x1f08, 0x5ae0, 0x1200, 0xb1d8, 0x41d4, 0x0, 0x1);
        gbc.writeMem(0x1f08, { 0x9b, 0xb2 });
        gbc.writeMem(0x4f64, { 0xc1 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x1f0a, gbc.sp());
        EXPECT(0x4f65, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C1 023B
        gbc.setState(0x8634, 0x4883, 0xb760, 0x6cc3, 0xad05, 0x50d7, 0x0, 0x1);
        gbc.writeMem(0x4883, { 0x7, 0x2d });
        gbc.writeMem(0x8634, { 0xc1 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0x4885, gbc.sp());
        EXPECT(0x8635, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc1, gbc.readMem(0x8634));
        // C1 023C
        gbc.setState(0x279a, 0xf1c9, 0x8170, 0xd433, 0x7f6c, 0xa2d6, 0x0, 0x0);
        gbc.writeMem(0x279a, { 0xc1 });
        gbc.writeMem(0xf1c9, { 0x4f, 0xb1 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0xf1cb, gbc.sp());
        EXPECT(0x279b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4f, gbc.readMem(0xf1c9));
        EXPECT(0xb1, gbc.readMem(0xf1ca));
        // C1 023D
        gbc.setState(0xa01, 0x107d, 0x93c0, 0x2073, 0x27fc, 0x2eac, 0x1, 0x0);
        gbc.writeMem(0xa01, { 0xc1 });
        gbc.writeMem(0x107d, { 0x42, 0x65 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x107f, gbc.sp());
        EXPECT(0xa02, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C1 023E
        gbc.setState(0xe0c0, 0xbfaf, 0xc6c0, 0x53d6, 0xa448, 0x136c, 0x1, 0x0);
        gbc.writeMem(0xbfaf, { 0x70, 0xc });
        gbc.writeMem(0xe0c0, { 0xc1 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0xbfb1, gbc.sp());
        EXPECT(0xe0c1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x70, gbc.readMem(0xbfaf));
        EXPECT(0xc, gbc.readMem(0xbfb0));
        EXPECT(0xc1, gbc.readMem(0xe0c0));
        // C1 023F
        gbc.setState(0xd75b, 0x1e6e, 0xc610, 0x9a21, 0xf54b, 0x1ee9, 0x1, 0x1);
        gbc.writeMem(0x1e6e, { 0xaa, 0x81 });
        gbc.writeMem(0xd75b, { 0xc1 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x1e70, gbc.sp());
        EXPECT(0xd75c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc1, gbc.readMem(0xd75b));
        // C1 0240
        gbc.setState(0x994b, 0x467e, 0x18a0, 0x4fe2, 0xc9fc, 0xaefb, 0x0, 0x0);
        gbc.writeMem(0x467e, { 0x61, 0x8a });
        gbc.writeMem(0x994b, { 0xc1 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x4680, gbc.sp());
        EXPECT(0x994c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc1, gbc.readMem(0x994b));
        // C1 0241
        gbc.setState(0x151d, 0x575, 0x6160, 0xf9c7, 0xa7c, 0x6cc8, 0x0, 0x0);
        gbc.writeMem(0x575, { 0xe8, 0xe9 });
        gbc.writeMem(0x151d, { 0xc1 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x577, gbc.sp());
        EXPECT(0x151e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C1 0242
        gbc.setState(0x6527, 0x2a89, 0xf010, 0x6e11, 0xb5b2, 0x7d98, 0x0, 0x0);
        gbc.writeMem(0x2a89, { 0x59, 0x3b });
        gbc.writeMem(0x6527, { 0xc1 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x2a8b, gbc.sp());
        EXPECT(0x6528, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C1 0243
        gbc.setState(0x4dec, 0x4e28, 0x2b10, 0x9cc7, 0xc705, 0xe195, 0x0, 0x0);
        gbc.writeMem(0x4dec, { 0xc1 });
        gbc.writeMem(0x4e28, { 0xf2, 0x3b });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x4e2a, gbc.sp());
        EXPECT(0x4ded, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C1 0244
        gbc.setState(0xacf3, 0x3cd9, 0x7c80, 0x9637, 0xb621, 0x5001, 0x0, 0x0);
        gbc.writeMem(0x3cd9, { 0x87, 0x1c });
        gbc.writeMem(0xacf3, { 0xc1 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x3cdb, gbc.sp());
        EXPECT(0xacf4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc1, gbc.readMem(0xacf3));
        // C1 0245
        gbc.setState(0x2e24, 0x7e3f, 0x7a60, 0x30fe, 0x9216, 0x9708, 0x0, 0x1);
        gbc.writeMem(0x2e24, { 0xc1 });
        gbc.writeMem(0x7e3f, { 0xc5, 0x77 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x7e41, gbc.sp());
        EXPECT(0x2e25, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C1 0246
        gbc.setState(0x6e34, 0x3224, 0xda40, 0x4b3e, 0xe707, 0x511c, 0x0, 0x1);
        gbc.writeMem(0x3224, { 0xb2, 0xdc });
        gbc.writeMem(0x6e34, { 0xc1 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x3226, gbc.sp());
        EXPECT(0x6e35, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C1 0247
        gbc.setState(0xbe54, 0x8a6e, 0xd510, 0x9446, 0x887d, 0x4473, 0x1, 0x1);
        gbc.writeMem(0x8a6e, { 0x60, 0x8b });
        gbc.writeMem(0xbe54, { 0xc1 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x8a70, gbc.sp());
        EXPECT(0xbe55, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x60, gbc.readMem(0x8a6e));
        EXPECT(0x8b, gbc.readMem(0x8a6f));
        EXPECT(0xc1, gbc.readMem(0xbe54));
        // C1 0248
        gbc.setState(0xcb7f, 0xef03, 0xcce0, 0x2bb8, 0x4770, 0x23d3, 0x0, 0x0);
        gbc.writeMem(0xcb7f, { 0xc1 });
        gbc.writeMem(0xef03, { 0xb4, 0x71 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0xef05, gbc.sp());
        EXPECT(0xcb80, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc1, gbc.readMem(0xcb7f));
        EXPECT(0xb4, gbc.readMem(0xef03));
        EXPECT(0x71, gbc.readMem(0xef04));
        // C1 0249
        gbc.setState(0x8683, 0x9998, 0x8040, 0xcfb6, 0x74f1, 0x473b, 0x0, 0x0);
        gbc.writeMem(0x8683, { 0xc1 });
        gbc.writeMem(0x9998, { 0xa6, 0xd3 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x999a, gbc.sp());
        EXPECT(0x8684, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc1, gbc.readMem(0x8683));
        EXPECT(0xa6, gbc.readMem(0x9998));
        EXPECT(0xd3, gbc.readMem(0x9999));
        // C1 024A
        gbc.setState(0x751c, 0x1797, 0xf870, 0x6576, 0xddb3, 0x46ed, 0x1, 0x1);
        gbc.writeMem(0x1797, { 0x8f, 0xf9 });
        gbc.writeMem(0x751c, { 0xc1 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x1799, gbc.sp());
        EXPECT(0x751d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C1 024B
        gbc.setState(0x2794, 0x6acc, 0xbaa0, 0x2b64, 0x31d4, 0x69d3, 0x0, 0x1);
        gbc.writeMem(0x2794, { 0xc1 });
        gbc.writeMem(0x6acc, { 0x7f, 0x89 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x6ace, gbc.sp());
        EXPECT(0x2795, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C1 024C
        gbc.setState(0x49f0, 0xd4af, 0x3170, 0x7c49, 0x9284, 0x14f2, 0x1, 0x1);
        gbc.writeMem(0x49f0, { 0xc1 });
        gbc.writeMem(0xd4af, { 0xe1, 0xde });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0xd4b1, gbc.sp());
        EXPECT(0x49f1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe1, gbc.readMem(0xd4af));
        EXPECT(0xde, gbc.readMem(0xd4b0));
        // C1 024D
        gbc.setState(0x7dfb, 0xe642, 0xcd80, 0xbc7b, 0xc7fd, 0x1966, 0x0, 0x0);
        gbc.writeMem(0x7dfb, { 0xc1 });
        gbc.writeMem(0xe642, { 0xc2, 0xc1 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0xe644, gbc.sp());
        EXPECT(0x7dfc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc2, gbc.readMem(0xe642));
        EXPECT(0xc1, gbc.readMem(0xe643));
        // C1 024E
        gbc.setState(0xe6b5, 0xdce0, 0xbaa0, 0x4db9, 0xd79f, 0xbc38, 0x1, 0x0);
        gbc.writeMem(0xdce0, { 0xd4, 0x60 });
        gbc.writeMem(0xe6b5, { 0xc1 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0xdce2, gbc.sp());
        EXPECT(0xe6b6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd4, gbc.readMem(0xdce0));
        EXPECT(0x60, gbc.readMem(0xdce1));
        EXPECT(0xc1, gbc.readMem(0xe6b5));
        // C1 024F
        gbc.setState(0xd897, 0x3885, 0xe7e0, 0xd54c, 0xe509, 0x2df0, 0x0, 0x1);
        gbc.writeMem(0x3885, { 0x10, 0xd9 });
        gbc.writeMem(0xd897, { 0xc1 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x3887, gbc.sp());
        EXPECT(0xd898, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc1, gbc.readMem(0xd897));
        // C1 0250
        gbc.setState(0xd34d, 0x8431, 0xea0, 0xb768, 0x1c3a, 0xb1de, 0x1, 0x0);
        gbc.writeMem(0x8431, { 0xe0, 0x12 });
        gbc.writeMem(0xd34d, { 0xc1 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x8433, gbc.sp());
        EXPECT(0xd34e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe0, gbc.readMem(0x8431));
        EXPECT(0x12, gbc.readMem(0x8432));
        EXPECT(0xc1, gbc.readMem(0xd34d));
        // C1 0251
        gbc.setState(0x2d2, 0xe093, 0xd8c0, 0x9a4c, 0x850d, 0x201b, 0x0, 0x0);
        gbc.writeMem(0x2d2, { 0xc1 });
        gbc.writeMem(0xe093, { 0x71, 0xd3 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0xe095, gbc.sp());
        EXPECT(0x2d3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x71, gbc.readMem(0xe093));
        EXPECT(0xd3, gbc.readMem(0xe094));
        // C1 0252
        gbc.setState(0x45f4, 0xa2da, 0xeea0, 0xdd6a, 0xb214, 0xdea0, 0x0, 0x1);
        gbc.writeMem(0x45f4, { 0xc1 });
        gbc.writeMem(0xa2da, { 0xa7, 0x8a });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0xa2dc, gbc.sp());
        EXPECT(0x45f5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa7, gbc.readMem(0xa2da));
        EXPECT(0x8a, gbc.readMem(0xa2db));
        // C1 0253
        gbc.setState(0xc520, 0xfdef, 0x4450, 0x2704, 0x864f, 0xe568, 0x0, 0x1);
        gbc.writeMem(0xc520, { 0xc1 });
        gbc.writeMem(0xfdef, { 0x4c, 0x47 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0xfdf1, gbc.sp());
        EXPECT(0xc521, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc1, gbc.readMem(0xc520));
        EXPECT(0x4c, gbc.readMem(0xfdef));
        EXPECT(0x47, gbc.readMem(0xfdf0));
        // C1 0254
        gbc.setState(0x26b2, 0xdd68, 0x8d50, 0x89f9, 0x70fa, 0x50e3, 0x0, 0x0);
        gbc.writeMem(0x26b2, { 0xc1 });
        gbc.writeMem(0xdd68, { 0x74, 0x12 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0xdd6a, gbc.sp());
        EXPECT(0x26b3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x74, gbc.readMem(0xdd68));
        EXPECT(0x12, gbc.readMem(0xdd69));
        // C1 0255
        gbc.setState(0x3130, 0x208b, 0xd3f0, 0xd075, 0x3d52, 0x8c9b, 0x1, 0x1);
        gbc.writeMem(0x208b, { 0x91, 0x84 });
        gbc.writeMem(0x3130, { 0xc1 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x208d, gbc.sp());
        EXPECT(0x3131, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C1 0256
        gbc.setState(0x9439, 0x88a6, 0x7430, 0x6f6a, 0xda0c, 0x8afe, 0x0, 0x0);
        gbc.writeMem(0x88a6, { 0xa, 0xb4 });
        gbc.writeMem(0x9439, { 0xc1 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x88a8, gbc.sp());
        EXPECT(0x943a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa, gbc.readMem(0x88a6));
        EXPECT(0xb4, gbc.readMem(0x88a7));
        EXPECT(0xc1, gbc.readMem(0x9439));
        // C1 0257
        gbc.setState(0xa8b0, 0x72cc, 0x3380, 0x9131, 0x8f4d, 0x57b6, 0x1, 0x0);
        gbc.writeMem(0x72cc, { 0xad, 0xdc });
        gbc.writeMem(0xa8b0, { 0xc1 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x72ce, gbc.sp());
        EXPECT(0xa8b1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc1, gbc.readMem(0xa8b0));
        // C1 0258
        gbc.setState(0xb080, 0x21b3, 0xf990, 0xf3b, 0xfce, 0xa934, 0x0, 0x1);
        gbc.writeMem(0x21b3, { 0xd9, 0x28 });
        gbc.writeMem(0xb080, { 0xc1 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x21b5, gbc.sp());
        EXPECT(0xb081, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc1, gbc.readMem(0xb080));
        // C1 0259
        gbc.setState(0x4a9c, 0x1da0, 0x3a0, 0xdaf9, 0x547d, 0xaa68, 0x0, 0x1);
        gbc.writeMem(0x1da0, { 0x64, 0x3b });
        gbc.writeMem(0x4a9c, { 0xc1 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x1da2, gbc.sp());
        EXPECT(0x4a9d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C1 025A
        gbc.setState(0x1f1f, 0xe824, 0x7c10, 0xdeca, 0x162e, 0x34a1, 0x0, 0x0);
        gbc.writeMem(0x1f1f, { 0xc1 });
        gbc.writeMem(0xe824, { 0x9b, 0x79 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0xe826, gbc.sp());
        EXPECT(0x1f20, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9b, gbc.readMem(0xe824));
        EXPECT(0x79, gbc.readMem(0xe825));
        // C1 025B
        gbc.setState(0x3e90, 0xd385, 0xd680, 0x594f, 0xb3ca, 0xdfe5, 0x0, 0x0);
        gbc.writeMem(0x3e90, { 0xc1 });
        gbc.writeMem(0xd385, { 0xb3, 0x65 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0xd387, gbc.sp());
        EXPECT(0x3e91, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb3, gbc.readMem(0xd385));
        EXPECT(0x65, gbc.readMem(0xd386));
        // C1 025C
        gbc.setState(0x4fe9, 0x271, 0x5fd0, 0x4157, 0xc724, 0xf8fa, 0x1, 0x1);
        gbc.writeMem(0x271, { 0xa4, 0xc8 });
        gbc.writeMem(0x4fe9, { 0xc1 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0x273, gbc.sp());
        EXPECT(0x4fea, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C1 025D
        gbc.setState(0xb8e7, 0x313, 0xf7a0, 0x287c, 0x34a6, 0x96a5, 0x0, 0x1);
        gbc.writeMem(0x313, { 0x57, 0x74 });
        gbc.writeMem(0xb8e7, { 0xc1 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x315, gbc.sp());
        EXPECT(0xb8e8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc1, gbc.readMem(0xb8e7));
        // C1 025E
        gbc.setState(0xe786, 0x65c7, 0x1a0, 0x78e8, 0x8674, 0x8d70, 0x1, 0x0);
        gbc.writeMem(0x65c7, { 0x55, 0x2b });
        gbc.writeMem(0xe786, { 0xc1 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x65c9, gbc.sp());
        EXPECT(0xe787, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc1, gbc.readMem(0xe786));
        // C1 025F
        gbc.setState(0xc45b, 0xbdef, 0x30f0, 0xf052, 0xc43c, 0xb024, 0x0, 0x1);
        gbc.writeMem(0xbdef, { 0x1b, 0x53 });
        gbc.writeMem(0xc45b, { 0xc1 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0xbdf1, gbc.sp());
        EXPECT(0xc45c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1b, gbc.readMem(0xbdef));
        EXPECT(0x53, gbc.readMem(0xbdf0));
        EXPECT(0xc1, gbc.readMem(0xc45b));
        // C1 0261
        gbc.setState(0x828a, 0x2667, 0x34e0, 0x2dce, 0x2e2f, 0x3bc8, 0x1, 0x0);
        gbc.writeMem(0x2667, { 0x9, 0x10 });
        gbc.writeMem(0x828a, { 0xc1 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x2669, gbc.sp());
        EXPECT(0x828b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc1, gbc.readMem(0x828a));
        // C1 0262
        gbc.setState(0x3789, 0xa37d, 0x2630, 0x41ce, 0x99a0, 0xf38b, 0x0, 0x0);
        gbc.writeMem(0x3789, { 0xc1 });
        gbc.writeMem(0xa37d, { 0x28, 0x45 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0xa37f, gbc.sp());
        EXPECT(0x378a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x28, gbc.readMem(0xa37d));
        EXPECT(0x45, gbc.readMem(0xa37e));
        // C1 0263
        gbc.setState(0x41f0, 0x3f11, 0x8e40, 0xd7ab, 0x1927, 0xef8e, 0x0, 0x0);
        gbc.writeMem(0x3f11, { 0xf2, 0xe9 });
        gbc.writeMem(0x41f0, { 0xc1 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x3f13, gbc.sp());
        EXPECT(0x41f1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C1 0264
        gbc.setState(0x53f5, 0xa6ec, 0xe4f0, 0xe79f, 0x603c, 0xe4d4, 0x0, 0x1);
        gbc.writeMem(0x53f5, { 0xc1 });
        gbc.writeMem(0xa6ec, { 0x56, 0x64 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0xa6ee, gbc.sp());
        EXPECT(0x53f6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x56, gbc.readMem(0xa6ec));
        EXPECT(0x64, gbc.readMem(0xa6ed));
        // C1 0265
        gbc.setState(0x1f59, 0xdef8, 0x5210, 0x30e8, 0xbac1, 0x8809, 0x1, 0x0);
        gbc.writeMem(0x1f59, { 0xc1 });
        gbc.writeMem(0xdef8, { 0x36, 0xee });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0xdefa, gbc.sp());
        EXPECT(0x1f5a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x36, gbc.readMem(0xdef8));
        EXPECT(0xee, gbc.readMem(0xdef9));
        // C1 0266
        gbc.setState(0x5f03, 0xfd69, 0xf7a0, 0x4fc6, 0xb3ba, 0xed6b, 0x1, 0x0);
        gbc.writeMem(0x5f03, { 0xc1 });
        gbc.writeMem(0xfd69, { 0xcc, 0x5a });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0xfd6b, gbc.sp());
        EXPECT(0x5f04, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcc, gbc.readMem(0xfd69));
        EXPECT(0x5a, gbc.readMem(0xfd6a));
        // C1 0267
        gbc.setState(0x9fb4, 0x81dc, 0x1580, 0x4b61, 0x81c4, 0x2ad, 0x0, 0x1);
        gbc.writeMem(0x81dc, { 0x4c, 0x99 });
        gbc.writeMem(0x9fb4, { 0xc1 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x81de, gbc.sp());
        EXPECT(0x9fb5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4c, gbc.readMem(0x81dc));
        EXPECT(0x99, gbc.readMem(0x81dd));
        EXPECT(0xc1, gbc.readMem(0x9fb4));
        // C1 0268
        gbc.setState(0x1cec, 0x4ce0, 0x15e0, 0x6d2c, 0x5138, 0xf297, 0x0, 0x1);
        gbc.writeMem(0x1cec, { 0xc1 });
        gbc.writeMem(0x4ce0, { 0x8f, 0xb3 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0x4ce2, gbc.sp());
        EXPECT(0x1ced, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C1 0269
        gbc.setState(0xa4af, 0x6c96, 0xe660, 0xecaa, 0x6f70, 0x6750, 0x1, 0x1);
        gbc.writeMem(0x6c96, { 0xf6, 0x62 });
        gbc.writeMem(0xa4af, { 0xc1 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x6c98, gbc.sp());
        EXPECT(0xa4b0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc1, gbc.readMem(0xa4af));
        // C1 026B
        gbc.setState(0x83b0, 0x9c9, 0xe2c0, 0x94c4, 0x858, 0x951, 0x0, 0x0);
        gbc.writeMem(0x9c9, { 0x27, 0xff });
        gbc.writeMem(0x83b0, { 0xc1 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x9cb, gbc.sp());
        EXPECT(0x83b1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc1, gbc.readMem(0x83b0));
        // C1 026C
        gbc.setState(0xab3f, 0xa452, 0xc160, 0xd58f, 0xd6d8, 0x4062, 0x0, 0x1);
        gbc.writeMem(0xa452, { 0x58, 0x44 });
        gbc.writeMem(0xab3f, { 0xc1 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0xa454, gbc.sp());
        EXPECT(0xab40, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x58, gbc.readMem(0xa452));
        EXPECT(0x44, gbc.readMem(0xa453));
        EXPECT(0xc1, gbc.readMem(0xab3f));
        // C1 026D
        gbc.setState(0xefac, 0xbbc4, 0x5450, 0x3846, 0xba6b, 0x9300, 0x1, 0x1);
        gbc.writeMem(0xbbc4, { 0xde, 0x34 });
        gbc.writeMem(0xefac, { 0xc1 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0xbbc6, gbc.sp());
        EXPECT(0xefad, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xde, gbc.readMem(0xbbc4));
        EXPECT(0x34, gbc.readMem(0xbbc5));
        EXPECT(0xc1, gbc.readMem(0xefac));
        // C1 026E
        gbc.setState(0x3ed2, 0x41e9, 0x68d0, 0xd9cf, 0x8f15, 0x4f8b, 0x0, 0x1);
        gbc.writeMem(0x3ed2, { 0xc1 });
        gbc.writeMem(0x41e9, { 0x3a, 0xa6 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x41eb, gbc.sp());
        EXPECT(0x3ed3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C1 026F
        gbc.setState(0x4016, 0x1ff5, 0x5c20, 0xd5a4, 0x7b2d, 0xc727, 0x0, 0x0);
        gbc.writeMem(0x1ff5, { 0xa5, 0x35 });
        gbc.writeMem(0x4016, { 0xc1 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x1ff7, gbc.sp());
        EXPECT(0x4017, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C1 0271
        gbc.setState(0x7e9d, 0x1887, 0x2940, 0xd51, 0xcd74, 0xf34, 0x0, 0x0);
        gbc.writeMem(0x1887, { 0xa1, 0xa1 });
        gbc.writeMem(0x7e9d, { 0xc1 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x1889, gbc.sp());
        EXPECT(0x7e9e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C1 0272
        gbc.setState(0x3087, 0xbd7b, 0xf290, 0x722b, 0x3166, 0x951e, 0x1, 0x0);
        gbc.writeMem(0x3087, { 0xc1 });
        gbc.writeMem(0xbd7b, { 0x46, 0x11 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0xbd7d, gbc.sp());
        EXPECT(0x3088, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x46, gbc.readMem(0xbd7b));
        EXPECT(0x11, gbc.readMem(0xbd7c));
        // C1 0273
        gbc.setState(0x9ae7, 0x472b, 0x19a0, 0xd118, 0x828a, 0x9cbf, 0x1, 0x0);
        gbc.writeMem(0x472b, { 0x9e, 0xed });
        gbc.writeMem(0x9ae7, { 0xc1 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x472d, gbc.sp());
        EXPECT(0x9ae8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc1, gbc.readMem(0x9ae7));
        // C1 0274
        gbc.setState(0xe64, 0x32a3, 0xc980, 0xcf7f, 0x830e, 0x46c2, 0x0, 0x0);
        gbc.writeMem(0xe64, { 0xc1 });
        gbc.writeMem(0x32a3, { 0xd9, 0xd8 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x32a5, gbc.sp());
        EXPECT(0xe65, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C1 0275
        gbc.setState(0x5ed9, 0x7a7b, 0xc3e0, 0xd223, 0xafb3, 0x2094, 0x0, 0x0);
        gbc.writeMem(0x5ed9, { 0xc1 });
        gbc.writeMem(0x7a7b, { 0x72, 0x22 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x7a7d, gbc.sp());
        EXPECT(0x5eda, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C1 0276
        gbc.setState(0xe2bf, 0x281e, 0x520, 0x47cf, 0x85a5, 0x7485, 0x1, 0x0);
        gbc.writeMem(0x281e, { 0x18, 0x7e });
        gbc.writeMem(0xe2bf, { 0xc1 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x2820, gbc.sp());
        EXPECT(0xe2c0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc1, gbc.readMem(0xe2bf));
        // C1 0277
        gbc.setState(0x71e6, 0x4fc3, 0x9730, 0x5efb, 0x9a9b, 0xca59, 0x0, 0x0);
        gbc.writeMem(0x4fc3, { 0xd4, 0x58 });
        gbc.writeMem(0x71e6, { 0xc1 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x4fc5, gbc.sp());
        EXPECT(0x71e7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C1 0278
        gbc.setState(0x1661, 0x2329, 0xbf30, 0x9d52, 0xfadd, 0x1a1f, 0x0, 0x1);
        gbc.writeMem(0x1661, { 0xc1 });
        gbc.writeMem(0x2329, { 0x96, 0x15 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x232b, gbc.sp());
        EXPECT(0x1662, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C1 0279
        gbc.setState(0x7b4d, 0x3714, 0x78f0, 0xa0a5, 0xc026, 0x9eaf, 0x1, 0x0);
        gbc.writeMem(0x3714, { 0xf5, 0x6b });
        gbc.writeMem(0x7b4d, { 0xc1 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x3716, gbc.sp());
        EXPECT(0x7b4e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C1 027A
        gbc.setState(0x692c, 0x56f2, 0x48b0, 0x6a1, 0x77db, 0x50fc, 0x1, 0x1);
        gbc.writeMem(0x56f2, { 0xf5, 0x59 });
        gbc.writeMem(0x692c, { 0xc1 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x56f4, gbc.sp());
        EXPECT(0x692d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C1 027B
        gbc.setState(0x6a8c, 0x9ad, 0x3cd0, 0xa03, 0x6036, 0x6dc8, 0x0, 0x1);
        gbc.writeMem(0x9ad, { 0x44, 0xc9 });
        gbc.writeMem(0x6a8c, { 0xc1 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x9af, gbc.sp());
        EXPECT(0x6a8d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C1 027C
        gbc.setState(0x88d9, 0x4b02, 0xea80, 0x8331, 0xc3cd, 0x74c5, 0x1, 0x1);
        gbc.writeMem(0x4b02, { 0x24, 0xe3 });
        gbc.writeMem(0x88d9, { 0xc1 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x4b04, gbc.sp());
        EXPECT(0x88da, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc1, gbc.readMem(0x88d9));
        // C1 027D
        gbc.setState(0x9d08, 0x9e64, 0x6670, 0x89f9, 0x65e6, 0xec93, 0x0, 0x1);
        gbc.writeMem(0x9d08, { 0xc1 });
        gbc.writeMem(0x9e64, { 0x8b, 0x95 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0x9e66, gbc.sp());
        EXPECT(0x9d09, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc1, gbc.readMem(0x9d08));
        EXPECT(0x8b, gbc.readMem(0x9e64));
        EXPECT(0x95, gbc.readMem(0x9e65));
        // C1 027E
        gbc.setState(0x362, 0x2027, 0x1d80, 0x292d, 0xf274, 0xcbcb, 0x1, 0x1);
        gbc.writeMem(0x362, { 0xc1 });
        gbc.writeMem(0x2027, { 0x56, 0xd });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x2029, gbc.sp());
        EXPECT(0x363, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C1 027F
        gbc.setState(0x69cd, 0xb5e7, 0x3140, 0x41e4, 0x906d, 0xb9d6, 0x1, 0x0);
        gbc.writeMem(0x69cd, { 0xc1 });
        gbc.writeMem(0xb5e7, { 0x35, 0x27 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0xb5e9, gbc.sp());
        EXPECT(0x69ce, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x35, gbc.readMem(0xb5e7));
        EXPECT(0x27, gbc.readMem(0xb5e8));
        // C1 0280
        gbc.setState(0x2ed6, 0x9c94, 0x9c70, 0xa590, 0x157a, 0x40f4, 0x0, 0x0);
        gbc.writeMem(0x2ed6, { 0xc1 });
        gbc.writeMem(0x9c94, { 0x48, 0x98 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x9c96, gbc.sp());
        EXPECT(0x2ed7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x48, gbc.readMem(0x9c94));
        EXPECT(0x98, gbc.readMem(0x9c95));
        // C1 0281
        gbc.setState(0xc5be, 0x4219, 0xe2b0, 0x87f7, 0xe1b3, 0x95c5, 0x1, 0x0);
        gbc.writeMem(0x4219, { 0x57, 0xe0 });
        gbc.writeMem(0xc5be, { 0xc1 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x421b, gbc.sp());
        EXPECT(0xc5bf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc1, gbc.readMem(0xc5be));
        // C1 0284
        gbc.setState(0xa3b0, 0xffe, 0xccd0, 0x3bf0, 0x5d75, 0x2ac3, 0x1, 0x1);
        gbc.writeMem(0xffe, { 0xbc, 0x72 });
        gbc.writeMem(0xa3b0, { 0xc1 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x1000, gbc.sp());
        EXPECT(0xa3b1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc1, gbc.readMem(0xa3b0));
        // C1 0285
        gbc.setState(0x1709, 0x3175, 0xbad0, 0xcd21, 0x701a, 0x4df6, 0x1, 0x1);
        gbc.writeMem(0x1709, { 0xc1 });
        gbc.writeMem(0x3175, { 0x97, 0x38 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x3177, gbc.sp());
        EXPECT(0x170a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C1 0286
        gbc.setState(0x46cb, 0x72d8, 0xfa30, 0xac38, 0xb46, 0x8bc9, 0x1, 0x1);
        gbc.writeMem(0x46cb, { 0xc1 });
        gbc.writeMem(0x72d8, { 0xb2, 0xd3 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x72da, gbc.sp());
        EXPECT(0x46cc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C1 0287
        gbc.setState(0x3a51, 0x14b0, 0x9de0, 0x6d15, 0x5b66, 0x47b1, 0x0, 0x0);
        gbc.writeMem(0x14b0, { 0x6c, 0x57 });
        gbc.writeMem(0x3a51, { 0xc1 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x14b2, gbc.sp());
        EXPECT(0x3a52, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C1 0288
        gbc.setState(0x5b0f, 0x1db8, 0xc7e0, 0x1b5f, 0x61b9, 0x9fe7, 0x1, 0x0);
        gbc.writeMem(0x1db8, { 0x2e, 0x89 });
        gbc.writeMem(0x5b0f, { 0xc1 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x1dba, gbc.sp());
        EXPECT(0x5b10, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C1 0289
        gbc.setState(0x9b5f, 0xf765, 0x2450, 0xf923, 0x482e, 0x146b, 0x1, 0x0);
        gbc.writeMem(0x9b5f, { 0xc1 });
        gbc.writeMem(0xf765, { 0xf5, 0x44 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0xf767, gbc.sp());
        EXPECT(0x9b60, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc1, gbc.readMem(0x9b5f));
        EXPECT(0xf5, gbc.readMem(0xf765));
        EXPECT(0x44, gbc.readMem(0xf766));
        // C1 028A
        gbc.setState(0x2312, 0x7e7f, 0x810, 0x48f9, 0xff53, 0x3310, 0x1, 0x1);
        gbc.writeMem(0x2312, { 0xc1 });
        gbc.writeMem(0x7e7f, { 0x26, 0x57 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x7e81, gbc.sp());
        EXPECT(0x2313, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C1 028B
        gbc.setState(0x5d1b, 0xc27, 0x4c50, 0x1bae, 0x2e35, 0x7352, 0x0, 0x0);
        gbc.writeMem(0xc27, { 0x97, 0x8b });
        gbc.writeMem(0x5d1b, { 0xc1 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0xc29, gbc.sp());
        EXPECT(0x5d1c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C1 028C
        gbc.setState(0xac86, 0xc1a8, 0x6c50, 0x14c5, 0x5bfb, 0x4a67, 0x1, 0x0);
        gbc.writeMem(0xac86, { 0xc1 });
        gbc.writeMem(0xc1a8, { 0x8, 0x5b });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0xc1aa, gbc.sp());
        EXPECT(0xac87, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc1, gbc.readMem(0xac86));
        EXPECT(0x8, gbc.readMem(0xc1a8));
        EXPECT(0x5b, gbc.readMem(0xc1a9));
        // C1 028D
        gbc.setState(0x443a, 0x4b46, 0x2c50, 0x2bf3, 0xee44, 0x59e4, 0x0, 0x0);
        gbc.writeMem(0x443a, { 0xc1 });
        gbc.writeMem(0x4b46, { 0x13, 0xc0 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x4b48, gbc.sp());
        EXPECT(0x443b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C1 028E
        gbc.setState(0x3a17, 0x7dbd, 0x88e0, 0x590a, 0x192, 0xc80, 0x0, 0x1);
        gbc.writeMem(0x3a17, { 0xc1 });
        gbc.writeMem(0x7dbd, { 0x1b, 0xff });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x7dbf, gbc.sp());
        EXPECT(0x3a18, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C1 028F
        gbc.setState(0xd5ee, 0x9843, 0xe820, 0x1a15, 0x122, 0x58ee, 0x1, 0x1);
        gbc.writeMem(0x9843, { 0xaa, 0xf2 });
        gbc.writeMem(0xd5ee, { 0xc1 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x9845, gbc.sp());
        EXPECT(0xd5ef, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xaa, gbc.readMem(0x9843));
        EXPECT(0xf2, gbc.readMem(0x9844));
        EXPECT(0xc1, gbc.readMem(0xd5ee));
        // C1 0290
        gbc.setState(0x332, 0x9a7d, 0xcbe0, 0xf143, 0x6523, 0x3dde, 0x1, 0x0);
        gbc.writeMem(0x332, { 0xc1 });
        gbc.writeMem(0x9a7d, { 0x1d, 0x36 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x9a7f, gbc.sp());
        EXPECT(0x333, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1d, gbc.readMem(0x9a7d));
        EXPECT(0x36, gbc.readMem(0x9a7e));
        // C1 0291
        gbc.setState(0x8b59, 0x341c, 0x45c0, 0xf4a0, 0x25f9, 0x9447, 0x0, 0x0);
        gbc.writeMem(0x341c, { 0x6c, 0xb4 });
        gbc.writeMem(0x8b59, { 0xc1 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x341e, gbc.sp());
        EXPECT(0x8b5a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc1, gbc.readMem(0x8b59));
        // C1 0292
        gbc.setState(0xa462, 0x4cc1, 0xcd70, 0x5f92, 0x9cf4, 0xf091, 0x0, 0x0);
        gbc.writeMem(0x4cc1, { 0xdd, 0xa });
        gbc.writeMem(0xa462, { 0xc1 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x4cc3, gbc.sp());
        EXPECT(0xa463, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc1, gbc.readMem(0xa462));
        // C1 0293
        gbc.setState(0x86dc, 0x6d70, 0xb190, 0xfa2b, 0x5e99, 0x23f8, 0x0, 0x1);
        gbc.writeMem(0x6d70, { 0x19, 0xb1 });
        gbc.writeMem(0x86dc, { 0xc1 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x6d72, gbc.sp());
        EXPECT(0x86dd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc1, gbc.readMem(0x86dc));
        // C1 0294
        gbc.setState(0x348e, 0xfbe2, 0x9710, 0x346, 0x3e22, 0x605c, 0x0, 0x0);
        gbc.writeMem(0x348e, { 0xc1 });
        gbc.writeMem(0xfbe2, { 0x76, 0xaf });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0xfbe4, gbc.sp());
        EXPECT(0x348f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x76, gbc.readMem(0xfbe2));
        EXPECT(0xaf, gbc.readMem(0xfbe3));
        // C1 0295
        gbc.setState(0xaaf, 0xcd0c, 0x6b10, 0x8b97, 0x1dda, 0xf49a, 0x0, 0x1);
        gbc.writeMem(0xaaf, { 0xc1 });
        gbc.writeMem(0xcd0c, { 0xed, 0xc4 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0xcd0e, gbc.sp());
        EXPECT(0xab0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xed, gbc.readMem(0xcd0c));
        EXPECT(0xc4, gbc.readMem(0xcd0d));
        // C1 0297
        gbc.setState(0xd4f0, 0x815b, 0x10, 0x4d95, 0xb421, 0x7f64, 0x1, 0x1);
        gbc.writeMem(0x815b, { 0xec, 0x65 });
        gbc.writeMem(0xd4f0, { 0xc1 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x815d, gbc.sp());
        EXPECT(0xd4f1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xec, gbc.readMem(0x815b));
        EXPECT(0x65, gbc.readMem(0x815c));
        EXPECT(0xc1, gbc.readMem(0xd4f0));
        // C1 0298
        gbc.setState(0x704e, 0xee2b, 0x9cf0, 0x7f0e, 0xf375, 0x5851, 0x1, 0x0);
        gbc.writeMem(0x704e, { 0xc1 });
        gbc.writeMem(0xee2b, { 0x5d, 0x58 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0xee2d, gbc.sp());
        EXPECT(0x704f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5d, gbc.readMem(0xee2b));
        EXPECT(0x58, gbc.readMem(0xee2c));
        // C1 0299
        gbc.setState(0x1358, 0x4ee2, 0x7e50, 0xe7dc, 0x4e96, 0x4cdb, 0x1, 0x1);
        gbc.writeMem(0x1358, { 0xc1 });
        gbc.writeMem(0x4ee2, { 0x2e, 0xb6 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x4ee4, gbc.sp());
        EXPECT(0x1359, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C1 029A
        gbc.setState(0x48d7, 0xf01d, 0x140, 0xcedd, 0x5da, 0xa664, 0x1, 0x1);
        gbc.writeMem(0x48d7, { 0xc1 });
        gbc.writeMem(0xf01d, { 0x42, 0x5a });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0xf01f, gbc.sp());
        EXPECT(0x48d8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x42, gbc.readMem(0xf01d));
        EXPECT(0x5a, gbc.readMem(0xf01e));
        // C1 029B
        gbc.setState(0xe8d4, 0x6415, 0x1890, 0xbc70, 0xb2b2, 0x2081, 0x0, 0x0);
        gbc.writeMem(0x6415, { 0xcf, 0x6d });
        gbc.writeMem(0xe8d4, { 0xc1 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x6417, gbc.sp());
        EXPECT(0xe8d5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc1, gbc.readMem(0xe8d4));
        // C1 029C
        gbc.setState(0x7706, 0xb624, 0x75c0, 0xc3c4, 0x498, 0xb87a, 0x1, 0x1);
        gbc.writeMem(0x7706, { 0xc1 });
        gbc.writeMem(0xb624, { 0x6b, 0x6b });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0xb626, gbc.sp());
        EXPECT(0x7707, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6b, gbc.readMem(0xb624));
        EXPECT(0x6b, gbc.readMem(0xb625));
        // C1 029D
        gbc.setState(0x957, 0x9d03, 0x4580, 0xf586, 0x16a2, 0xeac2, 0x1, 0x1);
        gbc.writeMem(0x957, { 0xc1 });
        gbc.writeMem(0x9d03, { 0xd7, 0xaa });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x9d05, gbc.sp());
        EXPECT(0x958, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd7, gbc.readMem(0x9d03));
        EXPECT(0xaa, gbc.readMem(0x9d04));
        // C1 029E
        gbc.setState(0x2643, 0xa60f, 0xc1e0, 0xc73, 0x60c9, 0x6d32, 0x1, 0x1);
        gbc.writeMem(0x2643, { 0xc1 });
        gbc.writeMem(0xa60f, { 0xf8, 0x9e });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0xa611, gbc.sp());
        EXPECT(0x2644, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf8, gbc.readMem(0xa60f));
        EXPECT(0x9e, gbc.readMem(0xa610));
        // C1 029F
        gbc.setState(0x7774, 0x91ef, 0xc9e0, 0x5f9f, 0x5e01, 0x5693, 0x1, 0x1);
        gbc.writeMem(0x7774, { 0xc1 });
        gbc.writeMem(0x91ef, { 0x36, 0xf8 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0x91f1, gbc.sp());
        EXPECT(0x7775, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x36, gbc.readMem(0x91ef));
        EXPECT(0xf8, gbc.readMem(0x91f0));
        // C1 02A0
        gbc.setState(0x6fb0, 0x4c65, 0x8860, 0xad79, 0xfbbc, 0x76b0, 0x1, 0x1);
        gbc.writeMem(0x4c65, { 0xab, 0x35 });
        gbc.writeMem(0x6fb0, { 0xc1 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x4c67, gbc.sp());
        EXPECT(0x6fb1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C1 02A1
        gbc.setState(0x3995, 0xb2f0, 0x92f0, 0x9782, 0x3ade, 0x6c77, 0x1, 0x0);
        gbc.writeMem(0x3995, { 0xc1 });
        gbc.writeMem(0xb2f0, { 0xde, 0x18 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0xb2f2, gbc.sp());
        EXPECT(0x3996, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xde, gbc.readMem(0xb2f0));
        EXPECT(0x18, gbc.readMem(0xb2f1));
        // C1 02A2
        gbc.setState(0xa314, 0x8c98, 0x4940, 0x718, 0xc3c0, 0xa0f, 0x1, 0x0);
        gbc.writeMem(0x8c98, { 0xa0, 0xb6 });
        gbc.writeMem(0xa314, { 0xc1 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x8c9a, gbc.sp());
        EXPECT(0xa315, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa0, gbc.readMem(0x8c98));
        EXPECT(0xb6, gbc.readMem(0x8c99));
        EXPECT(0xc1, gbc.readMem(0xa314));
        // C1 02A3
        gbc.setState(0xad9c, 0xf7e5, 0x7e20, 0xe720, 0x1863, 0xb517, 0x0, 0x0);
        gbc.writeMem(0xad9c, { 0xc1 });
        gbc.writeMem(0xf7e5, { 0x68, 0xc5 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0xf7e7, gbc.sp());
        EXPECT(0xad9d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc1, gbc.readMem(0xad9c));
        EXPECT(0x68, gbc.readMem(0xf7e5));
        EXPECT(0xc5, gbc.readMem(0xf7e6));
        // C1 02A4
        gbc.setState(0x1003, 0x62a3, 0xcc30, 0x1f73, 0x6eb9, 0x8435, 0x0, 0x1);
        gbc.writeMem(0x1003, { 0xc1 });
        gbc.writeMem(0x62a3, { 0x84, 0xce });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x62a5, gbc.sp());
        EXPECT(0x1004, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C1 02A5
        gbc.setState(0x9de8, 0xe241, 0xf8e0, 0x3f0, 0xd44c, 0xbae5, 0x1, 0x1);
        gbc.writeMem(0x9de8, { 0xc1 });
        gbc.writeMem(0xe241, { 0xe5, 0xc1 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0xe243, gbc.sp());
        EXPECT(0x9de9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc1, gbc.readMem(0x9de8));
        EXPECT(0xe5, gbc.readMem(0xe241));
        EXPECT(0xc1, gbc.readMem(0xe242));
        // C1 02A6
        gbc.setState(0x1b70, 0xd0b2, 0x52c0, 0xeba0, 0x27d6, 0x5e1f, 0x0, 0x0);
        gbc.writeMem(0x1b70, { 0xc1 });
        gbc.writeMem(0xd0b2, { 0x3c, 0x2f });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0xd0b4, gbc.sp());
        EXPECT(0x1b71, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3c, gbc.readMem(0xd0b2));
        EXPECT(0x2f, gbc.readMem(0xd0b3));
        // C1 02A7
        gbc.setState(0xa468, 0xb70, 0xb930, 0x8481, 0x3859, 0xf43e, 0x0, 0x0);
        gbc.writeMem(0xb70, { 0x1c, 0x9a });
        gbc.writeMem(0xa468, { 0xc1 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0xb72, gbc.sp());
        EXPECT(0xa469, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc1, gbc.readMem(0xa468));
        // C1 02A8
        gbc.setState(0x30e7, 0x5a62, 0xc9a0, 0x9cc1, 0xae80, 0xa6a7, 0x1, 0x0);
        gbc.writeMem(0x30e7, { 0xc1 });
        gbc.writeMem(0x5a62, { 0xfe, 0xbb });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x5a64, gbc.sp());
        EXPECT(0x30e8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C1 02A9
        gbc.setState(0xd8b, 0xf685, 0xa550, 0x83b4, 0xc22f, 0xdf0b, 0x1, 0x1);
        gbc.writeMem(0xd8b, { 0xc1 });
        gbc.writeMem(0xf685, { 0x11, 0xcb });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0xf687, gbc.sp());
        EXPECT(0xd8c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x11, gbc.readMem(0xf685));
        EXPECT(0xcb, gbc.readMem(0xf686));
        // C1 02AA
        gbc.setState(0x1b92, 0xc724, 0x4e00, 0x28fb, 0x8d87, 0x88a1, 0x1, 0x1);
        gbc.writeMem(0x1b92, { 0xc1 });
        gbc.writeMem(0xc724, { 0x5a, 0x18 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0xc726, gbc.sp());
        EXPECT(0x1b93, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5a, gbc.readMem(0xc724));
        EXPECT(0x18, gbc.readMem(0xc725));
        // C1 02AB
        gbc.setState(0x346c, 0x380d, 0x8120, 0x11ce, 0xbaf3, 0xbad5, 0x0, 0x0);
        gbc.writeMem(0x346c, { 0xc1 });
        gbc.writeMem(0x380d, { 0x99, 0x72 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x380f, gbc.sp());
        EXPECT(0x346d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C1 02AC
        gbc.setState(0x95db, 0xb59b, 0x44d0, 0xbfb, 0x3406, 0xcf2c, 0x1, 0x1);
        gbc.writeMem(0x95db, { 0xc1 });
        gbc.writeMem(0xb59b, { 0x59, 0x28 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0xb59d, gbc.sp());
        EXPECT(0x95dc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc1, gbc.readMem(0x95db));
        EXPECT(0x59, gbc.readMem(0xb59b));
        EXPECT(0x28, gbc.readMem(0xb59c));
        // C1 02AD
        gbc.setState(0x96a8, 0xe5d, 0x6e50, 0x59ae, 0x8ae7, 0xb82a, 0x1, 0x0);
        gbc.writeMem(0xe5d, { 0x6d, 0x9d });
        gbc.writeMem(0x96a8, { 0xc1 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0xe5f, gbc.sp());
        EXPECT(0x96a9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc1, gbc.readMem(0x96a8));
        // C1 02AE
        gbc.setState(0x8c5e, 0xe0e8, 0xd60, 0xd8e5, 0xcb03, 0x2ec3, 0x0, 0x1);
        gbc.writeMem(0x8c5e, { 0xc1 });
        gbc.writeMem(0xe0e8, { 0xf6, 0xf8 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0xe0ea, gbc.sp());
        EXPECT(0x8c5f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc1, gbc.readMem(0x8c5e));
        EXPECT(0xf6, gbc.readMem(0xe0e8));
        EXPECT(0xf8, gbc.readMem(0xe0e9));
        // C1 02AF
        gbc.setState(0xe3ec, 0xd9f7, 0x8480, 0x5634, 0xd903, 0xb035, 0x0, 0x0);
        gbc.writeMem(0xd9f7, { 0x92, 0x77 });
        gbc.writeMem(0xe3ec, { 0xc1 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0xd9f9, gbc.sp());
        EXPECT(0xe3ed, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x92, gbc.readMem(0xd9f7));
        EXPECT(0x77, gbc.readMem(0xd9f8));
        EXPECT(0xc1, gbc.readMem(0xe3ec));
        // C1 02B0
        gbc.setState(0x8f5, 0xea9d, 0xbd0, 0xb931, 0x7431, 0x4f98, 0x0, 0x0);
        gbc.writeMem(0x8f5, { 0xc1 });
        gbc.writeMem(0xea9d, { 0x1d, 0xd });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0xea9f, gbc.sp());
        EXPECT(0x8f6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1d, gbc.readMem(0xea9d));
        EXPECT(0xd, gbc.readMem(0xea9e));
        // C1 02B2
        gbc.setState(0x1223, 0x2ce1, 0xc6f0, 0x29c9, 0x612, 0x910a, 0x0, 0x0);
        gbc.writeMem(0x1223, { 0xc1 });
        gbc.writeMem(0x2ce1, { 0xef, 0x90 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x2ce3, gbc.sp());
        EXPECT(0x1224, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C1 02B3
        gbc.setState(0x92f9, 0xed41, 0xe770, 0xc950, 0x119f, 0x21e3, 0x0, 0x1);
        gbc.writeMem(0x92f9, { 0xc1 });
        gbc.writeMem(0xed41, { 0x37, 0xbf });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0xed43, gbc.sp());
        EXPECT(0x92fa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc1, gbc.readMem(0x92f9));
        EXPECT(0x37, gbc.readMem(0xed41));
        EXPECT(0xbf, gbc.readMem(0xed42));
        // C1 02B4
        gbc.setState(0xcbc7, 0x1737, 0xefe0, 0xe3c9, 0xf162, 0x31a6, 0x1, 0x0);
        gbc.writeMem(0x1737, { 0x4b, 0x85 });
        gbc.writeMem(0xcbc7, { 0xc1 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x1739, gbc.sp());
        EXPECT(0xcbc8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc1, gbc.readMem(0xcbc7));
        // C1 02B5
        gbc.setState(0xa365, 0x8c0a, 0xfd80, 0x8134, 0xaaf9, 0x8909, 0x0, 0x0);
        gbc.writeMem(0x8c0a, { 0x1b, 0xc2 });
        gbc.writeMem(0xa365, { 0xc1 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x8c0c, gbc.sp());
        EXPECT(0xa366, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1b, gbc.readMem(0x8c0a));
        EXPECT(0xc2, gbc.readMem(0x8c0b));
        EXPECT(0xc1, gbc.readMem(0xa365));
        // C1 02B6
        gbc.setState(0x7d63, 0x6b6, 0xdc10, 0x9b47, 0xaef8, 0x41f3, 0x0, 0x0);
        gbc.writeMem(0x6b6, { 0xb1, 0xcb });
        gbc.writeMem(0x7d63, { 0xc1 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x6b8, gbc.sp());
        EXPECT(0x7d64, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C1 02B7
        gbc.setState(0xcd82, 0xec4f, 0x3350, 0xff10, 0xd5b6, 0x3fe7, 0x1, 0x1);
        gbc.writeMem(0xcd82, { 0xc1 });
        gbc.writeMem(0xec4f, { 0x4a, 0xd6 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0xec51, gbc.sp());
        EXPECT(0xcd83, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc1, gbc.readMem(0xcd82));
        EXPECT(0x4a, gbc.readMem(0xec4f));
        EXPECT(0xd6, gbc.readMem(0xec50));
        // C1 02B8
        gbc.setState(0xa7f3, 0x3114, 0x590, 0x8119, 0x807a, 0xc040, 0x1, 0x1);
        gbc.writeMem(0x3114, { 0x28, 0xb7 });
        gbc.writeMem(0xa7f3, { 0xc1 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x3116, gbc.sp());
        EXPECT(0xa7f4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc1, gbc.readMem(0xa7f3));
        // C1 02BA
        gbc.setState(0x3f31, 0xde3f, 0x8120, 0xd9e5, 0x471b, 0xc830, 0x1, 0x1);
        gbc.writeMem(0x3f31, { 0xc1 });
        gbc.writeMem(0xde3f, { 0xaf, 0xad });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0xde41, gbc.sp());
        EXPECT(0x3f32, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xaf, gbc.readMem(0xde3f));
        EXPECT(0xad, gbc.readMem(0xde40));
        // C1 02BB
        gbc.setState(0x6184, 0x5987, 0x40a0, 0x396e, 0xb32f, 0x6502, 0x0, 0x0);
        gbc.writeMem(0x5987, { 0x6a, 0x47 });
        gbc.writeMem(0x6184, { 0xc1 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x5989, gbc.sp());
        EXPECT(0x6185, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C1 02BC
        gbc.setState(0x68ce, 0x8703, 0xce10, 0xaa8d, 0xe98b, 0xae3f, 0x1, 0x1);
        gbc.writeMem(0x68ce, { 0xc1 });
        gbc.writeMem(0x8703, { 0x54, 0xf2 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0x8705, gbc.sp());
        EXPECT(0x68cf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x54, gbc.readMem(0x8703));
        EXPECT(0xf2, gbc.readMem(0x8704));
        // C1 02BD
        gbc.setState(0x67ff, 0x9b34, 0xe20, 0x2f1b, 0x6540, 0xb117, 0x0, 0x0);
        gbc.writeMem(0x67ff, { 0xc1 });
        gbc.writeMem(0x9b34, { 0x7d, 0x54 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x9b36, gbc.sp());
        EXPECT(0x6800, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7d, gbc.readMem(0x9b34));
        EXPECT(0x54, gbc.readMem(0x9b35));
        // C1 02BE
        gbc.setState(0xc40a, 0x77ca, 0x8000, 0x75b0, 0x5304, 0x5fd1, 0x0, 0x1);
        gbc.writeMem(0x77ca, { 0xd6, 0xab });
        gbc.writeMem(0xc40a, { 0xc1 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x77cc, gbc.sp());
        EXPECT(0xc40b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc1, gbc.readMem(0xc40a));
        // C1 02C0
        gbc.setState(0x97bd, 0x2b7e, 0x8db0, 0xed99, 0x8038, 0x2393, 0x0, 0x0);
        gbc.writeMem(0x2b7e, { 0x74, 0x28 });
        gbc.writeMem(0x97bd, { 0xc1 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0x2b80, gbc.sp());
        EXPECT(0x97be, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc1, gbc.readMem(0x97bd));
        // C1 02C1
        gbc.setState(0x49b9, 0xc6b9, 0x35a0, 0xa9c2, 0xc165, 0x1ef0, 0x0, 0x1);
        gbc.writeMem(0x49b9, { 0xc1 });
        gbc.writeMem(0xc6b9, { 0xc2, 0xff });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0xc6bb, gbc.sp());
        EXPECT(0x49ba, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc2, gbc.readMem(0xc6b9));
        EXPECT(0xff, gbc.readMem(0xc6ba));
        // C1 02C2
        gbc.setState(0x49c9, 0xd5f0, 0xc30, 0x5bb2, 0xf05a, 0x4dce, 0x0, 0x0);
        gbc.writeMem(0x49c9, { 0xc1 });
        gbc.writeMem(0xd5f0, { 0x4d, 0x11 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0xd5f2, gbc.sp());
        EXPECT(0x49ca, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4d, gbc.readMem(0xd5f0));
        EXPECT(0x11, gbc.readMem(0xd5f1));
        // C1 02C3
        gbc.setState(0x6b09, 0x4af3, 0xd100, 0x3597, 0xf4ce, 0x13bb, 0x0, 0x0);
        gbc.writeMem(0x4af3, { 0xa1, 0xc5 });
        gbc.writeMem(0x6b09, { 0xc1 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x4af5, gbc.sp());
        EXPECT(0x6b0a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C1 02C4
        gbc.setState(0x967d, 0x7817, 0x55c0, 0x4771, 0x446f, 0x9b1, 0x1, 0x0);
        gbc.writeMem(0x7817, { 0x92, 0x16 });
        gbc.writeMem(0x967d, { 0xc1 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x7819, gbc.sp());
        EXPECT(0x967e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc1, gbc.readMem(0x967d));
        // C1 02C5
        gbc.setState(0xd429, 0xb340, 0xa0d0, 0xbf80, 0x4615, 0x659d, 0x1, 0x0);
        gbc.writeMem(0xb340, { 0x59, 0x79 });
        gbc.writeMem(0xd429, { 0xc1 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0xb342, gbc.sp());
        EXPECT(0xd42a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x59, gbc.readMem(0xb340));
        EXPECT(0x79, gbc.readMem(0xb341));
        EXPECT(0xc1, gbc.readMem(0xd429));
        // C1 02C6
        gbc.setState(0x43be, 0xd96, 0xd2c0, 0xbfbd, 0xdc78, 0xfd7b, 0x0, 0x0);
        gbc.writeMem(0xd96, { 0x6d, 0x3c });
        gbc.writeMem(0x43be, { 0xc1 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0xd98, gbc.sp());
        EXPECT(0x43bf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C1 02C7
        gbc.setState(0xca55, 0x602e, 0x7340, 0x95e7, 0xa2f, 0x349f, 0x1, 0x0);
        gbc.writeMem(0x602e, { 0xba, 0xc0 });
        gbc.writeMem(0xca55, { 0xc1 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x6030, gbc.sp());
        EXPECT(0xca56, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc1, gbc.readMem(0xca55));
        // C1 02C8
        gbc.setState(0x249d, 0x6974, 0x2650, 0x2385, 0xd84f, 0x12cc, 0x1, 0x0);
        gbc.writeMem(0x249d, { 0xc1 });
        gbc.writeMem(0x6974, { 0x3e, 0xf3 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x6976, gbc.sp());
        EXPECT(0x249e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C1 02C9
        gbc.setState(0xe781, 0x7a8a, 0xaed0, 0x1dda, 0xea3b, 0xcf92, 0x1, 0x1);
        gbc.writeMem(0x7a8a, { 0xfd, 0xba });
        gbc.writeMem(0xe781, { 0xc1 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x7a8c, gbc.sp());
        EXPECT(0xe782, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc1, gbc.readMem(0xe781));
        // C1 02CA
        gbc.setState(0xcf47, 0x211f, 0x8cf0, 0x9873, 0x380, 0x3227, 0x0, 0x1);
        gbc.writeMem(0x211f, { 0x2, 0x4a });
        gbc.writeMem(0xcf47, { 0xc1 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x2121, gbc.sp());
        EXPECT(0xcf48, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc1, gbc.readMem(0xcf47));
        // C1 02CB
        gbc.setState(0x219d, 0x97be, 0x2370, 0x4726, 0x3d1e, 0x5717, 0x1, 0x0);
        gbc.writeMem(0x219d, { 0xc1 });
        gbc.writeMem(0x97be, { 0x52, 0xf0 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x97c0, gbc.sp());
        EXPECT(0x219e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x52, gbc.readMem(0x97be));
        EXPECT(0xf0, gbc.readMem(0x97bf));
        // C1 02CD
        gbc.setState(0x4089, 0x7b84, 0x8650, 0xdfa, 0x940a, 0x93b9, 0x0, 0x1);
        gbc.writeMem(0x4089, { 0xc1 });
        gbc.writeMem(0x7b84, { 0xf3, 0x52 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x7b86, gbc.sp());
        EXPECT(0x408a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C1 02CE
        gbc.setState(0x161a, 0x4cb9, 0x76a0, 0xe29, 0x5ee0, 0x519d, 0x0, 0x0);
        gbc.writeMem(0x161a, { 0xc1 });
        gbc.writeMem(0x4cb9, { 0x5b, 0x72 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x4cbb, gbc.sp());
        EXPECT(0x161b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C1 02CF
        gbc.setState(0x8fcb, 0xc267, 0xc410, 0xb6d1, 0xdd53, 0xc2ae, 0x1, 0x0);
        gbc.writeMem(0x8fcb, { 0xc1 });
        gbc.writeMem(0xc267, { 0x45, 0x80 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0xc269, gbc.sp());
        EXPECT(0x8fcc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc1, gbc.readMem(0x8fcb));
        EXPECT(0x45, gbc.readMem(0xc267));
        EXPECT(0x80, gbc.readMem(0xc268));
        // C1 02D0
        gbc.setState(0xd822, 0x2059, 0xc300, 0xe2f1, 0xf622, 0x3ed, 0x1, 0x0);
        gbc.writeMem(0x2059, { 0x83, 0x59 });
        gbc.writeMem(0xd822, { 0xc1 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x205b, gbc.sp());
        EXPECT(0xd823, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc1, gbc.readMem(0xd822));
        // C1 02D1
        gbc.setState(0x7012, 0xd23a, 0xba10, 0x6dae, 0x6718, 0xbb3f, 0x0, 0x1);
        gbc.writeMem(0x7012, { 0xc1 });
        gbc.writeMem(0xd23a, { 0x71, 0xaf });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0xd23c, gbc.sp());
        EXPECT(0x7013, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x71, gbc.readMem(0xd23a));
        EXPECT(0xaf, gbc.readMem(0xd23b));
        // C1 02D2
        gbc.setState(0x7105, 0x60ce, 0x8470, 0xe71d, 0x3d05, 0x8dd6, 0x0, 0x0);
        gbc.writeMem(0x60ce, { 0x90, 0x3f });
        gbc.writeMem(0x7105, { 0xc1 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x60d0, gbc.sp());
        EXPECT(0x7106, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C1 02D3
        gbc.setState(0xcc09, 0xfb0c, 0xa920, 0x31c3, 0xe0ad, 0xe602, 0x1, 0x1);
        gbc.writeMem(0xcc09, { 0xc1 });
        gbc.writeMem(0xfb0c, { 0xf, 0xc1 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0xfb0e, gbc.sp());
        EXPECT(0xcc0a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc1, gbc.readMem(0xcc09));
        EXPECT(0xf, gbc.readMem(0xfb0c));
        EXPECT(0xc1, gbc.readMem(0xfb0d));
        // C1 02D4
        gbc.setState(0xcdfb, 0x4f36, 0xae60, 0x165, 0x55a3, 0x8804, 0x0, 0x1);
        gbc.writeMem(0x4f36, { 0x79, 0x3f });
        gbc.writeMem(0xcdfb, { 0xc1 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x4f38, gbc.sp());
        EXPECT(0xcdfc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc1, gbc.readMem(0xcdfb));
        // C1 02D5
        gbc.setState(0x255a, 0x4cc2, 0xa970, 0x9d, 0xbadb, 0x9062, 0x1, 0x0);
        gbc.writeMem(0x255a, { 0xc1 });
        gbc.writeMem(0x4cc2, { 0xa, 0x6 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x4cc4, gbc.sp());
        EXPECT(0x255b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C1 02D6
        gbc.setState(0x6334, 0xd1db, 0x5a30, 0xd122, 0xdde5, 0x35bf, 0x0, 0x1);
        gbc.writeMem(0x6334, { 0xc1 });
        gbc.writeMem(0xd1db, { 0xaf, 0x78 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0xd1dd, gbc.sp());
        EXPECT(0x6335, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xaf, gbc.readMem(0xd1db));
        EXPECT(0x78, gbc.readMem(0xd1dc));
        // C1 02D7
        gbc.setState(0xb477, 0x356, 0xd6b0, 0x987d, 0x162b, 0x1f1e, 0x1, 0x1);
        gbc.writeMem(0x356, { 0x93, 0x53 });
        gbc.writeMem(0xb477, { 0xc1 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x358, gbc.sp());
        EXPECT(0xb478, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc1, gbc.readMem(0xb477));
        // C1 02D8
        gbc.setState(0xc33f, 0xcc72, 0xef60, 0x59ae, 0x18b8, 0x9ab5, 0x0, 0x1);
        gbc.writeMem(0xc33f, { 0xc1 });
        gbc.writeMem(0xcc72, { 0xa2, 0xf4 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0xcc74, gbc.sp());
        EXPECT(0xc340, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc1, gbc.readMem(0xc33f));
        EXPECT(0xa2, gbc.readMem(0xcc72));
        EXPECT(0xf4, gbc.readMem(0xcc73));
        // C1 02D9
        gbc.setState(0x1704, 0x51e0, 0x28d0, 0xfb33, 0x9f56, 0x2687, 0x1, 0x1);
        gbc.writeMem(0x1704, { 0xc1 });
        gbc.writeMem(0x51e0, { 0xe4, 0x20 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x51e2, gbc.sp());
        EXPECT(0x1705, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C1 02DA
        gbc.setState(0x8456, 0xfc0e, 0xa3c0, 0xdc57, 0x402b, 0xdcc2, 0x1, 0x1);
        gbc.writeMem(0x8456, { 0xc1 });
        gbc.writeMem(0xfc0e, { 0x6c, 0x34 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0xfc10, gbc.sp());
        EXPECT(0x8457, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc1, gbc.readMem(0x8456));
        EXPECT(0x6c, gbc.readMem(0xfc0e));
        EXPECT(0x34, gbc.readMem(0xfc0f));
        // C1 02DB
        gbc.setState(0x2cf0, 0x3aac, 0xcd00, 0xbb1e, 0x5714, 0x2c2a, 0x0, 0x0);
        gbc.writeMem(0x2cf0, { 0xc1 });
        gbc.writeMem(0x3aac, { 0xe0, 0x37 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x3aae, gbc.sp());
        EXPECT(0x2cf1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C1 02DC
        gbc.setState(0xc6d1, 0x9967, 0xf6e0, 0x3fbe, 0x341a, 0xd3cc, 0x0, 0x0);
        gbc.writeMem(0x9967, { 0x5b, 0x20 });
        gbc.writeMem(0xc6d1, { 0xc1 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x9969, gbc.sp());
        EXPECT(0xc6d2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5b, gbc.readMem(0x9967));
        EXPECT(0x20, gbc.readMem(0x9968));
        EXPECT(0xc1, gbc.readMem(0xc6d1));
        // C1 02DD
        gbc.setState(0x989d, 0x436a, 0x7770, 0xee51, 0xcb1f, 0xb8e1, 0x1, 0x0);
        gbc.writeMem(0x436a, { 0x80, 0xf0 });
        gbc.writeMem(0x989d, { 0xc1 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0x436c, gbc.sp());
        EXPECT(0x989e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc1, gbc.readMem(0x989d));
        // C1 02DE
        gbc.setState(0x90c6, 0x17d2, 0x8590, 0x2b20, 0x4167, 0x927b, 0x0, 0x0);
        gbc.writeMem(0x17d2, { 0xa1, 0x39 });
        gbc.writeMem(0x90c6, { 0xc1 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x17d4, gbc.sp());
        EXPECT(0x90c7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc1, gbc.readMem(0x90c6));
        // C1 02DF
        gbc.setState(0xd57c, 0x55f9, 0x8e70, 0x3751, 0x8764, 0xe086, 0x1, 0x1);
        gbc.writeMem(0x55f9, { 0x9c, 0xa4 });
        gbc.writeMem(0xd57c, { 0xc1 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x55fb, gbc.sp());
        EXPECT(0xd57d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc1, gbc.readMem(0xd57c));
        // C1 02E0
        gbc.setState(0xa58e, 0xab3c, 0x1ff0, 0x6fd9, 0xbfba, 0x92d4, 0x1, 0x0);
        gbc.writeMem(0xa58e, { 0xc1 });
        gbc.writeMem(0xab3c, { 0xce, 0x33 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0xab3e, gbc.sp());
        EXPECT(0xa58f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc1, gbc.readMem(0xa58e));
        EXPECT(0xce, gbc.readMem(0xab3c));
        EXPECT(0x33, gbc.readMem(0xab3d));
        // C1 02E1
        gbc.setState(0x307a, 0x2d1b, 0xa660, 0xf57c, 0xb714, 0x5c8e, 0x1, 0x1);
        gbc.writeMem(0x2d1b, { 0xb3, 0xb6 });
        gbc.writeMem(0x307a, { 0xc1 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x2d1d, gbc.sp());
        EXPECT(0x307b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C1 02E2
        gbc.setState(0xd510, 0x6692, 0xc380, 0x239d, 0x2769, 0xa975, 0x1, 0x1);
        gbc.writeMem(0x6692, { 0x14, 0xee });
        gbc.writeMem(0xd510, { 0xc1 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x6694, gbc.sp());
        EXPECT(0xd511, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc1, gbc.readMem(0xd510));
        // C1 02E3
        gbc.setState(0xdeb2, 0x4ecf, 0xde50, 0xe28e, 0xa58b, 0xb8b0, 0x0, 0x0);
        gbc.writeMem(0x4ecf, { 0xf1, 0x25 });
        gbc.writeMem(0xdeb2, { 0xc1 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x4ed1, gbc.sp());
        EXPECT(0xdeb3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc1, gbc.readMem(0xdeb2));
        // C1 02E4
        gbc.setState(0x663, 0xd4d2, 0x7a70, 0x75f8, 0xdae5, 0x81a3, 0x1, 0x0);
        gbc.writeMem(0x663, { 0xc1 });
        gbc.writeMem(0xd4d2, { 0xc1, 0xdb });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0xd4d4, gbc.sp());
        EXPECT(0x664, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc1, gbc.readMem(0xd4d2));
        EXPECT(0xdb, gbc.readMem(0xd4d3));
        // C1 02E5
        gbc.setState(0x2a45, 0x7fdc, 0xd610, 0x62bd, 0x2ec2, 0x6387, 0x0, 0x1);
        gbc.writeMem(0x2a45, { 0xc1 });
        gbc.writeMem(0x7fdc, { 0xa, 0xdf });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x7fde, gbc.sp());
        EXPECT(0x2a46, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C1 02E6
        gbc.setState(0xe0b2, 0x5c9d, 0xef00, 0xdc1, 0x60f5, 0x6dfd, 0x0, 0x1);
        gbc.writeMem(0x5c9d, { 0xfa, 0x82 });
        gbc.writeMem(0xe0b2, { 0xc1 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x5c9f, gbc.sp());
        EXPECT(0xe0b3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc1, gbc.readMem(0xe0b2));
        // C1 02E7
        gbc.setState(0xe889, 0xc4af, 0xdcd0, 0x79e5, 0xd4a5, 0xeb92, 0x0, 0x0);
        gbc.writeMem(0xc4af, { 0x1, 0xa6 });
        gbc.writeMem(0xe889, { 0xc1 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0xc4b1, gbc.sp());
        EXPECT(0xe88a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1, gbc.readMem(0xc4af));
        EXPECT(0xa6, gbc.readMem(0xc4b0));
        EXPECT(0xc1, gbc.readMem(0xe889));
        // C1 02E8
        gbc.setState(0x9d87, 0x260d, 0xc870, 0x8352, 0xa0f, 0x46ca, 0x0, 0x0);
        gbc.writeMem(0x260d, { 0x65, 0x82 });
        gbc.writeMem(0x9d87, { 0xc1 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x260f, gbc.sp());
        EXPECT(0x9d88, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc1, gbc.readMem(0x9d87));
        // C1 02E9
        gbc.setState(0x1a3b, 0x1044, 0x81b0, 0x57bd, 0xa9aa, 0x103f, 0x0, 0x1);
        gbc.writeMem(0x1044, { 0xfc, 0x4b });
        gbc.writeMem(0x1a3b, { 0xc1 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0x1046, gbc.sp());
        EXPECT(0x1a3c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C1 02EA
        gbc.setState(0x5d6b, 0x31fa, 0x4e80, 0x770c, 0x78aa, 0x1544, 0x0, 0x0);
        gbc.writeMem(0x31fa, { 0x9, 0xe0 });
        gbc.writeMem(0x5d6b, { 0xc1 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x31fc, gbc.sp());
        EXPECT(0x5d6c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C1 02EB
        gbc.setState(0xb2ca, 0xa6a0, 0xd7c0, 0xcea7, 0x38a9, 0xeac1, 0x1, 0x1);
        gbc.writeMem(0xa6a0, { 0xf2, 0x9e });
        gbc.writeMem(0xb2ca, { 0xc1 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0xa6a2, gbc.sp());
        EXPECT(0xb2cb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf2, gbc.readMem(0xa6a0));
        EXPECT(0x9e, gbc.readMem(0xa6a1));
        EXPECT(0xc1, gbc.readMem(0xb2ca));
        // C1 02ED
        gbc.setState(0x1e2b, 0x4fc7, 0x88e0, 0x1478, 0x5d5e, 0x7fd2, 0x1, 0x1);
        gbc.writeMem(0x1e2b, { 0xc1 });
        gbc.writeMem(0x4fc7, { 0xfd, 0xd2 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x4fc9, gbc.sp());
        EXPECT(0x1e2c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C1 02EE
        gbc.setState(0x84f6, 0x8c80, 0x30c0, 0xee8f, 0xda5c, 0x59da, 0x0, 0x0);
        gbc.writeMem(0x84f6, { 0xc1 });
        gbc.writeMem(0x8c80, { 0xb9, 0x85 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x8c82, gbc.sp());
        EXPECT(0x84f7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc1, gbc.readMem(0x84f6));
        EXPECT(0xb9, gbc.readMem(0x8c80));
        EXPECT(0x85, gbc.readMem(0x8c81));
        // C1 02F0
        gbc.setState(0xda99, 0x858c, 0x76d0, 0x2466, 0x7673, 0x350e, 0x0, 0x0);
        gbc.writeMem(0x858c, { 0x1b, 0x2b });
        gbc.writeMem(0xda99, { 0xc1 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x858e, gbc.sp());
        EXPECT(0xda9a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1b, gbc.readMem(0x858c));
        EXPECT(0x2b, gbc.readMem(0x858d));
        EXPECT(0xc1, gbc.readMem(0xda99));
        // C1 02F1
        gbc.setState(0x23d5, 0x1dc5, 0x5ba0, 0x8a91, 0x84e1, 0xc9ee, 0x0, 0x1);
        gbc.writeMem(0x1dc5, { 0x84, 0xa9 });
        gbc.writeMem(0x23d5, { 0xc1 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x1dc7, gbc.sp());
        EXPECT(0x23d6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C1 02F2
        gbc.setState(0x92f, 0xf99e, 0x1550, 0x9841, 0x6fb8, 0x11a4, 0x1, 0x1);
        gbc.writeMem(0x92f, { 0xc1 });
        gbc.writeMem(0xf99e, { 0x5b, 0xf5 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0xf9a0, gbc.sp());
        EXPECT(0x930, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5b, gbc.readMem(0xf99e));
        EXPECT(0xf5, gbc.readMem(0xf99f));
        // C1 02F3
        gbc.setState(0x4d12, 0xae7b, 0xdaa0, 0xc2e6, 0xe5fc, 0x76bf, 0x0, 0x0);
        gbc.writeMem(0x4d12, { 0xc1 });
        gbc.writeMem(0xae7b, { 0xfa, 0x10 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0xae7d, gbc.sp());
        EXPECT(0x4d13, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xfa, gbc.readMem(0xae7b));
        EXPECT(0x10, gbc.readMem(0xae7c));
        // C1 02F4
        gbc.setState(0xc5a9, 0x2c4e, 0xd9c0, 0xcaf3, 0xd477, 0xec32, 0x1, 0x1);
        gbc.writeMem(0x2c4e, { 0x2a, 0xc9 });
        gbc.writeMem(0xc5a9, { 0xc1 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x2c50, gbc.sp());
        EXPECT(0xc5aa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc1, gbc.readMem(0xc5a9));
        // C1 02F5
        gbc.setState(0x7b2f, 0x8078, 0x4c50, 0x59a, 0x3cdc, 0x8b85, 0x1, 0x1);
        gbc.writeMem(0x7b2f, { 0xc1 });
        gbc.writeMem(0x8078, { 0xac, 0xf8 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x807a, gbc.sp());
        EXPECT(0x7b30, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xac, gbc.readMem(0x8078));
        EXPECT(0xf8, gbc.readMem(0x8079));
        // C1 02F6
        gbc.setState(0xac7d, 0x2c19, 0xa10, 0xdf15, 0xb574, 0x8569, 0x1, 0x1);
        gbc.writeMem(0x2c19, { 0x56, 0x33 });
        gbc.writeMem(0xac7d, { 0xc1 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0x2c1b, gbc.sp());
        EXPECT(0xac7e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc1, gbc.readMem(0xac7d));
        // C1 02F7
        gbc.setState(0x96b6, 0x31ed, 0xcbe0, 0x46a0, 0x25a7, 0xa938, 0x1, 0x0);
        gbc.writeMem(0x31ed, { 0x48, 0x8 });
        gbc.writeMem(0x96b6, { 0xc1 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x31ef, gbc.sp());
        EXPECT(0x96b7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc1, gbc.readMem(0x96b6));
        // C1 02F8
        gbc.setState(0xba8c, 0x335f, 0xa6d0, 0x623, 0x466c, 0x4d27, 0x0, 0x1);
        gbc.writeMem(0x335f, { 0xb6, 0xa3 });
        gbc.writeMem(0xba8c, { 0xc1 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x3361, gbc.sp());
        EXPECT(0xba8d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc1, gbc.readMem(0xba8c));
        // C1 02F9
        gbc.setState(0x1103, 0x55e2, 0xb700, 0x8194, 0x1658, 0x46b, 0x1, 0x1);
        gbc.writeMem(0x1103, { 0xc1 });
        gbc.writeMem(0x55e2, { 0x58, 0x55 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x55e4, gbc.sp());
        EXPECT(0x1104, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C1 02FA
        gbc.setState(0x186d, 0x2eb8, 0x4020, 0xb5b4, 0xd896, 0xe999, 0x0, 0x0);
        gbc.writeMem(0x186d, { 0xc1 });
        gbc.writeMem(0x2eb8, { 0x4a, 0x9e });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x2eba, gbc.sp());
        EXPECT(0x186e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C1 02FB
        gbc.setState(0xafed, 0x3862, 0x2830, 0xc47, 0x69e, 0xf91b, 0x1, 0x0);
        gbc.writeMem(0x3862, { 0xb, 0xad });
        gbc.writeMem(0xafed, { 0xc1 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x3864, gbc.sp());
        EXPECT(0xafee, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc1, gbc.readMem(0xafed));
        // C1 02FD
        gbc.setState(0xe6d0, 0x5c9f, 0x9f00, 0x52c8, 0xb423, 0x4452, 0x0, 0x0);
        gbc.writeMem(0x5c9f, { 0xa, 0x16 });
        gbc.writeMem(0xe6d0, { 0xc1 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x5ca1, gbc.sp());
        EXPECT(0xe6d1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc1, gbc.readMem(0xe6d0));
        // C1 02FE
        gbc.setState(0x1c7a, 0x307b, 0xd140, 0x9a8f, 0x5066, 0x28f3, 0x1, 0x0);
        gbc.writeMem(0x1c7a, { 0xc1 });
        gbc.writeMem(0x307b, { 0x17, 0x5a });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x307d, gbc.sp());
        EXPECT(0x1c7b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C1 02FF
        gbc.setState(0x7027, 0xa7e0, 0x6ff0, 0xf3c2, 0xe5d4, 0xa974, 0x0, 0x0);
        gbc.writeMem(0x7027, { 0xc1 });
        gbc.writeMem(0xa7e0, { 0xce, 0x20 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0xa7e2, gbc.sp());
        EXPECT(0x7028, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xce, gbc.readMem(0xa7e0));
        EXPECT(0x20, gbc.readMem(0xa7e1));
        // C1 0301
        gbc.setState(0x743, 0x21fa, 0x8290, 0x6fa4, 0x78b8, 0x69bc, 0x1, 0x0);
        gbc.writeMem(0x743, { 0xc1 });
        gbc.writeMem(0x21fa, { 0x53, 0xa7 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x21fc, gbc.sp());
        EXPECT(0x744, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C1 0303
        gbc.setState(0x82cc, 0x8055, 0x6d40, 0xdd27, 0xb63d, 0x6b98, 0x0, 0x0);
        gbc.writeMem(0x8055, { 0x45, 0xf });
        gbc.writeMem(0x82cc, { 0xc1 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x8057, gbc.sp());
        EXPECT(0x82cd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x45, gbc.readMem(0x8055));
        EXPECT(0xf, gbc.readMem(0x8056));
        EXPECT(0xc1, gbc.readMem(0x82cc));
        // C1 0304
        gbc.setState(0xada3, 0x6903, 0xcd20, 0xdc02, 0xf47c, 0xe691, 0x1, 0x0);
        gbc.writeMem(0x6903, { 0x58, 0x74 });
        gbc.writeMem(0xada3, { 0xc1 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x6905, gbc.sp());
        EXPECT(0xada4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc1, gbc.readMem(0xada3));
        // C1 0305
        gbc.setState(0x4503, 0x2f60, 0x4c90, 0x9ee1, 0x67f4, 0xee37, 0x1, 0x0);
        gbc.writeMem(0x2f60, { 0xe7, 0xe3 });
        gbc.writeMem(0x4503, { 0xc1 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x2f62, gbc.sp());
        EXPECT(0x4504, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C1 0306
        gbc.setState(0xc01b, 0xb5ba, 0xa7b0, 0x3155, 0x14a2, 0xb0dc, 0x0, 0x0);
        gbc.writeMem(0xb5ba, { 0xb9, 0x2e });
        gbc.writeMem(0xc01b, { 0xc1 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0xb5bc, gbc.sp());
        EXPECT(0xc01c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb9, gbc.readMem(0xb5ba));
        EXPECT(0x2e, gbc.readMem(0xb5bb));
        EXPECT(0xc1, gbc.readMem(0xc01b));
        // C1 0307
        gbc.setState(0x98, 0xe802, 0xf290, 0x2a9c, 0x6b80, 0xd4b5, 0x0, 0x0);
        gbc.writeMem(0x98, { 0xc1 });
        gbc.writeMem(0xe802, { 0xc8, 0xde });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0xe804, gbc.sp());
        EXPECT(0x99, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc8, gbc.readMem(0xe802));
        EXPECT(0xde, gbc.readMem(0xe803));
        // C1 0308
        gbc.setState(0x5e1f, 0x866e, 0x10c0, 0x2ae6, 0x32e2, 0xe785, 0x0, 0x1);
        gbc.writeMem(0x5e1f, { 0xc1 });
        gbc.writeMem(0x866e, { 0xdf, 0x8c });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x8670, gbc.sp());
        EXPECT(0x5e20, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xdf, gbc.readMem(0x866e));
        EXPECT(0x8c, gbc.readMem(0x866f));
        // C1 0309
        gbc.setState(0xe78f, 0x6d99, 0x2f20, 0x9272, 0x3a39, 0x9b12, 0x0, 0x1);
        gbc.writeMem(0x6d99, { 0x4d, 0x12 });
        gbc.writeMem(0xe78f, { 0xc1 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x6d9b, gbc.sp());
        EXPECT(0xe790, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc1, gbc.readMem(0xe78f));
        // C1 030A
        gbc.setState(0x8b7c, 0xdf46, 0x9ad0, 0x5414, 0x76c0, 0xf2f9, 0x1, 0x0);
        gbc.writeMem(0x8b7c, { 0xc1 });
        gbc.writeMem(0xdf46, { 0xa1, 0x54 });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0xdf48, gbc.sp());
        EXPECT(0x8b7d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc1, gbc.readMem(0x8b7c));
        EXPECT(0xa1, gbc.readMem(0xdf46));
        EXPECT(0x54, gbc.readMem(0xdf47));
        // C1 030B
        gbc.setState(0x9878, 0x7b23, 0x70f0, 0x11ab, 0xc68c, 0xbd35, 0x1, 0x0);
        gbc.writeMem(0x7b23, { 0xdc, 0xdf });
        gbc.writeMem(0x9878, { 0xc1 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x7b25, gbc.sp());
        EXPECT(0x9879, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc1, gbc.readMem(0x9878));
        // C1 030C
        gbc.setState(0x3fc5, 0xa9d4, 0xb20, 0xe381, 0xf3d8, 0x3fc4, 0x1, 0x1);
        gbc.writeMem(0x3fc5, { 0xc1 });
        gbc.writeMem(0xa9d4, { 0x69, 0x14 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0xa9d6, gbc.sp());
        EXPECT(0x3fc6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x69, gbc.readMem(0xa9d4));
        EXPECT(0x14, gbc.readMem(0xa9d5));
        // C1 030D
        gbc.setState(0x4bf4, 0x146d, 0xfdc0, 0x7f56, 0x643f, 0xf1a4, 0x0, 0x1);
        gbc.writeMem(0x146d, { 0x16, 0x1e });
        gbc.writeMem(0x4bf4, { 0xc1 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x146f, gbc.sp());
        EXPECT(0x4bf5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C1 030E
        gbc.setState(0x1036, 0x5c7, 0x4a60, 0x8806, 0x154f, 0x261f, 0x1, 0x0);
        gbc.writeMem(0x5c7, { 0xda, 0x7d });
        gbc.writeMem(0x1036, { 0xc1 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x5c9, gbc.sp());
        EXPECT(0x1037, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C1 030F
        gbc.setState(0x471a, 0x9f94, 0xed0, 0xa243, 0xa6e8, 0x440d, 0x1, 0x0);
        gbc.writeMem(0x471a, { 0xc1 });
        gbc.writeMem(0x9f94, { 0xa6, 0xd1 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x9f96, gbc.sp());
        EXPECT(0x471b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa6, gbc.readMem(0x9f94));
        EXPECT(0xd1, gbc.readMem(0x9f95));
        // C1 0310
        gbc.setState(0xe3d4, 0xe78d, 0x27a0, 0xaea0, 0xff41, 0xd9ef, 0x1, 0x0);
        gbc.writeMem(0xe3d4, { 0xc1 });
        gbc.writeMem(0xe78d, { 0xe0, 0x71 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0xe78f, gbc.sp());
        EXPECT(0xe3d5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc1, gbc.readMem(0xe3d4));
        EXPECT(0xe0, gbc.readMem(0xe78d));
        EXPECT(0x71, gbc.readMem(0xe78e));
        // C1 0311
        gbc.setState(0x612f, 0xdece, 0x75c0, 0xf038, 0x7806, 0xbca, 0x0, 0x1);
        gbc.writeMem(0x612f, { 0xc1 });
        gbc.writeMem(0xdece, { 0x13, 0x8e });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0xded0, gbc.sp());
        EXPECT(0x6130, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x13, gbc.readMem(0xdece));
        EXPECT(0x8e, gbc.readMem(0xdecf));
        // C1 0313
        gbc.setState(0xdc7, 0xfdda, 0x7310, 0x7fcb, 0x77a3, 0xffad, 0x0, 0x0);
        gbc.writeMem(0xdc7, { 0xc1 });
        gbc.writeMem(0xfdda, { 0xd3, 0x85 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0xfddc, gbc.sp());
        EXPECT(0xdc8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd3, gbc.readMem(0xfdda));
        EXPECT(0x85, gbc.readMem(0xfddb));
        // C1 0314
        gbc.setState(0x7d4c, 0x3580, 0x9220, 0xde9f, 0x123e, 0x433e, 0x0, 0x0);
        gbc.writeMem(0x3580, { 0x3c, 0xbf });
        gbc.writeMem(0x7d4c, { 0xc1 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x3582, gbc.sp());
        EXPECT(0x7d4d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C1 0315
        gbc.setState(0x42d9, 0xda2d, 0x70a0, 0x42c8, 0x6668, 0x7ee, 0x1, 0x0);
        gbc.writeMem(0x42d9, { 0xc1 });
        gbc.writeMem(0xda2d, { 0xd6, 0x8 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0xda2f, gbc.sp());
        EXPECT(0x42da, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd6, gbc.readMem(0xda2d));
        EXPECT(0x8, gbc.readMem(0xda2e));
        // C1 0316
        gbc.setState(0x7efe, 0xc4ed, 0x9300, 0x42aa, 0xe42a, 0x9ff6, 0x0, 0x1);
        gbc.writeMem(0x7efe, { 0xc1 });
        gbc.writeMem(0xc4ed, { 0xdb, 0x71 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0xc4ef, gbc.sp());
        EXPECT(0x7eff, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xdb, gbc.readMem(0xc4ed));
        EXPECT(0x71, gbc.readMem(0xc4ee));
        // C1 0317
        gbc.setState(0x36a1, 0x4e81, 0x6ac0, 0x74c0, 0x535d, 0xd53d, 0x1, 0x0);
        gbc.writeMem(0x36a1, { 0xc1 });
        gbc.writeMem(0x4e81, { 0xf2, 0x8c });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x4e83, gbc.sp());
        EXPECT(0x36a2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C1 0318
        gbc.setState(0xd97b, 0xe6c6, 0x90, 0x1f1d, 0x3acd, 0xb33f, 0x1, 0x1);
        gbc.writeMem(0xd97b, { 0xc1 });
        gbc.writeMem(0xe6c6, { 0x5, 0xaa });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0xe6c8, gbc.sp());
        EXPECT(0xd97c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc1, gbc.readMem(0xd97b));
        EXPECT(0x5, gbc.readMem(0xe6c6));
        EXPECT(0xaa, gbc.readMem(0xe6c7));
        // C1 0319
        gbc.setState(0x662d, 0x8583, 0x6c60, 0x4513, 0xfcbd, 0xd49d, 0x0, 0x0);
        gbc.writeMem(0x662d, { 0xc1 });
        gbc.writeMem(0x8583, { 0x50, 0xd4 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x8585, gbc.sp());
        EXPECT(0x662e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x50, gbc.readMem(0x8583));
        EXPECT(0xd4, gbc.readMem(0x8584));
        // C1 031A
        gbc.setState(0x3be6, 0x46b7, 0xdb70, 0x7576, 0x4050, 0x3fe2, 0x0, 0x0);
        gbc.writeMem(0x3be6, { 0xc1 });
        gbc.writeMem(0x46b7, { 0x54, 0x9b });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x46b9, gbc.sp());
        EXPECT(0x3be7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C1 031B
        gbc.setState(0x94e4, 0xdd33, 0xa750, 0xd79a, 0xd261, 0xa022, 0x1, 0x0);
        gbc.writeMem(0x94e4, { 0xc1 });
        gbc.writeMem(0xdd33, { 0x33, 0x37 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0xdd35, gbc.sp());
        EXPECT(0x94e5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc1, gbc.readMem(0x94e4));
        EXPECT(0x33, gbc.readMem(0xdd33));
        EXPECT(0x37, gbc.readMem(0xdd34));
        // C1 031D
        gbc.setState(0x4341, 0x486c, 0x9570, 0xe8f4, 0xa3c1, 0x1288, 0x0, 0x1);
        gbc.writeMem(0x4341, { 0xc1 });
        gbc.writeMem(0x486c, { 0xf0, 0xaa });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x486e, gbc.sp());
        EXPECT(0x4342, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C1 031E
        gbc.setState(0xd716, 0xcafb, 0x15e0, 0xbe66, 0xf6fa, 0x7bcb, 0x0, 0x1);
        gbc.writeMem(0xcafb, { 0x2e, 0x81 });
        gbc.writeMem(0xd716, { 0xc1 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0xcafd, gbc.sp());
        EXPECT(0xd717, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2e, gbc.readMem(0xcafb));
        EXPECT(0x81, gbc.readMem(0xcafc));
        EXPECT(0xc1, gbc.readMem(0xd716));
        // C1 031F
        gbc.setState(0x1523, 0xbcd8, 0xa7e0, 0x2b04, 0x2684, 0xc099, 0x1, 0x1);
        gbc.writeMem(0x1523, { 0xc1 });
        gbc.writeMem(0xbcd8, { 0x93, 0x82 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0xbcda, gbc.sp());
        EXPECT(0x1524, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x93, gbc.readMem(0xbcd8));
        EXPECT(0x82, gbc.readMem(0xbcd9));
        // C1 0320
        gbc.setState(0xc909, 0x311a, 0x5660, 0x13de, 0xf403, 0x6608, 0x1, 0x0);
        gbc.writeMem(0x311a, { 0x57, 0x83 });
        gbc.writeMem(0xc909, { 0xc1 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x311c, gbc.sp());
        EXPECT(0xc90a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc1, gbc.readMem(0xc909));
        // C1 0321
        gbc.setState(0x21f0, 0x4f16, 0x65c0, 0x7fa3, 0x6dd7, 0x82d1, 0x0, 0x1);
        gbc.writeMem(0x21f0, { 0xc1 });
        gbc.writeMem(0x4f16, { 0xc8, 0x64 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x4f18, gbc.sp());
        EXPECT(0x21f1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C1 0322
        gbc.setState(0x44a9, 0x2d7c, 0xdd0, 0xbae8, 0x296c, 0x313d, 0x0, 0x1);
        gbc.writeMem(0x2d7c, { 0x8d, 0x48 });
        gbc.writeMem(0x44a9, { 0xc1 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x2d7e, gbc.sp());
        EXPECT(0x44aa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C1 0323
        gbc.setState(0xa4bf, 0x7b2e, 0x33c0, 0x8546, 0x9877, 0x3c6, 0x0, 0x1);
        gbc.writeMem(0x7b2e, { 0xd9, 0xf2 });
        gbc.writeMem(0xa4bf, { 0xc1 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x7b30, gbc.sp());
        EXPECT(0xa4c0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc1, gbc.readMem(0xa4bf));
        // C1 0324
        gbc.setState(0x2bfc, 0xacbd, 0x8630, 0xc1b2, 0x9782, 0x3135, 0x1, 0x0);
        gbc.writeMem(0x2bfc, { 0xc1 });
        gbc.writeMem(0xacbd, { 0xfa, 0xf6 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0xacbf, gbc.sp());
        EXPECT(0x2bfd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xfa, gbc.readMem(0xacbd));
        EXPECT(0xf6, gbc.readMem(0xacbe));
        // C1 0325
        gbc.setState(0xc3be, 0x695, 0x72a0, 0x8d1a, 0x9180, 0x394a, 0x1, 0x1);
        gbc.writeMem(0x695, { 0x39, 0x68 });
        gbc.writeMem(0xc3be, { 0xc1 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x697, gbc.sp());
        EXPECT(0xc3bf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc1, gbc.readMem(0xc3be));
        // C1 0326
        gbc.setState(0x3683, 0xea92, 0x95f0, 0xd84b, 0x5dc0, 0x63d1, 0x0, 0x1);
        gbc.writeMem(0x3683, { 0xc1 });
        gbc.writeMem(0xea92, { 0xdb, 0x29 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0xea94, gbc.sp());
        EXPECT(0x3684, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xdb, gbc.readMem(0xea92));
        EXPECT(0x29, gbc.readMem(0xea93));
        // C1 0327
        gbc.setState(0xa671, 0xeeec, 0xd3d0, 0xc746, 0xedd0, 0x8557, 0x0, 0x1);
        gbc.writeMem(0xa671, { 0xc1 });
        gbc.writeMem(0xeeec, { 0xcf, 0x7f });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0xeeee, gbc.sp());
        EXPECT(0xa672, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc1, gbc.readMem(0xa671));
        EXPECT(0xcf, gbc.readMem(0xeeec));
        EXPECT(0x7f, gbc.readMem(0xeeed));
        // C1 0328
        gbc.setState(0xa3bf, 0xea96, 0x3890, 0xad1c, 0x5fd1, 0xcce1, 0x1, 0x1);
        gbc.writeMem(0xa3bf, { 0xc1 });
        gbc.writeMem(0xea96, { 0x2e, 0x3b });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0xea98, gbc.sp());
        EXPECT(0xa3c0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc1, gbc.readMem(0xa3bf));
        EXPECT(0x2e, gbc.readMem(0xea96));
        EXPECT(0x3b, gbc.readMem(0xea97));
        // C1 0329
        gbc.setState(0xb77b, 0x5f55, 0x2330, 0xee7, 0x35f7, 0x4168, 0x0, 0x1);
        gbc.writeMem(0x5f55, { 0x34, 0x7d });
        gbc.writeMem(0xb77b, { 0xc1 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x5f57, gbc.sp());
        EXPECT(0xb77c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc1, gbc.readMem(0xb77b));
        // C1 032A
        gbc.setState(0x478d, 0x54e0, 0x3a60, 0x2855, 0x44ea, 0x3130, 0x0, 0x1);
        gbc.writeMem(0x478d, { 0xc1 });
        gbc.writeMem(0x54e0, { 0xef, 0xab });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x54e2, gbc.sp());
        EXPECT(0x478e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C1 032B
        gbc.setState(0x14ac, 0x2150, 0x5620, 0xa311, 0xc14b, 0xfb03, 0x0, 0x0);
        gbc.writeMem(0x14ac, { 0xc1 });
        gbc.writeMem(0x2150, { 0x71, 0x44 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x2152, gbc.sp());
        EXPECT(0x14ad, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C1 032D
        gbc.setState(0xd339, 0x17fb, 0x5790, 0x1c0, 0x11db, 0x3b3a, 0x0, 0x0);
        gbc.writeMem(0x17fb, { 0x8e, 0x48 });
        gbc.writeMem(0xd339, { 0xc1 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x17fd, gbc.sp());
        EXPECT(0xd33a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc1, gbc.readMem(0xd339));
        // C1 032E
        gbc.setState(0x879d, 0xa6b0, 0xb820, 0xe499, 0x1011, 0x4d40, 0x0, 0x1);
        gbc.writeMem(0x879d, { 0xc1 });
        gbc.writeMem(0xa6b0, { 0xb2, 0x15 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0xa6b2, gbc.sp());
        EXPECT(0x879e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc1, gbc.readMem(0x879d));
        EXPECT(0xb2, gbc.readMem(0xa6b0));
        EXPECT(0x15, gbc.readMem(0xa6b1));
        // C1 032F
        gbc.setState(0x26b9, 0xb5cf, 0x2a90, 0xf995, 0x2a52, 0x7c8, 0x0, 0x1);
        gbc.writeMem(0x26b9, { 0xc1 });
        gbc.writeMem(0xb5cf, { 0xc7, 0xe6 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0xb5d1, gbc.sp());
        EXPECT(0x26ba, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc7, gbc.readMem(0xb5cf));
        EXPECT(0xe6, gbc.readMem(0xb5d0));
        // C1 0330
        gbc.setState(0xe24f, 0x2eec, 0x8bd0, 0xde06, 0x4e04, 0x838d, 0x0, 0x0);
        gbc.writeMem(0x2eec, { 0xa9, 0x85 });
        gbc.writeMem(0xe24f, { 0xc1 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x2eee, gbc.sp());
        EXPECT(0xe250, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc1, gbc.readMem(0xe24f));
        // C1 0331
        gbc.setState(0x96cd, 0x2040, 0xba10, 0x182d, 0x5f74, 0xd912, 0x1, 0x0);
        gbc.writeMem(0x2040, { 0x9c, 0x4e });
        gbc.writeMem(0x96cd, { 0xc1 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x2042, gbc.sp());
        EXPECT(0x96ce, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc1, gbc.readMem(0x96cd));
        // C1 0332
        gbc.setState(0xd4d8, 0x520c, 0xfe50, 0x9510, 0x576b, 0x1cee, 0x1, 0x1);
        gbc.writeMem(0x520c, { 0xf9, 0x24 });
        gbc.writeMem(0xd4d8, { 0xc1 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x520e, gbc.sp());
        EXPECT(0xd4d9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc1, gbc.readMem(0xd4d8));
        // C1 0333
        gbc.setState(0x94aa, 0x4750, 0xdce0, 0x4211, 0xe889, 0x1650, 0x0, 0x0);
        gbc.writeMem(0x4750, { 0x3f, 0x3 });
        gbc.writeMem(0x94aa, { 0xc1 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x4752, gbc.sp());
        EXPECT(0x94ab, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc1, gbc.readMem(0x94aa));
        // C1 0334
        gbc.setState(0x65b7, 0x5429, 0x8c30, 0x928e, 0x5a3, 0x849f, 0x1, 0x0);
        gbc.writeMem(0x5429, { 0xe2, 0xd });
        gbc.writeMem(0x65b7, { 0xc1 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x542b, gbc.sp());
        EXPECT(0x65b8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C1 0335
        gbc.setState(0xc703, 0x1909, 0xd5d0, 0xa4f6, 0xd0bf, 0x8863, 0x0, 0x0);
        gbc.writeMem(0x1909, { 0x6a, 0x6e });
        gbc.writeMem(0xc703, { 0xc1 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x190b, gbc.sp());
        EXPECT(0xc704, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc1, gbc.readMem(0xc703));
        // C1 0336
        gbc.setState(0xd72, 0x51e, 0x27f0, 0xa60e, 0x3344, 0xbf9a, 0x1, 0x1);
        gbc.writeMem(0x51e, { 0xde, 0xa2 });
        gbc.writeMem(0xd72, { 0xc1 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x520, gbc.sp());
        EXPECT(0xd73, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C1 0337
        gbc.setState(0xb18a, 0xf447, 0xeba0, 0xb1ee, 0xc659, 0x85a7, 0x0, 0x1);
        gbc.writeMem(0xb18a, { 0xc1 });
        gbc.writeMem(0xf447, { 0x98, 0x5a });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0xf449, gbc.sp());
        EXPECT(0xb18b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc1, gbc.readMem(0xb18a));
        EXPECT(0x98, gbc.readMem(0xf447));
        EXPECT(0x5a, gbc.readMem(0xf448));
        // C1 0338
        gbc.setState(0x8a14, 0x730, 0x8640, 0xabac, 0xcf4b, 0x2edb, 0x0, 0x1);
        gbc.writeMem(0x730, { 0xeb, 0x26 });
        gbc.writeMem(0x8a14, { 0xc1 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x732, gbc.sp());
        EXPECT(0x8a15, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc1, gbc.readMem(0x8a14));
        // C1 0339
        gbc.setState(0x4893, 0x9ec4, 0xaf0, 0x17bd, 0xa660, 0xba17, 0x0, 0x1);
        gbc.writeMem(0x4893, { 0xc1 });
        gbc.writeMem(0x9ec4, { 0x82, 0xb8 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x9ec6, gbc.sp());
        EXPECT(0x4894, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x82, gbc.readMem(0x9ec4));
        EXPECT(0xb8, gbc.readMem(0x9ec5));
        // C1 033A
        gbc.setState(0xeacd, 0x1435, 0x1c60, 0x7d64, 0xc99a, 0x655a, 0x0, 0x1);
        gbc.writeMem(0x1435, { 0x3d, 0xb6 });
        gbc.writeMem(0xeacd, { 0xc1 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x1437, gbc.sp());
        EXPECT(0xeace, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc1, gbc.readMem(0xeacd));
        // C1 033B
        gbc.setState(0x4dc5, 0xb75c, 0x6750, 0x2bd2, 0xf100, 0xcbbd, 0x0, 0x0);
        gbc.writeMem(0x4dc5, { 0xc1 });
        gbc.writeMem(0xb75c, { 0xa0, 0xed });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0xb75e, gbc.sp());
        EXPECT(0x4dc6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa0, gbc.readMem(0xb75c));
        EXPECT(0xed, gbc.readMem(0xb75d));
        // C1 033C
        gbc.setState(0x7ff6, 0x6bcc, 0x9c30, 0x8a45, 0x53e8, 0x20f, 0x1, 0x1);
        gbc.writeMem(0x6bcc, { 0x3, 0x54 });
        gbc.writeMem(0x7ff6, { 0xc1 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x6bce, gbc.sp());
        EXPECT(0x7ff7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C1 033D
        gbc.setState(0x4f9d, 0xb0b8, 0x21c0, 0x376, 0xe3ef, 0xb2ad, 0x0, 0x0);
        gbc.writeMem(0x4f9d, { 0xc1 });
        gbc.writeMem(0xb0b8, { 0x25, 0x97 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0xb0ba, gbc.sp());
        EXPECT(0x4f9e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x25, gbc.readMem(0xb0b8));
        EXPECT(0x97, gbc.readMem(0xb0b9));
        // C1 033E
        gbc.setState(0x641, 0xfd70, 0x6c60, 0x281a, 0xb5e7, 0x59d0, 0x0, 0x0);
        gbc.writeMem(0x641, { 0xc1 });
        gbc.writeMem(0xfd70, { 0x22, 0x3b });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0xfd72, gbc.sp());
        EXPECT(0x642, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x22, gbc.readMem(0xfd70));
        EXPECT(0x3b, gbc.readMem(0xfd71));
        // C1 033F
        gbc.setState(0xd019, 0xe55d, 0x9990, 0xcc10, 0x94ed, 0xb5fc, 0x0, 0x1);
        gbc.writeMem(0xd019, { 0xc1 });
        gbc.writeMem(0xe55d, { 0x84, 0x14 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0xe55f, gbc.sp());
        EXPECT(0xd01a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc1, gbc.readMem(0xd019));
        EXPECT(0x84, gbc.readMem(0xe55d));
        EXPECT(0x14, gbc.readMem(0xe55e));
        // C1 0342
        gbc.setState(0xd1a8, 0x43fd, 0x6260, 0x4ff6, 0x1812, 0x246b, 0x1, 0x0);
        gbc.writeMem(0x43fd, { 0x7c, 0x2e });
        gbc.writeMem(0xd1a8, { 0xc1 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x43ff, gbc.sp());
        EXPECT(0xd1a9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc1, gbc.readMem(0xd1a8));
        // C1 0343
        gbc.setState(0xb482, 0x603a, 0xe000, 0xd6a1, 0xe523, 0x297e, 0x1, 0x0);
        gbc.writeMem(0x603a, { 0xe0, 0x8f });
        gbc.writeMem(0xb482, { 0xc1 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0x603c, gbc.sp());
        EXPECT(0xb483, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc1, gbc.readMem(0xb482));
        // C1 0344
        gbc.setState(0xd7f5, 0x6ebc, 0xfed0, 0x9753, 0xf040, 0xcb44, 0x0, 0x1);
        gbc.writeMem(0x6ebc, { 0xa0, 0xed });
        gbc.writeMem(0xd7f5, { 0xc1 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x6ebe, gbc.sp());
        EXPECT(0xd7f6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc1, gbc.readMem(0xd7f5));
        // C1 0345
        gbc.setState(0x74a4, 0xf95e, 0x1810, 0xc6be, 0x29a, 0xa815, 0x1, 0x0);
        gbc.writeMem(0x74a4, { 0xc1 });
        gbc.writeMem(0xf95e, { 0x14, 0xc2 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0xf960, gbc.sp());
        EXPECT(0x74a5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x14, gbc.readMem(0xf95e));
        EXPECT(0xc2, gbc.readMem(0xf95f));
        // C1 0346
        gbc.setState(0x9924, 0x7ae, 0x3bb0, 0xcf20, 0xa3b6, 0x6395, 0x0, 0x0);
        gbc.writeMem(0x7ae, { 0x2f, 0x1c });
        gbc.writeMem(0x9924, { 0xc1 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x7b0, gbc.sp());
        EXPECT(0x9925, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc1, gbc.readMem(0x9924));
        // C1 0347
        gbc.setState(0x6764, 0x4333, 0xc350, 0x7cb3, 0x121e, 0xd448, 0x0, 0x1);
        gbc.writeMem(0x4333, { 0x55, 0x17 });
        gbc.writeMem(0x6764, { 0xc1 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0x4335, gbc.sp());
        EXPECT(0x6765, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C1 0348
        gbc.setState(0xa3b0, 0x8aca, 0x7d90, 0x2a05, 0x21fb, 0xf423, 0x0, 0x0);
        gbc.writeMem(0x8aca, { 0x82, 0x92 });
        gbc.writeMem(0xa3b0, { 0xc1 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x8acc, gbc.sp());
        EXPECT(0xa3b1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x82, gbc.readMem(0x8aca));
        EXPECT(0x92, gbc.readMem(0x8acb));
        EXPECT(0xc1, gbc.readMem(0xa3b0));
        // C1 0349
        gbc.setState(0xec03, 0x11b3, 0xbbb0, 0x3ea8, 0x7930, 0x4200, 0x1, 0x1);
        gbc.writeMem(0x11b3, { 0x2d, 0x1c });
        gbc.writeMem(0xec03, { 0xc1 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x11b5, gbc.sp());
        EXPECT(0xec04, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc1, gbc.readMem(0xec03));
        // C1 034A
        gbc.setState(0x7d66, 0x63ff, 0xb3a0, 0xb1d1, 0x506f, 0x578e, 0x0, 0x1);
        gbc.writeMem(0x63ff, { 0x4f, 0x91 });
        gbc.writeMem(0x7d66, { 0xc1 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x6401, gbc.sp());
        EXPECT(0x7d67, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C1 034B
        gbc.setState(0x47fa, 0x7c17, 0x1580, 0x38d4, 0x72a9, 0x780, 0x0, 0x1);
        gbc.writeMem(0x47fa, { 0xc1 });
        gbc.writeMem(0x7c17, { 0xdc, 0xdd });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x7c19, gbc.sp());
        EXPECT(0x47fb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C1 034C
        gbc.setState(0x6f05, 0xba92, 0x4670, 0x1ad2, 0xd493, 0x9749, 0x1, 0x0);
        gbc.writeMem(0x6f05, { 0xc1 });
        gbc.writeMem(0xba92, { 0xbc, 0x87 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0xba94, gbc.sp());
        EXPECT(0x6f06, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbc, gbc.readMem(0xba92));
        EXPECT(0x87, gbc.readMem(0xba93));
        // C1 034D
        gbc.setState(0xc2c2, 0x58fe, 0x100, 0x3eb8, 0x1aa5, 0x7b3e, 0x1, 0x0);
        gbc.writeMem(0x58fe, { 0xc4, 0x7c });
        gbc.writeMem(0xc2c2, { 0xc1 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x5900, gbc.sp());
        EXPECT(0xc2c3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc1, gbc.readMem(0xc2c2));
        // C1 034E
        gbc.setState(0x6c08, 0xb248, 0x4f00, 0x8c7, 0x7355, 0xd21e, 0x1, 0x1);
        gbc.writeMem(0x6c08, { 0xc1 });
        gbc.writeMem(0xb248, { 0xb2, 0x3e });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0xb24a, gbc.sp());
        EXPECT(0x6c09, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb2, gbc.readMem(0xb248));
        EXPECT(0x3e, gbc.readMem(0xb249));
        // C1 034F
        gbc.setState(0xd55b, 0x3535, 0x2fc0, 0x30ba, 0xbbc4, 0x5127, 0x1, 0x0);
        gbc.writeMem(0x3535, { 0x73, 0xea });
        gbc.writeMem(0xd55b, { 0xc1 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x3537, gbc.sp());
        EXPECT(0xd55c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc1, gbc.readMem(0xd55b));
        // C1 0350
        gbc.setState(0xbcf8, 0x98f0, 0xaed0, 0x3eab, 0xb756, 0xf84f, 0x1, 0x1);
        gbc.writeMem(0x98f0, { 0xe6, 0x61 });
        gbc.writeMem(0xbcf8, { 0xc1 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x98f2, gbc.sp());
        EXPECT(0xbcf9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe6, gbc.readMem(0x98f0));
        EXPECT(0x61, gbc.readMem(0x98f1));
        EXPECT(0xc1, gbc.readMem(0xbcf8));
        // C1 0351
        gbc.setState(0x8602, 0x7ff6, 0x2b50, 0x8c4c, 0x833e, 0x8438, 0x1, 0x0);
        gbc.writeMem(0x7ff6, { 0xd5, 0x38 });
        gbc.writeMem(0x8602, { 0xc1 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x7ff8, gbc.sp());
        EXPECT(0x8603, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc1, gbc.readMem(0x8602));
        // C1 0352
        gbc.setState(0x5eda, 0x141, 0x9bb0, 0xda24, 0x456, 0x4b9f, 0x1, 0x1);
        gbc.writeMem(0x141, { 0xb0, 0x19 });
        gbc.writeMem(0x5eda, { 0xc1 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x143, gbc.sp());
        EXPECT(0x5edb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C1 0353
        gbc.setState(0x4669, 0xf246, 0x1d20, 0xc212, 0x3e4, 0xb791, 0x1, 0x0);
        gbc.writeMem(0x4669, { 0xc1 });
        gbc.writeMem(0xf246, { 0xac, 0xbe });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0xf248, gbc.sp());
        EXPECT(0x466a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xac, gbc.readMem(0xf246));
        EXPECT(0xbe, gbc.readMem(0xf247));
        // C1 0354
        gbc.setState(0x6c45, 0xb4b7, 0x43e0, 0x1998, 0x140f, 0x6a6e, 0x0, 0x0);
        gbc.writeMem(0x6c45, { 0xc1 });
        gbc.writeMem(0xb4b7, { 0x5d, 0x5d });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0xb4b9, gbc.sp());
        EXPECT(0x6c46, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5d, gbc.readMem(0xb4b7));
        EXPECT(0x5d, gbc.readMem(0xb4b8));
        // C1 0355
        gbc.setState(0x706, 0xd3ba, 0x1160, 0x2f93, 0x7256, 0x8c6f, 0x0, 0x0);
        gbc.writeMem(0x706, { 0xc1 });
        gbc.writeMem(0xd3ba, { 0x5c, 0xe1 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0xd3bc, gbc.sp());
        EXPECT(0x707, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5c, gbc.readMem(0xd3ba));
        EXPECT(0xe1, gbc.readMem(0xd3bb));
        // C1 0356
        gbc.setState(0x274d, 0x7718, 0xc650, 0x380c, 0x7029, 0x94af, 0x0, 0x1);
        gbc.writeMem(0x274d, { 0xc1 });
        gbc.writeMem(0x7718, { 0x2b, 0x61 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x771a, gbc.sp());
        EXPECT(0x274e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C1 0357
        gbc.setState(0x551a, 0xd6df, 0x2140, 0xf18b, 0xa9b2, 0xb84b, 0x1, 0x1);
        gbc.writeMem(0x551a, { 0xc1 });
        gbc.writeMem(0xd6df, { 0x86, 0x60 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0xd6e1, gbc.sp());
        EXPECT(0x551b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x86, gbc.readMem(0xd6df));
        EXPECT(0x60, gbc.readMem(0xd6e0));
        // C1 0358
        gbc.setState(0x455d, 0xa402, 0x78d0, 0x454f, 0xb59f, 0xbc31, 0x0, 0x0);
        gbc.writeMem(0x455d, { 0xc1 });
        gbc.writeMem(0xa402, { 0x79, 0x70 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0xa404, gbc.sp());
        EXPECT(0x455e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x79, gbc.readMem(0xa402));
        EXPECT(0x70, gbc.readMem(0xa403));
        // C1 0359
        gbc.setState(0x6c76, 0xc3eb, 0x8650, 0xfaea, 0xd79a, 0x796c, 0x1, 0x0);
        gbc.writeMem(0x6c76, { 0xc1 });
        gbc.writeMem(0xc3eb, { 0xf9, 0x1b });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0xc3ed, gbc.sp());
        EXPECT(0x6c77, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf9, gbc.readMem(0xc3eb));
        EXPECT(0x1b, gbc.readMem(0xc3ec));
        // C1 035A
        gbc.setState(0x14c6, 0x3765, 0xec70, 0x2fba, 0xcc2f, 0xdb0, 0x1, 0x0);
        gbc.writeMem(0x14c6, { 0xc1 });
        gbc.writeMem(0x3765, { 0x78, 0xb7 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x3767, gbc.sp());
        EXPECT(0x14c7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C1 035C
        gbc.setState(0x67d1, 0x369d, 0x3190, 0xa812, 0x7e05, 0xbb64, 0x1, 0x1);
        gbc.writeMem(0x369d, { 0xf4, 0xaa });
        gbc.writeMem(0x67d1, { 0xc1 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x369f, gbc.sp());
        EXPECT(0x67d2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C1 035D
        gbc.setState(0x4083, 0xda7a, 0xe9e0, 0xf8ce, 0xe81f, 0x43b6, 0x1, 0x0);
        gbc.writeMem(0x4083, { 0xc1 });
        gbc.writeMem(0xda7a, { 0x35, 0x45 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0xda7c, gbc.sp());
        EXPECT(0x4084, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x35, gbc.readMem(0xda7a));
        EXPECT(0x45, gbc.readMem(0xda7b));
        // C1 035F
        gbc.setState(0x9a7c, 0x5044, 0xa890, 0xbfdc, 0x9511, 0x3309, 0x1, 0x1);
        gbc.writeMem(0x5044, { 0x1c, 0x2c });
        gbc.writeMem(0x9a7c, { 0xc1 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x5046, gbc.sp());
        EXPECT(0x9a7d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc1, gbc.readMem(0x9a7c));
        // C1 0360
        gbc.setState(0x5207, 0xa14f, 0xfc10, 0x1768, 0x4f1e, 0x522c, 0x1, 0x1);
        gbc.writeMem(0x5207, { 0xc1 });
        gbc.writeMem(0xa14f, { 0x37, 0x5d });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0xa151, gbc.sp());
        EXPECT(0x5208, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x37, gbc.readMem(0xa14f));
        EXPECT(0x5d, gbc.readMem(0xa150));
        // C1 0361
        gbc.setState(0xd738, 0xb5de, 0x1950, 0x50e5, 0x7afc, 0x33d4, 0x0, 0x1);
        gbc.writeMem(0xb5de, { 0xeb, 0xc7 });
        gbc.writeMem(0xd738, { 0xc1 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0xb5e0, gbc.sp());
        EXPECT(0xd739, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xeb, gbc.readMem(0xb5de));
        EXPECT(0xc7, gbc.readMem(0xb5df));
        EXPECT(0xc1, gbc.readMem(0xd738));
        // C1 0362
        gbc.setState(0xebf9, 0xe80c, 0x8f70, 0x65da, 0x551c, 0x7140, 0x1, 0x1);
        gbc.writeMem(0xe80c, { 0x1b, 0x1a });
        gbc.writeMem(0xebf9, { 0xc1 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0xe80e, gbc.sp());
        EXPECT(0xebfa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1b, gbc.readMem(0xe80c));
        EXPECT(0x1a, gbc.readMem(0xe80d));
        EXPECT(0xc1, gbc.readMem(0xebf9));
        // C1 0363
        gbc.setState(0x4b4d, 0x344a, 0x4ce0, 0xe9c, 0x4e77, 0x8f0a, 0x0, 0x1);
        gbc.writeMem(0x344a, { 0xce, 0x3b });
        gbc.writeMem(0x4b4d, { 0xc1 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x344c, gbc.sp());
        EXPECT(0x4b4e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C1 0364
        gbc.setState(0x78d8, 0x3a6f, 0x7f80, 0x3b58, 0x732a, 0xd5dc, 0x0, 0x1);
        gbc.writeMem(0x3a6f, { 0x20, 0x8f });
        gbc.writeMem(0x78d8, { 0xc1 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x3a71, gbc.sp());
        EXPECT(0x78d9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C1 0365
        gbc.setState(0xd63f, 0x3f75, 0x3280, 0x3466, 0xa61c, 0x79d3, 0x0, 0x0);
        gbc.writeMem(0x3f75, { 0xe, 0x7f });
        gbc.writeMem(0xd63f, { 0xc1 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x3f77, gbc.sp());
        EXPECT(0xd640, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc1, gbc.readMem(0xd63f));
        // C1 0366
        gbc.setState(0x9348, 0x5454, 0x1630, 0xb23b, 0x8739, 0xf9f6, 0x1, 0x0);
        gbc.writeMem(0x5454, { 0xf7, 0xb8 });
        gbc.writeMem(0x9348, { 0xc1 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x5456, gbc.sp());
        EXPECT(0x9349, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc1, gbc.readMem(0x9348));
        // C1 0367
        gbc.setState(0xcce9, 0x628b, 0x9ae0, 0x69d2, 0x29f5, 0x256f, 0x1, 0x0);
        gbc.writeMem(0x628b, { 0xe2, 0xc0 });
        gbc.writeMem(0xcce9, { 0xc1 });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x628d, gbc.sp());
        EXPECT(0xccea, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc1, gbc.readMem(0xcce9));
        // C1 0368
        gbc.setState(0x2404, 0xacea, 0x4fc0, 0x6194, 0x61e0, 0xf0cc, 0x0, 0x0);
        gbc.writeMem(0x2404, { 0xc1 });
        gbc.writeMem(0xacea, { 0xab, 0xf5 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0xacec, gbc.sp());
        EXPECT(0x2405, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xab, gbc.readMem(0xacea));
        EXPECT(0xf5, gbc.readMem(0xaceb));
        // C1 0369
        gbc.setState(0xb04d, 0xc825, 0xc330, 0x8cbb, 0x43d, 0x2ccd, 0x1, 0x1);
        gbc.writeMem(0xb04d, { 0xc1 });
        gbc.writeMem(0xc825, { 0x14, 0x7e });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0xc827, gbc.sp());
        EXPECT(0xb04e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc1, gbc.readMem(0xb04d));
        EXPECT(0x14, gbc.readMem(0xc825));
        EXPECT(0x7e, gbc.readMem(0xc826));
        // C1 036A
        gbc.setState(0xc801, 0x1a2d, 0x7f90, 0x657a, 0x3e73, 0xd6e7, 0x0, 0x1);
        gbc.writeMem(0x1a2d, { 0x32, 0x9e });
        gbc.writeMem(0xc801, { 0xc1 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x1a2f, gbc.sp());
        EXPECT(0xc802, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc1, gbc.readMem(0xc801));
        // C1 036B
        gbc.setState(0xddd8, 0x95ae, 0x3850, 0xe98c, 0xc0d8, 0x257a, 0x0, 0x1);
        gbc.writeMem(0x95ae, { 0x7f, 0xc3 });
        gbc.writeMem(0xddd8, { 0xc1 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x95b0, gbc.sp());
        EXPECT(0xddd9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7f, gbc.readMem(0x95ae));
        EXPECT(0xc3, gbc.readMem(0x95af));
        EXPECT(0xc1, gbc.readMem(0xddd8));
        // C1 036C
        gbc.setState(0x5977, 0xa921, 0x3ad0, 0x1666, 0x142d, 0xa4c3, 0x0, 0x0);
        gbc.writeMem(0x5977, { 0xc1 });
        gbc.writeMem(0xa921, { 0xd9, 0x3b });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0xa923, gbc.sp());
        EXPECT(0x5978, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd9, gbc.readMem(0xa921));
        EXPECT(0x3b, gbc.readMem(0xa922));
        // C1 036D
        gbc.setState(0x98ab, 0x98fa, 0x2730, 0xb0e4, 0xfd80, 0x13b7, 0x0, 0x0);
        gbc.writeMem(0x98ab, { 0xc1 });
        gbc.writeMem(0x98fa, { 0xf0, 0x3b });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x98fc, gbc.sp());
        EXPECT(0x98ac, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc1, gbc.readMem(0x98ab));
        EXPECT(0xf0, gbc.readMem(0x98fa));
        EXPECT(0x3b, gbc.readMem(0x98fb));
        // C1 036E
        gbc.setState(0xe302, 0xe261, 0xbf10, 0x6a98, 0x37bf, 0x2877, 0x0, 0x1);
        gbc.writeMem(0xe261, { 0x46, 0x3b });
        gbc.writeMem(0xe302, { 0xc1 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0xe263, gbc.sp());
        EXPECT(0xe303, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x46, gbc.readMem(0xe261));
        EXPECT(0x3b, gbc.readMem(0xe262));
        EXPECT(0xc1, gbc.readMem(0xe302));
        // C1 036F
        gbc.setState(0x703f, 0x7766, 0xdcb0, 0x5470, 0x898c, 0x902b, 0x0, 0x0);
        gbc.writeMem(0x703f, { 0xc1 });
        gbc.writeMem(0x7766, { 0x1e, 0xff });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x7768, gbc.sp());
        EXPECT(0x7040, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C1 0370
        gbc.setState(0xc9bc, 0x5630, 0x7010, 0xe542, 0xab67, 0x6c19, 0x1, 0x1);
        gbc.writeMem(0x5630, { 0x79, 0xa9 });
        gbc.writeMem(0xc9bc, { 0xc1 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x5632, gbc.sp());
        EXPECT(0xc9bd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc1, gbc.readMem(0xc9bc));
        // C1 0371
        gbc.setState(0xf11, 0xfe00, 0xaa30, 0x8021, 0x6aed, 0x6222, 0x0, 0x1);
        gbc.writeMem(0xf11, { 0xc1 });
        gbc.writeMem(0xfe00, { 0x2f, 0xe4 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0xfe02, gbc.sp());
        EXPECT(0xf12, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2f, gbc.readMem(0xfe00));
        EXPECT(0xe4, gbc.readMem(0xfe01));
        // C1 0372
        gbc.setState(0x17bf, 0xaeff, 0x2700, 0x56a3, 0x5e8f, 0x9347, 0x0, 0x0);
        gbc.writeMem(0x17bf, { 0xc1 });
        gbc.writeMem(0xaeff, { 0xf8, 0x22 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0xaf01, gbc.sp());
        EXPECT(0x17c0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf8, gbc.readMem(0xaeff));
        EXPECT(0x22, gbc.readMem(0xaf00));
        // C1 0373
        gbc.setState(0x8c2b, 0xdfff, 0xb1d0, 0x627, 0x5e1b, 0xf1e8, 0x1, 0x0);
        gbc.writeMem(0x8c2b, { 0xc1 });
        gbc.writeMem(0xdfff, { 0xe3, 0x17 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0xe001, gbc.sp());
        EXPECT(0x8c2c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc1, gbc.readMem(0x8c2b));
        EXPECT(0xe3, gbc.readMem(0xdfff));
        EXPECT(0x17, gbc.readMem(0xe000));
        // C1 0374
        gbc.setState(0xb0d4, 0x558a, 0x48a0, 0x189e, 0xa178, 0x21f6, 0x1, 0x0);
        gbc.writeMem(0x558a, { 0xbe, 0x86 });
        gbc.writeMem(0xb0d4, { 0xc1 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x558c, gbc.sp());
        EXPECT(0xb0d5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc1, gbc.readMem(0xb0d4));
        // C1 0375
        gbc.setState(0x8f4, 0x3822, 0x8bd0, 0x46b2, 0x3b91, 0x2e33, 0x1, 0x0);
        gbc.writeMem(0x8f4, { 0xc1 });
        gbc.writeMem(0x3822, { 0xc1, 0x25 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x3824, gbc.sp());
        EXPECT(0x8f5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C1 0376
        gbc.setState(0x995c, 0x21e6, 0x7fe0, 0xfeb9, 0x52da, 0x310a, 0x1, 0x1);
        gbc.writeMem(0x21e6, { 0x64, 0x52 });
        gbc.writeMem(0x995c, { 0xc1 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x21e8, gbc.sp());
        EXPECT(0x995d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc1, gbc.readMem(0x995c));
        // C1 0377
        gbc.setState(0xed30, 0xd105, 0xa3c0, 0x2dc4, 0xf35b, 0x9440, 0x1, 0x1);
        gbc.writeMem(0xd105, { 0x5f, 0xf });
        gbc.writeMem(0xed30, { 0xc1 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0xd107, gbc.sp());
        EXPECT(0xed31, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5f, gbc.readMem(0xd105));
        EXPECT(0xf, gbc.readMem(0xd106));
        EXPECT(0xc1, gbc.readMem(0xed30));
        // C1 0378
        gbc.setState(0xbc9e, 0x79f5, 0x8460, 0x61cb, 0xcfd2, 0x59c7, 0x1, 0x0);
        gbc.writeMem(0x79f5, { 0x6f, 0x5c });
        gbc.writeMem(0xbc9e, { 0xc1 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x79f7, gbc.sp());
        EXPECT(0xbc9f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc1, gbc.readMem(0xbc9e));
        // C1 037A
        gbc.setState(0x67e0, 0x832b, 0xfb00, 0xf4a, 0xef4b, 0x59cc, 0x1, 0x0);
        gbc.writeMem(0x67e0, { 0xc1 });
        gbc.writeMem(0x832b, { 0x5f, 0x7a });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x832d, gbc.sp());
        EXPECT(0x67e1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5f, gbc.readMem(0x832b));
        EXPECT(0x7a, gbc.readMem(0x832c));
        // C1 037B
        gbc.setState(0x6ec4, 0x3523, 0x2400, 0xd07e, 0xb7f8, 0x5743, 0x0, 0x0);
        gbc.writeMem(0x3523, { 0x64, 0xca });
        gbc.writeMem(0x6ec4, { 0xc1 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x3525, gbc.sp());
        EXPECT(0x6ec5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C1 037C
        gbc.setState(0x982f, 0xb9fe, 0x8610, 0x73ae, 0x2210, 0x8adc, 0x0, 0x0);
        gbc.writeMem(0x982f, { 0xc1 });
        gbc.writeMem(0xb9fe, { 0xcc, 0x5f });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0xba00, gbc.sp());
        EXPECT(0x9830, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc1, gbc.readMem(0x982f));
        EXPECT(0xcc, gbc.readMem(0xb9fe));
        EXPECT(0x5f, gbc.readMem(0xb9ff));
        // C1 037D
        gbc.setState(0xb1d5, 0xf65b, 0xacd0, 0x1324, 0x248d, 0xb83c, 0x0, 0x0);
        gbc.writeMem(0xb1d5, { 0xc1 });
        gbc.writeMem(0xf65b, { 0xb6, 0x16 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0xf65d, gbc.sp());
        EXPECT(0xb1d6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc1, gbc.readMem(0xb1d5));
        EXPECT(0xb6, gbc.readMem(0xf65b));
        EXPECT(0x16, gbc.readMem(0xf65c));
        // C1 037E
        gbc.setState(0xcec8, 0xabe8, 0xf740, 0x3e29, 0xacf1, 0xaec9, 0x0, 0x1);
        gbc.writeMem(0xabe8, { 0xe4, 0xab });
        gbc.writeMem(0xcec8, { 0xc1 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0xabea, gbc.sp());
        EXPECT(0xcec9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe4, gbc.readMem(0xabe8));
        EXPECT(0xab, gbc.readMem(0xabe9));
        EXPECT(0xc1, gbc.readMem(0xcec8));
        // C1 037F
        gbc.setState(0xbf59, 0x9212, 0x5020, 0xa303, 0x2007, 0x3df3, 0x1, 0x0);
        gbc.writeMem(0x9212, { 0xe2, 0x3e });
        gbc.writeMem(0xbf59, { 0xc1 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x9214, gbc.sp());
        EXPECT(0xbf5a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe2, gbc.readMem(0x9212));
        EXPECT(0x3e, gbc.readMem(0x9213));
        EXPECT(0xc1, gbc.readMem(0xbf59));
        // C1 0380
        gbc.setState(0x3def, 0x6bb4, 0x66d0, 0x2287, 0x3168, 0x8d19, 0x1, 0x1);
        gbc.writeMem(0x3def, { 0xc1 });
        gbc.writeMem(0x6bb4, { 0x3b, 0xf2 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x6bb6, gbc.sp());
        EXPECT(0x3df0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C1 0381
        gbc.setState(0x96c2, 0x4bb6, 0x710, 0x71c9, 0xcab, 0x95e3, 0x0, 0x1);
        gbc.writeMem(0x4bb6, { 0x51, 0xf0 });
        gbc.writeMem(0x96c2, { 0xc1 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x4bb8, gbc.sp());
        EXPECT(0x96c3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc1, gbc.readMem(0x96c2));
        // C1 0382
        gbc.setState(0xd274, 0xbc85, 0xdd00, 0xf137, 0x43bc, 0x8eb0, 0x1, 0x1);
        gbc.writeMem(0xbc85, { 0xb8, 0xa4 });
        gbc.writeMem(0xd274, { 0xc1 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0xbc87, gbc.sp());
        EXPECT(0xd275, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb8, gbc.readMem(0xbc85));
        EXPECT(0xa4, gbc.readMem(0xbc86));
        EXPECT(0xc1, gbc.readMem(0xd274));
        // C1 0383
        gbc.setState(0x4ab1, 0xeffd, 0xc60, 0xf32b, 0xb4b0, 0x113b, 0x1, 0x1);
        gbc.writeMem(0x4ab1, { 0xc1 });
        gbc.writeMem(0xeffd, { 0xac, 0xf3 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0xefff, gbc.sp());
        EXPECT(0x4ab2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xac, gbc.readMem(0xeffd));
        EXPECT(0xf3, gbc.readMem(0xeffe));
        // C1 0384
        gbc.setState(0x394b, 0x9996, 0x7c90, 0x9d31, 0xb052, 0x6227, 0x1, 0x0);
        gbc.writeMem(0x394b, { 0xc1 });
        gbc.writeMem(0x9996, { 0x94, 0xb0 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x9998, gbc.sp());
        EXPECT(0x394c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x94, gbc.readMem(0x9996));
        EXPECT(0xb0, gbc.readMem(0x9997));
        // C1 0386
        gbc.setState(0xe5b3, 0x843a, 0xa1b0, 0x8c85, 0xdb88, 0x5cd0, 0x1, 0x0);
        gbc.writeMem(0x843a, { 0xbe, 0xe8 });
        gbc.writeMem(0xe5b3, { 0xc1 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x843c, gbc.sp());
        EXPECT(0xe5b4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbe, gbc.readMem(0x843a));
        EXPECT(0xe8, gbc.readMem(0x843b));
        EXPECT(0xc1, gbc.readMem(0xe5b3));
        // C1 0387
        gbc.setState(0xa6f, 0x6f9c, 0xe170, 0xd81d, 0xb115, 0x9c6, 0x0, 0x0);
        gbc.writeMem(0xa6f, { 0xc1 });
        gbc.writeMem(0x6f9c, { 0x2d, 0xb7 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x6f9e, gbc.sp());
        EXPECT(0xa70, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C1 0388
        gbc.setState(0xaffe, 0xda42, 0x9a60, 0xf1db, 0x67bc, 0xdb85, 0x0, 0x0);
        gbc.writeMem(0xaffe, { 0xc1 });
        gbc.writeMem(0xda42, { 0x77, 0x85 });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0xda44, gbc.sp());
        EXPECT(0xafff, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc1, gbc.readMem(0xaffe));
        EXPECT(0x77, gbc.readMem(0xda42));
        EXPECT(0x85, gbc.readMem(0xda43));
        // C1 0389
        gbc.setState(0x62b3, 0x4f93, 0xd420, 0x11f3, 0xfee3, 0x9a44, 0x1, 0x1);
        gbc.writeMem(0x4f93, { 0xf1, 0xc3 });
        gbc.writeMem(0x62b3, { 0xc1 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x4f95, gbc.sp());
        EXPECT(0x62b4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C1 038A
        gbc.setState(0x2251, 0x6c57, 0xe6c0, 0xb306, 0x43ed, 0x835a, 0x0, 0x1);
        gbc.writeMem(0x2251, { 0xc1 });
        gbc.writeMem(0x6c57, { 0x1f, 0x55 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x6c59, gbc.sp());
        EXPECT(0x2252, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C1 038B
        gbc.setState(0x42a5, 0xaaa, 0xe1d0, 0x61e9, 0x6302, 0xe614, 0x0, 0x1);
        gbc.writeMem(0xaaa, { 0x84, 0xab });
        gbc.writeMem(0x42a5, { 0xc1 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0xaac, gbc.sp());
        EXPECT(0x42a6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C1 038C
        gbc.setState(0x448c, 0x9350, 0x3e90, 0xb13e, 0xeb62, 0x4fe5, 0x0, 0x1);
        gbc.writeMem(0x448c, { 0xc1 });
        gbc.writeMem(0x9350, { 0x6d, 0x67 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x9352, gbc.sp());
        EXPECT(0x448d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6d, gbc.readMem(0x9350));
        EXPECT(0x67, gbc.readMem(0x9351));
        // C1 038D
        gbc.setState(0x1881, 0xabc8, 0xe600, 0x8be0, 0x6d60, 0x437, 0x0, 0x0);
        gbc.writeMem(0x1881, { 0xc1 });
        gbc.writeMem(0xabc8, { 0x7a, 0xf8 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0xabca, gbc.sp());
        EXPECT(0x1882, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7a, gbc.readMem(0xabc8));
        EXPECT(0xf8, gbc.readMem(0xabc9));
        // C1 038E
        gbc.setState(0xaa9c, 0x3b67, 0xf20, 0xfe78, 0x5df5, 0x4107, 0x1, 0x0);
        gbc.writeMem(0x3b67, { 0x5b, 0x91 });
        gbc.writeMem(0xaa9c, { 0xc1 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x3b69, gbc.sp());
        EXPECT(0xaa9d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc1, gbc.readMem(0xaa9c));
        // C1 038F
        gbc.setState(0xb54f, 0x6821, 0x7c60, 0xf05, 0x9df1, 0xe4c6, 0x0, 0x1);
        gbc.writeMem(0x6821, { 0xc5, 0x55 });
        gbc.writeMem(0xb54f, { 0xc1 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x6823, gbc.sp());
        EXPECT(0xb550, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc1, gbc.readMem(0xb54f));
        // C1 0390
        gbc.setState(0x3bf, 0x887f, 0xf180, 0x8857, 0x963e, 0x627a, 0x0, 0x1);
        gbc.writeMem(0x3bf, { 0xc1 });
        gbc.writeMem(0x887f, { 0x3a, 0xd6 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x8881, gbc.sp());
        EXPECT(0x3c0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3a, gbc.readMem(0x887f));
        EXPECT(0xd6, gbc.readMem(0x8880));
        // C1 0391
        gbc.setState(0x9c2b, 0x4b0d, 0x68e0, 0x4e7d, 0xbd08, 0x7548, 0x1, 0x1);
        gbc.writeMem(0x4b0d, { 0xf5, 0xd8 });
        gbc.writeMem(0x9c2b, { 0xc1 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0x4b0f, gbc.sp());
        EXPECT(0x9c2c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc1, gbc.readMem(0x9c2b));
        // C1 0392
        gbc.setState(0x5e47, 0xae8a, 0x8b40, 0x9b8a, 0x5783, 0x9ab3, 0x0, 0x1);
        gbc.writeMem(0x5e47, { 0xc1 });
        gbc.writeMem(0xae8a, { 0x4b, 0x70 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0xae8c, gbc.sp());
        EXPECT(0x5e48, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4b, gbc.readMem(0xae8a));
        EXPECT(0x70, gbc.readMem(0xae8b));
        // C1 0393
        gbc.setState(0x4a4c, 0x5dfc, 0xfbd0, 0x28bd, 0xa789, 0xd83e, 0x1, 0x1);
        gbc.writeMem(0x4a4c, { 0xc1 });
        gbc.writeMem(0x5dfc, { 0x5e, 0x55 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x5dfe, gbc.sp());
        EXPECT(0x4a4d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C1 0394
        gbc.setState(0xc4be, 0x61a6, 0x6be0, 0x85ae, 0x4efc, 0xc2f5, 0x0, 0x0);
        gbc.writeMem(0x61a6, { 0x9a, 0xbf });
        gbc.writeMem(0xc4be, { 0xc1 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x61a8, gbc.sp());
        EXPECT(0xc4bf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc1, gbc.readMem(0xc4be));
        // C1 0395
        gbc.setState(0xa03, 0x4d89, 0x4dc0, 0x94cb, 0xb2d7, 0xace8, 0x0, 0x0);
        gbc.writeMem(0xa03, { 0xc1 });
        gbc.writeMem(0x4d89, { 0xe8, 0xcc });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x4d8b, gbc.sp());
        EXPECT(0xa04, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C1 0396
        gbc.setState(0x8b0a, 0x7ade, 0xc810, 0xbae6, 0x8a1d, 0xa820, 0x1, 0x0);
        gbc.writeMem(0x7ade, { 0xd9, 0xb6 });
        gbc.writeMem(0x8b0a, { 0xc1 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x7ae0, gbc.sp());
        EXPECT(0x8b0b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc1, gbc.readMem(0x8b0a));
        // C1 0397
        gbc.setState(0x1ac3, 0x478f, 0x2f70, 0x60c7, 0xee1d, 0x23ee, 0x0, 0x0);
        gbc.writeMem(0x1ac3, { 0xc1 });
        gbc.writeMem(0x478f, { 0xf2, 0xb8 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x4791, gbc.sp());
        EXPECT(0x1ac4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C1 0398
        gbc.setState(0x4ff6, 0x3648, 0xf8f0, 0xa0e3, 0x63e4, 0x86f, 0x0, 0x1);
        gbc.writeMem(0x3648, { 0x1e, 0x46 });
        gbc.writeMem(0x4ff6, { 0xc1 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x364a, gbc.sp());
        EXPECT(0x4ff7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C1 0399
        gbc.setState(0xd4d0, 0xc49f, 0x28d0, 0xd9eb, 0x2bdc, 0x630d, 0x0, 0x1);
        gbc.writeMem(0xc49f, { 0x4b, 0x75 });
        gbc.writeMem(0xd4d0, { 0xc1 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0xc4a1, gbc.sp());
        EXPECT(0xd4d1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4b, gbc.readMem(0xc49f));
        EXPECT(0x75, gbc.readMem(0xc4a0));
        EXPECT(0xc1, gbc.readMem(0xd4d0));
        // C1 039A
        gbc.setState(0x2d7b, 0x3915, 0x6c20, 0x7913, 0x8fa0, 0xd6c0, 0x0, 0x1);
        gbc.writeMem(0x2d7b, { 0xc1 });
        gbc.writeMem(0x3915, { 0xf0, 0xbb });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x3917, gbc.sp());
        EXPECT(0x2d7c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C1 039C
        gbc.setState(0xc8c9, 0x74f7, 0x9260, 0x2df3, 0xa56b, 0x428a, 0x0, 0x1);
        gbc.writeMem(0x74f7, { 0xd7, 0xc8 });
        gbc.writeMem(0xc8c9, { 0xc1 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x74f9, gbc.sp());
        EXPECT(0xc8ca, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc1, gbc.readMem(0xc8c9));
        // C1 039D
        gbc.setState(0xc5e8, 0x6a64, 0x5b60, 0xfc1, 0xb5c2, 0x6579, 0x1, 0x0);
        gbc.writeMem(0x6a64, { 0x5f, 0x35 });
        gbc.writeMem(0xc5e8, { 0xc1 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x6a66, gbc.sp());
        EXPECT(0xc5e9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc1, gbc.readMem(0xc5e8));
        // C1 039E
        gbc.setState(0x7943, 0xf100, 0x1ee0, 0xdce4, 0x547, 0xc3e5, 0x1, 0x0);
        gbc.writeMem(0x7943, { 0xc1 });
        gbc.writeMem(0xf100, { 0xf0, 0x7 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0xf102, gbc.sp());
        EXPECT(0x7944, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf0, gbc.readMem(0xf100));
        EXPECT(0x7, gbc.readMem(0xf101));
        // C1 039F
        gbc.setState(0x455f, 0x179e, 0x9ba0, 0x392b, 0x5157, 0x35b7, 0x0, 0x0);
        gbc.writeMem(0x179e, { 0x88, 0x85 });
        gbc.writeMem(0x455f, { 0xc1 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x17a0, gbc.sp());
        EXPECT(0x4560, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C1 03A0
        gbc.setState(0x90bb, 0x2b74, 0xd800, 0xdca7, 0xbd20, 0x1658, 0x0, 0x0);
        gbc.writeMem(0x2b74, { 0x7c, 0xec });
        gbc.writeMem(0x90bb, { 0xc1 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x2b76, gbc.sp());
        EXPECT(0x90bc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc1, gbc.readMem(0x90bb));
        // C1 03A1
        gbc.setState(0x7f8b, 0x48cb, 0x6780, 0xe2ec, 0xdd3f, 0x2c99, 0x1, 0x1);
        gbc.writeMem(0x48cb, { 0x2, 0x2 });
        gbc.writeMem(0x7f8b, { 0xc1 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x48cd, gbc.sp());
        EXPECT(0x7f8c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C1 03A2
        gbc.setState(0x1635, 0x79e5, 0x2130, 0x83cf, 0x859b, 0x6c6e, 0x1, 0x1);
        gbc.writeMem(0x1635, { 0xc1 });
        gbc.writeMem(0x79e5, { 0xa9, 0x52 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x79e7, gbc.sp());
        EXPECT(0x1636, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C1 03A3
        gbc.setState(0x8efc, 0xfe63, 0xbe00, 0xecf, 0x4681, 0xdff8, 0x1, 0x0);
        gbc.writeMem(0x8efc, { 0xc1 });
        gbc.writeMem(0xfe63, { 0x7d, 0x24 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0xfe65, gbc.sp());
        EXPECT(0x8efd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc1, gbc.readMem(0x8efc));
        EXPECT(0x7d, gbc.readMem(0xfe63));
        EXPECT(0x24, gbc.readMem(0xfe64));
        // C1 03A5
        gbc.setState(0xa3ac, 0x8ae, 0xb820, 0x9752, 0x4c85, 0xb03c, 0x1, 0x1);
        gbc.writeMem(0x8ae, { 0x72, 0xf1 });
        gbc.writeMem(0xa3ac, { 0xc1 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x8b0, gbc.sp());
        EXPECT(0xa3ad, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc1, gbc.readMem(0xa3ac));
        // C1 03A6
        gbc.setState(0xbb38, 0xf92a, 0xec40, 0x2f5c, 0x2697, 0x8197, 0x1, 0x0);
        gbc.writeMem(0xbb38, { 0xc1 });
        gbc.writeMem(0xf92a, { 0x94, 0x7c });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0xf92c, gbc.sp());
        EXPECT(0xbb39, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc1, gbc.readMem(0xbb38));
        EXPECT(0x94, gbc.readMem(0xf92a));
        EXPECT(0x7c, gbc.readMem(0xf92b));
        // C1 03A7
        gbc.setState(0xdd0c, 0x6931, 0x78a0, 0xd2a8, 0x74b, 0xf6c0, 0x1, 0x1);
        gbc.writeMem(0x6931, { 0x40, 0xcc });
        gbc.writeMem(0xdd0c, { 0xc1 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x6933, gbc.sp());
        EXPECT(0xdd0d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc1, gbc.readMem(0xdd0c));
        // C1 03A8
        gbc.setState(0x8e59, 0x4770, 0x6360, 0x76bc, 0x1bc5, 0x4d74, 0x0, 0x0);
        gbc.writeMem(0x4770, { 0xb6, 0x2b });
        gbc.writeMem(0x8e59, { 0xc1 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x4772, gbc.sp());
        EXPECT(0x8e5a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc1, gbc.readMem(0x8e59));
        // C1 03A9
        gbc.setState(0x2c99, 0x304b, 0x3e80, 0x4736, 0x52a6, 0x5199, 0x1, 0x1);
        gbc.writeMem(0x2c99, { 0xc1 });
        gbc.writeMem(0x304b, { 0xa2, 0x77 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x304d, gbc.sp());
        EXPECT(0x2c9a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C1 03AA
        gbc.setState(0x5513, 0x97be, 0xf40, 0x3bdc, 0x8226, 0xf160, 0x1, 0x1);
        gbc.writeMem(0x5513, { 0xc1 });
        gbc.writeMem(0x97be, { 0x52, 0xf0 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x97c0, gbc.sp());
        EXPECT(0x5514, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x52, gbc.readMem(0x97be));
        EXPECT(0xf0, gbc.readMem(0x97bf));
        // C1 03AB
        gbc.setState(0x4f5d, 0x3b1f, 0x18e0, 0x53b7, 0x7c9b, 0x31e7, 0x0, 0x0);
        gbc.writeMem(0x3b1f, { 0x8f, 0x36 });
        gbc.writeMem(0x4f5d, { 0xc1 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x3b21, gbc.sp());
        EXPECT(0x4f5e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C1 03AC
        gbc.setState(0x868d, 0xaad3, 0xce20, 0xcb8, 0x27de, 0x721a, 0x1, 0x0);
        gbc.writeMem(0x868d, { 0xc1 });
        gbc.writeMem(0xaad3, { 0xa1, 0xfd });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0xaad5, gbc.sp());
        EXPECT(0x868e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc1, gbc.readMem(0x868d));
        EXPECT(0xa1, gbc.readMem(0xaad3));
        EXPECT(0xfd, gbc.readMem(0xaad4));
        // C1 03AD
        gbc.setState(0x2315, 0xf7c6, 0x5670, 0x4ff, 0x7266, 0xba15, 0x1, 0x1);
        gbc.writeMem(0x2315, { 0xc1 });
        gbc.writeMem(0xf7c6, { 0xab, 0x83 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0xf7c8, gbc.sp());
        EXPECT(0x2316, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xab, gbc.readMem(0xf7c6));
        EXPECT(0x83, gbc.readMem(0xf7c7));
        // C1 03AF
        gbc.setState(0x6040, 0x9dae, 0x4080, 0x65e0, 0x3a06, 0x13b8, 0x1, 0x0);
        gbc.writeMem(0x6040, { 0xc1 });
        gbc.writeMem(0x9dae, { 0x7e, 0xd4 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x9db0, gbc.sp());
        EXPECT(0x6041, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7e, gbc.readMem(0x9dae));
        EXPECT(0xd4, gbc.readMem(0x9daf));
        // C1 03B0
        gbc.setState(0x19d2, 0xe67f, 0x4050, 0xa64c, 0xd915, 0xb3f1, 0x0, 0x1);
        gbc.writeMem(0x19d2, { 0xc1 });
        gbc.writeMem(0xe67f, { 0x12, 0x40 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0xe681, gbc.sp());
        EXPECT(0x19d3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x12, gbc.readMem(0xe67f));
        EXPECT(0x40, gbc.readMem(0xe680));
        // C1 03B1
        gbc.setState(0xaac2, 0xcbc6, 0x9ee0, 0xcc9a, 0x7ebe, 0x479e, 0x1, 0x1);
        gbc.writeMem(0xaac2, { 0xc1 });
        gbc.writeMem(0xcbc6, { 0x3, 0x7f });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0xcbc8, gbc.sp());
        EXPECT(0xaac3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc1, gbc.readMem(0xaac2));
        EXPECT(0x3, gbc.readMem(0xcbc6));
        EXPECT(0x7f, gbc.readMem(0xcbc7));
        // C1 03B2
        gbc.setState(0x7bdf, 0x41c8, 0x72e0, 0x1a4a, 0x1d47, 0x5eeb, 0x0, 0x0);
        gbc.writeMem(0x41c8, { 0x38, 0x2e });
        gbc.writeMem(0x7bdf, { 0xc1 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x41ca, gbc.sp());
        EXPECT(0x7be0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C1 03B3
        gbc.setState(0xac23, 0x5ab2, 0x3100, 0xb4f1, 0xcde1, 0x6ca9, 0x1, 0x1);
        gbc.writeMem(0x5ab2, { 0x95, 0x29 });
        gbc.writeMem(0xac23, { 0xc1 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x5ab4, gbc.sp());
        EXPECT(0xac24, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc1, gbc.readMem(0xac23));
        // C1 03B4
        gbc.setState(0x3ea6, 0x15c0, 0x8470, 0x19e0, 0xcd79, 0x4e3c, 0x0, 0x1);
        gbc.writeMem(0x15c0, { 0xf8, 0x2b });
        gbc.writeMem(0x3ea6, { 0xc1 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x15c2, gbc.sp());
        EXPECT(0x3ea7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C1 03B5
        gbc.setState(0x5149, 0x8c8d, 0x6950, 0x3941, 0x6df7, 0x29f9, 0x0, 0x0);
        gbc.writeMem(0x5149, { 0xc1 });
        gbc.writeMem(0x8c8d, { 0x94, 0x3d });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x8c8f, gbc.sp());
        EXPECT(0x514a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x94, gbc.readMem(0x8c8d));
        EXPECT(0x3d, gbc.readMem(0x8c8e));
        // C1 03B6
        gbc.setState(0xd7be, 0xed89, 0x1f70, 0x809, 0xf625, 0x37e1, 0x1, 0x0);
        gbc.writeMem(0xd7be, { 0xc1 });
        gbc.writeMem(0xed89, { 0xf8, 0xa7 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0xed8b, gbc.sp());
        EXPECT(0xd7bf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc1, gbc.readMem(0xd7be));
        EXPECT(0xf8, gbc.readMem(0xed89));
        EXPECT(0xa7, gbc.readMem(0xed8a));
        // C1 03B7
        gbc.setState(0x3d77, 0x1667, 0x5c60, 0xd965, 0xd3f4, 0x75ef, 0x1, 0x0);
        gbc.writeMem(0x1667, { 0x77, 0x67 });
        gbc.writeMem(0x3d77, { 0xc1 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x1669, gbc.sp());
        EXPECT(0x3d78, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C1 03B8
        gbc.setState(0xccf, 0x888d, 0xff90, 0x13ad, 0x4aee, 0x4a6a, 0x0, 0x0);
        gbc.writeMem(0xccf, { 0xc1 });
        gbc.writeMem(0x888d, { 0x90, 0xd7 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x888f, gbc.sp());
        EXPECT(0xcd0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x90, gbc.readMem(0x888d));
        EXPECT(0xd7, gbc.readMem(0x888e));
        // C1 03B9
        gbc.setState(0xd9, 0xc006, 0x8c10, 0xd284, 0xb446, 0xb3b0, 0x0, 0x0);
        gbc.writeMem(0xd9, { 0xc1 });
        gbc.writeMem(0xc006, { 0x9f, 0x9e });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0xc008, gbc.sp());
        EXPECT(0xda, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9f, gbc.readMem(0xc006));
        EXPECT(0x9e, gbc.readMem(0xc007));
        // C1 03BA
        gbc.setState(0x78a4, 0x7a03, 0xdc10, 0xd39a, 0xdb09, 0xb1a6, 0x0, 0x0);
        gbc.writeMem(0x78a4, { 0xc1 });
        gbc.writeMem(0x7a03, { 0xf9, 0x52 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x7a05, gbc.sp());
        EXPECT(0x78a5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C1 03BB
        gbc.setState(0x1f01, 0x6275, 0xc620, 0xc5b4, 0x2a2b, 0x3991, 0x1, 0x1);
        gbc.writeMem(0x1f01, { 0xc1 });
        gbc.writeMem(0x6275, { 0xfc, 0x55 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x6277, gbc.sp());
        EXPECT(0x1f02, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C1 03BC
        gbc.setState(0xc2d7, 0x1aa, 0x3150, 0x91a2, 0x16c6, 0xc12, 0x1, 0x0);
        gbc.writeMem(0x1aa, { 0x2b, 0x9e });
        gbc.writeMem(0xc2d7, { 0xc1 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x1ac, gbc.sp());
        EXPECT(0xc2d8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc1, gbc.readMem(0xc2d7));
        // C1 03BD
        gbc.setState(0x6a9b, 0x82f5, 0xf160, 0x6a74, 0x75a9, 0xc1af, 0x1, 0x0);
        gbc.writeMem(0x6a9b, { 0xc1 });
        gbc.writeMem(0x82f5, { 0x66, 0x9f });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x82f7, gbc.sp());
        EXPECT(0x6a9c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x66, gbc.readMem(0x82f5));
        EXPECT(0x9f, gbc.readMem(0x82f6));
        // C1 03BE
        gbc.setState(0x5220, 0xc98f, 0xf100, 0x453c, 0xb4ac, 0xf1d8, 0x0, 0x0);
        gbc.writeMem(0x5220, { 0xc1 });
        gbc.writeMem(0xc98f, { 0x4a, 0x2b });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0xc991, gbc.sp());
        EXPECT(0x5221, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4a, gbc.readMem(0xc98f));
        EXPECT(0x2b, gbc.readMem(0xc990));
        // C1 03BF
        gbc.setState(0x4ec9, 0xf935, 0x8f90, 0x1eb, 0x99af, 0x66ce, 0x0, 0x0);
        gbc.writeMem(0x4ec9, { 0xc1 });
        gbc.writeMem(0xf935, { 0x9e, 0xde });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0xf937, gbc.sp());
        EXPECT(0x4eca, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9e, gbc.readMem(0xf935));
        EXPECT(0xde, gbc.readMem(0xf936));
        // C1 03C0
        gbc.setState(0x72ed, 0x36a9, 0x4090, 0xe203, 0xcaba, 0xe3a7, 0x0, 0x0);
        gbc.writeMem(0x36a9, { 0xdb, 0x3a });
        gbc.writeMem(0x72ed, { 0xc1 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x36ab, gbc.sp());
        EXPECT(0x72ee, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C1 03C1
        gbc.setState(0x4934, 0xe217, 0xce80, 0x14f7, 0x2a50, 0x7cc2, 0x1, 0x1);
        gbc.writeMem(0x4934, { 0xc1 });
        gbc.writeMem(0xe217, { 0xaf, 0x35 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0xe219, gbc.sp());
        EXPECT(0x4935, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xaf, gbc.readMem(0xe217));
        EXPECT(0x35, gbc.readMem(0xe218));
        // C1 03C2
        gbc.setState(0x2501, 0x4969, 0x8760, 0xa19f, 0x5ae9, 0x1f30, 0x1, 0x1);
        gbc.writeMem(0x2501, { 0xc1 });
        gbc.writeMem(0x4969, { 0x51, 0x5d });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x496b, gbc.sp());
        EXPECT(0x2502, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C1 03C3
        gbc.setState(0xd374, 0x2a1e, 0xdbd0, 0xc61a, 0x76b9, 0xa0b1, 0x0, 0x0);
        gbc.writeMem(0x2a1e, { 0xb2, 0x31 });
        gbc.writeMem(0xd374, { 0xc1 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x2a20, gbc.sp());
        EXPECT(0xd375, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc1, gbc.readMem(0xd374));
        // C1 03C5
        gbc.setState(0x6a33, 0xdbe5, 0xffd0, 0xa5fd, 0xa8a1, 0x718e, 0x0, 0x0);
        gbc.writeMem(0x6a33, { 0xc1 });
        gbc.writeMem(0xdbe5, { 0x56, 0x5f });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0xdbe7, gbc.sp());
        EXPECT(0x6a34, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x56, gbc.readMem(0xdbe5));
        EXPECT(0x5f, gbc.readMem(0xdbe6));
        // C1 03C6
        gbc.setState(0x283, 0x64ef, 0x8fe0, 0x88c0, 0xf777, 0xc7c, 0x1, 0x1);
        gbc.writeMem(0x283, { 0xc1 });
        gbc.writeMem(0x64ef, { 0x23, 0x6 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x64f1, gbc.sp());
        EXPECT(0x284, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C1 03C7
        gbc.setState(0xb60f, 0x16ca, 0x6380, 0x4b4c, 0xd9ad, 0x933a, 0x0, 0x0);
        gbc.writeMem(0x16ca, { 0x2c, 0x34 });
        gbc.writeMem(0xb60f, { 0xc1 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x16cc, gbc.sp());
        EXPECT(0xb610, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc1, gbc.readMem(0xb60f));
        // C1 03C8
        gbc.setState(0x767, 0x56c3, 0xe4f0, 0x5b3f, 0xfe17, 0xc3a1, 0x0, 0x0);
        gbc.writeMem(0x767, { 0xc1 });
        gbc.writeMem(0x56c3, { 0xd6, 0xe9 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x56c5, gbc.sp());
        EXPECT(0x768, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C1 03C9
        gbc.setState(0x22c0, 0xb311, 0x2ec0, 0x8136, 0x44f6, 0x81dd, 0x1, 0x0);
        gbc.writeMem(0x22c0, { 0xc1 });
        gbc.writeMem(0xb311, { 0x8e, 0x4b });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0xb313, gbc.sp());
        EXPECT(0x22c1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8e, gbc.readMem(0xb311));
        EXPECT(0x4b, gbc.readMem(0xb312));
        // C1 03CA
        gbc.setState(0x682d, 0x810c, 0x8750, 0x352d, 0x79e9, 0x3105, 0x0, 0x0);
        gbc.writeMem(0x682d, { 0xc1 });
        gbc.writeMem(0x810c, { 0x70, 0x52 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x810e, gbc.sp());
        EXPECT(0x682e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x70, gbc.readMem(0x810c));
        EXPECT(0x52, gbc.readMem(0x810d));
        // C1 03CB
        gbc.setState(0x8bfd, 0x333c, 0xd390, 0xd20b, 0xbd11, 0x11f1, 0x0, 0x0);
        gbc.writeMem(0x333c, { 0x81, 0x60 });
        gbc.writeMem(0x8bfd, { 0xc1 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x333e, gbc.sp());
        EXPECT(0x8bfe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc1, gbc.readMem(0x8bfd));
        // C1 03CC
        gbc.setState(0x87b9, 0x1c49, 0x5870, 0x4940, 0x7da5, 0xcc28, 0x1, 0x0);
        gbc.writeMem(0x1c49, { 0x89, 0xef });
        gbc.writeMem(0x87b9, { 0xc1 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x1c4b, gbc.sp());
        EXPECT(0x87ba, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc1, gbc.readMem(0x87b9));
        // C1 03CD
        gbc.setState(0x1137, 0x567f, 0x8570, 0x4b98, 0xb0c4, 0xb058, 0x0, 0x1);
        gbc.writeMem(0x1137, { 0xc1 });
        gbc.writeMem(0x567f, { 0x89, 0xd7 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x5681, gbc.sp());
        EXPECT(0x1138, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C1 03CF
        gbc.setState(0xb0ef, 0xdaa7, 0x40d0, 0x14e2, 0xcac6, 0x483, 0x0, 0x0);
        gbc.writeMem(0xb0ef, { 0xc1 });
        gbc.writeMem(0xdaa7, { 0x10, 0x1e });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0xdaa9, gbc.sp());
        EXPECT(0xb0f0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc1, gbc.readMem(0xb0ef));
        EXPECT(0x10, gbc.readMem(0xdaa7));
        EXPECT(0x1e, gbc.readMem(0xdaa8));
        // C1 03D1
        gbc.setState(0x580c, 0xf41e, 0x3a40, 0x7e5d, 0x746b, 0xf52c, 0x1, 0x1);
        gbc.writeMem(0x580c, { 0xc1 });
        gbc.writeMem(0xf41e, { 0x77, 0x4a });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0xf420, gbc.sp());
        EXPECT(0x580d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x77, gbc.readMem(0xf41e));
        EXPECT(0x4a, gbc.readMem(0xf41f));
        // C1 03D2
        gbc.setState(0x5193, 0xbd9d, 0xa0e0, 0x177a, 0x6a4e, 0x81d2, 0x0, 0x1);
        gbc.writeMem(0x5193, { 0xc1 });
        gbc.writeMem(0xbd9d, { 0x9c, 0x2 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0xbd9f, gbc.sp());
        EXPECT(0x5194, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9c, gbc.readMem(0xbd9d));
        EXPECT(0x2, gbc.readMem(0xbd9e));
        // C1 03D3
        gbc.setState(0xa166, 0xb95, 0xf250, 0xd9ea, 0x40be, 0xe36f, 0x1, 0x0);
        gbc.writeMem(0xb95, { 0x90, 0xea });
        gbc.writeMem(0xa166, { 0xc1 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0xb97, gbc.sp());
        EXPECT(0xa167, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc1, gbc.readMem(0xa166));
        // C1 03D4
        gbc.setState(0x8a35, 0x869d, 0xc0a0, 0xe9f3, 0x13b5, 0x904d, 0x1, 0x1);
        gbc.writeMem(0x869d, { 0x13, 0x0 });
        gbc.writeMem(0x8a35, { 0xc1 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x869f, gbc.sp());
        EXPECT(0x8a36, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x13, gbc.readMem(0x869d));
        EXPECT(0x0, gbc.readMem(0x869e));
        EXPECT(0xc1, gbc.readMem(0x8a35));
        // C1 03D5
        gbc.setState(0x967f, 0x37dd, 0x4c40, 0x6b60, 0x3c92, 0xf5aa, 0x0, 0x0);
        gbc.writeMem(0x37dd, { 0x38, 0x43 });
        gbc.writeMem(0x967f, { 0xc1 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x37df, gbc.sp());
        EXPECT(0x9680, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc1, gbc.readMem(0x967f));
        // C1 03D6
        gbc.setState(0x3ce4, 0x81e6, 0xe2e0, 0x3249, 0x2333, 0xd557, 0x1, 0x1);
        gbc.writeMem(0x3ce4, { 0xc1 });
        gbc.writeMem(0x81e6, { 0x1, 0x98 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x81e8, gbc.sp());
        EXPECT(0x3ce5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1, gbc.readMem(0x81e6));
        EXPECT(0x98, gbc.readMem(0x81e7));
        // C1 03D7
        gbc.setState(0x3318, 0x9fd9, 0xd8e0, 0x252e, 0x99dd, 0xdc3f, 0x0, 0x1);
        gbc.writeMem(0x3318, { 0xc1 });
        gbc.writeMem(0x9fd9, { 0xaa, 0x4b });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0x9fdb, gbc.sp());
        EXPECT(0x3319, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xaa, gbc.readMem(0x9fd9));
        EXPECT(0x4b, gbc.readMem(0x9fda));
        // C1 03D8
        gbc.setState(0x7737, 0x3824, 0x6590, 0x72b, 0x647d, 0x3c22, 0x1, 0x1);
        gbc.writeMem(0x3824, { 0x4, 0x83 });
        gbc.writeMem(0x7737, { 0xc1 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x3826, gbc.sp());
        EXPECT(0x7738, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C1 03D9
        gbc.setState(0x9b2d, 0x5549, 0xec60, 0x1820, 0xfbcd, 0xa2f0, 0x0, 0x0);
        gbc.writeMem(0x5549, { 0x18, 0xa1 });
        gbc.writeMem(0x9b2d, { 0xc1 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x554b, gbc.sp());
        EXPECT(0x9b2e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc1, gbc.readMem(0x9b2d));
        // C1 03DA
        gbc.setState(0x9f42, 0xba6f, 0x7ce0, 0xeec, 0x9dff, 0x7fff, 0x0, 0x1);
        gbc.writeMem(0x9f42, { 0xc1 });
        gbc.writeMem(0xba6f, { 0x80, 0xc4 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0xba71, gbc.sp());
        EXPECT(0x9f43, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc1, gbc.readMem(0x9f42));
        EXPECT(0x80, gbc.readMem(0xba6f));
        EXPECT(0xc4, gbc.readMem(0xba70));
        // C1 03DC
        gbc.setState(0x9d82, 0x7924, 0x65d0, 0x138b, 0x7f65, 0xc36f, 0x1, 0x1);
        gbc.writeMem(0x7924, { 0x4d, 0x14 });
        gbc.writeMem(0x9d82, { 0xc1 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x7926, gbc.sp());
        EXPECT(0x9d83, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc1, gbc.readMem(0x9d82));
        // C1 03DD
        gbc.setState(0x79ad, 0x39ba, 0x9f40, 0xd220, 0x861c, 0x4bb9, 0x1, 0x1);
        gbc.writeMem(0x39ba, { 0x47, 0xff });
        gbc.writeMem(0x79ad, { 0xc1 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x39bc, gbc.sp());
        EXPECT(0x79ae, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C1 03DE
        gbc.setState(0x1e5a, 0x2b13, 0x9fa0, 0x7aa0, 0xa79a, 0x9bfe, 0x0, 0x0);
        gbc.writeMem(0x1e5a, { 0xc1 });
        gbc.writeMem(0x2b13, { 0x36, 0xd5 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x2b15, gbc.sp());
        EXPECT(0x1e5b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C1 03DF
        gbc.setState(0x26a6, 0x920, 0x11a0, 0x7817, 0x1b3, 0x5879, 0x1, 0x1);
        gbc.writeMem(0x920, { 0x54, 0x4f });
        gbc.writeMem(0x26a6, { 0xc1 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x922, gbc.sp());
        EXPECT(0x26a7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C1 03E0
        gbc.setState(0xa511, 0x32b1, 0x6330, 0xd669, 0x69dd, 0xcba4, 0x1, 0x0);
        gbc.writeMem(0x32b1, { 0x3d, 0x26 });
        gbc.writeMem(0xa511, { 0xc1 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x32b3, gbc.sp());
        EXPECT(0xa512, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc1, gbc.readMem(0xa511));
        // C1 03E1
        gbc.setState(0xcd4, 0xaa0, 0x6d30, 0xcc57, 0xe384, 0xa8a4, 0x1, 0x0);
        gbc.writeMem(0xaa0, { 0x12, 0xae });
        gbc.writeMem(0xcd4, { 0xc1 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0xaa2, gbc.sp());
        EXPECT(0xcd5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C1 03E2
        gbc.setState(0xe89c, 0xdc67, 0x7d60, 0x274c, 0x5bd1, 0x909d, 0x0, 0x0);
        gbc.writeMem(0xdc67, { 0x4c, 0xa2 });
        gbc.writeMem(0xe89c, { 0xc1 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0xdc69, gbc.sp());
        EXPECT(0xe89d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4c, gbc.readMem(0xdc67));
        EXPECT(0xa2, gbc.readMem(0xdc68));
        EXPECT(0xc1, gbc.readMem(0xe89c));
        // C1 03E3
        gbc.setState(0x561b, 0x8695, 0x9e30, 0xd79e, 0xa0c5, 0xb504, 0x1, 0x0);
        gbc.writeMem(0x561b, { 0xc1 });
        gbc.writeMem(0x8695, { 0x51, 0x5f });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x8697, gbc.sp());
        EXPECT(0x561c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x51, gbc.readMem(0x8695));
        EXPECT(0x5f, gbc.readMem(0x8696));
        // C1 03E4
        gbc.setState(0xb41, 0x4148, 0x1a90, 0xd106, 0x5af9, 0x58c0, 0x1, 0x1);
        gbc.writeMem(0xb41, { 0xc1 });
        gbc.writeMem(0x4148, { 0xad, 0x45 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x414a, gbc.sp());
        EXPECT(0xb42, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C1 03E5
        gbc.setState(0x8a7, 0x6120, 0x66c0, 0x3401, 0xee2e, 0x206, 0x0, 0x1);
        gbc.writeMem(0x8a7, { 0xc1 });
        gbc.writeMem(0x6120, { 0x6d, 0xe8 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x6122, gbc.sp());
        EXPECT(0x8a8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C1 03E6
        gbc.setState(0x6e3a, 0xed47, 0x7d50, 0xbb43, 0x9587, 0x39eb, 0x1, 0x1);
        gbc.writeMem(0x6e3a, { 0xc1 });
        gbc.writeMem(0xed47, { 0x8c, 0x2c });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0xed49, gbc.sp());
        EXPECT(0x6e3b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8c, gbc.readMem(0xed47));
        EXPECT(0x2c, gbc.readMem(0xed48));
        // C1 03E7
        gbc.setState(0x764e, 0x6fb9, 0x1710, 0x3fa5, 0xfae3, 0x3452, 0x1, 0x0);
        gbc.writeMem(0x6fb9, { 0x1b, 0xa7 });
        gbc.writeMem(0x764e, { 0xc1 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x6fbb, gbc.sp());
        EXPECT(0x764f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
    }
