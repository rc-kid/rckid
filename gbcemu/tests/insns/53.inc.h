    TEST(gbcemu, opcode_53) {
        GBCEmu gbc{};
        uint8_t cartridge[0x8000];
        cartridge[0x149] = 0x02; // 8kb external RAM
        gbc.loadCartridge(new FlashGamePak(cartridge));
        // 53 0000
        gbc.setState(0x7f07, 0x7f8f, 0x94c0, 0xdf26, 0x6fb4, 0xe998, 0x1, 0x0);
        gbc.writeMem(0x7f07, { 0x53 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x7f8f, gbc.sp());
        EXPECT(0x7f08, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 53 0001
        gbc.setState(0xb4d1, 0x7638, 0xa4e0, 0x3b17, 0x268f, 0x2b92, 0x1, 0x1);
        gbc.writeMem(0xb4d1, { 0x53 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x7638, gbc.sp());
        EXPECT(0xb4d2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x53, gbc.readMem(0xb4d1));
        // 53 0002
        gbc.setState(0xb2e3, 0xa4b2, 0x910, 0x8e17, 0x545d, 0x7803, 0x0, 0x0);
        gbc.writeMem(0xb2e3, { 0x53 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0xa4b2, gbc.sp());
        EXPECT(0xb2e4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x53, gbc.readMem(0xb2e3));
        // 53 0003
        gbc.setState(0xae28, 0xaea4, 0x290, 0x4f6e, 0xe133, 0x8ae3, 0x1, 0x1);
        gbc.writeMem(0xae28, { 0x53 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0xaea4, gbc.sp());
        EXPECT(0xae29, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x53, gbc.readMem(0xae28));
        // 53 0004
        gbc.setState(0xec7, 0x3a88, 0xece0, 0x36d6, 0x9e61, 0x3feb, 0x0, 0x1);
        gbc.writeMem(0xec7, { 0x53 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x3a88, gbc.sp());
        EXPECT(0xec8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 53 0005
        gbc.setState(0x2447, 0x8f24, 0xd8b0, 0x7637, 0xbca4, 0x2857, 0x0, 0x0);
        gbc.writeMem(0x2447, { 0x53 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x8f24, gbc.sp());
        EXPECT(0x2448, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 53 0006
        gbc.setState(0x5d59, 0x5ff4, 0xbc90, 0x92e8, 0x5beb, 0x64a3, 0x0, 0x0);
        gbc.writeMem(0x5d59, { 0x53 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0x5ff4, gbc.sp());
        EXPECT(0x5d5a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 53 0007
        gbc.setState(0xb625, 0x96c9, 0x4400, 0xaff5, 0x2805, 0x4422, 0x1, 0x0);
        gbc.writeMem(0xb625, { 0x53 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x96c9, gbc.sp());
        EXPECT(0xb626, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x53, gbc.readMem(0xb625));
        // 53 0008
        gbc.setState(0xed2d, 0xc96a, 0x5c60, 0xbb11, 0x3a97, 0x6a2c, 0x0, 0x1);
        gbc.writeMem(0xed2d, { 0x53 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0xc96a, gbc.sp());
        EXPECT(0xed2e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x53, gbc.readMem(0xed2d));
        // 53 0009
        gbc.setState(0xd138, 0x4330, 0x8ac0, 0x968d, 0xd791, 0x4646, 0x0, 0x1);
        gbc.writeMem(0xd138, { 0x53 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x4330, gbc.sp());
        EXPECT(0xd139, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x53, gbc.readMem(0xd138));
        // 53 000A
        gbc.setState(0xb102, 0x92ad, 0x8ef0, 0x60de, 0xb23e, 0xbfd8, 0x1, 0x1);
        gbc.writeMem(0xb102, { 0x53 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x92ad, gbc.sp());
        EXPECT(0xb103, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x53, gbc.readMem(0xb102));
        // 53 000B
        gbc.setState(0x2843, 0x685f, 0xa770, 0xd41c, 0xf78a, 0x8a79, 0x0, 0x1);
        gbc.writeMem(0x2843, { 0x53 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x685f, gbc.sp());
        EXPECT(0x2844, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 53 000C
        gbc.setState(0x34e0, 0x397, 0x13c0, 0x1a38, 0x7ef4, 0x54dc, 0x0, 0x1);
        gbc.writeMem(0x34e0, { 0x53 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x397, gbc.sp());
        EXPECT(0x34e1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 53 000D
        gbc.setState(0xbfcb, 0x4508, 0x860, 0x7e83, 0x78e6, 0xb3ec, 0x0, 0x0);
        gbc.writeMem(0xbfcb, { 0x53 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x4508, gbc.sp());
        EXPECT(0xbfcc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x53, gbc.readMem(0xbfcb));
        // 53 000E
        gbc.setState(0xe6b2, 0xbb3b, 0x99a0, 0xcceb, 0xe4a8, 0x70d9, 0x0, 0x0);
        gbc.writeMem(0xe6b2, { 0x53 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0xbb3b, gbc.sp());
        EXPECT(0xe6b3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x53, gbc.readMem(0xe6b2));
        // 53 0010
        gbc.setState(0xa58a, 0xd991, 0x5350, 0x593f, 0xa290, 0xd89a, 0x1, 0x0);
        gbc.writeMem(0xa58a, { 0x53 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0xd991, gbc.sp());
        EXPECT(0xa58b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x53, gbc.readMem(0xa58a));
        // 53 0012
        gbc.setState(0x6847, 0x5560, 0x8120, 0x12a, 0x1448, 0xe3ba, 0x1, 0x1);
        gbc.writeMem(0x6847, { 0x53 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0x5560, gbc.sp());
        EXPECT(0x6848, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 53 0013
        gbc.setState(0x8146, 0xca7b, 0xd5d0, 0x2566, 0xe03d, 0x838e, 0x1, 0x0);
        gbc.writeMem(0x8146, { 0x53 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0xca7b, gbc.sp());
        EXPECT(0x8147, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x53, gbc.readMem(0x8146));
        // 53 0014
        gbc.setState(0x6ee3, 0x6113, 0xf840, 0xaa38, 0x86e5, 0xfb30, 0x1, 0x0);
        gbc.writeMem(0x6ee3, { 0x53 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x6113, gbc.sp());
        EXPECT(0x6ee4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 53 0015
        gbc.setState(0x5093, 0xa402, 0xcf70, 0x4529, 0x5daf, 0x4b0b, 0x1, 0x1);
        gbc.writeMem(0x5093, { 0x53 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0xa402, gbc.sp());
        EXPECT(0x5094, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 53 0016
        gbc.setState(0xb439, 0x7c5f, 0x9100, 0xec61, 0x5d9f, 0x7d15, 0x1, 0x1);
        gbc.writeMem(0xb439, { 0x53 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x7c5f, gbc.sp());
        EXPECT(0xb43a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x53, gbc.readMem(0xb439));
        // 53 0017
        gbc.setState(0xe9b5, 0x27ba, 0xeb60, 0xa5bd, 0xa41c, 0x1364, 0x1, 0x0);
        gbc.writeMem(0xe9b5, { 0x53 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x27ba, gbc.sp());
        EXPECT(0xe9b6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x53, gbc.readMem(0xe9b5));
        // 53 0018
        gbc.setState(0xdb5b, 0xb822, 0xff00, 0x15bc, 0x9630, 0x94c, 0x1, 0x0);
        gbc.writeMem(0xdb5b, { 0x53 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0xb822, gbc.sp());
        EXPECT(0xdb5c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x53, gbc.readMem(0xdb5b));
        // 53 0019
        gbc.setState(0xab63, 0xa23, 0x1520, 0xcb71, 0xca0f, 0xf1b5, 0x0, 0x1);
        gbc.writeMem(0xab63, { 0x53 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0xa23, gbc.sp());
        EXPECT(0xab64, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x53, gbc.readMem(0xab63));
        // 53 001A
        gbc.setState(0x4df2, 0xa70, 0xe400, 0x6825, 0xd677, 0xa3c3, 0x0, 0x0);
        gbc.writeMem(0x4df2, { 0x53 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0xa70, gbc.sp());
        EXPECT(0x4df3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 53 001B
        gbc.setState(0x655a, 0x2441, 0x2f20, 0x97bc, 0xef27, 0x134b, 0x0, 0x1);
        gbc.writeMem(0x655a, { 0x53 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x2441, gbc.sp());
        EXPECT(0x655b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 53 001C
        gbc.setState(0x37df, 0xdecc, 0x86c0, 0xbc, 0x82cf, 0x6351, 0x0, 0x0);
        gbc.writeMem(0x37df, { 0x53 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0xdecc, gbc.sp());
        EXPECT(0x37e0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 53 001D
        gbc.setState(0xcb96, 0x2324, 0xaf30, 0x1355, 0x5105, 0x5ac8, 0x0, 0x0);
        gbc.writeMem(0xcb96, { 0x53 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x2324, gbc.sp());
        EXPECT(0xcb97, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x53, gbc.readMem(0xcb96));
        // 53 001E
        gbc.setState(0x1a61, 0x39c2, 0xcc10, 0x535b, 0xefcb, 0xb7bf, 0x1, 0x1);
        gbc.writeMem(0x1a61, { 0x53 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x39c2, gbc.sp());
        EXPECT(0x1a62, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 53 001F
        gbc.setState(0x13d0, 0x899, 0xf5b0, 0x9f76, 0xd483, 0xb082, 0x0, 0x1);
        gbc.writeMem(0x13d0, { 0x53 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x899, gbc.sp());
        EXPECT(0x13d1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 53 0020
        gbc.setState(0x3bbf, 0x2011, 0x3060, 0xa058, 0x9109, 0x63bc, 0x1, 0x0);
        gbc.writeMem(0x3bbf, { 0x53 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x2011, gbc.sp());
        EXPECT(0x3bc0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 53 0021
        gbc.setState(0x1073, 0xca7e, 0x45d0, 0x4fa3, 0x1af5, 0x9b53, 0x0, 0x0);
        gbc.writeMem(0x1073, { 0x53 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0xca7e, gbc.sp());
        EXPECT(0x1074, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 53 0022
        gbc.setState(0x9642, 0x3a03, 0x63f0, 0x5860, 0x7d7d, 0xb932, 0x1, 0x1);
        gbc.writeMem(0x9642, { 0x53 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x3a03, gbc.sp());
        EXPECT(0x9643, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x53, gbc.readMem(0x9642));
        // 53 0023
        gbc.setState(0x7214, 0xc956, 0xf070, 0x610f, 0xfc7c, 0xb0fc, 0x1, 0x0);
        gbc.writeMem(0x7214, { 0x53 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0xc956, gbc.sp());
        EXPECT(0x7215, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 53 0024
        gbc.setState(0x9b8d, 0xcbf2, 0xd2a0, 0xac3e, 0x6dae, 0x1aec, 0x1, 0x0);
        gbc.writeMem(0x9b8d, { 0x53 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0xcbf2, gbc.sp());
        EXPECT(0x9b8e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x53, gbc.readMem(0x9b8d));
        // 53 0025
        gbc.setState(0x350f, 0x393c, 0x1c40, 0xc826, 0x6b58, 0xfaec, 0x0, 0x1);
        gbc.writeMem(0x350f, { 0x53 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x393c, gbc.sp());
        EXPECT(0x3510, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 53 0026
        gbc.setState(0xabca, 0x5656, 0xccd0, 0x814f, 0x43cd, 0xf6b2, 0x0, 0x0);
        gbc.writeMem(0xabca, { 0x53 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x5656, gbc.sp());
        EXPECT(0xabcb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x53, gbc.readMem(0xabca));
        // 53 0027
        gbc.setState(0x42b6, 0xe813, 0x2260, 0xda4e, 0xdf52, 0x1bfd, 0x1, 0x1);
        gbc.writeMem(0x42b6, { 0x53 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0xe813, gbc.sp());
        EXPECT(0x42b7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 53 0028
        gbc.setState(0x1e72, 0x2c60, 0x230, 0xd7ae, 0x6a57, 0x9803, 0x1, 0x1);
        gbc.writeMem(0x1e72, { 0x53 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x2c60, gbc.sp());
        EXPECT(0x1e73, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 53 0029
        gbc.setState(0xcf25, 0x7bea, 0x9db0, 0xae61, 0xb8e6, 0x1e8f, 0x1, 0x0);
        gbc.writeMem(0xcf25, { 0x53 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x7bea, gbc.sp());
        EXPECT(0xcf26, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x53, gbc.readMem(0xcf25));
        // 53 002A
        gbc.setState(0x7a80, 0x5bda, 0xda00, 0x4679, 0x63b8, 0xd437, 0x0, 0x1);
        gbc.writeMem(0x7a80, { 0x53 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x5bda, gbc.sp());
        EXPECT(0x7a81, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 53 002B
        gbc.setState(0xaedc, 0xe799, 0x85d0, 0x93a6, 0xa0e9, 0x6d4d, 0x1, 0x0);
        gbc.writeMem(0xaedc, { 0x53 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0xe799, gbc.sp());
        EXPECT(0xaedd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x53, gbc.readMem(0xaedc));
        // 53 002C
        gbc.setState(0x1983, 0xd6c6, 0x6d70, 0x69c2, 0x50e8, 0xfc71, 0x1, 0x0);
        gbc.writeMem(0x1983, { 0x53 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0xd6c6, gbc.sp());
        EXPECT(0x1984, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 53 002D
        gbc.setState(0x9180, 0xace8, 0x1ba0, 0x14b, 0xd44f, 0xb1a9, 0x1, 0x0);
        gbc.writeMem(0x9180, { 0x53 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0xace8, gbc.sp());
        EXPECT(0x9181, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x53, gbc.readMem(0x9180));
        // 53 002E
        gbc.setState(0xa30e, 0xa11f, 0xa580, 0x765a, 0x10cf, 0x181f, 0x1, 0x1);
        gbc.writeMem(0xa30e, { 0x53 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0xa11f, gbc.sp());
        EXPECT(0xa30f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x53, gbc.readMem(0xa30e));
        // 53 002F
        gbc.setState(0xa4d4, 0xb73e, 0xc390, 0xb514, 0x8599, 0x3bb2, 0x1, 0x1);
        gbc.writeMem(0xa4d4, { 0x53 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0xb73e, gbc.sp());
        EXPECT(0xa4d5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x53, gbc.readMem(0xa4d4));
        // 53 0030
        gbc.setState(0x4f07, 0xd4a3, 0x91a0, 0x9492, 0x7fa, 0x509a, 0x0, 0x1);
        gbc.writeMem(0x4f07, { 0x53 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0xd4a3, gbc.sp());
        EXPECT(0x4f08, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 53 0031
        gbc.setState(0x34ad, 0xb4fe, 0xd370, 0xfc3f, 0x32d6, 0x2a33, 0x0, 0x1);
        gbc.writeMem(0x34ad, { 0x53 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0xb4fe, gbc.sp());
        EXPECT(0x34ae, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 53 0032
        gbc.setState(0xee8f, 0x19e8, 0x5500, 0x3c5c, 0x855f, 0x7cbe, 0x1, 0x1);
        gbc.writeMem(0xee8f, { 0x53 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0x19e8, gbc.sp());
        EXPECT(0xee90, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x53, gbc.readMem(0xee8f));
        // 53 0033
        gbc.setState(0x5570, 0xabf9, 0x85c0, 0xfd11, 0xffe9, 0x61be, 0x1, 0x1);
        gbc.writeMem(0x5570, { 0x53 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0xabf9, gbc.sp());
        EXPECT(0x5571, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 53 0034
        gbc.setState(0x9dac, 0x65e6, 0x1540, 0x2ece, 0xc0b5, 0xc3c3, 0x0, 0x1);
        gbc.writeMem(0x9dac, { 0x53 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x65e6, gbc.sp());
        EXPECT(0x9dad, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x53, gbc.readMem(0x9dac));
        // 53 0035
        gbc.setState(0xae32, 0x9aef, 0xbcc0, 0x33ce, 0x2d24, 0xaaf0, 0x1, 0x0);
        gbc.writeMem(0xae32, { 0x53 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x9aef, gbc.sp());
        EXPECT(0xae33, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x53, gbc.readMem(0xae32));
        // 53 0036
        gbc.setState(0x101b, 0x2ba5, 0x3ec0, 0xb046, 0xb242, 0xc75d, 0x1, 0x0);
        gbc.writeMem(0x101b, { 0x53 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x2ba5, gbc.sp());
        EXPECT(0x101c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 53 0037
        gbc.setState(0xb5df, 0xbb62, 0x8540, 0x394a, 0x7ca9, 0xb976, 0x1, 0x0);
        gbc.writeMem(0xb5df, { 0x53 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0xbb62, gbc.sp());
        EXPECT(0xb5e0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x53, gbc.readMem(0xb5df));
        // 53 0038
        gbc.setState(0x42b9, 0x7da8, 0x5ee0, 0xd433, 0x6e28, 0x507f, 0x1, 0x1);
        gbc.writeMem(0x42b9, { 0x53 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x7da8, gbc.sp());
        EXPECT(0x42ba, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 53 0039
        gbc.setState(0x66b8, 0xe405, 0xa090, 0xafbb, 0xb88c, 0xc8, 0x1, 0x1);
        gbc.writeMem(0x66b8, { 0x53 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0xe405, gbc.sp());
        EXPECT(0x66b9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 53 003A
        gbc.setState(0x456c, 0x4098, 0x8200, 0x5368, 0xea9f, 0x25f0, 0x0, 0x1);
        gbc.writeMem(0x456c, { 0x53 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x4098, gbc.sp());
        EXPECT(0x456d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 53 003B
        gbc.setState(0x11e7, 0x81dd, 0x55d0, 0x6420, 0x8d5c, 0x25a2, 0x1, 0x1);
        gbc.writeMem(0x11e7, { 0x53 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x81dd, gbc.sp());
        EXPECT(0x11e8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 53 003C
        gbc.setState(0x1dab, 0xcea3, 0x80e0, 0xa14e, 0x233c, 0x2b1c, 0x0, 0x1);
        gbc.writeMem(0x1dab, { 0x53 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0xcea3, gbc.sp());
        EXPECT(0x1dac, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 53 003D
        gbc.setState(0xbe78, 0x8e85, 0x8510, 0xd8db, 0xdbb5, 0x7953, 0x1, 0x0);
        gbc.writeMem(0xbe78, { 0x53 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x8e85, gbc.sp());
        EXPECT(0xbe79, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x53, gbc.readMem(0xbe78));
        // 53 003E
        gbc.setState(0xa808, 0xc1a6, 0xc1d0, 0xe854, 0x17b0, 0x9c04, 0x0, 0x1);
        gbc.writeMem(0xa808, { 0x53 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0xc1a6, gbc.sp());
        EXPECT(0xa809, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x53, gbc.readMem(0xa808));
        // 53 003F
        gbc.setState(0xa45b, 0xb35a, 0x9770, 0xa686, 0xf6b4, 0xdb66, 0x0, 0x1);
        gbc.writeMem(0xa45b, { 0x53 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0xb35a, gbc.sp());
        EXPECT(0xa45c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x53, gbc.readMem(0xa45b));
        // 53 0040
        gbc.setState(0x9858, 0xe502, 0xa510, 0xa920, 0x5be3, 0xbb17, 0x1, 0x1);
        gbc.writeMem(0x9858, { 0x53 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0xe502, gbc.sp());
        EXPECT(0x9859, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x53, gbc.readMem(0x9858));
        // 53 0041
        gbc.setState(0xc657, 0xff5d, 0x3e20, 0x13da, 0x3ba0, 0x6d56, 0x0, 0x1);
        gbc.writeMem(0xc657, { 0x53 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0xff5d, gbc.sp());
        EXPECT(0xc658, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x53, gbc.readMem(0xc657));
        // 53 0042
        gbc.setState(0x5e79, 0x7a1d, 0x2ca0, 0x89c9, 0xe734, 0x45fd, 0x1, 0x1);
        gbc.writeMem(0x5e79, { 0x53 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x7a1d, gbc.sp());
        EXPECT(0x5e7a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 53 0044
        gbc.setState(0x4944, 0x6cbd, 0xd80, 0xfefc, 0xe0ca, 0x7dd0, 0x0, 0x1);
        gbc.writeMem(0x4944, { 0x53 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x6cbd, gbc.sp());
        EXPECT(0x4945, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 53 0045
        gbc.setState(0xefed, 0x31e6, 0x1b00, 0x458f, 0x3ba, 0x97bf, 0x0, 0x1);
        gbc.writeMem(0xefed, { 0x53 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x31e6, gbc.sp());
        EXPECT(0xefee, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x53, gbc.readMem(0xefed));
        // 53 0046
        gbc.setState(0x8ec7, 0xf4a0, 0x23f0, 0x7062, 0x9a6e, 0xf7e2, 0x1, 0x0);
        gbc.writeMem(0x8ec7, { 0x53 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0xf4a0, gbc.sp());
        EXPECT(0x8ec8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x53, gbc.readMem(0x8ec7));
        // 53 0047
        gbc.setState(0xd29, 0x1e64, 0xe450, 0x9fe3, 0xe10f, 0x9551, 0x0, 0x0);
        gbc.writeMem(0xd29, { 0x53 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x1e64, gbc.sp());
        EXPECT(0xd2a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 53 0048
        gbc.setState(0x9ef0, 0x8c80, 0x3330, 0x3d82, 0x65d9, 0x447a, 0x1, 0x1);
        gbc.writeMem(0x9ef0, { 0x53 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x8c80, gbc.sp());
        EXPECT(0x9ef1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x53, gbc.readMem(0x9ef0));
        // 53 0049
        gbc.setState(0x9004, 0x41bf, 0x6550, 0xe41d, 0x36d6, 0xe4bc, 0x0, 0x1);
        gbc.writeMem(0x9004, { 0x53 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x41bf, gbc.sp());
        EXPECT(0x9005, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x53, gbc.readMem(0x9004));
        // 53 004A
        gbc.setState(0x9bc9, 0x3aba, 0x33f0, 0xbe66, 0xfa1f, 0x47c9, 0x0, 0x0);
        gbc.writeMem(0x9bc9, { 0x53 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x3aba, gbc.sp());
        EXPECT(0x9bca, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x53, gbc.readMem(0x9bc9));
        // 53 004B
        gbc.setState(0x936d, 0xf88, 0xb360, 0xb77e, 0xd270, 0x92eb, 0x1, 0x1);
        gbc.writeMem(0x936d, { 0x53 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0xf88, gbc.sp());
        EXPECT(0x936e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x53, gbc.readMem(0x936d));
        // 53 004C
        gbc.setState(0x38a, 0x8155, 0xe1b0, 0xdc9e, 0x6ed3, 0x2445, 0x1, 0x1);
        gbc.writeMem(0x38a, { 0x53 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x8155, gbc.sp());
        EXPECT(0x38b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 53 004D
        gbc.setState(0x6525, 0x81db, 0x34d0, 0x3e12, 0x493a, 0xff05, 0x0, 0x1);
        gbc.writeMem(0x6525, { 0x53 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x81db, gbc.sp());
        EXPECT(0x6526, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 53 004E
        gbc.setState(0x236d, 0xe0d5, 0x80c0, 0xe342, 0xb7c4, 0x2468, 0x1, 0x1);
        gbc.writeMem(0x236d, { 0x53 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0xe0d5, gbc.sp());
        EXPECT(0x236e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 53 004F
        gbc.setState(0xefd5, 0x67d4, 0xaa10, 0xff38, 0x3407, 0x1f6c, 0x0, 0x1);
        gbc.writeMem(0xefd5, { 0x53 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x67d4, gbc.sp());
        EXPECT(0xefd6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x53, gbc.readMem(0xefd5));
        // 53 0050
        gbc.setState(0x52b8, 0x10b6, 0x1cd0, 0x673a, 0x7072, 0xd92f, 0x0, 0x1);
        gbc.writeMem(0x52b8, { 0x53 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x10b6, gbc.sp());
        EXPECT(0x52b9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 53 0051
        gbc.setState(0x4560, 0x9a8e, 0xaad0, 0xbfa5, 0xe822, 0xd74, 0x1, 0x0);
        gbc.writeMem(0x4560, { 0x53 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x9a8e, gbc.sp());
        EXPECT(0x4561, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 53 0052
        gbc.setState(0x7e9a, 0xc431, 0x8300, 0x8a8e, 0x93e7, 0x6e73, 0x0, 0x0);
        gbc.writeMem(0x7e9a, { 0x53 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0xc431, gbc.sp());
        EXPECT(0x7e9b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 53 0053
        gbc.setState(0x2da6, 0x5182, 0x9aa0, 0x84d1, 0xe5b5, 0x2884, 0x0, 0x1);
        gbc.writeMem(0x2da6, { 0x53 });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x5182, gbc.sp());
        EXPECT(0x2da7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 53 0054
        gbc.setState(0xdbf5, 0xda7e, 0x6450, 0xe789, 0x9784, 0x5d4a, 0x0, 0x1);
        gbc.writeMem(0xdbf5, { 0x53 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0xda7e, gbc.sp());
        EXPECT(0xdbf6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x53, gbc.readMem(0xdbf5));
        // 53 0055
        gbc.setState(0x78ec, 0xb54a, 0x7320, 0xffdf, 0xd3f7, 0xea00, 0x0, 0x0);
        gbc.writeMem(0x78ec, { 0x53 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0xb54a, gbc.sp());
        EXPECT(0x78ed, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 53 0056
        gbc.setState(0x29f9, 0xe94c, 0xbe90, 0x2f73, 0xb6db, 0x80b, 0x0, 0x0);
        gbc.writeMem(0x29f9, { 0x53 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0xe94c, gbc.sp());
        EXPECT(0x29fa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 53 0057
        gbc.setState(0xce50, 0x4808, 0xee90, 0x6096, 0xd190, 0x975a, 0x0, 0x1);
        gbc.writeMem(0xce50, { 0x53 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x4808, gbc.sp());
        EXPECT(0xce51, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x53, gbc.readMem(0xce50));
        // 53 0058
        gbc.setState(0x1397, 0x1625, 0x33a0, 0xd064, 0x3d8, 0x649f, 0x1, 0x0);
        gbc.writeMem(0x1397, { 0x53 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x1625, gbc.sp());
        EXPECT(0x1398, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 53 0059
        gbc.setState(0x4778, 0x37df, 0xafe0, 0x5af4, 0x8d19, 0x1bf4, 0x0, 0x0);
        gbc.writeMem(0x4778, { 0x53 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x37df, gbc.sp());
        EXPECT(0x4779, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 53 005A
        gbc.setState(0x5960, 0x8ef4, 0x3fa0, 0x589b, 0x4682, 0xac85, 0x0, 0x1);
        gbc.writeMem(0x5960, { 0x53 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x8ef4, gbc.sp());
        EXPECT(0x5961, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 53 005B
        gbc.setState(0x7016, 0xad47, 0x24e0, 0xad54, 0x82ce, 0xb8e7, 0x1, 0x0);
        gbc.writeMem(0x7016, { 0x53 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0xad47, gbc.sp());
        EXPECT(0x7017, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 53 005C
        gbc.setState(0xacc6, 0x30b8, 0x7cc0, 0xdc10, 0xa2cf, 0xe7c1, 0x0, 0x1);
        gbc.writeMem(0xacc6, { 0x53 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x30b8, gbc.sp());
        EXPECT(0xacc7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x53, gbc.readMem(0xacc6));
        // 53 005D
        gbc.setState(0x47a6, 0x7979, 0x94f0, 0x850e, 0xa4d5, 0x727d, 0x0, 0x0);
        gbc.writeMem(0x47a6, { 0x53 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x7979, gbc.sp());
        EXPECT(0x47a7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 53 005E
        gbc.setState(0x26b, 0xc281, 0x5600, 0x51b2, 0xf8d3, 0x5bbe, 0x0, 0x0);
        gbc.writeMem(0x26b, { 0x53 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0xc281, gbc.sp());
        EXPECT(0x26c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 53 005F
        gbc.setState(0xd8a1, 0x2365, 0x35f0, 0x33a, 0x9950, 0x6b74, 0x0, 0x1);
        gbc.writeMem(0xd8a1, { 0x53 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x2365, gbc.sp());
        EXPECT(0xd8a2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x53, gbc.readMem(0xd8a1));
        // 53 0060
        gbc.setState(0x88ef, 0xde80, 0xe0d0, 0x3b0a, 0x7982, 0xe094, 0x0, 0x0);
        gbc.writeMem(0x88ef, { 0x53 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0xde80, gbc.sp());
        EXPECT(0x88f0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x53, gbc.readMem(0x88ef));
        // 53 0061
        gbc.setState(0xb79a, 0x839a, 0x52e0, 0x74b6, 0x8f8c, 0x301e, 0x0, 0x1);
        gbc.writeMem(0xb79a, { 0x53 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x839a, gbc.sp());
        EXPECT(0xb79b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x53, gbc.readMem(0xb79a));
        // 53 0062
        gbc.setState(0xc9e4, 0x5353, 0x3970, 0x7c68, 0xe15c, 0x3635, 0x1, 0x1);
        gbc.writeMem(0xc9e4, { 0x53 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x5353, gbc.sp());
        EXPECT(0xc9e5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x53, gbc.readMem(0xc9e4));
        // 53 0063
        gbc.setState(0xb703, 0xb0e4, 0x41f0, 0x439a, 0xe175, 0xe3f3, 0x0, 0x1);
        gbc.writeMem(0xb703, { 0x53 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0xb0e4, gbc.sp());
        EXPECT(0xb704, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x53, gbc.readMem(0xb703));
        // 53 0064
        gbc.setState(0xeb07, 0xc247, 0x7830, 0xdc24, 0x78ea, 0xacdb, 0x0, 0x0);
        gbc.writeMem(0xeb07, { 0x53 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0xc247, gbc.sp());
        EXPECT(0xeb08, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x53, gbc.readMem(0xeb07));
        // 53 0065
        gbc.setState(0x3c3a, 0x78e1, 0x190, 0xae8f, 0x6d61, 0x85d8, 0x0, 0x0);
        gbc.writeMem(0x3c3a, { 0x53 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x78e1, gbc.sp());
        EXPECT(0x3c3b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 53 0066
        gbc.setState(0x12d6, 0x415b, 0x30d0, 0x1f18, 0x65cb, 0xd0d9, 0x1, 0x1);
        gbc.writeMem(0x12d6, { 0x53 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x415b, gbc.sp());
        EXPECT(0x12d7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 53 0067
        gbc.setState(0xdba1, 0xfeb2, 0x4a10, 0xb9f7, 0x1adb, 0x946b, 0x0, 0x0);
        gbc.writeMem(0xdba1, { 0x53 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0xfeb2, gbc.sp());
        EXPECT(0xdba2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x53, gbc.readMem(0xdba1));
        // 53 0069
        gbc.setState(0x3232, 0xcbaa, 0xaf20, 0x924a, 0x2837, 0x2d26, 0x1, 0x1);
        gbc.writeMem(0x3232, { 0x53 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0xcbaa, gbc.sp());
        EXPECT(0x3233, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 53 006A
        gbc.setState(0xc72f, 0xe07d, 0x7450, 0x9ddd, 0x9cf8, 0x46fe, 0x0, 0x1);
        gbc.writeMem(0xc72f, { 0x53 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0xe07d, gbc.sp());
        EXPECT(0xc730, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x53, gbc.readMem(0xc72f));
        // 53 006B
        gbc.setState(0x75f2, 0x8968, 0xce50, 0x1f71, 0x295c, 0x7b0e, 0x1, 0x0);
        gbc.writeMem(0x75f2, { 0x53 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x8968, gbc.sp());
        EXPECT(0x75f3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 53 006C
        gbc.setState(0x237e, 0x6615, 0xfe60, 0x6bc0, 0x7f99, 0x6af2, 0x0, 0x0);
        gbc.writeMem(0x237e, { 0x53 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x6615, gbc.sp());
        EXPECT(0x237f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 53 006D
        gbc.setState(0x2abe, 0x9df3, 0x34f0, 0xfacb, 0xd2e7, 0x4f9, 0x1, 0x0);
        gbc.writeMem(0x2abe, { 0x53 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x9df3, gbc.sp());
        EXPECT(0x2abf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 53 006E
        gbc.setState(0x7fb6, 0x8190, 0x72f0, 0x1caf, 0x4797, 0x4cb4, 0x0, 0x1);
        gbc.writeMem(0x7fb6, { 0x53 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x8190, gbc.sp());
        EXPECT(0x7fb7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 53 006F
        gbc.setState(0x2f49, 0xe499, 0xefb0, 0x1f04, 0x7cce, 0x7e64, 0x1, 0x0);
        gbc.writeMem(0x2f49, { 0x53 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0xe499, gbc.sp());
        EXPECT(0x2f4a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 53 0070
        gbc.setState(0x61a5, 0x6aed, 0x1c20, 0xd3f9, 0x9a37, 0xd9e5, 0x1, 0x0);
        gbc.writeMem(0x61a5, { 0x53 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x6aed, gbc.sp());
        EXPECT(0x61a6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 53 0071
        gbc.setState(0xb414, 0xd513, 0x460, 0xc61, 0xb450, 0xbc46, 0x1, 0x0);
        gbc.writeMem(0xb414, { 0x53 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0xd513, gbc.sp());
        EXPECT(0xb415, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x53, gbc.readMem(0xb414));
        // 53 0072
        gbc.setState(0xd0ca, 0xbc4b, 0x14b0, 0xdfb3, 0xc84a, 0x64ab, 0x0, 0x1);
        gbc.writeMem(0xd0ca, { 0x53 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0xbc4b, gbc.sp());
        EXPECT(0xd0cb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x53, gbc.readMem(0xd0ca));
        // 53 0073
        gbc.setState(0xea8b, 0xf07f, 0x4aa0, 0x4cec, 0x6225, 0x76d9, 0x0, 0x1);
        gbc.writeMem(0xea8b, { 0x53 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0xf07f, gbc.sp());
        EXPECT(0xea8c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x53, gbc.readMem(0xea8b));
        // 53 0074
        gbc.setState(0x2ae, 0xdee1, 0x10b0, 0xe528, 0x101f, 0xcf4, 0x0, 0x1);
        gbc.writeMem(0x2ae, { 0x53 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0xdee1, gbc.sp());
        EXPECT(0x2af, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 53 0075
        gbc.setState(0x6b0d, 0x252a, 0x4520, 0x8a7f, 0xa849, 0x9d1c, 0x0, 0x0);
        gbc.writeMem(0x6b0d, { 0x53 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x252a, gbc.sp());
        EXPECT(0x6b0e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 53 0076
        gbc.setState(0x3dfb, 0x2e7c, 0x45f0, 0xe2d8, 0xb400, 0x115e, 0x1, 0x1);
        gbc.writeMem(0x3dfb, { 0x53 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x2e7c, gbc.sp());
        EXPECT(0x3dfc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 53 0077
        gbc.setState(0xa1bc, 0x16be, 0x48d0, 0x21b4, 0x2b8e, 0x49c3, 0x1, 0x1);
        gbc.writeMem(0xa1bc, { 0x53 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x16be, gbc.sp());
        EXPECT(0xa1bd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x53, gbc.readMem(0xa1bc));
        // 53 0078
        gbc.setState(0x897d, 0xbc59, 0x3e20, 0xcd61, 0x9534, 0xd3d3, 0x1, 0x1);
        gbc.writeMem(0x897d, { 0x53 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0xbc59, gbc.sp());
        EXPECT(0x897e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x53, gbc.readMem(0x897d));
        // 53 0079
        gbc.setState(0xbfb9, 0x8ca1, 0xfad0, 0xc574, 0xf90a, 0xe29e, 0x0, 0x0);
        gbc.writeMem(0xbfb9, { 0x53 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x8ca1, gbc.sp());
        EXPECT(0xbfba, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x53, gbc.readMem(0xbfb9));
        // 53 007A
        gbc.setState(0x5a1e, 0xf1b4, 0x8bb0, 0xc3f0, 0x2c99, 0xa114, 0x1, 0x0);
        gbc.writeMem(0x5a1e, { 0x53 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0xf1b4, gbc.sp());
        EXPECT(0x5a1f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 53 007B
        gbc.setState(0x875c, 0x13e0, 0xe5f0, 0x19ad, 0x6da8, 0x4747, 0x1, 0x1);
        gbc.writeMem(0x875c, { 0x53 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x13e0, gbc.sp());
        EXPECT(0x875d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x53, gbc.readMem(0x875c));
        // 53 007C
        gbc.setState(0x7395, 0xdb4a, 0xb970, 0x732c, 0x1c50, 0x2196, 0x0, 0x1);
        gbc.writeMem(0x7395, { 0x53 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0xdb4a, gbc.sp());
        EXPECT(0x7396, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 53 007D
        gbc.setState(0x5dff, 0x913c, 0xe610, 0x1e76, 0xf240, 0xdd40, 0x1, 0x1);
        gbc.writeMem(0x5dff, { 0x53 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x913c, gbc.sp());
        EXPECT(0x5e00, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 53 007E
        gbc.setState(0x48a2, 0x61b8, 0x9f10, 0x2b38, 0xefd9, 0xf2ab, 0x1, 0x0);
        gbc.writeMem(0x48a2, { 0x53 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x61b8, gbc.sp());
        EXPECT(0x48a3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 53 007F
        gbc.setState(0x7f39, 0xb6c3, 0xf600, 0xf624, 0x9f84, 0x8a6c, 0x1, 0x0);
        gbc.writeMem(0x7f39, { 0x53 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0xb6c3, gbc.sp());
        EXPECT(0x7f3a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 53 0080
        gbc.setState(0x1bc8, 0x8d94, 0x60d0, 0xe2fe, 0x454a, 0x608b, 0x0, 0x0);
        gbc.writeMem(0x1bc8, { 0x53 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x8d94, gbc.sp());
        EXPECT(0x1bc9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 53 0081
        gbc.setState(0xa73d, 0x17fd, 0x75f0, 0x696f, 0x3b64, 0x8f1d, 0x1, 0x0);
        gbc.writeMem(0xa73d, { 0x53 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x17fd, gbc.sp());
        EXPECT(0xa73e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x53, gbc.readMem(0xa73d));
        // 53 0082
        gbc.setState(0x1b2c, 0x126e, 0x4a80, 0x64e3, 0xb517, 0xf5a, 0x1, 0x1);
        gbc.writeMem(0x1b2c, { 0x53 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x126e, gbc.sp());
        EXPECT(0x1b2d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 53 0083
        gbc.setState(0x4ac4, 0xcd41, 0x2310, 0x1567, 0x8606, 0x9fa9, 0x0, 0x1);
        gbc.writeMem(0x4ac4, { 0x53 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0xcd41, gbc.sp());
        EXPECT(0x4ac5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 53 0084
        gbc.setState(0x1176, 0xfd55, 0xff50, 0xd9a9, 0xb38e, 0x2200, 0x0, 0x0);
        gbc.writeMem(0x1176, { 0x53 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0xfd55, gbc.sp());
        EXPECT(0x1177, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 53 0085
        gbc.setState(0x5c8e, 0xf7f6, 0x11c0, 0x4918, 0x9270, 0x351f, 0x0, 0x1);
        gbc.writeMem(0x5c8e, { 0x53 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0xf7f6, gbc.sp());
        EXPECT(0x5c8f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 53 0086
        gbc.setState(0x7fec, 0x34da, 0xdbb0, 0xfeba, 0x8e5d, 0xab72, 0x0, 0x1);
        gbc.writeMem(0x7fec, { 0x53 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x34da, gbc.sp());
        EXPECT(0x7fed, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 53 0087
        gbc.setState(0x7b0, 0x4d5d, 0x9ad0, 0x9cbb, 0x133a, 0xf2c2, 0x0, 0x0);
        gbc.writeMem(0x7b0, { 0x53 });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x4d5d, gbc.sp());
        EXPECT(0x7b1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 53 0088
        gbc.setState(0xd0fd, 0xc97, 0xdcf0, 0x6be8, 0xaaa4, 0xfc36, 0x1, 0x0);
        gbc.writeMem(0xd0fd, { 0x53 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0xc97, gbc.sp());
        EXPECT(0xd0fe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x53, gbc.readMem(0xd0fd));
        // 53 0089
        gbc.setState(0xa6b4, 0xd023, 0x2940, 0x3f5, 0x5cb6, 0x9b44, 0x0, 0x1);
        gbc.writeMem(0xa6b4, { 0x53 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0xd023, gbc.sp());
        EXPECT(0xa6b5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x53, gbc.readMem(0xa6b4));
        // 53 008B
        gbc.setState(0xe8bd, 0x501a, 0x110, 0x36d5, 0x9f6d, 0x23b, 0x1, 0x1);
        gbc.writeMem(0xe8bd, { 0x53 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x501a, gbc.sp());
        EXPECT(0xe8be, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x53, gbc.readMem(0xe8bd));
        // 53 008C
        gbc.setState(0xca3, 0xe7e1, 0x8b10, 0x4717, 0x3d50, 0x95bf, 0x0, 0x1);
        gbc.writeMem(0xca3, { 0x53 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0xe7e1, gbc.sp());
        EXPECT(0xca4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 53 008D
        gbc.setState(0x3bc0, 0x9fe0, 0xa4a0, 0xebf7, 0xa9f2, 0x8123, 0x1, 0x0);
        gbc.writeMem(0x3bc0, { 0x53 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x9fe0, gbc.sp());
        EXPECT(0x3bc1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 53 008E
        gbc.setState(0x939d, 0x122e, 0x4a00, 0x7e75, 0x5b14, 0xde4a, 0x0, 0x1);
        gbc.writeMem(0x939d, { 0x53 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x122e, gbc.sp());
        EXPECT(0x939e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x53, gbc.readMem(0x939d));
        // 53 008F
        gbc.setState(0x9a39, 0x3b64, 0x1d60, 0x4d3f, 0x7e79, 0x783f, 0x0, 0x0);
        gbc.writeMem(0x9a39, { 0x53 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0x3b64, gbc.sp());
        EXPECT(0x9a3a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x53, gbc.readMem(0x9a39));
        // 53 0090
        gbc.setState(0x1b42, 0xff41, 0xe140, 0xed7d, 0xc254, 0xfbb5, 0x1, 0x0);
        gbc.writeMem(0x1b42, { 0x53 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0xff41, gbc.sp());
        EXPECT(0x1b43, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 53 0091
        gbc.setState(0xcf44, 0x3c52, 0xd590, 0x265f, 0x62a, 0x41c5, 0x1, 0x0);
        gbc.writeMem(0xcf44, { 0x53 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x3c52, gbc.sp());
        EXPECT(0xcf45, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x53, gbc.readMem(0xcf44));
        // 53 0092
        gbc.setState(0xe9d0, 0x3230, 0x66f0, 0xedee, 0x2e7e, 0x1743, 0x0, 0x0);
        gbc.writeMem(0xe9d0, { 0x53 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x3230, gbc.sp());
        EXPECT(0xe9d1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x53, gbc.readMem(0xe9d0));
        // 53 0093
        gbc.setState(0xc92f, 0xdfa4, 0xac40, 0x1d3d, 0x353c, 0x8171, 0x1, 0x1);
        gbc.writeMem(0xc92f, { 0x53 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0xdfa4, gbc.sp());
        EXPECT(0xc930, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x53, gbc.readMem(0xc92f));
        // 53 0094
        gbc.setState(0x617c, 0xaf5c, 0x83e0, 0xaf9c, 0x201c, 0xf68b, 0x0, 0x1);
        gbc.writeMem(0x617c, { 0x53 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0xaf5c, gbc.sp());
        EXPECT(0x617d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 53 0095
        gbc.setState(0x2749, 0xf2cd, 0x4d10, 0xc2fe, 0xb0df, 0xe68f, 0x1, 0x0);
        gbc.writeMem(0x2749, { 0x53 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0xf2cd, gbc.sp());
        EXPECT(0x274a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 53 0096
        gbc.setState(0x1c52, 0x4785, 0x1520, 0x83df, 0x88b0, 0xbc27, 0x1, 0x1);
        gbc.writeMem(0x1c52, { 0x53 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x4785, gbc.sp());
        EXPECT(0x1c53, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 53 0097
        gbc.setState(0x2c3e, 0x3f86, 0x71b0, 0x878e, 0xdf11, 0xda1a, 0x0, 0x0);
        gbc.writeMem(0x2c3e, { 0x53 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x3f86, gbc.sp());
        EXPECT(0x2c3f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 53 0098
        gbc.setState(0x2cf6, 0xc67f, 0x4710, 0x6ba6, 0x4f1d, 0xd6e, 0x0, 0x0);
        gbc.writeMem(0x2cf6, { 0x53 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0xc67f, gbc.sp());
        EXPECT(0x2cf7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 53 0099
        gbc.setState(0x4665, 0x8cd9, 0x84d0, 0x6e08, 0x61a5, 0xb312, 0x1, 0x0);
        gbc.writeMem(0x4665, { 0x53 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x8cd9, gbc.sp());
        EXPECT(0x4666, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 53 009A
        gbc.setState(0x2ffb, 0xd3e2, 0xaba0, 0x70a0, 0xb6ff, 0xfc2c, 0x0, 0x0);
        gbc.writeMem(0x2ffb, { 0x53 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0xd3e2, gbc.sp());
        EXPECT(0x2ffc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 53 009B
        gbc.setState(0xdf42, 0x82c, 0xcb90, 0x29af, 0x2232, 0x29f5, 0x0, 0x1);
        gbc.writeMem(0xdf42, { 0x53 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x82c, gbc.sp());
        EXPECT(0xdf43, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x53, gbc.readMem(0xdf42));
        // 53 009C
        gbc.setState(0xef8, 0x5c2f, 0x4040, 0x2058, 0xc841, 0xdd12, 0x1, 0x1);
        gbc.writeMem(0xef8, { 0x53 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x5c2f, gbc.sp());
        EXPECT(0xef9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 53 009D
        gbc.setState(0x7113, 0x4bdf, 0xab50, 0xac51, 0x2ebd, 0xc1b2, 0x1, 0x1);
        gbc.writeMem(0x7113, { 0x53 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x4bdf, gbc.sp());
        EXPECT(0x7114, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 53 009E
        gbc.setState(0x202c, 0x9d82, 0xfdf0, 0x4d27, 0x85f8, 0x31f8, 0x1, 0x0);
        gbc.writeMem(0x202c, { 0x53 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x9d82, gbc.sp());
        EXPECT(0x202d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 53 009F
        gbc.setState(0x6876, 0xb48a, 0x7c10, 0xe6e2, 0x2bb5, 0x16ad, 0x1, 0x1);
        gbc.writeMem(0x6876, { 0x53 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0xb48a, gbc.sp());
        EXPECT(0x6877, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 53 00A0
        gbc.setState(0x5a50, 0x4e01, 0x2d40, 0xa35e, 0xa793, 0xddb4, 0x1, 0x1);
        gbc.writeMem(0x5a50, { 0x53 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x4e01, gbc.sp());
        EXPECT(0x5a51, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 53 00A2
        gbc.setState(0x6c49, 0x12d4, 0x64b0, 0x5d30, 0xe568, 0x958c, 0x1, 0x1);
        gbc.writeMem(0x6c49, { 0x53 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x12d4, gbc.sp());
        EXPECT(0x6c4a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 53 00A3
        gbc.setState(0xa8, 0x74f, 0x4760, 0x7c8a, 0x8fbd, 0x683b, 0x1, 0x1);
        gbc.writeMem(0xa8, { 0x53 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x74f, gbc.sp());
        EXPECT(0xa9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 53 00A4
        gbc.setState(0x3946, 0x23f9, 0x2b50, 0x1459, 0x4995, 0x287, 0x1, 0x0);
        gbc.writeMem(0x3946, { 0x53 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x23f9, gbc.sp());
        EXPECT(0x3947, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 53 00A5
        gbc.setState(0x9c6f, 0x155a, 0x3b10, 0x4a4a, 0x70a9, 0xe284, 0x1, 0x0);
        gbc.writeMem(0x9c6f, { 0x53 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x155a, gbc.sp());
        EXPECT(0x9c70, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x53, gbc.readMem(0x9c6f));
        // 53 00A6
        gbc.setState(0x5510, 0x5179, 0xce70, 0x4133, 0xa8ef, 0x7145, 0x0, 0x0);
        gbc.writeMem(0x5510, { 0x53 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x5179, gbc.sp());
        EXPECT(0x5511, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 53 00A7
        gbc.setState(0x9b1e, 0xc1ac, 0x82a0, 0xcb90, 0xeb3b, 0xfd08, 0x0, 0x0);
        gbc.writeMem(0x9b1e, { 0x53 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0xc1ac, gbc.sp());
        EXPECT(0x9b1f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x53, gbc.readMem(0x9b1e));
        // 53 00A8
        gbc.setState(0xe51b, 0x4ee4, 0x2690, 0xf8c8, 0xe03c, 0x6bf1, 0x0, 0x0);
        gbc.writeMem(0xe51b, { 0x53 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x4ee4, gbc.sp());
        EXPECT(0xe51c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x53, gbc.readMem(0xe51b));
        // 53 00A9
        gbc.setState(0x54e7, 0x2aa6, 0xb0f0, 0x1920, 0xe340, 0x1953, 0x0, 0x1);
        gbc.writeMem(0x54e7, { 0x53 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x2aa6, gbc.sp());
        EXPECT(0x54e8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 53 00AA
        gbc.setState(0x4b74, 0x3878, 0x2010, 0x4de, 0x8869, 0xec55, 0x1, 0x1);
        gbc.writeMem(0x4b74, { 0x53 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x3878, gbc.sp());
        EXPECT(0x4b75, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 53 00AB
        gbc.setState(0xea63, 0xf765, 0x3b60, 0xd151, 0xa481, 0xdc2a, 0x1, 0x1);
        gbc.writeMem(0xea63, { 0x53 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0xf765, gbc.sp());
        EXPECT(0xea64, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x53, gbc.readMem(0xea63));
        // 53 00AC
        gbc.setState(0x136f, 0xb1d8, 0x430, 0x8534, 0x1660, 0xbe45, 0x0, 0x1);
        gbc.writeMem(0x136f, { 0x53 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0xb1d8, gbc.sp());
        EXPECT(0x1370, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 53 00AD
        gbc.setState(0x7e3a, 0xd807, 0x5ee0, 0x7b26, 0x62c, 0x6f47, 0x1, 0x1);
        gbc.writeMem(0x7e3a, { 0x53 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0xd807, gbc.sp());
        EXPECT(0x7e3b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 53 00AE
        gbc.setState(0xb068, 0xe295, 0xbc90, 0x3468, 0x21a5, 0xa72a, 0x0, 0x1);
        gbc.writeMem(0xb068, { 0x53 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0xe295, gbc.sp());
        EXPECT(0xb069, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x53, gbc.readMem(0xb068));
        // 53 00AF
        gbc.setState(0x4415, 0x4544, 0xabc0, 0x147f, 0x1b09, 0xbc15, 0x1, 0x0);
        gbc.writeMem(0x4415, { 0x53 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x4544, gbc.sp());
        EXPECT(0x4416, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 53 00B0
        gbc.setState(0x4585, 0x264, 0x11f0, 0xa61b, 0xc4d1, 0x3fb9, 0x1, 0x1);
        gbc.writeMem(0x4585, { 0x53 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x264, gbc.sp());
        EXPECT(0x4586, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 53 00B2
        gbc.setState(0x7974, 0x7e18, 0x2020, 0xa7c9, 0x769, 0xca9d, 0x1, 0x1);
        gbc.writeMem(0x7974, { 0x53 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x7e18, gbc.sp());
        EXPECT(0x7975, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 53 00B3
        gbc.setState(0x70a2, 0x2016, 0x9690, 0xcb6, 0x3032, 0x3741, 0x1, 0x1);
        gbc.writeMem(0x70a2, { 0x53 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x2016, gbc.sp());
        EXPECT(0x70a3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 53 00B4
        gbc.setState(0xb8f7, 0x95a, 0x1d10, 0xe174, 0xc80e, 0xa48a, 0x0, 0x0);
        gbc.writeMem(0xb8f7, { 0x53 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x95a, gbc.sp());
        EXPECT(0xb8f8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x53, gbc.readMem(0xb8f7));
        // 53 00B5
        gbc.setState(0x1c0f, 0x76e0, 0xd320, 0xa3df, 0xd4ec, 0x2d7a, 0x1, 0x0);
        gbc.writeMem(0x1c0f, { 0x53 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x76e0, gbc.sp());
        EXPECT(0x1c10, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 53 00B6
        gbc.setState(0x5cbe, 0x8a89, 0x8b10, 0x674f, 0xf930, 0x3b78, 0x1, 0x0);
        gbc.writeMem(0x5cbe, { 0x53 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x8a89, gbc.sp());
        EXPECT(0x5cbf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 53 00B7
        gbc.setState(0x9185, 0xf9a9, 0xcbb0, 0x573b, 0x5a2e, 0x4c9, 0x1, 0x1);
        gbc.writeMem(0x9185, { 0x53 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0xf9a9, gbc.sp());
        EXPECT(0x9186, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x53, gbc.readMem(0x9185));
        // 53 00B8
        gbc.setState(0x6252, 0x52f1, 0x130, 0x9446, 0xa97d, 0x460b, 0x0, 0x1);
        gbc.writeMem(0x6252, { 0x53 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x52f1, gbc.sp());
        EXPECT(0x6253, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 53 00B9
        gbc.setState(0xa158, 0x9973, 0xe970, 0xafcc, 0xaea1, 0x2b5e, 0x1, 0x1);
        gbc.writeMem(0xa158, { 0x53 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x9973, gbc.sp());
        EXPECT(0xa159, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x53, gbc.readMem(0xa158));
        // 53 00BA
        gbc.setState(0xe2e, 0x7fd2, 0x73c0, 0x1e50, 0x9c42, 0x7b1, 0x1, 0x1);
        gbc.writeMem(0xe2e, { 0x53 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x7fd2, gbc.sp());
        EXPECT(0xe2f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 53 00BB
        gbc.setState(0x4c96, 0x79a6, 0x83c0, 0xb1ee, 0xf4, 0x71a6, 0x1, 0x0);
        gbc.writeMem(0x4c96, { 0x53 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x79a6, gbc.sp());
        EXPECT(0x4c97, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 53 00BC
        gbc.setState(0xa280, 0x20d2, 0x9ad0, 0xb7e3, 0x1081, 0xf8d4, 0x0, 0x1);
        gbc.writeMem(0xa280, { 0x53 });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x20d2, gbc.sp());
        EXPECT(0xa281, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x53, gbc.readMem(0xa280));
        // 53 00BD
        gbc.setState(0x7cc7, 0x8f68, 0x52d0, 0x6ceb, 0x8188, 0x107d, 0x1, 0x0);
        gbc.writeMem(0x7cc7, { 0x53 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x8f68, gbc.sp());
        EXPECT(0x7cc8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 53 00BE
        gbc.setState(0x97d3, 0x24f8, 0xf700, 0x4dce, 0xc625, 0x8cb8, 0x0, 0x0);
        gbc.writeMem(0x97d3, { 0x53 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x24f8, gbc.sp());
        EXPECT(0x97d4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x53, gbc.readMem(0x97d3));
        // 53 00BF
        gbc.setState(0x32c7, 0x2890, 0xfee0, 0xfd61, 0x3b63, 0x8b64, 0x1, 0x1);
        gbc.writeMem(0x32c7, { 0x53 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x2890, gbc.sp());
        EXPECT(0x32c8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 53 00C0
        gbc.setState(0x46c3, 0x792a, 0xf9f0, 0xa404, 0xac22, 0x5011, 0x0, 0x1);
        gbc.writeMem(0x46c3, { 0x53 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x792a, gbc.sp());
        EXPECT(0x46c4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 53 00C1
        gbc.setState(0x5969, 0xb7e, 0x8240, 0xae6c, 0x63ee, 0x3300, 0x0, 0x0);
        gbc.writeMem(0x5969, { 0x53 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0xb7e, gbc.sp());
        EXPECT(0x596a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 53 00C2
        gbc.setState(0x5a93, 0x3df5, 0x3270, 0xd1f3, 0xdbf4, 0xf7af, 0x1, 0x0);
        gbc.writeMem(0x5a93, { 0x53 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x3df5, gbc.sp());
        EXPECT(0x5a94, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 53 00C3
        gbc.setState(0x956b, 0xfa95, 0xfc20, 0x5f15, 0xa928, 0x4f5d, 0x0, 0x1);
        gbc.writeMem(0x956b, { 0x53 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0xfa95, gbc.sp());
        EXPECT(0x956c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x53, gbc.readMem(0x956b));
        // 53 00C5
        gbc.setState(0x690f, 0x5704, 0xa1d0, 0xdef3, 0x27ce, 0xae0f, 0x1, 0x1);
        gbc.writeMem(0x690f, { 0x53 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x5704, gbc.sp());
        EXPECT(0x6910, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 53 00C6
        gbc.setState(0xb7e0, 0x9348, 0x5640, 0x8085, 0x4b58, 0xd379, 0x0, 0x0);
        gbc.writeMem(0xb7e0, { 0x53 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x9348, gbc.sp());
        EXPECT(0xb7e1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x53, gbc.readMem(0xb7e0));
        // 53 00C7
        gbc.setState(0x57fa, 0x5b7c, 0xf920, 0xed9d, 0x5514, 0x9f58, 0x1, 0x0);
        gbc.writeMem(0x57fa, { 0x53 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x5b7c, gbc.sp());
        EXPECT(0x57fb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 53 00C8
        gbc.setState(0xcfa5, 0x1394, 0x8910, 0xd095, 0x91a1, 0xba8c, 0x0, 0x1);
        gbc.writeMem(0xcfa5, { 0x53 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x1394, gbc.sp());
        EXPECT(0xcfa6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x53, gbc.readMem(0xcfa5));
        // 53 00C9
        gbc.setState(0x1c7, 0x809, 0x8e50, 0x3e2b, 0x6198, 0xefa1, 0x0, 0x1);
        gbc.writeMem(0x1c7, { 0x53 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x809, gbc.sp());
        EXPECT(0x1c8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 53 00CA
        gbc.setState(0xece1, 0x799b, 0x5450, 0xace2, 0x390b, 0xa1e2, 0x0, 0x0);
        gbc.writeMem(0xece1, { 0x53 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x799b, gbc.sp());
        EXPECT(0xece2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x53, gbc.readMem(0xece1));
        // 53 00CB
        gbc.setState(0x36c8, 0xd706, 0xdb20, 0x1882, 0xb59b, 0x79d0, 0x0, 0x0);
        gbc.writeMem(0x36c8, { 0x53 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0xd706, gbc.sp());
        EXPECT(0x36c9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 53 00CC
        gbc.setState(0x5beb, 0x4dea, 0x20c0, 0xd92d, 0xc198, 0x61cb, 0x1, 0x1);
        gbc.writeMem(0x5beb, { 0x53 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x4dea, gbc.sp());
        EXPECT(0x5bec, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 53 00CD
        gbc.setState(0x2459, 0x46cc, 0xb540, 0x6f67, 0xfe49, 0x49c4, 0x1, 0x1);
        gbc.writeMem(0x2459, { 0x53 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x46cc, gbc.sp());
        EXPECT(0x245a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 53 00CE
        gbc.setState(0xe46b, 0xac93, 0x5fd0, 0xff07, 0x5549, 0xe84e, 0x1, 0x0);
        gbc.writeMem(0xe46b, { 0x53 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0xac93, gbc.sp());
        EXPECT(0xe46c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x53, gbc.readMem(0xe46b));
        // 53 00CF
        gbc.setState(0x83ba, 0xfc0d, 0x3210, 0xaead, 0x6d8d, 0xd4a8, 0x1, 0x0);
        gbc.writeMem(0x83ba, { 0x53 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0xfc0d, gbc.sp());
        EXPECT(0x83bb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x53, gbc.readMem(0x83ba));
        // 53 00D0
        gbc.setState(0x1ab1, 0x97ed, 0x6040, 0x4037, 0x4a5, 0xea9e, 0x1, 0x0);
        gbc.writeMem(0x1ab1, { 0x53 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x97ed, gbc.sp());
        EXPECT(0x1ab2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 53 00D1
        gbc.setState(0xc298, 0x52e6, 0xedd0, 0xf9ef, 0x1e17, 0x1e1a, 0x1, 0x1);
        gbc.writeMem(0xc298, { 0x53 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x52e6, gbc.sp());
        EXPECT(0xc299, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x53, gbc.readMem(0xc298));
        // 53 00D2
        gbc.setState(0x76d5, 0x90e1, 0x8900, 0x3768, 0x230a, 0xf437, 0x1, 0x0);
        gbc.writeMem(0x76d5, { 0x53 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x90e1, gbc.sp());
        EXPECT(0x76d6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 53 00D3
        gbc.setState(0xb93d, 0x48a1, 0xf5c0, 0x2576, 0x3b7b, 0x661c, 0x0, 0x0);
        gbc.writeMem(0xb93d, { 0x53 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x48a1, gbc.sp());
        EXPECT(0xb93e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x53, gbc.readMem(0xb93d));
        // 53 00D4
        gbc.setState(0x5e48, 0xf708, 0xf940, 0x4449, 0xbc6, 0xfb14, 0x1, 0x0);
        gbc.writeMem(0x5e48, { 0x53 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0xf708, gbc.sp());
        EXPECT(0x5e49, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 53 00D5
        gbc.setState(0x5c1f, 0x2cef, 0xa780, 0xfc5f, 0xce3d, 0xc4ae, 0x0, 0x1);
        gbc.writeMem(0x5c1f, { 0x53 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0x2cef, gbc.sp());
        EXPECT(0x5c20, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 53 00D7
        gbc.setState(0x1b0a, 0x2039, 0x5ae0, 0x63a8, 0x7909, 0x7c02, 0x0, 0x0);
        gbc.writeMem(0x1b0a, { 0x53 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x2039, gbc.sp());
        EXPECT(0x1b0b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 53 00D8
        gbc.setState(0xa610, 0x8363, 0xf680, 0x2e3e, 0xd1a5, 0x9d42, 0x1, 0x0);
        gbc.writeMem(0xa610, { 0x53 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x8363, gbc.sp());
        EXPECT(0xa611, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x53, gbc.readMem(0xa610));
        // 53 00D9
        gbc.setState(0x9d49, 0x5b7c, 0x3f30, 0x4928, 0x1011, 0xd0db, 0x0, 0x1);
        gbc.writeMem(0x9d49, { 0x53 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x5b7c, gbc.sp());
        EXPECT(0x9d4a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x53, gbc.readMem(0x9d49));
        // 53 00DA
        gbc.setState(0x21ea, 0x4c79, 0x5340, 0xf047, 0x10ec, 0x2b80, 0x0, 0x0);
        gbc.writeMem(0x21ea, { 0x53 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x4c79, gbc.sp());
        EXPECT(0x21eb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 53 00DB
        gbc.setState(0xd778, 0xf25, 0xfc50, 0x8b00, 0xc52f, 0xb258, 0x0, 0x1);
        gbc.writeMem(0xd778, { 0x53 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0xf25, gbc.sp());
        EXPECT(0xd779, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x53, gbc.readMem(0xd778));
        // 53 00DC
        gbc.setState(0xdbf4, 0xbbf6, 0xa830, 0x17bc, 0xae81, 0x8b8a, 0x1, 0x1);
        gbc.writeMem(0xdbf4, { 0x53 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0xbbf6, gbc.sp());
        EXPECT(0xdbf5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x53, gbc.readMem(0xdbf4));
        // 53 00DD
        gbc.setState(0xbb3e, 0x5af5, 0xcc20, 0xeeba, 0x3bfa, 0x8fbc, 0x1, 0x0);
        gbc.writeMem(0xbb3e, { 0x53 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x5af5, gbc.sp());
        EXPECT(0xbb3f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x53, gbc.readMem(0xbb3e));
        // 53 00DE
        gbc.setState(0x82f7, 0xafaa, 0xcda0, 0x1157, 0xbafd, 0x6754, 0x0, 0x0);
        gbc.writeMem(0x82f7, { 0x53 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0xafaa, gbc.sp());
        EXPECT(0x82f8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x53, gbc.readMem(0x82f7));
        // 53 00DF
        gbc.setState(0x431f, 0x761a, 0x1720, 0x1d47, 0xf23d, 0x7bc, 0x0, 0x0);
        gbc.writeMem(0x431f, { 0x53 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x761a, gbc.sp());
        EXPECT(0x4320, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 53 00E0
        gbc.setState(0x7db3, 0xfff1, 0x66e0, 0xc45b, 0xe9c8, 0x68cc, 0x1, 0x0);
        gbc.writeMem(0x7db3, { 0x53 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0xfff1, gbc.sp());
        EXPECT(0x7db4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 53 00E1
        gbc.setState(0xa8e9, 0xfc77, 0xd9c0, 0x2e50, 0x9d95, 0x6037, 0x1, 0x0);
        gbc.writeMem(0xa8e9, { 0x53 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0xfc77, gbc.sp());
        EXPECT(0xa8ea, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x53, gbc.readMem(0xa8e9));
        // 53 00E2
        gbc.setState(0x6b85, 0x7d9d, 0xbb80, 0x6f00, 0xb179, 0x7c30, 0x0, 0x1);
        gbc.writeMem(0x6b85, { 0x53 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x7d9d, gbc.sp());
        EXPECT(0x6b86, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 53 00E3
        gbc.setState(0xbec, 0x94f3, 0xc230, 0x45f, 0x8870, 0xd1af, 0x0, 0x0);
        gbc.writeMem(0xbec, { 0x53 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x94f3, gbc.sp());
        EXPECT(0xbed, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 53 00E4
        gbc.setState(0x3177, 0x59cd, 0x73d0, 0xdb56, 0xd966, 0x4b44, 0x1, 0x1);
        gbc.writeMem(0x3177, { 0x53 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x59cd, gbc.sp());
        EXPECT(0x3178, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 53 00E5
        gbc.setState(0xccdb, 0xfce8, 0x8030, 0x964e, 0xe985, 0xc13d, 0x1, 0x1);
        gbc.writeMem(0xccdb, { 0x53 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0xfce8, gbc.sp());
        EXPECT(0xccdc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x53, gbc.readMem(0xccdb));
        // 53 00E6
        gbc.setState(0x6cf7, 0x3c09, 0x4b40, 0x1cb5, 0x67b3, 0xb52f, 0x1, 0x0);
        gbc.writeMem(0x6cf7, { 0x53 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x3c09, gbc.sp());
        EXPECT(0x6cf8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 53 00E7
        gbc.setState(0x93df, 0x706d, 0x54c0, 0xe2ce, 0xd77c, 0xdd02, 0x1, 0x1);
        gbc.writeMem(0x93df, { 0x53 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x706d, gbc.sp());
        EXPECT(0x93e0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x53, gbc.readMem(0x93df));
        // 53 00E8
        gbc.setState(0x3759, 0x6d87, 0xc910, 0xf1b4, 0xee41, 0x8039, 0x0, 0x0);
        gbc.writeMem(0x3759, { 0x53 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x6d87, gbc.sp());
        EXPECT(0x375a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 53 00E9
        gbc.setState(0x72d9, 0x28cc, 0x5ae0, 0xf15a, 0x95b9, 0x7bb4, 0x1, 0x0);
        gbc.writeMem(0x72d9, { 0x53 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x28cc, gbc.sp());
        EXPECT(0x72da, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 53 00EA
        gbc.setState(0xb718, 0x1629, 0x6a40, 0xf67e, 0x44ac, 0xdfe1, 0x0, 0x1);
        gbc.writeMem(0xb718, { 0x53 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0x1629, gbc.sp());
        EXPECT(0xb719, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x53, gbc.readMem(0xb718));
        // 53 00EB
        gbc.setState(0xc397, 0xb22e, 0xf820, 0xb817, 0x7983, 0x1705, 0x1, 0x0);
        gbc.writeMem(0xc397, { 0x53 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0xb22e, gbc.sp());
        EXPECT(0xc398, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x53, gbc.readMem(0xc397));
        // 53 00EC
        gbc.setState(0xefaf, 0xaea3, 0x3c50, 0x9e1d, 0xc774, 0x9a35, 0x1, 0x1);
        gbc.writeMem(0xefaf, { 0x53 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0xaea3, gbc.sp());
        EXPECT(0xefb0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x53, gbc.readMem(0xefaf));
        // 53 00ED
        gbc.setState(0x82a3, 0x814f, 0x81d0, 0x9aa3, 0xebaa, 0xd9ea, 0x1, 0x0);
        gbc.writeMem(0x82a3, { 0x53 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x814f, gbc.sp());
        EXPECT(0x82a4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x53, gbc.readMem(0x82a3));
        // 53 00EE
        gbc.setState(0xa98c, 0x9ec7, 0x4300, 0x4d7f, 0x5026, 0x86a1, 0x0, 0x1);
        gbc.writeMem(0xa98c, { 0x53 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x9ec7, gbc.sp());
        EXPECT(0xa98d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x53, gbc.readMem(0xa98c));
        // 53 00F0
        gbc.setState(0x2030, 0xa10d, 0x1d70, 0x1355, 0x7f82, 0x180d, 0x0, 0x0);
        gbc.writeMem(0x2030, { 0x53 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0xa10d, gbc.sp());
        EXPECT(0x2031, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 53 00F1
        gbc.setState(0x2c27, 0x6afe, 0x7410, 0xbc12, 0x6cee, 0xaea9, 0x0, 0x0);
        gbc.writeMem(0x2c27, { 0x53 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x6afe, gbc.sp());
        EXPECT(0x2c28, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 53 00F2
        gbc.setState(0x4d2e, 0x614a, 0xc2d0, 0x582b, 0xb196, 0xa583, 0x0, 0x0);
        gbc.writeMem(0x4d2e, { 0x53 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x614a, gbc.sp());
        EXPECT(0x4d2f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 53 00F3
        gbc.setState(0x3f5c, 0x28c0, 0xb4f0, 0x1b41, 0x67a5, 0xe0c, 0x0, 0x1);
        gbc.writeMem(0x3f5c, { 0x53 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x28c0, gbc.sp());
        EXPECT(0x3f5d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 53 00F4
        gbc.setState(0x8ef, 0x2dcd, 0xe890, 0xfd23, 0x291c, 0x5a9d, 0x1, 0x0);
        gbc.writeMem(0x8ef, { 0x53 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x2dcd, gbc.sp());
        EXPECT(0x8f0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 53 00F5
        gbc.setState(0x63df, 0x4a3a, 0xe920, 0x223a, 0x72bd, 0xaf08, 0x0, 0x0);
        gbc.writeMem(0x63df, { 0x53 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x4a3a, gbc.sp());
        EXPECT(0x63e0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 53 00F6
        gbc.setState(0xd63c, 0x8f1e, 0xf2c0, 0xfcf0, 0xbce0, 0xa2e6, 0x0, 0x0);
        gbc.writeMem(0xd63c, { 0x53 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x8f1e, gbc.sp());
        EXPECT(0xd63d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x53, gbc.readMem(0xd63c));
        // 53 00F7
        gbc.setState(0x7d61, 0xa930, 0x2ef0, 0xac19, 0x5498, 0x4db3, 0x0, 0x1);
        gbc.writeMem(0x7d61, { 0x53 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0xa930, gbc.sp());
        EXPECT(0x7d62, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 53 00F8
        gbc.setState(0xe3c1, 0xe9e0, 0xde40, 0xbcbd, 0x3380, 0xda94, 0x1, 0x1);
        gbc.writeMem(0xe3c1, { 0x53 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0xe9e0, gbc.sp());
        EXPECT(0xe3c2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x53, gbc.readMem(0xe3c1));
        // 53 00F9
        gbc.setState(0xca7b, 0x4cc3, 0xb390, 0x760a, 0xae04, 0xf7ea, 0x1, 0x0);
        gbc.writeMem(0xca7b, { 0x53 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x4cc3, gbc.sp());
        EXPECT(0xca7c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x53, gbc.readMem(0xca7b));
        // 53 00FA
        gbc.setState(0xb9be, 0xe26, 0xd9b0, 0x42b8, 0xb633, 0x2b5b, 0x0, 0x1);
        gbc.writeMem(0xb9be, { 0x53 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0xe26, gbc.sp());
        EXPECT(0xb9bf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x53, gbc.readMem(0xb9be));
        // 53 00FB
        gbc.setState(0xa279, 0x1660, 0xe200, 0x89bb, 0x93cd, 0x51fd, 0x1, 0x1);
        gbc.writeMem(0xa279, { 0x53 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x1660, gbc.sp());
        EXPECT(0xa27a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x53, gbc.readMem(0xa279));
        // 53 00FC
        gbc.setState(0x170, 0x9745, 0xf5d0, 0x8336, 0x1789, 0x9dc6, 0x1, 0x1);
        gbc.writeMem(0x170, { 0x53 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x9745, gbc.sp());
        EXPECT(0x171, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 53 00FE
        gbc.setState(0x94bc, 0x9b47, 0xf700, 0xf20b, 0x4f2, 0xa965, 0x0, 0x0);
        gbc.writeMem(0x94bc, { 0x53 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x9b47, gbc.sp());
        EXPECT(0x94bd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x53, gbc.readMem(0x94bc));
        // 53 00FF
        gbc.setState(0x9248, 0xba23, 0x95c0, 0x94e0, 0x251a, 0x9a, 0x0, 0x0);
        gbc.writeMem(0x9248, { 0x53 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0xba23, gbc.sp());
        EXPECT(0x9249, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x53, gbc.readMem(0x9248));
        // 53 0100
        gbc.setState(0x1540, 0x1a8f, 0x2720, 0x5a8e, 0x42f6, 0xf4e8, 0x1, 0x0);
        gbc.writeMem(0x1540, { 0x53 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x1a8f, gbc.sp());
        EXPECT(0x1541, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 53 0101
        gbc.setState(0x5cfb, 0x42a2, 0xffb0, 0x4227, 0x6cb8, 0x65d1, 0x0, 0x0);
        gbc.writeMem(0x5cfb, { 0x53 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x42a2, gbc.sp());
        EXPECT(0x5cfc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 53 0102
        gbc.setState(0xd004, 0xe955, 0xe20, 0xf0dd, 0x663c, 0xdb16, 0x0, 0x0);
        gbc.writeMem(0xd004, { 0x53 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0xe955, gbc.sp());
        EXPECT(0xd005, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x53, gbc.readMem(0xd004));
        // 53 0103
        gbc.setState(0x23ff, 0x6716, 0x56c0, 0x1915, 0xa481, 0x50f7, 0x1, 0x1);
        gbc.writeMem(0x23ff, { 0x53 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x6716, gbc.sp());
        EXPECT(0x2400, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 53 0104
        gbc.setState(0xa0ba, 0x96c, 0x87a0, 0x1d4b, 0x20da, 0xf6c1, 0x1, 0x0);
        gbc.writeMem(0xa0ba, { 0x53 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x96c, gbc.sp());
        EXPECT(0xa0bb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x53, gbc.readMem(0xa0ba));
        // 53 0105
        gbc.setState(0xbbdf, 0x6c17, 0x5d70, 0xf8b, 0x106c, 0x1286, 0x1, 0x1);
        gbc.writeMem(0xbbdf, { 0x53 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x6c17, gbc.sp());
        EXPECT(0xbbe0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x53, gbc.readMem(0xbbdf));
        // 53 0106
        gbc.setState(0xbaed, 0xff0a, 0x9c00, 0xbd00, 0x37e3, 0xf58c, 0x1, 0x1);
        gbc.writeMem(0xbaed, { 0x53 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0xff0a, gbc.sp());
        EXPECT(0xbaee, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x53, gbc.readMem(0xbaed));
        // 53 0107
        gbc.setState(0x7086, 0xf963, 0xeaf0, 0x42c4, 0xe8e6, 0x4ce0, 0x1, 0x1);
        gbc.writeMem(0x7086, { 0x53 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0xf963, gbc.sp());
        EXPECT(0x7087, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 53 0108
        gbc.setState(0x866f, 0x154d, 0x62e0, 0xb481, 0x72f4, 0x31b6, 0x0, 0x1);
        gbc.writeMem(0x866f, { 0x53 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x154d, gbc.sp());
        EXPECT(0x8670, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x53, gbc.readMem(0x866f));
        // 53 0109
        gbc.setState(0x489c, 0x7b50, 0x3830, 0xe4df, 0xbfdd, 0x6fc1, 0x0, 0x0);
        gbc.writeMem(0x489c, { 0x53 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x7b50, gbc.sp());
        EXPECT(0x489d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 53 010A
        gbc.setState(0xec22, 0xefc6, 0x3c20, 0x1cbd, 0x6a14, 0x53c1, 0x1, 0x0);
        gbc.writeMem(0xec22, { 0x53 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0xefc6, gbc.sp());
        EXPECT(0xec23, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x53, gbc.readMem(0xec22));
        // 53 010B
        gbc.setState(0x97c4, 0x49d, 0xc370, 0x6869, 0xfc93, 0xc231, 0x1, 0x1);
        gbc.writeMem(0x97c4, { 0x53 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x49d, gbc.sp());
        EXPECT(0x97c5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x53, gbc.readMem(0x97c4));
        // 53 010C
        gbc.setState(0x1417, 0x2ac9, 0xd9d0, 0x312b, 0x4e87, 0x490d, 0x0, 0x1);
        gbc.writeMem(0x1417, { 0x53 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x2ac9, gbc.sp());
        EXPECT(0x1418, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 53 010D
        gbc.setState(0xc3b, 0xd552, 0x9500, 0xf206, 0x1c28, 0x6ebb, 0x1, 0x0);
        gbc.writeMem(0xc3b, { 0x53 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0xd552, gbc.sp());
        EXPECT(0xc3c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 53 010E
        gbc.setState(0x1b26, 0x91c0, 0xbf30, 0xf7e2, 0xf0c6, 0xed0c, 0x1, 0x0);
        gbc.writeMem(0x1b26, { 0x53 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x91c0, gbc.sp());
        EXPECT(0x1b27, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 53 010F
        gbc.setState(0xdc72, 0xd391, 0x5a20, 0x312a, 0x3822, 0x122a, 0x1, 0x1);
        gbc.writeMem(0xdc72, { 0x53 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0xd391, gbc.sp());
        EXPECT(0xdc73, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x53, gbc.readMem(0xdc72));
        // 53 0110
        gbc.setState(0x777d, 0xa50, 0x8c40, 0x5c6b, 0x3909, 0x5396, 0x0, 0x0);
        gbc.writeMem(0x777d, { 0x53 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0xa50, gbc.sp());
        EXPECT(0x777e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 53 0112
        gbc.setState(0xd1c, 0x8797, 0xc3c0, 0x76c, 0x537, 0x4b2b, 0x1, 0x0);
        gbc.writeMem(0xd1c, { 0x53 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x8797, gbc.sp());
        EXPECT(0xd1d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 53 0113
        gbc.setState(0x5092, 0x3f78, 0x3f10, 0xdd00, 0x9338, 0xd2d, 0x1, 0x0);
        gbc.writeMem(0x5092, { 0x53 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x3f78, gbc.sp());
        EXPECT(0x5093, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 53 0114
        gbc.setState(0xe2c6, 0xe6ae, 0xa910, 0xea31, 0x8cef, 0x71c6, 0x0, 0x1);
        gbc.writeMem(0xe2c6, { 0x53 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0xe6ae, gbc.sp());
        EXPECT(0xe2c7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x53, gbc.readMem(0xe2c6));
        // 53 0115
        gbc.setState(0xb338, 0x8ff1, 0xed10, 0xa964, 0xa67d, 0xa6cf, 0x0, 0x0);
        gbc.writeMem(0xb338, { 0x53 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x8ff1, gbc.sp());
        EXPECT(0xb339, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x53, gbc.readMem(0xb338));
        // 53 0116
        gbc.setState(0x76ab, 0x4a7c, 0x1330, 0xc87, 0x75ab, 0x2c2d, 0x1, 0x1);
        gbc.writeMem(0x76ab, { 0x53 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x4a7c, gbc.sp());
        EXPECT(0x76ac, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 53 0117
        gbc.setState(0x71f0, 0xcfb4, 0x8020, 0x86f7, 0x281b, 0x2a9b, 0x0, 0x1);
        gbc.writeMem(0x71f0, { 0x53 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0xcfb4, gbc.sp());
        EXPECT(0x71f1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 53 0118
        gbc.setState(0x69c3, 0x97aa, 0x7110, 0x397d, 0xc6b5, 0x96e, 0x0, 0x1);
        gbc.writeMem(0x69c3, { 0x53 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x97aa, gbc.sp());
        EXPECT(0x69c4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 53 0119
        gbc.setState(0x661a, 0xe47a, 0xaf70, 0xb884, 0xf8b0, 0x23b5, 0x1, 0x0);
        gbc.writeMem(0x661a, { 0x53 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0xe47a, gbc.sp());
        EXPECT(0x661b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 53 011A
        gbc.setState(0x1e51, 0x2f2f, 0xbdf0, 0x40cd, 0xba78, 0xf69f, 0x0, 0x0);
        gbc.writeMem(0x1e51, { 0x53 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x2f2f, gbc.sp());
        EXPECT(0x1e52, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 53 011B
        gbc.setState(0xd78e, 0x55c, 0x1430, 0xf7e7, 0xef36, 0xb627, 0x1, 0x1);
        gbc.writeMem(0xd78e, { 0x53 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x55c, gbc.sp());
        EXPECT(0xd78f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x53, gbc.readMem(0xd78e));
        // 53 011C
        gbc.setState(0x617e, 0x1a07, 0xcd50, 0x8a92, 0xd38d, 0x6eb6, 0x1, 0x1);
        gbc.writeMem(0x617e, { 0x53 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x1a07, gbc.sp());
        EXPECT(0x617f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 53 011D
        gbc.setState(0xa174, 0xd368, 0x4e90, 0xb05f, 0xc394, 0x52fb, 0x1, 0x0);
        gbc.writeMem(0xa174, { 0x53 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0xd368, gbc.sp());
        EXPECT(0xa175, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x53, gbc.readMem(0xa174));
        // 53 011E
        gbc.setState(0x8a1a, 0xb055, 0x1670, 0x5704, 0xec11, 0x8af7, 0x0, 0x0);
        gbc.writeMem(0x8a1a, { 0x53 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0xb055, gbc.sp());
        EXPECT(0x8a1b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x53, gbc.readMem(0x8a1a));
        // 53 011F
        gbc.setState(0xe2b4, 0x5b51, 0xeb0, 0x8810, 0x41e9, 0x4121, 0x1, 0x1);
        gbc.writeMem(0xe2b4, { 0x53 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x5b51, gbc.sp());
        EXPECT(0xe2b5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x53, gbc.readMem(0xe2b4));
        // 53 0120
        gbc.setState(0x6d31, 0xa467, 0xc280, 0x59b0, 0x4456, 0x686c, 0x0, 0x1);
        gbc.writeMem(0x6d31, { 0x53 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0xa467, gbc.sp());
        EXPECT(0x6d32, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 53 0121
        gbc.setState(0xafe, 0x3e51, 0xe540, 0xe5a2, 0x7306, 0x9f3f, 0x1, 0x0);
        gbc.writeMem(0xafe, { 0x53 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0x3e51, gbc.sp());
        EXPECT(0xaff, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 53 0122
        gbc.setState(0xeeb, 0x9483, 0x9bd0, 0x103c, 0xc185, 0x129, 0x0, 0x0);
        gbc.writeMem(0xeeb, { 0x53 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x9483, gbc.sp());
        EXPECT(0xeec, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 53 0123
        gbc.setState(0xe50d, 0x2e09, 0x5c30, 0x7dd8, 0x6b14, 0x78e0, 0x0, 0x0);
        gbc.writeMem(0xe50d, { 0x53 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x2e09, gbc.sp());
        EXPECT(0xe50e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x53, gbc.readMem(0xe50d));
        // 53 0125
        gbc.setState(0x8dc2, 0xb1ee, 0xc1e0, 0xe69b, 0xe2fb, 0x86f7, 0x0, 0x1);
        gbc.writeMem(0x8dc2, { 0x53 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0xb1ee, gbc.sp());
        EXPECT(0x8dc3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x53, gbc.readMem(0x8dc2));
        // 53 0126
        gbc.setState(0xe2d, 0x6fb4, 0x22d0, 0xc793, 0x5334, 0xe7aa, 0x0, 0x0);
        gbc.writeMem(0xe2d, { 0x53 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x6fb4, gbc.sp());
        EXPECT(0xe2e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 53 0127
        gbc.setState(0x494c, 0x5a00, 0x2a10, 0x780c, 0x16cd, 0x3b80, 0x1, 0x1);
        gbc.writeMem(0x494c, { 0x53 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x5a00, gbc.sp());
        EXPECT(0x494d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 53 0128
        gbc.setState(0xa85b, 0x6fb0, 0xedb0, 0xcf7f, 0x8d07, 0x3fa4, 0x0, 0x0);
        gbc.writeMem(0xa85b, { 0x53 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x6fb0, gbc.sp());
        EXPECT(0xa85c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x53, gbc.readMem(0xa85b));
        // 53 0129
        gbc.setState(0x8c17, 0x80c3, 0x1410, 0x41b1, 0xd27a, 0x2440, 0x1, 0x0);
        gbc.writeMem(0x8c17, { 0x53 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x80c3, gbc.sp());
        EXPECT(0x8c18, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x53, gbc.readMem(0x8c17));
        // 53 012A
        gbc.setState(0x271e, 0x9683, 0xd710, 0x7b21, 0xa7b6, 0x42e9, 0x0, 0x1);
        gbc.writeMem(0x271e, { 0x53 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x9683, gbc.sp());
        EXPECT(0x271f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 53 012B
        gbc.setState(0x8cc6, 0xb50b, 0xce20, 0xd7af, 0x210e, 0xf6f9, 0x0, 0x1);
        gbc.writeMem(0x8cc6, { 0x53 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0xb50b, gbc.sp());
        EXPECT(0x8cc7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x53, gbc.readMem(0x8cc6));
        // 53 012C
        gbc.setState(0x407c, 0xef9d, 0x3460, 0x8f05, 0xd946, 0x3ef8, 0x0, 0x0);
        gbc.writeMem(0x407c, { 0x53 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0xef9d, gbc.sp());
        EXPECT(0x407d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 53 012E
        gbc.setState(0x789e, 0x6826, 0x2550, 0x3016, 0x8500, 0xc91d, 0x0, 0x1);
        gbc.writeMem(0x789e, { 0x53 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x6826, gbc.sp());
        EXPECT(0x789f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 53 012F
        gbc.setState(0x85ab, 0x57fa, 0x12d0, 0x61d6, 0x780, 0xf1fb, 0x1, 0x1);
        gbc.writeMem(0x85ab, { 0x53 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x57fa, gbc.sp());
        EXPECT(0x85ac, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x53, gbc.readMem(0x85ab));
        // 53 0130
        gbc.setState(0x88a9, 0xe47c, 0x5580, 0x3c75, 0x1bb3, 0x2e2d, 0x1, 0x0);
        gbc.writeMem(0x88a9, { 0x53 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0xe47c, gbc.sp());
        EXPECT(0x88aa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x53, gbc.readMem(0x88a9));
        // 53 0131
        gbc.setState(0xdeab, 0x3daa, 0x9be0, 0x438b, 0xdfc0, 0x4650, 0x0, 0x1);
        gbc.writeMem(0xdeab, { 0x53 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x3daa, gbc.sp());
        EXPECT(0xdeac, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x53, gbc.readMem(0xdeab));
        // 53 0132
        gbc.setState(0x14c4, 0x79f7, 0x8a20, 0x22f0, 0x2a02, 0x8162, 0x1, 0x0);
        gbc.writeMem(0x14c4, { 0x53 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x79f7, gbc.sp());
        EXPECT(0x14c5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 53 0133
        gbc.setState(0xcd92, 0x3d63, 0x8f90, 0x3555, 0x871c, 0xda95, 0x1, 0x1);
        gbc.writeMem(0xcd92, { 0x53 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x3d63, gbc.sp());
        EXPECT(0xcd93, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x53, gbc.readMem(0xcd92));
        // 53 0134
        gbc.setState(0x8610, 0x3a32, 0x2510, 0x8233, 0x9e4a, 0x586f, 0x0, 0x0);
        gbc.writeMem(0x8610, { 0x53 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x3a32, gbc.sp());
        EXPECT(0x8611, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x53, gbc.readMem(0x8610));
        // 53 0135
        gbc.setState(0xea52, 0x152f, 0x62f0, 0x2000, 0xadb6, 0xe98d, 0x0, 0x1);
        gbc.writeMem(0xea52, { 0x53 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x152f, gbc.sp());
        EXPECT(0xea53, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x53, gbc.readMem(0xea52));
        // 53 0136
        gbc.setState(0x13a7, 0x54de, 0x4f00, 0x663c, 0x6a6a, 0x139b, 0x1, 0x0);
        gbc.writeMem(0x13a7, { 0x53 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x54de, gbc.sp());
        EXPECT(0x13a8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 53 0137
        gbc.setState(0x8a71, 0x2d1b, 0x7080, 0x3030, 0xea59, 0x1fb7, 0x0, 0x1);
        gbc.writeMem(0x8a71, { 0x53 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x2d1b, gbc.sp());
        EXPECT(0x8a72, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x53, gbc.readMem(0x8a71));
        // 53 0138
        gbc.setState(0x93d4, 0x2858, 0x7ac0, 0xcdc8, 0xb0cd, 0x9e81, 0x1, 0x0);
        gbc.writeMem(0x93d4, { 0x53 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x2858, gbc.sp());
        EXPECT(0x93d5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x53, gbc.readMem(0x93d4));
        // 53 0139
        gbc.setState(0xafec, 0xe397, 0x16d0, 0x5465, 0x229b, 0xe5e6, 0x0, 0x1);
        gbc.writeMem(0xafec, { 0x53 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0xe397, gbc.sp());
        EXPECT(0xafed, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x53, gbc.readMem(0xafec));
        // 53 013B
        gbc.setState(0x5006, 0x754d, 0x4530, 0x2643, 0x7f27, 0x5eec, 0x0, 0x0);
        gbc.writeMem(0x5006, { 0x53 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x754d, gbc.sp());
        EXPECT(0x5007, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 53 013C
        gbc.setState(0x2da8, 0x505e, 0x37b0, 0xa112, 0x907d, 0x181c, 0x1, 0x0);
        gbc.writeMem(0x2da8, { 0x53 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x505e, gbc.sp());
        EXPECT(0x2da9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 53 013E
        gbc.setState(0x715a, 0xb364, 0xbd0, 0xa7f4, 0x647e, 0x5050, 0x0, 0x0);
        gbc.writeMem(0x715a, { 0x53 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0xb364, gbc.sp());
        EXPECT(0x715b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 53 013F
        gbc.setState(0xcd5b, 0xc8d9, 0x1fb0, 0x1d7a, 0x1c5c, 0xbbad, 0x0, 0x0);
        gbc.writeMem(0xcd5b, { 0x53 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0xc8d9, gbc.sp());
        EXPECT(0xcd5c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x53, gbc.readMem(0xcd5b));
        // 53 0140
        gbc.setState(0xec9a, 0x9452, 0xaf50, 0xc534, 0xdfb8, 0x804a, 0x1, 0x0);
        gbc.writeMem(0xec9a, { 0x53 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x9452, gbc.sp());
        EXPECT(0xec9b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x53, gbc.readMem(0xec9a));
        // 53 0141
        gbc.setState(0xae9, 0xbf93, 0xd470, 0xaa07, 0xabab, 0x78d2, 0x1, 0x1);
        gbc.writeMem(0xae9, { 0x53 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0xbf93, gbc.sp());
        EXPECT(0xaea, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 53 0142
        gbc.setState(0xbd9b, 0x4082, 0x9aa0, 0xfa38, 0x2ac3, 0x8ba4, 0x1, 0x1);
        gbc.writeMem(0xbd9b, { 0x53 });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x4082, gbc.sp());
        EXPECT(0xbd9c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x53, gbc.readMem(0xbd9b));
        // 53 0143
        gbc.setState(0x6ac2, 0x3810, 0x1370, 0x540a, 0x5113, 0xe389, 0x1, 0x1);
        gbc.writeMem(0x6ac2, { 0x53 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x3810, gbc.sp());
        EXPECT(0x6ac3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 53 0144
        gbc.setState(0xd18a, 0x9c9f, 0x43e0, 0x4e9c, 0xef15, 0xaec3, 0x0, 0x0);
        gbc.writeMem(0xd18a, { 0x53 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x9c9f, gbc.sp());
        EXPECT(0xd18b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x53, gbc.readMem(0xd18a));
        // 53 0146
        gbc.setState(0x81ac, 0x2134, 0xebc0, 0x1556, 0x562d, 0x8cfc, 0x0, 0x0);
        gbc.writeMem(0x81ac, { 0x53 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x2134, gbc.sp());
        EXPECT(0x81ad, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x53, gbc.readMem(0x81ac));
        // 53 0147
        gbc.setState(0xadca, 0xcec7, 0xede0, 0xf63e, 0x7bf2, 0x9214, 0x1, 0x0);
        gbc.writeMem(0xadca, { 0x53 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0xcec7, gbc.sp());
        EXPECT(0xadcb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x53, gbc.readMem(0xadca));
        // 53 0148
        gbc.setState(0x5353, 0x634b, 0x9d00, 0xc27d, 0xf7fe, 0x3025, 0x0, 0x1);
        gbc.writeMem(0x5353, { 0x53 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x634b, gbc.sp());
        EXPECT(0x5354, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 53 0149
        gbc.setState(0xa412, 0x8cdd, 0xc730, 0xed25, 0x7aec, 0xd0f5, 0x1, 0x0);
        gbc.writeMem(0xa412, { 0x53 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x8cdd, gbc.sp());
        EXPECT(0xa413, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x53, gbc.readMem(0xa412));
        // 53 014A
        gbc.setState(0x3a61, 0x1c98, 0xb7b0, 0xc7d9, 0xfce2, 0x8a4b, 0x1, 0x0);
        gbc.writeMem(0x3a61, { 0x53 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x1c98, gbc.sp());
        EXPECT(0x3a62, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 53 014B
        gbc.setState(0x427f, 0xb979, 0x95e0, 0xe566, 0x45a8, 0xbc40, 0x1, 0x0);
        gbc.writeMem(0x427f, { 0x53 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0xb979, gbc.sp());
        EXPECT(0x4280, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 53 014C
        gbc.setState(0x6a77, 0x191f, 0x2a10, 0x72a4, 0x458c, 0xb714, 0x1, 0x0);
        gbc.writeMem(0x6a77, { 0x53 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x191f, gbc.sp());
        EXPECT(0x6a78, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 53 014D
        gbc.setState(0xdd0d, 0x76fe, 0xc650, 0x25d5, 0x5895, 0x46d3, 0x1, 0x0);
        gbc.writeMem(0xdd0d, { 0x53 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x76fe, gbc.sp());
        EXPECT(0xdd0e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x53, gbc.readMem(0xdd0d));
        // 53 014E
        gbc.setState(0x2797, 0x747f, 0x16e0, 0xb223, 0xb659, 0x8f0a, 0x0, 0x0);
        gbc.writeMem(0x2797, { 0x53 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x747f, gbc.sp());
        EXPECT(0x2798, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 53 0150
        gbc.setState(0x75ce, 0x3894, 0x5620, 0x7cc7, 0x69ce, 0xf13d, 0x1, 0x0);
        gbc.writeMem(0x75ce, { 0x53 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x3894, gbc.sp());
        EXPECT(0x75cf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 53 0151
        gbc.setState(0xd6bb, 0xc570, 0x2930, 0xd5ba, 0x3f68, 0x92cb, 0x1, 0x1);
        gbc.writeMem(0xd6bb, { 0x53 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0xc570, gbc.sp());
        EXPECT(0xd6bc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x53, gbc.readMem(0xd6bb));
        // 53 0152
        gbc.setState(0x55fb, 0xe008, 0xfe80, 0xa606, 0x48ae, 0x43eb, 0x1, 0x0);
        gbc.writeMem(0x55fb, { 0x53 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0xe008, gbc.sp());
        EXPECT(0x55fc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 53 0153
        gbc.setState(0x45ee, 0xe179, 0xc960, 0xd145, 0x956, 0x3cf8, 0x1, 0x0);
        gbc.writeMem(0x45ee, { 0x53 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0xe179, gbc.sp());
        EXPECT(0x45ef, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 53 0154
        gbc.setState(0xb776, 0xf8d6, 0x1bf0, 0xf5c6, 0x33da, 0xcbff, 0x1, 0x0);
        gbc.writeMem(0xb776, { 0x53 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0xf8d6, gbc.sp());
        EXPECT(0xb777, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x53, gbc.readMem(0xb776));
        // 53 0155
        gbc.setState(0xc9f, 0x598a, 0x77e0, 0x79de, 0xa523, 0x3f09, 0x0, 0x0);
        gbc.writeMem(0xc9f, { 0x53 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x598a, gbc.sp());
        EXPECT(0xca0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 53 0156
        gbc.setState(0x31ef, 0x2fff, 0x5d80, 0x8eb1, 0x7a53, 0x6b0, 0x1, 0x0);
        gbc.writeMem(0x31ef, { 0x53 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x2fff, gbc.sp());
        EXPECT(0x31f0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 53 0158
        gbc.setState(0x418f, 0x42fc, 0x2040, 0xfe05, 0xd730, 0xee2b, 0x1, 0x1);
        gbc.writeMem(0x418f, { 0x53 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x42fc, gbc.sp());
        EXPECT(0x4190, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 53 0159
        gbc.setState(0xeab, 0x20e2, 0x8280, 0xdf1d, 0xaf1e, 0xd2ff, 0x0, 0x0);
        gbc.writeMem(0xeab, { 0x53 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x20e2, gbc.sp());
        EXPECT(0xeac, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 53 015A
        gbc.setState(0x13b9, 0xbe5b, 0xc510, 0x643b, 0xdb2b, 0x29f9, 0x1, 0x1);
        gbc.writeMem(0x13b9, { 0x53 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0xbe5b, gbc.sp());
        EXPECT(0x13ba, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 53 015B
        gbc.setState(0x8b3a, 0x77ad, 0x3140, 0xcdf6, 0x1678, 0x52a9, 0x0, 0x0);
        gbc.writeMem(0x8b3a, { 0x53 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x77ad, gbc.sp());
        EXPECT(0x8b3b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x53, gbc.readMem(0x8b3a));
        // 53 015C
        gbc.setState(0xe94, 0x4789, 0x3a30, 0x21a4, 0xd32, 0x65de, 0x1, 0x1);
        gbc.writeMem(0xe94, { 0x53 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x4789, gbc.sp());
        EXPECT(0xe95, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 53 015D
        gbc.setState(0x7f14, 0x4edd, 0x4a00, 0x2c60, 0xbfc5, 0x8254, 0x0, 0x0);
        gbc.writeMem(0x7f14, { 0x53 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x4edd, gbc.sp());
        EXPECT(0x7f15, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 53 015E
        gbc.setState(0xbc7b, 0xb8f9, 0x5680, 0x1bc6, 0x9d81, 0xd052, 0x1, 0x1);
        gbc.writeMem(0xbc7b, { 0x53 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0xb8f9, gbc.sp());
        EXPECT(0xbc7c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x53, gbc.readMem(0xbc7b));
        // 53 015F
        gbc.setState(0x907c, 0x9e72, 0x7790, 0x4c17, 0x229b, 0x7f90, 0x1, 0x0);
        gbc.writeMem(0x907c, { 0x53 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x9e72, gbc.sp());
        EXPECT(0x907d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x53, gbc.readMem(0x907c));
        // 53 0160
        gbc.setState(0x735c, 0xd5d9, 0xe740, 0x453f, 0x5d59, 0x511c, 0x0, 0x0);
        gbc.writeMem(0x735c, { 0x53 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0xd5d9, gbc.sp());
        EXPECT(0x735d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 53 0161
        gbc.setState(0x3eb, 0x1a6f, 0xf3e0, 0x2bbe, 0x5014, 0x2543, 0x1, 0x1);
        gbc.writeMem(0x3eb, { 0x53 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x1a6f, gbc.sp());
        EXPECT(0x3ec, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 53 0163
        gbc.setState(0x5d8, 0x8dd1, 0x7a60, 0x457, 0xc1e4, 0xf645, 0x0, 0x0);
        gbc.writeMem(0x5d8, { 0x53 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x8dd1, gbc.sp());
        EXPECT(0x5d9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 53 0164
        gbc.setState(0xe48c, 0x6ea1, 0x5260, 0x12ef, 0x2122, 0x96f0, 0x1, 0x1);
        gbc.writeMem(0xe48c, { 0x53 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x6ea1, gbc.sp());
        EXPECT(0xe48d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x53, gbc.readMem(0xe48c));
        // 53 0165
        gbc.setState(0xd88b, 0x3be9, 0x45c0, 0xfc91, 0xc611, 0xc5a0, 0x0, 0x0);
        gbc.writeMem(0xd88b, { 0x53 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x3be9, gbc.sp());
        EXPECT(0xd88c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x53, gbc.readMem(0xd88b));
        // 53 0166
        gbc.setState(0x8dfb, 0x6730, 0xc280, 0xdccc, 0x55e1, 0x8dae, 0x0, 0x0);
        gbc.writeMem(0x8dfb, { 0x53 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0x6730, gbc.sp());
        EXPECT(0x8dfc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x53, gbc.readMem(0x8dfb));
        // 53 0168
        gbc.setState(0x3e51, 0x6149, 0x52f0, 0xc1d3, 0x281d, 0x7439, 0x1, 0x0);
        gbc.writeMem(0x3e51, { 0x53 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x6149, gbc.sp());
        EXPECT(0x3e52, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 53 0169
        gbc.setState(0x3c73, 0x18ba, 0xf940, 0x4d4, 0x9865, 0xdaf0, 0x1, 0x0);
        gbc.writeMem(0x3c73, { 0x53 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x18ba, gbc.sp());
        EXPECT(0x3c74, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 53 016A
        gbc.setState(0xca26, 0x68c1, 0x340, 0x2d37, 0x331d, 0xd9b9, 0x0, 0x1);
        gbc.writeMem(0xca26, { 0x53 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x68c1, gbc.sp());
        EXPECT(0xca27, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x53, gbc.readMem(0xca26));
        // 53 016B
        gbc.setState(0x1c63, 0xdc00, 0x3030, 0x4048, 0xa016, 0x1576, 0x1, 0x0);
        gbc.writeMem(0x1c63, { 0x53 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0xdc00, gbc.sp());
        EXPECT(0x1c64, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 53 016C
        gbc.setState(0x573d, 0x2a98, 0x2d20, 0xbadd, 0x35f8, 0xc01e, 0x0, 0x1);
        gbc.writeMem(0x573d, { 0x53 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x2a98, gbc.sp());
        EXPECT(0x573e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 53 016D
        gbc.setState(0x4cb3, 0xd568, 0xe540, 0x4ee0, 0xee21, 0xd16f, 0x0, 0x1);
        gbc.writeMem(0x4cb3, { 0x53 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0xd568, gbc.sp());
        EXPECT(0x4cb4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 53 016E
        gbc.setState(0xd9f1, 0xbbba, 0xd450, 0x4a93, 0x6ec3, 0xe3c8, 0x1, 0x1);
        gbc.writeMem(0xd9f1, { 0x53 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0xbbba, gbc.sp());
        EXPECT(0xd9f2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x53, gbc.readMem(0xd9f1));
        // 53 016F
        gbc.setState(0xb693, 0x116c, 0x42d0, 0xc80e, 0x1455, 0x4852, 0x0, 0x0);
        gbc.writeMem(0xb693, { 0x53 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x116c, gbc.sp());
        EXPECT(0xb694, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x53, gbc.readMem(0xb693));
        // 53 0170
        gbc.setState(0xec2f, 0x6fa0, 0xff00, 0x161a, 0x2cf5, 0xa349, 0x0, 0x1);
        gbc.writeMem(0xec2f, { 0x53 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x6fa0, gbc.sp());
        EXPECT(0xec30, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x53, gbc.readMem(0xec2f));
        // 53 0171
        gbc.setState(0x3205, 0xbbde, 0x4c20, 0x6248, 0xef5d, 0xb5bd, 0x0, 0x1);
        gbc.writeMem(0x3205, { 0x53 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0xbbde, gbc.sp());
        EXPECT(0x3206, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 53 0172
        gbc.setState(0x5f45, 0x4915, 0x5890, 0xf9b0, 0x1fb1, 0x74d9, 0x0, 0x1);
        gbc.writeMem(0x5f45, { 0x53 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x4915, gbc.sp());
        EXPECT(0x5f46, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 53 0173
        gbc.setState(0xe2e9, 0x569, 0x5920, 0x31be, 0x4a6, 0x38f3, 0x1, 0x0);
        gbc.writeMem(0xe2e9, { 0x53 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x569, gbc.sp());
        EXPECT(0xe2ea, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x53, gbc.readMem(0xe2e9));
        // 53 0174
        gbc.setState(0xbf4, 0xd566, 0xa3b0, 0xea61, 0xc4ba, 0x5f48, 0x0, 0x1);
        gbc.writeMem(0xbf4, { 0x53 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0xd566, gbc.sp());
        EXPECT(0xbf5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 53 0175
        gbc.setState(0x725b, 0x7f97, 0xfc40, 0x7476, 0xdd38, 0xf600, 0x0, 0x0);
        gbc.writeMem(0x725b, { 0x53 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x7f97, gbc.sp());
        EXPECT(0x725c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 53 0176
        gbc.setState(0xd54a, 0x904e, 0xaf90, 0x338e, 0x8cf6, 0x7338, 0x0, 0x1);
        gbc.writeMem(0xd54a, { 0x53 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x904e, gbc.sp());
        EXPECT(0xd54b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x53, gbc.readMem(0xd54a));
        // 53 0177
        gbc.setState(0xfe9, 0xe6ef, 0xf330, 0xf127, 0x5c05, 0x690d, 0x1, 0x1);
        gbc.writeMem(0xfe9, { 0x53 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0xe6ef, gbc.sp());
        EXPECT(0xfea, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 53 0178
        gbc.setState(0x3234, 0x534b, 0x62b0, 0xf3ec, 0x7823, 0x1a5c, 0x0, 0x1);
        gbc.writeMem(0x3234, { 0x53 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x534b, gbc.sp());
        EXPECT(0x3235, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 53 0179
        gbc.setState(0xd7c1, 0x8127, 0x4710, 0xf20c, 0x899c, 0x96ea, 0x1, 0x0);
        gbc.writeMem(0xd7c1, { 0x53 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x8127, gbc.sp());
        EXPECT(0xd7c2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x53, gbc.readMem(0xd7c1));
        // 53 017A
        gbc.setState(0x2875, 0x571a, 0xb560, 0x69ef, 0xb14d, 0x5052, 0x0, 0x1);
        gbc.writeMem(0x2875, { 0x53 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x571a, gbc.sp());
        EXPECT(0x2876, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 53 017B
        gbc.setState(0x8d05, 0xffdf, 0x5690, 0xce4b, 0xa6bc, 0xf28, 0x1, 0x1);
        gbc.writeMem(0x8d05, { 0x53 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0xffdf, gbc.sp());
        EXPECT(0x8d06, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x53, gbc.readMem(0x8d05));
        // 53 017C
        gbc.setState(0x1dd1, 0x3db1, 0xb010, 0x2637, 0x540f, 0x9644, 0x0, 0x1);
        gbc.writeMem(0x1dd1, { 0x53 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x3db1, gbc.sp());
        EXPECT(0x1dd2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 53 017D
        gbc.setState(0x2ccd, 0xc245, 0xc9a0, 0xfa0c, 0x2742, 0x5172, 0x1, 0x0);
        gbc.writeMem(0x2ccd, { 0x53 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0xc245, gbc.sp());
        EXPECT(0x2cce, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 53 017E
        gbc.setState(0xcef8, 0x9084, 0x3220, 0xf6e2, 0x4316, 0xd34e, 0x1, 0x0);
        gbc.writeMem(0xcef8, { 0x53 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x9084, gbc.sp());
        EXPECT(0xcef9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x53, gbc.readMem(0xcef8));
        // 53 017F
        gbc.setState(0xb78d, 0x6866, 0xce50, 0x665f, 0x25fb, 0x9bd9, 0x1, 0x1);
        gbc.writeMem(0xb78d, { 0x53 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x6866, gbc.sp());
        EXPECT(0xb78e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x53, gbc.readMem(0xb78d));
        // 53 0180
        gbc.setState(0xe356, 0x8a80, 0xb7c0, 0x2574, 0xf47e, 0xbbc0, 0x0, 0x0);
        gbc.writeMem(0xe356, { 0x53 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x8a80, gbc.sp());
        EXPECT(0xe357, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x53, gbc.readMem(0xe356));
        // 53 0182
        gbc.setState(0x1d1c, 0x2af0, 0x2c30, 0x28c3, 0xbc4f, 0x2ca1, 0x1, 0x1);
        gbc.writeMem(0x1d1c, { 0x53 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x2af0, gbc.sp());
        EXPECT(0x1d1d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 53 0183
        gbc.setState(0x811, 0xfae2, 0xbf10, 0x3172, 0x4d34, 0x426b, 0x1, 0x1);
        gbc.writeMem(0x811, { 0x53 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0xfae2, gbc.sp());
        EXPECT(0x812, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 53 0184
        gbc.setState(0xc05, 0x9aec, 0xd5a0, 0xd2da, 0x172a, 0x7645, 0x1, 0x0);
        gbc.writeMem(0xc05, { 0x53 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x9aec, gbc.sp());
        EXPECT(0xc06, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 53 0185
        gbc.setState(0xe73e, 0xcace, 0x7420, 0xcce1, 0x92b6, 0x7276, 0x1, 0x1);
        gbc.writeMem(0xe73e, { 0x53 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0xcace, gbc.sp());
        EXPECT(0xe73f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x53, gbc.readMem(0xe73e));
        // 53 0186
        gbc.setState(0x8d03, 0x2f36, 0x3680, 0xda59, 0xf425, 0xf3e6, 0x1, 0x1);
        gbc.writeMem(0x8d03, { 0x53 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x2f36, gbc.sp());
        EXPECT(0x8d04, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x53, gbc.readMem(0x8d03));
        // 53 0187
        gbc.setState(0xbf99, 0x41dd, 0xb660, 0xbfa8, 0x9cb7, 0x93e7, 0x1, 0x0);
        gbc.writeMem(0xbf99, { 0x53 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x41dd, gbc.sp());
        EXPECT(0xbf9a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x53, gbc.readMem(0xbf99));
        // 53 0188
        gbc.setState(0x27ad, 0xd502, 0xbb00, 0xbe7b, 0xae2c, 0xa0e4, 0x1, 0x1);
        gbc.writeMem(0x27ad, { 0x53 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0xd502, gbc.sp());
        EXPECT(0x27ae, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 53 0189
        gbc.setState(0x6d2f, 0x9583, 0x88c0, 0x8b63, 0x522a, 0xd7a5, 0x0, 0x1);
        gbc.writeMem(0x6d2f, { 0x53 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x9583, gbc.sp());
        EXPECT(0x6d30, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 53 018A
        gbc.setState(0x6b8d, 0xdbb5, 0x7580, 0xc055, 0xb7c, 0x2d90, 0x1, 0x1);
        gbc.writeMem(0x6b8d, { 0x53 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0xdbb5, gbc.sp());
        EXPECT(0x6b8e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 53 018B
        gbc.setState(0x4523, 0xc6c9, 0xecc0, 0x8cf, 0x7251, 0x7e3c, 0x0, 0x1);
        gbc.writeMem(0x4523, { 0x53 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0xc6c9, gbc.sp());
        EXPECT(0x4524, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 53 018C
        gbc.setState(0x503e, 0xdddb, 0xbea0, 0x8f40, 0x361c, 0xed44, 0x1, 0x0);
        gbc.writeMem(0x503e, { 0x53 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0xdddb, gbc.sp());
        EXPECT(0x503f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 53 018E
        gbc.setState(0xe855, 0x374a, 0xa5a0, 0x53eb, 0xec56, 0xee28, 0x1, 0x1);
        gbc.writeMem(0xe855, { 0x53 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x374a, gbc.sp());
        EXPECT(0xe856, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x53, gbc.readMem(0xe855));
        // 53 018F
        gbc.setState(0x779f, 0x86b3, 0x2980, 0x9bc3, 0x4713, 0xd803, 0x1, 0x1);
        gbc.writeMem(0x779f, { 0x53 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x86b3, gbc.sp());
        EXPECT(0x77a0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 53 0190
        gbc.setState(0x3cf0, 0x2ff0, 0xce00, 0x78bb, 0x5c77, 0x97cf, 0x1, 0x0);
        gbc.writeMem(0x3cf0, { 0x53 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x2ff0, gbc.sp());
        EXPECT(0x3cf1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 53 0191
        gbc.setState(0xb3e7, 0x8b80, 0x870, 0xd9e2, 0xbce0, 0x5949, 0x0, 0x1);
        gbc.writeMem(0xb3e7, { 0x53 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x8b80, gbc.sp());
        EXPECT(0xb3e8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x53, gbc.readMem(0xb3e7));
        // 53 0193
        gbc.setState(0x939, 0x677c, 0x4ea0, 0xae4e, 0xaf6, 0x4b62, 0x1, 0x0);
        gbc.writeMem(0x939, { 0x53 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x677c, gbc.sp());
        EXPECT(0x93a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 53 0194
        gbc.setState(0xc287, 0x9891, 0x67b0, 0xa61e, 0xfe5e, 0x1c2b, 0x1, 0x1);
        gbc.writeMem(0xc287, { 0x53 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x9891, gbc.sp());
        EXPECT(0xc288, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x53, gbc.readMem(0xc287));
        // 53 0195
        gbc.setState(0xe20f, 0xed49, 0x3e10, 0x5f7f, 0x4247, 0x105d, 0x0, 0x0);
        gbc.writeMem(0xe20f, { 0x53 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0xed49, gbc.sp());
        EXPECT(0xe210, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x53, gbc.readMem(0xe20f));
        // 53 0196
        gbc.setState(0x41d6, 0xe0fa, 0x35d0, 0x655d, 0x7d72, 0x2094, 0x1, 0x0);
        gbc.writeMem(0x41d6, { 0x53 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0xe0fa, gbc.sp());
        EXPECT(0x41d7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 53 0197
        gbc.setState(0x47ed, 0xd888, 0x1d50, 0x62e3, 0x2329, 0x45c7, 0x1, 0x0);
        gbc.writeMem(0x47ed, { 0x53 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0xd888, gbc.sp());
        EXPECT(0x47ee, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 53 0198
        gbc.setState(0xd288, 0x9b84, 0x9ae0, 0x7729, 0x8cec, 0xf9dc, 0x0, 0x0);
        gbc.writeMem(0xd288, { 0x53 });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x9b84, gbc.sp());
        EXPECT(0xd289, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x53, gbc.readMem(0xd288));
        // 53 0199
        gbc.setState(0x12e2, 0x4ee4, 0x4c60, 0x17f3, 0x890a, 0x7577, 0x1, 0x1);
        gbc.writeMem(0x12e2, { 0x53 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x4ee4, gbc.sp());
        EXPECT(0x12e3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 53 019A
        gbc.setState(0x5336, 0x92b, 0xf180, 0xc372, 0xa50a, 0x10ab, 0x1, 0x0);
        gbc.writeMem(0x5336, { 0x53 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x92b, gbc.sp());
        EXPECT(0x5337, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 53 019B
        gbc.setState(0x5226, 0x13d4, 0x3b80, 0x87d0, 0x964, 0x14ce, 0x0, 0x0);
        gbc.writeMem(0x5226, { 0x53 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x13d4, gbc.sp());
        EXPECT(0x5227, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 53 019C
        gbc.setState(0x8d06, 0x5825, 0x650, 0xb89, 0x34a0, 0x9d69, 0x1, 0x0);
        gbc.writeMem(0x8d06, { 0x53 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0x5825, gbc.sp());
        EXPECT(0x8d07, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x53, gbc.readMem(0x8d06));
        // 53 019D
        gbc.setState(0xeb33, 0x1074, 0xec20, 0xa8a6, 0xffff, 0xecb4, 0x1, 0x0);
        gbc.writeMem(0xeb33, { 0x53 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x1074, gbc.sp());
        EXPECT(0xeb34, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x53, gbc.readMem(0xeb33));
        // 53 019E
        gbc.setState(0xb388, 0xe30b, 0x3f60, 0x4ebf, 0x8d82, 0xd219, 0x1, 0x0);
        gbc.writeMem(0xb388, { 0x53 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0xe30b, gbc.sp());
        EXPECT(0xb389, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x53, gbc.readMem(0xb388));
        // 53 019F
        gbc.setState(0x4d22, 0xb3d8, 0x3180, 0x9a17, 0x9328, 0x23de, 0x0, 0x0);
        gbc.writeMem(0x4d22, { 0x53 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0xb3d8, gbc.sp());
        EXPECT(0x4d23, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 53 01A1
        gbc.setState(0x1c85, 0xc055, 0x2b60, 0xf390, 0x180a, 0x457b, 0x1, 0x1);
        gbc.writeMem(0x1c85, { 0x53 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0xc055, gbc.sp());
        EXPECT(0x1c86, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 53 01A2
        gbc.setState(0x619b, 0x483d, 0xb620, 0xfec6, 0xdc30, 0xedb4, 0x1, 0x0);
        gbc.writeMem(0x619b, { 0x53 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x483d, gbc.sp());
        EXPECT(0x619c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 53 01A3
        gbc.setState(0x5c4b, 0xd4c7, 0x6a30, 0x659f, 0xe66e, 0x360e, 0x0, 0x0);
        gbc.writeMem(0x5c4b, { 0x53 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0xd4c7, gbc.sp());
        EXPECT(0x5c4c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 53 01A4
        gbc.setState(0x8cd0, 0xc4d6, 0xcf30, 0xae18, 0xf172, 0x2f0e, 0x1, 0x1);
        gbc.writeMem(0x8cd0, { 0x53 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0xc4d6, gbc.sp());
        EXPECT(0x8cd1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x53, gbc.readMem(0x8cd0));
        // 53 01A5
        gbc.setState(0x1700, 0xeaee, 0x2970, 0x8352, 0x2200, 0x88f7, 0x1, 0x1);
        gbc.writeMem(0x1700, { 0x53 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0xeaee, gbc.sp());
        EXPECT(0x1701, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 53 01A7
        gbc.setState(0xb7a1, 0x288c, 0x2770, 0xaec7, 0xf944, 0xd785, 0x0, 0x1);
        gbc.writeMem(0xb7a1, { 0x53 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x288c, gbc.sp());
        EXPECT(0xb7a2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x53, gbc.readMem(0xb7a1));
        // 53 01A8
        gbc.setState(0x3538, 0x217a, 0xbe30, 0x5580, 0x85c6, 0x32ca, 0x1, 0x1);
        gbc.writeMem(0x3538, { 0x53 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x217a, gbc.sp());
        EXPECT(0x3539, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 53 01A9
        gbc.setState(0x87fe, 0xac5, 0x3950, 0xb15c, 0xbb00, 0x4106, 0x1, 0x0);
        gbc.writeMem(0x87fe, { 0x53 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0xac5, gbc.sp());
        EXPECT(0x87ff, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x53, gbc.readMem(0x87fe));
        // 53 01AA
        gbc.setState(0xab32, 0xe973, 0x81c0, 0x4f86, 0xdace, 0x49d1, 0x0, 0x1);
        gbc.writeMem(0xab32, { 0x53 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0xe973, gbc.sp());
        EXPECT(0xab33, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x53, gbc.readMem(0xab32));
        // 53 01AB
        gbc.setState(0x4a8c, 0xabe1, 0xc920, 0x9259, 0x47ca, 0xb731, 0x1, 0x0);
        gbc.writeMem(0x4a8c, { 0x53 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0xabe1, gbc.sp());
        EXPECT(0x4a8d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 53 01AC
        gbc.setState(0x22ed, 0xc3e8, 0x8810, 0xa23a, 0x49b8, 0x1a0b, 0x1, 0x1);
        gbc.writeMem(0x22ed, { 0x53 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0xc3e8, gbc.sp());
        EXPECT(0x22ee, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 53 01AD
        gbc.setState(0xe215, 0xfa11, 0x1f90, 0x3757, 0xec10, 0xb71c, 0x0, 0x1);
        gbc.writeMem(0xe215, { 0x53 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0xfa11, gbc.sp());
        EXPECT(0xe216, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x53, gbc.readMem(0xe215));
        // 53 01AE
        gbc.setState(0xc9ee, 0xda94, 0x6130, 0xf44b, 0x69a8, 0x6d1f, 0x0, 0x1);
        gbc.writeMem(0xc9ee, { 0x53 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0xda94, gbc.sp());
        EXPECT(0xc9ef, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x53, gbc.readMem(0xc9ee));
        // 53 01AF
        gbc.setState(0x4329, 0xbc5b, 0x8b60, 0x3334, 0xb693, 0xde9, 0x1, 0x1);
        gbc.writeMem(0x4329, { 0x53 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0xbc5b, gbc.sp());
        EXPECT(0x432a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 53 01B0
        gbc.setState(0xb9b7, 0x7dbe, 0x3cb0, 0x1001, 0x554e, 0x3f59, 0x0, 0x0);
        gbc.writeMem(0xb9b7, { 0x53 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x7dbe, gbc.sp());
        EXPECT(0xb9b8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x53, gbc.readMem(0xb9b7));
        // 53 01B1
        gbc.setState(0x16f5, 0xb1, 0x1d50, 0x54dc, 0xb6c4, 0x986d, 0x1, 0x0);
        gbc.writeMem(0x16f5, { 0x53 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0xb1, gbc.sp());
        EXPECT(0x16f6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 53 01B2
        gbc.setState(0xc06e, 0x9f77, 0xbcd0, 0x8457, 0x7e40, 0x1563, 0x0, 0x0);
        gbc.writeMem(0xc06e, { 0x53 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x9f77, gbc.sp());
        EXPECT(0xc06f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x53, gbc.readMem(0xc06e));
        // 53 01B3
        gbc.setState(0x57f6, 0xff9c, 0x3430, 0x31d, 0x2a13, 0x7be8, 0x0, 0x0);
        gbc.writeMem(0x57f6, { 0x53 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0xff9c, gbc.sp());
        EXPECT(0x57f7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 53 01B4
        gbc.setState(0xe371, 0xc90, 0xa990, 0x9664, 0xf4ef, 0x69bf, 0x0, 0x1);
        gbc.writeMem(0xe371, { 0x53 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0xc90, gbc.sp());
        EXPECT(0xe372, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x53, gbc.readMem(0xe371));
        // 53 01B5
        gbc.setState(0x4e8c, 0x10e3, 0x72c0, 0xb1a2, 0xa5b7, 0x26c4, 0x0, 0x1);
        gbc.writeMem(0x4e8c, { 0x53 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x10e3, gbc.sp());
        EXPECT(0x4e8d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 53 01B6
        gbc.setState(0x99d1, 0xe28d, 0x7c50, 0xc625, 0x2769, 0x98a9, 0x0, 0x1);
        gbc.writeMem(0x99d1, { 0x53 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0xe28d, gbc.sp());
        EXPECT(0x99d2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x53, gbc.readMem(0x99d1));
        // 53 01B7
        gbc.setState(0x3074, 0x706d, 0xe6c0, 0x7806, 0xf59a, 0xb973, 0x1, 0x1);
        gbc.writeMem(0x3074, { 0x53 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x706d, gbc.sp());
        EXPECT(0x3075, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 53 01B8
        gbc.setState(0xd6af, 0x5c11, 0x3680, 0xac01, 0x2e78, 0xce54, 0x0, 0x0);
        gbc.writeMem(0xd6af, { 0x53 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x5c11, gbc.sp());
        EXPECT(0xd6b0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x53, gbc.readMem(0xd6af));
        // 53 01B9
        gbc.setState(0x4915, 0xcd39, 0xa9a0, 0xda07, 0xb5e9, 0xd125, 0x1, 0x1);
        gbc.writeMem(0x4915, { 0x53 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0xcd39, gbc.sp());
        EXPECT(0x4916, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 53 01BA
        gbc.setState(0xadcf, 0x3193, 0x6380, 0xf304, 0x6634, 0x6ef, 0x0, 0x0);
        gbc.writeMem(0xadcf, { 0x53 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x3193, gbc.sp());
        EXPECT(0xadd0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x53, gbc.readMem(0xadcf));
        // 53 01BB
        gbc.setState(0x90e2, 0x9b58, 0x6c80, 0x404e, 0x30e8, 0x360f, 0x1, 0x0);
        gbc.writeMem(0x90e2, { 0x53 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x9b58, gbc.sp());
        EXPECT(0x90e3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x53, gbc.readMem(0x90e2));
        // 53 01BC
        gbc.setState(0x35ad, 0x8e49, 0xd690, 0x552b, 0xa09a, 0x7cc0, 0x0, 0x1);
        gbc.writeMem(0x35ad, { 0x53 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x8e49, gbc.sp());
        EXPECT(0x35ae, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 53 01BD
        gbc.setState(0xe01d, 0x6a60, 0x4e20, 0xff82, 0x3785, 0x2da2, 0x1, 0x1);
        gbc.writeMem(0xe01d, { 0x53 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x6a60, gbc.sp());
        EXPECT(0xe01e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x53, gbc.readMem(0xe01d));
        // 53 01BE
        gbc.setState(0x960f, 0x5a4c, 0xee80, 0x6d12, 0xa29d, 0x121d, 0x1, 0x0);
        gbc.writeMem(0x960f, { 0x53 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x5a4c, gbc.sp());
        EXPECT(0x9610, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x53, gbc.readMem(0x960f));
        // 53 01BF
        gbc.setState(0x2937, 0x9e89, 0xd4b0, 0x8012, 0xf800, 0x5736, 0x0, 0x1);
        gbc.writeMem(0x2937, { 0x53 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x9e89, gbc.sp());
        EXPECT(0x2938, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 53 01C0
        gbc.setState(0x899e, 0xeb39, 0x8dd0, 0x225f, 0xc32b, 0x8ab8, 0x0, 0x0);
        gbc.writeMem(0x899e, { 0x53 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0xeb39, gbc.sp());
        EXPECT(0x899f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x53, gbc.readMem(0x899e));
        // 53 01C1
        gbc.setState(0xbc34, 0xf01f, 0x50a0, 0xca8c, 0x8ec6, 0x4c98, 0x0, 0x1);
        gbc.writeMem(0xbc34, { 0x53 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0xf01f, gbc.sp());
        EXPECT(0xbc35, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x53, gbc.readMem(0xbc34));
        // 53 01C2
        gbc.setState(0x54ab, 0x175c, 0x8560, 0x6762, 0xf65f, 0x1be0, 0x1, 0x0);
        gbc.writeMem(0x54ab, { 0x53 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x175c, gbc.sp());
        EXPECT(0x54ac, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 53 01C3
        gbc.setState(0xb02, 0x3b2c, 0x7360, 0xef1b, 0xcfe2, 0xe728, 0x1, 0x0);
        gbc.writeMem(0xb02, { 0x53 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x3b2c, gbc.sp());
        EXPECT(0xb03, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 53 01C4
        gbc.setState(0xc322, 0xa2d9, 0xe810, 0x4e38, 0x14e9, 0xed62, 0x1, 0x0);
        gbc.writeMem(0xc322, { 0x53 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0xa2d9, gbc.sp());
        EXPECT(0xc323, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x53, gbc.readMem(0xc322));
        // 53 01C5
        gbc.setState(0x22eb, 0x2a9e, 0xfd0, 0xdf2d, 0x939d, 0x870f, 0x1, 0x0);
        gbc.writeMem(0x22eb, { 0x53 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x2a9e, gbc.sp());
        EXPECT(0x22ec, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 53 01C6
        gbc.setState(0x324c, 0x96bf, 0xa900, 0xd503, 0x38e8, 0xf47a, 0x0, 0x1);
        gbc.writeMem(0x324c, { 0x53 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x96bf, gbc.sp());
        EXPECT(0x324d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 53 01C7
        gbc.setState(0xd339, 0xa8e7, 0xd9b0, 0xff3c, 0xba3f, 0xeea0, 0x0, 0x1);
        gbc.writeMem(0xd339, { 0x53 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0xa8e7, gbc.sp());
        EXPECT(0xd33a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x53, gbc.readMem(0xd339));
        // 53 01C8
        gbc.setState(0x1e6f, 0xf0b1, 0x8600, 0x1083, 0x82b8, 0x9c70, 0x0, 0x0);
        gbc.writeMem(0x1e6f, { 0x53 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0xf0b1, gbc.sp());
        EXPECT(0x1e70, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 53 01C9
        gbc.setState(0xd630, 0xeb8c, 0x6070, 0xaab9, 0xeef, 0xc154, 0x0, 0x1);
        gbc.writeMem(0xd630, { 0x53 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0xeb8c, gbc.sp());
        EXPECT(0xd631, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x53, gbc.readMem(0xd630));
        // 53 01CA
        gbc.setState(0x44d4, 0x8487, 0x4360, 0xdd06, 0xecd9, 0x5b73, 0x0, 0x1);
        gbc.writeMem(0x44d4, { 0x53 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x8487, gbc.sp());
        EXPECT(0x44d5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 53 01CC
        gbc.setState(0xc4d6, 0x592c, 0xeb70, 0xff6d, 0x18e8, 0x93b9, 0x1, 0x0);
        gbc.writeMem(0xc4d6, { 0x53 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x592c, gbc.sp());
        EXPECT(0xc4d7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x53, gbc.readMem(0xc4d6));
        // 53 01CD
        gbc.setState(0xc6af, 0x4479, 0x35f0, 0x26f2, 0x8c44, 0x989e, 0x1, 0x1);
        gbc.writeMem(0xc6af, { 0x53 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x4479, gbc.sp());
        EXPECT(0xc6b0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x53, gbc.readMem(0xc6af));
        // 53 01CE
        gbc.setState(0x8fdd, 0x707f, 0x64c0, 0xffaa, 0x4b62, 0xa63a, 0x0, 0x0);
        gbc.writeMem(0x8fdd, { 0x53 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x707f, gbc.sp());
        EXPECT(0x8fde, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x53, gbc.readMem(0x8fdd));
        // 53 01CF
        gbc.setState(0xc1f9, 0x80ec, 0x4220, 0x8fa1, 0x170b, 0x8264, 0x0, 0x1);
        gbc.writeMem(0xc1f9, { 0x53 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x80ec, gbc.sp());
        EXPECT(0xc1fa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x53, gbc.readMem(0xc1f9));
        // 53 01D0
        gbc.setState(0xd5b4, 0xe499, 0x7bb0, 0x6277, 0x20a7, 0x7744, 0x0, 0x0);
        gbc.writeMem(0xd5b4, { 0x53 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0xe499, gbc.sp());
        EXPECT(0xd5b5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x53, gbc.readMem(0xd5b4));
        // 53 01D1
        gbc.setState(0x65e2, 0x27bb, 0x5ee0, 0xdd7c, 0xd54e, 0xec6a, 0x1, 0x1);
        gbc.writeMem(0x65e2, { 0x53 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x27bb, gbc.sp());
        EXPECT(0x65e3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 53 01D2
        gbc.setState(0xa076, 0xaca6, 0x43c0, 0x15e5, 0x4b0f, 0x1236, 0x1, 0x1);
        gbc.writeMem(0xa076, { 0x53 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0xaca6, gbc.sp());
        EXPECT(0xa077, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x53, gbc.readMem(0xa076));
        // 53 01D3
        gbc.setState(0x1fe4, 0xa9e8, 0xa30, 0xa6f7, 0x903, 0x304e, 0x0, 0x0);
        gbc.writeMem(0x1fe4, { 0x53 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0xa9e8, gbc.sp());
        EXPECT(0x1fe5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 53 01D4
        gbc.setState(0x8c51, 0x2373, 0xceb0, 0xd376, 0xddf4, 0x1cb6, 0x0, 0x0);
        gbc.writeMem(0x8c51, { 0x53 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x2373, gbc.sp());
        EXPECT(0x8c52, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x53, gbc.readMem(0x8c51));
        // 53 01D5
        gbc.setState(0x6b39, 0x6318, 0x7030, 0xf105, 0xeef4, 0x5499, 0x0, 0x0);
        gbc.writeMem(0x6b39, { 0x53 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x6318, gbc.sp());
        EXPECT(0x6b3a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 53 01D7
        gbc.setState(0x2e7f, 0x7b48, 0x52d0, 0x22af, 0xa217, 0x6f56, 0x0, 0x0);
        gbc.writeMem(0x2e7f, { 0x53 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0x7b48, gbc.sp());
        EXPECT(0x2e80, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 53 01D8
        gbc.setState(0x2ef9, 0xa6b5, 0x5510, 0x1642, 0x1128, 0xe300, 0x1, 0x1);
        gbc.writeMem(0x2ef9, { 0x53 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0xa6b5, gbc.sp());
        EXPECT(0x2efa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 53 01D9
        gbc.setState(0xad66, 0x23c0, 0x77f0, 0x184f, 0x74d7, 0xfd6, 0x0, 0x0);
        gbc.writeMem(0xad66, { 0x53 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x23c0, gbc.sp());
        EXPECT(0xad67, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x53, gbc.readMem(0xad66));
        // 53 01DA
        gbc.setState(0xbc4e, 0xd3b4, 0xe5a0, 0x758a, 0x50a5, 0x51b3, 0x0, 0x1);
        gbc.writeMem(0xbc4e, { 0x53 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0xd3b4, gbc.sp());
        EXPECT(0xbc4f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x53, gbc.readMem(0xbc4e));
        // 53 01DC
        gbc.setState(0x1c6d, 0xc4c9, 0x4750, 0xd09b, 0xb1ff, 0x7b6a, 0x0, 0x0);
        gbc.writeMem(0x1c6d, { 0x53 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0xc4c9, gbc.sp());
        EXPECT(0x1c6e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 53 01DD
        gbc.setState(0x46a1, 0xac5e, 0xc460, 0x4729, 0x63b5, 0xb3e0, 0x0, 0x0);
        gbc.writeMem(0x46a1, { 0x53 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0xac5e, gbc.sp());
        EXPECT(0x46a2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 53 01DE
        gbc.setState(0x24b3, 0xbe29, 0x9190, 0x35a5, 0x23ea, 0x2049, 0x0, 0x0);
        gbc.writeMem(0x24b3, { 0x53 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0xbe29, gbc.sp());
        EXPECT(0x24b4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 53 01E1
        gbc.setState(0x5f7, 0x976d, 0x4100, 0x30bc, 0xc44b, 0x5f08, 0x0, 0x1);
        gbc.writeMem(0x5f7, { 0x53 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x976d, gbc.sp());
        EXPECT(0x5f8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 53 01E4
        gbc.setState(0x3d64, 0xc135, 0x7d00, 0xea77, 0x3f3b, 0xdd19, 0x0, 0x0);
        gbc.writeMem(0x3d64, { 0x53 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0xc135, gbc.sp());
        EXPECT(0x3d65, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 53 01E5
        gbc.setState(0x67e1, 0x1c5, 0x6740, 0x3ce4, 0x94a1, 0xb120, 0x0, 0x0);
        gbc.writeMem(0x67e1, { 0x53 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x1c5, gbc.sp());
        EXPECT(0x67e2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 53 01E6
        gbc.setState(0x431f, 0x59ac, 0x7860, 0xd5cf, 0x5261, 0xc0b6, 0x0, 0x1);
        gbc.writeMem(0x431f, { 0x53 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x59ac, gbc.sp());
        EXPECT(0x4320, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 53 01E7
        gbc.setState(0x21c8, 0x1b9d, 0xb820, 0x1d87, 0xd341, 0xb9db, 0x0, 0x0);
        gbc.writeMem(0x21c8, { 0x53 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x1b9d, gbc.sp());
        EXPECT(0x21c9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 53 01E8
        gbc.setState(0x6e4a, 0x770f, 0x6a40, 0xd8ad, 0x2902, 0x4e60, 0x0, 0x0);
        gbc.writeMem(0x6e4a, { 0x53 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x770f, gbc.sp());
        EXPECT(0x6e4b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 53 01E9
        gbc.setState(0xd625, 0xa26a, 0x8f00, 0xfa0, 0xe3fc, 0x7e86, 0x0, 0x0);
        gbc.writeMem(0xd625, { 0x53 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0xa26a, gbc.sp());
        EXPECT(0xd626, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x53, gbc.readMem(0xd625));
        // 53 01EA
        gbc.setState(0xae58, 0xb2ae, 0xa1c0, 0x6297, 0x1cd2, 0xe75d, 0x1, 0x1);
        gbc.writeMem(0xae58, { 0x53 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0xb2ae, gbc.sp());
        EXPECT(0xae59, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x53, gbc.readMem(0xae58));
        // 53 01EB
        gbc.setState(0xa6db, 0x576a, 0x71b0, 0x24b5, 0x95f4, 0x40a8, 0x1, 0x0);
        gbc.writeMem(0xa6db, { 0x53 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x576a, gbc.sp());
        EXPECT(0xa6dc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x53, gbc.readMem(0xa6db));
        // 53 01EC
        gbc.setState(0x621f, 0xf5af, 0x7fe0, 0xc95c, 0x8923, 0x5e9c, 0x0, 0x1);
        gbc.writeMem(0x621f, { 0x53 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0xf5af, gbc.sp());
        EXPECT(0x6220, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 53 01ED
        gbc.setState(0x2dea, 0xffcd, 0xb730, 0x64e6, 0x962, 0xfcc4, 0x1, 0x0);
        gbc.writeMem(0x2dea, { 0x53 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0xffcd, gbc.sp());
        EXPECT(0x2deb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 53 01EE
        gbc.setState(0x6074, 0xcd1a, 0x6d20, 0xe876, 0xfa5a, 0xa4ac, 0x0, 0x1);
        gbc.writeMem(0x6074, { 0x53 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0xcd1a, gbc.sp());
        EXPECT(0x6075, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 53 01EF
        gbc.setState(0xc5b, 0x6482, 0xf320, 0xaccc, 0x9284, 0x6dc8, 0x1, 0x0);
        gbc.writeMem(0xc5b, { 0x53 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x6482, gbc.sp());
        EXPECT(0xc5c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 53 01F0
        gbc.setState(0x40f5, 0xf1c9, 0x87a0, 0x9da2, 0x6d4b, 0xba85, 0x1, 0x0);
        gbc.writeMem(0x40f5, { 0x53 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0xf1c9, gbc.sp());
        EXPECT(0x40f6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 53 01F1
        gbc.setState(0xe6c1, 0x42f0, 0xdb30, 0x52ac, 0x19b1, 0xcf0b, 0x1, 0x1);
        gbc.writeMem(0xe6c1, { 0x53 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x42f0, gbc.sp());
        EXPECT(0xe6c2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x53, gbc.readMem(0xe6c1));
        // 53 01F2
        gbc.setState(0x9b3f, 0x87ea, 0xe400, 0xec7, 0xc679, 0x33f1, 0x1, 0x0);
        gbc.writeMem(0x9b3f, { 0x53 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x87ea, gbc.sp());
        EXPECT(0x9b40, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x53, gbc.readMem(0x9b3f));
        // 53 01F3
        gbc.setState(0x7704, 0xf97c, 0xed90, 0xc7a4, 0x95cd, 0x4d9f, 0x0, 0x1);
        gbc.writeMem(0x7704, { 0x53 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0xf97c, gbc.sp());
        EXPECT(0x7705, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 53 01F4
        gbc.setState(0x6e28, 0x323b, 0x8250, 0x4efe, 0x5344, 0x339, 0x0, 0x0);
        gbc.writeMem(0x6e28, { 0x53 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x323b, gbc.sp());
        EXPECT(0x6e29, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 53 01F5
        gbc.setState(0xb02b, 0x5d99, 0x9100, 0xfbb8, 0xac61, 0xaf6d, 0x1, 0x0);
        gbc.writeMem(0xb02b, { 0x53 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x5d99, gbc.sp());
        EXPECT(0xb02c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x53, gbc.readMem(0xb02b));
        // 53 01F6
        gbc.setState(0xd7c9, 0x7b21, 0x3520, 0xcd0e, 0x7fda, 0x6464, 0x0, 0x1);
        gbc.writeMem(0xd7c9, { 0x53 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x7b21, gbc.sp());
        EXPECT(0xd7ca, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x53, gbc.readMem(0xd7c9));
        // 53 01F8
        gbc.setState(0x4687, 0x597a, 0x6550, 0x8cf1, 0xfeff, 0x1fd6, 0x0, 0x1);
        gbc.writeMem(0x4687, { 0x53 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x597a, gbc.sp());
        EXPECT(0x4688, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 53 01F9
        gbc.setState(0xe7fa, 0x286a, 0xdd50, 0x5fc9, 0xf69d, 0x78d7, 0x0, 0x0);
        gbc.writeMem(0xe7fa, { 0x53 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0x286a, gbc.sp());
        EXPECT(0xe7fb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x53, gbc.readMem(0xe7fa));
        // 53 01FA
        gbc.setState(0xac36, 0x7806, 0x4d10, 0x282e, 0x6ab6, 0x33f6, 0x1, 0x0);
        gbc.writeMem(0xac36, { 0x53 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x7806, gbc.sp());
        EXPECT(0xac37, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x53, gbc.readMem(0xac36));
        // 53 01FB
        gbc.setState(0x40b6, 0x9598, 0x6820, 0xe4cb, 0x4eb4, 0x698f, 0x1, 0x0);
        gbc.writeMem(0x40b6, { 0x53 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x9598, gbc.sp());
        EXPECT(0x40b7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 53 01FC
        gbc.setState(0xd3b7, 0x98f1, 0xbf50, 0xd194, 0x40dc, 0x83d4, 0x0, 0x1);
        gbc.writeMem(0xd3b7, { 0x53 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x98f1, gbc.sp());
        EXPECT(0xd3b8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x53, gbc.readMem(0xd3b7));
        // 53 01FD
        gbc.setState(0x2981, 0x40d8, 0xb4a0, 0x851c, 0x373, 0xe5d8, 0x1, 0x1);
        gbc.writeMem(0x2981, { 0x53 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x40d8, gbc.sp());
        EXPECT(0x2982, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 53 01FF
        gbc.setState(0x81fa, 0x232, 0xb820, 0xce2a, 0x796d, 0x6fb0, 0x1, 0x0);
        gbc.writeMem(0x81fa, { 0x53 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x232, gbc.sp());
        EXPECT(0x81fb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x53, gbc.readMem(0x81fa));
        // 53 0200
        gbc.setState(0xb925, 0xac78, 0xbfe0, 0xd19, 0x584c, 0xced8, 0x1, 0x1);
        gbc.writeMem(0xb925, { 0x53 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0xac78, gbc.sp());
        EXPECT(0xb926, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x53, gbc.readMem(0xb925));
        // 53 0201
        gbc.setState(0x8c6d, 0xc3ab, 0x2530, 0x85a5, 0xd956, 0x891a, 0x1, 0x1);
        gbc.writeMem(0x8c6d, { 0x53 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0xc3ab, gbc.sp());
        EXPECT(0x8c6e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x53, gbc.readMem(0x8c6d));
        // 53 0202
        gbc.setState(0xd130, 0xd2aa, 0x84b0, 0x28bb, 0x46a7, 0x9623, 0x1, 0x0);
        gbc.writeMem(0xd130, { 0x53 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0xd2aa, gbc.sp());
        EXPECT(0xd131, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x53, gbc.readMem(0xd130));
        // 53 0203
        gbc.setState(0x5fab, 0x5e44, 0x64a0, 0xaffe, 0xdf12, 0xed72, 0x0, 0x0);
        gbc.writeMem(0x5fab, { 0x53 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x5e44, gbc.sp());
        EXPECT(0x5fac, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 53 0204
        gbc.setState(0x3081, 0x4dd0, 0x4200, 0xf010, 0x6acf, 0x6a3f, 0x0, 0x1);
        gbc.writeMem(0x3081, { 0x53 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0x4dd0, gbc.sp());
        EXPECT(0x3082, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 53 0205
        gbc.setState(0xcea5, 0xdae, 0x9710, 0x9f5b, 0xaa99, 0x338c, 0x0, 0x0);
        gbc.writeMem(0xcea5, { 0x53 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0xdae, gbc.sp());
        EXPECT(0xcea6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x53, gbc.readMem(0xcea5));
        // 53 0206
        gbc.setState(0xb792, 0x131e, 0x5e30, 0x9cc8, 0x8b05, 0xffa8, 0x1, 0x1);
        gbc.writeMem(0xb792, { 0x53 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x131e, gbc.sp());
        EXPECT(0xb793, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x53, gbc.readMem(0xb792));
        // 53 0207
        gbc.setState(0x7d37, 0x4dcf, 0x7350, 0x76e7, 0xc780, 0xc7b3, 0x1, 0x0);
        gbc.writeMem(0x7d37, { 0x53 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x4dcf, gbc.sp());
        EXPECT(0x7d38, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 53 0208
        gbc.setState(0x801d, 0x14d7, 0x6080, 0x221b, 0xe207, 0x9b85, 0x1, 0x0);
        gbc.writeMem(0x801d, { 0x53 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x14d7, gbc.sp());
        EXPECT(0x801e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x53, gbc.readMem(0x801d));
        // 53 0209
        gbc.setState(0x63c4, 0x9d69, 0x6a30, 0xf339, 0x126b, 0x32b0, 0x1, 0x0);
        gbc.writeMem(0x63c4, { 0x53 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x9d69, gbc.sp());
        EXPECT(0x63c5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 53 020A
        gbc.setState(0x548b, 0xe84e, 0x7b80, 0x7874, 0xa9e7, 0x400d, 0x0, 0x0);
        gbc.writeMem(0x548b, { 0x53 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0xe84e, gbc.sp());
        EXPECT(0x548c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 53 020B
        gbc.setState(0x2147, 0xb9fa, 0x4160, 0xf4d8, 0x2129, 0x3cd1, 0x0, 0x0);
        gbc.writeMem(0x2147, { 0x53 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0xb9fa, gbc.sp());
        EXPECT(0x2148, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 53 020C
        gbc.setState(0x793b, 0x7fb4, 0xa370, 0xd0a6, 0xbd8f, 0x917d, 0x0, 0x1);
        gbc.writeMem(0x793b, { 0x53 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x7fb4, gbc.sp());
        EXPECT(0x793c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 53 020D
        gbc.setState(0xc165, 0xa565, 0x9ca0, 0xc2d, 0xa013, 0xe865, 0x0, 0x0);
        gbc.writeMem(0xc165, { 0x53 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0xa565, gbc.sp());
        EXPECT(0xc166, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x53, gbc.readMem(0xc165));
        // 53 020F
        gbc.setState(0xaab7, 0x2ff0, 0xc5c0, 0x330f, 0x622c, 0x91a6, 0x1, 0x1);
        gbc.writeMem(0xaab7, { 0x53 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x2ff0, gbc.sp());
        EXPECT(0xaab8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x53, gbc.readMem(0xaab7));
        // 53 0210
        gbc.setState(0x65ac, 0x7518, 0x2690, 0x5b55, 0xeff4, 0xb539, 0x1, 0x0);
        gbc.writeMem(0x65ac, { 0x53 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x7518, gbc.sp());
        EXPECT(0x65ad, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 53 0211
        gbc.setState(0x7b8d, 0x6645, 0x3a0, 0xea6f, 0xc004, 0xdcb6, 0x0, 0x1);
        gbc.writeMem(0x7b8d, { 0x53 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x6645, gbc.sp());
        EXPECT(0x7b8e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 53 0212
        gbc.setState(0x923d, 0xe12, 0x7060, 0x8524, 0x2dd3, 0x2b58, 0x1, 0x0);
        gbc.writeMem(0x923d, { 0x53 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0xe12, gbc.sp());
        EXPECT(0x923e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x53, gbc.readMem(0x923d));
        // 53 0213
        gbc.setState(0x4455, 0x6129, 0xdc0, 0xb4b0, 0xfc33, 0x2c32, 0x0, 0x0);
        gbc.writeMem(0x4455, { 0x53 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x6129, gbc.sp());
        EXPECT(0x4456, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 53 0214
        gbc.setState(0x1161, 0x46af, 0xae10, 0x437c, 0x87fc, 0xda36, 0x0, 0x0);
        gbc.writeMem(0x1161, { 0x53 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x46af, gbc.sp());
        EXPECT(0x1162, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 53 0215
        gbc.setState(0x6825, 0x7a08, 0xe750, 0xaaa0, 0x9418, 0x8525, 0x0, 0x0);
        gbc.writeMem(0x6825, { 0x53 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x7a08, gbc.sp());
        EXPECT(0x6826, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 53 0216
        gbc.setState(0x349a, 0xa33b, 0x4c20, 0x6a07, 0x8f53, 0x52ae, 0x1, 0x0);
        gbc.writeMem(0x349a, { 0x53 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0xa33b, gbc.sp());
        EXPECT(0x349b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 53 0217
        gbc.setState(0x2a56, 0x521c, 0xb980, 0x65f7, 0x714f, 0xc482, 0x1, 0x0);
        gbc.writeMem(0x2a56, { 0x53 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x521c, gbc.sp());
        EXPECT(0x2a57, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 53 0218
        gbc.setState(0x19a0, 0x98f4, 0xb7d0, 0x3c0d, 0x6428, 0xb14a, 0x0, 0x0);
        gbc.writeMem(0x19a0, { 0x53 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x98f4, gbc.sp());
        EXPECT(0x19a1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 53 0219
        gbc.setState(0xd4f, 0xc4be, 0xb310, 0x5197, 0xd24, 0xeefb, 0x0, 0x1);
        gbc.writeMem(0xd4f, { 0x53 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0xc4be, gbc.sp());
        EXPECT(0xd50, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 53 021A
        gbc.setState(0x7352, 0xd6a8, 0x8ef0, 0x387b, 0x195, 0x5983, 0x0, 0x1);
        gbc.writeMem(0x7352, { 0x53 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0xd6a8, gbc.sp());
        EXPECT(0x7353, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 53 021B
        gbc.setState(0x2c44, 0xefb5, 0xf220, 0x113a, 0x84d6, 0x774c, 0x0, 0x1);
        gbc.writeMem(0x2c44, { 0x53 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0xefb5, gbc.sp());
        EXPECT(0x2c45, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 53 021C
        gbc.setState(0x69b6, 0xa81c, 0xa800, 0xe7e5, 0x2c0e, 0xc1d1, 0x1, 0x1);
        gbc.writeMem(0x69b6, { 0x53 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0xa81c, gbc.sp());
        EXPECT(0x69b7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 53 021D
        gbc.setState(0x607, 0x8a44, 0x26e0, 0xf810, 0x8143, 0x2058, 0x1, 0x1);
        gbc.writeMem(0x607, { 0x53 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x8a44, gbc.sp());
        EXPECT(0x608, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 53 021E
        gbc.setState(0xe31e, 0x41ce, 0xe5e0, 0x6aee, 0x812a, 0xa5e8, 0x1, 0x0);
        gbc.writeMem(0xe31e, { 0x53 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x41ce, gbc.sp());
        EXPECT(0xe31f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x53, gbc.readMem(0xe31e));
        // 53 021F
        gbc.setState(0xa9b2, 0x8203, 0x200, 0x9b62, 0x3025, 0x8532, 0x1, 0x0);
        gbc.writeMem(0xa9b2, { 0x53 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x8203, gbc.sp());
        EXPECT(0xa9b3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x53, gbc.readMem(0xa9b2));
        // 53 0220
        gbc.setState(0x2066, 0x9b25, 0x8200, 0xd2c9, 0x1e72, 0x4cf3, 0x1, 0x0);
        gbc.writeMem(0x2066, { 0x53 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x9b25, gbc.sp());
        EXPECT(0x2067, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 53 0221
        gbc.setState(0xc6f6, 0x42d5, 0x6740, 0x4565, 0xab88, 0x93a0, 0x0, 0x1);
        gbc.writeMem(0xc6f6, { 0x53 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x42d5, gbc.sp());
        EXPECT(0xc6f7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x53, gbc.readMem(0xc6f6));
        // 53 0222
        gbc.setState(0xd65f, 0x2b54, 0x8760, 0xc783, 0x252, 0xdad8, 0x0, 0x1);
        gbc.writeMem(0xd65f, { 0x53 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x2b54, gbc.sp());
        EXPECT(0xd660, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x53, gbc.readMem(0xd65f));
        // 53 0223
        gbc.setState(0x8c51, 0xf6f7, 0x3e70, 0x57e2, 0xcee5, 0xb890, 0x0, 0x0);
        gbc.writeMem(0x8c51, { 0x53 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0xf6f7, gbc.sp());
        EXPECT(0x8c52, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x53, gbc.readMem(0x8c51));
        // 53 0224
        gbc.setState(0xe0fc, 0xe8b1, 0xdbc0, 0xe943, 0xdb1, 0x621c, 0x0, 0x1);
        gbc.writeMem(0xe0fc, { 0x53 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0xe8b1, gbc.sp());
        EXPECT(0xe0fd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x53, gbc.readMem(0xe0fc));
        // 53 0225
        gbc.setState(0xce75, 0xfff5, 0x60a0, 0x612f, 0xa32, 0x52f9, 0x1, 0x1);
        gbc.writeMem(0xce75, { 0x53 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0xfff5, gbc.sp());
        EXPECT(0xce76, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x53, gbc.readMem(0xce75));
        // 53 0226
        gbc.setState(0x2d90, 0xa85e, 0xad60, 0x5f17, 0x2b12, 0xa6c1, 0x0, 0x0);
        gbc.writeMem(0x2d90, { 0x53 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0xa85e, gbc.sp());
        EXPECT(0x2d91, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 53 0227
        gbc.setState(0xb0ee, 0x95ca, 0x23c0, 0x36d9, 0x546a, 0xfa5, 0x1, 0x0);
        gbc.writeMem(0xb0ee, { 0x53 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x95ca, gbc.sp());
        EXPECT(0xb0ef, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x53, gbc.readMem(0xb0ee));
        // 53 0229
        gbc.setState(0xbc37, 0x7b09, 0xa2c0, 0xd073, 0xd706, 0x5f5b, 0x0, 0x1);
        gbc.writeMem(0xbc37, { 0x53 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x7b09, gbc.sp());
        EXPECT(0xbc38, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x53, gbc.readMem(0xbc37));
        // 53 022A
        gbc.setState(0x28e0, 0xcc56, 0x2320, 0xd98d, 0xde03, 0x5de9, 0x0, 0x1);
        gbc.writeMem(0x28e0, { 0x53 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0xcc56, gbc.sp());
        EXPECT(0x28e1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 53 022B
        gbc.setState(0x22b9, 0xae48, 0x8720, 0x21d9, 0xcf51, 0x24e2, 0x0, 0x1);
        gbc.writeMem(0x22b9, { 0x53 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0xae48, gbc.sp());
        EXPECT(0x22ba, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 53 022C
        gbc.setState(0x9b90, 0xdc12, 0x4130, 0x3565, 0x6d7e, 0x2421, 0x0, 0x1);
        gbc.writeMem(0x9b90, { 0x53 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0xdc12, gbc.sp());
        EXPECT(0x9b91, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x53, gbc.readMem(0x9b90));
        // 53 022D
        gbc.setState(0x27b7, 0x2f59, 0xe9e0, 0x3dc9, 0xeec3, 0x8de6, 0x1, 0x1);
        gbc.writeMem(0x27b7, { 0x53 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x2f59, gbc.sp());
        EXPECT(0x27b8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 53 022E
        gbc.setState(0x8277, 0x8554, 0x81f0, 0xac6d, 0x5bf, 0x6c68, 0x0, 0x1);
        gbc.writeMem(0x8277, { 0x53 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x8554, gbc.sp());
        EXPECT(0x8278, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x53, gbc.readMem(0x8277));
        // 53 022F
        gbc.setState(0x5e4, 0x454, 0xc750, 0x884b, 0xbe88, 0xb229, 0x1, 0x0);
        gbc.writeMem(0x5e4, { 0x53 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x454, gbc.sp());
        EXPECT(0x5e5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 53 0230
        gbc.setState(0xbc5c, 0xa25, 0x240, 0x5f, 0x52cd, 0x16e7, 0x0, 0x0);
        gbc.writeMem(0xbc5c, { 0x53 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0xa25, gbc.sp());
        EXPECT(0xbc5d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x53, gbc.readMem(0xbc5c));
        // 53 0231
        gbc.setState(0x89b1, 0xb96, 0xb8f0, 0xb83e, 0x3a6e, 0x30a3, 0x0, 0x1);
        gbc.writeMem(0x89b1, { 0x53 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0xb96, gbc.sp());
        EXPECT(0x89b2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x53, gbc.readMem(0x89b1));
        // 53 0232
        gbc.setState(0x615c, 0xacbd, 0xed0, 0x8178, 0x94cb, 0xaf71, 0x0, 0x0);
        gbc.writeMem(0x615c, { 0x53 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0xacbd, gbc.sp());
        EXPECT(0x615d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 53 0233
        gbc.setState(0x5fad, 0xf451, 0x14e0, 0xb901, 0x9043, 0xd4c4, 0x0, 0x0);
        gbc.writeMem(0x5fad, { 0x53 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0xf451, gbc.sp());
        EXPECT(0x5fae, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 53 0234
        gbc.setState(0x5449, 0x5bbf, 0xef30, 0xc945, 0x9bdc, 0x320, 0x0, 0x0);
        gbc.writeMem(0x5449, { 0x53 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x5bbf, gbc.sp());
        EXPECT(0x544a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 53 0235
        gbc.setState(0xea9e, 0x2205, 0xc450, 0xe8bb, 0xfda2, 0x75c6, 0x1, 0x0);
        gbc.writeMem(0xea9e, { 0x53 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x2205, gbc.sp());
        EXPECT(0xea9f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x53, gbc.readMem(0xea9e));
        // 53 0236
        gbc.setState(0x8a15, 0xfd79, 0x1dd0, 0x397c, 0x5167, 0x592c, 0x1, 0x1);
        gbc.writeMem(0x8a15, { 0x53 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0xfd79, gbc.sp());
        EXPECT(0x8a16, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x53, gbc.readMem(0x8a15));
        // 53 0237
        gbc.setState(0x7fda, 0x17dd, 0x6890, 0xbf63, 0xf580, 0xe6ce, 0x1, 0x1);
        gbc.writeMem(0x7fda, { 0x53 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x17dd, gbc.sp());
        EXPECT(0x7fdb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 53 0238
        gbc.setState(0xd25d, 0xef21, 0x6b0, 0x183, 0x163a, 0x1c6b, 0x0, 0x1);
        gbc.writeMem(0xd25d, { 0x53 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0xef21, gbc.sp());
        EXPECT(0xd25e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x53, gbc.readMem(0xd25d));
        // 53 023A
        gbc.setState(0x745d, 0x9912, 0x4f00, 0x25c0, 0x3b53, 0x1b75, 0x1, 0x1);
        gbc.writeMem(0x745d, { 0x53 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x9912, gbc.sp());
        EXPECT(0x745e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 53 023B
        gbc.setState(0x2550, 0x5c81, 0x9a90, 0x30e8, 0xf77b, 0x291f, 0x0, 0x0);
        gbc.writeMem(0x2550, { 0x53 });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x5c81, gbc.sp());
        EXPECT(0x2551, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 53 023C
        gbc.setState(0xca63, 0x6661, 0x1350, 0x22ea, 0x1dd9, 0xb6f0, 0x1, 0x1);
        gbc.writeMem(0xca63, { 0x53 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x6661, gbc.sp());
        EXPECT(0xca64, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x53, gbc.readMem(0xca63));
        // 53 023D
        gbc.setState(0x6278, 0x1432, 0xb00, 0x8b6d, 0x3984, 0x3e87, 0x0, 0x0);
        gbc.writeMem(0x6278, { 0x53 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x1432, gbc.sp());
        EXPECT(0x6279, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 53 023E
        gbc.setState(0x52d8, 0x7018, 0xa090, 0x440d, 0xea9c, 0x5f76, 0x0, 0x0);
        gbc.writeMem(0x52d8, { 0x53 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x7018, gbc.sp());
        EXPECT(0x52d9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 53 023F
        gbc.setState(0x98f9, 0x27e4, 0x9e40, 0x8086, 0xff33, 0x4117, 0x1, 0x0);
        gbc.writeMem(0x98f9, { 0x53 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x27e4, gbc.sp());
        EXPECT(0x98fa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x53, gbc.readMem(0x98f9));
        // 53 0240
        gbc.setState(0xc485, 0x1ec3, 0xd60, 0xd4f3, 0xca0e, 0xd442, 0x1, 0x1);
        gbc.writeMem(0xc485, { 0x53 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x1ec3, gbc.sp());
        EXPECT(0xc486, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x53, gbc.readMem(0xc485));
        // 53 0241
        gbc.setState(0x6e1, 0xdc5c, 0x5390, 0xab96, 0x99cc, 0xbddf, 0x1, 0x0);
        gbc.writeMem(0x6e1, { 0x53 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0xdc5c, gbc.sp());
        EXPECT(0x6e2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 53 0242
        gbc.setState(0xe383, 0xe190, 0x6a80, 0x16b0, 0xb048, 0x9858, 0x1, 0x0);
        gbc.writeMem(0xe383, { 0x53 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0xe190, gbc.sp());
        EXPECT(0xe384, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x53, gbc.readMem(0xe383));
        // 53 0243
        gbc.setState(0x844f, 0x9f66, 0x4090, 0x7e63, 0xb58b, 0x6dbe, 0x0, 0x1);
        gbc.writeMem(0x844f, { 0x53 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0x9f66, gbc.sp());
        EXPECT(0x8450, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x53, gbc.readMem(0x844f));
        // 53 0244
        gbc.setState(0x7006, 0x4ee5, 0x1000, 0xf4a5, 0x3ee2, 0x96d6, 0x1, 0x0);
        gbc.writeMem(0x7006, { 0x53 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x4ee5, gbc.sp());
        EXPECT(0x7007, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 53 0245
        gbc.setState(0x609a, 0x5c49, 0xb3f0, 0xfaea, 0xdc86, 0xac92, 0x1, 0x1);
        gbc.writeMem(0x609a, { 0x53 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x5c49, gbc.sp());
        EXPECT(0x609b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 53 0246
        gbc.setState(0xcf19, 0xd01b, 0x93a0, 0x9cba, 0x8923, 0x56df, 0x0, 0x0);
        gbc.writeMem(0xcf19, { 0x53 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0xd01b, gbc.sp());
        EXPECT(0xcf1a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x53, gbc.readMem(0xcf19));
        // 53 0247
        gbc.setState(0x4169, 0xe561, 0xb990, 0xda23, 0x18f7, 0x4eee, 0x1, 0x1);
        gbc.writeMem(0x4169, { 0x53 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0xe561, gbc.sp());
        EXPECT(0x416a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 53 0248
        gbc.setState(0x4a1d, 0x4853, 0x6d90, 0x8f56, 0x9bbc, 0x2c55, 0x1, 0x1);
        gbc.writeMem(0x4a1d, { 0x53 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x4853, gbc.sp());
        EXPECT(0x4a1e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 53 0249
        gbc.setState(0xc66d, 0xa56a, 0x3080, 0xe73a, 0x69d, 0xe99e, 0x0, 0x1);
        gbc.writeMem(0xc66d, { 0x53 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0xa56a, gbc.sp());
        EXPECT(0xc66e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x53, gbc.readMem(0xc66d));
        // 53 024A
        gbc.setState(0xeedf, 0x8c17, 0xb030, 0x2d4e, 0x6779, 0xc15e, 0x0, 0x0);
        gbc.writeMem(0xeedf, { 0x53 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x8c17, gbc.sp());
        EXPECT(0xeee0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x53, gbc.readMem(0xeedf));
        // 53 024B
        gbc.setState(0x12f1, 0xc77f, 0x3b20, 0xbffc, 0x101f, 0x53d6, 0x0, 0x0);
        gbc.writeMem(0x12f1, { 0x53 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0xc77f, gbc.sp());
        EXPECT(0x12f2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 53 024C
        gbc.setState(0x780b, 0x406c, 0x3260, 0xb4c7, 0x7f67, 0xba46, 0x1, 0x1);
        gbc.writeMem(0x780b, { 0x53 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x406c, gbc.sp());
        EXPECT(0x780c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 53 024D
        gbc.setState(0x683c, 0x5c5f, 0xe9d0, 0xa950, 0xef34, 0x65b, 0x1, 0x0);
        gbc.writeMem(0x683c, { 0x53 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x5c5f, gbc.sp());
        EXPECT(0x683d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 53 024E
        gbc.setState(0x3a17, 0xb41a, 0xe440, 0x2ea, 0x1dfd, 0x6064, 0x1, 0x1);
        gbc.writeMem(0x3a17, { 0x53 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0xb41a, gbc.sp());
        EXPECT(0x3a18, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 53 0250
        gbc.setState(0xdc5c, 0x518, 0x38b0, 0x6d4b, 0x531, 0x6ac6, 0x0, 0x1);
        gbc.writeMem(0xdc5c, { 0x53 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x518, gbc.sp());
        EXPECT(0xdc5d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x53, gbc.readMem(0xdc5c));
        // 53 0252
        gbc.setState(0x96c7, 0xafa, 0x9290, 0x52d3, 0x2ab2, 0x8e30, 0x1, 0x0);
        gbc.writeMem(0x96c7, { 0x53 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0xafa, gbc.sp());
        EXPECT(0x96c8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x53, gbc.readMem(0x96c7));
        // 53 0253
        gbc.setState(0xa614, 0xbe62, 0xfb60, 0xbe26, 0xe4da, 0x345a, 0x1, 0x0);
        gbc.writeMem(0xa614, { 0x53 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0xbe62, gbc.sp());
        EXPECT(0xa615, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x53, gbc.readMem(0xa614));
        // 53 0254
        gbc.setState(0xd812, 0xbd1, 0xc150, 0xf6a7, 0xe8e3, 0xf670, 0x0, 0x0);
        gbc.writeMem(0xd812, { 0x53 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0xbd1, gbc.sp());
        EXPECT(0xd813, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x53, gbc.readMem(0xd812));
        // 53 0255
        gbc.setState(0xb14b, 0x53fa, 0xcc70, 0x7595, 0x2aa5, 0x7216, 0x0, 0x1);
        gbc.writeMem(0xb14b, { 0x53 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x53fa, gbc.sp());
        EXPECT(0xb14c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x53, gbc.readMem(0xb14b));
        // 53 0256
        gbc.setState(0xc27f, 0x2958, 0xf0a0, 0x60c1, 0x60b1, 0x6ff9, 0x0, 0x0);
        gbc.writeMem(0xc27f, { 0x53 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x2958, gbc.sp());
        EXPECT(0xc280, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x53, gbc.readMem(0xc27f));
        // 53 0257
        gbc.setState(0xa8db, 0x64e7, 0x7f60, 0x35ee, 0x38ac, 0x470, 0x0, 0x0);
        gbc.writeMem(0xa8db, { 0x53 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x64e7, gbc.sp());
        EXPECT(0xa8dc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x53, gbc.readMem(0xa8db));
        // 53 0258
        gbc.setState(0xcf33, 0x1369, 0x6370, 0xfaea, 0x867d, 0x27a5, 0x1, 0x0);
        gbc.writeMem(0xcf33, { 0x53 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x1369, gbc.sp());
        EXPECT(0xcf34, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x53, gbc.readMem(0xcf33));
        // 53 0259
        gbc.setState(0x8a4e, 0xd92a, 0x2b00, 0x36c4, 0xb104, 0x4f11, 0x0, 0x1);
        gbc.writeMem(0x8a4e, { 0x53 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0xd92a, gbc.sp());
        EXPECT(0x8a4f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x53, gbc.readMem(0x8a4e));
        // 53 025A
        gbc.setState(0xc0c0, 0xaf78, 0x2dd0, 0x67a0, 0x7bbd, 0x40c0, 0x0, 0x1);
        gbc.writeMem(0xc0c0, { 0x53 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0xaf78, gbc.sp());
        EXPECT(0xc0c1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x53, gbc.readMem(0xc0c0));
        // 53 025B
        gbc.setState(0xe034, 0x86d7, 0x2320, 0x8c87, 0x6f61, 0x57a3, 0x0, 0x1);
        gbc.writeMem(0xe034, { 0x53 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0x86d7, gbc.sp());
        EXPECT(0xe035, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x53, gbc.readMem(0xe034));
        // 53 025C
        gbc.setState(0xc787, 0x9957, 0x5d90, 0xce93, 0xbc77, 0xeb65, 0x0, 0x0);
        gbc.writeMem(0xc787, { 0x53 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x9957, gbc.sp());
        EXPECT(0xc788, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x53, gbc.readMem(0xc787));
        // 53 025D
        gbc.setState(0xead7, 0xbad7, 0xd200, 0x89ba, 0x32b0, 0x81e3, 0x1, 0x0);
        gbc.writeMem(0xead7, { 0x53 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0xbad7, gbc.sp());
        EXPECT(0xead8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x53, gbc.readMem(0xead7));
        // 53 025E
        gbc.setState(0xf92, 0xbb78, 0xb8d0, 0xbaac, 0x972c, 0xf51b, 0x1, 0x0);
        gbc.writeMem(0xf92, { 0x53 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0xbb78, gbc.sp());
        EXPECT(0xf93, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 53 025F
        gbc.setState(0x306d, 0x7599, 0xff80, 0x312e, 0xaa41, 0xffb6, 0x0, 0x0);
        gbc.writeMem(0x306d, { 0x53 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x7599, gbc.sp());
        EXPECT(0x306e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 53 0260
        gbc.setState(0x8f05, 0x2686, 0x1600, 0x4bf6, 0x873f, 0xf352, 0x0, 0x0);
        gbc.writeMem(0x8f05, { 0x53 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x2686, gbc.sp());
        EXPECT(0x8f06, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x53, gbc.readMem(0x8f05));
        // 53 0261
        gbc.setState(0x63, 0x722c, 0x7280, 0x3873, 0x9d4f, 0xb9d, 0x1, 0x1);
        gbc.writeMem(0x63, { 0x53 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x722c, gbc.sp());
        EXPECT(0x64, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 53 0262
        gbc.setState(0x8f47, 0xe54d, 0xf6f0, 0xc54e, 0xc8f0, 0xdaa9, 0x1, 0x0);
        gbc.writeMem(0x8f47, { 0x53 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0xe54d, gbc.sp());
        EXPECT(0x8f48, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x53, gbc.readMem(0x8f47));
        // 53 0263
        gbc.setState(0xaa0a, 0x80ca, 0xc100, 0x8038, 0x1ecf, 0x7, 0x0, 0x0);
        gbc.writeMem(0xaa0a, { 0x53 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x80ca, gbc.sp());
        EXPECT(0xaa0b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x53, gbc.readMem(0xaa0a));
        // 53 0264
        gbc.setState(0x4ff0, 0x1813, 0xe560, 0x4292, 0x69a0, 0xdd7a, 0x0, 0x0);
        gbc.writeMem(0x4ff0, { 0x53 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x1813, gbc.sp());
        EXPECT(0x4ff1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 53 0265
        gbc.setState(0xc6e6, 0xa161, 0xcb00, 0x4555, 0x910, 0x6790, 0x1, 0x1);
        gbc.writeMem(0xc6e6, { 0x53 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0xa161, gbc.sp());
        EXPECT(0xc6e7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x53, gbc.readMem(0xc6e6));
        // 53 0266
        gbc.setState(0xe6b9, 0x1d79, 0xf950, 0xcefc, 0x179f, 0x1aef, 0x0, 0x0);
        gbc.writeMem(0xe6b9, { 0x53 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x1d79, gbc.sp());
        EXPECT(0xe6ba, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x53, gbc.readMem(0xe6b9));
        // 53 0267
        gbc.setState(0x895c, 0x770e, 0x5d20, 0x346e, 0xc65a, 0x1227, 0x1, 0x0);
        gbc.writeMem(0x895c, { 0x53 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x770e, gbc.sp());
        EXPECT(0x895d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x53, gbc.readMem(0x895c));
        // 53 0268
        gbc.setState(0x5881, 0xf21e, 0xb320, 0x3092, 0x2052, 0x4979, 0x1, 0x0);
        gbc.writeMem(0x5881, { 0x53 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0xf21e, gbc.sp());
        EXPECT(0x5882, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 53 0269
        gbc.setState(0x6c95, 0xb7e6, 0xf290, 0xc905, 0x1a2f, 0xdbf1, 0x1, 0x0);
        gbc.writeMem(0x6c95, { 0x53 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0xb7e6, gbc.sp());
        EXPECT(0x6c96, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 53 026A
        gbc.setState(0x3e52, 0xfc2, 0xc020, 0x7c83, 0x55b6, 0x2734, 0x0, 0x0);
        gbc.writeMem(0x3e52, { 0x53 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0xfc2, gbc.sp());
        EXPECT(0x3e53, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 53 026B
        gbc.setState(0x12ec, 0xddd5, 0xc270, 0xca4e, 0x788, 0x6308, 0x0, 0x1);
        gbc.writeMem(0x12ec, { 0x53 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0xddd5, gbc.sp());
        EXPECT(0x12ed, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 53 026C
        gbc.setState(0x188c, 0x2d4e, 0x50a0, 0xcb57, 0xefff, 0x6a46, 0x1, 0x0);
        gbc.writeMem(0x188c, { 0x53 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x2d4e, gbc.sp());
        EXPECT(0x188d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 53 026E
        gbc.setState(0xc09b, 0xfcdd, 0x88b0, 0x9a3c, 0x23c8, 0x83d8, 0x1, 0x1);
        gbc.writeMem(0xc09b, { 0x53 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0xfcdd, gbc.sp());
        EXPECT(0xc09c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x53, gbc.readMem(0xc09b));
        // 53 026F
        gbc.setState(0x488b, 0x9414, 0xd710, 0x2c0e, 0x7c78, 0x12b3, 0x1, 0x0);
        gbc.writeMem(0x488b, { 0x53 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x9414, gbc.sp());
        EXPECT(0x488c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 53 0270
        gbc.setState(0x8109, 0xee64, 0x3190, 0x1986, 0xa78a, 0x4df4, 0x0, 0x0);
        gbc.writeMem(0x8109, { 0x53 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0xee64, gbc.sp());
        EXPECT(0x810a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x53, gbc.readMem(0x8109));
        // 53 0271
        gbc.setState(0x6bfe, 0x2d13, 0xe1a0, 0x2d1a, 0x467a, 0x810f, 0x0, 0x1);
        gbc.writeMem(0x6bfe, { 0x53 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x2d13, gbc.sp());
        EXPECT(0x6bff, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 53 0272
        gbc.setState(0xe202, 0xcf6f, 0xa040, 0x30bf, 0xf75f, 0xdcc4, 0x0, 0x0);
        gbc.writeMem(0xe202, { 0x53 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0xcf6f, gbc.sp());
        EXPECT(0xe203, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x53, gbc.readMem(0xe202));
        // 53 0273
        gbc.setState(0xdb56, 0x4f51, 0xc040, 0xefe4, 0x1193, 0xe30d, 0x0, 0x1);
        gbc.writeMem(0xdb56, { 0x53 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x4f51, gbc.sp());
        EXPECT(0xdb57, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x53, gbc.readMem(0xdb56));
        // 53 0274
        gbc.setState(0xe697, 0x396b, 0x6200, 0x8577, 0x19bb, 0xffd5, 0x0, 0x1);
        gbc.writeMem(0xe697, { 0x53 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x396b, gbc.sp());
        EXPECT(0xe698, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x53, gbc.readMem(0xe697));
        // 53 0275
        gbc.setState(0x54a5, 0xb33d, 0xe500, 0xcc76, 0xdf1, 0x4b79, 0x1, 0x1);
        gbc.writeMem(0x54a5, { 0x53 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0xb33d, gbc.sp());
        EXPECT(0x54a6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 53 0277
        gbc.setState(0xba95, 0x1e31, 0x58c0, 0x5f99, 0x6aa3, 0x63ed, 0x1, 0x1);
        gbc.writeMem(0xba95, { 0x53 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x1e31, gbc.sp());
        EXPECT(0xba96, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x53, gbc.readMem(0xba95));
        // 53 0278
        gbc.setState(0x4fb1, 0xfb29, 0xb150, 0xf67a, 0xe5d5, 0x8ee8, 0x0, 0x1);
        gbc.writeMem(0x4fb1, { 0x53 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0xfb29, gbc.sp());
        EXPECT(0x4fb2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 53 0279
        gbc.setState(0x304b, 0x6202, 0x790, 0x7d58, 0x2d1f, 0x2af0, 0x0, 0x1);
        gbc.writeMem(0x304b, { 0x53 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x6202, gbc.sp());
        EXPECT(0x304c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 53 027A
        gbc.setState(0x45a4, 0x6bac, 0xe610, 0x3e4d, 0x4001, 0xd61, 0x1, 0x1);
        gbc.writeMem(0x45a4, { 0x53 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x6bac, gbc.sp());
        EXPECT(0x45a5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 53 027B
        gbc.setState(0x5c22, 0x5fcd, 0x7b50, 0xd30e, 0x792f, 0x7c09, 0x1, 0x0);
        gbc.writeMem(0x5c22, { 0x53 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x5fcd, gbc.sp());
        EXPECT(0x5c23, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 53 027C
        gbc.setState(0x4ff6, 0x2547, 0x2680, 0xc9bf, 0x6e19, 0xcc97, 0x0, 0x1);
        gbc.writeMem(0x4ff6, { 0x53 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0x2547, gbc.sp());
        EXPECT(0x4ff7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 53 027E
        gbc.setState(0x64ec, 0x7f61, 0xd430, 0x57c8, 0x6031, 0xd534, 0x1, 0x1);
        gbc.writeMem(0x64ec, { 0x53 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x7f61, gbc.sp());
        EXPECT(0x64ed, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 53 027F
        gbc.setState(0x7cd6, 0xc819, 0x9ff0, 0x9cfc, 0x7938, 0x2da9, 0x0, 0x0);
        gbc.writeMem(0x7cd6, { 0x53 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0xc819, gbc.sp());
        EXPECT(0x7cd7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 53 0280
        gbc.setState(0x8d2a, 0x76fb, 0x4620, 0xdb44, 0xadf8, 0xca4e, 0x1, 0x1);
        gbc.writeMem(0x8d2a, { 0x53 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x76fb, gbc.sp());
        EXPECT(0x8d2b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x53, gbc.readMem(0x8d2a));
        // 53 0281
        gbc.setState(0x3caf, 0xa906, 0x8de0, 0x29ac, 0xf763, 0x48fe, 0x1, 0x1);
        gbc.writeMem(0x3caf, { 0x53 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0xa906, gbc.sp());
        EXPECT(0x3cb0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 53 0282
        gbc.setState(0x43dc, 0x3de, 0xfe80, 0xf51d, 0x3b66, 0xc241, 0x0, 0x1);
        gbc.writeMem(0x43dc, { 0x53 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x3de, gbc.sp());
        EXPECT(0x43dd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 53 0283
        gbc.setState(0x3712, 0x415c, 0x5400, 0xfccd, 0x8677, 0x4206, 0x0, 0x1);
        gbc.writeMem(0x3712, { 0x53 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x415c, gbc.sp());
        EXPECT(0x3713, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 53 0285
        gbc.setState(0xc4fe, 0xc127, 0x80b0, 0x1642, 0x3314, 0x9aa5, 0x0, 0x0);
        gbc.writeMem(0xc4fe, { 0x53 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0xc127, gbc.sp());
        EXPECT(0xc4ff, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x53, gbc.readMem(0xc4fe));
        // 53 0286
        gbc.setState(0xa094, 0xee32, 0x87c0, 0xeacb, 0xcc31, 0x3145, 0x0, 0x1);
        gbc.writeMem(0xa094, { 0x53 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0xee32, gbc.sp());
        EXPECT(0xa095, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x53, gbc.readMem(0xa094));
        // 53 0287
        gbc.setState(0x453d, 0x924d, 0xa540, 0xe58, 0xd49c, 0x6762, 0x0, 0x0);
        gbc.writeMem(0x453d, { 0x53 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x924d, gbc.sp());
        EXPECT(0x453e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 53 0288
        gbc.setState(0xa5e7, 0xe9f7, 0x8170, 0xe3bb, 0x105f, 0x816, 0x1, 0x1);
        gbc.writeMem(0xa5e7, { 0x53 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0xe9f7, gbc.sp());
        EXPECT(0xa5e8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x53, gbc.readMem(0xa5e7));
        // 53 0289
        gbc.setState(0x686d, 0x8e3a, 0x9ff0, 0xad05, 0x865, 0xac64, 0x0, 0x0);
        gbc.writeMem(0x686d, { 0x53 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x8e3a, gbc.sp());
        EXPECT(0x686e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 53 028A
        gbc.setState(0x5b44, 0xab5e, 0xf4f0, 0x4561, 0x55cc, 0x5e84, 0x1, 0x0);
        gbc.writeMem(0x5b44, { 0x53 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0xab5e, gbc.sp());
        EXPECT(0x5b45, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 53 028B
        gbc.setState(0xbcd5, 0x4e55, 0x830, 0x3a4c, 0x4a3b, 0xa34b, 0x0, 0x0);
        gbc.writeMem(0xbcd5, { 0x53 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x4e55, gbc.sp());
        EXPECT(0xbcd6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x53, gbc.readMem(0xbcd5));
        // 53 028C
        gbc.setState(0xe2ef, 0x2e63, 0x7ab0, 0x60a3, 0xda3b, 0x4cba, 0x1, 0x0);
        gbc.writeMem(0xe2ef, { 0x53 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0x2e63, gbc.sp());
        EXPECT(0xe2f0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x53, gbc.readMem(0xe2ef));
        // 53 028D
        gbc.setState(0xe852, 0xe69c, 0x4d20, 0xd716, 0xbaf7, 0xa656, 0x0, 0x0);
        gbc.writeMem(0xe852, { 0x53 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0xe69c, gbc.sp());
        EXPECT(0xe853, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x53, gbc.readMem(0xe852));
        // 53 028E
        gbc.setState(0x50d3, 0x8122, 0x74a0, 0xb234, 0x8ce9, 0x122f, 0x1, 0x0);
        gbc.writeMem(0x50d3, { 0x53 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x8122, gbc.sp());
        EXPECT(0x50d4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 53 028F
        gbc.setState(0xd23f, 0x6194, 0x4f10, 0xc84f, 0x4588, 0x8f25, 0x1, 0x1);
        gbc.writeMem(0xd23f, { 0x53 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x6194, gbc.sp());
        EXPECT(0xd240, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x53, gbc.readMem(0xd23f));
        // 53 0290
        gbc.setState(0x882, 0x74fd, 0xbfe0, 0x2c34, 0xcd4c, 0x90ec, 0x0, 0x1);
        gbc.writeMem(0x882, { 0x53 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x74fd, gbc.sp());
        EXPECT(0x883, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 53 0291
        gbc.setState(0x79bc, 0xa870, 0x70b0, 0x4a6b, 0x151b, 0xf22a, 0x1, 0x0);
        gbc.writeMem(0x79bc, { 0x53 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0xa870, gbc.sp());
        EXPECT(0x79bd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 53 0292
        gbc.setState(0x794d, 0xa3a7, 0xd2c0, 0x7a8, 0x67ce, 0x86d6, 0x0, 0x1);
        gbc.writeMem(0x794d, { 0x53 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0xa3a7, gbc.sp());
        EXPECT(0x794e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 53 0293
        gbc.setState(0x31d2, 0x3764, 0xf260, 0x3617, 0xbfd0, 0x4e4b, 0x0, 0x0);
        gbc.writeMem(0x31d2, { 0x53 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x3764, gbc.sp());
        EXPECT(0x31d3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 53 0294
        gbc.setState(0xd7da, 0x4b8a, 0x3b70, 0x80bf, 0x2b71, 0x10f1, 0x1, 0x1);
        gbc.writeMem(0xd7da, { 0x53 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x4b8a, gbc.sp());
        EXPECT(0xd7db, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x53, gbc.readMem(0xd7da));
        // 53 0295
        gbc.setState(0xa4dc, 0x75d3, 0x5020, 0xcd9, 0x1182, 0x1bf, 0x0, 0x0);
        gbc.writeMem(0xa4dc, { 0x53 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x75d3, gbc.sp());
        EXPECT(0xa4dd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x53, gbc.readMem(0xa4dc));
        // 53 0296
        gbc.setState(0xd50f, 0xd47c, 0x65d0, 0x8ac6, 0x1f41, 0x75dc, 0x0, 0x1);
        gbc.writeMem(0xd50f, { 0x53 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0xd47c, gbc.sp());
        EXPECT(0xd510, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x53, gbc.readMem(0xd50f));
        // 53 0297
        gbc.setState(0xd9b1, 0xa987, 0x18b0, 0xeea0, 0xe074, 0x1c85, 0x1, 0x1);
        gbc.writeMem(0xd9b1, { 0x53 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0xa987, gbc.sp());
        EXPECT(0xd9b2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x53, gbc.readMem(0xd9b1));
        // 53 0298
        gbc.setState(0x313e, 0x1ada, 0x5b00, 0x2db1, 0x86c2, 0xed5e, 0x1, 0x0);
        gbc.writeMem(0x313e, { 0x53 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x1ada, gbc.sp());
        EXPECT(0x313f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 53 0299
        gbc.setState(0x6c8a, 0x28b, 0x6ed0, 0x16ba, 0x26cf, 0x8082, 0x0, 0x0);
        gbc.writeMem(0x6c8a, { 0x53 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x28b, gbc.sp());
        EXPECT(0x6c8b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 53 029A
        gbc.setState(0xbc79, 0x638c, 0x5d0, 0xa213, 0xa1ce, 0xe3c7, 0x0, 0x0);
        gbc.writeMem(0xbc79, { 0x53 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x638c, gbc.sp());
        EXPECT(0xbc7a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x53, gbc.readMem(0xbc79));
        // 53 029B
        gbc.setState(0x436, 0x1b81, 0xc970, 0x7dc3, 0xb7ee, 0x8256, 0x0, 0x1);
        gbc.writeMem(0x436, { 0x53 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0x1b81, gbc.sp());
        EXPECT(0x437, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 53 029C
        gbc.setState(0x93b8, 0x4843, 0x1600, 0x3b01, 0xa249, 0x55fa, 0x0, 0x1);
        gbc.writeMem(0x93b8, { 0x53 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0x4843, gbc.sp());
        EXPECT(0x93b9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x53, gbc.readMem(0x93b8));
        // 53 029D
        gbc.setState(0xb485, 0x5971, 0xa270, 0x9adc, 0xcad1, 0x51ec, 0x0, 0x0);
        gbc.writeMem(0xb485, { 0x53 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x5971, gbc.sp());
        EXPECT(0xb486, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x53, gbc.readMem(0xb485));
        // 53 029E
        gbc.setState(0xa716, 0x579e, 0x7690, 0xa514, 0xc435, 0x7728, 0x0, 0x0);
        gbc.writeMem(0xa716, { 0x53 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x579e, gbc.sp());
        EXPECT(0xa717, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x53, gbc.readMem(0xa716));
        // 53 029F
        gbc.setState(0x3239, 0xf772, 0x3c20, 0xd5f, 0x28ec, 0x8561, 0x0, 0x0);
        gbc.writeMem(0x3239, { 0x53 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0xf772, gbc.sp());
        EXPECT(0x323a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 53 02A0
        gbc.setState(0x99d, 0xcd26, 0x6ea0, 0xe0b5, 0x50b4, 0xa417, 0x0, 0x1);
        gbc.writeMem(0x99d, { 0x53 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0xcd26, gbc.sp());
        EXPECT(0x99e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 53 02A1
        gbc.setState(0xc36a, 0xbc52, 0xfb00, 0xb620, 0x9f42, 0x8687, 0x0, 0x1);
        gbc.writeMem(0xc36a, { 0x53 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0xbc52, gbc.sp());
        EXPECT(0xc36b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x53, gbc.readMem(0xc36a));
        // 53 02A2
        gbc.setState(0xb111, 0xf3a8, 0x3880, 0x5a75, 0xdf5c, 0x578, 0x1, 0x1);
        gbc.writeMem(0xb111, { 0x53 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0xf3a8, gbc.sp());
        EXPECT(0xb112, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x53, gbc.readMem(0xb111));
        // 53 02A3
        gbc.setState(0x2b1a, 0x8d92, 0x1c0, 0x3b70, 0x6484, 0x747e, 0x1, 0x1);
        gbc.writeMem(0x2b1a, { 0x53 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0x8d92, gbc.sp());
        EXPECT(0x2b1b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 53 02A4
        gbc.setState(0x5e32, 0xa4ab, 0x35c0, 0x8b6e, 0x9e46, 0x1dfb, 0x0, 0x0);
        gbc.writeMem(0x5e32, { 0x53 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0xa4ab, gbc.sp());
        EXPECT(0x5e33, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 53 02A5
        gbc.setState(0x4e91, 0x6af0, 0x7e40, 0x8ae7, 0x537a, 0xc4ab, 0x0, 0x1);
        gbc.writeMem(0x4e91, { 0x53 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x6af0, gbc.sp());
        EXPECT(0x4e92, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 53 02A6
        gbc.setState(0x7ae0, 0x27f0, 0x4040, 0xf2c8, 0xed27, 0x6b11, 0x1, 0x0);
        gbc.writeMem(0x7ae0, { 0x53 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x27f0, gbc.sp());
        EXPECT(0x7ae1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 53 02A7
        gbc.setState(0x8153, 0x5206, 0x4510, 0x1b76, 0xc454, 0xe6b5, 0x0, 0x1);
        gbc.writeMem(0x8153, { 0x53 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x5206, gbc.sp());
        EXPECT(0x8154, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x53, gbc.readMem(0x8153));
        // 53 02A9
        gbc.setState(0x86e4, 0xfbaa, 0x2e00, 0x12e8, 0x1017, 0x328a, 0x1, 0x0);
        gbc.writeMem(0x86e4, { 0x53 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0xfbaa, gbc.sp());
        EXPECT(0x86e5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x53, gbc.readMem(0x86e4));
        // 53 02AA
        gbc.setState(0xa024, 0xfe8b, 0x4a60, 0xc887, 0xb9d3, 0xb5aa, 0x0, 0x0);
        gbc.writeMem(0xa024, { 0x53 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0xfe8b, gbc.sp());
        EXPECT(0xa025, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x53, gbc.readMem(0xa024));
        // 53 02AB
        gbc.setState(0x3aab, 0x79d2, 0xa920, 0xd4c1, 0x22f8, 0x101a, 0x0, 0x0);
        gbc.writeMem(0x3aab, { 0x53 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x79d2, gbc.sp());
        EXPECT(0x3aac, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 53 02AC
        gbc.setState(0x4cd7, 0xc09d, 0x96d0, 0xcc29, 0x5168, 0xd39c, 0x0, 0x0);
        gbc.writeMem(0x4cd7, { 0x53 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0xc09d, gbc.sp());
        EXPECT(0x4cd8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 53 02AD
        gbc.setState(0x2bec, 0x259e, 0xe3f0, 0xa157, 0x970d, 0x21, 0x1, 0x1);
        gbc.writeMem(0x2bec, { 0x53 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x259e, gbc.sp());
        EXPECT(0x2bed, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 53 02B0
        gbc.setState(0x952d, 0x8acb, 0xd720, 0x963d, 0xe875, 0x8308, 0x1, 0x1);
        gbc.writeMem(0x952d, { 0x53 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x8acb, gbc.sp());
        EXPECT(0x952e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x53, gbc.readMem(0x952d));
        // 53 02B1
        gbc.setState(0xd92c, 0xf70e, 0x3d40, 0x3078, 0x1cf8, 0xbae8, 0x1, 0x1);
        gbc.writeMem(0xd92c, { 0x53 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0xf70e, gbc.sp());
        EXPECT(0xd92d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x53, gbc.readMem(0xd92c));
        // 53 02B2
        gbc.setState(0x7ed4, 0x1bf9, 0xffb0, 0x581, 0xc031, 0x33c, 0x1, 0x0);
        gbc.writeMem(0x7ed4, { 0x53 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x1bf9, gbc.sp());
        EXPECT(0x7ed5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 53 02B3
        gbc.setState(0x253, 0x1da4, 0x9c90, 0x2519, 0x133e, 0x1b96, 0x1, 0x1);
        gbc.writeMem(0x253, { 0x53 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x1da4, gbc.sp());
        EXPECT(0x254, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 53 02B4
        gbc.setState(0x943e, 0x483a, 0xc9e0, 0x174e, 0x6421, 0xc2ba, 0x0, 0x0);
        gbc.writeMem(0x943e, { 0x53 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0x483a, gbc.sp());
        EXPECT(0x943f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x53, gbc.readMem(0x943e));
        // 53 02B5
        gbc.setState(0xcd8a, 0x2481, 0xbf40, 0xc0b, 0x3bda, 0x9d2a, 0x1, 0x1);
        gbc.writeMem(0xcd8a, { 0x53 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x2481, gbc.sp());
        EXPECT(0xcd8b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x53, gbc.readMem(0xcd8a));
        // 53 02B6
        gbc.setState(0x9ff9, 0x9f2f, 0xe3f0, 0x5b74, 0x7ad, 0xef91, 0x1, 0x1);
        gbc.writeMem(0x9ff9, { 0x53 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x9f2f, gbc.sp());
        EXPECT(0x9ffa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x53, gbc.readMem(0x9ff9));
        // 53 02B7
        gbc.setState(0xd9fc, 0xbf09, 0xf00, 0x3d05, 0x518d, 0xea83, 0x0, 0x1);
        gbc.writeMem(0xd9fc, { 0x53 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0xbf09, gbc.sp());
        EXPECT(0xd9fd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x53, gbc.readMem(0xd9fc));
        // 53 02B8
        gbc.setState(0x19eb, 0x41cb, 0x9840, 0xfe34, 0x4c2f, 0xd2ae, 0x1, 0x0);
        gbc.writeMem(0x19eb, { 0x53 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0x41cb, gbc.sp());
        EXPECT(0x19ec, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 53 02B9
        gbc.setState(0x79a8, 0x7540, 0xe050, 0x8f85, 0x6313, 0x9e1, 0x0, 0x1);
        gbc.writeMem(0x79a8, { 0x53 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0x7540, gbc.sp());
        EXPECT(0x79a9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 53 02BA
        gbc.setState(0xdc93, 0xcf91, 0xf9d0, 0x1ade, 0x20ac, 0x2445, 0x0, 0x0);
        gbc.writeMem(0xdc93, { 0x53 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0xcf91, gbc.sp());
        EXPECT(0xdc94, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x53, gbc.readMem(0xdc93));
        // 53 02BB
        gbc.setState(0x4dfb, 0x7d6b, 0xb800, 0x2b2c, 0xb116, 0xd371, 0x0, 0x0);
        gbc.writeMem(0x4dfb, { 0x53 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x7d6b, gbc.sp());
        EXPECT(0x4dfc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 53 02BC
        gbc.setState(0x8a79, 0x1780, 0x85b0, 0xafd3, 0x19dd, 0x9fbb, 0x0, 0x1);
        gbc.writeMem(0x8a79, { 0x53 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x1780, gbc.sp());
        EXPECT(0x8a7a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x53, gbc.readMem(0x8a79));
        // 53 02BD
        gbc.setState(0xda36, 0x632e, 0xcd30, 0xfbf8, 0x1cef, 0x6aff, 0x0, 0x1);
        gbc.writeMem(0xda36, { 0x53 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x632e, gbc.sp());
        EXPECT(0xda37, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x53, gbc.readMem(0xda36));
        // 53 02BE
        gbc.setState(0x7e94, 0xc531, 0x2c20, 0x6d6e, 0x63b7, 0x1d3a, 0x1, 0x1);
        gbc.writeMem(0x7e94, { 0x53 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0xc531, gbc.sp());
        EXPECT(0x7e95, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 53 02BF
        gbc.setState(0xe252, 0xff56, 0x2420, 0xa40b, 0x367d, 0x9753, 0x1, 0x0);
        gbc.writeMem(0xe252, { 0x53 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0xff56, gbc.sp());
        EXPECT(0xe253, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x53, gbc.readMem(0xe252));
        // 53 02C0
        gbc.setState(0x7d3, 0x6f11, 0x5d40, 0x716b, 0x5bba, 0x3aa1, 0x0, 0x1);
        gbc.writeMem(0x7d3, { 0x53 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x6f11, gbc.sp());
        EXPECT(0x7d4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 53 02C1
        gbc.setState(0x3000, 0x7ad8, 0xec0, 0x1d84, 0xd160, 0x3562, 0x1, 0x1);
        gbc.writeMem(0x3000, { 0x53 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x7ad8, gbc.sp());
        EXPECT(0x3001, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 53 02C2
        gbc.setState(0x37e4, 0xd2a9, 0x8170, 0x2bf1, 0xc53d, 0xf92d, 0x1, 0x0);
        gbc.writeMem(0x37e4, { 0x53 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0xd2a9, gbc.sp());
        EXPECT(0x37e5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 53 02C3
        gbc.setState(0x66b, 0xb67, 0x7c20, 0xa08a, 0x2894, 0x21a3, 0x0, 0x1);
        gbc.writeMem(0x66b, { 0x53 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0xb67, gbc.sp());
        EXPECT(0x66c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 53 02C4
        gbc.setState(0x8e2d, 0xfdb1, 0xc30, 0x23bb, 0x2cda, 0x2127, 0x0, 0x0);
        gbc.writeMem(0x8e2d, { 0x53 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0xfdb1, gbc.sp());
        EXPECT(0x8e2e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x53, gbc.readMem(0x8e2d));
        // 53 02C5
        gbc.setState(0x79c6, 0xe60b, 0x6d20, 0xd628, 0x181d, 0xad5, 0x1, 0x1);
        gbc.writeMem(0x79c6, { 0x53 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0xe60b, gbc.sp());
        EXPECT(0x79c7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 53 02C6
        gbc.setState(0xb4db, 0x24e2, 0xedf0, 0xac2b, 0x141, 0x8555, 0x0, 0x1);
        gbc.writeMem(0xb4db, { 0x53 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x24e2, gbc.sp());
        EXPECT(0xb4dc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x53, gbc.readMem(0xb4db));
        // 53 02C7
        gbc.setState(0xb7a4, 0xdbb3, 0x30b0, 0xee3f, 0x438b, 0x5e42, 0x0, 0x0);
        gbc.writeMem(0xb7a4, { 0x53 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0xdbb3, gbc.sp());
        EXPECT(0xb7a5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x53, gbc.readMem(0xb7a4));
        // 53 02C8
        gbc.setState(0xd3bb, 0x12fa, 0xe9f0, 0x98dc, 0x71ee, 0x6d9e, 0x0, 0x0);
        gbc.writeMem(0xd3bb, { 0x53 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x12fa, gbc.sp());
        EXPECT(0xd3bc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x53, gbc.readMem(0xd3bb));
        // 53 02C9
        gbc.setState(0xedf7, 0x5ccb, 0xd730, 0xc973, 0x255b, 0x9f58, 0x1, 0x1);
        gbc.writeMem(0xedf7, { 0x53 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x5ccb, gbc.sp());
        EXPECT(0xedf8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x53, gbc.readMem(0xedf7));
        // 53 02CA
        gbc.setState(0x8cf2, 0x6f55, 0xad0, 0x6b2f, 0x211b, 0x9ca, 0x1, 0x1);
        gbc.writeMem(0x8cf2, { 0x53 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x6f55, gbc.sp());
        EXPECT(0x8cf3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x53, gbc.readMem(0x8cf2));
        // 53 02CB
        gbc.setState(0xe9d9, 0x4dfc, 0x6be0, 0x88f0, 0xbb85, 0x9c9, 0x0, 0x0);
        gbc.writeMem(0xe9d9, { 0x53 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x4dfc, gbc.sp());
        EXPECT(0xe9da, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x53, gbc.readMem(0xe9d9));
        // 53 02CD
        gbc.setState(0xcf31, 0xaa23, 0x4c40, 0xe5c3, 0xfa27, 0x1504, 0x1, 0x1);
        gbc.writeMem(0xcf31, { 0x53 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0xaa23, gbc.sp());
        EXPECT(0xcf32, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x53, gbc.readMem(0xcf31));
        // 53 02CE
        gbc.setState(0x1ea3, 0x66d3, 0xbe60, 0xcb56, 0x3bc9, 0xe488, 0x1, 0x1);
        gbc.writeMem(0x1ea3, { 0x53 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x66d3, gbc.sp());
        EXPECT(0x1ea4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 53 02CF
        gbc.setState(0x2bf0, 0x3349, 0x8380, 0x921c, 0x6c8e, 0x4e0f, 0x0, 0x1);
        gbc.writeMem(0x2bf0, { 0x53 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x3349, gbc.sp());
        EXPECT(0x2bf1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 53 02D0
        gbc.setState(0x3dad, 0x53fd, 0x2d10, 0xfd6d, 0xa22e, 0x8d8e, 0x0, 0x1);
        gbc.writeMem(0x3dad, { 0x53 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x53fd, gbc.sp());
        EXPECT(0x3dae, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 53 02D1
        gbc.setState(0xca41, 0xee11, 0xd000, 0xc99d, 0xa46e, 0xccc5, 0x0, 0x1);
        gbc.writeMem(0xca41, { 0x53 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0xee11, gbc.sp());
        EXPECT(0xca42, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x53, gbc.readMem(0xca41));
        // 53 02D2
        gbc.setState(0x72e5, 0xa3ca, 0xd0c0, 0x728b, 0xa31f, 0x6480, 0x0, 0x1);
        gbc.writeMem(0x72e5, { 0x53 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0xa3ca, gbc.sp());
        EXPECT(0x72e6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 53 02D3
        gbc.setState(0x4d0e, 0xeb99, 0x26d0, 0x9be0, 0xbd7a, 0x7444, 0x0, 0x0);
        gbc.writeMem(0x4d0e, { 0x53 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0xeb99, gbc.sp());
        EXPECT(0x4d0f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 53 02D4
        gbc.setState(0x1fb0, 0xb088, 0xd900, 0x4e76, 0x8dd1, 0xd245, 0x1, 0x0);
        gbc.writeMem(0x1fb0, { 0x53 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0xb088, gbc.sp());
        EXPECT(0x1fb1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 53 02D5
        gbc.setState(0x78be, 0xc0, 0x4aa0, 0x3e2f, 0xda03, 0x3a67, 0x1, 0x0);
        gbc.writeMem(0x78be, { 0x53 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0xc0, gbc.sp());
        EXPECT(0x78bf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 53 02D6
        gbc.setState(0x2830, 0xd7b7, 0x9870, 0x228a, 0x5f6d, 0x924d, 0x0, 0x0);
        gbc.writeMem(0x2830, { 0x53 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0xd7b7, gbc.sp());
        EXPECT(0x2831, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 53 02D7
        gbc.setState(0x20b3, 0x1743, 0x64b0, 0xcc75, 0x27e9, 0x23e7, 0x1, 0x1);
        gbc.writeMem(0x20b3, { 0x53 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x1743, gbc.sp());
        EXPECT(0x20b4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 53 02D8
        gbc.setState(0xa4d6, 0xf595, 0x6430, 0xfa37, 0x409a, 0x3cf2, 0x1, 0x1);
        gbc.writeMem(0xa4d6, { 0x53 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0xf595, gbc.sp());
        EXPECT(0xa4d7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x53, gbc.readMem(0xa4d6));
        // 53 02D9
        gbc.setState(0xbafe, 0x4650, 0x91b0, 0xd39d, 0x725b, 0xf28, 0x1, 0x1);
        gbc.writeMem(0xbafe, { 0x53 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x4650, gbc.sp());
        EXPECT(0xbaff, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x53, gbc.readMem(0xbafe));
        // 53 02DA
        gbc.setState(0xbf77, 0x58d0, 0x6550, 0x7d24, 0x851e, 0xea4f, 0x0, 0x0);
        gbc.writeMem(0xbf77, { 0x53 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x58d0, gbc.sp());
        EXPECT(0xbf78, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x53, gbc.readMem(0xbf77));
        // 53 02DB
        gbc.setState(0x9784, 0x98bd, 0x84d0, 0x7268, 0x84a1, 0x6df8, 0x0, 0x0);
        gbc.writeMem(0x9784, { 0x53 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x98bd, gbc.sp());
        EXPECT(0x9785, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x53, gbc.readMem(0x9784));
        // 53 02DC
        gbc.setState(0x13b4, 0xcd36, 0x74e0, 0xe681, 0x96b8, 0x1429, 0x0, 0x1);
        gbc.writeMem(0x13b4, { 0x53 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0xcd36, gbc.sp());
        EXPECT(0x13b5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 53 02DD
        gbc.setState(0x3e16, 0x4142, 0x580, 0x2684, 0x7e9b, 0x823f, 0x1, 0x0);
        gbc.writeMem(0x3e16, { 0x53 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0x4142, gbc.sp());
        EXPECT(0x3e17, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 53 02DE
        gbc.setState(0xeef8, 0xd0ea, 0x72c0, 0xc6bc, 0xe60e, 0xd3e8, 0x1, 0x0);
        gbc.writeMem(0xeef8, { 0x53 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0xd0ea, gbc.sp());
        EXPECT(0xeef9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x53, gbc.readMem(0xeef8));
        // 53 02DF
        gbc.setState(0xa99d, 0xedd9, 0x9840, 0x837b, 0xb385, 0x9fff, 0x0, 0x1);
        gbc.writeMem(0xa99d, { 0x53 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0xedd9, gbc.sp());
        EXPECT(0xa99e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x53, gbc.readMem(0xa99d));
        // 53 02E0
        gbc.setState(0x3db6, 0x9355, 0x40d0, 0x234e, 0x6083, 0xcafb, 0x1, 0x0);
        gbc.writeMem(0x3db6, { 0x53 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x9355, gbc.sp());
        EXPECT(0x3db7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 53 02E1
        gbc.setState(0x3ee6, 0x3b7c, 0xe610, 0x6e3a, 0xd92c, 0xc6ba, 0x0, 0x1);
        gbc.writeMem(0x3ee6, { 0x53 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0x3b7c, gbc.sp());
        EXPECT(0x3ee7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 53 02E2
        gbc.setState(0x2351, 0x7b3b, 0xcb60, 0xd346, 0xb7c9, 0x4d9, 0x0, 0x0);
        gbc.writeMem(0x2351, { 0x53 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x7b3b, gbc.sp());
        EXPECT(0x2352, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 53 02E4
        gbc.setState(0x38b9, 0x6502, 0xcc80, 0x26e0, 0x4fa7, 0x2688, 0x0, 0x0);
        gbc.writeMem(0x38b9, { 0x53 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x6502, gbc.sp());
        EXPECT(0x38ba, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 53 02E5
        gbc.setState(0x643f, 0x9c08, 0xa2b0, 0xec39, 0xceb4, 0xbce5, 0x0, 0x0);
        gbc.writeMem(0x643f, { 0x53 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x9c08, gbc.sp());
        EXPECT(0x6440, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 53 02E6
        gbc.setState(0x4c83, 0x79ca, 0x4cb0, 0xe3f8, 0xd96d, 0x121f, 0x0, 0x1);
        gbc.writeMem(0x4c83, { 0x53 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x79ca, gbc.sp());
        EXPECT(0x4c84, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 53 02E7
        gbc.setState(0xa476, 0xc76a, 0x4c80, 0x6710, 0x7385, 0xe65e, 0x0, 0x0);
        gbc.writeMem(0xa476, { 0x53 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0xc76a, gbc.sp());
        EXPECT(0xa477, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x53, gbc.readMem(0xa476));
        // 53 02E8
        gbc.setState(0x31cc, 0xf63c, 0x6050, 0xb1b3, 0x4a1f, 0x9f86, 0x1, 0x1);
        gbc.writeMem(0x31cc, { 0x53 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0xf63c, gbc.sp());
        EXPECT(0x31cd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 53 02E9
        gbc.setState(0xb40e, 0x8b4d, 0x5200, 0x9278, 0x7d44, 0x805e, 0x0, 0x0);
        gbc.writeMem(0xb40e, { 0x53 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x8b4d, gbc.sp());
        EXPECT(0xb40f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x53, gbc.readMem(0xb40e));
        // 53 02EA
        gbc.setState(0x2899, 0xdbb1, 0x3f0, 0x655e, 0xdf14, 0x8aaa, 0x1, 0x0);
        gbc.writeMem(0x2899, { 0x53 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0xdbb1, gbc.sp());
        EXPECT(0x289a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 53 02EB
        gbc.setState(0x9a39, 0x2fc7, 0xf120, 0xc032, 0x52f3, 0x5c1a, 0x0, 0x1);
        gbc.writeMem(0x9a39, { 0x53 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x2fc7, gbc.sp());
        EXPECT(0x9a3a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x53, gbc.readMem(0x9a39));
        // 53 02EC
        gbc.setState(0xba47, 0xb5bf, 0x52b0, 0x2588, 0x5f0c, 0x6bf6, 0x0, 0x0);
        gbc.writeMem(0xba47, { 0x53 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0xb5bf, gbc.sp());
        EXPECT(0xba48, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x53, gbc.readMem(0xba47));
        // 53 02ED
        gbc.setState(0x8a8e, 0x72b6, 0xd2d0, 0xed7c, 0x1014, 0xd31a, 0x0, 0x0);
        gbc.writeMem(0x8a8e, { 0x53 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x72b6, gbc.sp());
        EXPECT(0x8a8f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x53, gbc.readMem(0x8a8e));
        // 53 02EE
        gbc.setState(0x7bb2, 0x10dd, 0xb770, 0x26f6, 0x58c9, 0xf46c, 0x0, 0x1);
        gbc.writeMem(0x7bb2, { 0x53 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x10dd, gbc.sp());
        EXPECT(0x7bb3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 53 02EF
        gbc.setState(0x3185, 0x9be3, 0xd740, 0xf5e1, 0x33ad, 0xd1e1, 0x0, 0x1);
        gbc.writeMem(0x3185, { 0x53 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0x9be3, gbc.sp());
        EXPECT(0x3186, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 53 02F0
        gbc.setState(0x407f, 0xdfac, 0x1fd0, 0x5a1b, 0x948e, 0xf083, 0x1, 0x0);
        gbc.writeMem(0x407f, { 0x53 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0xdfac, gbc.sp());
        EXPECT(0x4080, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 53 02F1
        gbc.setState(0x1967, 0x2d30, 0xef0, 0x416d, 0x5195, 0xd69b, 0x0, 0x0);
        gbc.writeMem(0x1967, { 0x53 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x2d30, gbc.sp());
        EXPECT(0x1968, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 53 02F2
        gbc.setState(0x4962, 0x4a55, 0x7c50, 0x3ec0, 0x17da, 0x959b, 0x0, 0x0);
        gbc.writeMem(0x4962, { 0x53 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x4a55, gbc.sp());
        EXPECT(0x4963, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 53 02F3
        gbc.setState(0x44a2, 0xeba2, 0x92d0, 0x2588, 0x287, 0x4a74, 0x1, 0x1);
        gbc.writeMem(0x44a2, { 0x53 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0xeba2, gbc.sp());
        EXPECT(0x44a3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 53 02F4
        gbc.setState(0x47b2, 0xdc1b, 0x4b30, 0xf6ee, 0xc018, 0x369f, 0x0, 0x0);
        gbc.writeMem(0x47b2, { 0x53 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0xdc1b, gbc.sp());
        EXPECT(0x47b3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 53 02F5
        gbc.setState(0x6c6b, 0x38da, 0x74e0, 0xe41f, 0x2ac, 0xee9b, 0x1, 0x1);
        gbc.writeMem(0x6c6b, { 0x53 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x38da, gbc.sp());
        EXPECT(0x6c6c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 53 02F6
        gbc.setState(0xa388, 0xb842, 0x9900, 0xf858, 0xad6e, 0x5bb1, 0x0, 0x0);
        gbc.writeMem(0xa388, { 0x53 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0xb842, gbc.sp());
        EXPECT(0xa389, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x53, gbc.readMem(0xa388));
        // 53 02F7
        gbc.setState(0xa42e, 0xf483, 0x8d80, 0xb857, 0xe3a4, 0xcdba, 0x0, 0x1);
        gbc.writeMem(0xa42e, { 0x53 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0xf483, gbc.sp());
        EXPECT(0xa42f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x53, gbc.readMem(0xa42e));
        // 53 02F8
        gbc.setState(0x2a28, 0xfb85, 0x9500, 0xdeed, 0xd36f, 0x42b2, 0x1, 0x0);
        gbc.writeMem(0x2a28, { 0x53 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0xfb85, gbc.sp());
        EXPECT(0x2a29, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 53 02F9
        gbc.setState(0xa2f1, 0xc006, 0x3260, 0xe7de, 0x8cf, 0xd07e, 0x0, 0x0);
        gbc.writeMem(0xa2f1, { 0x53 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0xc006, gbc.sp());
        EXPECT(0xa2f2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x53, gbc.readMem(0xa2f1));
        // 53 02FA
        gbc.setState(0x1742, 0x8562, 0x3d30, 0xfb3a, 0xb074, 0xfa1, 0x1, 0x1);
        gbc.writeMem(0x1742, { 0x53 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x8562, gbc.sp());
        EXPECT(0x1743, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 53 02FB
        gbc.setState(0xaffd, 0xe846, 0x7d70, 0x806, 0xd9d9, 0x88a1, 0x1, 0x1);
        gbc.writeMem(0xaffd, { 0x53 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0xe846, gbc.sp());
        EXPECT(0xaffe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x53, gbc.readMem(0xaffd));
        // 53 02FC
        gbc.setState(0x2cb2, 0xe32e, 0x25d0, 0xea91, 0xee3d, 0x4d6c, 0x0, 0x1);
        gbc.writeMem(0x2cb2, { 0x53 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0xe32e, gbc.sp());
        EXPECT(0x2cb3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 53 02FD
        gbc.setState(0x564, 0x5d56, 0xb910, 0x66a3, 0xcaee, 0x3b07, 0x0, 0x1);
        gbc.writeMem(0x564, { 0x53 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x5d56, gbc.sp());
        EXPECT(0x565, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 53 02FE
        gbc.setState(0x9470, 0x4a98, 0xe6e0, 0x2cfc, 0x7232, 0x635e, 0x1, 0x1);
        gbc.writeMem(0x9470, { 0x53 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x4a98, gbc.sp());
        EXPECT(0x9471, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x53, gbc.readMem(0x9470));
        // 53 02FF
        gbc.setState(0x7a31, 0xff54, 0x5410, 0x562c, 0x162b, 0x164e, 0x1, 0x1);
        gbc.writeMem(0x7a31, { 0x53 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0xff54, gbc.sp());
        EXPECT(0x7a32, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 53 0300
        gbc.setState(0x81c, 0x2ed7, 0x5c40, 0x1191, 0x8a40, 0x2743, 0x1, 0x1);
        gbc.writeMem(0x81c, { 0x53 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x2ed7, gbc.sp());
        EXPECT(0x81d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 53 0301
        gbc.setState(0x17d4, 0xee69, 0x33d0, 0x9945, 0x2947, 0x97f3, 0x0, 0x1);
        gbc.writeMem(0x17d4, { 0x53 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0xee69, gbc.sp());
        EXPECT(0x17d5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 53 0302
        gbc.setState(0x2b83, 0xe857, 0x2240, 0xc2d4, 0xa18f, 0xb005, 0x1, 0x0);
        gbc.writeMem(0x2b83, { 0x53 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0xe857, gbc.sp());
        EXPECT(0x2b84, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 53 0303
        gbc.setState(0x34a7, 0x4858, 0xb0a0, 0x4e6b, 0xddd, 0xa233, 0x0, 0x0);
        gbc.writeMem(0x34a7, { 0x53 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x4858, gbc.sp());
        EXPECT(0x34a8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 53 0304
        gbc.setState(0xa746, 0x9194, 0x48e0, 0x81c1, 0x6456, 0xe831, 0x0, 0x0);
        gbc.writeMem(0xa746, { 0x53 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x9194, gbc.sp());
        EXPECT(0xa747, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x53, gbc.readMem(0xa746));
        // 53 0305
        gbc.setState(0x439f, 0xf7c2, 0xd0, 0x9a3b, 0xbb17, 0xe4ce, 0x0, 0x1);
        gbc.writeMem(0x439f, { 0x53 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0xf7c2, gbc.sp());
        EXPECT(0x43a0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 53 0306
        gbc.setState(0x18b8, 0x78, 0x8850, 0xe41, 0x52b1, 0xd631, 0x1, 0x0);
        gbc.writeMem(0x18b8, { 0x53 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x78, gbc.sp());
        EXPECT(0x18b9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 53 0307
        gbc.setState(0x98a6, 0x514a, 0x8f20, 0xdbd7, 0xb51, 0x6e74, 0x1, 0x0);
        gbc.writeMem(0x98a6, { 0x53 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x514a, gbc.sp());
        EXPECT(0x98a7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x53, gbc.readMem(0x98a6));
        // 53 0308
        gbc.setState(0x10a0, 0x313a, 0xf980, 0x6db8, 0x1092, 0x83b8, 0x1, 0x0);
        gbc.writeMem(0x10a0, { 0x53 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x313a, gbc.sp());
        EXPECT(0x10a1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 53 0309
        gbc.setState(0x6839, 0x6e75, 0xe940, 0x6fa7, 0x3da8, 0xa62c, 0x0, 0x0);
        gbc.writeMem(0x6839, { 0x53 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x6e75, gbc.sp());
        EXPECT(0x683a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 53 030B
        gbc.setState(0xedc9, 0x379, 0xc50, 0xad19, 0x8b99, 0xf88, 0x1, 0x0);
        gbc.writeMem(0xedc9, { 0x53 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x379, gbc.sp());
        EXPECT(0xedca, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x53, gbc.readMem(0xedc9));
        // 53 030C
        gbc.setState(0xb622, 0x8583, 0xb060, 0x46fe, 0xb131, 0xb9c0, 0x0, 0x1);
        gbc.writeMem(0xb622, { 0x53 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x8583, gbc.sp());
        EXPECT(0xb623, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x53, gbc.readMem(0xb622));
        // 53 030D
        gbc.setState(0xc9a0, 0xa8a3, 0xb7c0, 0x217f, 0x84ec, 0x4606, 0x0, 0x1);
        gbc.writeMem(0xc9a0, { 0x53 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0xa8a3, gbc.sp());
        EXPECT(0xc9a1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x53, gbc.readMem(0xc9a0));
        // 53 030E
        gbc.setState(0xeef3, 0xc713, 0x890, 0x577d, 0x29f3, 0x8167, 0x1, 0x0);
        gbc.writeMem(0xeef3, { 0x53 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0xc713, gbc.sp());
        EXPECT(0xeef4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x53, gbc.readMem(0xeef3));
        // 53 030F
        gbc.setState(0xa6cd, 0x8c32, 0x7160, 0x7036, 0x7a70, 0x30a5, 0x1, 0x0);
        gbc.writeMem(0xa6cd, { 0x53 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x8c32, gbc.sp());
        EXPECT(0xa6ce, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x53, gbc.readMem(0xa6cd));
        // 53 0310
        gbc.setState(0x7516, 0x7809, 0xc80, 0x3d32, 0xbb1f, 0xd5d1, 0x0, 0x0);
        gbc.writeMem(0x7516, { 0x53 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x7809, gbc.sp());
        EXPECT(0x7517, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 53 0311
        gbc.setState(0xeec7, 0x4acd, 0xab90, 0x1ddf, 0xeb2c, 0xabee, 0x0, 0x1);
        gbc.writeMem(0xeec7, { 0x53 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x4acd, gbc.sp());
        EXPECT(0xeec8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x53, gbc.readMem(0xeec7));
        // 53 0312
        gbc.setState(0x1e54, 0x4189, 0xa70, 0x84e5, 0xca39, 0xcabe, 0x1, 0x1);
        gbc.writeMem(0x1e54, { 0x53 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0x4189, gbc.sp());
        EXPECT(0x1e55, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 53 0313
        gbc.setState(0xbb30, 0x8abb, 0xa7e0, 0x91d5, 0x8b7c, 0xe319, 0x0, 0x1);
        gbc.writeMem(0xbb30, { 0x53 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x8abb, gbc.sp());
        EXPECT(0xbb31, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x53, gbc.readMem(0xbb30));
        // 53 0314
        gbc.setState(0xe628, 0x56b, 0x1640, 0xcc0b, 0x4a6c, 0x2e73, 0x0, 0x0);
        gbc.writeMem(0xe628, { 0x53 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x56b, gbc.sp());
        EXPECT(0xe629, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x53, gbc.readMem(0xe628));
        // 53 0315
        gbc.setState(0x92f6, 0xec3c, 0xd400, 0x745b, 0x8f41, 0xb915, 0x1, 0x1);
        gbc.writeMem(0x92f6, { 0x53 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0xec3c, gbc.sp());
        EXPECT(0x92f7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x53, gbc.readMem(0x92f6));
        // 53 0316
        gbc.setState(0x9ee4, 0x3c65, 0xff00, 0xac7e, 0xfe90, 0x4be8, 0x0, 0x1);
        gbc.writeMem(0x9ee4, { 0x53 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x3c65, gbc.sp());
        EXPECT(0x9ee5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x53, gbc.readMem(0x9ee4));
        // 53 0317
        gbc.setState(0x5762, 0xfce8, 0x7fc0, 0x887f, 0x42ca, 0xc14a, 0x1, 0x0);
        gbc.writeMem(0x5762, { 0x53 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0xfce8, gbc.sp());
        EXPECT(0x5763, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 53 0318
        gbc.setState(0x2c38, 0x5f90, 0x4100, 0x7d1d, 0x8bbb, 0xac8d, 0x1, 0x0);
        gbc.writeMem(0x2c38, { 0x53 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x5f90, gbc.sp());
        EXPECT(0x2c39, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 53 0319
        gbc.setState(0x3baf, 0x85c3, 0x9270, 0x7381, 0x7385, 0x766, 0x0, 0x1);
        gbc.writeMem(0x3baf, { 0x53 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x85c3, gbc.sp());
        EXPECT(0x3bb0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 53 031A
        gbc.setState(0xc5b1, 0x2cba, 0x9240, 0x822a, 0x2adf, 0x7e71, 0x0, 0x1);
        gbc.writeMem(0xc5b1, { 0x53 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x2cba, gbc.sp());
        EXPECT(0xc5b2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x53, gbc.readMem(0xc5b1));
        // 53 031B
        gbc.setState(0x1e8f, 0x32c5, 0x9830, 0x7100, 0xd89e, 0x2087, 0x1, 0x1);
        gbc.writeMem(0x1e8f, { 0x53 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x32c5, gbc.sp());
        EXPECT(0x1e90, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 53 031C
        gbc.setState(0xb962, 0xd838, 0xe540, 0xd924, 0x21cd, 0x94, 0x0, 0x0);
        gbc.writeMem(0xb962, { 0x53 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0xd838, gbc.sp());
        EXPECT(0xb963, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x53, gbc.readMem(0xb962));
        // 53 031D
        gbc.setState(0x64ba, 0xe54c, 0xff40, 0x67bc, 0x895a, 0xa242, 0x0, 0x1);
        gbc.writeMem(0x64ba, { 0x53 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0xe54c, gbc.sp());
        EXPECT(0x64bb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 53 031E
        gbc.setState(0x3105, 0x2230, 0x2630, 0xc177, 0x4a74, 0xa922, 0x1, 0x1);
        gbc.writeMem(0x3105, { 0x53 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x2230, gbc.sp());
        EXPECT(0x3106, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 53 031F
        gbc.setState(0x7965, 0xa1a2, 0xc890, 0x8e05, 0x5ae2, 0xd184, 0x1, 0x1);
        gbc.writeMem(0x7965, { 0x53 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0xa1a2, gbc.sp());
        EXPECT(0x7966, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 53 0320
        gbc.setState(0x844d, 0x356b, 0x2f90, 0xc828, 0x7d5b, 0x7160, 0x0, 0x1);
        gbc.writeMem(0x844d, { 0x53 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x356b, gbc.sp());
        EXPECT(0x844e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x53, gbc.readMem(0x844d));
        // 53 0321
        gbc.setState(0x6798, 0x3b0b, 0xfda0, 0x41cd, 0x583a, 0x9173, 0x0, 0x1);
        gbc.writeMem(0x6798, { 0x53 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x3b0b, gbc.sp());
        EXPECT(0x6799, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 53 0322
        gbc.setState(0x9bd8, 0x84ea, 0x69f0, 0xef5c, 0xb249, 0xbc6c, 0x0, 0x1);
        gbc.writeMem(0x9bd8, { 0x53 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x84ea, gbc.sp());
        EXPECT(0x9bd9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x53, gbc.readMem(0x9bd8));
        // 53 0323
        gbc.setState(0x4d14, 0x5099, 0x3060, 0x5c06, 0x27d8, 0x5e91, 0x0, 0x0);
        gbc.writeMem(0x4d14, { 0x53 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x5099, gbc.sp());
        EXPECT(0x4d15, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 53 0324
        gbc.setState(0xbf92, 0xc40c, 0xe620, 0xfe82, 0x2482, 0x186a, 0x0, 0x0);
        gbc.writeMem(0xbf92, { 0x53 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0xc40c, gbc.sp());
        EXPECT(0xbf93, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x53, gbc.readMem(0xbf92));
        // 53 0325
        gbc.setState(0x7602, 0x6445, 0xfa60, 0xf94f, 0xb5e2, 0xc44c, 0x0, 0x0);
        gbc.writeMem(0x7602, { 0x53 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x6445, gbc.sp());
        EXPECT(0x7603, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 53 0326
        gbc.setState(0x5741, 0x18a6, 0x8900, 0xa2c6, 0xe5e7, 0xe69d, 0x0, 0x0);
        gbc.writeMem(0x5741, { 0x53 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x18a6, gbc.sp());
        EXPECT(0x5742, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 53 0327
        gbc.setState(0x1cbe, 0x1a0, 0x3370, 0x6811, 0x1029, 0xc24b, 0x0, 0x0);
        gbc.writeMem(0x1cbe, { 0x53 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x1a0, gbc.sp());
        EXPECT(0x1cbf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 53 0328
        gbc.setState(0xefe9, 0x28ac, 0x4f90, 0xa01d, 0x8e0b, 0xdff3, 0x0, 0x0);
        gbc.writeMem(0xefe9, { 0x53 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x28ac, gbc.sp());
        EXPECT(0xefea, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x53, gbc.readMem(0xefe9));
        // 53 0329
        gbc.setState(0x85dc, 0xc86d, 0xa5a0, 0x67fd, 0x45e7, 0x1b58, 0x0, 0x1);
        gbc.writeMem(0x85dc, { 0x53 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0xc86d, gbc.sp());
        EXPECT(0x85dd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x53, gbc.readMem(0x85dc));
        // 53 032A
        gbc.setState(0x9240, 0xc06d, 0x5d80, 0x374d, 0xd8c8, 0x58e0, 0x0, 0x1);
        gbc.writeMem(0x9240, { 0x53 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0xc06d, gbc.sp());
        EXPECT(0x9241, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x53, gbc.readMem(0x9240));
        // 53 032B
        gbc.setState(0xe798, 0x27d5, 0xead0, 0x4efb, 0x937e, 0xa269, 0x1, 0x1);
        gbc.writeMem(0xe798, { 0x53 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0x27d5, gbc.sp());
        EXPECT(0xe799, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x53, gbc.readMem(0xe798));
        // 53 032C
        gbc.setState(0x193e, 0xb117, 0xf8c0, 0xb2b4, 0x6ec5, 0xee03, 0x1, 0x1);
        gbc.writeMem(0x193e, { 0x53 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0xb117, gbc.sp());
        EXPECT(0x193f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 53 032D
        gbc.setState(0xad55, 0xebcb, 0x8710, 0x7b27, 0x1352, 0xc2b7, 0x0, 0x0);
        gbc.writeMem(0xad55, { 0x53 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0xebcb, gbc.sp());
        EXPECT(0xad56, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x53, gbc.readMem(0xad55));
        // 53 032E
        gbc.setState(0xdfd4, 0x997f, 0xfa20, 0xc1d3, 0x58ac, 0x2f74, 0x1, 0x0);
        gbc.writeMem(0xdfd4, { 0x53 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x997f, gbc.sp());
        EXPECT(0xdfd5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x53, gbc.readMem(0xdfd4));
        // 53 032F
        gbc.setState(0x5354, 0x2a17, 0xcc10, 0x72b1, 0xeeb4, 0xb481, 0x1, 0x1);
        gbc.writeMem(0x5354, { 0x53 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x2a17, gbc.sp());
        EXPECT(0x5355, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 53 0330
        gbc.setState(0xca38, 0x4567, 0xa3b0, 0xaa13, 0xbf9b, 0x2f4e, 0x1, 0x1);
        gbc.writeMem(0xca38, { 0x53 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x4567, gbc.sp());
        EXPECT(0xca39, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x53, gbc.readMem(0xca38));
        // 53 0331
        gbc.setState(0xe089, 0x7483, 0x7850, 0xaf98, 0x82e7, 0xe028, 0x0, 0x1);
        gbc.writeMem(0xe089, { 0x53 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x7483, gbc.sp());
        EXPECT(0xe08a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x53, gbc.readMem(0xe089));
        // 53 0332
        gbc.setState(0xe2df, 0xeb7, 0xf180, 0x6d1, 0x5f1c, 0x6282, 0x1, 0x0);
        gbc.writeMem(0xe2df, { 0x53 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0xeb7, gbc.sp());
        EXPECT(0xe2e0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x53, gbc.readMem(0xe2df));
        // 53 0333
        gbc.setState(0x660f, 0xd28f, 0xcac0, 0xd95c, 0x58ea, 0xca30, 0x1, 0x0);
        gbc.writeMem(0x660f, { 0x53 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0xd28f, gbc.sp());
        EXPECT(0x6610, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 53 0334
        gbc.setState(0x2799, 0xfc94, 0x9630, 0x6b00, 0xb88d, 0xaa9c, 0x1, 0x0);
        gbc.writeMem(0x2799, { 0x53 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0xfc94, gbc.sp());
        EXPECT(0x279a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 53 0335
        gbc.setState(0x6c59, 0x33e8, 0x6de0, 0xac3b, 0x1b63, 0x1f75, 0x1, 0x1);
        gbc.writeMem(0x6c59, { 0x53 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x33e8, gbc.sp());
        EXPECT(0x6c5a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 53 0337
        gbc.setState(0xd1c, 0x5ae9, 0x7bb0, 0x76d1, 0x4a1, 0x5a7e, 0x1, 0x0);
        gbc.writeMem(0xd1c, { 0x53 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0x5ae9, gbc.sp());
        EXPECT(0xd1d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 53 0338
        gbc.setState(0x7c86, 0x14c2, 0xbe30, 0xa7ee, 0x95b6, 0xccc9, 0x1, 0x0);
        gbc.writeMem(0x7c86, { 0x53 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x14c2, gbc.sp());
        EXPECT(0x7c87, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 53 0339
        gbc.setState(0x8517, 0xe7c8, 0x9960, 0xba51, 0x4ba, 0x154e, 0x1, 0x1);
        gbc.writeMem(0x8517, { 0x53 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0xe7c8, gbc.sp());
        EXPECT(0x8518, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x53, gbc.readMem(0x8517));
        // 53 033A
        gbc.setState(0xdce9, 0x60c5, 0xbf80, 0xa3f3, 0x2e73, 0x5cda, 0x1, 0x0);
        gbc.writeMem(0xdce9, { 0x53 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x60c5, gbc.sp());
        EXPECT(0xdcea, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x53, gbc.readMem(0xdce9));
        // 53 033B
        gbc.setState(0x1048, 0x82d1, 0xe400, 0x6a44, 0xaee9, 0xe65, 0x1, 0x0);
        gbc.writeMem(0x1048, { 0x53 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x82d1, gbc.sp());
        EXPECT(0x1049, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 53 033C
        gbc.setState(0x1c, 0xa7d, 0x1300, 0xafb3, 0x378a, 0xf23, 0x1, 0x1);
        gbc.writeMem(0x1c, { 0x53 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0xa7d, gbc.sp());
        EXPECT(0x1d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 53 033D
        gbc.setState(0x1cee, 0x9b80, 0xef00, 0xf1c5, 0x6af9, 0xc3a0, 0x0, 0x0);
        gbc.writeMem(0x1cee, { 0x53 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x9b80, gbc.sp());
        EXPECT(0x1cef, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 53 033E
        gbc.setState(0x8856, 0xe752, 0xa390, 0xce77, 0xc345, 0x9a3f, 0x1, 0x0);
        gbc.writeMem(0x8856, { 0x53 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0xe752, gbc.sp());
        EXPECT(0x8857, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x53, gbc.readMem(0x8856));
        // 53 033F
        gbc.setState(0x9980, 0xf983, 0x210, 0x304f, 0x11f1, 0x9c9c, 0x0, 0x0);
        gbc.writeMem(0x9980, { 0x53 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0xf983, gbc.sp());
        EXPECT(0x9981, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x53, gbc.readMem(0x9980));
        // 53 0340
        gbc.setState(0x8c52, 0x65ad, 0x6780, 0xda57, 0xdaaf, 0x3105, 0x1, 0x0);
        gbc.writeMem(0x8c52, { 0x53 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x65ad, gbc.sp());
        EXPECT(0x8c53, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x53, gbc.readMem(0x8c52));
        // 53 0341
        gbc.setState(0x30fd, 0x2894, 0x9b60, 0x9b94, 0xbcb, 0xdf40, 0x0, 0x1);
        gbc.writeMem(0x30fd, { 0x53 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x2894, gbc.sp());
        EXPECT(0x30fe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 53 0343
        gbc.setState(0x253f, 0x5ad2, 0xe150, 0x6f70, 0x4909, 0x2562, 0x1, 0x0);
        gbc.writeMem(0x253f, { 0x53 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x5ad2, gbc.sp());
        EXPECT(0x2540, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 53 0344
        gbc.setState(0x1e97, 0x3e52, 0x3880, 0x10f4, 0x4bb8, 0x82e3, 0x0, 0x0);
        gbc.writeMem(0x1e97, { 0x53 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x3e52, gbc.sp());
        EXPECT(0x1e98, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 53 0345
        gbc.setState(0xa02d, 0x11e4, 0x6210, 0x42c1, 0x6bb0, 0x6601, 0x1, 0x1);
        gbc.writeMem(0xa02d, { 0x53 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x11e4, gbc.sp());
        EXPECT(0xa02e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x53, gbc.readMem(0xa02d));
        // 53 0347
        gbc.setState(0x4f86, 0xe20d, 0xd4a0, 0x24fc, 0x1f76, 0xda3f, 0x0, 0x1);
        gbc.writeMem(0x4f86, { 0x53 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0xe20d, gbc.sp());
        EXPECT(0x4f87, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 53 0348
        gbc.setState(0xc7cf, 0xa5ed, 0xed50, 0xf473, 0xf3ba, 0xe779, 0x0, 0x0);
        gbc.writeMem(0xc7cf, { 0x53 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0xa5ed, gbc.sp());
        EXPECT(0xc7d0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x53, gbc.readMem(0xc7cf));
        // 53 0349
        gbc.setState(0x7ae1, 0x76c3, 0xc260, 0x4c54, 0x3160, 0x16b0, 0x0, 0x0);
        gbc.writeMem(0x7ae1, { 0x53 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x76c3, gbc.sp());
        EXPECT(0x7ae2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 53 034A
        gbc.setState(0x1972, 0x7df6, 0x8c80, 0x3cdc, 0x4768, 0xaed4, 0x0, 0x1);
        gbc.writeMem(0x1972, { 0x53 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x7df6, gbc.sp());
        EXPECT(0x1973, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 53 034B
        gbc.setState(0x6961, 0x834b, 0x8620, 0x1bc1, 0xab04, 0x8555, 0x1, 0x1);
        gbc.writeMem(0x6961, { 0x53 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x834b, gbc.sp());
        EXPECT(0x6962, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 53 034C
        gbc.setState(0x405e, 0xc705, 0xf670, 0x2212, 0x8438, 0x1d38, 0x0, 0x0);
        gbc.writeMem(0x405e, { 0x53 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0xc705, gbc.sp());
        EXPECT(0x405f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 53 034D
        gbc.setState(0xac4f, 0x60aa, 0xb40, 0xf8d7, 0x9ffe, 0xdbea, 0x0, 0x1);
        gbc.writeMem(0xac4f, { 0x53 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x60aa, gbc.sp());
        EXPECT(0xac50, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x53, gbc.readMem(0xac4f));
        // 53 034E
        gbc.setState(0x849c, 0x6b74, 0x1810, 0x19b2, 0xb420, 0xea0b, 0x0, 0x1);
        gbc.writeMem(0x849c, { 0x53 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x6b74, gbc.sp());
        EXPECT(0x849d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x53, gbc.readMem(0x849c));
        // 53 034F
        gbc.setState(0x4667, 0xe5c3, 0xcf90, 0x6795, 0x28aa, 0xd93c, 0x1, 0x1);
        gbc.writeMem(0x4667, { 0x53 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0xe5c3, gbc.sp());
        EXPECT(0x4668, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 53 0350
        gbc.setState(0x3023, 0xa83c, 0xcea0, 0x16bc, 0x81da, 0xb9e9, 0x0, 0x0);
        gbc.writeMem(0x3023, { 0x53 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0xa83c, gbc.sp());
        EXPECT(0x3024, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 53 0351
        gbc.setState(0xac2f, 0xa1d0, 0xe7b0, 0x4a, 0xf54e, 0x8d0a, 0x0, 0x0);
        gbc.writeMem(0xac2f, { 0x53 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0xa1d0, gbc.sp());
        EXPECT(0xac30, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x53, gbc.readMem(0xac2f));
        // 53 0352
        gbc.setState(0x2a5d, 0x9fe5, 0xe470, 0x6772, 0xf1cb, 0xc1c4, 0x0, 0x1);
        gbc.writeMem(0x2a5d, { 0x53 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x9fe5, gbc.sp());
        EXPECT(0x2a5e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 53 0353
        gbc.setState(0x5704, 0x2a67, 0xa570, 0x6861, 0x92db, 0x556a, 0x1, 0x1);
        gbc.writeMem(0x5704, { 0x53 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x2a67, gbc.sp());
        EXPECT(0x5705, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 53 0354
        gbc.setState(0xefef, 0xa2c3, 0xca20, 0xebff, 0xc101, 0x644c, 0x0, 0x0);
        gbc.writeMem(0xefef, { 0x53 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0xa2c3, gbc.sp());
        EXPECT(0xeff0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x53, gbc.readMem(0xefef));
        // 53 0355
        gbc.setState(0x37af, 0xc4b, 0x17b0, 0x7ae1, 0x699d, 0xb90e, 0x0, 0x0);
        gbc.writeMem(0x37af, { 0x53 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0xc4b, gbc.sp());
        EXPECT(0x37b0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 53 0356
        gbc.setState(0x4a70, 0x74b9, 0xb100, 0x771, 0x6615, 0x4cd4, 0x0, 0x0);
        gbc.writeMem(0x4a70, { 0x53 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x74b9, gbc.sp());
        EXPECT(0x4a71, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 53 0357
        gbc.setState(0x2337, 0x9d78, 0xcc00, 0x4990, 0xfa42, 0x3b39, 0x0, 0x1);
        gbc.writeMem(0x2337, { 0x53 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x9d78, gbc.sp());
        EXPECT(0x2338, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 53 0358
        gbc.setState(0x3df6, 0xc490, 0x6490, 0x711d, 0x38e2, 0xfef3, 0x0, 0x1);
        gbc.writeMem(0x3df6, { 0x53 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0xc490, gbc.sp());
        EXPECT(0x3df7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 53 0359
        gbc.setState(0xac57, 0x14de, 0x8270, 0x492d, 0xae03, 0x5afc, 0x0, 0x1);
        gbc.writeMem(0xac57, { 0x53 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x14de, gbc.sp());
        EXPECT(0xac58, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x53, gbc.readMem(0xac57));
        // 53 035A
        gbc.setState(0x5aaa, 0x3256, 0xd580, 0x4656, 0xef67, 0x7ed4, 0x1, 0x1);
        gbc.writeMem(0x5aaa, { 0x53 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x3256, gbc.sp());
        EXPECT(0x5aab, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 53 035B
        gbc.setState(0xea9b, 0xe18a, 0xcf30, 0xd0aa, 0xa51b, 0x9ff0, 0x0, 0x1);
        gbc.writeMem(0xea9b, { 0x53 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0xe18a, gbc.sp());
        EXPECT(0xea9c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x53, gbc.readMem(0xea9b));
        // 53 035C
        gbc.setState(0x19b7, 0x3a5a, 0x84f0, 0xea30, 0x9f9a, 0xc69, 0x1, 0x0);
        gbc.writeMem(0x19b7, { 0x53 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0x3a5a, gbc.sp());
        EXPECT(0x19b8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 53 035D
        gbc.setState(0x3cce, 0x8001, 0x6d0, 0x7cc9, 0x5768, 0xede8, 0x0, 0x1);
        gbc.writeMem(0x3cce, { 0x53 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x8001, gbc.sp());
        EXPECT(0x3ccf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 53 035E
        gbc.setState(0x7acc, 0x328e, 0x1930, 0x2d00, 0xa0bb, 0x9db0, 0x1, 0x1);
        gbc.writeMem(0x7acc, { 0x53 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x328e, gbc.sp());
        EXPECT(0x7acd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 53 035F
        gbc.setState(0xd1fb, 0xbb98, 0xc20, 0xf9e6, 0xffbe, 0x263, 0x0, 0x0);
        gbc.writeMem(0xd1fb, { 0x53 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0xbb98, gbc.sp());
        EXPECT(0xd1fc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x53, gbc.readMem(0xd1fb));
        // 53 0360
        gbc.setState(0xb12e, 0xdfac, 0x1450, 0x2678, 0xe51e, 0xb6c8, 0x0, 0x1);
        gbc.writeMem(0xb12e, { 0x53 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0xdfac, gbc.sp());
        EXPECT(0xb12f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x53, gbc.readMem(0xb12e));
        // 53 0361
        gbc.setState(0x96de, 0xdbab, 0x6a90, 0x5cd6, 0x3055, 0xcb5d, 0x1, 0x0);
        gbc.writeMem(0x96de, { 0x53 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0xdbab, gbc.sp());
        EXPECT(0x96df, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x53, gbc.readMem(0x96de));
        // 53 0362
        gbc.setState(0x95d9, 0x37d7, 0x3770, 0x73f9, 0x7d6a, 0x190f, 0x1, 0x1);
        gbc.writeMem(0x95d9, { 0x53 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x37d7, gbc.sp());
        EXPECT(0x95da, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x53, gbc.readMem(0x95d9));
        // 53 0363
        gbc.setState(0xbc27, 0x6809, 0x44c0, 0x513f, 0x4fb8, 0xe09a, 0x0, 0x1);
        gbc.writeMem(0xbc27, { 0x53 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x6809, gbc.sp());
        EXPECT(0xbc28, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x53, gbc.readMem(0xbc27));
        // 53 0364
        gbc.setState(0x4d73, 0xef05, 0x1b60, 0xf069, 0x951b, 0x63b7, 0x1, 0x0);
        gbc.writeMem(0x4d73, { 0x53 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0xef05, gbc.sp());
        EXPECT(0x4d74, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 53 0365
        gbc.setState(0x1ce6, 0x858d, 0xda0, 0xe166, 0x4b82, 0x6b56, 0x1, 0x1);
        gbc.writeMem(0x1ce6, { 0x53 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0x858d, gbc.sp());
        EXPECT(0x1ce7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 53 0366
        gbc.setState(0xe977, 0x50e0, 0x1ee0, 0x4ea2, 0x5b74, 0xb358, 0x1, 0x0);
        gbc.writeMem(0xe977, { 0x53 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x50e0, gbc.sp());
        EXPECT(0xe978, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x53, gbc.readMem(0xe977));
        // 53 0367
        gbc.setState(0xd369, 0x8ab9, 0x1370, 0x2beb, 0xa9e6, 0xea39, 0x1, 0x1);
        gbc.writeMem(0xd369, { 0x53 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x8ab9, gbc.sp());
        EXPECT(0xd36a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x53, gbc.readMem(0xd369));
        // 53 0368
        gbc.setState(0xd95e, 0xdddd, 0x79e0, 0xb308, 0xc0f8, 0xd162, 0x1, 0x0);
        gbc.writeMem(0xd95e, { 0x53 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0xdddd, gbc.sp());
        EXPECT(0xd95f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x53, gbc.readMem(0xd95e));
        // 53 0369
        gbc.setState(0x873c, 0xb41f, 0x820, 0x3051, 0x9dc3, 0xf702, 0x1, 0x0);
        gbc.writeMem(0x873c, { 0x53 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0xb41f, gbc.sp());
        EXPECT(0x873d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x53, gbc.readMem(0x873c));
        // 53 036A
        gbc.setState(0x1daf, 0x3225, 0x50c0, 0xebc5, 0x5727, 0x7c68, 0x1, 0x1);
        gbc.writeMem(0x1daf, { 0x53 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x3225, gbc.sp());
        EXPECT(0x1db0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 53 036B
        gbc.setState(0x8a51, 0xbb9e, 0xffc0, 0xd626, 0xee2c, 0x92ae, 0x0, 0x0);
        gbc.writeMem(0x8a51, { 0x53 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0xbb9e, gbc.sp());
        EXPECT(0x8a52, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x53, gbc.readMem(0x8a51));
        // 53 036C
        gbc.setState(0xa81a, 0x4d05, 0x5a60, 0xce8d, 0x5c40, 0xd669, 0x1, 0x1);
        gbc.writeMem(0xa81a, { 0x53 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0x4d05, gbc.sp());
        EXPECT(0xa81b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x53, gbc.readMem(0xa81a));
        // 53 036D
        gbc.setState(0x35e2, 0xbf99, 0x40a0, 0xceb6, 0xd559, 0x7193, 0x1, 0x0);
        gbc.writeMem(0x35e2, { 0x53 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0xbf99, gbc.sp());
        EXPECT(0x35e3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 53 036E
        gbc.setState(0xddd7, 0x3675, 0x8680, 0x640, 0x580a, 0x5824, 0x1, 0x1);
        gbc.writeMem(0xddd7, { 0x53 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x3675, gbc.sp());
        EXPECT(0xddd8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x53, gbc.readMem(0xddd7));
        // 53 036F
        gbc.setState(0xded0, 0xb141, 0xaa60, 0x6dd8, 0xf4f1, 0xf8f2, 0x0, 0x0);
        gbc.writeMem(0xded0, { 0x53 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0xb141, gbc.sp());
        EXPECT(0xded1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x53, gbc.readMem(0xded0));
        // 53 0370
        gbc.setState(0x32d4, 0x33a6, 0x5680, 0xd73f, 0x4145, 0x10bd, 0x0, 0x0);
        gbc.writeMem(0x32d4, { 0x53 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x33a6, gbc.sp());
        EXPECT(0x32d5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 53 0371
        gbc.setState(0x4de5, 0x4953, 0x6e00, 0x593f, 0x8a55, 0x3ed4, 0x1, 0x0);
        gbc.writeMem(0x4de5, { 0x53 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x4953, gbc.sp());
        EXPECT(0x4de6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 53 0372
        gbc.setState(0x23a2, 0xcbea, 0xc7c0, 0x9b46, 0xd55, 0xf70e, 0x0, 0x1);
        gbc.writeMem(0x23a2, { 0x53 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0xcbea, gbc.sp());
        EXPECT(0x23a3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 53 0373
        gbc.setState(0x740, 0x474f, 0x11e0, 0x6572, 0xda84, 0x3a59, 0x1, 0x0);
        gbc.writeMem(0x740, { 0x53 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x474f, gbc.sp());
        EXPECT(0x741, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 53 0374
        gbc.setState(0x568d, 0x4a9e, 0xd0c0, 0x6bd1, 0xbf87, 0x17b5, 0x1, 0x1);
        gbc.writeMem(0x568d, { 0x53 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x4a9e, gbc.sp());
        EXPECT(0x568e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 53 0375
        gbc.setState(0x9333, 0x354, 0x7960, 0xf664, 0xe1dc, 0xd239, 0x1, 0x1);
        gbc.writeMem(0x9333, { 0x53 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x354, gbc.sp());
        EXPECT(0x9334, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x53, gbc.readMem(0x9333));
        // 53 0376
        gbc.setState(0xbda9, 0x1070, 0x8b90, 0x672f, 0x3135, 0xcce9, 0x1, 0x1);
        gbc.writeMem(0xbda9, { 0x53 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x1070, gbc.sp());
        EXPECT(0xbdaa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x53, gbc.readMem(0xbda9));
        // 53 0377
        gbc.setState(0x2c5b, 0xab2b, 0x61e0, 0xd526, 0xb1d1, 0x56a7, 0x0, 0x1);
        gbc.writeMem(0x2c5b, { 0x53 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0xab2b, gbc.sp());
        EXPECT(0x2c5c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 53 0378
        gbc.setState(0x901a, 0xe5ee, 0x7a70, 0x9530, 0xef04, 0x8ac5, 0x0, 0x0);
        gbc.writeMem(0x901a, { 0x53 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0xe5ee, gbc.sp());
        EXPECT(0x901b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x53, gbc.readMem(0x901a));
        // 53 0379
        gbc.setState(0x8bde, 0xbe36, 0x8ce0, 0x6c59, 0x1e98, 0x2e47, 0x0, 0x1);
        gbc.writeMem(0x8bde, { 0x53 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0xbe36, gbc.sp());
        EXPECT(0x8bdf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x53, gbc.readMem(0x8bde));
        // 53 037A
        gbc.setState(0x4aff, 0x6c75, 0x5ba0, 0xc03e, 0xf43a, 0x9ddb, 0x1, 0x1);
        gbc.writeMem(0x4aff, { 0x53 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x6c75, gbc.sp());
        EXPECT(0x4b00, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 53 037B
        gbc.setState(0x9045, 0xcae8, 0x1df0, 0x3dd7, 0x10c6, 0x6846, 0x1, 0x0);
        gbc.writeMem(0x9045, { 0x53 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0xcae8, gbc.sp());
        EXPECT(0x9046, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x53, gbc.readMem(0x9045));
        // 53 037C
        gbc.setState(0xa3b9, 0xe166, 0x3e0, 0x6552, 0xefc3, 0x5fc5, 0x0, 0x0);
        gbc.writeMem(0xa3b9, { 0x53 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0xe166, gbc.sp());
        EXPECT(0xa3ba, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x53, gbc.readMem(0xa3b9));
        // 53 037D
        gbc.setState(0x6326, 0x588c, 0x4ce0, 0x3a6e, 0xfb42, 0x8d91, 0x1, 0x0);
        gbc.writeMem(0x6326, { 0x53 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x588c, gbc.sp());
        EXPECT(0x6327, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 53 037E
        gbc.setState(0x13e, 0xdd8, 0x75e0, 0x5429, 0xf8cd, 0x3695, 0x0, 0x0);
        gbc.writeMem(0x13e, { 0x53 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0xdd8, gbc.sp());
        EXPECT(0x13f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 53 037F
        gbc.setState(0xba94, 0xd724, 0x41e0, 0x3cf9, 0xde86, 0xa5c6, 0x0, 0x0);
        gbc.writeMem(0xba94, { 0x53 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0xd724, gbc.sp());
        EXPECT(0xba95, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x53, gbc.readMem(0xba94));
        // 53 0380
        gbc.setState(0x5686, 0x720c, 0xb940, 0x3fcd, 0x4811, 0x857f, 0x0, 0x1);
        gbc.writeMem(0x5686, { 0x53 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x720c, gbc.sp());
        EXPECT(0x5687, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 53 0381
        gbc.setState(0xde0, 0xaae1, 0xbf50, 0x32f1, 0xa56d, 0x6528, 0x1, 0x1);
        gbc.writeMem(0xde0, { 0x53 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0xaae1, gbc.sp());
        EXPECT(0xde1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 53 0382
        gbc.setState(0x5805, 0xc593, 0x2200, 0x1a27, 0x10f4, 0x9ae4, 0x0, 0x0);
        gbc.writeMem(0x5805, { 0x53 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0xc593, gbc.sp());
        EXPECT(0x5806, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 53 0383
        gbc.setState(0x656f, 0x546c, 0xd10, 0x32c4, 0x249e, 0x1667, 0x1, 0x0);
        gbc.writeMem(0x656f, { 0x53 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x546c, gbc.sp());
        EXPECT(0x6570, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 53 0384
        gbc.setState(0x42a1, 0x8399, 0x34d0, 0x631, 0x3069, 0x9ff8, 0x1, 0x0);
        gbc.writeMem(0x42a1, { 0x53 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x8399, gbc.sp());
        EXPECT(0x42a2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 53 0385
        gbc.setState(0xe4b0, 0x8a38, 0x370, 0x4e51, 0xa7bf, 0x8f99, 0x1, 0x1);
        gbc.writeMem(0xe4b0, { 0x53 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x8a38, gbc.sp());
        EXPECT(0xe4b1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x53, gbc.readMem(0xe4b0));
        // 53 0386
        gbc.setState(0xd5da, 0x5537, 0x1570, 0x376f, 0xc9d3, 0x3d42, 0x0, 0x0);
        gbc.writeMem(0xd5da, { 0x53 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x5537, gbc.sp());
        EXPECT(0xd5db, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x53, gbc.readMem(0xd5da));
        // 53 0387
        gbc.setState(0xc475, 0x6fe1, 0x3070, 0x5b5f, 0xdff4, 0xe6e4, 0x0, 0x1);
        gbc.writeMem(0xc475, { 0x53 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x6fe1, gbc.sp());
        EXPECT(0xc476, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x53, gbc.readMem(0xc475));
        // 53 0388
        gbc.setState(0xef6d, 0x7248, 0x6ce0, 0x1a9c, 0x3fee, 0x40cd, 0x1, 0x0);
        gbc.writeMem(0xef6d, { 0x53 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x7248, gbc.sp());
        EXPECT(0xef6e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x53, gbc.readMem(0xef6d));
        // 53 0389
        gbc.setState(0x9205, 0x825b, 0xdad0, 0xb814, 0x73da, 0xb56d, 0x0, 0x1);
        gbc.writeMem(0x9205, { 0x53 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x825b, gbc.sp());
        EXPECT(0x9206, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x53, gbc.readMem(0x9205));
        // 53 038B
        gbc.setState(0x1dba, 0x1582, 0xe1c0, 0xd08e, 0xcd69, 0xdaf5, 0x0, 0x0);
        gbc.writeMem(0x1dba, { 0x53 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x1582, gbc.sp());
        EXPECT(0x1dbb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 53 038C
        gbc.setState(0x7184, 0x9b9a, 0x7330, 0xcfc, 0xabc0, 0xfafe, 0x0, 0x1);
        gbc.writeMem(0x7184, { 0x53 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x9b9a, gbc.sp());
        EXPECT(0x7185, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 53 038D
        gbc.setState(0x65fe, 0xa72, 0xd970, 0xc395, 0xd7a1, 0x3231, 0x1, 0x1);
        gbc.writeMem(0x65fe, { 0x53 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0xa72, gbc.sp());
        EXPECT(0x65ff, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 53 038E
        gbc.setState(0x5faf, 0x473b, 0x5500, 0x881e, 0xd42e, 0xc2ee, 0x0, 0x0);
        gbc.writeMem(0x5faf, { 0x53 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x473b, gbc.sp());
        EXPECT(0x5fb0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 53 038F
        gbc.setState(0x9070, 0x6cd4, 0x4f80, 0xb1c8, 0x7a5f, 0x463, 0x0, 0x0);
        gbc.writeMem(0x9070, { 0x53 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x6cd4, gbc.sp());
        EXPECT(0x9071, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x53, gbc.readMem(0x9070));
        // 53 0390
        gbc.setState(0xb4b8, 0x9180, 0xd020, 0x577a, 0xb97a, 0x7b70, 0x1, 0x1);
        gbc.writeMem(0xb4b8, { 0x53 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x9180, gbc.sp());
        EXPECT(0xb4b9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x53, gbc.readMem(0xb4b8));
        // 53 0391
        gbc.setState(0x1ee, 0xe432, 0xd5f0, 0x2c23, 0xbd6e, 0xd1c5, 0x0, 0x0);
        gbc.writeMem(0x1ee, { 0x53 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0xe432, gbc.sp());
        EXPECT(0x1ef, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 53 0392
        gbc.setState(0xc0be, 0x8be9, 0x550, 0x6cec, 0x9a54, 0x23cf, 0x0, 0x1);
        gbc.writeMem(0xc0be, { 0x53 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x8be9, gbc.sp());
        EXPECT(0xc0bf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x53, gbc.readMem(0xc0be));
        // 53 0393
        gbc.setState(0x4e42, 0x9f5d, 0x6f00, 0x94f6, 0x7204, 0x74e5, 0x1, 0x0);
        gbc.writeMem(0x4e42, { 0x53 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x9f5d, gbc.sp());
        EXPECT(0x4e43, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 53 0394
        gbc.setState(0x7429, 0x67ff, 0x880, 0x350d, 0xac2e, 0x671a, 0x0, 0x0);
        gbc.writeMem(0x7429, { 0x53 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x67ff, gbc.sp());
        EXPECT(0x742a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 53 0395
        gbc.setState(0x59aa, 0x5689, 0x8400, 0xd7f3, 0x2fa5, 0x6f01, 0x1, 0x0);
        gbc.writeMem(0x59aa, { 0x53 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x5689, gbc.sp());
        EXPECT(0x59ab, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 53 0396
        gbc.setState(0xb775, 0x4a09, 0x4420, 0x2cbe, 0x75f1, 0xb4e5, 0x1, 0x1);
        gbc.writeMem(0xb775, { 0x53 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x4a09, gbc.sp());
        EXPECT(0xb776, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x53, gbc.readMem(0xb775));
        // 53 0397
        gbc.setState(0x8617, 0x56d5, 0x93c0, 0x8511, 0x1ac, 0x990a, 0x1, 0x0);
        gbc.writeMem(0x8617, { 0x53 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x56d5, gbc.sp());
        EXPECT(0x8618, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x53, gbc.readMem(0x8617));
        // 53 0398
        gbc.setState(0xe9c, 0x8b95, 0xc0e0, 0x6a25, 0x9d2b, 0x6cc5, 0x0, 0x0);
        gbc.writeMem(0xe9c, { 0x53 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x8b95, gbc.sp());
        EXPECT(0xe9d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 53 0399
        gbc.setState(0xed8a, 0x6db8, 0x2580, 0x46ae, 0x8f64, 0xa0f3, 0x1, 0x0);
        gbc.writeMem(0xed8a, { 0x53 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x6db8, gbc.sp());
        EXPECT(0xed8b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x53, gbc.readMem(0xed8a));
        // 53 039A
        gbc.setState(0x9372, 0xf622, 0x1c10, 0xacb8, 0xb63b, 0xdde0, 0x0, 0x0);
        gbc.writeMem(0x9372, { 0x53 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0xf622, gbc.sp());
        EXPECT(0x9373, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x53, gbc.readMem(0x9372));
        // 53 039B
        gbc.setState(0x2e24, 0xa6f7, 0xbd30, 0x37e4, 0x1769, 0x975, 0x1, 0x1);
        gbc.writeMem(0x2e24, { 0x53 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0xa6f7, gbc.sp());
        EXPECT(0x2e25, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 53 039C
        gbc.setState(0xaffd, 0xb5a3, 0x1fd0, 0x81cb, 0x3808, 0x7abd, 0x0, 0x1);
        gbc.writeMem(0xaffd, { 0x53 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0xb5a3, gbc.sp());
        EXPECT(0xaffe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x53, gbc.readMem(0xaffd));
        // 53 039D
        gbc.setState(0xb80a, 0xc666, 0xb5e0, 0x1a83, 0xf95c, 0x68c, 0x0, 0x0);
        gbc.writeMem(0xb80a, { 0x53 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0xc666, gbc.sp());
        EXPECT(0xb80b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x53, gbc.readMem(0xb80a));
        // 53 03A0
        gbc.setState(0xd7db, 0x33e, 0x5470, 0x4607, 0x465a, 0xf2e, 0x0, 0x1);
        gbc.writeMem(0xd7db, { 0x53 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x33e, gbc.sp());
        EXPECT(0xd7dc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x53, gbc.readMem(0xd7db));
        // 53 03A1
        gbc.setState(0x78f, 0xcdb5, 0x7da0, 0x65da, 0x1927, 0xad9d, 0x1, 0x0);
        gbc.writeMem(0x78f, { 0x53 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0xcdb5, gbc.sp());
        EXPECT(0x790, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 53 03A2
        gbc.setState(0x8ef9, 0xad1e, 0xba70, 0xa3d7, 0x9fef, 0x93a9, 0x0, 0x0);
        gbc.writeMem(0x8ef9, { 0x53 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0xad1e, gbc.sp());
        EXPECT(0x8efa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x53, gbc.readMem(0x8ef9));
        // 53 03A3
        gbc.setState(0xda76, 0xbf6e, 0x3020, 0x60c7, 0x43cf, 0x6133, 0x0, 0x1);
        gbc.writeMem(0xda76, { 0x53 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0xbf6e, gbc.sp());
        EXPECT(0xda77, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x53, gbc.readMem(0xda76));
        // 53 03A4
        gbc.setState(0x61b4, 0x2094, 0x1cd0, 0x76e2, 0x9757, 0xc71, 0x1, 0x0);
        gbc.writeMem(0x61b4, { 0x53 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x2094, gbc.sp());
        EXPECT(0x61b5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 53 03A5
        gbc.setState(0xa5df, 0xb51a, 0xcdb0, 0x7595, 0xcf99, 0x9fcb, 0x0, 0x1);
        gbc.writeMem(0xa5df, { 0x53 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0xb51a, gbc.sp());
        EXPECT(0xa5e0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x53, gbc.readMem(0xa5df));
        // 53 03A6
        gbc.setState(0xdbcd, 0x7f65, 0xa520, 0x6387, 0x37ac, 0x2d63, 0x0, 0x1);
        gbc.writeMem(0xdbcd, { 0x53 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x7f65, gbc.sp());
        EXPECT(0xdbce, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x53, gbc.readMem(0xdbcd));
        // 53 03A7
        gbc.setState(0xc339, 0x9096, 0x31b0, 0x310c, 0x72b, 0x78c1, 0x1, 0x1);
        gbc.writeMem(0xc339, { 0x53 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x9096, gbc.sp());
        EXPECT(0xc33a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x53, gbc.readMem(0xc339));
        // 53 03A8
        gbc.setState(0x9760, 0xb6dd, 0xc610, 0x9a75, 0x7bd0, 0x6c83, 0x1, 0x1);
        gbc.writeMem(0x9760, { 0x53 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0xb6dd, gbc.sp());
        EXPECT(0x9761, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x53, gbc.readMem(0x9760));
        // 53 03A9
        gbc.setState(0x6466, 0xbe8b, 0xb140, 0x697b, 0x8b10, 0x361a, 0x1, 0x1);
        gbc.writeMem(0x6466, { 0x53 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0xbe8b, gbc.sp());
        EXPECT(0x6467, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 53 03AA
        gbc.setState(0xc391, 0x8370, 0x9810, 0x5db5, 0x93c6, 0x6c81, 0x1, 0x0);
        gbc.writeMem(0xc391, { 0x53 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x8370, gbc.sp());
        EXPECT(0xc392, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x53, gbc.readMem(0xc391));
        // 53 03AB
        gbc.setState(0xc3a, 0x62ac, 0x3b10, 0x3049, 0x2287, 0x4f64, 0x0, 0x0);
        gbc.writeMem(0xc3a, { 0x53 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x62ac, gbc.sp());
        EXPECT(0xc3b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 53 03AC
        gbc.setState(0xc9b6, 0xc248, 0x59c0, 0x2dca, 0xd8a7, 0x785, 0x1, 0x1);
        gbc.writeMem(0xc9b6, { 0x53 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0xc248, gbc.sp());
        EXPECT(0xc9b7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x53, gbc.readMem(0xc9b6));
        // 53 03AD
        gbc.setState(0x8140, 0xe421, 0x9df0, 0x783, 0xe4d0, 0xf116, 0x0, 0x1);
        gbc.writeMem(0x8140, { 0x53 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0xe421, gbc.sp());
        EXPECT(0x8141, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x53, gbc.readMem(0x8140));
        // 53 03AE
        gbc.setState(0x12aa, 0x8e74, 0x80d0, 0xaf0a, 0x4c58, 0xc2dc, 0x1, 0x0);
        gbc.writeMem(0x12aa, { 0x53 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x8e74, gbc.sp());
        EXPECT(0x12ab, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 53 03AF
        gbc.setState(0xd90e, 0x39c1, 0xcc10, 0x743a, 0xbcfd, 0xbfb1, 0x1, 0x0);
        gbc.writeMem(0xd90e, { 0x53 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x39c1, gbc.sp());
        EXPECT(0xd90f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x53, gbc.readMem(0xd90e));
        // 53 03B0
        gbc.setState(0x5f72, 0x2459, 0x2a30, 0x38f9, 0x28c3, 0x2d5, 0x0, 0x0);
        gbc.writeMem(0x5f72, { 0x53 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x2459, gbc.sp());
        EXPECT(0x5f73, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 53 03B1
        gbc.setState(0x7a5c, 0x120f, 0x5280, 0xeb7c, 0xcaf4, 0x8b01, 0x1, 0x0);
        gbc.writeMem(0x7a5c, { 0x53 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x120f, gbc.sp());
        EXPECT(0x7a5d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 53 03B2
        gbc.setState(0xad18, 0xa3cc, 0xeb90, 0x487a, 0xf8d9, 0xd0c5, 0x0, 0x0);
        gbc.writeMem(0xad18, { 0x53 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0xa3cc, gbc.sp());
        EXPECT(0xad19, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x53, gbc.readMem(0xad18));
        // 53 03B4
        gbc.setState(0x14b9, 0x307b, 0x9070, 0x1133, 0x524b, 0xdad4, 0x0, 0x0);
        gbc.writeMem(0x14b9, { 0x53 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x307b, gbc.sp());
        EXPECT(0x14ba, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 53 03B5
        gbc.setState(0x7f19, 0x1daf, 0x1fb0, 0x95f, 0xa498, 0x2911, 0x0, 0x0);
        gbc.writeMem(0x7f19, { 0x53 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x1daf, gbc.sp());
        EXPECT(0x7f1a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 53 03B6
        gbc.setState(0x6648, 0xdbb9, 0x2f90, 0xeb85, 0xb90d, 0x7566, 0x1, 0x0);
        gbc.writeMem(0x6648, { 0x53 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0xdbb9, gbc.sp());
        EXPECT(0x6649, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 53 03B7
        gbc.setState(0xb65c, 0xe762, 0x97c0, 0xa8e4, 0x7a16, 0x26e8, 0x0, 0x1);
        gbc.writeMem(0xb65c, { 0x53 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0xe762, gbc.sp());
        EXPECT(0xb65d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x53, gbc.readMem(0xb65c));
        // 53 03B8
        gbc.setState(0x5533, 0x45da, 0xa900, 0x3329, 0xa15b, 0xd751, 0x0, 0x0);
        gbc.writeMem(0x5533, { 0x53 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x45da, gbc.sp());
        EXPECT(0x5534, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 53 03B9
        gbc.setState(0xc816, 0x9857, 0x9ce0, 0xf51f, 0x8132, 0x9dfc, 0x1, 0x1);
        gbc.writeMem(0xc816, { 0x53 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x9857, gbc.sp());
        EXPECT(0xc817, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x53, gbc.readMem(0xc816));
        // 53 03BA
        gbc.setState(0x2e3d, 0x2f58, 0x8990, 0x337e, 0x9d08, 0xb50d, 0x1, 0x1);
        gbc.writeMem(0x2e3d, { 0x53 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x2f58, gbc.sp());
        EXPECT(0x2e3e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 53 03BB
        gbc.setState(0x64f9, 0x119f, 0x7e50, 0x9158, 0x2d09, 0x27a8, 0x0, 0x0);
        gbc.writeMem(0x64f9, { 0x53 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x119f, gbc.sp());
        EXPECT(0x64fa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 53 03BC
        gbc.setState(0x78b3, 0x6add, 0xf2d0, 0x8cfe, 0x6be3, 0x870f, 0x1, 0x0);
        gbc.writeMem(0x78b3, { 0x53 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x6add, gbc.sp());
        EXPECT(0x78b4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 53 03BD
        gbc.setState(0x4f98, 0xc611, 0xdb20, 0xc4b7, 0x709a, 0xc4a7, 0x0, 0x1);
        gbc.writeMem(0x4f98, { 0x53 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0xc611, gbc.sp());
        EXPECT(0x4f99, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 53 03BE
        gbc.setState(0xc49e, 0x4ac4, 0x86f0, 0x88a8, 0x8485, 0x88ab, 0x0, 0x0);
        gbc.writeMem(0xc49e, { 0x53 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x4ac4, gbc.sp());
        EXPECT(0xc49f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x53, gbc.readMem(0xc49e));
        // 53 03BF
        gbc.setState(0x8827, 0xd678, 0x51a0, 0xfa28, 0x512, 0x864b, 0x0, 0x0);
        gbc.writeMem(0x8827, { 0x53 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0xd678, gbc.sp());
        EXPECT(0x8828, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x53, gbc.readMem(0x8827));
        // 53 03C0
        gbc.setState(0x2b62, 0xe19a, 0xd870, 0x598, 0x5355, 0x894b, 0x1, 0x1);
        gbc.writeMem(0x2b62, { 0x53 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0xe19a, gbc.sp());
        EXPECT(0x2b63, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 53 03C1
        gbc.setState(0x2c3, 0xb7df, 0x5320, 0xdce1, 0xf030, 0x45cb, 0x1, 0x1);
        gbc.writeMem(0x2c3, { 0x53 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0xb7df, gbc.sp());
        EXPECT(0x2c4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 53 03C2
        gbc.setState(0x3109, 0xb610, 0x47c0, 0xbfc5, 0xfd11, 0x5bf3, 0x0, 0x1);
        gbc.writeMem(0x3109, { 0x53 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0xb610, gbc.sp());
        EXPECT(0x310a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 53 03C4
        gbc.setState(0xe62c, 0x1a91, 0xef10, 0xe6f5, 0x98dd, 0x2344, 0x1, 0x0);
        gbc.writeMem(0xe62c, { 0x53 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x1a91, gbc.sp());
        EXPECT(0xe62d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x53, gbc.readMem(0xe62c));
        // 53 03C5
        gbc.setState(0xbd48, 0x2a71, 0x5f0, 0x71cd, 0xa7bc, 0x96d3, 0x0, 0x0);
        gbc.writeMem(0xbd48, { 0x53 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x2a71, gbc.sp());
        EXPECT(0xbd49, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x53, gbc.readMem(0xbd48));
        // 53 03C6
        gbc.setState(0x12d5, 0x99cd, 0x8ac0, 0x78b2, 0x32fa, 0xf74b, 0x1, 0x1);
        gbc.writeMem(0x12d5, { 0x53 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x99cd, gbc.sp());
        EXPECT(0x12d6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 53 03C7
        gbc.setState(0xb7a1, 0x1934, 0xdc80, 0x8bf6, 0x4a2, 0x1487, 0x1, 0x1);
        gbc.writeMem(0xb7a1, { 0x53 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x1934, gbc.sp());
        EXPECT(0xb7a2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x53, gbc.readMem(0xb7a1));
        // 53 03C8
        gbc.setState(0x91b5, 0x8a9f, 0x2200, 0x7143, 0x45ff, 0x296e, 0x1, 0x1);
        gbc.writeMem(0x91b5, { 0x53 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x8a9f, gbc.sp());
        EXPECT(0x91b6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x53, gbc.readMem(0x91b5));
        // 53 03C9
        gbc.setState(0xeafc, 0x7280, 0x9300, 0x9856, 0x17e2, 0x9d5, 0x0, 0x1);
        gbc.writeMem(0xeafc, { 0x53 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x7280, gbc.sp());
        EXPECT(0xeafd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x53, gbc.readMem(0xeafc));
        // 53 03CA
        gbc.setState(0x500c, 0x95ff, 0xeb30, 0x44a0, 0x281f, 0xfcd7, 0x0, 0x1);
        gbc.writeMem(0x500c, { 0x53 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0x95ff, gbc.sp());
        EXPECT(0x500d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 53 03CB
        gbc.setState(0x4ca2, 0x9f03, 0x6740, 0x51bb, 0x2ea5, 0x2056, 0x0, 0x0);
        gbc.writeMem(0x4ca2, { 0x53 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0x9f03, gbc.sp());
        EXPECT(0x4ca3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 53 03CC
        gbc.setState(0x7c7a, 0x8ffd, 0x7f80, 0x92dc, 0xbafd, 0x5705, 0x0, 0x1);
        gbc.writeMem(0x7c7a, { 0x53 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x8ffd, gbc.sp());
        EXPECT(0x7c7b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 53 03CD
        gbc.setState(0xbd67, 0xabc1, 0x9610, 0x24ec, 0x64b, 0x7a07, 0x0, 0x1);
        gbc.writeMem(0xbd67, { 0x53 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0xabc1, gbc.sp());
        EXPECT(0xbd68, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x53, gbc.readMem(0xbd67));
        // 53 03CE
        gbc.setState(0xfb6, 0x5c8f, 0xf000, 0x75bc, 0xfda5, 0xe750, 0x0, 0x0);
        gbc.writeMem(0xfb6, { 0x53 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x5c8f, gbc.sp());
        EXPECT(0xfb7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 53 03CF
        gbc.setState(0x7ffc, 0x5ba3, 0x6510, 0xca6d, 0x7dc7, 0xeecf, 0x1, 0x0);
        gbc.writeMem(0x7ffc, { 0x53 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x5ba3, gbc.sp());
        EXPECT(0x7ffd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 53 03D0
        gbc.setState(0x236f, 0x3c52, 0x9440, 0x6d64, 0xccaa, 0xdbf0, 0x1, 0x0);
        gbc.writeMem(0x236f, { 0x53 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x3c52, gbc.sp());
        EXPECT(0x2370, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 53 03D1
        gbc.setState(0xcd83, 0x5faf, 0xfc80, 0x21a5, 0xaea3, 0xc156, 0x1, 0x0);
        gbc.writeMem(0xcd83, { 0x53 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0x5faf, gbc.sp());
        EXPECT(0xcd84, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x53, gbc.readMem(0xcd83));
        // 53 03D2
        gbc.setState(0xc5ba, 0x27a8, 0xfce0, 0x27e5, 0x82a, 0x4543, 0x1, 0x1);
        gbc.writeMem(0xc5ba, { 0x53 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x27a8, gbc.sp());
        EXPECT(0xc5bb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x53, gbc.readMem(0xc5ba));
        // 53 03D3
        gbc.setState(0x33bb, 0x100d, 0x6900, 0xb614, 0x70de, 0xd558, 0x0, 0x1);
        gbc.writeMem(0x33bb, { 0x53 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x100d, gbc.sp());
        EXPECT(0x33bc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 53 03D4
        gbc.setState(0x5dc6, 0x2a7f, 0xff00, 0x1c40, 0x51e1, 0x35ac, 0x0, 0x1);
        gbc.writeMem(0x5dc6, { 0x53 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x2a7f, gbc.sp());
        EXPECT(0x5dc7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 53 03D5
        gbc.setState(0xccc6, 0x922e, 0x5260, 0x7ec7, 0xa156, 0xc4c0, 0x1, 0x1);
        gbc.writeMem(0xccc6, { 0x53 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x922e, gbc.sp());
        EXPECT(0xccc7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x53, gbc.readMem(0xccc6));
        // 53 03D6
        gbc.setState(0x478e, 0x4f31, 0x3730, 0x44b5, 0x5788, 0x526e, 0x0, 0x1);
        gbc.writeMem(0x478e, { 0x53 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x4f31, gbc.sp());
        EXPECT(0x478f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 53 03D7
        gbc.setState(0x29c9, 0x8870, 0xacb0, 0x406, 0x9c5, 0x3039, 0x0, 0x1);
        gbc.writeMem(0x29c9, { 0x53 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x8870, gbc.sp());
        EXPECT(0x29ca, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 53 03D8
        gbc.setState(0x9704, 0x6471, 0xaeb0, 0xe74, 0xcc72, 0xf063, 0x1, 0x1);
        gbc.writeMem(0x9704, { 0x53 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x6471, gbc.sp());
        EXPECT(0x9705, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x53, gbc.readMem(0x9704));
        // 53 03D9
        gbc.setState(0x9750, 0x8eaa, 0xe430, 0xb081, 0x8baf, 0xc46a, 0x1, 0x1);
        gbc.writeMem(0x9750, { 0x53 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x8eaa, gbc.sp());
        EXPECT(0x9751, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x53, gbc.readMem(0x9750));
        // 53 03DA
        gbc.setState(0x1d78, 0x54a0, 0xa240, 0x4dd1, 0x765e, 0x23fa, 0x0, 0x1);
        gbc.writeMem(0x1d78, { 0x53 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0x54a0, gbc.sp());
        EXPECT(0x1d79, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 53 03DB
        gbc.setState(0x691b, 0xfcc4, 0x9f30, 0x3e78, 0x3c36, 0x913d, 0x1, 0x0);
        gbc.writeMem(0x691b, { 0x53 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0xfcc4, gbc.sp());
        EXPECT(0x691c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 53 03DC
        gbc.setState(0xb1e5, 0xe352, 0x520, 0x2268, 0x9b03, 0xf7fc, 0x0, 0x1);
        gbc.writeMem(0xb1e5, { 0x53 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0xe352, gbc.sp());
        EXPECT(0xb1e6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x53, gbc.readMem(0xb1e5));
        // 53 03DD
        gbc.setState(0xaf0c, 0xe470, 0x8150, 0xb3ce, 0xc5d6, 0xe633, 0x0, 0x1);
        gbc.writeMem(0xaf0c, { 0x53 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0xe470, gbc.sp());
        EXPECT(0xaf0d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x53, gbc.readMem(0xaf0c));
        // 53 03DE
        gbc.setState(0x43f9, 0xda51, 0x17e0, 0x1511, 0x8da5, 0x584a, 0x0, 0x1);
        gbc.writeMem(0x43f9, { 0x53 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0xda51, gbc.sp());
        EXPECT(0x43fa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 53 03DF
        gbc.setState(0x7d7a, 0x1518, 0x9130, 0xb025, 0x7fb4, 0x4008, 0x1, 0x1);
        gbc.writeMem(0x7d7a, { 0x53 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x1518, gbc.sp());
        EXPECT(0x7d7b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 53 03E0
        gbc.setState(0xbf86, 0x1967, 0x33e0, 0x9c3b, 0x17e2, 0x7f60, 0x1, 0x0);
        gbc.writeMem(0xbf86, { 0x53 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x1967, gbc.sp());
        EXPECT(0xbf87, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x53, gbc.readMem(0xbf86));
        // 53 03E1
        gbc.setState(0x834a, 0x1608, 0xa560, 0x6d76, 0x8d98, 0x8ba1, 0x1, 0x0);
        gbc.writeMem(0x834a, { 0x53 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x1608, gbc.sp());
        EXPECT(0x834b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x53, gbc.readMem(0x834a));
        // 53 03E3
        gbc.setState(0x6f0c, 0x31b8, 0x31c0, 0x9440, 0x4899, 0xab63, 0x1, 0x1);
        gbc.writeMem(0x6f0c, { 0x53 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x31b8, gbc.sp());
        EXPECT(0x6f0d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 53 03E4
        gbc.setState(0xc4f3, 0x57c7, 0x3950, 0x1206, 0xea95, 0x683f, 0x0, 0x0);
        gbc.writeMem(0xc4f3, { 0x53 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0x57c7, gbc.sp());
        EXPECT(0xc4f4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x53, gbc.readMem(0xc4f3));
        // 53 03E5
        gbc.setState(0xdb57, 0x164b, 0x6bc0, 0x9eec, 0x7576, 0x341a, 0x0, 0x1);
        gbc.writeMem(0xdb57, { 0x53 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x164b, gbc.sp());
        EXPECT(0xdb58, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x53, gbc.readMem(0xdb57));
        // 53 03E6
        gbc.setState(0x1563, 0x19e6, 0x9560, 0x2bca, 0xf397, 0x4db8, 0x0, 0x1);
        gbc.writeMem(0x1563, { 0x53 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x19e6, gbc.sp());
        EXPECT(0x1564, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 53 03E7
        gbc.setState(0xe80f, 0xb191, 0x9030, 0xdbc6, 0xac8c, 0x2396, 0x0, 0x0);
        gbc.writeMem(0xe80f, { 0x53 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0xb191, gbc.sp());
        EXPECT(0xe810, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x53, gbc.readMem(0xe80f));
    }
