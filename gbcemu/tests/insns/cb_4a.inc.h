    TEST(gbcemu, opcode_cb_4a) {
        GBCEmu gbc{};
        uint8_t cartridge[0x8000];
        cartridge[0x149] = 0x02; // 8kb external RAM
        gbc.loadCartridge(new FlashGamePak(cartridge));
        // CB 4A 0002
        gbc.setState(0x6933, 0x591a, 0x3570, 0x66f6, 0x5550, 0xbe2f, 0x1, 0x0);
        gbc.writeMem(0x6933, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x591a, gbc.sp());
        EXPECT(0x6935, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4A 0003
        gbc.setState(0x6f9d, 0xc1fd, 0x21a0, 0x87ae, 0x7c4a, 0xd166, 0x0, 0x0);
        gbc.writeMem(0x6f9d, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0xc1fd, gbc.sp());
        EXPECT(0x6f9f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4A 0004
        gbc.setState(0xad4d, 0xbf98, 0xb840, 0x1d75, 0x4ea3, 0xbca4, 0x0, 0x0);
        gbc.writeMem(0xad4d, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0xbf98, gbc.sp());
        EXPECT(0xad4f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xad4d));
        EXPECT(0x4a, gbc.readMem(0xad4e));
        // CB 4A 0005
        gbc.setState(0xc17b, 0xd0b8, 0x9960, 0x55a5, 0x776e, 0x25b7, 0x1, 0x0);
        gbc.writeMem(0xc17b, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0xd0b8, gbc.sp());
        EXPECT(0xc17d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc17b));
        EXPECT(0x4a, gbc.readMem(0xc17c));
        // CB 4A 0006
        gbc.setState(0xe64e, 0xbd66, 0x4740, 0xd5a0, 0x414b, 0x37b5, 0x1, 0x0);
        gbc.writeMem(0xe64e, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0xbd66, gbc.sp());
        EXPECT(0xe650, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe64e));
        EXPECT(0x4a, gbc.readMem(0xe64f));
        // CB 4A 0007
        gbc.setState(0x594b, 0x33fc, 0x4c50, 0x4f7e, 0x7b67, 0xbc74, 0x1, 0x1);
        gbc.writeMem(0x594b, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x33fc, gbc.sp());
        EXPECT(0x594d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4A 0008
        gbc.setState(0x14fe, 0x3876, 0xfae0, 0xf046, 0x4d51, 0xa7fd, 0x1, 0x0);
        gbc.writeMem(0x14fe, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x3876, gbc.sp());
        EXPECT(0x1500, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4A 000A
        gbc.setState(0x13f, 0x1370, 0xf620, 0x992d, 0xa633, 0x6d80, 0x0, 0x0);
        gbc.writeMem(0x13f, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x1370, gbc.sp());
        EXPECT(0x141, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4A 000B
        gbc.setState(0xa5f1, 0x8c1f, 0x47a0, 0x19ed, 0xe2b2, 0xa706, 0x1, 0x0);
        gbc.writeMem(0xa5f1, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x8c1f, gbc.sp());
        EXPECT(0xa5f3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa5f1));
        EXPECT(0x4a, gbc.readMem(0xa5f2));
        // CB 4A 000D
        gbc.setState(0x32f3, 0x1e32, 0xadb0, 0x6a, 0xd364, 0xc151, 0x1, 0x1);
        gbc.writeMem(0x32f3, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x1e32, gbc.sp());
        EXPECT(0x32f5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4A 000E
        gbc.setState(0x701f, 0x27cb, 0xe080, 0x87ee, 0xf51d, 0xee8d, 0x0, 0x1);
        gbc.writeMem(0x701f, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x27cb, gbc.sp());
        EXPECT(0x7021, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4A 0010
        gbc.setState(0x5e24, 0x7aa8, 0xc660, 0x9f9d, 0xc655, 0x1071, 0x0, 0x0);
        gbc.writeMem(0x5e24, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x7aa8, gbc.sp());
        EXPECT(0x5e26, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4A 0012
        gbc.setState(0x727f, 0x32a6, 0x89d0, 0x90e6, 0x2f13, 0x6b6a, 0x0, 0x0);
        gbc.writeMem(0x727f, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x32a6, gbc.sp());
        EXPECT(0x7281, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4A 0013
        gbc.setState(0xdfc4, 0x21b8, 0x97b0, 0x997c, 0x374e, 0x400b, 0x1, 0x1);
        gbc.writeMem(0xdfc4, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x21b8, gbc.sp());
        EXPECT(0xdfc6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdfc4));
        EXPECT(0x4a, gbc.readMem(0xdfc5));
        // CB 4A 0014
        gbc.setState(0x2a87, 0x1bb5, 0xf3b0, 0x8452, 0x20b1, 0xf996, 0x0, 0x0);
        gbc.writeMem(0x2a87, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x1bb5, gbc.sp());
        EXPECT(0x2a89, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4A 0015
        gbc.setState(0x491b, 0x8fb3, 0x370, 0xb30f, 0x94bb, 0x3d73, 0x1, 0x1);
        gbc.writeMem(0x491b, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x8fb3, gbc.sp());
        EXPECT(0x491d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4A 0016
        gbc.setState(0xb255, 0x85e5, 0x2160, 0x4b74, 0x3fbc, 0x8284, 0x1, 0x0);
        gbc.writeMem(0xb255, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x85e5, gbc.sp());
        EXPECT(0xb257, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb255));
        EXPECT(0x4a, gbc.readMem(0xb256));
        // CB 4A 0017
        gbc.setState(0x254, 0x3f5f, 0xde20, 0x60ea, 0xa7a8, 0xf49d, 0x0, 0x1);
        gbc.writeMem(0x254, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x3f5f, gbc.sp());
        EXPECT(0x256, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4A 0018
        gbc.setState(0xac8f, 0x4db3, 0xd2b0, 0xecb0, 0xd186, 0xd3ea, 0x0, 0x1);
        gbc.writeMem(0xac8f, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x4db3, gbc.sp());
        EXPECT(0xac91, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xac8f));
        EXPECT(0x4a, gbc.readMem(0xac90));
        // CB 4A 0019
        gbc.setState(0x55c8, 0x1d27, 0xb4f0, 0xb4ae, 0xc417, 0x380b, 0x1, 0x1);
        gbc.writeMem(0x55c8, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x1d27, gbc.sp());
        EXPECT(0x55ca, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4A 001A
        gbc.setState(0x773, 0x266a, 0xced0, 0xd709, 0xe090, 0xe4b2, 0x1, 0x1);
        gbc.writeMem(0x773, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x266a, gbc.sp());
        EXPECT(0x775, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4A 001B
        gbc.setState(0xcfdc, 0x4142, 0xe3f0, 0xb8ce, 0xea2e, 0xef43, 0x0, 0x1);
        gbc.writeMem(0xcfdc, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x4142, gbc.sp());
        EXPECT(0xcfde, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcfdc));
        EXPECT(0x4a, gbc.readMem(0xcfdd));
        // CB 4A 001C
        gbc.setState(0xaf00, 0x4231, 0xc6b0, 0x3135, 0xacfd, 0x7ef3, 0x1, 0x0);
        gbc.writeMem(0xaf00, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x4231, gbc.sp());
        EXPECT(0xaf02, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaf00));
        EXPECT(0x4a, gbc.readMem(0xaf01));
        // CB 4A 001D
        gbc.setState(0x436f, 0x1e7c, 0xa940, 0x99ee, 0xb199, 0x11d6, 0x0, 0x0);
        gbc.writeMem(0x436f, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x1e7c, gbc.sp());
        EXPECT(0x4371, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4A 001F
        gbc.setState(0xd755, 0x39f1, 0xb990, 0xd14, 0xab32, 0x7683, 0x1, 0x0);
        gbc.writeMem(0xd755, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x39f1, gbc.sp());
        EXPECT(0xd757, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd755));
        EXPECT(0x4a, gbc.readMem(0xd756));
        // CB 4A 0020
        gbc.setState(0xd101, 0x2321, 0x4070, 0x5566, 0x66f9, 0x2f7e, 0x0, 0x0);
        gbc.writeMem(0xd101, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0x2321, gbc.sp());
        EXPECT(0xd103, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd101));
        EXPECT(0x4a, gbc.readMem(0xd102));
        // CB 4A 0021
        gbc.setState(0xcbbb, 0x299c, 0x2ea0, 0x6a89, 0x3239, 0x62c3, 0x1, 0x1);
        gbc.writeMem(0xcbbb, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x299c, gbc.sp());
        EXPECT(0xcbbd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcbbb));
        EXPECT(0x4a, gbc.readMem(0xcbbc));
        // CB 4A 0023
        gbc.setState(0x32da, 0x9e75, 0x7940, 0x6b20, 0xa209, 0xbd6e, 0x1, 0x1);
        gbc.writeMem(0x32da, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x9e75, gbc.sp());
        EXPECT(0x32dc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4A 0024
        gbc.setState(0xc48, 0xc8de, 0x1c60, 0xa9b1, 0x63b3, 0x16fe, 0x0, 0x0);
        gbc.writeMem(0xc48, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0xc8de, gbc.sp());
        EXPECT(0xc4a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4A 0025
        gbc.setState(0xe316, 0x2f26, 0xd830, 0x961a, 0x5d97, 0x1bde, 0x0, 0x1);
        gbc.writeMem(0xe316, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x2f26, gbc.sp());
        EXPECT(0xe318, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe316));
        EXPECT(0x4a, gbc.readMem(0xe317));
        // CB 4A 0026
        gbc.setState(0x4bca, 0xdc4f, 0xf6e0, 0x5750, 0xbf14, 0xd748, 0x0, 0x0);
        gbc.writeMem(0x4bca, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0xdc4f, gbc.sp());
        EXPECT(0x4bcc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4A 0027
        gbc.setState(0x6ab, 0xe238, 0x8100, 0xd91f, 0x8e80, 0x239d, 0x1, 0x0);
        gbc.writeMem(0x6ab, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0xe238, gbc.sp());
        EXPECT(0x6ad, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4A 0028
        gbc.setState(0x4cb4, 0x8d60, 0x8370, 0xc64a, 0x3397, 0x8211, 0x0, 0x0);
        gbc.writeMem(0x4cb4, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x8d60, gbc.sp());
        EXPECT(0x4cb6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4A 0029
        gbc.setState(0xe983, 0xafe9, 0x7a10, 0xc68d, 0xd208, 0x2ef3, 0x0, 0x0);
        gbc.writeMem(0xe983, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0xafe9, gbc.sp());
        EXPECT(0xe985, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe983));
        EXPECT(0x4a, gbc.readMem(0xe984));
        // CB 4A 002A
        gbc.setState(0x361b, 0x5a4d, 0x5680, 0x36e2, 0x6023, 0xda69, 0x1, 0x0);
        gbc.writeMem(0x361b, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0x5a4d, gbc.sp());
        EXPECT(0x361d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4A 002B
        gbc.setState(0x2e99, 0x83ff, 0xf0f0, 0x842d, 0x4dbf, 0xe153, 0x1, 0x0);
        gbc.writeMem(0x2e99, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x83ff, gbc.sp());
        EXPECT(0x2e9b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4A 002C
        gbc.setState(0xd9c0, 0xf3a3, 0x3fc0, 0xb0a4, 0xa168, 0xebe, 0x0, 0x0);
        gbc.writeMem(0xd9c0, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0xf3a3, gbc.sp());
        EXPECT(0xd9c2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd9c0));
        EXPECT(0x4a, gbc.readMem(0xd9c1));
        // CB 4A 002E
        gbc.setState(0x238f, 0xf179, 0x10a0, 0xbda2, 0x6807, 0x33e5, 0x0, 0x0);
        gbc.writeMem(0x238f, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0xf179, gbc.sp());
        EXPECT(0x2391, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4A 002F
        gbc.setState(0xd1da, 0x27a5, 0xf8f0, 0xd07, 0x12ce, 0x8f11, 0x1, 0x1);
        gbc.writeMem(0xd1da, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x27a5, gbc.sp());
        EXPECT(0xd1dc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd1da));
        EXPECT(0x4a, gbc.readMem(0xd1db));
        // CB 4A 0031
        gbc.setState(0x7dd8, 0x7a24, 0x62a0, 0x8c69, 0x44f4, 0xdf68, 0x1, 0x0);
        gbc.writeMem(0x7dd8, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x7a24, gbc.sp());
        EXPECT(0x7dda, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4A 0032
        gbc.setState(0xd91a, 0xc87c, 0x89e0, 0xeefb, 0x5c6e, 0xc801, 0x0, 0x1);
        gbc.writeMem(0xd91a, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0xc87c, gbc.sp());
        EXPECT(0xd91c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd91a));
        EXPECT(0x4a, gbc.readMem(0xd91b));
        // CB 4A 0033
        gbc.setState(0x7564, 0xa263, 0xced0, 0x3f66, 0xa373, 0x10fd, 0x1, 0x0);
        gbc.writeMem(0x7564, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0xa263, gbc.sp());
        EXPECT(0x7566, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4A 0034
        gbc.setState(0x3ed8, 0x1f07, 0x9680, 0x7202, 0x5922, 0xdae3, 0x1, 0x1);
        gbc.writeMem(0x3ed8, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x1f07, gbc.sp());
        EXPECT(0x3eda, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4A 0035
        gbc.setState(0x5ef, 0xad1, 0x8c60, 0x888a, 0x9074, 0x7940, 0x1, 0x0);
        gbc.writeMem(0x5ef, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0xad1, gbc.sp());
        EXPECT(0x5f1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4A 0036
        gbc.setState(0x34a, 0x8d85, 0x4390, 0x87c, 0xc90c, 0xf3d7, 0x0, 0x0);
        gbc.writeMem(0x34a, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0x8d85, gbc.sp());
        EXPECT(0x34c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4A 0037
        gbc.setState(0xad3e, 0x499e, 0xb1c0, 0x1f16, 0x9045, 0x35a3, 0x1, 0x1);
        gbc.writeMem(0xad3e, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0x499e, gbc.sp());
        EXPECT(0xad40, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xad3e));
        EXPECT(0x4a, gbc.readMem(0xad3f));
        // CB 4A 0038
        gbc.setState(0x3ae6, 0x6f01, 0x9340, 0x5742, 0xcfba, 0x5af0, 0x1, 0x0);
        gbc.writeMem(0x3ae6, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x6f01, gbc.sp());
        EXPECT(0x3ae8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4A 0039
        gbc.setState(0xb65b, 0xf5c0, 0xcd10, 0x3853, 0x91b0, 0xbb39, 0x0, 0x1);
        gbc.writeMem(0xb65b, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0xf5c0, gbc.sp());
        EXPECT(0xb65d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb65b));
        EXPECT(0x4a, gbc.readMem(0xb65c));
        // CB 4A 003A
        gbc.setState(0x1864, 0x4d00, 0xa8c0, 0x4065, 0xb28f, 0xe1de, 0x1, 0x0);
        gbc.writeMem(0x1864, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x4d00, gbc.sp());
        EXPECT(0x1866, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4A 003B
        gbc.setState(0xb583, 0x8049, 0x5090, 0x2ae3, 0xd2fb, 0x6613, 0x0, 0x1);
        gbc.writeMem(0xb583, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x8049, gbc.sp());
        EXPECT(0xb585, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb583));
        EXPECT(0x4a, gbc.readMem(0xb584));
        // CB 4A 003C
        gbc.setState(0x7ca0, 0x191f, 0x7a80, 0x9e0f, 0x8dd5, 0x9b76, 0x0, 0x1);
        gbc.writeMem(0x7ca0, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x191f, gbc.sp());
        EXPECT(0x7ca2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4A 003D
        gbc.setState(0x6701, 0x103a, 0xc500, 0xd12a, 0x6a03, 0xd948, 0x0, 0x1);
        gbc.writeMem(0x6701, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0x103a, gbc.sp());
        EXPECT(0x6703, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4A 003E
        gbc.setState(0x7978, 0xcbf3, 0xf470, 0x65a4, 0x7b85, 0x23ca, 0x0, 0x0);
        gbc.writeMem(0x7978, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0xcbf3, gbc.sp());
        EXPECT(0x797a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4A 0040
        gbc.setState(0xb22a, 0x1782, 0x3f40, 0x6699, 0x785a, 0xf946, 0x0, 0x1);
        gbc.writeMem(0xb22a, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x1782, gbc.sp());
        EXPECT(0xb22c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb22a));
        EXPECT(0x4a, gbc.readMem(0xb22b));
        // CB 4A 0041
        gbc.setState(0xc38d, 0x7a84, 0xa80, 0x5235, 0x2bff, 0x99a0, 0x1, 0x1);
        gbc.writeMem(0xc38d, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x7a84, gbc.sp());
        EXPECT(0xc38f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc38d));
        EXPECT(0x4a, gbc.readMem(0xc38e));
        // CB 4A 0042
        gbc.setState(0x295e, 0xebf5, 0xe1e0, 0xb307, 0x3998, 0x48a4, 0x0, 0x1);
        gbc.writeMem(0x295e, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0xebf5, gbc.sp());
        EXPECT(0x2960, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4A 0043
        gbc.setState(0x7616, 0xe336, 0x8120, 0x8bd1, 0x553, 0x7fef, 0x1, 0x0);
        gbc.writeMem(0x7616, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0xe336, gbc.sp());
        EXPECT(0x7618, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4A 0044
        gbc.setState(0x1999, 0x5f, 0x7230, 0x1dbd, 0xe21c, 0x28ab, 0x0, 0x0);
        gbc.writeMem(0x1999, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x5f, gbc.sp());
        EXPECT(0x199b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4A 0045
        gbc.setState(0x9e0e, 0xea8b, 0x2890, 0x6e1d, 0xe81b, 0xe58b, 0x1, 0x0);
        gbc.writeMem(0x9e0e, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0xea8b, gbc.sp());
        EXPECT(0x9e10, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9e0e));
        EXPECT(0x4a, gbc.readMem(0x9e0f));
        // CB 4A 0046
        gbc.setState(0xdb02, 0xc539, 0x7200, 0x7d2e, 0x8711, 0x10ab, 0x0, 0x0);
        gbc.writeMem(0xdb02, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0xc539, gbc.sp());
        EXPECT(0xdb04, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdb02));
        EXPECT(0x4a, gbc.readMem(0xdb03));
        // CB 4A 0047
        gbc.setState(0xb58a, 0x9081, 0xdf40, 0xa18c, 0x71e3, 0x153, 0x1, 0x1);
        gbc.writeMem(0xb58a, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x9081, gbc.sp());
        EXPECT(0xb58c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb58a));
        EXPECT(0x4a, gbc.readMem(0xb58b));
        // CB 4A 0048
        gbc.setState(0x4321, 0x997e, 0xdab0, 0x7fa6, 0x534a, 0x9299, 0x1, 0x1);
        gbc.writeMem(0x4321, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x997e, gbc.sp());
        EXPECT(0x4323, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4A 0049
        gbc.setState(0xc7b4, 0x1961, 0x45c0, 0x35f4, 0xf834, 0xe146, 0x1, 0x1);
        gbc.writeMem(0xc7b4, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x1961, gbc.sp());
        EXPECT(0xc7b6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc7b4));
        EXPECT(0x4a, gbc.readMem(0xc7b5));
        // CB 4A 004A
        gbc.setState(0x920e, 0xfc73, 0xd590, 0xc370, 0x33f5, 0x209, 0x1, 0x1);
        gbc.writeMem(0x920e, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0xfc73, gbc.sp());
        EXPECT(0x9210, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x920e));
        EXPECT(0x4a, gbc.readMem(0x920f));
        // CB 4A 004B
        gbc.setState(0x80f5, 0x783f, 0x9e70, 0x4acf, 0x9a61, 0xb18c, 0x1, 0x0);
        gbc.writeMem(0x80f5, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x783f, gbc.sp());
        EXPECT(0x80f7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x80f5));
        EXPECT(0x4a, gbc.readMem(0x80f6));
        // CB 4A 004C
        gbc.setState(0x5b5f, 0x9504, 0xe840, 0x37b0, 0x8e37, 0x2074, 0x0, 0x0);
        gbc.writeMem(0x5b5f, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x9504, gbc.sp());
        EXPECT(0x5b61, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4A 004D
        gbc.setState(0x9f87, 0x4fbd, 0x9b80, 0x2e28, 0x9057, 0xed12, 0x1, 0x1);
        gbc.writeMem(0x9f87, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x4fbd, gbc.sp());
        EXPECT(0x9f89, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9f87));
        EXPECT(0x4a, gbc.readMem(0x9f88));
        // CB 4A 004E
        gbc.setState(0x5ddf, 0xae88, 0xc9f0, 0x2d35, 0xad49, 0xd930, 0x0, 0x1);
        gbc.writeMem(0x5ddf, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0xae88, gbc.sp());
        EXPECT(0x5de1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4A 004F
        gbc.setState(0x76a0, 0x5d1e, 0x4680, 0x9721, 0x3b8b, 0x74c1, 0x1, 0x0);
        gbc.writeMem(0x76a0, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x5d1e, gbc.sp());
        EXPECT(0x76a2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4A 0050
        gbc.setState(0xd954, 0x1110, 0x3c70, 0x3e93, 0x75fa, 0x5186, 0x1, 0x1);
        gbc.writeMem(0xd954, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x1110, gbc.sp());
        EXPECT(0xd956, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd954));
        EXPECT(0x4a, gbc.readMem(0xd955));
        // CB 4A 0051
        gbc.setState(0x835b, 0x6589, 0xed10, 0x372c, 0x2d1a, 0x69dc, 0x1, 0x0);
        gbc.writeMem(0x835b, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x6589, gbc.sp());
        EXPECT(0x835d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x835b));
        EXPECT(0x4a, gbc.readMem(0x835c));
        // CB 4A 0052
        gbc.setState(0xba9a, 0xb054, 0x9d60, 0x19e1, 0x87a0, 0xdaf8, 0x0, 0x1);
        gbc.writeMem(0xba9a, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0xb054, gbc.sp());
        EXPECT(0xba9c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xba9a));
        EXPECT(0x4a, gbc.readMem(0xba9b));
        // CB 4A 0053
        gbc.setState(0x6c51, 0x66ac, 0x95c0, 0x8075, 0xd1db, 0x1062, 0x0, 0x1);
        gbc.writeMem(0x6c51, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x66ac, gbc.sp());
        EXPECT(0x6c53, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4A 0054
        gbc.setState(0x5e95, 0xf358, 0x6d0, 0x19e6, 0xb341, 0xf735, 0x1, 0x0);
        gbc.writeMem(0x5e95, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0xf358, gbc.sp());
        EXPECT(0x5e97, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4A 0055
        gbc.setState(0xcb76, 0x2de, 0x9730, 0x74e1, 0x51b5, 0xcd0d, 0x0, 0x1);
        gbc.writeMem(0xcb76, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x2de, gbc.sp());
        EXPECT(0xcb78, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcb76));
        EXPECT(0x4a, gbc.readMem(0xcb77));
        // CB 4A 0056
        gbc.setState(0x7396, 0x1c80, 0xd8e0, 0xe709, 0xbb37, 0x4826, 0x0, 0x0);
        gbc.writeMem(0x7396, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x1c80, gbc.sp());
        EXPECT(0x7398, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4A 0057
        gbc.setState(0x39db, 0xf8bc, 0x12d0, 0x3f21, 0x3499, 0x13c8, 0x0, 0x0);
        gbc.writeMem(0x39db, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0xf8bc, gbc.sp());
        EXPECT(0x39dd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4A 0059
        gbc.setState(0xad4f, 0xd4c6, 0xa870, 0xe2dd, 0x9a48, 0x33a5, 0x1, 0x1);
        gbc.writeMem(0xad4f, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0xd4c6, gbc.sp());
        EXPECT(0xad51, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xad4f));
        EXPECT(0x4a, gbc.readMem(0xad50));
        // CB 4A 005A
        gbc.setState(0xbc2d, 0xba61, 0x75c0, 0x58f4, 0x3a34, 0xf945, 0x1, 0x1);
        gbc.writeMem(0xbc2d, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0xba61, gbc.sp());
        EXPECT(0xbc2f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbc2d));
        EXPECT(0x4a, gbc.readMem(0xbc2e));
        // CB 4A 005B
        gbc.setState(0xc10a, 0x8b31, 0x5e00, 0x3fed, 0xc5fb, 0x7e4c, 0x0, 0x1);
        gbc.writeMem(0xc10a, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x8b31, gbc.sp());
        EXPECT(0xc10c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc10a));
        EXPECT(0x4a, gbc.readMem(0xc10b));
        // CB 4A 005C
        gbc.setState(0xcfe2, 0x101, 0x33f0, 0xf1a8, 0x6b17, 0xcfad, 0x1, 0x1);
        gbc.writeMem(0xcfe2, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x101, gbc.sp());
        EXPECT(0xcfe4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcfe2));
        EXPECT(0x4a, gbc.readMem(0xcfe3));
        // CB 4A 005D
        gbc.setState(0x53e0, 0xd3f5, 0x890, 0xd0e8, 0x5c30, 0x8c77, 0x0, 0x0);
        gbc.writeMem(0x53e0, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0xd3f5, gbc.sp());
        EXPECT(0x53e2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4A 005E
        gbc.setState(0xa572, 0xdcb2, 0x89a0, 0x624c, 0x4ff2, 0x138, 0x1, 0x0);
        gbc.writeMem(0xa572, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0xdcb2, gbc.sp());
        EXPECT(0xa574, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa572));
        EXPECT(0x4a, gbc.readMem(0xa573));
        // CB 4A 005F
        gbc.setState(0x6035, 0xeb51, 0xa160, 0x708a, 0x5722, 0xb05a, 0x1, 0x0);
        gbc.writeMem(0x6035, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0xeb51, gbc.sp());
        EXPECT(0x6037, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4A 0060
        gbc.setState(0xbc7f, 0x6fdb, 0xb7c0, 0x4a47, 0xad2b, 0xe51e, 0x1, 0x1);
        gbc.writeMem(0xbc7f, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x6fdb, gbc.sp());
        EXPECT(0xbc81, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbc7f));
        EXPECT(0x4a, gbc.readMem(0xbc80));
        // CB 4A 0061
        gbc.setState(0x3d80, 0x35c0, 0xa500, 0x133c, 0x15f8, 0xfdbd, 0x0, 0x1);
        gbc.writeMem(0x3d80, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x35c0, gbc.sp());
        EXPECT(0x3d82, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4A 0062
        gbc.setState(0x8209, 0xcb12, 0x91b0, 0xe6c7, 0xa635, 0x6d5d, 0x0, 0x1);
        gbc.writeMem(0x8209, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0xcb12, gbc.sp());
        EXPECT(0x820b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8209));
        EXPECT(0x4a, gbc.readMem(0x820a));
        // CB 4A 0063
        gbc.setState(0x16f7, 0xde87, 0xb5b0, 0xd5f2, 0x3864, 0xa0e4, 0x1, 0x0);
        gbc.writeMem(0x16f7, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0xde87, gbc.sp());
        EXPECT(0x16f9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4A 0065
        gbc.setState(0x53f0, 0x85be, 0xd290, 0xd0b3, 0xf14b, 0x925e, 0x1, 0x0);
        gbc.writeMem(0x53f0, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x85be, gbc.sp());
        EXPECT(0x53f2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4A 0066
        gbc.setState(0x50f1, 0x7eaa, 0x7090, 0xa2c6, 0x51c2, 0x35d3, 0x0, 0x0);
        gbc.writeMem(0x50f1, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x7eaa, gbc.sp());
        EXPECT(0x50f3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4A 0067
        gbc.setState(0x39f, 0x9eb2, 0x1170, 0x1f19, 0x3306, 0x11cb, 0x0, 0x1);
        gbc.writeMem(0x39f, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x9eb2, gbc.sp());
        EXPECT(0x3a1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4A 0068
        gbc.setState(0xd33f, 0x1d8e, 0x5c20, 0xdc1a, 0xb728, 0x4f34, 0x1, 0x0);
        gbc.writeMem(0xd33f, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x1d8e, gbc.sp());
        EXPECT(0xd341, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd33f));
        EXPECT(0x4a, gbc.readMem(0xd340));
        // CB 4A 006A
        gbc.setState(0x3963, 0xb7bd, 0xcfd0, 0xefea, 0x185c, 0x9b2a, 0x0, 0x0);
        gbc.writeMem(0x3963, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0xb7bd, gbc.sp());
        EXPECT(0x3965, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4A 006B
        gbc.setState(0x26b6, 0x512b, 0xc40, 0xa7cc, 0xef68, 0x3e70, 0x0, 0x0);
        gbc.writeMem(0x26b6, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x512b, gbc.sp());
        EXPECT(0x26b8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4A 006C
        gbc.setState(0x73e1, 0xf1a9, 0xb2d0, 0x213d, 0x963d, 0xcdcc, 0x0, 0x0);
        gbc.writeMem(0x73e1, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0xf1a9, gbc.sp());
        EXPECT(0x73e3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4A 006D
        gbc.setState(0x5265, 0x51a0, 0xe010, 0x4301, 0x583, 0x3d0a, 0x0, 0x0);
        gbc.writeMem(0x5265, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x51a0, gbc.sp());
        EXPECT(0x5267, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4A 006E
        gbc.setState(0x8592, 0x44a8, 0x6030, 0x640c, 0x9f8a, 0xc72f, 0x0, 0x0);
        gbc.writeMem(0x8592, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x44a8, gbc.sp());
        EXPECT(0x8594, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8592));
        EXPECT(0x4a, gbc.readMem(0x8593));
        // CB 4A 006F
        gbc.setState(0xbf70, 0x5782, 0xb470, 0x5f02, 0x75a1, 0x82b5, 0x0, 0x1);
        gbc.writeMem(0xbf70, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x5782, gbc.sp());
        EXPECT(0xbf72, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbf70));
        EXPECT(0x4a, gbc.readMem(0xbf71));
        // CB 4A 0070
        gbc.setState(0xde4b, 0xc933, 0xd2c0, 0x84d7, 0x1049, 0xdc9c, 0x0, 0x0);
        gbc.writeMem(0xde4b, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0xc933, gbc.sp());
        EXPECT(0xde4d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xde4b));
        EXPECT(0x4a, gbc.readMem(0xde4c));
        // CB 4A 0071
        gbc.setState(0x203d, 0x435e, 0xbee0, 0x2af5, 0x76ce, 0xc491, 0x1, 0x0);
        gbc.writeMem(0x203d, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x435e, gbc.sp());
        EXPECT(0x203f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4A 0072
        gbc.setState(0x113, 0x32b7, 0xe330, 0x4521, 0x373e, 0x993c, 0x1, 0x1);
        gbc.writeMem(0x113, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x32b7, gbc.sp());
        EXPECT(0x115, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4A 0073
        gbc.setState(0xa30b, 0x35ee, 0xca60, 0xebd1, 0xe504, 0x2fd9, 0x0, 0x0);
        gbc.writeMem(0xa30b, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x35ee, gbc.sp());
        EXPECT(0xa30d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa30b));
        EXPECT(0x4a, gbc.readMem(0xa30c));
        // CB 4A 0074
        gbc.setState(0x2fcd, 0xc25e, 0x6f40, 0xf25, 0x25b1, 0x7d67, 0x1, 0x1);
        gbc.writeMem(0x2fcd, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0xc25e, gbc.sp());
        EXPECT(0x2fcf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4A 0075
        gbc.setState(0xdf99, 0x94e7, 0x5ef0, 0xedd7, 0xcd87, 0xfded, 0x1, 0x0);
        gbc.writeMem(0xdf99, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x94e7, gbc.sp());
        EXPECT(0xdf9b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdf99));
        EXPECT(0x4a, gbc.readMem(0xdf9a));
        // CB 4A 0076
        gbc.setState(0x8de0, 0xc25, 0x1de0, 0xde93, 0x18fe, 0x7f14, 0x1, 0x1);
        gbc.writeMem(0x8de0, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0xc25, gbc.sp());
        EXPECT(0x8de2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8de0));
        EXPECT(0x4a, gbc.readMem(0x8de1));
        // CB 4A 0077
        gbc.setState(0x9a9d, 0xf6f1, 0x32d0, 0x1ccb, 0x2b8a, 0x63be, 0x1, 0x0);
        gbc.writeMem(0x9a9d, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0xf6f1, gbc.sp());
        EXPECT(0x9a9f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9a9d));
        EXPECT(0x4a, gbc.readMem(0x9a9e));
        // CB 4A 0079
        gbc.setState(0x5983, 0xa42c, 0xdbc0, 0x8beb, 0xbbb8, 0xf660, 0x1, 0x0);
        gbc.writeMem(0x5983, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0xa42c, gbc.sp());
        EXPECT(0x5985, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4A 007A
        gbc.setState(0x11c9, 0x9bac, 0x1600, 0x69f7, 0x1682, 0xae4, 0x1, 0x0);
        gbc.writeMem(0x11c9, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x9bac, gbc.sp());
        EXPECT(0x11cb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4A 007C
        gbc.setState(0xbbb1, 0x16b6, 0x61f0, 0xcc60, 0x64a, 0x75a9, 0x1, 0x1);
        gbc.writeMem(0xbbb1, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x16b6, gbc.sp());
        EXPECT(0xbbb3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbbb1));
        EXPECT(0x4a, gbc.readMem(0xbbb2));
        // CB 4A 007D
        gbc.setState(0x608d, 0x7013, 0xeec0, 0x10ca, 0x8b91, 0xf94c, 0x1, 0x1);
        gbc.writeMem(0x608d, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x7013, gbc.sp());
        EXPECT(0x608f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4A 007E
        gbc.setState(0x691b, 0x3ba4, 0x30, 0xeccd, 0x147b, 0xdebc, 0x1, 0x1);
        gbc.writeMem(0x691b, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x3ba4, gbc.sp());
        EXPECT(0x691d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4A 007F
        gbc.setState(0xb614, 0x6f83, 0xffa0, 0xc94, 0xa886, 0x287a, 0x0, 0x1);
        gbc.writeMem(0xb614, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x6f83, gbc.sp());
        EXPECT(0xb616, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb614));
        EXPECT(0x4a, gbc.readMem(0xb615));
        // CB 4A 0080
        gbc.setState(0xce6, 0xa67c, 0xb670, 0xb226, 0xbed8, 0x206f, 0x0, 0x0);
        gbc.writeMem(0xce6, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0xa67c, gbc.sp());
        EXPECT(0xce8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4A 0081
        gbc.setState(0x4a64, 0x2a3a, 0x39a0, 0xdd13, 0x5bf8, 0xccca, 0x0, 0x0);
        gbc.writeMem(0x4a64, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x2a3a, gbc.sp());
        EXPECT(0x4a66, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4A 0082
        gbc.setState(0xa55, 0xda88, 0x6120, 0x2f61, 0x5026, 0xb958, 0x0, 0x1);
        gbc.writeMem(0xa55, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0xda88, gbc.sp());
        EXPECT(0xa57, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4A 0083
        gbc.setState(0x99ba, 0xf2a5, 0xb700, 0x4a19, 0x9503, 0xf797, 0x0, 0x1);
        gbc.writeMem(0x99ba, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0xf2a5, gbc.sp());
        EXPECT(0x99bc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x99ba));
        EXPECT(0x4a, gbc.readMem(0x99bb));
        // CB 4A 0084
        gbc.setState(0xc26a, 0x1653, 0x41b0, 0x22bd, 0x1b4b, 0x7077, 0x1, 0x1);
        gbc.writeMem(0xc26a, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x1653, gbc.sp());
        EXPECT(0xc26c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc26a));
        EXPECT(0x4a, gbc.readMem(0xc26b));
        // CB 4A 0085
        gbc.setState(0x85db, 0xdaac, 0xf090, 0x5834, 0x1df3, 0x531d, 0x1, 0x1);
        gbc.writeMem(0x85db, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0xdaac, gbc.sp());
        EXPECT(0x85dd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x85db));
        EXPECT(0x4a, gbc.readMem(0x85dc));
        // CB 4A 0086
        gbc.setState(0x7fab, 0x502f, 0x9ff0, 0x91ca, 0xf117, 0xa302, 0x0, 0x1);
        gbc.writeMem(0x7fab, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x502f, gbc.sp());
        EXPECT(0x7fad, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4A 0087
        gbc.setState(0x7509, 0x7766, 0xaff0, 0x4f4, 0xe354, 0x408c, 0x0, 0x1);
        gbc.writeMem(0x7509, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x7766, gbc.sp());
        EXPECT(0x750b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4A 0088
        gbc.setState(0x2ca2, 0x87df, 0xd910, 0x7ea5, 0x7fab, 0x5216, 0x1, 0x0);
        gbc.writeMem(0x2ca2, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x87df, gbc.sp());
        EXPECT(0x2ca4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4A 0089
        gbc.setState(0x36de, 0x5e05, 0x54b0, 0x58fb, 0xca77, 0x6199, 0x1, 0x1);
        gbc.writeMem(0x36de, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x5e05, gbc.sp());
        EXPECT(0x36e0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4A 008A
        gbc.setState(0xc4f4, 0x8861, 0xdc00, 0xeb1e, 0x8f4c, 0x463f, 0x1, 0x1);
        gbc.writeMem(0xc4f4, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0x8861, gbc.sp());
        EXPECT(0xc4f6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc4f4));
        EXPECT(0x4a, gbc.readMem(0xc4f5));
        // CB 4A 008B
        gbc.setState(0xb257, 0xa245, 0xc3b0, 0x6cd4, 0x980, 0xad7e, 0x1, 0x1);
        gbc.writeMem(0xb257, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0xa245, gbc.sp());
        EXPECT(0xb259, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb257));
        EXPECT(0x4a, gbc.readMem(0xb258));
        // CB 4A 008C
        gbc.setState(0x7b58, 0xeccd, 0x7db0, 0x8d5d, 0xf6e4, 0xe9c1, 0x1, 0x0);
        gbc.writeMem(0x7b58, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0xeccd, gbc.sp());
        EXPECT(0x7b5a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4A 008D
        gbc.setState(0xe4e1, 0xd61, 0x8dc0, 0x82fa, 0x13ae, 0xdeb9, 0x1, 0x1);
        gbc.writeMem(0xe4e1, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0xd61, gbc.sp());
        EXPECT(0xe4e3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe4e1));
        EXPECT(0x4a, gbc.readMem(0xe4e2));
        // CB 4A 008E
        gbc.setState(0x431, 0xa51a, 0x2020, 0x3aff, 0x161c, 0xa85e, 0x1, 0x1);
        gbc.writeMem(0x431, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0xa51a, gbc.sp());
        EXPECT(0x433, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4A 008F
        gbc.setState(0x7763, 0x27f8, 0xe450, 0x8748, 0x1c0c, 0x38e8, 0x0, 0x1);
        gbc.writeMem(0x7763, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x27f8, gbc.sp());
        EXPECT(0x7765, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4A 0090
        gbc.setState(0x7771, 0x5aa3, 0x3730, 0x16a, 0xa16b, 0x60f5, 0x0, 0x0);
        gbc.writeMem(0x7771, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x5aa3, gbc.sp());
        EXPECT(0x7773, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4A 0091
        gbc.setState(0xe725, 0xc8ed, 0x90a0, 0xf64, 0xceda, 0x8b70, 0x1, 0x1);
        gbc.writeMem(0xe725, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0xc8ed, gbc.sp());
        EXPECT(0xe727, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe725));
        EXPECT(0x4a, gbc.readMem(0xe726));
        // CB 4A 0092
        gbc.setState(0x6fc4, 0x42f1, 0xf860, 0x16db, 0x46cb, 0x258f, 0x1, 0x0);
        gbc.writeMem(0x6fc4, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x42f1, gbc.sp());
        EXPECT(0x6fc6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4A 0093
        gbc.setState(0xbc09, 0xa698, 0x1150, 0xd37d, 0x24ef, 0x3762, 0x1, 0x1);
        gbc.writeMem(0xbc09, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0xa698, gbc.sp());
        EXPECT(0xbc0b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbc09));
        EXPECT(0x4a, gbc.readMem(0xbc0a));
        // CB 4A 0094
        gbc.setState(0xaecb, 0x798c, 0xe4e0, 0xdcb1, 0xaa33, 0xc268, 0x0, 0x1);
        gbc.writeMem(0xaecb, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x798c, gbc.sp());
        EXPECT(0xaecd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaecb));
        EXPECT(0x4a, gbc.readMem(0xaecc));
        // CB 4A 0095
        gbc.setState(0xa3fd, 0x920f, 0x7180, 0x827f, 0xfc92, 0xd705, 0x0, 0x0);
        gbc.writeMem(0xa3fd, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x920f, gbc.sp());
        EXPECT(0xa3ff, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa3fd));
        EXPECT(0x4a, gbc.readMem(0xa3fe));
        // CB 4A 0096
        gbc.setState(0x335, 0x58a0, 0xaa30, 0x9a65, 0x398a, 0xa122, 0x1, 0x0);
        gbc.writeMem(0x335, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x58a0, gbc.sp());
        EXPECT(0x337, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4A 0097
        gbc.setState(0x14d, 0x86be, 0x4d20, 0xcd7b, 0x915, 0x5f6f, 0x1, 0x1);
        gbc.writeMem(0x14d, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x86be, gbc.sp());
        EXPECT(0x14f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4A 0098
        gbc.setState(0x7332, 0xbe69, 0x120, 0xd179, 0x30b7, 0xb395, 0x0, 0x1);
        gbc.writeMem(0x7332, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0xbe69, gbc.sp());
        EXPECT(0x7334, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4A 0099
        gbc.setState(0x99d6, 0x8876, 0x5be0, 0xb1be, 0xedd4, 0x46bd, 0x0, 0x1);
        gbc.writeMem(0x99d6, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x8876, gbc.sp());
        EXPECT(0x99d8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x99d6));
        EXPECT(0x4a, gbc.readMem(0x99d7));
        // CB 4A 009A
        gbc.setState(0x78f5, 0xbe08, 0xeba0, 0x3de8, 0x6212, 0xd7a4, 0x1, 0x1);
        gbc.writeMem(0x78f5, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0xbe08, gbc.sp());
        EXPECT(0x78f7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4A 009B
        gbc.setState(0x508c, 0x487f, 0x5310, 0x9e5, 0x7ba1, 0xa347, 0x0, 0x1);
        gbc.writeMem(0x508c, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x487f, gbc.sp());
        EXPECT(0x508e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4A 009C
        gbc.setState(0x69c8, 0x5da4, 0x8b0, 0x4baf, 0x4517, 0x5764, 0x0, 0x0);
        gbc.writeMem(0x69c8, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x5da4, gbc.sp());
        EXPECT(0x69ca, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4A 009D
        gbc.setState(0xdcd2, 0xb5c0, 0xf9e0, 0x3b86, 0xd14c, 0x44a9, 0x1, 0x1);
        gbc.writeMem(0xdcd2, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0xb5c0, gbc.sp());
        EXPECT(0xdcd4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdcd2));
        EXPECT(0x4a, gbc.readMem(0xdcd3));
        // CB 4A 009E
        gbc.setState(0xc680, 0x43dc, 0xebe0, 0x104a, 0x9f84, 0x26ef, 0x1, 0x0);
        gbc.writeMem(0xc680, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x43dc, gbc.sp());
        EXPECT(0xc682, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc680));
        EXPECT(0x4a, gbc.readMem(0xc681));
        // CB 4A 009F
        gbc.setState(0x738d, 0x29fa, 0x3240, 0xb0cd, 0x14dd, 0x3c9a, 0x0, 0x1);
        gbc.writeMem(0x738d, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x29fa, gbc.sp());
        EXPECT(0x738f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4A 00A0
        gbc.setState(0xdd19, 0xd1f5, 0x8550, 0xf047, 0x565e, 0xef1c, 0x1, 0x1);
        gbc.writeMem(0xdd19, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0xd1f5, gbc.sp());
        EXPECT(0xdd1b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdd19));
        EXPECT(0x4a, gbc.readMem(0xdd1a));
        // CB 4A 00A1
        gbc.setState(0x980a, 0xf21b, 0x1fd0, 0xd7d, 0xc9d4, 0x838b, 0x0, 0x1);
        gbc.writeMem(0x980a, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0xf21b, gbc.sp());
        EXPECT(0x980c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x980a));
        EXPECT(0x4a, gbc.readMem(0x980b));
        // CB 4A 00A2
        gbc.setState(0xd66b, 0xa579, 0xdd20, 0x4f59, 0x1b9b, 0xd539, 0x0, 0x1);
        gbc.writeMem(0xd66b, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0xa579, gbc.sp());
        EXPECT(0xd66d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd66b));
        EXPECT(0x4a, gbc.readMem(0xd66c));
        // CB 4A 00A3
        gbc.setState(0x36a5, 0x3331, 0x8180, 0x6dc4, 0xd4ba, 0xe185, 0x1, 0x0);
        gbc.writeMem(0x36a5, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x3331, gbc.sp());
        EXPECT(0x36a7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4A 00A4
        gbc.setState(0xb6b6, 0x81c1, 0xfde0, 0xcf7d, 0x480d, 0xbba7, 0x0, 0x0);
        gbc.writeMem(0xb6b6, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x81c1, gbc.sp());
        EXPECT(0xb6b8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb6b6));
        EXPECT(0x4a, gbc.readMem(0xb6b7));
        // CB 4A 00A5
        gbc.setState(0x2ce0, 0xc47c, 0xa250, 0xea68, 0xf793, 0xf187, 0x1, 0x1);
        gbc.writeMem(0x2ce0, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0xc47c, gbc.sp());
        EXPECT(0x2ce2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4A 00A6
        gbc.setState(0x5fde, 0x69e, 0xeac0, 0x92b, 0xf6d2, 0x30b5, 0x1, 0x1);
        gbc.writeMem(0x5fde, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x69e, gbc.sp());
        EXPECT(0x5fe0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4A 00A7
        gbc.setState(0xe51, 0x5b5a, 0x4ac0, 0x2aa4, 0x9807, 0x3980, 0x0, 0x1);
        gbc.writeMem(0xe51, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x5b5a, gbc.sp());
        EXPECT(0xe53, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4A 00A9
        gbc.setState(0xd6f7, 0xdf2c, 0x8b00, 0xb136, 0xf61f, 0xce6e, 0x0, 0x1);
        gbc.writeMem(0xd6f7, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0xdf2c, gbc.sp());
        EXPECT(0xd6f9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd6f7));
        EXPECT(0x4a, gbc.readMem(0xd6f8));
        // CB 4A 00AB
        gbc.setState(0xdbf2, 0x6d64, 0xdd30, 0x8af1, 0xbb3f, 0xf5de, 0x0, 0x1);
        gbc.writeMem(0xdbf2, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x6d64, gbc.sp());
        EXPECT(0xdbf4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdbf2));
        EXPECT(0x4a, gbc.readMem(0xdbf3));
        // CB 4A 00AC
        gbc.setState(0xde0e, 0x1729, 0x3e30, 0x8366, 0xbd9e, 0x3afd, 0x0, 0x1);
        gbc.writeMem(0xde0e, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x1729, gbc.sp());
        EXPECT(0xde10, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xde0e));
        EXPECT(0x4a, gbc.readMem(0xde0f));
        // CB 4A 00AD
        gbc.setState(0x9b9e, 0x913d, 0x4590, 0x58ef, 0x2367, 0x28f2, 0x1, 0x1);
        gbc.writeMem(0x9b9e, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x913d, gbc.sp());
        EXPECT(0x9ba0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9b9e));
        EXPECT(0x4a, gbc.readMem(0x9b9f));
        // CB 4A 00AE
        gbc.setState(0x11bf, 0xf41, 0x4e50, 0x46c5, 0x6d11, 0xd2e5, 0x0, 0x1);
        gbc.writeMem(0x11bf, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0xf41, gbc.sp());
        EXPECT(0x11c1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4A 00AF
        gbc.setState(0x98a2, 0x179f, 0x3d90, 0xcd6e, 0x9d44, 0x97ba, 0x0, 0x1);
        gbc.writeMem(0x98a2, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0x179f, gbc.sp());
        EXPECT(0x98a4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x98a2));
        EXPECT(0x4a, gbc.readMem(0x98a3));
        // CB 4A 00B0
        gbc.setState(0xc8a4, 0xfc6d, 0x48b0, 0xeeab, 0xcd96, 0x9054, 0x1, 0x1);
        gbc.writeMem(0xc8a4, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0xfc6d, gbc.sp());
        EXPECT(0xc8a6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc8a4));
        EXPECT(0x4a, gbc.readMem(0xc8a5));
        // CB 4A 00B1
        gbc.setState(0x4dfc, 0x54bc, 0xcc20, 0x70c1, 0x4f35, 0xd172, 0x1, 0x0);
        gbc.writeMem(0x4dfc, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x54bc, gbc.sp());
        EXPECT(0x4dfe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4A 00B2
        gbc.setState(0xb6f3, 0xcf6d, 0x84e0, 0xc94f, 0x5eab, 0x5cc7, 0x0, 0x0);
        gbc.writeMem(0xb6f3, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0xcf6d, gbc.sp());
        EXPECT(0xb6f5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb6f3));
        EXPECT(0x4a, gbc.readMem(0xb6f4));
        // CB 4A 00B3
        gbc.setState(0x40ff, 0xa66b, 0xde30, 0x6352, 0x359c, 0x1526, 0x1, 0x0);
        gbc.writeMem(0x40ff, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0xa66b, gbc.sp());
        EXPECT(0x4101, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4A 00B4
        gbc.setState(0xe426, 0x7ea1, 0x8260, 0x52bd, 0x5733, 0x38fb, 0x1, 0x0);
        gbc.writeMem(0xe426, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x7ea1, gbc.sp());
        EXPECT(0xe428, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe426));
        EXPECT(0x4a, gbc.readMem(0xe427));
        // CB 4A 00B5
        gbc.setState(0x205d, 0x9c96, 0x9b0, 0x8324, 0x1d4a, 0x531d, 0x0, 0x0);
        gbc.writeMem(0x205d, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x9c96, gbc.sp());
        EXPECT(0x205f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4A 00B6
        gbc.setState(0xba19, 0xc730, 0xba0, 0xb3af, 0x7236, 0x7e42, 0x1, 0x0);
        gbc.writeMem(0xba19, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0xc730, gbc.sp());
        EXPECT(0xba1b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xba19));
        EXPECT(0x4a, gbc.readMem(0xba1a));
        // CB 4A 00B7
        gbc.setState(0x2bf6, 0xe24, 0xf7e0, 0xc215, 0x7be1, 0xefb, 0x0, 0x1);
        gbc.writeMem(0x2bf6, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0xe24, gbc.sp());
        EXPECT(0x2bf8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4A 00B8
        gbc.setState(0x5486, 0x865f, 0xd820, 0xaaef, 0x3f95, 0xa5b8, 0x0, 0x0);
        gbc.writeMem(0x5486, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x865f, gbc.sp());
        EXPECT(0x5488, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4A 00B9
        gbc.setState(0x384f, 0x7b7d, 0x9db0, 0x9fbd, 0x44b4, 0xfb04, 0x0, 0x1);
        gbc.writeMem(0x384f, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x7b7d, gbc.sp());
        EXPECT(0x3851, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4A 00BA
        gbc.setState(0xe8de, 0x5a8, 0x7df0, 0xc61e, 0xc139, 0x51f4, 0x1, 0x1);
        gbc.writeMem(0xe8de, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x5a8, gbc.sp());
        EXPECT(0xe8e0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe8de));
        EXPECT(0x4a, gbc.readMem(0xe8df));
        // CB 4A 00BB
        gbc.setState(0x10d9, 0x4998, 0x690, 0x84ee, 0xdbd3, 0x3f5b, 0x1, 0x1);
        gbc.writeMem(0x10d9, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x4998, gbc.sp());
        EXPECT(0x10db, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4A 00BC
        gbc.setState(0x1bd, 0x843, 0xc1b0, 0x3f82, 0x96a8, 0xf741, 0x1, 0x1);
        gbc.writeMem(0x1bd, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x843, gbc.sp());
        EXPECT(0x1bf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4A 00BD
        gbc.setState(0xde74, 0x1921, 0xc70, 0x3a8b, 0x61ec, 0x7a21, 0x1, 0x1);
        gbc.writeMem(0xde74, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x1921, gbc.sp());
        EXPECT(0xde76, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xde74));
        EXPECT(0x4a, gbc.readMem(0xde75));
        // CB 4A 00BE
        gbc.setState(0xd173, 0xcbba, 0x15f0, 0x2a83, 0x6238, 0xc086, 0x0, 0x0);
        gbc.writeMem(0xd173, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0xcbba, gbc.sp());
        EXPECT(0xd175, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd173));
        EXPECT(0x4a, gbc.readMem(0xd174));
        // CB 4A 00BF
        gbc.setState(0xe492, 0x6cf1, 0x5030, 0x24bf, 0x183, 0xff71, 0x0, 0x1);
        gbc.writeMem(0xe492, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x6cf1, gbc.sp());
        EXPECT(0xe494, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe492));
        EXPECT(0x4a, gbc.readMem(0xe493));
        // CB 4A 00C0
        gbc.setState(0x1474, 0x4a64, 0xa0a0, 0xd382, 0x7473, 0x618e, 0x1, 0x1);
        gbc.writeMem(0x1474, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x4a64, gbc.sp());
        EXPECT(0x1476, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4A 00C1
        gbc.setState(0x906e, 0x2882, 0xad00, 0x2ffd, 0xfe7e, 0xe195, 0x0, 0x1);
        gbc.writeMem(0x906e, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x2882, gbc.sp());
        EXPECT(0x9070, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x906e));
        EXPECT(0x4a, gbc.readMem(0x906f));
        // CB 4A 00C2
        gbc.setState(0xb98e, 0x5ec4, 0xa6a0, 0xcaba, 0xd5f6, 0x18e1, 0x0, 0x1);
        gbc.writeMem(0xb98e, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0x5ec4, gbc.sp());
        EXPECT(0xb990, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb98e));
        EXPECT(0x4a, gbc.readMem(0xb98f));
        // CB 4A 00C3
        gbc.setState(0xbd84, 0xa55c, 0x8230, 0x9707, 0x9ece, 0xfbdf, 0x0, 0x1);
        gbc.writeMem(0xbd84, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0xa55c, gbc.sp());
        EXPECT(0xbd86, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbd84));
        EXPECT(0x4a, gbc.readMem(0xbd85));
        // CB 4A 00C4
        gbc.setState(0x284e, 0x7e1, 0xecd0, 0x8854, 0xe7a7, 0xe2ea, 0x0, 0x0);
        gbc.writeMem(0x284e, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x7e1, gbc.sp());
        EXPECT(0x2850, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4A 00C5
        gbc.setState(0x6396, 0xd90f, 0x6be0, 0xedb8, 0x65d3, 0x84e7, 0x1, 0x0);
        gbc.writeMem(0x6396, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0xd90f, gbc.sp());
        EXPECT(0x6398, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4A 00C6
        gbc.setState(0x1750, 0xe606, 0xe720, 0xe79d, 0x8cb3, 0xc6c7, 0x0, 0x1);
        gbc.writeMem(0x1750, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0xe606, gbc.sp());
        EXPECT(0x1752, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4A 00C8
        gbc.setState(0x9593, 0xbbad, 0x91f0, 0xd5d5, 0x4019, 0xab52, 0x1, 0x1);
        gbc.writeMem(0x9593, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0xbbad, gbc.sp());
        EXPECT(0x9595, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9593));
        EXPECT(0x4a, gbc.readMem(0x9594));
        // CB 4A 00C9
        gbc.setState(0xdde3, 0x56a7, 0xe7f0, 0xdd93, 0x868b, 0x6c99, 0x0, 0x1);
        gbc.writeMem(0xdde3, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x56a7, gbc.sp());
        EXPECT(0xdde5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdde3));
        EXPECT(0x4a, gbc.readMem(0xdde4));
        // CB 4A 00CA
        gbc.setState(0xb359, 0x367d, 0xb650, 0xeb92, 0x112e, 0x19ca, 0x0, 0x1);
        gbc.writeMem(0xb359, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x367d, gbc.sp());
        EXPECT(0xb35b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb359));
        EXPECT(0x4a, gbc.readMem(0xb35a));
        // CB 4A 00CB
        gbc.setState(0xbf86, 0xab23, 0x3290, 0xb6da, 0xa11c, 0x50e, 0x1, 0x0);
        gbc.writeMem(0xbf86, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0xab23, gbc.sp());
        EXPECT(0xbf88, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbf86));
        EXPECT(0x4a, gbc.readMem(0xbf87));
        // CB 4A 00CC
        gbc.setState(0x4acc, 0x12df, 0x57d0, 0x760c, 0x88cc, 0xaca3, 0x1, 0x0);
        gbc.writeMem(0x4acc, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0x12df, gbc.sp());
        EXPECT(0x4ace, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4A 00CD
        gbc.setState(0x133c, 0x1544, 0x21d0, 0x6ebf, 0xa317, 0xe6f2, 0x0, 0x0);
        gbc.writeMem(0x133c, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x1544, gbc.sp());
        EXPECT(0x133e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4A 00CE
        gbc.setState(0x7c91, 0x91a3, 0xbd10, 0x71ea, 0x5f40, 0xedc4, 0x0, 0x1);
        gbc.writeMem(0x7c91, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x91a3, gbc.sp());
        EXPECT(0x7c93, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4A 00CF
        gbc.setState(0x406, 0x5c07, 0x2420, 0x2f4b, 0x5b5f, 0x7ac5, 0x1, 0x0);
        gbc.writeMem(0x406, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x5c07, gbc.sp());
        EXPECT(0x408, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4A 00D0
        gbc.setState(0x2b9e, 0x44eb, 0xd830, 0x1edb, 0xc83c, 0xace3, 0x1, 0x1);
        gbc.writeMem(0x2b9e, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x44eb, gbc.sp());
        EXPECT(0x2ba0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4A 00D1
        gbc.setState(0x7794, 0xe2cb, 0x3560, 0x213f, 0x8c7e, 0xccd7, 0x0, 0x1);
        gbc.writeMem(0x7794, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0xe2cb, gbc.sp());
        EXPECT(0x7796, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4A 00D2
        gbc.setState(0x7a05, 0xf490, 0x83f0, 0xa953, 0x4387, 0xd130, 0x0, 0x0);
        gbc.writeMem(0x7a05, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0xf490, gbc.sp());
        EXPECT(0x7a07, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4A 00D3
        gbc.setState(0xa67c, 0xb59, 0xd460, 0xf964, 0x14ab, 0x6a9c, 0x0, 0x1);
        gbc.writeMem(0xa67c, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0xb59, gbc.sp());
        EXPECT(0xa67e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa67c));
        EXPECT(0x4a, gbc.readMem(0xa67d));
        // CB 4A 00D4
        gbc.setState(0x8c72, 0x5677, 0x1d60, 0x378f, 0xebe7, 0x209e, 0x1, 0x0);
        gbc.writeMem(0x8c72, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x5677, gbc.sp());
        EXPECT(0x8c74, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8c72));
        EXPECT(0x4a, gbc.readMem(0x8c73));
        // CB 4A 00D5
        gbc.setState(0x13a9, 0x288d, 0x4520, 0x41ce, 0x9088, 0x94a4, 0x0, 0x0);
        gbc.writeMem(0x13a9, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x288d, gbc.sp());
        EXPECT(0x13ab, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4A 00D6
        gbc.setState(0x43f2, 0x17ac, 0xc350, 0x3d04, 0x6229, 0xd8f6, 0x0, 0x0);
        gbc.writeMem(0x43f2, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x17ac, gbc.sp());
        EXPECT(0x43f4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4A 00D7
        gbc.setState(0x638b, 0x4410, 0x6470, 0xd3d6, 0xeb0b, 0x1743, 0x1, 0x0);
        gbc.writeMem(0x638b, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x4410, gbc.sp());
        EXPECT(0x638d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4A 00D8
        gbc.setState(0xddad, 0x629b, 0x6e90, 0xa66b, 0x20f1, 0x6823, 0x0, 0x0);
        gbc.writeMem(0xddad, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x629b, gbc.sp());
        EXPECT(0xddaf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xddad));
        EXPECT(0x4a, gbc.readMem(0xddae));
        // CB 4A 00D9
        gbc.setState(0x4a1c, 0x264e, 0xf4e0, 0x9259, 0x3c82, 0x39c4, 0x0, 0x0);
        gbc.writeMem(0x4a1c, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x264e, gbc.sp());
        EXPECT(0x4a1e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4A 00DB
        gbc.setState(0xaf4e, 0x4301, 0x1a0, 0x48e4, 0x1f86, 0x2c1, 0x0, 0x0);
        gbc.writeMem(0xaf4e, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x4301, gbc.sp());
        EXPECT(0xaf50, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaf4e));
        EXPECT(0x4a, gbc.readMem(0xaf4f));
        // CB 4A 00DC
        gbc.setState(0x6dfc, 0xa152, 0xd560, 0xf404, 0xd6cd, 0xed4d, 0x0, 0x1);
        gbc.writeMem(0x6dfc, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0xa152, gbc.sp());
        EXPECT(0x6dfe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4A 00DD
        gbc.setState(0x799e, 0x1a87, 0xa600, 0xb2ab, 0x7a8e, 0x5de5, 0x1, 0x0);
        gbc.writeMem(0x799e, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x1a87, gbc.sp());
        EXPECT(0x79a0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4A 00DE
        gbc.setState(0x9fe0, 0xa34b, 0xcd20, 0x91b2, 0x7ee0, 0x10e7, 0x1, 0x0);
        gbc.writeMem(0x9fe0, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0xa34b, gbc.sp());
        EXPECT(0x9fe2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9fe0));
        EXPECT(0x4a, gbc.readMem(0x9fe1));
        // CB 4A 00DF
        gbc.setState(0xdaef, 0x80b6, 0x51e0, 0x7c1d, 0x91d4, 0x5560, 0x0, 0x1);
        gbc.writeMem(0xdaef, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x80b6, gbc.sp());
        EXPECT(0xdaf1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdaef));
        EXPECT(0x4a, gbc.readMem(0xdaf0));
        // CB 4A 00E0
        gbc.setState(0x3fda, 0xc194, 0xc560, 0xe3f9, 0xce7d, 0x6cb9, 0x1, 0x1);
        gbc.writeMem(0x3fda, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0xc194, gbc.sp());
        EXPECT(0x3fdc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4A 00E1
        gbc.setState(0x8ec9, 0x5b66, 0x4910, 0xa3e5, 0x441c, 0x5, 0x1, 0x0);
        gbc.writeMem(0x8ec9, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x5b66, gbc.sp());
        EXPECT(0x8ecb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8ec9));
        EXPECT(0x4a, gbc.readMem(0x8eca));
        // CB 4A 00E2
        gbc.setState(0xeb27, 0x4a69, 0xeb10, 0x208a, 0xc8f0, 0xcf09, 0x0, 0x0);
        gbc.writeMem(0xeb27, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x4a69, gbc.sp());
        EXPECT(0xeb29, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeb27));
        EXPECT(0x4a, gbc.readMem(0xeb28));
        // CB 4A 00E3
        gbc.setState(0x675c, 0x868d, 0xae0, 0x85, 0x497b, 0x918e, 0x0, 0x0);
        gbc.writeMem(0x675c, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x868d, gbc.sp());
        EXPECT(0x675e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4A 00E4
        gbc.setState(0xb09, 0xafd6, 0x5950, 0xc7c4, 0xeada, 0x4821, 0x0, 0x0);
        gbc.writeMem(0xb09, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0xafd6, gbc.sp());
        EXPECT(0xb0b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4A 00E5
        gbc.setState(0xc2ce, 0x1e3b, 0x8030, 0x5fcd, 0xe075, 0xddbe, 0x0, 0x0);
        gbc.writeMem(0xc2ce, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0x1e3b, gbc.sp());
        EXPECT(0xc2d0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc2ce));
        EXPECT(0x4a, gbc.readMem(0xc2cf));
        // CB 4A 00E7
        gbc.setState(0xd3fe, 0x833d, 0xeb0, 0x5ca9, 0x4f69, 0x8fb4, 0x0, 0x0);
        gbc.writeMem(0xd3fe, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x833d, gbc.sp());
        EXPECT(0xd400, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd3fe));
        EXPECT(0x4a, gbc.readMem(0xd3ff));
        // CB 4A 00E8
        gbc.setState(0xd315, 0xf989, 0x77a0, 0x7a01, 0xfc79, 0x3223, 0x0, 0x0);
        gbc.writeMem(0xd315, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0xf989, gbc.sp());
        EXPECT(0xd317, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd315));
        EXPECT(0x4a, gbc.readMem(0xd316));
        // CB 4A 00E9
        gbc.setState(0xda22, 0x6100, 0xaab0, 0x2317, 0xc257, 0x9b32, 0x0, 0x0);
        gbc.writeMem(0xda22, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x6100, gbc.sp());
        EXPECT(0xda24, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xda22));
        EXPECT(0x4a, gbc.readMem(0xda23));
        // CB 4A 00EA
        gbc.setState(0x587b, 0xee67, 0x68c0, 0xf67b, 0x953c, 0x4822, 0x0, 0x0);
        gbc.writeMem(0x587b, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0xee67, gbc.sp());
        EXPECT(0x587d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4A 00EB
        gbc.setState(0xee23, 0x2c7a, 0x25c0, 0x416a, 0x5ec2, 0xfb0d, 0x1, 0x1);
        gbc.writeMem(0xee23, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x2c7a, gbc.sp());
        EXPECT(0xee25, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xee23));
        EXPECT(0x4a, gbc.readMem(0xee24));
        // CB 4A 00EC
        gbc.setState(0xb7b2, 0xb833, 0xa100, 0xfcdd, 0x70a, 0x32a7, 0x1, 0x1);
        gbc.writeMem(0xb7b2, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0xb833, gbc.sp());
        EXPECT(0xb7b4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb7b2));
        EXPECT(0x4a, gbc.readMem(0xb7b3));
        // CB 4A 00ED
        gbc.setState(0xd511, 0xc1b7, 0x24f0, 0x3ad1, 0x70d2, 0x9706, 0x1, 0x1);
        gbc.writeMem(0xd511, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0xc1b7, gbc.sp());
        EXPECT(0xd513, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd511));
        EXPECT(0x4a, gbc.readMem(0xd512));
        // CB 4A 00EE
        gbc.setState(0x38ff, 0x62dc, 0x65c0, 0xf3e7, 0x4669, 0xbc44, 0x1, 0x1);
        gbc.writeMem(0x38ff, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x62dc, gbc.sp());
        EXPECT(0x3901, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4A 00EF
        gbc.setState(0xb3f, 0xb07d, 0xd390, 0x2a8f, 0x65b2, 0x93fc, 0x1, 0x0);
        gbc.writeMem(0xb3f, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0xb07d, gbc.sp());
        EXPECT(0xb41, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4A 00F0
        gbc.setState(0x379e, 0xdb6c, 0x7290, 0x848e, 0xd209, 0xcafe, 0x1, 0x1);
        gbc.writeMem(0x379e, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0xdb6c, gbc.sp());
        EXPECT(0x37a0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4A 00F1
        gbc.setState(0x1f47, 0xc68a, 0x360, 0x98bb, 0xcb62, 0xd6eb, 0x1, 0x0);
        gbc.writeMem(0x1f47, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0xc68a, gbc.sp());
        EXPECT(0x1f49, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4A 00F2
        gbc.setState(0x9ed3, 0x402d, 0xe30, 0x4c37, 0x2df6, 0x538, 0x0, 0x1);
        gbc.writeMem(0x9ed3, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x402d, gbc.sp());
        EXPECT(0x9ed5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9ed3));
        EXPECT(0x4a, gbc.readMem(0x9ed4));
        // CB 4A 00F3
        gbc.setState(0x3a55, 0x65de, 0x5a10, 0xf653, 0x688d, 0xdf54, 0x1, 0x1);
        gbc.writeMem(0x3a55, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x65de, gbc.sp());
        EXPECT(0x3a57, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4A 00F4
        gbc.setState(0xe88d, 0x9a3f, 0xd830, 0x9a79, 0xcdab, 0x6ff2, 0x0, 0x0);
        gbc.writeMem(0xe88d, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x9a3f, gbc.sp());
        EXPECT(0xe88f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe88d));
        EXPECT(0x4a, gbc.readMem(0xe88e));
        // CB 4A 00F5
        gbc.setState(0x180c, 0xfaf, 0x2f00, 0x9ff9, 0x83b9, 0x4f07, 0x0, 0x1);
        gbc.writeMem(0x180c, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0xfaf, gbc.sp());
        EXPECT(0x180e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4A 00F6
        gbc.setState(0x9ab0, 0x1144, 0xb040, 0x2e0e, 0x9493, 0xc8e1, 0x0, 0x1);
        gbc.writeMem(0x9ab0, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0x1144, gbc.sp());
        EXPECT(0x9ab2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9ab0));
        EXPECT(0x4a, gbc.readMem(0x9ab1));
        // CB 4A 00F7
        gbc.setState(0xa02a, 0x608b, 0xab10, 0x5124, 0x2566, 0x9c82, 0x0, 0x0);
        gbc.writeMem(0xa02a, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x608b, gbc.sp());
        EXPECT(0xa02c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa02a));
        EXPECT(0x4a, gbc.readMem(0xa02b));
        // CB 4A 00F8
        gbc.setState(0xa11b, 0x159e, 0x69c0, 0xa3ea, 0x2cfb, 0x5ecc, 0x1, 0x0);
        gbc.writeMem(0xa11b, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x159e, gbc.sp());
        EXPECT(0xa11d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa11b));
        EXPECT(0x4a, gbc.readMem(0xa11c));
        // CB 4A 00F9
        gbc.setState(0x611, 0xf10f, 0x3280, 0x4628, 0x1ce9, 0x2719, 0x0, 0x1);
        gbc.writeMem(0x611, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0xf10f, gbc.sp());
        EXPECT(0x613, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4A 00FA
        gbc.setState(0x5f4c, 0x290d, 0xfe50, 0x8925, 0xae7c, 0x50c2, 0x1, 0x1);
        gbc.writeMem(0x5f4c, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x290d, gbc.sp());
        EXPECT(0x5f4e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4A 00FB
        gbc.setState(0x5792, 0x92f2, 0xc710, 0xea95, 0x4091, 0x6c10, 0x0, 0x0);
        gbc.writeMem(0x5792, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x92f2, gbc.sp());
        EXPECT(0x5794, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4A 00FC
        gbc.setState(0x3235, 0xdf2f, 0x8a20, 0x76eb, 0x6778, 0x8514, 0x1, 0x1);
        gbc.writeMem(0x3235, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0xdf2f, gbc.sp());
        EXPECT(0x3237, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4A 00FD
        gbc.setState(0x9912, 0xc417, 0x6e30, 0x4de7, 0x9327, 0x22e8, 0x1, 0x0);
        gbc.writeMem(0x9912, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0xc417, gbc.sp());
        EXPECT(0x9914, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9912));
        EXPECT(0x4a, gbc.readMem(0x9913));
        // CB 4A 00FE
        gbc.setState(0x6e06, 0xfe4, 0x8250, 0x4188, 0xb987, 0x8bba, 0x0, 0x0);
        gbc.writeMem(0x6e06, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0xfe4, gbc.sp());
        EXPECT(0x6e08, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4A 0100
        gbc.setState(0x3ecb, 0x84b5, 0xa10, 0xff6a, 0xd86, 0xc8bf, 0x1, 0x0);
        gbc.writeMem(0x3ecb, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x84b5, gbc.sp());
        EXPECT(0x3ecd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4A 0101
        gbc.setState(0xd600, 0x38c5, 0x21d0, 0xb8c5, 0x1dbc, 0xf5f1, 0x0, 0x1);
        gbc.writeMem(0xd600, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x38c5, gbc.sp());
        EXPECT(0xd602, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd600));
        EXPECT(0x4a, gbc.readMem(0xd601));
        // CB 4A 0102
        gbc.setState(0xa6ee, 0xdda5, 0xa960, 0x7d31, 0xcd13, 0xd524, 0x0, 0x0);
        gbc.writeMem(0xa6ee, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0xdda5, gbc.sp());
        EXPECT(0xa6f0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa6ee));
        EXPECT(0x4a, gbc.readMem(0xa6ef));
        // CB 4A 0104
        gbc.setState(0x2647, 0xbc7a, 0x3980, 0x1f68, 0xa0cf, 0xa9c9, 0x1, 0x0);
        gbc.writeMem(0x2647, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0xbc7a, gbc.sp());
        EXPECT(0x2649, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4A 0105
        gbc.setState(0x6d68, 0x232f, 0x90a0, 0xb3a4, 0x3bd1, 0xa669, 0x0, 0x0);
        gbc.writeMem(0x6d68, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0x232f, gbc.sp());
        EXPECT(0x6d6a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4A 0106
        gbc.setState(0xc555, 0x307, 0x5c40, 0x4db9, 0xd83e, 0x2fe9, 0x0, 0x1);
        gbc.writeMem(0xc555, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x307, gbc.sp());
        EXPECT(0xc557, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc555));
        EXPECT(0x4a, gbc.readMem(0xc556));
        // CB 4A 0107
        gbc.setState(0x140e, 0x17a8, 0x7c70, 0xaafc, 0x5954, 0xeba2, 0x1, 0x0);
        gbc.writeMem(0x140e, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x17a8, gbc.sp());
        EXPECT(0x1410, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4A 0108
        gbc.setState(0xa842, 0x51e7, 0xdae0, 0xfea1, 0xb8a4, 0x3ce9, 0x0, 0x0);
        gbc.writeMem(0xa842, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x51e7, gbc.sp());
        EXPECT(0xa844, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa842));
        EXPECT(0x4a, gbc.readMem(0xa843));
        // CB 4A 0109
        gbc.setState(0x8e1e, 0xcc7a, 0x3780, 0x3c06, 0xd02c, 0x57f5, 0x0, 0x1);
        gbc.writeMem(0x8e1e, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0xcc7a, gbc.sp());
        EXPECT(0x8e20, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8e1e));
        EXPECT(0x4a, gbc.readMem(0x8e1f));
        // CB 4A 010A
        gbc.setState(0xc51d, 0xdf69, 0x8660, 0x14f5, 0xf5fe, 0xe3d4, 0x1, 0x0);
        gbc.writeMem(0xc51d, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0xdf69, gbc.sp());
        EXPECT(0xc51f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc51d));
        EXPECT(0x4a, gbc.readMem(0xc51e));
        // CB 4A 010B
        gbc.setState(0x3bd4, 0xae74, 0xa5c0, 0x117a, 0x9915, 0x5ee7, 0x0, 0x1);
        gbc.writeMem(0x3bd4, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0xae74, gbc.sp());
        EXPECT(0x3bd6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4A 010C
        gbc.setState(0x39bf, 0x7bf2, 0xdeb0, 0x4cd1, 0x46c2, 0x9cac, 0x1, 0x0);
        gbc.writeMem(0x39bf, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x7bf2, gbc.sp());
        EXPECT(0x39c1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4A 010D
        gbc.setState(0x5275, 0xf69f, 0x9f60, 0x493d, 0x4428, 0x8d97, 0x1, 0x0);
        gbc.writeMem(0x5275, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0xf69f, gbc.sp());
        EXPECT(0x5277, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4A 010F
        gbc.setState(0xe32d, 0x8809, 0x9950, 0x752c, 0x4b26, 0xb4a4, 0x0, 0x0);
        gbc.writeMem(0xe32d, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x8809, gbc.sp());
        EXPECT(0xe32f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe32d));
        EXPECT(0x4a, gbc.readMem(0xe32e));
        // CB 4A 0110
        gbc.setState(0x9d55, 0x57cc, 0x9690, 0x2b7d, 0xee20, 0x54c2, 0x1, 0x1);
        gbc.writeMem(0x9d55, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x57cc, gbc.sp());
        EXPECT(0x9d57, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9d55));
        EXPECT(0x4a, gbc.readMem(0x9d56));
        // CB 4A 0111
        gbc.setState(0x429c, 0x3da4, 0x59b0, 0x273e, 0x2984, 0xdf92, 0x1, 0x0);
        gbc.writeMem(0x429c, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x3da4, gbc.sp());
        EXPECT(0x429e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4A 0112
        gbc.setState(0x3804, 0x3f4, 0xea70, 0x6af9, 0x2e9, 0xd157, 0x0, 0x1);
        gbc.writeMem(0x3804, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x3f4, gbc.sp());
        EXPECT(0x3806, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4A 0113
        gbc.setState(0x8d7c, 0x25fb, 0xb20, 0x9bdc, 0x5fb9, 0xc423, 0x0, 0x1);
        gbc.writeMem(0x8d7c, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x25fb, gbc.sp());
        EXPECT(0x8d7e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8d7c));
        EXPECT(0x4a, gbc.readMem(0x8d7d));
        // CB 4A 0114
        gbc.setState(0xbef, 0xd06a, 0x6e70, 0x5abd, 0x2906, 0x170d, 0x0, 0x0);
        gbc.writeMem(0xbef, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0xd06a, gbc.sp());
        EXPECT(0xbf1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4A 0115
        gbc.setState(0xa3a1, 0x3eb3, 0x84a0, 0xd824, 0xeb33, 0x7de5, 0x0, 0x0);
        gbc.writeMem(0xa3a1, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x3eb3, gbc.sp());
        EXPECT(0xa3a3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa3a1));
        EXPECT(0x4a, gbc.readMem(0xa3a2));
        // CB 4A 0116
        gbc.setState(0x543d, 0x111d, 0xf6a0, 0xce27, 0x54bc, 0xc64a, 0x0, 0x1);
        gbc.writeMem(0x543d, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x111d, gbc.sp());
        EXPECT(0x543f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4A 0117
        gbc.setState(0xb11d, 0xc4d, 0xad30, 0x5481, 0xa5a0, 0x4058, 0x1, 0x0);
        gbc.writeMem(0xb11d, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0xc4d, gbc.sp());
        EXPECT(0xb11f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb11d));
        EXPECT(0x4a, gbc.readMem(0xb11e));
        // CB 4A 0118
        gbc.setState(0x7b1, 0xdd7c, 0xce00, 0xa9ee, 0xc85b, 0x22f0, 0x1, 0x0);
        gbc.writeMem(0x7b1, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0xdd7c, gbc.sp());
        EXPECT(0x7b3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4A 0119
        gbc.setState(0xcb50, 0x78a, 0x7a50, 0xe9c6, 0xf33f, 0x100a, 0x0, 0x1);
        gbc.writeMem(0xcb50, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x78a, gbc.sp());
        EXPECT(0xcb52, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcb50));
        EXPECT(0x4a, gbc.readMem(0xcb51));
        // CB 4A 011A
        gbc.setState(0x3dc2, 0x3a35, 0x71b0, 0x324b, 0xda83, 0x8641, 0x0, 0x0);
        gbc.writeMem(0x3dc2, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x3a35, gbc.sp());
        EXPECT(0x3dc4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4A 011B
        gbc.setState(0x473d, 0xfb91, 0x6f40, 0x443c, 0x9301, 0x7914, 0x0, 0x1);
        gbc.writeMem(0x473d, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0xfb91, gbc.sp());
        EXPECT(0x473f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4A 011C
        gbc.setState(0x45ad, 0x57d9, 0x6cc0, 0x8e9f, 0x2e1a, 0x3b3a, 0x0, 0x1);
        gbc.writeMem(0x45ad, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x57d9, gbc.sp());
        EXPECT(0x45af, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4A 011D
        gbc.setState(0x729c, 0x2e3, 0xe220, 0x15f, 0xce57, 0xb30b, 0x1, 0x0);
        gbc.writeMem(0x729c, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x2e3, gbc.sp());
        EXPECT(0x729e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4A 011E
        gbc.setState(0xe81b, 0x6f24, 0x8a80, 0xd224, 0xc55e, 0x9318, 0x0, 0x1);
        gbc.writeMem(0xe81b, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x6f24, gbc.sp());
        EXPECT(0xe81d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe81b));
        EXPECT(0x4a, gbc.readMem(0xe81c));
        // CB 4A 011F
        gbc.setState(0x6deb, 0x9c74, 0x4c90, 0x67fe, 0xaa11, 0x3090, 0x1, 0x1);
        gbc.writeMem(0x6deb, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x9c74, gbc.sp());
        EXPECT(0x6ded, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4A 0120
        gbc.setState(0xb4a2, 0x5983, 0xe000, 0x3b5, 0xa89f, 0x2359, 0x0, 0x0);
        gbc.writeMem(0xb4a2, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x5983, gbc.sp());
        EXPECT(0xb4a4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb4a2));
        EXPECT(0x4a, gbc.readMem(0xb4a3));
        // CB 4A 0121
        gbc.setState(0x96a8, 0x6d78, 0xdfd0, 0xf712, 0xb48d, 0xb044, 0x0, 0x0);
        gbc.writeMem(0x96a8, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x6d78, gbc.sp());
        EXPECT(0x96aa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x96a8));
        EXPECT(0x4a, gbc.readMem(0x96a9));
        // CB 4A 0122
        gbc.setState(0xca1e, 0x195d, 0x3690, 0x4ea8, 0x5ef0, 0xaaa, 0x0, 0x0);
        gbc.writeMem(0xca1e, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x195d, gbc.sp());
        EXPECT(0xca20, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xca1e));
        EXPECT(0x4a, gbc.readMem(0xca1f));
        // CB 4A 0124
        gbc.setState(0x81e0, 0x8cfa, 0x5460, 0xe42, 0xa881, 0xa186, 0x0, 0x1);
        gbc.writeMem(0x81e0, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x8cfa, gbc.sp());
        EXPECT(0x81e2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x81e0));
        EXPECT(0x4a, gbc.readMem(0x81e1));
        // CB 4A 0126
        gbc.setState(0xe20f, 0xff43, 0xdca0, 0x57da, 0x49b, 0xcb8f, 0x1, 0x0);
        gbc.writeMem(0xe20f, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0xff43, gbc.sp());
        EXPECT(0xe211, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe20f));
        EXPECT(0x4a, gbc.readMem(0xe210));
        // CB 4A 0127
        gbc.setState(0xe589, 0x5fb7, 0xb960, 0x8930, 0x5063, 0x626f, 0x1, 0x1);
        gbc.writeMem(0xe589, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x5fb7, gbc.sp());
        EXPECT(0xe58b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe589));
        EXPECT(0x4a, gbc.readMem(0xe58a));
        // CB 4A 0128
        gbc.setState(0x5cd5, 0xc6b4, 0x4550, 0xf27e, 0xebc6, 0x34ef, 0x0, 0x1);
        gbc.writeMem(0x5cd5, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0xc6b4, gbc.sp());
        EXPECT(0x5cd7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4A 0129
        gbc.setState(0x4ab8, 0xd1b9, 0xbd00, 0xdb91, 0x4837, 0x77f4, 0x1, 0x1);
        gbc.writeMem(0x4ab8, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0xd1b9, gbc.sp());
        EXPECT(0x4aba, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4A 012A
        gbc.setState(0x2577, 0x1939, 0x6be0, 0x8c89, 0x2a3b, 0x59ae, 0x1, 0x1);
        gbc.writeMem(0x2577, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0x1939, gbc.sp());
        EXPECT(0x2579, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4A 012B
        gbc.setState(0xc12b, 0x25b, 0xc9e0, 0x6b85, 0xaa40, 0x662c, 0x1, 0x1);
        gbc.writeMem(0xc12b, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x25b, gbc.sp());
        EXPECT(0xc12d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc12b));
        EXPECT(0x4a, gbc.readMem(0xc12c));
        // CB 4A 012D
        gbc.setState(0xa89a, 0x1fff, 0x5770, 0x7457, 0xca96, 0xdf90, 0x1, 0x0);
        gbc.writeMem(0xa89a, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x1fff, gbc.sp());
        EXPECT(0xa89c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa89a));
        EXPECT(0x4a, gbc.readMem(0xa89b));
        // CB 4A 012E
        gbc.setState(0x6c42, 0xbc41, 0xc160, 0xe80a, 0xdd4a, 0x4cb1, 0x1, 0x0);
        gbc.writeMem(0x6c42, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0xbc41, gbc.sp());
        EXPECT(0x6c44, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4A 012F
        gbc.setState(0x4f4e, 0x20f0, 0x5800, 0xb232, 0x339e, 0x5c22, 0x1, 0x1);
        gbc.writeMem(0x4f4e, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x20f0, gbc.sp());
        EXPECT(0x4f50, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4A 0130
        gbc.setState(0x5ee1, 0xaa25, 0xe730, 0x1e0b, 0x2c58, 0x7e5d, 0x1, 0x0);
        gbc.writeMem(0x5ee1, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0xaa25, gbc.sp());
        EXPECT(0x5ee3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4A 0131
        gbc.setState(0x2734, 0x8c69, 0x63f0, 0xdf00, 0x3ee1, 0xac19, 0x0, 0x1);
        gbc.writeMem(0x2734, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x8c69, gbc.sp());
        EXPECT(0x2736, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4A 0132
        gbc.setState(0xae66, 0xd44f, 0xd480, 0x643d, 0xfcf1, 0x6c98, 0x0, 0x0);
        gbc.writeMem(0xae66, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0xd44f, gbc.sp());
        EXPECT(0xae68, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xae66));
        EXPECT(0x4a, gbc.readMem(0xae67));
        // CB 4A 0133
        gbc.setState(0xd309, 0x234c, 0x72e0, 0x112d, 0x343e, 0x46db, 0x1, 0x0);
        gbc.writeMem(0xd309, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x234c, gbc.sp());
        EXPECT(0xd30b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd309));
        EXPECT(0x4a, gbc.readMem(0xd30a));
        // CB 4A 0134
        gbc.setState(0x994b, 0x9b07, 0xc660, 0xc0c3, 0x3c3c, 0x347a, 0x1, 0x0);
        gbc.writeMem(0x994b, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x9b07, gbc.sp());
        EXPECT(0x994d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x994b));
        EXPECT(0x4a, gbc.readMem(0x994c));
        // CB 4A 0135
        gbc.setState(0x8dd4, 0xaa48, 0x8c0, 0x4793, 0xb170, 0x7212, 0x0, 0x1);
        gbc.writeMem(0x8dd4, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0xaa48, gbc.sp());
        EXPECT(0x8dd6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8dd4));
        EXPECT(0x4a, gbc.readMem(0x8dd5));
        // CB 4A 0136
        gbc.setState(0x86c8, 0xe35, 0x4490, 0x77af, 0x6842, 0xa447, 0x1, 0x1);
        gbc.writeMem(0x86c8, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0xe35, gbc.sp());
        EXPECT(0x86ca, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x86c8));
        EXPECT(0x4a, gbc.readMem(0x86c9));
        // CB 4A 0137
        gbc.setState(0x4a5, 0xb1ec, 0xbde0, 0x6ff9, 0x9ddc, 0x85a4, 0x0, 0x1);
        gbc.writeMem(0x4a5, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0xb1ec, gbc.sp());
        EXPECT(0x4a7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4A 0138
        gbc.setState(0xd37, 0x4cab, 0x2780, 0xf55e, 0x5968, 0x7c0, 0x0, 0x1);
        gbc.writeMem(0xd37, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x4cab, gbc.sp());
        EXPECT(0xd39, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4A 0139
        gbc.setState(0xdb6b, 0x443c, 0x5150, 0x8217, 0xf9c7, 0x3e30, 0x0, 0x1);
        gbc.writeMem(0xdb6b, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x443c, gbc.sp());
        EXPECT(0xdb6d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdb6b));
        EXPECT(0x4a, gbc.readMem(0xdb6c));
        // CB 4A 013A
        gbc.setState(0x1d06, 0x2d7d, 0xa880, 0x2d9a, 0x83f6, 0x1722, 0x0, 0x1);
        gbc.writeMem(0x1d06, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x2d7d, gbc.sp());
        EXPECT(0x1d08, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4A 013B
        gbc.setState(0x42d5, 0xe718, 0xfed0, 0x6ae5, 0x426f, 0x289c, 0x0, 0x1);
        gbc.writeMem(0x42d5, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0xe718, gbc.sp());
        EXPECT(0x42d7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4A 013C
        gbc.setState(0x8bf1, 0x7ea, 0x2100, 0x6c78, 0x3c51, 0xfc5c, 0x1, 0x1);
        gbc.writeMem(0x8bf1, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x7ea, gbc.sp());
        EXPECT(0x8bf3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8bf1));
        EXPECT(0x4a, gbc.readMem(0x8bf2));
        // CB 4A 013D
        gbc.setState(0x73a4, 0x5afa, 0x9ee0, 0x3feb, 0x72f9, 0x7cda, 0x0, 0x1);
        gbc.writeMem(0x73a4, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x5afa, gbc.sp());
        EXPECT(0x73a6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4A 013E
        gbc.setState(0xea73, 0x30df, 0x1420, 0x2d7c, 0xf1d8, 0xbdc7, 0x1, 0x1);
        gbc.writeMem(0xea73, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x30df, gbc.sp());
        EXPECT(0xea75, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xea73));
        EXPECT(0x4a, gbc.readMem(0xea74));
        // CB 4A 013F
        gbc.setState(0x5b48, 0xf24a, 0xc270, 0xa10, 0x5e4f, 0x1ba, 0x0, 0x1);
        gbc.writeMem(0x5b48, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0xf24a, gbc.sp());
        EXPECT(0x5b4a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4A 0140
        gbc.setState(0xc8e0, 0xb655, 0xf9f0, 0x908c, 0x75f, 0xd21b, 0x0, 0x0);
        gbc.writeMem(0xc8e0, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0xb655, gbc.sp());
        EXPECT(0xc8e2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc8e0));
        EXPECT(0x4a, gbc.readMem(0xc8e1));
        // CB 4A 0141
        gbc.setState(0x3f44, 0xf43b, 0xed60, 0xcff9, 0x7f82, 0xa096, 0x0, 0x1);
        gbc.writeMem(0x3f44, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0xf43b, gbc.sp());
        EXPECT(0x3f46, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4A 0142
        gbc.setState(0xbcdd, 0xf69c, 0x5a50, 0x863d, 0xc1d7, 0x5da9, 0x1, 0x0);
        gbc.writeMem(0xbcdd, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0xf69c, gbc.sp());
        EXPECT(0xbcdf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbcdd));
        EXPECT(0x4a, gbc.readMem(0xbcde));
        // CB 4A 0143
        gbc.setState(0x5039, 0x2376, 0x5ba0, 0x4269, 0xa510, 0x6e04, 0x1, 0x1);
        gbc.writeMem(0x5039, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x2376, gbc.sp());
        EXPECT(0x503b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4A 0144
        gbc.setState(0xf42, 0x4144, 0x740, 0x81f0, 0x5489, 0x7e4e, 0x0, 0x1);
        gbc.writeMem(0xf42, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x4144, gbc.sp());
        EXPECT(0xf44, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4A 0145
        gbc.setState(0xa48, 0x4d3d, 0x1890, 0x2e58, 0x9822, 0x4cb, 0x1, 0x0);
        gbc.writeMem(0xa48, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x4d3d, gbc.sp());
        EXPECT(0xa4a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4A 0146
        gbc.setState(0x998d, 0xd813, 0x8780, 0xf95d, 0x5a9c, 0x3f0, 0x1, 0x1);
        gbc.writeMem(0x998d, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0xd813, gbc.sp());
        EXPECT(0x998f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x998d));
        EXPECT(0x4a, gbc.readMem(0x998e));
        // CB 4A 0147
        gbc.setState(0xc1db, 0xdf5, 0x4b60, 0xadfa, 0xe03a, 0xcfe2, 0x1, 0x0);
        gbc.writeMem(0xc1db, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0xdf5, gbc.sp());
        EXPECT(0xc1dd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc1db));
        EXPECT(0x4a, gbc.readMem(0xc1dc));
        // CB 4A 0148
        gbc.setState(0x46b4, 0xd5bc, 0x5350, 0x682, 0x5a4a, 0x53d6, 0x1, 0x0);
        gbc.writeMem(0x46b4, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0xd5bc, gbc.sp());
        EXPECT(0x46b6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4A 0149
        gbc.setState(0xa8e9, 0xc61, 0xd4c0, 0x4a09, 0x75b3, 0xd065, 0x1, 0x1);
        gbc.writeMem(0xa8e9, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0xc61, gbc.sp());
        EXPECT(0xa8eb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa8e9));
        EXPECT(0x4a, gbc.readMem(0xa8ea));
        // CB 4A 014A
        gbc.setState(0x7214, 0x911d, 0x1af0, 0x90c5, 0x4065, 0xfdf, 0x0, 0x1);
        gbc.writeMem(0x7214, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x911d, gbc.sp());
        EXPECT(0x7216, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4A 014B
        gbc.setState(0x2da7, 0x8981, 0xf8e0, 0x5c6b, 0xfcce, 0x7fe4, 0x1, 0x1);
        gbc.writeMem(0x2da7, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x8981, gbc.sp());
        EXPECT(0x2da9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4A 014C
        gbc.setState(0x7a8a, 0x48, 0x290, 0x4797, 0xc780, 0x2d0d, 0x1, 0x1);
        gbc.writeMem(0x7a8a, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x48, gbc.sp());
        EXPECT(0x7a8c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4A 014D
        gbc.setState(0xa3ba, 0xbfe8, 0xe470, 0xe1f, 0x98d4, 0xcbc6, 0x1, 0x0);
        gbc.writeMem(0xa3ba, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0xbfe8, gbc.sp());
        EXPECT(0xa3bc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa3ba));
        EXPECT(0x4a, gbc.readMem(0xa3bb));
        // CB 4A 014E
        gbc.setState(0xa1ef, 0xb01, 0x70a0, 0x6b83, 0x8d29, 0x3c06, 0x1, 0x1);
        gbc.writeMem(0xa1ef, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0xb01, gbc.sp());
        EXPECT(0xa1f1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa1ef));
        EXPECT(0x4a, gbc.readMem(0xa1f0));
        // CB 4A 014F
        gbc.setState(0xd70, 0xfbfb, 0x59b0, 0x7960, 0x4da6, 0xceb0, 0x0, 0x0);
        gbc.writeMem(0xd70, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0xfbfb, gbc.sp());
        EXPECT(0xd72, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4A 0151
        gbc.setState(0xce36, 0x12eb, 0xdd10, 0x90b0, 0xecb3, 0x24fb, 0x1, 0x1);
        gbc.writeMem(0xce36, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x12eb, gbc.sp());
        EXPECT(0xce38, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xce36));
        EXPECT(0x4a, gbc.readMem(0xce37));
        // CB 4A 0152
        gbc.setState(0x9b89, 0x7ef7, 0xf1c0, 0xcbfa, 0xd247, 0xb8c, 0x1, 0x0);
        gbc.writeMem(0x9b89, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x7ef7, gbc.sp());
        EXPECT(0x9b8b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9b89));
        EXPECT(0x4a, gbc.readMem(0x9b8a));
        // CB 4A 0153
        gbc.setState(0xa1f9, 0xec36, 0xc260, 0xedb4, 0x185e, 0xe588, 0x1, 0x0);
        gbc.writeMem(0xa1f9, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0xec36, gbc.sp());
        EXPECT(0xa1fb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa1f9));
        EXPECT(0x4a, gbc.readMem(0xa1fa));
        // CB 4A 0155
        gbc.setState(0x792b, 0xe566, 0x28c0, 0xcd4d, 0x8c50, 0x4606, 0x1, 0x1);
        gbc.writeMem(0x792b, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0xe566, gbc.sp());
        EXPECT(0x792d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4A 0156
        gbc.setState(0x40f1, 0xcbbc, 0x1920, 0xd3d, 0xa836, 0xca60, 0x0, 0x1);
        gbc.writeMem(0x40f1, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0xcbbc, gbc.sp());
        EXPECT(0x40f3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4A 0157
        gbc.setState(0x1348, 0x3a53, 0xf480, 0x5347, 0x3ae8, 0x109d, 0x0, 0x0);
        gbc.writeMem(0x1348, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x3a53, gbc.sp());
        EXPECT(0x134a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4A 0158
        gbc.setState(0xd5e4, 0x7048, 0x5f0, 0xcb6b, 0xb090, 0x5177, 0x1, 0x1);
        gbc.writeMem(0xd5e4, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x7048, gbc.sp());
        EXPECT(0xd5e6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd5e4));
        EXPECT(0x4a, gbc.readMem(0xd5e5));
        // CB 4A 0159
        gbc.setState(0x676a, 0x8367, 0x9fd0, 0xfec6, 0xd3a, 0x68ec, 0x0, 0x1);
        gbc.writeMem(0x676a, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x8367, gbc.sp());
        EXPECT(0x676c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4A 015A
        gbc.setState(0x3bf2, 0xcde3, 0xc880, 0xff69, 0xb625, 0x36f3, 0x0, 0x0);
        gbc.writeMem(0x3bf2, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0xcde3, gbc.sp());
        EXPECT(0x3bf4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4A 015C
        gbc.setState(0x3316, 0xe026, 0x1230, 0x8df, 0xa089, 0x1063, 0x1, 0x0);
        gbc.writeMem(0x3316, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0xe026, gbc.sp());
        EXPECT(0x3318, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4A 015D
        gbc.setState(0xcbf1, 0x3a1c, 0xa8f0, 0xeb90, 0x53c9, 0x641c, 0x0, 0x0);
        gbc.writeMem(0xcbf1, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x3a1c, gbc.sp());
        EXPECT(0xcbf3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcbf1));
        EXPECT(0x4a, gbc.readMem(0xcbf2));
        // CB 4A 015E
        gbc.setState(0x96d2, 0x111d, 0x6f0, 0x6e33, 0x9751, 0x397d, 0x0, 0x1);
        gbc.writeMem(0x96d2, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x111d, gbc.sp());
        EXPECT(0x96d4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x96d2));
        EXPECT(0x4a, gbc.readMem(0x96d3));
        // CB 4A 015F
        gbc.setState(0xd190, 0x35d0, 0x71d0, 0xa8f, 0x2858, 0xb998, 0x1, 0x0);
        gbc.writeMem(0xd190, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x35d0, gbc.sp());
        EXPECT(0xd192, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd190));
        EXPECT(0x4a, gbc.readMem(0xd191));
        // CB 4A 0160
        gbc.setState(0xbc2, 0x34fe, 0x8680, 0x9fda, 0x79b, 0x8693, 0x0, 0x1);
        gbc.writeMem(0xbc2, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0x34fe, gbc.sp());
        EXPECT(0xbc4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4A 0161
        gbc.setState(0xa568, 0xbc30, 0x9050, 0xbbaf, 0x6710, 0x2736, 0x0, 0x0);
        gbc.writeMem(0xa568, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0xbc30, gbc.sp());
        EXPECT(0xa56a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa568));
        EXPECT(0x4a, gbc.readMem(0xa569));
        // CB 4A 0162
        gbc.setState(0x4cec, 0x470f, 0xc020, 0x784b, 0x738c, 0x1fd3, 0x1, 0x0);
        gbc.writeMem(0x4cec, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x470f, gbc.sp());
        EXPECT(0x4cee, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4A 0163
        gbc.setState(0x2569, 0xf827, 0xf7e0, 0xacda, 0xbc92, 0x450c, 0x0, 0x1);
        gbc.writeMem(0x2569, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0xf827, gbc.sp());
        EXPECT(0x256b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4A 0165
        gbc.setState(0xc867, 0x9ad4, 0xb830, 0xdb29, 0xe17f, 0x4592, 0x0, 0x1);
        gbc.writeMem(0xc867, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x9ad4, gbc.sp());
        EXPECT(0xc869, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc867));
        EXPECT(0x4a, gbc.readMem(0xc868));
        // CB 4A 0166
        gbc.setState(0x16cb, 0xb808, 0xda0, 0xa43a, 0xc80a, 0xaf0a, 0x0, 0x1);
        gbc.writeMem(0x16cb, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0xb808, gbc.sp());
        EXPECT(0x16cd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4A 0167
        gbc.setState(0x85d9, 0xb3c9, 0x9140, 0xb461, 0x7b15, 0xfd32, 0x1, 0x0);
        gbc.writeMem(0x85d9, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0xb3c9, gbc.sp());
        EXPECT(0x85db, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x85d9));
        EXPECT(0x4a, gbc.readMem(0x85da));
        // CB 4A 0168
        gbc.setState(0x125f, 0xe6cb, 0xbc60, 0xfa5e, 0xd25c, 0x2bd, 0x1, 0x1);
        gbc.writeMem(0x125f, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0xe6cb, gbc.sp());
        EXPECT(0x1261, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4A 0169
        gbc.setState(0x6ac1, 0x63ce, 0xf380, 0x74dd, 0xccc6, 0xa4af, 0x1, 0x1);
        gbc.writeMem(0x6ac1, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x63ce, gbc.sp());
        EXPECT(0x6ac3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4A 016A
        gbc.setState(0x1e0b, 0x12f1, 0x16d0, 0x17bb, 0xba3a, 0x8f0b, 0x0, 0x0);
        gbc.writeMem(0x1e0b, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x12f1, gbc.sp());
        EXPECT(0x1e0d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4A 016B
        gbc.setState(0xdb90, 0x6ee3, 0xbc50, 0x6891, 0xc15b, 0x10d, 0x1, 0x1);
        gbc.writeMem(0xdb90, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x6ee3, gbc.sp());
        EXPECT(0xdb92, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdb90));
        EXPECT(0x4a, gbc.readMem(0xdb91));
        // CB 4A 016C
        gbc.setState(0xcbf9, 0xf090, 0xfef0, 0xbc45, 0xda30, 0xe6e8, 0x0, 0x0);
        gbc.writeMem(0xcbf9, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0xf090, gbc.sp());
        EXPECT(0xcbfb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcbf9));
        EXPECT(0x4a, gbc.readMem(0xcbfa));
        // CB 4A 016D
        gbc.setState(0xa0e4, 0x3667, 0x2430, 0xa18, 0x1044, 0x3623, 0x1, 0x0);
        gbc.writeMem(0xa0e4, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x3667, gbc.sp());
        EXPECT(0xa0e6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa0e4));
        EXPECT(0x4a, gbc.readMem(0xa0e5));
        // CB 4A 016E
        gbc.setState(0x8ec9, 0x634b, 0xb730, 0xa2cf, 0x114, 0xfb9f, 0x0, 0x0);
        gbc.writeMem(0x8ec9, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x634b, gbc.sp());
        EXPECT(0x8ecb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8ec9));
        EXPECT(0x4a, gbc.readMem(0x8eca));
        // CB 4A 016F
        gbc.setState(0x5074, 0x45d0, 0x5ef0, 0x44, 0x7d9b, 0xe2fd, 0x0, 0x1);
        gbc.writeMem(0x5074, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x45d0, gbc.sp());
        EXPECT(0x5076, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4A 0170
        gbc.setState(0xed39, 0x4f42, 0x3ff0, 0x3125, 0xd621, 0xaa84, 0x0, 0x1);
        gbc.writeMem(0xed39, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x4f42, gbc.sp());
        EXPECT(0xed3b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xed39));
        EXPECT(0x4a, gbc.readMem(0xed3a));
        // CB 4A 0171
        gbc.setState(0x42ce, 0x9175, 0x15b0, 0xc1ee, 0x25e3, 0x4ac4, 0x1, 0x0);
        gbc.writeMem(0x42ce, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x9175, gbc.sp());
        EXPECT(0x42d0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4A 0172
        gbc.setState(0x1305, 0x5bd2, 0xb0d0, 0xe0ad, 0x5b3c, 0xc70c, 0x1, 0x0);
        gbc.writeMem(0x1305, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x5bd2, gbc.sp());
        EXPECT(0x1307, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4A 0173
        gbc.setState(0x2c9a, 0xe4e5, 0x5f40, 0x52e1, 0x3a42, 0xcf61, 0x1, 0x1);
        gbc.writeMem(0x2c9a, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0xe4e5, gbc.sp());
        EXPECT(0x2c9c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4A 0174
        gbc.setState(0x2b33, 0x9587, 0x9a50, 0x2480, 0x35aa, 0x4dff, 0x0, 0x0);
        gbc.writeMem(0x2b33, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x9587, gbc.sp());
        EXPECT(0x2b35, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4A 0175
        gbc.setState(0xa70b, 0x52f4, 0xab00, 0xf86c, 0xb64d, 0x377e, 0x1, 0x0);
        gbc.writeMem(0xa70b, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0x52f4, gbc.sp());
        EXPECT(0xa70d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa70b));
        EXPECT(0x4a, gbc.readMem(0xa70c));
        // CB 4A 0176
        gbc.setState(0xb495, 0x4841, 0xfd50, 0xa845, 0xf7d2, 0x3059, 0x1, 0x0);
        gbc.writeMem(0xb495, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x4841, gbc.sp());
        EXPECT(0xb497, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb495));
        EXPECT(0x4a, gbc.readMem(0xb496));
        // CB 4A 0177
        gbc.setState(0x6b91, 0x310f, 0x3440, 0xa905, 0x1e27, 0xf838, 0x1, 0x1);
        gbc.writeMem(0x6b91, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x310f, gbc.sp());
        EXPECT(0x6b93, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4A 017A
        gbc.setState(0xe71, 0xc11f, 0x7970, 0x481, 0x2234, 0x43dc, 0x1, 0x1);
        gbc.writeMem(0xe71, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0xc11f, gbc.sp());
        EXPECT(0xe73, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4A 017B
        gbc.setState(0xaec7, 0x8edd, 0x2470, 0x1667, 0xb58b, 0xfa54, 0x1, 0x0);
        gbc.writeMem(0xaec7, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x8edd, gbc.sp());
        EXPECT(0xaec9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaec7));
        EXPECT(0x4a, gbc.readMem(0xaec8));
        // CB 4A 017C
        gbc.setState(0x6de7, 0xeada, 0x1770, 0x2ca1, 0x73c2, 0x7323, 0x1, 0x0);
        gbc.writeMem(0x6de7, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0xeada, gbc.sp());
        EXPECT(0x6de9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4A 017E
        gbc.setState(0x4a44, 0x250f, 0x1110, 0x45c2, 0xe2a8, 0xb232, 0x0, 0x0);
        gbc.writeMem(0x4a44, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x250f, gbc.sp());
        EXPECT(0x4a46, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4A 017F
        gbc.setState(0xdb39, 0xd43e, 0x6dd0, 0xe701, 0x7533, 0x8711, 0x0, 0x1);
        gbc.writeMem(0xdb39, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0xd43e, gbc.sp());
        EXPECT(0xdb3b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdb39));
        EXPECT(0x4a, gbc.readMem(0xdb3a));
        // CB 4A 0180
        gbc.setState(0x439d, 0xa6e9, 0x3fc0, 0xa66d, 0x620, 0xdbe8, 0x0, 0x1);
        gbc.writeMem(0x439d, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0xa6e9, gbc.sp());
        EXPECT(0x439f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4A 0181
        gbc.setState(0x450b, 0x739d, 0x4290, 0x1602, 0x49ff, 0xad78, 0x1, 0x1);
        gbc.writeMem(0x450b, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x739d, gbc.sp());
        EXPECT(0x450d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4A 0182
        gbc.setState(0x524b, 0xeea4, 0xceb0, 0x6117, 0xd8e9, 0xd8bc, 0x0, 0x1);
        gbc.writeMem(0x524b, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0xeea4, gbc.sp());
        EXPECT(0x524d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4A 0183
        gbc.setState(0x596d, 0xe0d, 0xd4d0, 0xdef0, 0xc086, 0xea3f, 0x1, 0x1);
        gbc.writeMem(0x596d, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0xe0d, gbc.sp());
        EXPECT(0x596f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4A 0184
        gbc.setState(0xafe5, 0x944c, 0x4120, 0xdb6e, 0xa837, 0xac97, 0x1, 0x1);
        gbc.writeMem(0xafe5, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0x944c, gbc.sp());
        EXPECT(0xafe7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xafe5));
        EXPECT(0x4a, gbc.readMem(0xafe6));
        // CB 4A 0185
        gbc.setState(0x2d62, 0x3b35, 0x3990, 0x9af9, 0xe736, 0xb5e4, 0x1, 0x1);
        gbc.writeMem(0x2d62, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x3b35, gbc.sp());
        EXPECT(0x2d64, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4A 0186
        gbc.setState(0x8250, 0x210c, 0xaf20, 0xb3e6, 0xcc29, 0xed4f, 0x0, 0x0);
        gbc.writeMem(0x8250, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x210c, gbc.sp());
        EXPECT(0x8252, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8250));
        EXPECT(0x4a, gbc.readMem(0x8251));
        // CB 4A 0187
        gbc.setState(0x7187, 0x8f15, 0xeb0, 0xfc5b, 0x9176, 0x58de, 0x1, 0x1);
        gbc.writeMem(0x7187, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x8f15, gbc.sp());
        EXPECT(0x7189, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4A 0188
        gbc.setState(0x126b, 0xa74d, 0xfd90, 0xff0a, 0xb4f8, 0x8cd6, 0x1, 0x0);
        gbc.writeMem(0x126b, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0xa74d, gbc.sp());
        EXPECT(0x126d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4A 0189
        gbc.setState(0xd32b, 0x97dd, 0x2000, 0xc9a3, 0xd64c, 0x34e2, 0x0, 0x1);
        gbc.writeMem(0xd32b, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x97dd, gbc.sp());
        EXPECT(0xd32d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd32b));
        EXPECT(0x4a, gbc.readMem(0xd32c));
        // CB 4A 018A
        gbc.setState(0x74cb, 0x99ee, 0x1ee0, 0x8de7, 0x7fd6, 0xc694, 0x1, 0x0);
        gbc.writeMem(0x74cb, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x99ee, gbc.sp());
        EXPECT(0x74cd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4A 018B
        gbc.setState(0x797d, 0x434c, 0x37c0, 0xf20e, 0xab76, 0x74d0, 0x1, 0x1);
        gbc.writeMem(0x797d, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x434c, gbc.sp());
        EXPECT(0x797f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4A 018C
        gbc.setState(0xaf20, 0xd7f1, 0x9b70, 0xa67a, 0x7f4a, 0xf68, 0x0, 0x0);
        gbc.writeMem(0xaf20, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0xd7f1, gbc.sp());
        EXPECT(0xaf22, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaf20));
        EXPECT(0x4a, gbc.readMem(0xaf21));
        // CB 4A 018D
        gbc.setState(0x35ba, 0x7f06, 0x2190, 0xb0f7, 0x24eb, 0x7152, 0x0, 0x0);
        gbc.writeMem(0x35ba, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x7f06, gbc.sp());
        EXPECT(0x35bc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4A 018E
        gbc.setState(0x1c7f, 0xd07f, 0xd2b0, 0x3a33, 0x5911, 0xcad0, 0x0, 0x1);
        gbc.writeMem(0x1c7f, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0xd07f, gbc.sp());
        EXPECT(0x1c81, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4A 018F
        gbc.setState(0xcfa, 0xa659, 0xe930, 0x365c, 0x6d24, 0x6b5f, 0x0, 0x1);
        gbc.writeMem(0xcfa, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0xa659, gbc.sp());
        EXPECT(0xcfc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4A 0190
        gbc.setState(0x35ad, 0xb7af, 0xfe70, 0xf0d5, 0x7f4b, 0x9cb, 0x0, 0x0);
        gbc.writeMem(0x35ad, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0xb7af, gbc.sp());
        EXPECT(0x35af, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4A 0191
        gbc.setState(0x5cea, 0x3c67, 0xd450, 0xad4a, 0x52bf, 0xca2, 0x0, 0x0);
        gbc.writeMem(0x5cea, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x3c67, gbc.sp());
        EXPECT(0x5cec, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4A 0192
        gbc.setState(0xcc3e, 0xbb3e, 0x4a30, 0x6796, 0x547b, 0xf5ff, 0x0, 0x0);
        gbc.writeMem(0xcc3e, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0xbb3e, gbc.sp());
        EXPECT(0xcc40, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcc3e));
        EXPECT(0x4a, gbc.readMem(0xcc3f));
        // CB 4A 0193
        gbc.setState(0xfa7, 0x5cba, 0xd4b0, 0x25d8, 0x21c6, 0xeefd, 0x0, 0x0);
        gbc.writeMem(0xfa7, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x5cba, gbc.sp());
        EXPECT(0xfa9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4A 0194
        gbc.setState(0x1f6a, 0x7ea4, 0x5d80, 0xc2dc, 0x3408, 0x5291, 0x0, 0x1);
        gbc.writeMem(0x1f6a, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x7ea4, gbc.sp());
        EXPECT(0x1f6c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4A 0195
        gbc.setState(0x1997, 0xff55, 0xbba0, 0xd2a1, 0x4902, 0x9e03, 0x1, 0x1);
        gbc.writeMem(0x1997, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0xff55, gbc.sp());
        EXPECT(0x1999, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4A 0196
        gbc.setState(0x7170, 0x8c3a, 0x9d30, 0x855b, 0xb52e, 0x3f00, 0x0, 0x1);
        gbc.writeMem(0x7170, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x8c3a, gbc.sp());
        EXPECT(0x7172, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4A 0197
        gbc.setState(0x196f, 0x60a8, 0xafd0, 0x12a6, 0x4f63, 0x6b8d, 0x1, 0x1);
        gbc.writeMem(0x196f, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x60a8, gbc.sp());
        EXPECT(0x1971, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4A 0198
        gbc.setState(0xc39b, 0x71e5, 0x2cc0, 0xd62c, 0xeaa5, 0xd36e, 0x0, 0x1);
        gbc.writeMem(0xc39b, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x71e5, gbc.sp());
        EXPECT(0xc39d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc39b));
        EXPECT(0x4a, gbc.readMem(0xc39c));
        // CB 4A 0199
        gbc.setState(0x95c0, 0xd6c1, 0xc1a0, 0xa2b1, 0xed3b, 0x6a59, 0x0, 0x0);
        gbc.writeMem(0x95c0, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0xd6c1, gbc.sp());
        EXPECT(0x95c2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x95c0));
        EXPECT(0x4a, gbc.readMem(0x95c1));
        // CB 4A 019A
        gbc.setState(0x91c5, 0xcfed, 0x8ff0, 0xcd3d, 0xfb8b, 0x86d3, 0x1, 0x0);
        gbc.writeMem(0x91c5, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0xcfed, gbc.sp());
        EXPECT(0x91c7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x91c5));
        EXPECT(0x4a, gbc.readMem(0x91c6));
        // CB 4A 019B
        gbc.setState(0xa506, 0x4285, 0x7c70, 0xd01a, 0xc4b, 0xd9d9, 0x1, 0x1);
        gbc.writeMem(0xa506, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x4285, gbc.sp());
        EXPECT(0xa508, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa506));
        EXPECT(0x4a, gbc.readMem(0xa507));
        // CB 4A 019C
        gbc.setState(0x67da, 0xde9a, 0x7fe0, 0xcd36, 0x3950, 0x7392, 0x0, 0x0);
        gbc.writeMem(0x67da, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0xde9a, gbc.sp());
        EXPECT(0x67dc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4A 019E
        gbc.setState(0x84c8, 0xc1d1, 0xcfa0, 0x92b3, 0x947, 0x1477, 0x1, 0x0);
        gbc.writeMem(0x84c8, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0xc1d1, gbc.sp());
        EXPECT(0x84ca, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x84c8));
        EXPECT(0x4a, gbc.readMem(0x84c9));
        // CB 4A 019F
        gbc.setState(0x6a0a, 0x947b, 0x8d50, 0x2258, 0x2b59, 0x64ae, 0x0, 0x1);
        gbc.writeMem(0x6a0a, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0x947b, gbc.sp());
        EXPECT(0x6a0c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4A 01A0
        gbc.setState(0x7c9d, 0x6230, 0xa510, 0xefd6, 0x1709, 0x880, 0x1, 0x0);
        gbc.writeMem(0x7c9d, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x6230, gbc.sp());
        EXPECT(0x7c9f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4A 01A2
        gbc.setState(0x687, 0x6a87, 0xc260, 0x7b98, 0x6527, 0xbcd9, 0x0, 0x0);
        gbc.writeMem(0x687, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x6a87, gbc.sp());
        EXPECT(0x689, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4A 01A3
        gbc.setState(0xbf3a, 0xe811, 0x3960, 0xa556, 0xfb6f, 0x16ec, 0x0, 0x1);
        gbc.writeMem(0xbf3a, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0xe811, gbc.sp());
        EXPECT(0xbf3c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbf3a));
        EXPECT(0x4a, gbc.readMem(0xbf3b));
        // CB 4A 01A4
        gbc.setState(0x435f, 0x2305, 0x51d0, 0x2e9, 0xcfec, 0x865a, 0x1, 0x1);
        gbc.writeMem(0x435f, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x2305, gbc.sp());
        EXPECT(0x4361, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4A 01A5
        gbc.setState(0xc938, 0xf9d0, 0x7b10, 0xd8f0, 0xae43, 0x3e9d, 0x0, 0x1);
        gbc.writeMem(0xc938, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0xf9d0, gbc.sp());
        EXPECT(0xc93a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc938));
        EXPECT(0x4a, gbc.readMem(0xc939));
        // CB 4A 01A7
        gbc.setState(0x27ad, 0xcc8d, 0x81d0, 0x99db, 0x5cac, 0xa975, 0x0, 0x1);
        gbc.writeMem(0x27ad, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0xcc8d, gbc.sp());
        EXPECT(0x27af, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4A 01A8
        gbc.setState(0x3d5f, 0xdb0f, 0x400, 0x8f6e, 0xedbb, 0x76dd, 0x0, 0x0);
        gbc.writeMem(0x3d5f, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0xdb0f, gbc.sp());
        EXPECT(0x3d61, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4A 01A9
        gbc.setState(0x7f9c, 0xe77f, 0x6da0, 0x612b, 0x5d59, 0x6dd1, 0x0, 0x1);
        gbc.writeMem(0x7f9c, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0xe77f, gbc.sp());
        EXPECT(0x7f9e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4A 01AA
        gbc.setState(0x28a8, 0x84e8, 0x6a60, 0xc064, 0x2178, 0x151d, 0x1, 0x1);
        gbc.writeMem(0x28a8, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x84e8, gbc.sp());
        EXPECT(0x28aa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4A 01AB
        gbc.setState(0x9e3d, 0x39a5, 0xcab0, 0x7ba2, 0x6c27, 0x2b53, 0x0, 0x1);
        gbc.writeMem(0x9e3d, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x39a5, gbc.sp());
        EXPECT(0x9e3f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9e3d));
        EXPECT(0x4a, gbc.readMem(0x9e3e));
        // CB 4A 01AC
        gbc.setState(0xb4e2, 0x91fd, 0xc290, 0xcbdc, 0xf3d2, 0x2ef7, 0x0, 0x1);
        gbc.writeMem(0xb4e2, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x91fd, gbc.sp());
        EXPECT(0xb4e4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb4e2));
        EXPECT(0x4a, gbc.readMem(0xb4e3));
        // CB 4A 01AD
        gbc.setState(0xa553, 0x91ba, 0x9fd0, 0x6a7e, 0x55c6, 0x2f4, 0x1, 0x1);
        gbc.writeMem(0xa553, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x91ba, gbc.sp());
        EXPECT(0xa555, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa553));
        EXPECT(0x4a, gbc.readMem(0xa554));
        // CB 4A 01AE
        gbc.setState(0xb4f6, 0x3c5e, 0x5750, 0x63c7, 0xf7ca, 0xac60, 0x0, 0x1);
        gbc.writeMem(0xb4f6, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x3c5e, gbc.sp());
        EXPECT(0xb4f8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb4f6));
        EXPECT(0x4a, gbc.readMem(0xb4f7));
        // CB 4A 01AF
        gbc.setState(0x8a3c, 0x6911, 0x69c0, 0xf6df, 0x35d1, 0x6c93, 0x0, 0x1);
        gbc.writeMem(0x8a3c, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0x6911, gbc.sp());
        EXPECT(0x8a3e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8a3c));
        EXPECT(0x4a, gbc.readMem(0x8a3d));
        // CB 4A 01B0
        gbc.setState(0xc39, 0x3085, 0x2650, 0xc65c, 0xd0ed, 0x8a59, 0x0, 0x1);
        gbc.writeMem(0xc39, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x3085, gbc.sp());
        EXPECT(0xc3b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4A 01B1
        gbc.setState(0x1a35, 0x7b8, 0xdf80, 0x3f3f, 0x102f, 0xb577, 0x1, 0x1);
        gbc.writeMem(0x1a35, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x7b8, gbc.sp());
        EXPECT(0x1a37, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4A 01B3
        gbc.setState(0x47aa, 0x41ba, 0x3df0, 0xde9e, 0x39ca, 0xa687, 0x1, 0x1);
        gbc.writeMem(0x47aa, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x41ba, gbc.sp());
        EXPECT(0x47ac, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4A 01B4
        gbc.setState(0x7b7a, 0x1d97, 0xba40, 0x8105, 0x14f6, 0xb055, 0x0, 0x0);
        gbc.writeMem(0x7b7a, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x1d97, gbc.sp());
        EXPECT(0x7b7c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4A 01B5
        gbc.setState(0xdab, 0x80a7, 0x3d0, 0xccc5, 0x4502, 0x3930, 0x1, 0x0);
        gbc.writeMem(0xdab, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x80a7, gbc.sp());
        EXPECT(0xdad, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4A 01B6
        gbc.setState(0x3c7d, 0xded0, 0x5320, 0x6dfd, 0xff42, 0x381, 0x1, 0x1);
        gbc.writeMem(0x3c7d, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0xded0, gbc.sp());
        EXPECT(0x3c7f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4A 01B7
        gbc.setState(0xd32, 0xb80f, 0x8b50, 0xfee0, 0xcf18, 0x311b, 0x0, 0x1);
        gbc.writeMem(0xd32, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0xb80f, gbc.sp());
        EXPECT(0xd34, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4A 01B9
        gbc.setState(0xa1ab, 0x991c, 0x22b0, 0xac42, 0x1505, 0x24ab, 0x1, 0x0);
        gbc.writeMem(0xa1ab, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x991c, gbc.sp());
        EXPECT(0xa1ad, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa1ab));
        EXPECT(0x4a, gbc.readMem(0xa1ac));
        // CB 4A 01BA
        gbc.setState(0x2cfe, 0xe699, 0x340, 0x4a0a, 0x7d82, 0xd19e, 0x1, 0x1);
        gbc.writeMem(0x2cfe, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0xe699, gbc.sp());
        EXPECT(0x2d00, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4A 01BB
        gbc.setState(0x69cc, 0x69ba, 0x1cf0, 0xfcbf, 0xc9e5, 0x70c2, 0x1, 0x0);
        gbc.writeMem(0x69cc, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x69ba, gbc.sp());
        EXPECT(0x69ce, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4A 01BC
        gbc.setState(0xa854, 0x13c0, 0x40d0, 0x285a, 0xb9, 0x3be4, 0x0, 0x0);
        gbc.writeMem(0xa854, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x13c0, gbc.sp());
        EXPECT(0xa856, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa854));
        EXPECT(0x4a, gbc.readMem(0xa855));
        // CB 4A 01BD
        gbc.setState(0x47e9, 0xdff0, 0x78b0, 0x71d3, 0x379e, 0x7423, 0x1, 0x1);
        gbc.writeMem(0x47e9, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0xdff0, gbc.sp());
        EXPECT(0x47eb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4A 01BE
        gbc.setState(0xc1d1, 0xd6e9, 0x9bf0, 0x7cae, 0x7066, 0x6b8d, 0x0, 0x1);
        gbc.writeMem(0xc1d1, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0xd6e9, gbc.sp());
        EXPECT(0xc1d3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc1d1));
        EXPECT(0x4a, gbc.readMem(0xc1d2));
        // CB 4A 01BF
        gbc.setState(0x365a, 0x9e09, 0x3a40, 0xbcce, 0x7f29, 0x20f8, 0x0, 0x0);
        gbc.writeMem(0x365a, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x9e09, gbc.sp());
        EXPECT(0x365c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4A 01C0
        gbc.setState(0xba68, 0x6289, 0x48e0, 0x6f24, 0x566c, 0xe7c9, 0x0, 0x1);
        gbc.writeMem(0xba68, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x6289, gbc.sp());
        EXPECT(0xba6a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xba68));
        EXPECT(0x4a, gbc.readMem(0xba69));
        // CB 4A 01C1
        gbc.setState(0x8cbd, 0x9a86, 0x1ea0, 0x6fa8, 0x10e2, 0x9cfe, 0x1, 0x0);
        gbc.writeMem(0x8cbd, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x9a86, gbc.sp());
        EXPECT(0x8cbf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8cbd));
        EXPECT(0x4a, gbc.readMem(0x8cbe));
        // CB 4A 01C2
        gbc.setState(0xaf32, 0xcc40, 0xa5b0, 0x5e8c, 0x9bcf, 0x7dd5, 0x1, 0x0);
        gbc.writeMem(0xaf32, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0xcc40, gbc.sp());
        EXPECT(0xaf34, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaf32));
        EXPECT(0x4a, gbc.readMem(0xaf33));
        // CB 4A 01C3
        gbc.setState(0x8fda, 0x4b05, 0x40, 0x74f5, 0x64c, 0x20cb, 0x0, 0x0);
        gbc.writeMem(0x8fda, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x4b05, gbc.sp());
        EXPECT(0x8fdc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8fda));
        EXPECT(0x4a, gbc.readMem(0x8fdb));
        // CB 4A 01C4
        gbc.setState(0xa76d, 0xdaea, 0xce30, 0x2f61, 0x8026, 0x7f5c, 0x1, 0x1);
        gbc.writeMem(0xa76d, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0xdaea, gbc.sp());
        EXPECT(0xa76f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa76d));
        EXPECT(0x4a, gbc.readMem(0xa76e));
        // CB 4A 01C5
        gbc.setState(0xb91d, 0xcc8e, 0x51e0, 0xad87, 0xc0e5, 0xed67, 0x1, 0x1);
        gbc.writeMem(0xb91d, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0xcc8e, gbc.sp());
        EXPECT(0xb91f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb91d));
        EXPECT(0x4a, gbc.readMem(0xb91e));
        // CB 4A 01C6
        gbc.setState(0x6324, 0xefa5, 0xf690, 0x943b, 0xaf, 0x7f8, 0x1, 0x0);
        gbc.writeMem(0x6324, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0xefa5, gbc.sp());
        EXPECT(0x6326, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4A 01C7
        gbc.setState(0xd1e6, 0x74d3, 0x8160, 0x88c6, 0x3c6c, 0x5b37, 0x1, 0x0);
        gbc.writeMem(0xd1e6, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x74d3, gbc.sp());
        EXPECT(0xd1e8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd1e6));
        EXPECT(0x4a, gbc.readMem(0xd1e7));
        // CB 4A 01C8
        gbc.setState(0x87ba, 0x2277, 0x1b10, 0x7837, 0x5643, 0x80c3, 0x1, 0x0);
        gbc.writeMem(0x87ba, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x2277, gbc.sp());
        EXPECT(0x87bc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x87ba));
        EXPECT(0x4a, gbc.readMem(0x87bb));
        // CB 4A 01C9
        gbc.setState(0x5d1f, 0x2fc1, 0x47c0, 0xa9cc, 0x2679, 0xea82, 0x1, 0x0);
        gbc.writeMem(0x5d1f, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x2fc1, gbc.sp());
        EXPECT(0x5d21, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4A 01CA
        gbc.setState(0xb6e1, 0xf078, 0xac80, 0xbe0d, 0x1775, 0x1519, 0x0, 0x0);
        gbc.writeMem(0xb6e1, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0xf078, gbc.sp());
        EXPECT(0xb6e3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb6e1));
        EXPECT(0x4a, gbc.readMem(0xb6e2));
        // CB 4A 01CB
        gbc.setState(0xa244, 0x1a8d, 0xf000, 0x9900, 0xeb1e, 0xd6e8, 0x1, 0x0);
        gbc.writeMem(0xa244, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x1a8d, gbc.sp());
        EXPECT(0xa246, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa244));
        EXPECT(0x4a, gbc.readMem(0xa245));
        // CB 4A 01CC
        gbc.setState(0x3d0e, 0xfe83, 0x9890, 0x1ca2, 0x2167, 0x91d, 0x1, 0x0);
        gbc.writeMem(0x3d0e, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0xfe83, gbc.sp());
        EXPECT(0x3d10, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4A 01CD
        gbc.setState(0xaad2, 0xd9be, 0x48f0, 0x436, 0x5bf3, 0xc43a, 0x1, 0x0);
        gbc.writeMem(0xaad2, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0xd9be, gbc.sp());
        EXPECT(0xaad4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaad2));
        EXPECT(0x4a, gbc.readMem(0xaad3));
        // CB 4A 01CE
        gbc.setState(0x28d3, 0x67da, 0x2140, 0xa834, 0x8600, 0xfff3, 0x0, 0x1);
        gbc.writeMem(0x28d3, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x67da, gbc.sp());
        EXPECT(0x28d5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4A 01CF
        gbc.setState(0x68a1, 0xcef9, 0xbee0, 0xbfa1, 0x1a36, 0x747c, 0x1, 0x1);
        gbc.writeMem(0x68a1, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0xcef9, gbc.sp());
        EXPECT(0x68a3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4A 01D0
        gbc.setState(0x78df, 0x4c6a, 0xe850, 0x8ac7, 0xfaa3, 0xe760, 0x1, 0x1);
        gbc.writeMem(0x78df, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x4c6a, gbc.sp());
        EXPECT(0x78e1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4A 01D1
        gbc.setState(0x5abb, 0x2cdd, 0xd6b0, 0x53cd, 0x3008, 0xcd3d, 0x1, 0x1);
        gbc.writeMem(0x5abb, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x2cdd, gbc.sp());
        EXPECT(0x5abd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4A 01D2
        gbc.setState(0x9c2f, 0x14d1, 0x7e0, 0xe7a5, 0x17d6, 0x2c86, 0x0, 0x1);
        gbc.writeMem(0x9c2f, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x14d1, gbc.sp());
        EXPECT(0x9c31, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9c2f));
        EXPECT(0x4a, gbc.readMem(0x9c30));
        // CB 4A 01D3
        gbc.setState(0xb5e9, 0x214d, 0xe390, 0x54b0, 0xa774, 0x402a, 0x1, 0x0);
        gbc.writeMem(0xb5e9, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x214d, gbc.sp());
        EXPECT(0xb5eb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb5e9));
        EXPECT(0x4a, gbc.readMem(0xb5ea));
        // CB 4A 01D4
        gbc.setState(0x691b, 0x433b, 0xa750, 0x93ce, 0x350f, 0x93d0, 0x1, 0x1);
        gbc.writeMem(0x691b, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x433b, gbc.sp());
        EXPECT(0x691d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4A 01D5
        gbc.setState(0xece, 0x5a37, 0xeed0, 0xffe4, 0xbc10, 0x61d8, 0x1, 0x0);
        gbc.writeMem(0xece, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x5a37, gbc.sp());
        EXPECT(0xed0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4A 01D6
        gbc.setState(0x641a, 0x2ce2, 0x2fd0, 0x3e88, 0x5b1b, 0x9f2c, 0x0, 0x1);
        gbc.writeMem(0x641a, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x2ce2, gbc.sp());
        EXPECT(0x641c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4A 01D7
        gbc.setState(0xb894, 0xc84f, 0xbf50, 0x3058, 0x2859, 0xa909, 0x1, 0x1);
        gbc.writeMem(0xb894, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0xc84f, gbc.sp());
        EXPECT(0xb896, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb894));
        EXPECT(0x4a, gbc.readMem(0xb895));
        // CB 4A 01D9
        gbc.setState(0x1084, 0x7576, 0xbe10, 0x7f2d, 0x4e3c, 0xc298, 0x1, 0x1);
        gbc.writeMem(0x1084, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x7576, gbc.sp());
        EXPECT(0x1086, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4A 01DA
        gbc.setState(0x6b71, 0x3a33, 0x8270, 0x71d5, 0xece0, 0x70aa, 0x0, 0x1);
        gbc.writeMem(0x6b71, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x3a33, gbc.sp());
        EXPECT(0x6b73, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4A 01DB
        gbc.setState(0xe02f, 0x3e14, 0x3c90, 0xe0ec, 0xd602, 0x9829, 0x1, 0x1);
        gbc.writeMem(0xe02f, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x3e14, gbc.sp());
        EXPECT(0xe031, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe02f));
        EXPECT(0x4a, gbc.readMem(0xe030));
        // CB 4A 01DC
        gbc.setState(0x7dcc, 0x3c43, 0x6610, 0x4609, 0x7549, 0x38fb, 0x1, 0x0);
        gbc.writeMem(0x7dcc, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x3c43, gbc.sp());
        EXPECT(0x7dce, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4A 01DD
        gbc.setState(0x21a9, 0x9f9f, 0xe1d0, 0x469f, 0x4317, 0x486e, 0x1, 0x1);
        gbc.writeMem(0x21a9, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x9f9f, gbc.sp());
        EXPECT(0x21ab, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4A 01DE
        gbc.setState(0x687e, 0x10, 0xc400, 0x52b, 0x8beb, 0x3ba5, 0x1, 0x0);
        gbc.writeMem(0x687e, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x10, gbc.sp());
        EXPECT(0x6880, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4A 01DF
        gbc.setState(0xc3f, 0xd7ee, 0x53c0, 0x3069, 0x7ec, 0x733c, 0x0, 0x0);
        gbc.writeMem(0xc3f, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0xd7ee, gbc.sp());
        EXPECT(0xc41, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4A 01E0
        gbc.setState(0x330, 0x6424, 0x8140, 0xe782, 0x1f29, 0xf651, 0x0, 0x0);
        gbc.writeMem(0x330, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x6424, gbc.sp());
        EXPECT(0x332, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4A 01E2
        gbc.setState(0x4c6d, 0xd7a9, 0x5270, 0xcdb3, 0xef5b, 0xcb9, 0x1, 0x1);
        gbc.writeMem(0x4c6d, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0xd7a9, gbc.sp());
        EXPECT(0x4c6f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4A 01E3
        gbc.setState(0x46bc, 0xbd1e, 0x1a0, 0xbffe, 0x25c3, 0x9445, 0x0, 0x0);
        gbc.writeMem(0x46bc, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0xbd1e, gbc.sp());
        EXPECT(0x46be, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4A 01E4
        gbc.setState(0xe4c4, 0xda2d, 0xd790, 0x43e6, 0x6278, 0xaa41, 0x0, 0x0);
        gbc.writeMem(0xe4c4, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0xda2d, gbc.sp());
        EXPECT(0xe4c6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe4c4));
        EXPECT(0x4a, gbc.readMem(0xe4c5));
        // CB 4A 01E5
        gbc.setState(0x567a, 0xcf93, 0xd4e0, 0x830, 0x45b2, 0xb502, 0x0, 0x1);
        gbc.writeMem(0x567a, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0xcf93, gbc.sp());
        EXPECT(0x567c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4A 01E6
        gbc.setState(0x34c9, 0xf1da, 0x41c0, 0x90bd, 0x5d8e, 0xa7f2, 0x1, 0x1);
        gbc.writeMem(0x34c9, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0xf1da, gbc.sp());
        EXPECT(0x34cb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4A 01E7
        gbc.setState(0xa532, 0xdb18, 0xe7f0, 0x4ea, 0xde04, 0xd370, 0x1, 0x1);
        gbc.writeMem(0xa532, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0xdb18, gbc.sp());
        EXPECT(0xa534, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa532));
        EXPECT(0x4a, gbc.readMem(0xa533));
        // CB 4A 01E9
        gbc.setState(0xe4f5, 0x807, 0x80e0, 0x8492, 0x344a, 0x3846, 0x0, 0x0);
        gbc.writeMem(0xe4f5, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x807, gbc.sp());
        EXPECT(0xe4f7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe4f5));
        EXPECT(0x4a, gbc.readMem(0xe4f6));
        // CB 4A 01EA
        gbc.setState(0x2b7c, 0x42c9, 0x7c80, 0x769c, 0xb58d, 0xa561, 0x0, 0x0);
        gbc.writeMem(0x2b7c, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x42c9, gbc.sp());
        EXPECT(0x2b7e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4A 01EB
        gbc.setState(0x5e7b, 0xceb7, 0x8d70, 0x5326, 0x966c, 0xbe16, 0x1, 0x0);
        gbc.writeMem(0x5e7b, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0xceb7, gbc.sp());
        EXPECT(0x5e7d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4A 01EC
        gbc.setState(0xe08e, 0xc4be, 0xf280, 0xf604, 0x1cc1, 0x9033, 0x1, 0x0);
        gbc.writeMem(0xe08e, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0xc4be, gbc.sp());
        EXPECT(0xe090, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe08e));
        EXPECT(0x4a, gbc.readMem(0xe08f));
        // CB 4A 01ED
        gbc.setState(0x4a00, 0x3352, 0x3ac0, 0xd2b0, 0x871c, 0x980b, 0x0, 0x0);
        gbc.writeMem(0x4a00, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x3352, gbc.sp());
        EXPECT(0x4a02, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4A 01EE
        gbc.setState(0xe0af, 0x949b, 0x9110, 0xe4d9, 0xc133, 0xe050, 0x0, 0x1);
        gbc.writeMem(0xe0af, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x949b, gbc.sp());
        EXPECT(0xe0b1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe0af));
        EXPECT(0x4a, gbc.readMem(0xe0b0));
        // CB 4A 01F0
        gbc.setState(0x922, 0x8b58, 0x8e40, 0xd7f, 0x5ade, 0xd0fd, 0x0, 0x1);
        gbc.writeMem(0x922, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x8b58, gbc.sp());
        EXPECT(0x924, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4A 01F1
        gbc.setState(0x21fd, 0xc94f, 0xcc00, 0x6bb6, 0x53d8, 0xdc62, 0x0, 0x1);
        gbc.writeMem(0x21fd, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0xc94f, gbc.sp());
        EXPECT(0x21ff, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4A 01F2
        gbc.setState(0xb6f5, 0x74ac, 0xfc50, 0x7a7a, 0xd0c9, 0x77d2, 0x1, 0x0);
        gbc.writeMem(0xb6f5, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x74ac, gbc.sp());
        EXPECT(0xb6f7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb6f5));
        EXPECT(0x4a, gbc.readMem(0xb6f6));
        // CB 4A 01F3
        gbc.setState(0x5f96, 0x1430, 0x7c60, 0xb305, 0x450c, 0x6a63, 0x0, 0x1);
        gbc.writeMem(0x5f96, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x1430, gbc.sp());
        EXPECT(0x5f98, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4A 01F4
        gbc.setState(0x9b9, 0xa5db, 0xe3c0, 0xc611, 0xeaee, 0x6e44, 0x1, 0x0);
        gbc.writeMem(0x9b9, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0xa5db, gbc.sp());
        EXPECT(0x9bb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4A 01F5
        gbc.setState(0x35ab, 0x17e1, 0x2910, 0xa002, 0xd552, 0xa988, 0x0, 0x0);
        gbc.writeMem(0x35ab, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x17e1, gbc.sp());
        EXPECT(0x35ad, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4A 01F6
        gbc.setState(0x17ed, 0xada3, 0x1a40, 0x87a3, 0x6f58, 0xfdf7, 0x0, 0x1);
        gbc.writeMem(0x17ed, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0xada3, gbc.sp());
        EXPECT(0x17ef, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4A 01F7
        gbc.setState(0x7cb, 0x14a4, 0x8300, 0x9d44, 0xb47e, 0x1b7c, 0x1, 0x0);
        gbc.writeMem(0x7cb, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x14a4, gbc.sp());
        EXPECT(0x7cd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4A 01F8
        gbc.setState(0xc960, 0xb23c, 0xac10, 0xd748, 0x95d1, 0xe61, 0x1, 0x1);
        gbc.writeMem(0xc960, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0xb23c, gbc.sp());
        EXPECT(0xc962, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc960));
        EXPECT(0x4a, gbc.readMem(0xc961));
        // CB 4A 01F9
        gbc.setState(0xa065, 0x5723, 0x7ab0, 0x9086, 0x90c3, 0xdc94, 0x1, 0x1);
        gbc.writeMem(0xa065, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x5723, gbc.sp());
        EXPECT(0xa067, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa065));
        EXPECT(0x4a, gbc.readMem(0xa066));
        // CB 4A 01FA
        gbc.setState(0x57c6, 0x485f, 0x6680, 0x4788, 0xd54e, 0x4b00, 0x1, 0x0);
        gbc.writeMem(0x57c6, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x485f, gbc.sp());
        EXPECT(0x57c8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4A 01FB
        gbc.setState(0xdad2, 0x653f, 0xe440, 0x3214, 0x75f3, 0x5c85, 0x0, 0x1);
        gbc.writeMem(0xdad2, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x653f, gbc.sp());
        EXPECT(0xdad4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdad2));
        EXPECT(0x4a, gbc.readMem(0xdad3));
        // CB 4A 01FC
        gbc.setState(0xc380, 0xbb12, 0x4e00, 0xe659, 0xed65, 0xdd18, 0x0, 0x1);
        gbc.writeMem(0xc380, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0xbb12, gbc.sp());
        EXPECT(0xc382, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc380));
        EXPECT(0x4a, gbc.readMem(0xc381));
        // CB 4A 01FD
        gbc.setState(0x9826, 0xdfc6, 0xe980, 0x3ee0, 0x8c8, 0xc71b, 0x0, 0x1);
        gbc.writeMem(0x9826, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0xdfc6, gbc.sp());
        EXPECT(0x9828, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9826));
        EXPECT(0x4a, gbc.readMem(0x9827));
        // CB 4A 01FE
        gbc.setState(0xc4cb, 0xde2, 0x5520, 0xdfd1, 0x2ac0, 0x1c42, 0x0, 0x1);
        gbc.writeMem(0xc4cb, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0xde2, gbc.sp());
        EXPECT(0xc4cd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc4cb));
        EXPECT(0x4a, gbc.readMem(0xc4cc));
        // CB 4A 01FF
        gbc.setState(0xec3c, 0x9fa4, 0x6050, 0xc34d, 0x91f6, 0xc21f, 0x1, 0x0);
        gbc.writeMem(0xec3c, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x9fa4, gbc.sp());
        EXPECT(0xec3e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xec3c));
        EXPECT(0x4a, gbc.readMem(0xec3d));
        // CB 4A 0200
        gbc.setState(0x6f66, 0x2038, 0x1be0, 0x65ef, 0x211f, 0x4e7d, 0x0, 0x1);
        gbc.writeMem(0x6f66, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x2038, gbc.sp());
        EXPECT(0x6f68, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4A 0201
        gbc.setState(0x606e, 0x7151, 0x8d80, 0x27d2, 0xe244, 0xa71e, 0x0, 0x1);
        gbc.writeMem(0x606e, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x7151, gbc.sp());
        EXPECT(0x6070, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4A 0202
        gbc.setState(0x4f52, 0xe7e5, 0x21f0, 0x835e, 0xbe32, 0x2843, 0x0, 0x1);
        gbc.writeMem(0x4f52, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0xe7e5, gbc.sp());
        EXPECT(0x4f54, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4A 0203
        gbc.setState(0x79c8, 0x129d, 0x82d0, 0xbe13, 0x145c, 0x7a58, 0x0, 0x0);
        gbc.writeMem(0x79c8, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x129d, gbc.sp());
        EXPECT(0x79ca, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4A 0204
        gbc.setState(0x8a35, 0x8433, 0x2d00, 0x596f, 0x50a8, 0xfb8a, 0x0, 0x0);
        gbc.writeMem(0x8a35, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x8433, gbc.sp());
        EXPECT(0x8a37, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8a35));
        EXPECT(0x4a, gbc.readMem(0x8a36));
        // CB 4A 0205
        gbc.setState(0x209b, 0x90bb, 0xa9a0, 0x7e27, 0x147a, 0xfe7c, 0x1, 0x0);
        gbc.writeMem(0x209b, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x90bb, gbc.sp());
        EXPECT(0x209d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4A 0206
        gbc.setState(0x2727, 0x7d42, 0x6ad0, 0x3f6f, 0xf8cb, 0x18fb, 0x0, 0x0);
        gbc.writeMem(0x2727, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x7d42, gbc.sp());
        EXPECT(0x2729, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4A 0207
        gbc.setState(0x780b, 0x8989, 0x52d0, 0xa972, 0x38aa, 0xde66, 0x1, 0x0);
        gbc.writeMem(0x780b, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x8989, gbc.sp());
        EXPECT(0x780d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4A 0208
        gbc.setState(0xe5ec, 0x303d, 0x5670, 0xde2d, 0x5d6a, 0x9892, 0x1, 0x1);
        gbc.writeMem(0xe5ec, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x303d, gbc.sp());
        EXPECT(0xe5ee, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe5ec));
        EXPECT(0x4a, gbc.readMem(0xe5ed));
        // CB 4A 0209
        gbc.setState(0x4dfd, 0x1f98, 0xe590, 0x49e8, 0xab1d, 0xd61e, 0x1, 0x1);
        gbc.writeMem(0x4dfd, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x1f98, gbc.sp());
        EXPECT(0x4dff, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4A 020A
        gbc.setState(0x8a19, 0x3532, 0x1900, 0x9fb, 0x4398, 0x83ae, 0x0, 0x0);
        gbc.writeMem(0x8a19, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0x3532, gbc.sp());
        EXPECT(0x8a1b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8a19));
        EXPECT(0x4a, gbc.readMem(0x8a1a));
        // CB 4A 020B
        gbc.setState(0xdb4e, 0x17c6, 0x2f20, 0x4cd7, 0x8e00, 0xbb02, 0x0, 0x1);
        gbc.writeMem(0xdb4e, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x17c6, gbc.sp());
        EXPECT(0xdb50, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdb4e));
        EXPECT(0x4a, gbc.readMem(0xdb4f));
        // CB 4A 020C
        gbc.setState(0x51f1, 0xa59e, 0x9a0, 0x9fc3, 0xf0ec, 0x3123, 0x1, 0x1);
        gbc.writeMem(0x51f1, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0xa59e, gbc.sp());
        EXPECT(0x51f3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4A 020D
        gbc.setState(0xd1d, 0x831c, 0x5a0, 0x83f8, 0x67e0, 0xd865, 0x0, 0x1);
        gbc.writeMem(0xd1d, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x831c, gbc.sp());
        EXPECT(0xd1f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4A 020E
        gbc.setState(0x75c0, 0x80f8, 0x5d80, 0x51e6, 0xec7b, 0xb882, 0x0, 0x1);
        gbc.writeMem(0x75c0, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x80f8, gbc.sp());
        EXPECT(0x75c2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4A 020F
        gbc.setState(0x7385, 0x2c42, 0x1da0, 0xf44f, 0x75c9, 0x3428, 0x1, 0x1);
        gbc.writeMem(0x7385, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x2c42, gbc.sp());
        EXPECT(0x7387, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4A 0210
        gbc.setState(0xd72e, 0x668b, 0xebc0, 0xaee9, 0x9b99, 0x17dd, 0x0, 0x1);
        gbc.writeMem(0xd72e, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x668b, gbc.sp());
        EXPECT(0xd730, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd72e));
        EXPECT(0x4a, gbc.readMem(0xd72f));
        // CB 4A 0211
        gbc.setState(0xc660, 0x7699, 0x88f0, 0x8f50, 0xf77b, 0x3934, 0x1, 0x1);
        gbc.writeMem(0xc660, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x7699, gbc.sp());
        EXPECT(0xc662, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc660));
        EXPECT(0x4a, gbc.readMem(0xc661));
        // CB 4A 0212
        gbc.setState(0x5477, 0x5a12, 0xa0c0, 0x37aa, 0x4bda, 0xe69c, 0x1, 0x0);
        gbc.writeMem(0x5477, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x5a12, gbc.sp());
        EXPECT(0x5479, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4A 0214
        gbc.setState(0x8589, 0xd95a, 0xb660, 0x9893, 0x1a44, 0x34c6, 0x0, 0x1);
        gbc.writeMem(0x8589, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0xd95a, gbc.sp());
        EXPECT(0x858b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8589));
        EXPECT(0x4a, gbc.readMem(0x858a));
        // CB 4A 0215
        gbc.setState(0x8549, 0x4dbf, 0x4a30, 0xad46, 0x797, 0xfb67, 0x1, 0x1);
        gbc.writeMem(0x8549, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x4dbf, gbc.sp());
        EXPECT(0x854b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8549));
        EXPECT(0x4a, gbc.readMem(0x854a));
        // CB 4A 0216
        gbc.setState(0x8fed, 0xb6c, 0xa5b0, 0x7f5c, 0xff70, 0x36ca, 0x1, 0x1);
        gbc.writeMem(0x8fed, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0xb6c, gbc.sp());
        EXPECT(0x8fef, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8fed));
        EXPECT(0x4a, gbc.readMem(0x8fee));
        // CB 4A 0217
        gbc.setState(0x8a94, 0xc839, 0x5fe0, 0xc2df, 0xf9c, 0x1f1, 0x1, 0x1);
        gbc.writeMem(0x8a94, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0xc839, gbc.sp());
        EXPECT(0x8a96, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8a94));
        EXPECT(0x4a, gbc.readMem(0x8a95));
        // CB 4A 0218
        gbc.setState(0x1554, 0x3473, 0xc130, 0x2998, 0x4d38, 0xf7d, 0x0, 0x1);
        gbc.writeMem(0x1554, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x3473, gbc.sp());
        EXPECT(0x1556, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4A 0219
        gbc.setState(0x2243, 0x7d10, 0xcc30, 0x5292, 0x977b, 0xa4d4, 0x0, 0x0);
        gbc.writeMem(0x2243, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x7d10, gbc.sp());
        EXPECT(0x2245, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4A 021A
        gbc.setState(0x7a9b, 0xb333, 0xc2d0, 0xc7b4, 0xa709, 0xfba4, 0x0, 0x0);
        gbc.writeMem(0x7a9b, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0xb333, gbc.sp());
        EXPECT(0x7a9d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4A 021B
        gbc.setState(0x6f5d, 0xe267, 0x1b80, 0xafde, 0x680f, 0x1161, 0x0, 0x1);
        gbc.writeMem(0x6f5d, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0xe267, gbc.sp());
        EXPECT(0x6f5f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4A 021C
        gbc.setState(0x7fbf, 0xc2ab, 0xdd90, 0xb136, 0x47b0, 0xe667, 0x1, 0x0);
        gbc.writeMem(0x7fbf, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0xc2ab, gbc.sp());
        EXPECT(0x7fc1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4A 021D
        gbc.setState(0x7085, 0x3630, 0x8b70, 0x9d4f, 0x6dcc, 0x13ed, 0x1, 0x1);
        gbc.writeMem(0x7085, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x3630, gbc.sp());
        EXPECT(0x7087, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4A 021E
        gbc.setState(0x4b19, 0x9e30, 0xa370, 0x5a1a, 0x35a7, 0xc437, 0x1, 0x0);
        gbc.writeMem(0x4b19, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x9e30, gbc.sp());
        EXPECT(0x4b1b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4A 021F
        gbc.setState(0xcb38, 0xe7a2, 0x25a0, 0xc9dd, 0x43d3, 0xc727, 0x0, 0x1);
        gbc.writeMem(0xcb38, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0xe7a2, gbc.sp());
        EXPECT(0xcb3a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcb38));
        EXPECT(0x4a, gbc.readMem(0xcb39));
        // CB 4A 0220
        gbc.setState(0x3fc, 0x525d, 0xe5d0, 0x5706, 0x9e3, 0xd524, 0x1, 0x1);
        gbc.writeMem(0x3fc, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x525d, gbc.sp());
        EXPECT(0x3fe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4A 0221
        gbc.setState(0xc1d6, 0x45a7, 0x1870, 0x31c0, 0x5db, 0xa274, 0x1, 0x1);
        gbc.writeMem(0xc1d6, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x45a7, gbc.sp());
        EXPECT(0xc1d8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc1d6));
        EXPECT(0x4a, gbc.readMem(0xc1d7));
        // CB 4A 0222
        gbc.setState(0x1a02, 0x31a2, 0xc7a0, 0xc672, 0x6df3, 0xcc67, 0x1, 0x0);
        gbc.writeMem(0x1a02, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x31a2, gbc.sp());
        EXPECT(0x1a04, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4A 0223
        gbc.setState(0x2211, 0x3176, 0x44a0, 0xcc2c, 0x4a01, 0x82cb, 0x0, 0x0);
        gbc.writeMem(0x2211, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x3176, gbc.sp());
        EXPECT(0x2213, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4A 0224
        gbc.setState(0x3c37, 0xf4c2, 0xcd10, 0xff9d, 0x2c8a, 0x8ea6, 0x0, 0x0);
        gbc.writeMem(0x3c37, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0xf4c2, gbc.sp());
        EXPECT(0x3c39, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4A 0225
        gbc.setState(0x6d45, 0x9d, 0x2720, 0xa9a, 0x63ae, 0x62ef, 0x0, 0x0);
        gbc.writeMem(0x6d45, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x9d, gbc.sp());
        EXPECT(0x6d47, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4A 0227
        gbc.setState(0x4e9f, 0x28b0, 0x2bd0, 0x637d, 0x6e88, 0xaac5, 0x1, 0x1);
        gbc.writeMem(0x4e9f, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x28b0, gbc.sp());
        EXPECT(0x4ea1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4A 0228
        gbc.setState(0x20fa, 0xe039, 0xd30, 0xc87, 0xa20b, 0x5cab, 0x0, 0x0);
        gbc.writeMem(0x20fa, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0xe039, gbc.sp());
        EXPECT(0x20fc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4A 0229
        gbc.setState(0xc7f1, 0x6f31, 0xa3f0, 0x469b, 0x8832, 0xb523, 0x0, 0x1);
        gbc.writeMem(0xc7f1, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x6f31, gbc.sp());
        EXPECT(0xc7f3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc7f1));
        EXPECT(0x4a, gbc.readMem(0xc7f2));
        // CB 4A 022A
        gbc.setState(0x2aca, 0x18a, 0xf9f0, 0xd16, 0xfa7d, 0x82d3, 0x1, 0x1);
        gbc.writeMem(0x2aca, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x18a, gbc.sp());
        EXPECT(0x2acc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4A 022B
        gbc.setState(0xed25, 0x231, 0x770, 0x1b7e, 0xbec4, 0xe1ba, 0x1, 0x1);
        gbc.writeMem(0xed25, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0x231, gbc.sp());
        EXPECT(0xed27, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xed25));
        EXPECT(0x4a, gbc.readMem(0xed26));
        // CB 4A 022D
        gbc.setState(0x6e3f, 0x33a9, 0xedb0, 0x1dd, 0xb8ea, 0x77cd, 0x1, 0x1);
        gbc.writeMem(0x6e3f, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x33a9, gbc.sp());
        EXPECT(0x6e41, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4A 022E
        gbc.setState(0x5102, 0xe8bb, 0xe4b0, 0x2341, 0xbb73, 0x88b, 0x0, 0x1);
        gbc.writeMem(0x5102, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0xe8bb, gbc.sp());
        EXPECT(0x5104, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4A 022F
        gbc.setState(0x2c9, 0xf8a, 0x6310, 0x880c, 0x5fb8, 0x8e5d, 0x1, 0x0);
        gbc.writeMem(0x2c9, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0xf8a, gbc.sp());
        EXPECT(0x2cb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4A 0230
        gbc.setState(0xc2c2, 0x4fd8, 0x4790, 0x8b4, 0x1d3c, 0x5f9a, 0x0, 0x0);
        gbc.writeMem(0xc2c2, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x4fd8, gbc.sp());
        EXPECT(0xc2c4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc2c2));
        EXPECT(0x4a, gbc.readMem(0xc2c3));
        // CB 4A 0231
        gbc.setState(0x6865, 0xf241, 0x53b0, 0x3cd8, 0x51ab, 0xeebf, 0x0, 0x0);
        gbc.writeMem(0x6865, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0xf241, gbc.sp());
        EXPECT(0x6867, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4A 0232
        gbc.setState(0xe003, 0xc452, 0x1040, 0x18e5, 0xcd50, 0xdb69, 0x0, 0x0);
        gbc.writeMem(0xe003, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0xc452, gbc.sp());
        EXPECT(0xe005, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe003));
        EXPECT(0x4a, gbc.readMem(0xe004));
        // CB 4A 0233
        gbc.setState(0xd78e, 0x3fc7, 0xef30, 0x28a6, 0x22a2, 0xdd18, 0x0, 0x1);
        gbc.writeMem(0xd78e, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x3fc7, gbc.sp());
        EXPECT(0xd790, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd78e));
        EXPECT(0x4a, gbc.readMem(0xd78f));
        // CB 4A 0234
        gbc.setState(0x256f, 0x57c4, 0x5d40, 0x5ce8, 0xc7b5, 0x23ec, 0x0, 0x0);
        gbc.writeMem(0x256f, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x57c4, gbc.sp());
        EXPECT(0x2571, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4A 0235
        gbc.setState(0x2a74, 0x376e, 0xf910, 0xc449, 0xadb2, 0xe948, 0x1, 0x0);
        gbc.writeMem(0x2a74, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0x376e, gbc.sp());
        EXPECT(0x2a76, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4A 0236
        gbc.setState(0x7474, 0x2c23, 0x5380, 0x276, 0x3136, 0x3a27, 0x0, 0x1);
        gbc.writeMem(0x7474, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x2c23, gbc.sp());
        EXPECT(0x7476, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4A 0237
        gbc.setState(0x22eb, 0x15a5, 0x2ec0, 0xd8e7, 0x24e7, 0x5ac1, 0x1, 0x1);
        gbc.writeMem(0x22eb, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x15a5, gbc.sp());
        EXPECT(0x22ed, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4A 0238
        gbc.setState(0x4c66, 0x8c16, 0x72a0, 0xf89d, 0xb684, 0xb52c, 0x1, 0x1);
        gbc.writeMem(0x4c66, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x8c16, gbc.sp());
        EXPECT(0x4c68, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4A 0239
        gbc.setState(0xd41e, 0x823f, 0xf020, 0xa492, 0xfd07, 0xd08b, 0x1, 0x1);
        gbc.writeMem(0xd41e, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x823f, gbc.sp());
        EXPECT(0xd420, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd41e));
        EXPECT(0x4a, gbc.readMem(0xd41f));
        // CB 4A 023A
        gbc.setState(0xb7e9, 0x361b, 0x9560, 0xebe9, 0x8360, 0xde5c, 0x1, 0x0);
        gbc.writeMem(0xb7e9, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x361b, gbc.sp());
        EXPECT(0xb7eb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb7e9));
        EXPECT(0x4a, gbc.readMem(0xb7ea));
        // CB 4A 023B
        gbc.setState(0x69c4, 0xd59e, 0xd510, 0x4e88, 0x5cdb, 0x813a, 0x1, 0x0);
        gbc.writeMem(0x69c4, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0xd59e, gbc.sp());
        EXPECT(0x69c6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4A 023C
        gbc.setState(0x72c2, 0x929c, 0xf9c0, 0x1a52, 0x3a7d, 0x3dfb, 0x1, 0x1);
        gbc.writeMem(0x72c2, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x929c, gbc.sp());
        EXPECT(0x72c4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4A 023D
        gbc.setState(0x6eca, 0x7677, 0x5dc0, 0x6778, 0xf0cb, 0x9a2d, 0x0, 0x1);
        gbc.writeMem(0x6eca, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x7677, gbc.sp());
        EXPECT(0x6ecc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4A 023E
        gbc.setState(0xeaed, 0xaca9, 0x3f80, 0x649b, 0xcebd, 0x3eea, 0x0, 0x1);
        gbc.writeMem(0xeaed, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0xaca9, gbc.sp());
        EXPECT(0xeaef, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeaed));
        EXPECT(0x4a, gbc.readMem(0xeaee));
        // CB 4A 023F
        gbc.setState(0xafae, 0xc8f4, 0xd3a0, 0xf815, 0x96e4, 0xc84, 0x1, 0x0);
        gbc.writeMem(0xafae, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0xc8f4, gbc.sp());
        EXPECT(0xafb0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xafae));
        EXPECT(0x4a, gbc.readMem(0xafaf));
        // CB 4A 0240
        gbc.setState(0x5ea0, 0xa59a, 0xeab0, 0xad3, 0x6ba4, 0x2559, 0x1, 0x1);
        gbc.writeMem(0x5ea0, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0xa59a, gbc.sp());
        EXPECT(0x5ea2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4A 0241
        gbc.setState(0x92dd, 0xba75, 0x3690, 0x53d7, 0xc207, 0x7bb8, 0x1, 0x0);
        gbc.writeMem(0x92dd, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0xba75, gbc.sp());
        EXPECT(0x92df, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x92dd));
        EXPECT(0x4a, gbc.readMem(0x92de));
        // CB 4A 0242
        gbc.setState(0xc3af, 0xe9b5, 0xb6c0, 0x3399, 0x88d9, 0xe409, 0x0, 0x0);
        gbc.writeMem(0xc3af, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0xe9b5, gbc.sp());
        EXPECT(0xc3b1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc3af));
        EXPECT(0x4a, gbc.readMem(0xc3b0));
        // CB 4A 0243
        gbc.setState(0x3444, 0x8203, 0xbcf0, 0x6c41, 0x2643, 0xe3f0, 0x0, 0x0);
        gbc.writeMem(0x3444, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x8203, gbc.sp());
        EXPECT(0x3446, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4A 0244
        gbc.setState(0x8729, 0x1e3b, 0x2dc0, 0xbcc7, 0xb58d, 0xe5f9, 0x1, 0x1);
        gbc.writeMem(0x8729, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x1e3b, gbc.sp());
        EXPECT(0x872b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8729));
        EXPECT(0x4a, gbc.readMem(0x872a));
        // CB 4A 0245
        gbc.setState(0xc095, 0x529f, 0xe440, 0x8b5a, 0x9871, 0x3c47, 0x0, 0x0);
        gbc.writeMem(0xc095, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x529f, gbc.sp());
        EXPECT(0xc097, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc095));
        EXPECT(0x4a, gbc.readMem(0xc096));
        // CB 4A 0246
        gbc.setState(0xc021, 0x7565, 0x6110, 0x284c, 0xfcb5, 0x3fa5, 0x0, 0x1);
        gbc.writeMem(0xc021, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x7565, gbc.sp());
        EXPECT(0xc023, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc021));
        EXPECT(0x4a, gbc.readMem(0xc022));
        // CB 4A 0247
        gbc.setState(0x9cfc, 0x3228, 0xf070, 0x1122, 0x4cc2, 0xcc7f, 0x1, 0x1);
        gbc.writeMem(0x9cfc, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x3228, gbc.sp());
        EXPECT(0x9cfe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9cfc));
        EXPECT(0x4a, gbc.readMem(0x9cfd));
        // CB 4A 0248
        gbc.setState(0xdbd2, 0x193d, 0xc1f0, 0x1108, 0x751a, 0x93a, 0x1, 0x0);
        gbc.writeMem(0xdbd2, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x193d, gbc.sp());
        EXPECT(0xdbd4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdbd2));
        EXPECT(0x4a, gbc.readMem(0xdbd3));
        // CB 4A 0249
        gbc.setState(0xcddd, 0xe475, 0xa440, 0x2627, 0x14b3, 0xa608, 0x1, 0x0);
        gbc.writeMem(0xcddd, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0xe475, gbc.sp());
        EXPECT(0xcddf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcddd));
        EXPECT(0x4a, gbc.readMem(0xcdde));
        // CB 4A 024A
        gbc.setState(0x9069, 0x39a3, 0x8ff0, 0x9f0d, 0xfbe4, 0x7586, 0x0, 0x0);
        gbc.writeMem(0x9069, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x39a3, gbc.sp());
        EXPECT(0x906b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9069));
        EXPECT(0x4a, gbc.readMem(0x906a));
        // CB 4A 024B
        gbc.setState(0x863b, 0xca5a, 0xd2d0, 0x5dae, 0x6a77, 0x7e5e, 0x0, 0x0);
        gbc.writeMem(0x863b, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0xca5a, gbc.sp());
        EXPECT(0x863d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x863b));
        EXPECT(0x4a, gbc.readMem(0x863c));
        // CB 4A 024C
        gbc.setState(0x6e4a, 0x946f, 0x9ae0, 0x4bbb, 0x44e1, 0x5217, 0x0, 0x1);
        gbc.writeMem(0x6e4a, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x946f, gbc.sp());
        EXPECT(0x6e4c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4A 024D
        gbc.setState(0xa37e, 0x1bae, 0xae60, 0x2654, 0x71fc, 0x61de, 0x0, 0x0);
        gbc.writeMem(0xa37e, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x1bae, gbc.sp());
        EXPECT(0xa380, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa37e));
        EXPECT(0x4a, gbc.readMem(0xa37f));
        // CB 4A 024E
        gbc.setState(0xa322, 0xf470, 0x240, 0xc39f, 0x2b8c, 0x15a, 0x1, 0x0);
        gbc.writeMem(0xa322, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0xf470, gbc.sp());
        EXPECT(0xa324, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa322));
        EXPECT(0x4a, gbc.readMem(0xa323));
        // CB 4A 024F
        gbc.setState(0x1294, 0xf7c8, 0x4720, 0x5311, 0xbc49, 0xab87, 0x1, 0x0);
        gbc.writeMem(0x1294, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0xf7c8, gbc.sp());
        EXPECT(0x1296, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4A 0250
        gbc.setState(0x3675, 0x25f0, 0xe9d0, 0x91e4, 0xff4, 0xa073, 0x0, 0x1);
        gbc.writeMem(0x3675, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x25f0, gbc.sp());
        EXPECT(0x3677, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4A 0251
        gbc.setState(0x104c, 0x306b, 0x5e40, 0xa40c, 0x495d, 0x3259, 0x1, 0x1);
        gbc.writeMem(0x104c, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x306b, gbc.sp());
        EXPECT(0x104e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4A 0252
        gbc.setState(0x4243, 0x66d9, 0x3b0, 0x8942, 0x22b0, 0xba7d, 0x0, 0x1);
        gbc.writeMem(0x4243, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x66d9, gbc.sp());
        EXPECT(0x4245, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4A 0253
        gbc.setState(0x2357, 0xc541, 0x4b00, 0x8925, 0x8e4a, 0x4acb, 0x0, 0x0);
        gbc.writeMem(0x2357, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0xc541, gbc.sp());
        EXPECT(0x2359, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4A 0254
        gbc.setState(0x714a, 0x5a42, 0xd9e0, 0x61aa, 0x4eb2, 0xc6c9, 0x1, 0x1);
        gbc.writeMem(0x714a, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x5a42, gbc.sp());
        EXPECT(0x714c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4A 0255
        gbc.setState(0x2958, 0x1392, 0xa5d0, 0x5ce7, 0xa70a, 0xe8cb, 0x1, 0x1);
        gbc.writeMem(0x2958, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x1392, gbc.sp());
        EXPECT(0x295a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4A 0256
        gbc.setState(0x75e1, 0x47b5, 0x64e0, 0x6c38, 0x38a0, 0xcaa7, 0x0, 0x1);
        gbc.writeMem(0x75e1, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x47b5, gbc.sp());
        EXPECT(0x75e3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4A 0257
        gbc.setState(0x91ed, 0x5452, 0x86f0, 0x6b9f, 0x1a40, 0x3a68, 0x1, 0x0);
        gbc.writeMem(0x91ed, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x5452, gbc.sp());
        EXPECT(0x91ef, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x91ed));
        EXPECT(0x4a, gbc.readMem(0x91ee));
        // CB 4A 0258
        gbc.setState(0x1fe7, 0x7dbd, 0x9380, 0x63be, 0xfd70, 0x70fc, 0x1, 0x1);
        gbc.writeMem(0x1fe7, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x7dbd, gbc.sp());
        EXPECT(0x1fe9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4A 0259
        gbc.setState(0x4d8d, 0xbcb7, 0xc250, 0xcba2, 0x764a, 0x8b26, 0x0, 0x0);
        gbc.writeMem(0x4d8d, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0xbcb7, gbc.sp());
        EXPECT(0x4d8f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4A 025A
        gbc.setState(0xa121, 0x9985, 0xdfd0, 0x7634, 0x2c59, 0x9a32, 0x0, 0x1);
        gbc.writeMem(0xa121, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x9985, gbc.sp());
        EXPECT(0xa123, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa121));
        EXPECT(0x4a, gbc.readMem(0xa122));
        // CB 4A 025B
        gbc.setState(0x258e, 0x623c, 0x41a0, 0x8430, 0x8092, 0xf4d5, 0x0, 0x1);
        gbc.writeMem(0x258e, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x623c, gbc.sp());
        EXPECT(0x2590, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4A 025C
        gbc.setState(0x4834, 0xe07b, 0xfb40, 0xaf5c, 0x3d45, 0x47b3, 0x1, 0x0);
        gbc.writeMem(0x4834, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0xe07b, gbc.sp());
        EXPECT(0x4836, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4A 025D
        gbc.setState(0x23a5, 0xf6c5, 0xa390, 0x5844, 0xc419, 0x7079, 0x0, 0x0);
        gbc.writeMem(0x23a5, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0xf6c5, gbc.sp());
        EXPECT(0x23a7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4A 025E
        gbc.setState(0x6e22, 0x1474, 0xd490, 0x645e, 0xef8e, 0x2a51, 0x0, 0x0);
        gbc.writeMem(0x6e22, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x1474, gbc.sp());
        EXPECT(0x6e24, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4A 025F
        gbc.setState(0xa093, 0xce32, 0xcb00, 0x480c, 0xdea6, 0x85dd, 0x0, 0x1);
        gbc.writeMem(0xa093, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0xce32, gbc.sp());
        EXPECT(0xa095, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa093));
        EXPECT(0x4a, gbc.readMem(0xa094));
        // CB 4A 0260
        gbc.setState(0xa705, 0x44df, 0x2e30, 0x424, 0x482e, 0x7047, 0x0, 0x1);
        gbc.writeMem(0xa705, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x44df, gbc.sp());
        EXPECT(0xa707, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa705));
        EXPECT(0x4a, gbc.readMem(0xa706));
        // CB 4A 0261
        gbc.setState(0x16b3, 0x4030, 0xad30, 0x3090, 0xbd29, 0x930e, 0x1, 0x1);
        gbc.writeMem(0x16b3, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x4030, gbc.sp());
        EXPECT(0x16b5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4A 0262
        gbc.setState(0x66bc, 0x1e13, 0x1d0, 0xc7e1, 0xe41f, 0xebd2, 0x1, 0x0);
        gbc.writeMem(0x66bc, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x1e13, gbc.sp());
        EXPECT(0x66be, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4A 0263
        gbc.setState(0x6448, 0xb723, 0xa740, 0xdc5a, 0x51de, 0x67bc, 0x0, 0x0);
        gbc.writeMem(0x6448, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0xb723, gbc.sp());
        EXPECT(0x644a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4A 0264
        gbc.setState(0xbd57, 0x1fd3, 0xd140, 0xab32, 0x3e26, 0x5d40, 0x0, 0x1);
        gbc.writeMem(0xbd57, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x1fd3, gbc.sp());
        EXPECT(0xbd59, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbd57));
        EXPECT(0x4a, gbc.readMem(0xbd58));
        // CB 4A 0265
        gbc.setState(0x2dfe, 0x9f56, 0xcf10, 0x301c, 0x262a, 0x148c, 0x0, 0x0);
        gbc.writeMem(0x2dfe, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x9f56, gbc.sp());
        EXPECT(0x2e00, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4A 0266
        gbc.setState(0x7551, 0x60ed, 0x8950, 0x75f6, 0x4a65, 0xc497, 0x1, 0x0);
        gbc.writeMem(0x7551, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0x60ed, gbc.sp());
        EXPECT(0x7553, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4A 0267
        gbc.setState(0xa78d, 0x75d8, 0x53a0, 0xb5db, 0xf6fe, 0xeb81, 0x1, 0x1);
        gbc.writeMem(0xa78d, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x75d8, gbc.sp());
        EXPECT(0xa78f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa78d));
        EXPECT(0x4a, gbc.readMem(0xa78e));
        // CB 4A 0268
        gbc.setState(0xc48d, 0x9701, 0xad30, 0x6f7b, 0x3c8, 0x47c1, 0x0, 0x0);
        gbc.writeMem(0xc48d, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x9701, gbc.sp());
        EXPECT(0xc48f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc48d));
        EXPECT(0x4a, gbc.readMem(0xc48e));
        // CB 4A 0269
        gbc.setState(0xe7f2, 0x2e43, 0x5c20, 0x181a, 0x2437, 0x75b1, 0x1, 0x0);
        gbc.writeMem(0xe7f2, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x2e43, gbc.sp());
        EXPECT(0xe7f4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe7f2));
        EXPECT(0x4a, gbc.readMem(0xe7f3));
        // CB 4A 026A
        gbc.setState(0x99d4, 0x3bd6, 0x2470, 0xd5c1, 0x4a, 0xe262, 0x0, 0x1);
        gbc.writeMem(0x99d4, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x3bd6, gbc.sp());
        EXPECT(0x99d6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x99d4));
        EXPECT(0x4a, gbc.readMem(0x99d5));
        // CB 4A 026B
        gbc.setState(0x631a, 0x9a18, 0x3b70, 0xdb40, 0x26ce, 0xa877, 0x1, 0x0);
        gbc.writeMem(0x631a, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x9a18, gbc.sp());
        EXPECT(0x631c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4A 026C
        gbc.setState(0xbfc3, 0xc09, 0xb360, 0x2d21, 0x9b0e, 0x479d, 0x1, 0x1);
        gbc.writeMem(0xbfc3, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0xc09, gbc.sp());
        EXPECT(0xbfc5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbfc3));
        EXPECT(0x4a, gbc.readMem(0xbfc4));
        // CB 4A 026D
        gbc.setState(0xbba1, 0x5577, 0x28a0, 0xe38c, 0xaf01, 0xd7af, 0x1, 0x0);
        gbc.writeMem(0xbba1, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x5577, gbc.sp());
        EXPECT(0xbba3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbba1));
        EXPECT(0x4a, gbc.readMem(0xbba2));
        // CB 4A 026E
        gbc.setState(0xda29, 0xd603, 0xa700, 0xf05b, 0x7222, 0x64d9, 0x1, 0x0);
        gbc.writeMem(0xda29, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0xd603, gbc.sp());
        EXPECT(0xda2b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xda29));
        EXPECT(0x4a, gbc.readMem(0xda2a));
        // CB 4A 026F
        gbc.setState(0x80c9, 0x84cf, 0x3e60, 0x3308, 0xbc09, 0xffb, 0x0, 0x0);
        gbc.writeMem(0x80c9, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x84cf, gbc.sp());
        EXPECT(0x80cb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x80c9));
        EXPECT(0x4a, gbc.readMem(0x80ca));
        // CB 4A 0270
        gbc.setState(0x68e8, 0x483c, 0xb560, 0xcf3c, 0x9054, 0xa777, 0x1, 0x0);
        gbc.writeMem(0x68e8, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x483c, gbc.sp());
        EXPECT(0x68ea, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4A 0271
        gbc.setState(0xef07, 0xb1f6, 0x100, 0xf88a, 0x668c, 0xa7b3, 0x1, 0x1);
        gbc.writeMem(0xef07, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0xb1f6, gbc.sp());
        EXPECT(0xef09, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xef07));
        EXPECT(0x4a, gbc.readMem(0xef08));
        // CB 4A 0272
        gbc.setState(0x7aa9, 0xe662, 0x8940, 0x2258, 0x3e22, 0xedce, 0x1, 0x1);
        gbc.writeMem(0x7aa9, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0xe662, gbc.sp());
        EXPECT(0x7aab, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4A 0273
        gbc.setState(0x3ac1, 0x895a, 0xf230, 0x8028, 0xb8bb, 0x8152, 0x1, 0x1);
        gbc.writeMem(0x3ac1, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x895a, gbc.sp());
        EXPECT(0x3ac3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4A 0274
        gbc.setState(0xee81, 0x8065, 0x3dd0, 0x732f, 0xbd1d, 0x9a6e, 0x1, 0x1);
        gbc.writeMem(0xee81, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x8065, gbc.sp());
        EXPECT(0xee83, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xee81));
        EXPECT(0x4a, gbc.readMem(0xee82));
        // CB 4A 0275
        gbc.setState(0xd202, 0x73cd, 0xeb50, 0x6cf7, 0x286c, 0x7578, 0x1, 0x0);
        gbc.writeMem(0xd202, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x73cd, gbc.sp());
        EXPECT(0xd204, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd202));
        EXPECT(0x4a, gbc.readMem(0xd203));
        // CB 4A 0276
        gbc.setState(0xeabb, 0xfd70, 0x2d0, 0x681c, 0x64e0, 0x5296, 0x1, 0x1);
        gbc.writeMem(0xeabb, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0xfd70, gbc.sp());
        EXPECT(0xeabd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeabb));
        EXPECT(0x4a, gbc.readMem(0xeabc));
        // CB 4A 0277
        gbc.setState(0x9bf4, 0xf541, 0x6c70, 0x342, 0x5c9c, 0x792c, 0x0, 0x0);
        gbc.writeMem(0x9bf4, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0xf541, gbc.sp());
        EXPECT(0x9bf6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9bf4));
        EXPECT(0x4a, gbc.readMem(0x9bf5));
        // CB 4A 0278
        gbc.setState(0x8c8, 0x17de, 0xa5e0, 0x1a7f, 0x3c3d, 0xcaf0, 0x0, 0x0);
        gbc.writeMem(0x8c8, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x17de, gbc.sp());
        EXPECT(0x8ca, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4A 0279
        gbc.setState(0x337, 0xaa7a, 0x1670, 0x8e3, 0x3b3b, 0x23ad, 0x0, 0x0);
        gbc.writeMem(0x337, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0xaa7a, gbc.sp());
        EXPECT(0x339, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4A 027A
        gbc.setState(0x34aa, 0x93a3, 0x1a40, 0xb50e, 0x6b6, 0x4d90, 0x0, 0x0);
        gbc.writeMem(0x34aa, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x93a3, gbc.sp());
        EXPECT(0x34ac, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4A 027B
        gbc.setState(0x1809, 0x853d, 0x2f70, 0x4a6a, 0xf34, 0x9afb, 0x0, 0x0);
        gbc.writeMem(0x1809, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x853d, gbc.sp());
        EXPECT(0x180b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4A 027C
        gbc.setState(0x5d58, 0x855a, 0x7f0, 0x120b, 0x97f1, 0x854b, 0x1, 0x1);
        gbc.writeMem(0x5d58, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x855a, gbc.sp());
        EXPECT(0x5d5a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4A 027D
        gbc.setState(0x9032, 0xcb9, 0x9130, 0x9e2a, 0x4479, 0x6b57, 0x1, 0x1);
        gbc.writeMem(0x9032, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0xcb9, gbc.sp());
        EXPECT(0x9034, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9032));
        EXPECT(0x4a, gbc.readMem(0x9033));
        // CB 4A 027E
        gbc.setState(0xb3f7, 0xf239, 0xfff0, 0x3979, 0xb441, 0xeb53, 0x0, 0x1);
        gbc.writeMem(0xb3f7, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0xf239, gbc.sp());
        EXPECT(0xb3f9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb3f7));
        EXPECT(0x4a, gbc.readMem(0xb3f8));
        // CB 4A 027F
        gbc.setState(0xd366, 0xc20b, 0xdea0, 0xd7d1, 0x4cb2, 0xefa2, 0x1, 0x1);
        gbc.writeMem(0xd366, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0xc20b, gbc.sp());
        EXPECT(0xd368, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd366));
        EXPECT(0x4a, gbc.readMem(0xd367));
        // CB 4A 0280
        gbc.setState(0x792e, 0x5003, 0x8060, 0xb75c, 0x911d, 0x4e10, 0x1, 0x0);
        gbc.writeMem(0x792e, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x5003, gbc.sp());
        EXPECT(0x7930, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4A 0281
        gbc.setState(0xa309, 0xa662, 0xd140, 0x2fb6, 0xc6ad, 0xd683, 0x0, 0x1);
        gbc.writeMem(0xa309, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0xa662, gbc.sp());
        EXPECT(0xa30b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa309));
        EXPECT(0x4a, gbc.readMem(0xa30a));
        // CB 4A 0282
        gbc.setState(0xc1de, 0x50e, 0x8620, 0x65d6, 0x2b5d, 0x5d8b, 0x1, 0x1);
        gbc.writeMem(0xc1de, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x50e, gbc.sp());
        EXPECT(0xc1e0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc1de));
        EXPECT(0x4a, gbc.readMem(0xc1df));
        // CB 4A 0283
        gbc.setState(0xbaa0, 0x8a13, 0xd200, 0x363, 0xa37a, 0x9ebe, 0x0, 0x0);
        gbc.writeMem(0xbaa0, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0x8a13, gbc.sp());
        EXPECT(0xbaa2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbaa0));
        EXPECT(0x4a, gbc.readMem(0xbaa1));
        // CB 4A 0284
        gbc.setState(0x570b, 0x13b, 0x5ef0, 0xfe28, 0x4e9e, 0x7e9a, 0x0, 0x0);
        gbc.writeMem(0x570b, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x13b, gbc.sp());
        EXPECT(0x570d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4A 0285
        gbc.setState(0xb08e, 0xacd9, 0x7b00, 0xa683, 0x38d8, 0x574b, 0x0, 0x1);
        gbc.writeMem(0xb08e, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0xacd9, gbc.sp());
        EXPECT(0xb090, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb08e));
        EXPECT(0x4a, gbc.readMem(0xb08f));
        // CB 4A 0286
        gbc.setState(0xa06a, 0x9457, 0x82f0, 0x64e5, 0xa2ce, 0x8b23, 0x1, 0x0);
        gbc.writeMem(0xa06a, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x9457, gbc.sp());
        EXPECT(0xa06c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa06a));
        EXPECT(0x4a, gbc.readMem(0xa06b));
        // CB 4A 0288
        gbc.setState(0x4dcf, 0x51c6, 0xfff0, 0xcaea, 0x11a0, 0xad2, 0x0, 0x0);
        gbc.writeMem(0x4dcf, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x51c6, gbc.sp());
        EXPECT(0x4dd1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4A 028A
        gbc.setState(0xab6, 0x21b1, 0x2890, 0xc913, 0xd2ad, 0x998, 0x1, 0x0);
        gbc.writeMem(0xab6, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x21b1, gbc.sp());
        EXPECT(0xab8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4A 028B
        gbc.setState(0x3dc1, 0x8cb4, 0x2200, 0x61b2, 0x6193, 0x685c, 0x0, 0x1);
        gbc.writeMem(0x3dc1, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x8cb4, gbc.sp());
        EXPECT(0x3dc3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4A 028C
        gbc.setState(0x2994, 0x5a5, 0x8e70, 0x45aa, 0xb496, 0x8926, 0x0, 0x0);
        gbc.writeMem(0x2994, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x5a5, gbc.sp());
        EXPECT(0x2996, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4A 028D
        gbc.setState(0x7d68, 0x6760, 0xe70, 0xa86e, 0xdcd0, 0x2d22, 0x1, 0x1);
        gbc.writeMem(0x7d68, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x6760, gbc.sp());
        EXPECT(0x7d6a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4A 028E
        gbc.setState(0x9634, 0x8d81, 0x3d0, 0x3f77, 0x4ab3, 0x66b8, 0x1, 0x1);
        gbc.writeMem(0x9634, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x8d81, gbc.sp());
        EXPECT(0x9636, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9634));
        EXPECT(0x4a, gbc.readMem(0x9635));
        // CB 4A 028F
        gbc.setState(0x6722, 0x90de, 0x8b20, 0xf57a, 0x3ee3, 0x788d, 0x1, 0x0);
        gbc.writeMem(0x6722, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x90de, gbc.sp());
        EXPECT(0x6724, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4A 0290
        gbc.setState(0x80c0, 0x4de4, 0x4ec0, 0x2683, 0x9b53, 0xc217, 0x0, 0x0);
        gbc.writeMem(0x80c0, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x4de4, gbc.sp());
        EXPECT(0x80c2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x80c0));
        EXPECT(0x4a, gbc.readMem(0x80c1));
        // CB 4A 0291
        gbc.setState(0x5955, 0xc5b2, 0x6b70, 0xae24, 0x4d56, 0x1a25, 0x1, 0x1);
        gbc.writeMem(0x5955, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0xc5b2, gbc.sp());
        EXPECT(0x5957, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4A 0292
        gbc.setState(0x7775, 0x7d6b, 0x490, 0xe4a4, 0x33db, 0xa81e, 0x1, 0x0);
        gbc.writeMem(0x7775, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x7d6b, gbc.sp());
        EXPECT(0x7777, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4A 0294
        gbc.setState(0x7891, 0x35d3, 0x8880, 0x6d3, 0x6a5, 0xf90c, 0x0, 0x0);
        gbc.writeMem(0x7891, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x35d3, gbc.sp());
        EXPECT(0x7893, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4A 0295
        gbc.setState(0x65ab, 0xdb6a, 0xcab0, 0xd154, 0xb9e6, 0x650f, 0x1, 0x1);
        gbc.writeMem(0x65ab, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0xdb6a, gbc.sp());
        EXPECT(0x65ad, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4A 0296
        gbc.setState(0x1990, 0xf6ee, 0x5c20, 0xb479, 0x392c, 0xdbcf, 0x0, 0x1);
        gbc.writeMem(0x1990, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0xf6ee, gbc.sp());
        EXPECT(0x1992, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4A 0297
        gbc.setState(0xa086, 0x555c, 0xb290, 0xa62d, 0x7866, 0x25d, 0x0, 0x0);
        gbc.writeMem(0xa086, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x555c, gbc.sp());
        EXPECT(0xa088, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa086));
        EXPECT(0x4a, gbc.readMem(0xa087));
        // CB 4A 0298
        gbc.setState(0xcf67, 0x5ffd, 0xd3e0, 0xf2b2, 0x7745, 0x7db3, 0x0, 0x0);
        gbc.writeMem(0xcf67, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x5ffd, gbc.sp());
        EXPECT(0xcf69, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcf67));
        EXPECT(0x4a, gbc.readMem(0xcf68));
        // CB 4A 0299
        gbc.setState(0x2a25, 0x7282, 0x8be0, 0x24b5, 0xe31e, 0xae64, 0x0, 0x1);
        gbc.writeMem(0x2a25, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x7282, gbc.sp());
        EXPECT(0x2a27, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4A 029A
        gbc.setState(0xb87a, 0xd052, 0x2020, 0x7174, 0x543c, 0x3bd0, 0x1, 0x1);
        gbc.writeMem(0xb87a, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0xd052, gbc.sp());
        EXPECT(0xb87c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb87a));
        EXPECT(0x4a, gbc.readMem(0xb87b));
        // CB 4A 029B
        gbc.setState(0xad4a, 0x89ba, 0xb440, 0x413a, 0xdec8, 0xdb4, 0x1, 0x1);
        gbc.writeMem(0xad4a, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x89ba, gbc.sp());
        EXPECT(0xad4c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xad4a));
        EXPECT(0x4a, gbc.readMem(0xad4b));
        // CB 4A 029C
        gbc.setState(0x3e42, 0x418c, 0x6060, 0xd8b2, 0x3240, 0x6c68, 0x0, 0x1);
        gbc.writeMem(0x3e42, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x418c, gbc.sp());
        EXPECT(0x3e44, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4A 029D
        gbc.setState(0xc54d, 0x880a, 0x7770, 0x89a5, 0xbeb5, 0x13ee, 0x0, 0x1);
        gbc.writeMem(0xc54d, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x880a, gbc.sp());
        EXPECT(0xc54f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc54d));
        EXPECT(0x4a, gbc.readMem(0xc54e));
        // CB 4A 029E
        gbc.setState(0x7a94, 0x3930, 0x7fa0, 0x4573, 0xf22a, 0x3195, 0x1, 0x1);
        gbc.writeMem(0x7a94, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x3930, gbc.sp());
        EXPECT(0x7a96, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4A 029F
        gbc.setState(0x1d71, 0xcb85, 0xfb20, 0x4fd6, 0xa91c, 0xe246, 0x0, 0x1);
        gbc.writeMem(0x1d71, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0xcb85, gbc.sp());
        EXPECT(0x1d73, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4A 02A0
        gbc.setState(0x15e0, 0x8fb2, 0x120, 0x9fa4, 0xc9eb, 0x51a0, 0x0, 0x1);
        gbc.writeMem(0x15e0, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x8fb2, gbc.sp());
        EXPECT(0x15e2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4A 02A1
        gbc.setState(0x10ba, 0x7d0f, 0xc1d0, 0xaeda, 0x7bdd, 0xfda0, 0x1, 0x1);
        gbc.writeMem(0x10ba, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x7d0f, gbc.sp());
        EXPECT(0x10bc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4A 02A2
        gbc.setState(0x8eb8, 0x983, 0x9080, 0xc8d0, 0x895a, 0x32e, 0x1, 0x1);
        gbc.writeMem(0x8eb8, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x983, gbc.sp());
        EXPECT(0x8eba, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8eb8));
        EXPECT(0x4a, gbc.readMem(0x8eb9));
        // CB 4A 02A3
        gbc.setState(0xc82d, 0x599c, 0xbf90, 0x9d7a, 0x627a, 0x15b0, 0x1, 0x0);
        gbc.writeMem(0xc82d, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x599c, gbc.sp());
        EXPECT(0xc82f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc82d));
        EXPECT(0x4a, gbc.readMem(0xc82e));
        // CB 4A 02A4
        gbc.setState(0x983d, 0x7729, 0xd0a0, 0xf624, 0x595e, 0x8713, 0x0, 0x0);
        gbc.writeMem(0x983d, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x7729, gbc.sp());
        EXPECT(0x983f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x983d));
        EXPECT(0x4a, gbc.readMem(0x983e));
        // CB 4A 02A5
        gbc.setState(0xae83, 0x6056, 0x9790, 0xe2c4, 0xe903, 0x691, 0x1, 0x0);
        gbc.writeMem(0xae83, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x6056, gbc.sp());
        EXPECT(0xae85, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xae83));
        EXPECT(0x4a, gbc.readMem(0xae84));
        // CB 4A 02A6
        gbc.setState(0x2454, 0x7283, 0xd820, 0x373, 0xee2b, 0x1170, 0x1, 0x1);
        gbc.writeMem(0x2454, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x7283, gbc.sp());
        EXPECT(0x2456, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4A 02A7
        gbc.setState(0x3a09, 0xafb7, 0xca20, 0xb141, 0x74b, 0xe840, 0x1, 0x0);
        gbc.writeMem(0x3a09, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0xafb7, gbc.sp());
        EXPECT(0x3a0b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4A 02A8
        gbc.setState(0x46af, 0x3fd1, 0x2560, 0xa46c, 0x25b2, 0xbde2, 0x1, 0x1);
        gbc.writeMem(0x46af, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x3fd1, gbc.sp());
        EXPECT(0x46b1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4A 02A9
        gbc.setState(0xa8bb, 0xf3a, 0x800, 0xfca7, 0x18fe, 0xb500, 0x0, 0x1);
        gbc.writeMem(0xa8bb, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0xf3a, gbc.sp());
        EXPECT(0xa8bd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa8bb));
        EXPECT(0x4a, gbc.readMem(0xa8bc));
        // CB 4A 02AA
        gbc.setState(0xc56a, 0x8cfe, 0x66f0, 0xca29, 0xbf11, 0x53d3, 0x1, 0x0);
        gbc.writeMem(0xc56a, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x8cfe, gbc.sp());
        EXPECT(0xc56c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc56a));
        EXPECT(0x4a, gbc.readMem(0xc56b));
        // CB 4A 02AB
        gbc.setState(0xa4be, 0xee80, 0xe8a0, 0x4fa5, 0xde30, 0x4a35, 0x1, 0x1);
        gbc.writeMem(0xa4be, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0xee80, gbc.sp());
        EXPECT(0xa4c0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa4be));
        EXPECT(0x4a, gbc.readMem(0xa4bf));
        // CB 4A 02AC
        gbc.setState(0x7336, 0x523f, 0x5930, 0xf711, 0x110c, 0x9f4a, 0x1, 0x0);
        gbc.writeMem(0x7336, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x523f, gbc.sp());
        EXPECT(0x7338, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4A 02AD
        gbc.setState(0x1ee4, 0x3f4e, 0x3e30, 0x3dac, 0x2aaf, 0xf9f4, 0x1, 0x1);
        gbc.writeMem(0x1ee4, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x3f4e, gbc.sp());
        EXPECT(0x1ee6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4A 02AE
        gbc.setState(0xb9a1, 0x2728, 0x16a0, 0xc531, 0x996f, 0xe592, 0x1, 0x1);
        gbc.writeMem(0xb9a1, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x2728, gbc.sp());
        EXPECT(0xb9a3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb9a1));
        EXPECT(0x4a, gbc.readMem(0xb9a2));
        // CB 4A 02AF
        gbc.setState(0x2fad, 0x4750, 0xb540, 0x58df, 0x66a7, 0xaa54, 0x1, 0x1);
        gbc.writeMem(0x2fad, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x4750, gbc.sp());
        EXPECT(0x2faf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4A 02B0
        gbc.setState(0xb65d, 0x437d, 0xe010, 0xf522, 0xfa3b, 0x1e68, 0x1, 0x1);
        gbc.writeMem(0xb65d, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x437d, gbc.sp());
        EXPECT(0xb65f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb65d));
        EXPECT(0x4a, gbc.readMem(0xb65e));
        // CB 4A 02B1
        gbc.setState(0x8c7d, 0x6b0, 0x6f00, 0xf38d, 0x5d5c, 0x75a4, 0x1, 0x0);
        gbc.writeMem(0x8c7d, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x6b0, gbc.sp());
        EXPECT(0x8c7f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8c7d));
        EXPECT(0x4a, gbc.readMem(0x8c7e));
        // CB 4A 02B2
        gbc.setState(0x386e, 0x20a7, 0x7800, 0x9054, 0xf378, 0xce86, 0x1, 0x1);
        gbc.writeMem(0x386e, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x20a7, gbc.sp());
        EXPECT(0x3870, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4A 02B3
        gbc.setState(0xebcf, 0xb151, 0x600, 0xfeac, 0xec32, 0x8322, 0x1, 0x1);
        gbc.writeMem(0xebcf, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0xb151, gbc.sp());
        EXPECT(0xebd1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xebcf));
        EXPECT(0x4a, gbc.readMem(0xebd0));
        // CB 4A 02B4
        gbc.setState(0x83ff, 0xec81, 0x7c30, 0x5f2, 0xb267, 0x6e40, 0x0, 0x0);
        gbc.writeMem(0x83ff, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0xec81, gbc.sp());
        EXPECT(0x8401, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x83ff));
        EXPECT(0x4a, gbc.readMem(0x8400));
        // CB 4A 02B5
        gbc.setState(0x7c28, 0x25d5, 0x56f0, 0x8269, 0x1280, 0xc7cc, 0x1, 0x0);
        gbc.writeMem(0x7c28, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x25d5, gbc.sp());
        EXPECT(0x7c2a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4A 02B6
        gbc.setState(0x8632, 0x5593, 0x3810, 0x98, 0x28fe, 0xd3f6, 0x0, 0x1);
        gbc.writeMem(0x8632, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x5593, gbc.sp());
        EXPECT(0x8634, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8632));
        EXPECT(0x4a, gbc.readMem(0x8633));
        // CB 4A 02B7
        gbc.setState(0x18be, 0x656f, 0xc9b0, 0x3ae1, 0xa98e, 0xcbbc, 0x1, 0x0);
        gbc.writeMem(0x18be, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x656f, gbc.sp());
        EXPECT(0x18c0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4A 02B8
        gbc.setState(0xbe1c, 0xdd8c, 0x3df0, 0x33be, 0xcf9e, 0x6717, 0x1, 0x1);
        gbc.writeMem(0xbe1c, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0xdd8c, gbc.sp());
        EXPECT(0xbe1e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbe1c));
        EXPECT(0x4a, gbc.readMem(0xbe1d));
        // CB 4A 02B9
        gbc.setState(0x785a, 0xdb46, 0x6320, 0xa6cf, 0x17c2, 0xfb9a, 0x0, 0x1);
        gbc.writeMem(0x785a, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0xdb46, gbc.sp());
        EXPECT(0x785c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4A 02BA
        gbc.setState(0x429f, 0xa319, 0xd7c0, 0xbfa9, 0x67a7, 0x7619, 0x0, 0x1);
        gbc.writeMem(0x429f, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0xa319, gbc.sp());
        EXPECT(0x42a1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4A 02BB
        gbc.setState(0x1032, 0xfa96, 0xc270, 0x1ec4, 0x895e, 0x54fa, 0x1, 0x1);
        gbc.writeMem(0x1032, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0xfa96, gbc.sp());
        EXPECT(0x1034, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4A 02BC
        gbc.setState(0x5a92, 0xc676, 0x1130, 0x6f52, 0xf621, 0x24f2, 0x0, 0x0);
        gbc.writeMem(0x5a92, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0xc676, gbc.sp());
        EXPECT(0x5a94, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4A 02BD
        gbc.setState(0x6ca2, 0x8e96, 0x5b10, 0x708e, 0xcf52, 0xa470, 0x0, 0x1);
        gbc.writeMem(0x6ca2, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x8e96, gbc.sp());
        EXPECT(0x6ca4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4A 02BE
        gbc.setState(0x4133, 0x41b8, 0x75e0, 0xd1e3, 0x4849, 0x5b99, 0x1, 0x0);
        gbc.writeMem(0x4133, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x41b8, gbc.sp());
        EXPECT(0x4135, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4A 02BF
        gbc.setState(0xeac2, 0x68da, 0x5ae0, 0xbb13, 0x5d87, 0x1b1a, 0x0, 0x0);
        gbc.writeMem(0xeac2, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x68da, gbc.sp());
        EXPECT(0xeac4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeac2));
        EXPECT(0x4a, gbc.readMem(0xeac3));
        // CB 4A 02C0
        gbc.setState(0xbfae, 0x2ff4, 0x4b0, 0x5b09, 0x15a6, 0xe993, 0x0, 0x0);
        gbc.writeMem(0xbfae, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0x2ff4, gbc.sp());
        EXPECT(0xbfb0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbfae));
        EXPECT(0x4a, gbc.readMem(0xbfaf));
        // CB 4A 02C1
        gbc.setState(0x2cb9, 0xd5ab, 0xd6e0, 0xdf2a, 0xa54c, 0xcfc0, 0x0, 0x1);
        gbc.writeMem(0x2cb9, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0xd5ab, gbc.sp());
        EXPECT(0x2cbb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4A 02C2
        gbc.setState(0xbe13, 0xf68, 0xb0b0, 0x4be, 0x75a5, 0x6ba, 0x0, 0x0);
        gbc.writeMem(0xbe13, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0xf68, gbc.sp());
        EXPECT(0xbe15, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbe13));
        EXPECT(0x4a, gbc.readMem(0xbe14));
        // CB 4A 02C4
        gbc.setState(0xde91, 0x105f, 0x2750, 0xc264, 0xff16, 0x3889, 0x1, 0x1);
        gbc.writeMem(0xde91, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x105f, gbc.sp());
        EXPECT(0xde93, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xde91));
        EXPECT(0x4a, gbc.readMem(0xde92));
        // CB 4A 02C6
        gbc.setState(0xe0d, 0x7e3c, 0x3780, 0x1870, 0x14da, 0x9c79, 0x1, 0x1);
        gbc.writeMem(0xe0d, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x7e3c, gbc.sp());
        EXPECT(0xe0f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4A 02C7
        gbc.setState(0x744e, 0x769f, 0xec20, 0xcc46, 0x8482, 0xce4f, 0x1, 0x0);
        gbc.writeMem(0x744e, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x769f, gbc.sp());
        EXPECT(0x7450, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4A 02C8
        gbc.setState(0x662c, 0x4f27, 0x6df0, 0xc6b9, 0x4df4, 0x4765, 0x0, 0x0);
        gbc.writeMem(0x662c, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x4f27, gbc.sp());
        EXPECT(0x662e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4A 02C9
        gbc.setState(0xb5ca, 0x7e, 0xa100, 0x7fa7, 0x1c93, 0xd0ef, 0x1, 0x1);
        gbc.writeMem(0xb5ca, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x7e, gbc.sp());
        EXPECT(0xb5cc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb5ca));
        EXPECT(0x4a, gbc.readMem(0xb5cb));
        // CB 4A 02CA
        gbc.setState(0x233f, 0xccb6, 0x9410, 0x98bd, 0x2b, 0xeacd, 0x1, 0x1);
        gbc.writeMem(0x233f, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0xccb6, gbc.sp());
        EXPECT(0x2341, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4A 02CB
        gbc.setState(0x2462, 0x89b5, 0x8250, 0xb189, 0xc93c, 0x32d4, 0x0, 0x0);
        gbc.writeMem(0x2462, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x89b5, gbc.sp());
        EXPECT(0x2464, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4A 02CC
        gbc.setState(0xb95a, 0x656f, 0x6580, 0xa74b, 0xb872, 0xec1c, 0x1, 0x1);
        gbc.writeMem(0xb95a, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x656f, gbc.sp());
        EXPECT(0xb95c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb95a));
        EXPECT(0x4a, gbc.readMem(0xb95b));
        // CB 4A 02CD
        gbc.setState(0x7ced, 0x2b43, 0x9f60, 0x5146, 0x9766, 0x82b0, 0x0, 0x1);
        gbc.writeMem(0x7ced, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x2b43, gbc.sp());
        EXPECT(0x7cef, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4A 02CE
        gbc.setState(0x5c9, 0x2047, 0xbd70, 0xdf38, 0xdd14, 0xf810, 0x0, 0x0);
        gbc.writeMem(0x5c9, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x2047, gbc.sp());
        EXPECT(0x5cb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4A 02CF
        gbc.setState(0xa364, 0xddb7, 0xba30, 0xa3e0, 0x21a2, 0xa1df, 0x1, 0x1);
        gbc.writeMem(0xa364, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0xddb7, gbc.sp());
        EXPECT(0xa366, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa364));
        EXPECT(0x4a, gbc.readMem(0xa365));
        // CB 4A 02D0
        gbc.setState(0x5dba, 0x4ee8, 0x3930, 0x88a4, 0x8706, 0x665a, 0x1, 0x0);
        gbc.writeMem(0x5dba, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x4ee8, gbc.sp());
        EXPECT(0x5dbc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4A 02D1
        gbc.setState(0x14f5, 0x6d04, 0xc500, 0x1720, 0xd103, 0x7feb, 0x1, 0x0);
        gbc.writeMem(0x14f5, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x6d04, gbc.sp());
        EXPECT(0x14f7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4A 02D2
        gbc.setState(0x50e5, 0xe0d4, 0xf0a0, 0x928d, 0x2bfb, 0x5054, 0x1, 0x0);
        gbc.writeMem(0x50e5, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0xe0d4, gbc.sp());
        EXPECT(0x50e7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4A 02D3
        gbc.setState(0x3641, 0x960d, 0x9700, 0x73f9, 0xfdbd, 0x94fa, 0x0, 0x0);
        gbc.writeMem(0x3641, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0x960d, gbc.sp());
        EXPECT(0x3643, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4A 02D4
        gbc.setState(0x120c, 0x67fe, 0x89b0, 0xce41, 0xbf17, 0x3e1c, 0x1, 0x0);
        gbc.writeMem(0x120c, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x67fe, gbc.sp());
        EXPECT(0x120e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4A 02D5
        gbc.setState(0xeb09, 0xead1, 0xf630, 0x4543, 0xdd97, 0xa392, 0x1, 0x1);
        gbc.writeMem(0xeb09, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0xead1, gbc.sp());
        EXPECT(0xeb0b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeb09));
        EXPECT(0x4a, gbc.readMem(0xeb0a));
        // CB 4A 02D6
        gbc.setState(0xe934, 0xdce9, 0x9930, 0x901a, 0x68d9, 0x356a, 0x1, 0x1);
        gbc.writeMem(0xe934, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0xdce9, gbc.sp());
        EXPECT(0xe936, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe934));
        EXPECT(0x4a, gbc.readMem(0xe935));
        // CB 4A 02D7
        gbc.setState(0x6a4f, 0x53c2, 0x1d80, 0x836b, 0x3d08, 0xf82, 0x0, 0x1);
        gbc.writeMem(0x6a4f, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x53c2, gbc.sp());
        EXPECT(0x6a51, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4A 02D8
        gbc.setState(0x899, 0x5f62, 0x99f0, 0xf85c, 0x7944, 0x32d2, 0x0, 0x0);
        gbc.writeMem(0x899, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x5f62, gbc.sp());
        EXPECT(0x89b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4A 02D9
        gbc.setState(0x80ea, 0xf499, 0x6c30, 0xdc3, 0x9b6, 0x8b56, 0x1, 0x0);
        gbc.writeMem(0x80ea, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0xf499, gbc.sp());
        EXPECT(0x80ec, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x80ea));
        EXPECT(0x4a, gbc.readMem(0x80eb));
        // CB 4A 02DA
        gbc.setState(0xa72a, 0xd93e, 0x6840, 0xd503, 0x9f33, 0x4529, 0x0, 0x0);
        gbc.writeMem(0xa72a, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0xd93e, gbc.sp());
        EXPECT(0xa72c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa72a));
        EXPECT(0x4a, gbc.readMem(0xa72b));
        // CB 4A 02DB
        gbc.setState(0xa269, 0x561d, 0xb9b0, 0xcdf1, 0x82e0, 0xa8ae, 0x1, 0x0);
        gbc.writeMem(0xa269, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0x561d, gbc.sp());
        EXPECT(0xa26b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa269));
        EXPECT(0x4a, gbc.readMem(0xa26a));
        // CB 4A 02DC
        gbc.setState(0xad14, 0xd510, 0x59a0, 0x235c, 0xd394, 0x49ea, 0x0, 0x1);
        gbc.writeMem(0xad14, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0xd510, gbc.sp());
        EXPECT(0xad16, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xad14));
        EXPECT(0x4a, gbc.readMem(0xad15));
        // CB 4A 02DD
        gbc.setState(0x94f2, 0xe98d, 0x3e90, 0xd228, 0xe596, 0x15a, 0x0, 0x1);
        gbc.writeMem(0x94f2, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0xe98d, gbc.sp());
        EXPECT(0x94f4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x94f2));
        EXPECT(0x4a, gbc.readMem(0x94f3));
        // CB 4A 02DE
        gbc.setState(0x34ca, 0x8d35, 0x66b0, 0x737f, 0x4185, 0xc740, 0x1, 0x0);
        gbc.writeMem(0x34ca, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x8d35, gbc.sp());
        EXPECT(0x34cc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4A 02DF
        gbc.setState(0xce94, 0xb9d, 0xa8d0, 0x99d0, 0x16ad, 0xd8b9, 0x0, 0x1);
        gbc.writeMem(0xce94, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0xb9d, gbc.sp());
        EXPECT(0xce96, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xce94));
        EXPECT(0x4a, gbc.readMem(0xce95));
        // CB 4A 02E0
        gbc.setState(0xe851, 0xd73a, 0x22e0, 0x1950, 0x6194, 0x1e04, 0x0, 0x1);
        gbc.writeMem(0xe851, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0xd73a, gbc.sp());
        EXPECT(0xe853, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe851));
        EXPECT(0x4a, gbc.readMem(0xe852));
        // CB 4A 02E1
        gbc.setState(0x358e, 0x837e, 0x5660, 0x6b6f, 0xbb8e, 0x3a1f, 0x0, 0x1);
        gbc.writeMem(0x358e, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x837e, gbc.sp());
        EXPECT(0x3590, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4A 02E2
        gbc.setState(0xa7c2, 0x5354, 0x25d0, 0x2d22, 0x679b, 0x5d95, 0x1, 0x0);
        gbc.writeMem(0xa7c2, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x5354, gbc.sp());
        EXPECT(0xa7c4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa7c2));
        EXPECT(0x4a, gbc.readMem(0xa7c3));
        // CB 4A 02E3
        gbc.setState(0x95f3, 0xfe40, 0xdb90, 0x7966, 0xf7e5, 0x5f92, 0x1, 0x1);
        gbc.writeMem(0x95f3, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0xfe40, gbc.sp());
        EXPECT(0x95f5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x95f3));
        EXPECT(0x4a, gbc.readMem(0x95f4));
        // CB 4A 02E4
        gbc.setState(0x8f8b, 0x9e7f, 0xa1c0, 0xfa2e, 0xbe32, 0xfff6, 0x1, 0x0);
        gbc.writeMem(0x8f8b, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x9e7f, gbc.sp());
        EXPECT(0x8f8d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8f8b));
        EXPECT(0x4a, gbc.readMem(0x8f8c));
        // CB 4A 02E5
        gbc.setState(0x6d39, 0x6023, 0xa710, 0x6cc5, 0x7c40, 0xe45d, 0x0, 0x1);
        gbc.writeMem(0x6d39, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x6023, gbc.sp());
        EXPECT(0x6d3b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4A 02E6
        gbc.setState(0xaab7, 0x3a66, 0xa140, 0xecd8, 0x7d34, 0x997a, 0x0, 0x0);
        gbc.writeMem(0xaab7, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x3a66, gbc.sp());
        EXPECT(0xaab9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaab7));
        EXPECT(0x4a, gbc.readMem(0xaab8));
        // CB 4A 02E7
        gbc.setState(0x8807, 0x375f, 0x5910, 0x76a9, 0x4396, 0x705a, 0x1, 0x0);
        gbc.writeMem(0x8807, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x375f, gbc.sp());
        EXPECT(0x8809, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8807));
        EXPECT(0x4a, gbc.readMem(0x8808));
        // CB 4A 02E8
        gbc.setState(0x961f, 0x4509, 0x88f0, 0x4289, 0x1e9b, 0x4405, 0x0, 0x0);
        gbc.writeMem(0x961f, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x4509, gbc.sp());
        EXPECT(0x9621, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x961f));
        EXPECT(0x4a, gbc.readMem(0x9620));
        // CB 4A 02E9
        gbc.setState(0xcba2, 0x9f9c, 0x85c0, 0x8c83, 0xfec1, 0x2cc4, 0x1, 0x0);
        gbc.writeMem(0xcba2, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x9f9c, gbc.sp());
        EXPECT(0xcba4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcba2));
        EXPECT(0x4a, gbc.readMem(0xcba3));
        // CB 4A 02EA
        gbc.setState(0xe946, 0x512d, 0xbf80, 0xa5a6, 0x3bb8, 0x3a02, 0x0, 0x1);
        gbc.writeMem(0xe946, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x512d, gbc.sp());
        EXPECT(0xe948, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe946));
        EXPECT(0x4a, gbc.readMem(0xe947));
        // CB 4A 02EB
        gbc.setState(0xe324, 0x95d2, 0xaa40, 0x363c, 0x2231, 0xecfd, 0x0, 0x0);
        gbc.writeMem(0xe324, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x95d2, gbc.sp());
        EXPECT(0xe326, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe324));
        EXPECT(0x4a, gbc.readMem(0xe325));
        // CB 4A 02EC
        gbc.setState(0x4ccb, 0x1e85, 0x7c20, 0xcf61, 0xc8fd, 0xf1ce, 0x0, 0x1);
        gbc.writeMem(0x4ccb, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x1e85, gbc.sp());
        EXPECT(0x4ccd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4A 02ED
        gbc.setState(0xa6a7, 0x7ad4, 0x8a50, 0xcb90, 0x786e, 0xc5bc, 0x1, 0x0);
        gbc.writeMem(0xa6a7, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x7ad4, gbc.sp());
        EXPECT(0xa6a9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa6a7));
        EXPECT(0x4a, gbc.readMem(0xa6a8));
        // CB 4A 02EF
        gbc.setState(0x1a26, 0x1e5b, 0xffe0, 0xda86, 0x1a98, 0x9877, 0x1, 0x1);
        gbc.writeMem(0x1a26, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x1e5b, gbc.sp());
        EXPECT(0x1a28, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4A 02F0
        gbc.setState(0xc7ae, 0xc881, 0xa50, 0xf4da, 0x1ffe, 0x4265, 0x0, 0x1);
        gbc.writeMem(0xc7ae, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0xc881, gbc.sp());
        EXPECT(0xc7b0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc7ae));
        EXPECT(0x4a, gbc.readMem(0xc7af));
        // CB 4A 02F1
        gbc.setState(0x6a7a, 0x3f46, 0xd250, 0xd7b, 0x8a4f, 0x777c, 0x1, 0x0);
        gbc.writeMem(0x6a7a, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x3f46, gbc.sp());
        EXPECT(0x6a7c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4A 02F2
        gbc.setState(0x4f2, 0x7ff8, 0x3150, 0xb3ac, 0x4e08, 0xfd3d, 0x0, 0x0);
        gbc.writeMem(0x4f2, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x7ff8, gbc.sp());
        EXPECT(0x4f4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4A 02F3
        gbc.setState(0x1447, 0x68d9, 0xc8e0, 0x4dc7, 0x2c7e, 0x20, 0x0, 0x0);
        gbc.writeMem(0x1447, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x68d9, gbc.sp());
        EXPECT(0x1449, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4A 02F4
        gbc.setState(0xb5f5, 0x527f, 0x9f60, 0x28b5, 0xd7f3, 0xd0bd, 0x0, 0x1);
        gbc.writeMem(0xb5f5, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x527f, gbc.sp());
        EXPECT(0xb5f7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb5f5));
        EXPECT(0x4a, gbc.readMem(0xb5f6));
        // CB 4A 02F5
        gbc.setState(0x56cd, 0x370c, 0xde60, 0x16f8, 0x22a8, 0x1b48, 0x0, 0x1);
        gbc.writeMem(0x56cd, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0x370c, gbc.sp());
        EXPECT(0x56cf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4A 02F6
        gbc.setState(0x278d, 0xdb35, 0xb4e0, 0xf351, 0xb155, 0xb1c4, 0x1, 0x1);
        gbc.writeMem(0x278d, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0xdb35, gbc.sp());
        EXPECT(0x278f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4A 02F7
        gbc.setState(0x7b32, 0x473c, 0x5a0, 0x3c0c, 0xf534, 0x37bc, 0x0, 0x0);
        gbc.writeMem(0x7b32, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x473c, gbc.sp());
        EXPECT(0x7b34, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4A 02F8
        gbc.setState(0x3809, 0x9d8e, 0x9850, 0x16ec, 0xc970, 0x64d8, 0x1, 0x0);
        gbc.writeMem(0x3809, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x9d8e, gbc.sp());
        EXPECT(0x380b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4A 02F9
        gbc.setState(0x1650, 0xb52, 0x7350, 0xbaf9, 0x3ff7, 0x452e, 0x1, 0x0);
        gbc.writeMem(0x1650, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0xb52, gbc.sp());
        EXPECT(0x1652, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4A 02FA
        gbc.setState(0x282d, 0x7971, 0x1700, 0x4d17, 0x40, 0x7ada, 0x1, 0x0);
        gbc.writeMem(0x282d, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x7971, gbc.sp());
        EXPECT(0x282f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4A 02FB
        gbc.setState(0x56f4, 0x77c, 0x7e10, 0xa8bb, 0x67e, 0x5ebb, 0x0, 0x1);
        gbc.writeMem(0x56f4, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x77c, gbc.sp());
        EXPECT(0x56f6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4A 02FC
        gbc.setState(0xade9, 0x3b16, 0xcfb0, 0x4b28, 0x41ab, 0x8251, 0x0, 0x1);
        gbc.writeMem(0xade9, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x3b16, gbc.sp());
        EXPECT(0xadeb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xade9));
        EXPECT(0x4a, gbc.readMem(0xadea));
        // CB 4A 02FD
        gbc.setState(0x3ac1, 0x75a9, 0x72c0, 0x83d2, 0xce, 0xbb1e, 0x0, 0x0);
        gbc.writeMem(0x3ac1, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x75a9, gbc.sp());
        EXPECT(0x3ac3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4A 02FE
        gbc.setState(0x215c, 0xa28, 0xbde0, 0x60ed, 0xd88e, 0xd74, 0x1, 0x0);
        gbc.writeMem(0x215c, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0xa28, gbc.sp());
        EXPECT(0x215e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4A 02FF
        gbc.setState(0xc02c, 0x3e32, 0x6f40, 0x5055, 0xda6, 0xce02, 0x1, 0x1);
        gbc.writeMem(0xc02c, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x3e32, gbc.sp());
        EXPECT(0xc02e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc02c));
        EXPECT(0x4a, gbc.readMem(0xc02d));
        // CB 4A 0300
        gbc.setState(0x7e67, 0xb05f, 0x610, 0xd57d, 0x79a2, 0x36ae, 0x0, 0x1);
        gbc.writeMem(0x7e67, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0xb05f, gbc.sp());
        EXPECT(0x7e69, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4A 0301
        gbc.setState(0x31ea, 0x97a9, 0x6150, 0x268, 0x72e6, 0xba86, 0x0, 0x1);
        gbc.writeMem(0x31ea, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x97a9, gbc.sp());
        EXPECT(0x31ec, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4A 0302
        gbc.setState(0x55ff, 0x90c6, 0x3330, 0x33eb, 0xc224, 0x128, 0x1, 0x1);
        gbc.writeMem(0x55ff, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x90c6, gbc.sp());
        EXPECT(0x5601, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4A 0303
        gbc.setState(0xa92, 0x6952, 0x8c70, 0xd04f, 0x402e, 0xd9b2, 0x1, 0x0);
        gbc.writeMem(0xa92, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x6952, gbc.sp());
        EXPECT(0xa94, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4A 0304
        gbc.setState(0xe2b0, 0x9d3, 0xaef0, 0xd70f, 0x5683, 0xbc03, 0x0, 0x0);
        gbc.writeMem(0xe2b0, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x9d3, gbc.sp());
        EXPECT(0xe2b2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe2b0));
        EXPECT(0x4a, gbc.readMem(0xe2b1));
        // CB 4A 0305
        gbc.setState(0xed28, 0x12eb, 0xf860, 0xfd61, 0xd184, 0x2fa8, 0x0, 0x0);
        gbc.writeMem(0xed28, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x12eb, gbc.sp());
        EXPECT(0xed2a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xed28));
        EXPECT(0x4a, gbc.readMem(0xed29));
        // CB 4A 0306
        gbc.setState(0xe5a, 0x3654, 0xa2f0, 0x8191, 0xc472, 0x413e, 0x1, 0x0);
        gbc.writeMem(0xe5a, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x3654, gbc.sp());
        EXPECT(0xe5c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4A 0307
        gbc.setState(0x9d14, 0xee68, 0x2b40, 0xea43, 0xc4e6, 0x1191, 0x0, 0x1);
        gbc.writeMem(0x9d14, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0xee68, gbc.sp());
        EXPECT(0x9d16, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9d14));
        EXPECT(0x4a, gbc.readMem(0x9d15));
        // CB 4A 0308
        gbc.setState(0xd924, 0xbcbe, 0xb100, 0x5811, 0xcb75, 0x1bd2, 0x0, 0x1);
        gbc.writeMem(0xd924, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0xbcbe, gbc.sp());
        EXPECT(0xd926, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd924));
        EXPECT(0x4a, gbc.readMem(0xd925));
        // CB 4A 0309
        gbc.setState(0x57a2, 0x8e7f, 0x4a70, 0x49bc, 0x4dae, 0x2582, 0x1, 0x0);
        gbc.writeMem(0x57a2, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x8e7f, gbc.sp());
        EXPECT(0x57a4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4A 030A
        gbc.setState(0xee3f, 0x8fdd, 0xeaf0, 0xa7bf, 0x4b65, 0x409f, 0x1, 0x0);
        gbc.writeMem(0xee3f, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x8fdd, gbc.sp());
        EXPECT(0xee41, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xee3f));
        EXPECT(0x4a, gbc.readMem(0xee40));
        // CB 4A 030B
        gbc.setState(0x8540, 0xbab3, 0xfd10, 0x56a, 0x4a08, 0xf741, 0x1, 0x0);
        gbc.writeMem(0x8540, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0xbab3, gbc.sp());
        EXPECT(0x8542, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8540));
        EXPECT(0x4a, gbc.readMem(0x8541));
        // CB 4A 030C
        gbc.setState(0x4e33, 0x6d76, 0x7d0, 0xc715, 0xd983, 0xd785, 0x0, 0x1);
        gbc.writeMem(0x4e33, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x6d76, gbc.sp());
        EXPECT(0x4e35, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4A 030D
        gbc.setState(0x79c8, 0x7c4f, 0x6dc0, 0x54f7, 0x31a9, 0xe0d2, 0x1, 0x1);
        gbc.writeMem(0x79c8, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x7c4f, gbc.sp());
        EXPECT(0x79ca, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4A 030E
        gbc.setState(0x71ff, 0xbddb, 0x500, 0x5e, 0xd0cc, 0xc8d2, 0x0, 0x0);
        gbc.writeMem(0x71ff, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0xbddb, gbc.sp());
        EXPECT(0x7201, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4A 030F
        gbc.setState(0x8851, 0xa893, 0x84e0, 0x9964, 0x465a, 0x373a, 0x1, 0x1);
        gbc.writeMem(0x8851, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0xa893, gbc.sp());
        EXPECT(0x8853, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8851));
        EXPECT(0x4a, gbc.readMem(0x8852));
        // CB 4A 0310
        gbc.setState(0x182e, 0xf21a, 0x63a0, 0x2adf, 0xf897, 0x73fd, 0x0, 0x1);
        gbc.writeMem(0x182e, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0xf21a, gbc.sp());
        EXPECT(0x1830, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4A 0311
        gbc.setState(0x9cef, 0x73bc, 0x75a0, 0x2f69, 0x8485, 0x1e42, 0x0, 0x0);
        gbc.writeMem(0x9cef, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x73bc, gbc.sp());
        EXPECT(0x9cf1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9cef));
        EXPECT(0x4a, gbc.readMem(0x9cf0));
        // CB 4A 0312
        gbc.setState(0xec3c, 0x58ef, 0x94d0, 0x4183, 0x5955, 0x7b09, 0x0, 0x1);
        gbc.writeMem(0xec3c, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x58ef, gbc.sp());
        EXPECT(0xec3e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xec3c));
        EXPECT(0x4a, gbc.readMem(0xec3d));
        // CB 4A 0313
        gbc.setState(0xa8c6, 0x832f, 0xd170, 0x6c53, 0xdc01, 0x2cca, 0x1, 0x0);
        gbc.writeMem(0xa8c6, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x832f, gbc.sp());
        EXPECT(0xa8c8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa8c6));
        EXPECT(0x4a, gbc.readMem(0xa8c7));
        // CB 4A 0314
        gbc.setState(0x3034, 0x417f, 0x2d00, 0x3628, 0x6321, 0x38be, 0x0, 0x1);
        gbc.writeMem(0x3034, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0x417f, gbc.sp());
        EXPECT(0x3036, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4A 0315
        gbc.setState(0xb262, 0xec57, 0x1060, 0xd3ac, 0x2f30, 0x76d1, 0x0, 0x0);
        gbc.writeMem(0xb262, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0xec57, gbc.sp());
        EXPECT(0xb264, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb262));
        EXPECT(0x4a, gbc.readMem(0xb263));
        // CB 4A 0316
        gbc.setState(0xceeb, 0x732a, 0x6e0, 0xbed, 0x66f8, 0x690d, 0x0, 0x0);
        gbc.writeMem(0xceeb, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x732a, gbc.sp());
        EXPECT(0xceed, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xceeb));
        EXPECT(0x4a, gbc.readMem(0xceec));
        // CB 4A 0317
        gbc.setState(0x20cd, 0xd3fa, 0xc880, 0x3bf0, 0x2dfb, 0x1d17, 0x1, 0x0);
        gbc.writeMem(0x20cd, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0xd3fa, gbc.sp());
        EXPECT(0x20cf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4A 0318
        gbc.setState(0x88ca, 0x8086, 0xee00, 0xc309, 0x6c55, 0x264, 0x0, 0x0);
        gbc.writeMem(0x88ca, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x8086, gbc.sp());
        EXPECT(0x88cc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x88ca));
        EXPECT(0x4a, gbc.readMem(0x88cb));
        // CB 4A 031A
        gbc.setState(0x57c1, 0x65ab, 0x68a0, 0x4ee2, 0x47e9, 0x80cf, 0x0, 0x1);
        gbc.writeMem(0x57c1, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x65ab, gbc.sp());
        EXPECT(0x57c3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4A 031B
        gbc.setState(0x110a, 0xd359, 0x9d50, 0x431b, 0x4208, 0x7d0a, 0x0, 0x0);
        gbc.writeMem(0x110a, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0xd359, gbc.sp());
        EXPECT(0x110c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4A 031C
        gbc.setState(0x1248, 0x4b1c, 0x2a10, 0x946e, 0x9c10, 0x48a8, 0x1, 0x1);
        gbc.writeMem(0x1248, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x4b1c, gbc.sp());
        EXPECT(0x124a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4A 031D
        gbc.setState(0xc62d, 0x8431, 0x1d50, 0xfdb8, 0x18c6, 0xf5d0, 0x1, 0x1);
        gbc.writeMem(0xc62d, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x8431, gbc.sp());
        EXPECT(0xc62f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc62d));
        EXPECT(0x4a, gbc.readMem(0xc62e));
        // CB 4A 031E
        gbc.setState(0xcae4, 0xe109, 0x1cc0, 0x848e, 0x3200, 0x6a50, 0x0, 0x0);
        gbc.writeMem(0xcae4, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0xe109, gbc.sp());
        EXPECT(0xcae6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcae4));
        EXPECT(0x4a, gbc.readMem(0xcae5));
        // CB 4A 0320
        gbc.setState(0x8ded, 0x36ca, 0xd2b0, 0xa302, 0x8a33, 0xa98, 0x0, 0x0);
        gbc.writeMem(0x8ded, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x36ca, gbc.sp());
        EXPECT(0x8def, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8ded));
        EXPECT(0x4a, gbc.readMem(0x8dee));
        // CB 4A 0321
        gbc.setState(0x77b7, 0xc90a, 0x9e00, 0x97, 0x55a4, 0x65a9, 0x1, 0x0);
        gbc.writeMem(0x77b7, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0xc90a, gbc.sp());
        EXPECT(0x77b9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4A 0322
        gbc.setState(0x4ee4, 0x7b8a, 0x8c10, 0x30d5, 0x7061, 0x74c4, 0x0, 0x0);
        gbc.writeMem(0x4ee4, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x7b8a, gbc.sp());
        EXPECT(0x4ee6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4A 0323
        gbc.setState(0xdef2, 0x41e1, 0xf620, 0x7a5e, 0xe08c, 0x278e, 0x0, 0x1);
        gbc.writeMem(0xdef2, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x41e1, gbc.sp());
        EXPECT(0xdef4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdef2));
        EXPECT(0x4a, gbc.readMem(0xdef3));
        // CB 4A 0324
        gbc.setState(0x59ba, 0x4476, 0xb6f0, 0x6855, 0x50de, 0x2f7c, 0x0, 0x1);
        gbc.writeMem(0x59ba, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x4476, gbc.sp());
        EXPECT(0x59bc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4A 0325
        gbc.setState(0x9485, 0xfff, 0x1f60, 0x5e58, 0xd24f, 0x8287, 0x1, 0x1);
        gbc.writeMem(0x9485, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0xfff, gbc.sp());
        EXPECT(0x9487, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9485));
        EXPECT(0x4a, gbc.readMem(0x9486));
        // CB 4A 0326
        gbc.setState(0xc478, 0x3eaa, 0x5210, 0xb4d7, 0xa7ad, 0xfb9d, 0x1, 0x0);
        gbc.writeMem(0xc478, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x3eaa, gbc.sp());
        EXPECT(0xc47a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc478));
        EXPECT(0x4a, gbc.readMem(0xc479));
        // CB 4A 0327
        gbc.setState(0xc11, 0xb60b, 0x9e80, 0xe1c1, 0x76a2, 0x3a5a, 0x0, 0x0);
        gbc.writeMem(0xc11, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0xb60b, gbc.sp());
        EXPECT(0xc13, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4A 0328
        gbc.setState(0xb2bf, 0x6579, 0xc040, 0x7b09, 0xbae0, 0x72b8, 0x1, 0x0);
        gbc.writeMem(0xb2bf, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x6579, gbc.sp());
        EXPECT(0xb2c1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb2bf));
        EXPECT(0x4a, gbc.readMem(0xb2c0));
        // CB 4A 0329
        gbc.setState(0xa17b, 0xbcc3, 0x2780, 0x33fd, 0x3bf2, 0xd9d8, 0x1, 0x0);
        gbc.writeMem(0xa17b, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0xbcc3, gbc.sp());
        EXPECT(0xa17d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa17b));
        EXPECT(0x4a, gbc.readMem(0xa17c));
        // CB 4A 032A
        gbc.setState(0x551c, 0xf593, 0x1600, 0xe531, 0x3eb4, 0x8995, 0x0, 0x1);
        gbc.writeMem(0x551c, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0xf593, gbc.sp());
        EXPECT(0x551e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4A 032B
        gbc.setState(0xf99, 0x5165, 0x9060, 0xd223, 0x7a7c, 0xd835, 0x0, 0x1);
        gbc.writeMem(0xf99, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x5165, gbc.sp());
        EXPECT(0xf9b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4A 032C
        gbc.setState(0x77e0, 0x8f58, 0x9e20, 0x6005, 0x4eea, 0xee58, 0x0, 0x0);
        gbc.writeMem(0x77e0, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x8f58, gbc.sp());
        EXPECT(0x77e2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4A 032D
        gbc.setState(0x6579, 0x91c6, 0x10f0, 0xea5, 0x53b6, 0xe81e, 0x0, 0x1);
        gbc.writeMem(0x6579, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x91c6, gbc.sp());
        EXPECT(0x657b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4A 032E
        gbc.setState(0xd3fb, 0x79b4, 0xc60, 0xb67a, 0x56ca, 0xc86, 0x0, 0x0);
        gbc.writeMem(0xd3fb, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x79b4, gbc.sp());
        EXPECT(0xd3fd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd3fb));
        EXPECT(0x4a, gbc.readMem(0xd3fc));
        // CB 4A 032F
        gbc.setState(0x2424, 0xc269, 0xf940, 0xb622, 0x95b1, 0xe165, 0x0, 0x1);
        gbc.writeMem(0x2424, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0xc269, gbc.sp());
        EXPECT(0x2426, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4A 0330
        gbc.setState(0x7247, 0x32aa, 0x37a0, 0x4606, 0xe50d, 0x2737, 0x0, 0x1);
        gbc.writeMem(0x7247, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x32aa, gbc.sp());
        EXPECT(0x7249, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4A 0331
        gbc.setState(0xdb31, 0x19, 0xb790, 0x3bda, 0xa845, 0xdb52, 0x1, 0x1);
        gbc.writeMem(0xdb31, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x19, gbc.sp());
        EXPECT(0xdb33, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdb31));
        EXPECT(0x4a, gbc.readMem(0xdb32));
        // CB 4A 0332
        gbc.setState(0xcc3d, 0x7d51, 0xe650, 0xca36, 0x663, 0x5e29, 0x1, 0x0);
        gbc.writeMem(0xcc3d, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x7d51, gbc.sp());
        EXPECT(0xcc3f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcc3d));
        EXPECT(0x4a, gbc.readMem(0xcc3e));
        // CB 4A 0333
        gbc.setState(0x7f34, 0x5099, 0x3330, 0x9bb9, 0x7c9f, 0xb980, 0x0, 0x1);
        gbc.writeMem(0x7f34, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x5099, gbc.sp());
        EXPECT(0x7f36, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4A 0334
        gbc.setState(0x78b1, 0x81ce, 0x5840, 0xa8ca, 0x6ca, 0x17db, 0x0, 0x0);
        gbc.writeMem(0x78b1, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x81ce, gbc.sp());
        EXPECT(0x78b3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4A 0335
        gbc.setState(0x19c3, 0x5731, 0xe920, 0xcb8d, 0x6cdc, 0x2ea7, 0x1, 0x1);
        gbc.writeMem(0x19c3, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x5731, gbc.sp());
        EXPECT(0x19c5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4A 0336
        gbc.setState(0x40a2, 0x1bea, 0x1600, 0x4e1e, 0x815b, 0x2361, 0x0, 0x1);
        gbc.writeMem(0x40a2, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x1bea, gbc.sp());
        EXPECT(0x40a4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4A 0337
        gbc.setState(0x889c, 0xa638, 0x5750, 0xf69e, 0xc96e, 0xdd4d, 0x1, 0x0);
        gbc.writeMem(0x889c, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0xa638, gbc.sp());
        EXPECT(0x889e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x889c));
        EXPECT(0x4a, gbc.readMem(0x889d));
        // CB 4A 0338
        gbc.setState(0x1bd5, 0xcc7b, 0xdb20, 0x6449, 0x3ccc, 0x954d, 0x1, 0x1);
        gbc.writeMem(0x1bd5, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0xcc7b, gbc.sp());
        EXPECT(0x1bd7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4A 0339
        gbc.setState(0xab8b, 0xf256, 0x1cc0, 0x9497, 0x1bc2, 0xc9da, 0x1, 0x1);
        gbc.writeMem(0xab8b, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0xf256, gbc.sp());
        EXPECT(0xab8d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xab8b));
        EXPECT(0x4a, gbc.readMem(0xab8c));
        // CB 4A 033A
        gbc.setState(0x5d1d, 0xcddd, 0x6da0, 0x4bf2, 0x7aa2, 0xfc89, 0x0, 0x1);
        gbc.writeMem(0x5d1d, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0xcddd, gbc.sp());
        EXPECT(0x5d1f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4A 033B
        gbc.setState(0x51e0, 0xc6eb, 0xc660, 0xfd43, 0x7382, 0x524f, 0x1, 0x1);
        gbc.writeMem(0x51e0, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0xc6eb, gbc.sp());
        EXPECT(0x51e2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4A 033C
        gbc.setState(0x42b5, 0x814, 0xd540, 0xf391, 0xe4ca, 0xda98, 0x0, 0x0);
        gbc.writeMem(0x42b5, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x814, gbc.sp());
        EXPECT(0x42b7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4A 033D
        gbc.setState(0x32f8, 0x5059, 0xa880, 0x68a1, 0x608, 0xc3ed, 0x1, 0x1);
        gbc.writeMem(0x32f8, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x5059, gbc.sp());
        EXPECT(0x32fa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4A 033E
        gbc.setState(0x6de1, 0x4e23, 0x8010, 0xec2d, 0x5ba5, 0xea21, 0x1, 0x0);
        gbc.writeMem(0x6de1, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x4e23, gbc.sp());
        EXPECT(0x6de3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4A 033F
        gbc.setState(0x5b66, 0x9777, 0xf5f0, 0xe1ad, 0x848b, 0xb5b, 0x0, 0x0);
        gbc.writeMem(0x5b66, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x9777, gbc.sp());
        EXPECT(0x5b68, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4A 0340
        gbc.setState(0xa16f, 0xcd88, 0x120, 0xddb0, 0xf5ce, 0xa217, 0x1, 0x1);
        gbc.writeMem(0xa16f, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0xcd88, gbc.sp());
        EXPECT(0xa171, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa16f));
        EXPECT(0x4a, gbc.readMem(0xa170));
        // CB 4A 0341
        gbc.setState(0xee8c, 0xfec, 0xdbf0, 0x8213, 0x2a9d, 0x3ef1, 0x0, 0x1);
        gbc.writeMem(0xee8c, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0xfec, gbc.sp());
        EXPECT(0xee8e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xee8c));
        EXPECT(0x4a, gbc.readMem(0xee8d));
        // CB 4A 0342
        gbc.setState(0x3e24, 0xc2ce, 0x3de0, 0x921a, 0x810c, 0x42b2, 0x1, 0x0);
        gbc.writeMem(0x3e24, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0xc2ce, gbc.sp());
        EXPECT(0x3e26, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4A 0343
        gbc.setState(0xadac, 0x17ba, 0x7c70, 0xc5b7, 0x7b4, 0x422b, 0x0, 0x1);
        gbc.writeMem(0xadac, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x17ba, gbc.sp());
        EXPECT(0xadae, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xadac));
        EXPECT(0x4a, gbc.readMem(0xadad));
        // CB 4A 0344
        gbc.setState(0x2dd4, 0xfa1, 0xa0f0, 0xb1a8, 0x9d44, 0xb2de, 0x0, 0x1);
        gbc.writeMem(0x2dd4, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0xfa1, gbc.sp());
        EXPECT(0x2dd6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4A 0345
        gbc.setState(0xaa6f, 0x35d9, 0xc360, 0xbf82, 0xd59b, 0xaf70, 0x1, 0x0);
        gbc.writeMem(0xaa6f, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x35d9, gbc.sp());
        EXPECT(0xaa71, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaa6f));
        EXPECT(0x4a, gbc.readMem(0xaa70));
        // CB 4A 0346
        gbc.setState(0x9887, 0x2ffc, 0x3f40, 0xd40d, 0xe19c, 0x9d6c, 0x1, 0x1);
        gbc.writeMem(0x9887, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x2ffc, gbc.sp());
        EXPECT(0x9889, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9887));
        EXPECT(0x4a, gbc.readMem(0x9888));
        // CB 4A 0347
        gbc.setState(0x71ce, 0xb622, 0xad00, 0xd0ce, 0x51b2, 0x4f9f, 0x1, 0x0);
        gbc.writeMem(0x71ce, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0xb622, gbc.sp());
        EXPECT(0x71d0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4A 0348
        gbc.setState(0xd82, 0xe578, 0xdec0, 0x10b, 0xf126, 0xcf62, 0x1, 0x0);
        gbc.writeMem(0xd82, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0xe578, gbc.sp());
        EXPECT(0xd84, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4A 0349
        gbc.setState(0xc7ef, 0x634f, 0x5b80, 0x4278, 0x96e5, 0x581, 0x1, 0x0);
        gbc.writeMem(0xc7ef, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x634f, gbc.sp());
        EXPECT(0xc7f1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc7ef));
        EXPECT(0x4a, gbc.readMem(0xc7f0));
        // CB 4A 034A
        gbc.setState(0x9d6b, 0xa61d, 0xf980, 0x79e, 0xa4d9, 0xf77e, 0x0, 0x0);
        gbc.writeMem(0x9d6b, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0xa61d, gbc.sp());
        EXPECT(0x9d6d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9d6b));
        EXPECT(0x4a, gbc.readMem(0x9d6c));
        // CB 4A 034B
        gbc.setState(0xee7f, 0x7d2b, 0x7b50, 0xd196, 0x3b3, 0x227b, 0x0, 0x0);
        gbc.writeMem(0xee7f, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x7d2b, gbc.sp());
        EXPECT(0xee81, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xee7f));
        EXPECT(0x4a, gbc.readMem(0xee80));
        // CB 4A 034C
        gbc.setState(0xb597, 0x3766, 0xb210, 0x3db8, 0x3fe, 0xf6aa, 0x1, 0x1);
        gbc.writeMem(0xb597, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x3766, gbc.sp());
        EXPECT(0xb599, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb597));
        EXPECT(0x4a, gbc.readMem(0xb598));
        // CB 4A 034D
        gbc.setState(0x661e, 0x6601, 0xe680, 0xf967, 0x21f5, 0x76c3, 0x1, 0x0);
        gbc.writeMem(0x661e, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x6601, gbc.sp());
        EXPECT(0x6620, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4A 034E
        gbc.setState(0x7650, 0xb00f, 0xac50, 0x5d2b, 0xc830, 0x537a, 0x1, 0x1);
        gbc.writeMem(0x7650, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0xb00f, gbc.sp());
        EXPECT(0x7652, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4A 034F
        gbc.setState(0x7753, 0xfe8c, 0x1a0, 0xea4c, 0x9131, 0x8075, 0x0, 0x1);
        gbc.writeMem(0x7753, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0xfe8c, gbc.sp());
        EXPECT(0x7755, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4A 0350
        gbc.setState(0x2e68, 0x80e7, 0x1d70, 0x592, 0xef3f, 0x66fd, 0x0, 0x1);
        gbc.writeMem(0x2e68, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x80e7, gbc.sp());
        EXPECT(0x2e6a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4A 0351
        gbc.setState(0x58b8, 0xe8e6, 0xbf30, 0xe6a1, 0x93a1, 0x429f, 0x0, 0x0);
        gbc.writeMem(0x58b8, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0xe8e6, gbc.sp());
        EXPECT(0x58ba, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4A 0352
        gbc.setState(0x5539, 0xc6d5, 0x8fc0, 0x857c, 0x97a6, 0x860a, 0x1, 0x1);
        gbc.writeMem(0x5539, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0xc6d5, gbc.sp());
        EXPECT(0x553b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4A 0353
        gbc.setState(0xcb73, 0x8db8, 0xd4c0, 0xa550, 0x23a9, 0xd16a, 0x1, 0x0);
        gbc.writeMem(0xcb73, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x8db8, gbc.sp());
        EXPECT(0xcb75, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcb73));
        EXPECT(0x4a, gbc.readMem(0xcb74));
        // CB 4A 0355
        gbc.setState(0x55a4, 0x5911, 0x3e80, 0xdad7, 0x7a96, 0x4789, 0x0, 0x0);
        gbc.writeMem(0x55a4, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x5911, gbc.sp());
        EXPECT(0x55a6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4A 0356
        gbc.setState(0x47cf, 0x1748, 0xfb30, 0x4236, 0xe645, 0x1b13, 0x1, 0x0);
        gbc.writeMem(0x47cf, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x1748, gbc.sp());
        EXPECT(0x47d1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4A 0357
        gbc.setState(0x9848, 0xc432, 0x6b10, 0x9cdd, 0xa5f9, 0x7bfb, 0x0, 0x0);
        gbc.writeMem(0x9848, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0xc432, gbc.sp());
        EXPECT(0x984a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9848));
        EXPECT(0x4a, gbc.readMem(0x9849));
        // CB 4A 0358
        gbc.setState(0x468b, 0x1830, 0x3380, 0xb48e, 0x3a30, 0xa89b, 0x1, 0x0);
        gbc.writeMem(0x468b, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x1830, gbc.sp());
        EXPECT(0x468d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4A 0359
        gbc.setState(0x4ec3, 0x5fad, 0x6fe0, 0x83d4, 0x564b, 0xf994, 0x1, 0x1);
        gbc.writeMem(0x4ec3, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x5fad, gbc.sp());
        EXPECT(0x4ec5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4A 035A
        gbc.setState(0x6493, 0xbbf1, 0xadb0, 0x8346, 0x76aa, 0xa9c5, 0x0, 0x0);
        gbc.writeMem(0x6493, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0xbbf1, gbc.sp());
        EXPECT(0x6495, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4A 035B
        gbc.setState(0x6f00, 0x18d6, 0x78a0, 0x3340, 0x47fe, 0xa58c, 0x0, 0x0);
        gbc.writeMem(0x6f00, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x18d6, gbc.sp());
        EXPECT(0x6f02, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4A 035C
        gbc.setState(0xcdf8, 0xa8f6, 0x7e10, 0x1a23, 0x5ab3, 0x4333, 0x0, 0x1);
        gbc.writeMem(0xcdf8, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0xa8f6, gbc.sp());
        EXPECT(0xcdfa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcdf8));
        EXPECT(0x4a, gbc.readMem(0xcdf9));
        // CB 4A 035D
        gbc.setState(0xb260, 0x5e40, 0x6380, 0xb687, 0x8413, 0xd4da, 0x1, 0x0);
        gbc.writeMem(0xb260, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x5e40, gbc.sp());
        EXPECT(0xb262, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb260));
        EXPECT(0x4a, gbc.readMem(0xb261));
        // CB 4A 035E
        gbc.setState(0x919f, 0x5cab, 0xca10, 0x5e51, 0x3ce5, 0x620f, 0x1, 0x0);
        gbc.writeMem(0x919f, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x5cab, gbc.sp());
        EXPECT(0x91a1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x919f));
        EXPECT(0x4a, gbc.readMem(0x91a0));
        // CB 4A 035F
        gbc.setState(0x489c, 0x453c, 0xfae0, 0x4bb1, 0xbf79, 0x9917, 0x1, 0x0);
        gbc.writeMem(0x489c, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x453c, gbc.sp());
        EXPECT(0x489e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4A 0360
        gbc.setState(0xaa35, 0xdc48, 0xea10, 0xe2e6, 0x69f6, 0x81ea, 0x0, 0x0);
        gbc.writeMem(0xaa35, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0xdc48, gbc.sp());
        EXPECT(0xaa37, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaa35));
        EXPECT(0x4a, gbc.readMem(0xaa36));
        // CB 4A 0361
        gbc.setState(0xb4ed, 0xebff, 0x4080, 0xf125, 0x3dbf, 0x603, 0x0, 0x0);
        gbc.writeMem(0xb4ed, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0xebff, gbc.sp());
        EXPECT(0xb4ef, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb4ed));
        EXPECT(0x4a, gbc.readMem(0xb4ee));
        // CB 4A 0362
        gbc.setState(0xcaa2, 0xc47a, 0xa910, 0x3fe9, 0xeb64, 0x8034, 0x1, 0x1);
        gbc.writeMem(0xcaa2, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0xc47a, gbc.sp());
        EXPECT(0xcaa4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcaa2));
        EXPECT(0x4a, gbc.readMem(0xcaa3));
        // CB 4A 0363
        gbc.setState(0xa5b4, 0xaf05, 0x4d20, 0x1e53, 0x3929, 0xdb0c, 0x0, 0x0);
        gbc.writeMem(0xa5b4, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0xaf05, gbc.sp());
        EXPECT(0xa5b6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa5b4));
        EXPECT(0x4a, gbc.readMem(0xa5b5));
        // CB 4A 0364
        gbc.setState(0xdba2, 0xfbec, 0xa8a0, 0x9489, 0xbbc1, 0xdf79, 0x0, 0x1);
        gbc.writeMem(0xdba2, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0xfbec, gbc.sp());
        EXPECT(0xdba4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdba2));
        EXPECT(0x4a, gbc.readMem(0xdba3));
        // CB 4A 0365
        gbc.setState(0x63e4, 0x6135, 0x7ca0, 0xd1d3, 0x533c, 0x4a85, 0x0, 0x1);
        gbc.writeMem(0x63e4, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x6135, gbc.sp());
        EXPECT(0x63e6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4A 0366
        gbc.setState(0xc6f5, 0x8a19, 0x98c0, 0xdb31, 0x21c6, 0xc2f7, 0x1, 0x1);
        gbc.writeMem(0xc6f5, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x8a19, gbc.sp());
        EXPECT(0xc6f7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc6f5));
        EXPECT(0x4a, gbc.readMem(0xc6f6));
        // CB 4A 0367
        gbc.setState(0xd58f, 0xb994, 0xdd20, 0x73c5, 0x67a8, 0x57e, 0x1, 0x1);
        gbc.writeMem(0xd58f, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0xb994, gbc.sp());
        EXPECT(0xd591, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd58f));
        EXPECT(0x4a, gbc.readMem(0xd590));
        // CB 4A 0368
        gbc.setState(0x9b57, 0xa7ca, 0x8510, 0xeb5c, 0xb0cd, 0xaead, 0x1, 0x0);
        gbc.writeMem(0x9b57, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0xa7ca, gbc.sp());
        EXPECT(0x9b59, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9b57));
        EXPECT(0x4a, gbc.readMem(0x9b58));
        // CB 4A 0369
        gbc.setState(0xca, 0x2a2c, 0x41a0, 0x9441, 0xa79, 0x8280, 0x1, 0x1);
        gbc.writeMem(0xca, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x2a2c, gbc.sp());
        EXPECT(0xcc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4A 036A
        gbc.setState(0xb30c, 0xb7bf, 0xce50, 0xa462, 0x3434, 0x60f3, 0x0, 0x1);
        gbc.writeMem(0xb30c, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0xb7bf, gbc.sp());
        EXPECT(0xb30e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb30c));
        EXPECT(0x4a, gbc.readMem(0xb30d));
        // CB 4A 036B
        gbc.setState(0x1cee, 0xe906, 0x5500, 0x124f, 0x2a17, 0xf2d0, 0x0, 0x0);
        gbc.writeMem(0x1cee, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0xe906, gbc.sp());
        EXPECT(0x1cf0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4A 036C
        gbc.setState(0x23ab, 0xfb01, 0xd390, 0x3a9, 0x614e, 0x5044, 0x1, 0x1);
        gbc.writeMem(0x23ab, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0xfb01, gbc.sp());
        EXPECT(0x23ad, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4A 036D
        gbc.setState(0x58dc, 0x4b0d, 0xd800, 0xda0, 0xb56a, 0x4862, 0x0, 0x1);
        gbc.writeMem(0x58dc, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x4b0d, gbc.sp());
        EXPECT(0x58de, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4A 036E
        gbc.setState(0x2fc4, 0xcb86, 0x41c0, 0x516d, 0xfde4, 0xbed1, 0x1, 0x1);
        gbc.writeMem(0x2fc4, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0xcb86, gbc.sp());
        EXPECT(0x2fc6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4A 036F
        gbc.setState(0x239, 0x8479, 0x9820, 0x5a6d, 0x51b6, 0x2d5d, 0x0, 0x1);
        gbc.writeMem(0x239, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x8479, gbc.sp());
        EXPECT(0x23b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4A 0370
        gbc.setState(0x19ca, 0xe113, 0xa6e0, 0x903e, 0x6879, 0x3f0d, 0x1, 0x0);
        gbc.writeMem(0x19ca, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0xe113, gbc.sp());
        EXPECT(0x19cc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4A 0371
        gbc.setState(0xd111, 0xe1e1, 0x7610, 0xcdb0, 0xa63c, 0xb292, 0x1, 0x0);
        gbc.writeMem(0xd111, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0xe1e1, gbc.sp());
        EXPECT(0xd113, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd111));
        EXPECT(0x4a, gbc.readMem(0xd112));
        // CB 4A 0372
        gbc.setState(0x9903, 0x664d, 0xd350, 0xf4a, 0x4898, 0x2199, 0x0, 0x1);
        gbc.writeMem(0x9903, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x664d, gbc.sp());
        EXPECT(0x9905, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9903));
        EXPECT(0x4a, gbc.readMem(0x9904));
        // CB 4A 0373
        gbc.setState(0x235e, 0xb7d7, 0xcdd0, 0x4598, 0x8b75, 0x7125, 0x0, 0x0);
        gbc.writeMem(0x235e, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0xb7d7, gbc.sp());
        EXPECT(0x2360, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4A 0374
        gbc.setState(0x2bac, 0x9fc6, 0x3e60, 0xd1eb, 0xf2e0, 0xa603, 0x0, 0x1);
        gbc.writeMem(0x2bac, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x9fc6, gbc.sp());
        EXPECT(0x2bae, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4A 0375
        gbc.setState(0xd8ed, 0x687c, 0x78a0, 0x7cce, 0x5772, 0xea7, 0x1, 0x0);
        gbc.writeMem(0xd8ed, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x687c, gbc.sp());
        EXPECT(0xd8ef, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd8ed));
        EXPECT(0x4a, gbc.readMem(0xd8ee));
        // CB 4A 0377
        gbc.setState(0x19ff, 0xc660, 0x8760, 0x8781, 0x547, 0x6cd8, 0x1, 0x0);
        gbc.writeMem(0x19ff, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0xc660, gbc.sp());
        EXPECT(0x1a01, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4A 0378
        gbc.setState(0x4727, 0x195b, 0xaa70, 0x3c07, 0x9c87, 0x41b9, 0x0, 0x1);
        gbc.writeMem(0x4727, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x195b, gbc.sp());
        EXPECT(0x4729, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4A 0379
        gbc.setState(0x530a, 0xcd8f, 0xeb20, 0xfd6a, 0x6430, 0x5c71, 0x0, 0x1);
        gbc.writeMem(0x530a, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0xcd8f, gbc.sp());
        EXPECT(0x530c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4A 037A
        gbc.setState(0x2b7e, 0x5443, 0x6890, 0xf91f, 0x98ba, 0x7bb9, 0x1, 0x0);
        gbc.writeMem(0x2b7e, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x5443, gbc.sp());
        EXPECT(0x2b80, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4A 037B
        gbc.setState(0x4637, 0x5fcc, 0x940, 0x7c2e, 0xb179, 0x134c, 0x1, 0x0);
        gbc.writeMem(0x4637, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x5fcc, gbc.sp());
        EXPECT(0x4639, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4A 037C
        gbc.setState(0xd61e, 0x42b3, 0xb690, 0xfec7, 0xd290, 0xdf9f, 0x0, 0x1);
        gbc.writeMem(0xd61e, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x42b3, gbc.sp());
        EXPECT(0xd620, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd61e));
        EXPECT(0x4a, gbc.readMem(0xd61f));
        // CB 4A 037D
        gbc.setState(0xbe73, 0x2c9, 0x1980, 0x6ecd, 0xd253, 0x31fc, 0x1, 0x0);
        gbc.writeMem(0xbe73, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x2c9, gbc.sp());
        EXPECT(0xbe75, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbe73));
        EXPECT(0x4a, gbc.readMem(0xbe74));
        // CB 4A 037E
        gbc.setState(0x50b3, 0x9ad2, 0x2020, 0x3b9a, 0xd2c2, 0x751, 0x1, 0x0);
        gbc.writeMem(0x50b3, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x9ad2, gbc.sp());
        EXPECT(0x50b5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4A 037F
        gbc.setState(0xe1f3, 0x8af1, 0xacd0, 0x11a7, 0x509f, 0x3d6a, 0x1, 0x0);
        gbc.writeMem(0xe1f3, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x8af1, gbc.sp());
        EXPECT(0xe1f5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe1f3));
        EXPECT(0x4a, gbc.readMem(0xe1f4));
        // CB 4A 0380
        gbc.setState(0x40f5, 0xaf55, 0x2050, 0x5073, 0xd11f, 0x8ec, 0x1, 0x0);
        gbc.writeMem(0x40f5, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0xaf55, gbc.sp());
        EXPECT(0x40f7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4A 0381
        gbc.setState(0x2af5, 0x4002, 0x2600, 0xbd73, 0xd575, 0x49cd, 0x1, 0x0);
        gbc.writeMem(0x2af5, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x4002, gbc.sp());
        EXPECT(0x2af7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4A 0382
        gbc.setState(0x7d7d, 0xb52, 0x4790, 0x33dd, 0xc8e9, 0xc6a7, 0x1, 0x0);
        gbc.writeMem(0x7d7d, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0xb52, gbc.sp());
        EXPECT(0x7d7f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4A 0383
        gbc.setState(0x25f0, 0x8a66, 0x3c70, 0x5957, 0xc476, 0xdb9e, 0x1, 0x0);
        gbc.writeMem(0x25f0, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x8a66, gbc.sp());
        EXPECT(0x25f2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4A 0384
        gbc.setState(0x3362, 0xd595, 0x1ce0, 0xa36c, 0x3134, 0x43d5, 0x1, 0x0);
        gbc.writeMem(0x3362, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0xd595, gbc.sp());
        EXPECT(0x3364, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4A 0385
        gbc.setState(0x8b18, 0x52dc, 0x8ee0, 0xe916, 0x84f4, 0x9c1, 0x0, 0x0);
        gbc.writeMem(0x8b18, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x52dc, gbc.sp());
        EXPECT(0x8b1a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8b18));
        EXPECT(0x4a, gbc.readMem(0x8b19));
        // CB 4A 0386
        gbc.setState(0xc397, 0x13e7, 0x6710, 0x9c4b, 0xa38d, 0x488b, 0x0, 0x0);
        gbc.writeMem(0xc397, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x13e7, gbc.sp());
        EXPECT(0xc399, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc397));
        EXPECT(0x4a, gbc.readMem(0xc398));
        // CB 4A 0387
        gbc.setState(0x3106, 0x45e6, 0x2210, 0xa554, 0xad13, 0xc96b, 0x1, 0x1);
        gbc.writeMem(0x3106, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x45e6, gbc.sp());
        EXPECT(0x3108, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4A 0388
        gbc.setState(0xee4b, 0xa14d, 0xe0f0, 0x9a5a, 0x7b1f, 0xa9ad, 0x0, 0x1);
        gbc.writeMem(0xee4b, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0xa14d, gbc.sp());
        EXPECT(0xee4d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xee4b));
        EXPECT(0x4a, gbc.readMem(0xee4c));
        // CB 4A 0389
        gbc.setState(0x1a81, 0x98e, 0x7ba0, 0xe64, 0x514, 0x5573, 0x0, 0x1);
        gbc.writeMem(0x1a81, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x98e, gbc.sp());
        EXPECT(0x1a83, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4A 038A
        gbc.setState(0x35e1, 0xa1a1, 0xcb00, 0xd9f, 0xe6c6, 0xd737, 0x0, 0x0);
        gbc.writeMem(0x35e1, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0xa1a1, gbc.sp());
        EXPECT(0x35e3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4A 038B
        gbc.setState(0x261d, 0x3b81, 0xd340, 0xdd9b, 0x7100, 0xdb79, 0x0, 0x1);
        gbc.writeMem(0x261d, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x3b81, gbc.sp());
        EXPECT(0x261f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4A 038C
        gbc.setState(0xa213, 0xd257, 0x3f50, 0xdc61, 0x5168, 0xcb84, 0x1, 0x1);
        gbc.writeMem(0xa213, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0xd257, gbc.sp());
        EXPECT(0xa215, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa213));
        EXPECT(0x4a, gbc.readMem(0xa214));
        // CB 4A 038D
        gbc.setState(0xd29d, 0x7b62, 0xf2b0, 0x8f4f, 0x4ce9, 0xd0dd, 0x1, 0x0);
        gbc.writeMem(0xd29d, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x7b62, gbc.sp());
        EXPECT(0xd29f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd29d));
        EXPECT(0x4a, gbc.readMem(0xd29e));
        // CB 4A 038E
        gbc.setState(0x9c9a, 0x5269, 0xc280, 0xe2c6, 0x5cf, 0x3887, 0x1, 0x0);
        gbc.writeMem(0x9c9a, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x5269, gbc.sp());
        EXPECT(0x9c9c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9c9a));
        EXPECT(0x4a, gbc.readMem(0x9c9b));
        // CB 4A 038F
        gbc.setState(0x7acb, 0xdbc8, 0x8230, 0x4280, 0x94c2, 0x263b, 0x0, 0x1);
        gbc.writeMem(0x7acb, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0xdbc8, gbc.sp());
        EXPECT(0x7acd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4A 0390
        gbc.setState(0x7a9d, 0x925, 0xc6b0, 0xad3f, 0x634c, 0xbdaf, 0x1, 0x0);
        gbc.writeMem(0x7a9d, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x925, gbc.sp());
        EXPECT(0x7a9f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4A 0391
        gbc.setState(0xe649, 0x68f5, 0x6a70, 0x8415, 0x1f3a, 0x4ed8, 0x0, 0x1);
        gbc.writeMem(0xe649, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x68f5, gbc.sp());
        EXPECT(0xe64b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe649));
        EXPECT(0x4a, gbc.readMem(0xe64a));
        // CB 4A 0392
        gbc.setState(0xc018, 0xa54e, 0x7460, 0x5e1f, 0xc23, 0xbf6e, 0x0, 0x1);
        gbc.writeMem(0xc018, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0xa54e, gbc.sp());
        EXPECT(0xc01a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc018));
        EXPECT(0x4a, gbc.readMem(0xc019));
        // CB 4A 0393
        gbc.setState(0xc968, 0x897d, 0x5a10, 0x7c4d, 0x471a, 0xc256, 0x0, 0x1);
        gbc.writeMem(0xc968, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0x897d, gbc.sp());
        EXPECT(0xc96a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc968));
        EXPECT(0x4a, gbc.readMem(0xc969));
        // CB 4A 0394
        gbc.setState(0x5b5f, 0xe18f, 0x8720, 0xa62d, 0x96eb, 0x5156, 0x1, 0x0);
        gbc.writeMem(0x5b5f, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0xe18f, gbc.sp());
        EXPECT(0x5b61, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4A 0395
        gbc.setState(0xe12b, 0x1ee5, 0x90a0, 0x5a4f, 0xcfec, 0x5033, 0x1, 0x0);
        gbc.writeMem(0xe12b, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x1ee5, gbc.sp());
        EXPECT(0xe12d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe12b));
        EXPECT(0x4a, gbc.readMem(0xe12c));
        // CB 4A 0396
        gbc.setState(0xd6b, 0xd9a2, 0xc190, 0x8dfb, 0xb2c6, 0xf51e, 0x1, 0x0);
        gbc.writeMem(0xd6b, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0xd9a2, gbc.sp());
        EXPECT(0xd6d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4A 0397
        gbc.setState(0xa6de, 0x18ec, 0xcad0, 0x7a2f, 0x8c15, 0xe654, 0x0, 0x1);
        gbc.writeMem(0xa6de, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x18ec, gbc.sp());
        EXPECT(0xa6e0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa6de));
        EXPECT(0x4a, gbc.readMem(0xa6df));
        // CB 4A 0398
        gbc.setState(0xe80c, 0x3957, 0x4650, 0x3eab, 0x9dc, 0xd05, 0x0, 0x1);
        gbc.writeMem(0xe80c, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x3957, gbc.sp());
        EXPECT(0xe80e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe80c));
        EXPECT(0x4a, gbc.readMem(0xe80d));
        // CB 4A 0399
        gbc.setState(0x3022, 0xa7c5, 0x5f80, 0x6b3e, 0x6699, 0x5eb1, 0x0, 0x0);
        gbc.writeMem(0x3022, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0xa7c5, gbc.sp());
        EXPECT(0x3024, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4A 039A
        gbc.setState(0x289b, 0xc871, 0x1310, 0x2a9d, 0x3d44, 0xc38d, 0x1, 0x0);
        gbc.writeMem(0x289b, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0xc871, gbc.sp());
        EXPECT(0x289d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4A 039B
        gbc.setState(0x9ea7, 0x77c3, 0xf10, 0x52dd, 0x4f3, 0x8013, 0x0, 0x1);
        gbc.writeMem(0x9ea7, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x77c3, gbc.sp());
        EXPECT(0x9ea9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9ea7));
        EXPECT(0x4a, gbc.readMem(0x9ea8));
        // CB 4A 039C
        gbc.setState(0x4f85, 0x5705, 0xd660, 0x6ac2, 0xde12, 0xd588, 0x0, 0x0);
        gbc.writeMem(0x4f85, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x5705, gbc.sp());
        EXPECT(0x4f87, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4A 039D
        gbc.setState(0xc380, 0x2723, 0xe7a0, 0x4cc4, 0x985b, 0xbc6e, 0x0, 0x1);
        gbc.writeMem(0xc380, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x2723, gbc.sp());
        EXPECT(0xc382, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc380));
        EXPECT(0x4a, gbc.readMem(0xc381));
        // CB 4A 039E
        gbc.setState(0x52a5, 0x8814, 0x39a0, 0xb813, 0xc747, 0x2e2a, 0x1, 0x1);
        gbc.writeMem(0x52a5, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x8814, gbc.sp());
        EXPECT(0x52a7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4A 039F
        gbc.setState(0x2340, 0x2cc4, 0x70c0, 0xecee, 0xf194, 0xda04, 0x1, 0x1);
        gbc.writeMem(0x2340, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x2cc4, gbc.sp());
        EXPECT(0x2342, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4A 03A0
        gbc.setState(0xb724, 0xf2e3, 0x5920, 0x765b, 0x6195, 0xa94a, 0x1, 0x1);
        gbc.writeMem(0xb724, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0xf2e3, gbc.sp());
        EXPECT(0xb726, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb724));
        EXPECT(0x4a, gbc.readMem(0xb725));
        // CB 4A 03A1
        gbc.setState(0xdb46, 0x6a7e, 0x5990, 0xc53c, 0xee2c, 0xe07, 0x1, 0x1);
        gbc.writeMem(0xdb46, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x6a7e, gbc.sp());
        EXPECT(0xdb48, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdb46));
        EXPECT(0x4a, gbc.readMem(0xdb47));
        // CB 4A 03A2
        gbc.setState(0xc7c2, 0xd4da, 0xdf20, 0x4b68, 0x53d6, 0xa73b, 0x1, 0x0);
        gbc.writeMem(0xc7c2, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0xd4da, gbc.sp());
        EXPECT(0xc7c4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc7c2));
        EXPECT(0x4a, gbc.readMem(0xc7c3));
        // CB 4A 03A3
        gbc.setState(0x9a90, 0xa94d, 0x4220, 0x2e11, 0xf337, 0x74d2, 0x1, 0x1);
        gbc.writeMem(0x9a90, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0xa94d, gbc.sp());
        EXPECT(0x9a92, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9a90));
        EXPECT(0x4a, gbc.readMem(0x9a91));
        // CB 4A 03A4
        gbc.setState(0x46c2, 0xa8dc, 0xfd60, 0xb87, 0xe7d7, 0x2a8d, 0x0, 0x1);
        gbc.writeMem(0x46c2, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0xa8dc, gbc.sp());
        EXPECT(0x46c4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4A 03A5
        gbc.setState(0xa78f, 0x6135, 0xf8f0, 0xaf17, 0xc12f, 0x2556, 0x1, 0x1);
        gbc.writeMem(0xa78f, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0x6135, gbc.sp());
        EXPECT(0xa791, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa78f));
        EXPECT(0x4a, gbc.readMem(0xa790));
        // CB 4A 03A6
        gbc.setState(0x58e3, 0xb5ff, 0xe990, 0xf7e, 0xdee8, 0xf263, 0x0, 0x1);
        gbc.writeMem(0x58e3, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0xb5ff, gbc.sp());
        EXPECT(0x58e5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4A 03A7
        gbc.setState(0x64e1, 0x1248, 0xad50, 0x6fba, 0xda96, 0xbaf1, 0x1, 0x0);
        gbc.writeMem(0x64e1, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x1248, gbc.sp());
        EXPECT(0x64e3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4A 03A8
        gbc.setState(0x8428, 0x9c45, 0x3bd0, 0x3c50, 0x8750, 0xb085, 0x1, 0x1);
        gbc.writeMem(0x8428, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x9c45, gbc.sp());
        EXPECT(0x842a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8428));
        EXPECT(0x4a, gbc.readMem(0x8429));
        // CB 4A 03AA
        gbc.setState(0xddc9, 0x9314, 0x290, 0x9e67, 0xcdd5, 0xbaa9, 0x0, 0x1);
        gbc.writeMem(0xddc9, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x9314, gbc.sp());
        EXPECT(0xddcb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xddc9));
        EXPECT(0x4a, gbc.readMem(0xddca));
        // CB 4A 03AB
        gbc.setState(0xab17, 0xb574, 0xdba0, 0xa5d6, 0x5a62, 0x386a, 0x1, 0x0);
        gbc.writeMem(0xab17, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0xb574, gbc.sp());
        EXPECT(0xab19, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xab17));
        EXPECT(0x4a, gbc.readMem(0xab18));
        // CB 4A 03AC
        gbc.setState(0x7001, 0x1576, 0x32c0, 0xdf13, 0x6af5, 0x9b24, 0x1, 0x1);
        gbc.writeMem(0x7001, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x1576, gbc.sp());
        EXPECT(0x7003, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4A 03AD
        gbc.setState(0x1a05, 0xe42, 0x16a0, 0x67dc, 0x299b, 0xcad6, 0x0, 0x1);
        gbc.writeMem(0x1a05, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0xe42, gbc.sp());
        EXPECT(0x1a07, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4A 03AE
        gbc.setState(0x87d0, 0x99, 0x87a0, 0x738d, 0x8dc6, 0xeddd, 0x0, 0x1);
        gbc.writeMem(0x87d0, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x99, gbc.sp());
        EXPECT(0x87d2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x87d0));
        EXPECT(0x4a, gbc.readMem(0x87d1));
        // CB 4A 03B0
        gbc.setState(0xe9c3, 0xb491, 0xca10, 0x276b, 0x786e, 0x7974, 0x1, 0x1);
        gbc.writeMem(0xe9c3, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0xb491, gbc.sp());
        EXPECT(0xe9c5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe9c3));
        EXPECT(0x4a, gbc.readMem(0xe9c4));
        // CB 4A 03B1
        gbc.setState(0xbc4f, 0x65ed, 0x6fe0, 0x657a, 0x9d4c, 0xfce2, 0x0, 0x0);
        gbc.writeMem(0xbc4f, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x65ed, gbc.sp());
        EXPECT(0xbc51, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbc4f));
        EXPECT(0x4a, gbc.readMem(0xbc50));
        // CB 4A 03B2
        gbc.setState(0x2cce, 0x94e4, 0x3f30, 0xc1cc, 0x6bf7, 0xcabe, 0x0, 0x1);
        gbc.writeMem(0x2cce, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0x94e4, gbc.sp());
        EXPECT(0x2cd0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4A 03B4
        gbc.setState(0x828, 0x28a0, 0x3c0, 0x4806, 0xd1c3, 0x29e6, 0x0, 0x1);
        gbc.writeMem(0x828, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x28a0, gbc.sp());
        EXPECT(0x82a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4A 03B5
        gbc.setState(0x4b1b, 0xfc9e, 0x7c0, 0x694a, 0xffa1, 0xe41, 0x1, 0x1);
        gbc.writeMem(0x4b1b, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0xfc9e, gbc.sp());
        EXPECT(0x4b1d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4A 03B6
        gbc.setState(0x41d7, 0x6a1a, 0x9610, 0xabc9, 0x5824, 0x9e25, 0x1, 0x1);
        gbc.writeMem(0x41d7, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x6a1a, gbc.sp());
        EXPECT(0x41d9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4A 03B7
        gbc.setState(0x89ef, 0xd3bf, 0xf500, 0x6516, 0xc9f4, 0xe3be, 0x0, 0x0);
        gbc.writeMem(0x89ef, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0xd3bf, gbc.sp());
        EXPECT(0x89f1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x89ef));
        EXPECT(0x4a, gbc.readMem(0x89f0));
        // CB 4A 03B8
        gbc.setState(0x2155, 0xc103, 0xeca0, 0xafee, 0xc9f4, 0x33f3, 0x1, 0x1);
        gbc.writeMem(0x2155, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0xc103, gbc.sp());
        EXPECT(0x2157, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4A 03B9
        gbc.setState(0x8034, 0x799e, 0xf9f0, 0xd624, 0xd753, 0x744f, 0x0, 0x1);
        gbc.writeMem(0x8034, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x799e, gbc.sp());
        EXPECT(0x8036, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8034));
        EXPECT(0x4a, gbc.readMem(0x8035));
        // CB 4A 03BB
        gbc.setState(0x7766, 0x1540, 0xaf40, 0x8c97, 0x3b80, 0xda4c, 0x0, 0x1);
        gbc.writeMem(0x7766, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x1540, gbc.sp());
        EXPECT(0x7768, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4A 03BC
        gbc.setState(0xaf06, 0x2fe3, 0x1560, 0x7ebe, 0x6ee6, 0xaa37, 0x0, 0x1);
        gbc.writeMem(0xaf06, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x2fe3, gbc.sp());
        EXPECT(0xaf08, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaf06));
        EXPECT(0x4a, gbc.readMem(0xaf07));
        // CB 4A 03BD
        gbc.setState(0x58d2, 0xf873, 0x74a0, 0x230, 0x182f, 0x2eb6, 0x0, 0x0);
        gbc.writeMem(0x58d2, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0xf873, gbc.sp());
        EXPECT(0x58d4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4A 03BE
        gbc.setState(0x1862, 0x66af, 0xd690, 0x80d9, 0x1d74, 0x3520, 0x0, 0x0);
        gbc.writeMem(0x1862, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x66af, gbc.sp());
        EXPECT(0x1864, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4A 03BF
        gbc.setState(0xf37, 0x34a4, 0xb3a0, 0x623a, 0xefb1, 0x103c, 0x0, 0x0);
        gbc.writeMem(0xf37, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x34a4, gbc.sp());
        EXPECT(0xf39, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4A 03C0
        gbc.setState(0xc9f9, 0x23af, 0x1ed0, 0x3854, 0xdaab, 0xeedc, 0x0, 0x0);
        gbc.writeMem(0xc9f9, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x23af, gbc.sp());
        EXPECT(0xc9fb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc9f9));
        EXPECT(0x4a, gbc.readMem(0xc9fa));
        // CB 4A 03C1
        gbc.setState(0xc8c0, 0x71ba, 0x51f0, 0xb3b0, 0xe8f6, 0x9a65, 0x0, 0x1);
        gbc.writeMem(0xc8c0, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x71ba, gbc.sp());
        EXPECT(0xc8c2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc8c0));
        EXPECT(0x4a, gbc.readMem(0xc8c1));
        // CB 4A 03C2
        gbc.setState(0x54d6, 0x3d0, 0xfcb0, 0x8a51, 0xc4b2, 0x42d, 0x0, 0x1);
        gbc.writeMem(0x54d6, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x3d0, gbc.sp());
        EXPECT(0x54d8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4A 03C3
        gbc.setState(0x836f, 0xb2af, 0x5ab0, 0x367c, 0x2be0, 0x5344, 0x1, 0x1);
        gbc.writeMem(0x836f, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0xb2af, gbc.sp());
        EXPECT(0x8371, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x836f));
        EXPECT(0x4a, gbc.readMem(0x8370));
        // CB 4A 03C4
        gbc.setState(0x2fc1, 0x1488, 0x5760, 0x8868, 0x6584, 0x266e, 0x1, 0x0);
        gbc.writeMem(0x2fc1, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x1488, gbc.sp());
        EXPECT(0x2fc3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4A 03C5
        gbc.setState(0xc152, 0x5b65, 0x15d0, 0x6d42, 0x7bf8, 0x6dcb, 0x1, 0x1);
        gbc.writeMem(0xc152, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x5b65, gbc.sp());
        EXPECT(0xc154, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc152));
        EXPECT(0x4a, gbc.readMem(0xc153));
        // CB 4A 03C6
        gbc.setState(0x6da8, 0x16e7, 0x39d0, 0xa394, 0x3e0b, 0xe861, 0x1, 0x0);
        gbc.writeMem(0x6da8, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x16e7, gbc.sp());
        EXPECT(0x6daa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4A 03C7
        gbc.setState(0x5107, 0xed9e, 0x250, 0xd0a4, 0xeadd, 0x24bd, 0x1, 0x0);
        gbc.writeMem(0x5107, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0xed9e, gbc.sp());
        EXPECT(0x5109, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4A 03C8
        gbc.setState(0xebe9, 0xa19, 0x7370, 0x3c38, 0x331d, 0x372a, 0x1, 0x0);
        gbc.writeMem(0xebe9, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0xa19, gbc.sp());
        EXPECT(0xebeb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xebe9));
        EXPECT(0x4a, gbc.readMem(0xebea));
        // CB 4A 03C9
        gbc.setState(0x1963, 0xb72, 0xb780, 0xcbaa, 0x1012, 0xaf8d, 0x0, 0x0);
        gbc.writeMem(0x1963, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0xb72, gbc.sp());
        EXPECT(0x1965, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4A 03CA
        gbc.setState(0x72ab, 0xa4fe, 0x81f0, 0xc31c, 0x67a4, 0xe4a3, 0x0, 0x0);
        gbc.writeMem(0x72ab, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0xa4fe, gbc.sp());
        EXPECT(0x72ad, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4A 03CB
        gbc.setState(0xc52, 0xe1b8, 0x1740, 0x6b00, 0xe060, 0x3aa5, 0x0, 0x0);
        gbc.writeMem(0xc52, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0xe1b8, gbc.sp());
        EXPECT(0xc54, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4A 03CC
        gbc.setState(0xb70b, 0xa84b, 0xfc00, 0xe93f, 0xa3ad, 0x8910, 0x1, 0x0);
        gbc.writeMem(0xb70b, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0xa84b, gbc.sp());
        EXPECT(0xb70d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb70b));
        EXPECT(0x4a, gbc.readMem(0xb70c));
        // CB 4A 03CD
        gbc.setState(0xe03c, 0x1b0a, 0xcd00, 0x8b5f, 0xa1cc, 0xcf4d, 0x1, 0x1);
        gbc.writeMem(0xe03c, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x1b0a, gbc.sp());
        EXPECT(0xe03e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe03c));
        EXPECT(0x4a, gbc.readMem(0xe03d));
        // CB 4A 03CE
        gbc.setState(0x240e, 0x35b, 0x4dc0, 0x48ba, 0x398e, 0x5956, 0x0, 0x0);
        gbc.writeMem(0x240e, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0x35b, gbc.sp());
        EXPECT(0x2410, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4A 03CF
        gbc.setState(0x3dd4, 0xc737, 0x6ef0, 0xd1ee, 0xdfc6, 0x507b, 0x0, 0x1);
        gbc.writeMem(0x3dd4, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0xc737, gbc.sp());
        EXPECT(0x3dd6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4A 03D0
        gbc.setState(0x6488, 0x99a5, 0xe420, 0xf728, 0x6224, 0xfb7d, 0x0, 0x0);
        gbc.writeMem(0x6488, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x99a5, gbc.sp());
        EXPECT(0x648a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4A 03D1
        gbc.setState(0x6cfa, 0xed84, 0x1540, 0xd15d, 0x4a74, 0xe5a3, 0x0, 0x1);
        gbc.writeMem(0x6cfa, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0xed84, gbc.sp());
        EXPECT(0x6cfc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4A 03D2
        gbc.setState(0x5125, 0x398c, 0x7ee0, 0x3745, 0xd790, 0xa11d, 0x1, 0x0);
        gbc.writeMem(0x5125, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x398c, gbc.sp());
        EXPECT(0x5127, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4A 03D3
        gbc.setState(0x3360, 0x933e, 0xe520, 0x9d6b, 0xeb33, 0x3f6b, 0x0, 0x1);
        gbc.writeMem(0x3360, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x933e, gbc.sp());
        EXPECT(0x3362, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4A 03D5
        gbc.setState(0x1a7c, 0x4999, 0x8500, 0x889a, 0x66ca, 0x5758, 0x0, 0x1);
        gbc.writeMem(0x1a7c, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x4999, gbc.sp());
        EXPECT(0x1a7e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4A 03D6
        gbc.setState(0xd21c, 0x852, 0x6f70, 0xa31, 0x6ade, 0x42d2, 0x1, 0x1);
        gbc.writeMem(0xd21c, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x852, gbc.sp());
        EXPECT(0xd21e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd21c));
        EXPECT(0x4a, gbc.readMem(0xd21d));
        // CB 4A 03D7
        gbc.setState(0x879, 0xc48c, 0xfb30, 0xc42e, 0x9e3e, 0x533, 0x1, 0x1);
        gbc.writeMem(0x879, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0xc48c, gbc.sp());
        EXPECT(0x87b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4A 03D8
        gbc.setState(0xe6d7, 0xe6ef, 0x8920, 0xd444, 0x4008, 0x4955, 0x0, 0x0);
        gbc.writeMem(0xe6d7, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0xe6ef, gbc.sp());
        EXPECT(0xe6d9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe6d7));
        EXPECT(0x4a, gbc.readMem(0xe6d8));
        // CB 4A 03D9
        gbc.setState(0xa26a, 0x8661, 0xc6f0, 0x36b4, 0x1a2d, 0x9c05, 0x0, 0x0);
        gbc.writeMem(0xa26a, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x8661, gbc.sp());
        EXPECT(0xa26c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa26a));
        EXPECT(0x4a, gbc.readMem(0xa26b));
        // CB 4A 03DA
        gbc.setState(0x7dcf, 0xd3fe, 0xb730, 0x1d7d, 0x4bfe, 0xca07, 0x1, 0x1);
        gbc.writeMem(0x7dcf, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0xd3fe, gbc.sp());
        EXPECT(0x7dd1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4A 03DB
        gbc.setState(0x9f3c, 0x3c8, 0x84d0, 0xd5ae, 0xa9, 0xf594, 0x1, 0x1);
        gbc.writeMem(0x9f3c, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x3c8, gbc.sp());
        EXPECT(0x9f3e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9f3c));
        EXPECT(0x4a, gbc.readMem(0x9f3d));
        // CB 4A 03DC
        gbc.setState(0xb7d8, 0x8ccb, 0x17c0, 0xf249, 0xeb56, 0x555d, 0x1, 0x1);
        gbc.writeMem(0xb7d8, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x8ccb, gbc.sp());
        EXPECT(0xb7da, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb7d8));
        EXPECT(0x4a, gbc.readMem(0xb7d9));
        // CB 4A 03DD
        gbc.setState(0x1495, 0x2f7e, 0x81b0, 0x4294, 0xbd3b, 0x6c66, 0x0, 0x1);
        gbc.writeMem(0x1495, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x2f7e, gbc.sp());
        EXPECT(0x1497, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4A 03DE
        gbc.setState(0x91ec, 0xaf62, 0x1990, 0x9a64, 0x3014, 0x2a66, 0x1, 0x0);
        gbc.writeMem(0x91ec, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0xaf62, gbc.sp());
        EXPECT(0x91ee, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x91ec));
        EXPECT(0x4a, gbc.readMem(0x91ed));
        // CB 4A 03DF
        gbc.setState(0xb65b, 0xc9ad, 0x7320, 0x15e8, 0xdeaa, 0x4ec6, 0x0, 0x0);
        gbc.writeMem(0xb65b, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0xc9ad, gbc.sp());
        EXPECT(0xb65d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb65b));
        EXPECT(0x4a, gbc.readMem(0xb65c));
        // CB 4A 03E0
        gbc.setState(0xc903, 0x4ab0, 0xe580, 0x25a2, 0x5ea2, 0xbda4, 0x1, 0x0);
        gbc.writeMem(0xc903, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x4ab0, gbc.sp());
        EXPECT(0xc905, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc903));
        EXPECT(0x4a, gbc.readMem(0xc904));
        // CB 4A 03E1
        gbc.setState(0x6765, 0x6a55, 0x5d0, 0x68ea, 0x7912, 0x25b2, 0x0, 0x1);
        gbc.writeMem(0x6765, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x6a55, gbc.sp());
        EXPECT(0x6767, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4A 03E2
        gbc.setState(0xa7be, 0xd133, 0x23d0, 0xa265, 0x1cf0, 0x3edc, 0x0, 0x1);
        gbc.writeMem(0xa7be, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0xd133, gbc.sp());
        EXPECT(0xa7c0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa7be));
        EXPECT(0x4a, gbc.readMem(0xa7bf));
        // CB 4A 03E3
        gbc.setState(0x92c8, 0x6151, 0x4d10, 0x365f, 0xb381, 0xa560, 0x1, 0x0);
        gbc.writeMem(0x92c8, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x6151, gbc.sp());
        EXPECT(0x92ca, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x92c8));
        EXPECT(0x4a, gbc.readMem(0x92c9));
        // CB 4A 03E4
        gbc.setState(0xee94, 0x41fe, 0xb160, 0x1fbf, 0x57cb, 0x118b, 0x0, 0x1);
        gbc.writeMem(0xee94, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x41fe, gbc.sp());
        EXPECT(0xee96, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xee94));
        EXPECT(0x4a, gbc.readMem(0xee95));
        // CB 4A 03E5
        gbc.setState(0x2909, 0x859c, 0x8490, 0x8d06, 0xf199, 0x44f4, 0x0, 0x1);
        gbc.writeMem(0x2909, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x859c, gbc.sp());
        EXPECT(0x290b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4A 03E6
        gbc.setState(0x2a9a, 0x1034, 0x380, 0xe142, 0x4ef2, 0x5796, 0x1, 0x1);
        gbc.writeMem(0x2a9a, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x1034, gbc.sp());
        EXPECT(0x2a9c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4A 03E7
        gbc.setState(0x82, 0xab85, 0x5070, 0xa8c8, 0x352c, 0x86f3, 0x1, 0x0);
        gbc.writeMem(0x82, { 0xcb, 0x4a });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0xab85, gbc.sp());
        EXPECT(0x84, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
    }
