    TEST(gbcemu, opcode_cb_c7) {
        GBCEmu gbc{};
        uint8_t cartridge[0x8000];
        cartridge[0x149] = 0x02; // 8kb external RAM
        gbc.loadCartridge(new FlashGamePak(cartridge));
        // CB C7 0000
        gbc.setState(0x21c6, 0x769d, 0xca70, 0x21f3, 0xa4e2, 0x544b, 0x0, 0x1);
        gbc.writeMem(0x21c6, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x769d, gbc.sp());
        EXPECT(0x21c8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C7 0001
        gbc.setState(0x2b7f, 0x1798, 0x4d90, 0x98a4, 0xb7c1, 0x1bef, 0x1, 0x1);
        gbc.writeMem(0x2b7f, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x1798, gbc.sp());
        EXPECT(0x2b81, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C7 0003
        gbc.setState(0x5537, 0x1b10, 0x4f30, 0x342f, 0xd9fd, 0x9447, 0x1, 0x1);
        gbc.writeMem(0x5537, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x1b10, gbc.sp());
        EXPECT(0x5539, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C7 0004
        gbc.setState(0x9ad2, 0x8290, 0x4d50, 0x6b43, 0xc93b, 0x4c72, 0x1, 0x0);
        gbc.writeMem(0x9ad2, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x8290, gbc.sp());
        EXPECT(0x9ad4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9ad2));
        EXPECT(0xc7, gbc.readMem(0x9ad3));
        // CB C7 0005
        gbc.setState(0xcc78, 0x2b63, 0x44c0, 0xca3d, 0x1c5, 0x5c85, 0x0, 0x1);
        gbc.writeMem(0xcc78, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x2b63, gbc.sp());
        EXPECT(0xcc7a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcc78));
        EXPECT(0xc7, gbc.readMem(0xcc79));
        // CB C7 0006
        gbc.setState(0xd106, 0x5793, 0xced0, 0x2a3f, 0xe852, 0x1cfb, 0x0, 0x1);
        gbc.writeMem(0xd106, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x5793, gbc.sp());
        EXPECT(0xd108, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd106));
        EXPECT(0xc7, gbc.readMem(0xd107));
        // CB C7 0007
        gbc.setState(0xd76c, 0x7d6c, 0xe2b0, 0xacd2, 0xa70, 0xc5ba, 0x0, 0x0);
        gbc.writeMem(0xd76c, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0x7d6c, gbc.sp());
        EXPECT(0xd76e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd76c));
        EXPECT(0xc7, gbc.readMem(0xd76d));
        // CB C7 0008
        gbc.setState(0x6ac1, 0x9957, 0x27b0, 0xc78d, 0x9bd9, 0x3d73, 0x1, 0x1);
        gbc.writeMem(0x6ac1, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x9957, gbc.sp());
        EXPECT(0x6ac3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C7 0009
        gbc.setState(0x2ec4, 0xa971, 0x1fd0, 0x7e64, 0x650c, 0xb479, 0x0, 0x1);
        gbc.writeMem(0x2ec4, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0xa971, gbc.sp());
        EXPECT(0x2ec6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C7 000A
        gbc.setState(0x7bd5, 0xc6c4, 0xe540, 0xf530, 0xad6a, 0x3ceb, 0x0, 0x1);
        gbc.writeMem(0x7bd5, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0xc6c4, gbc.sp());
        EXPECT(0x7bd7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C7 000B
        gbc.setState(0x244c, 0x101b, 0x66b0, 0xcf24, 0xf287, 0x5ea4, 0x1, 0x1);
        gbc.writeMem(0x244c, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x101b, gbc.sp());
        EXPECT(0x244e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C7 000C
        gbc.setState(0x41c2, 0x3c5f, 0x91a0, 0x3014, 0xc5da, 0x9c96, 0x0, 0x0);
        gbc.writeMem(0x41c2, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x3c5f, gbc.sp());
        EXPECT(0x41c4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C7 000E
        gbc.setState(0xca75, 0xd22c, 0x9850, 0xeff8, 0x2900, 0x14fe, 0x0, 0x0);
        gbc.writeMem(0xca75, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0xd22c, gbc.sp());
        EXPECT(0xca77, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xca75));
        EXPECT(0xc7, gbc.readMem(0xca76));
        // CB C7 000F
        gbc.setState(0x664, 0x22cf, 0x4c0, 0x2400, 0xdacc, 0xdb57, 0x0, 0x1);
        gbc.writeMem(0x664, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x22cf, gbc.sp());
        EXPECT(0x666, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C7 0010
        gbc.setState(0x2099, 0x7f7f, 0x2040, 0x817b, 0x92a0, 0xcf2d, 0x1, 0x0);
        gbc.writeMem(0x2099, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x7f7f, gbc.sp());
        EXPECT(0x209b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C7 0011
        gbc.setState(0x44f, 0x30ca, 0x9420, 0x27cc, 0x3f1f, 0x1e0a, 0x1, 0x0);
        gbc.writeMem(0x44f, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x30ca, gbc.sp());
        EXPECT(0x451, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C7 0012
        gbc.setState(0x3fa0, 0x4454, 0xa4f0, 0xc0b3, 0x9071, 0xc605, 0x0, 0x0);
        gbc.writeMem(0x3fa0, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x4454, gbc.sp());
        EXPECT(0x3fa2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C7 0013
        gbc.setState(0x18cb, 0x685e, 0x6910, 0xc21b, 0x9df4, 0x62fe, 0x0, 0x1);
        gbc.writeMem(0x18cb, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x685e, gbc.sp());
        EXPECT(0x18cd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C7 0014
        gbc.setState(0xa73c, 0xb956, 0x76a0, 0x70c1, 0x6a4c, 0xddb6, 0x1, 0x0);
        gbc.writeMem(0xa73c, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0xb956, gbc.sp());
        EXPECT(0xa73e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa73c));
        EXPECT(0xc7, gbc.readMem(0xa73d));
        // CB C7 0015
        gbc.setState(0xa2ec, 0x39a4, 0x71b0, 0x503d, 0xc386, 0xed48, 0x1, 0x0);
        gbc.writeMem(0xa2ec, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0x39a4, gbc.sp());
        EXPECT(0xa2ee, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa2ec));
        EXPECT(0xc7, gbc.readMem(0xa2ed));
        // CB C7 0016
        gbc.setState(0x645e, 0x52a8, 0x9240, 0xfc8d, 0xfcf8, 0xa4c4, 0x0, 0x0);
        gbc.writeMem(0x645e, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x52a8, gbc.sp());
        EXPECT(0x6460, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C7 0017
        gbc.setState(0x394f, 0x8375, 0x1030, 0x4925, 0xf645, 0x939e, 0x1, 0x1);
        gbc.writeMem(0x394f, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x8375, gbc.sp());
        EXPECT(0x3951, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C7 0018
        gbc.setState(0xe399, 0xbd2e, 0xf1a0, 0xea05, 0xd556, 0x1662, 0x0, 0x0);
        gbc.writeMem(0xe399, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0xbd2e, gbc.sp());
        EXPECT(0xe39b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe399));
        EXPECT(0xc7, gbc.readMem(0xe39a));
        // CB C7 0019
        gbc.setState(0x42d6, 0x73b6, 0x8ae0, 0xf43a, 0x3c8c, 0xb468, 0x0, 0x0);
        gbc.writeMem(0x42d6, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x73b6, gbc.sp());
        EXPECT(0x42d8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C7 001A
        gbc.setState(0xaca5, 0x51f8, 0xdd90, 0x7803, 0x6fa0, 0x7772, 0x0, 0x1);
        gbc.writeMem(0xaca5, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x51f8, gbc.sp());
        EXPECT(0xaca7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaca5));
        EXPECT(0xc7, gbc.readMem(0xaca6));
        // CB C7 001B
        gbc.setState(0x1c7e, 0x768e, 0x1270, 0x35fb, 0x3129, 0x692c, 0x0, 0x0);
        gbc.writeMem(0x1c7e, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x768e, gbc.sp());
        EXPECT(0x1c80, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C7 001C
        gbc.setState(0xa986, 0xc448, 0xda40, 0xcd0e, 0x2611, 0x5cff, 0x0, 0x0);
        gbc.writeMem(0xa986, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0xc448, gbc.sp());
        EXPECT(0xa988, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa986));
        EXPECT(0xc7, gbc.readMem(0xa987));
        // CB C7 001D
        gbc.setState(0xa9b4, 0x6761, 0xb0, 0x744, 0xdea1, 0xef06, 0x1, 0x1);
        gbc.writeMem(0xa9b4, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x6761, gbc.sp());
        EXPECT(0xa9b6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa9b4));
        EXPECT(0xc7, gbc.readMem(0xa9b5));
        // CB C7 001E
        gbc.setState(0x77c7, 0x766b, 0x65a0, 0x3713, 0xa863, 0xa20b, 0x1, 0x0);
        gbc.writeMem(0x77c7, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x766b, gbc.sp());
        EXPECT(0x77c9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C7 001F
        gbc.setState(0xab5f, 0x203a, 0xb4e0, 0x26f9, 0xabc4, 0x6aff, 0x1, 0x0);
        gbc.writeMem(0xab5f, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x203a, gbc.sp());
        EXPECT(0xab61, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xab5f));
        EXPECT(0xc7, gbc.readMem(0xab60));
        // CB C7 0020
        gbc.setState(0xb668, 0xb1a6, 0x26c0, 0x403e, 0x4e4, 0x2eb2, 0x0, 0x1);
        gbc.writeMem(0xb668, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0xb1a6, gbc.sp());
        EXPECT(0xb66a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb668));
        EXPECT(0xc7, gbc.readMem(0xb669));
        // CB C7 0022
        gbc.setState(0xe50f, 0x1fc, 0xf370, 0xc3b, 0x1019, 0xb7ba, 0x1, 0x0);
        gbc.writeMem(0xe50f, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0x1fc, gbc.sp());
        EXPECT(0xe511, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe50f));
        EXPECT(0xc7, gbc.readMem(0xe510));
        // CB C7 0023
        gbc.setState(0xc89c, 0xfc2e, 0x65b0, 0xb53d, 0xf442, 0x753c, 0x1, 0x0);
        gbc.writeMem(0xc89c, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0xfc2e, gbc.sp());
        EXPECT(0xc89e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc89c));
        EXPECT(0xc7, gbc.readMem(0xc89d));
        // CB C7 0024
        gbc.setState(0x81c7, 0x24eb, 0xf3e0, 0xc32a, 0x11da, 0x15b6, 0x0, 0x0);
        gbc.writeMem(0x81c7, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x24eb, gbc.sp());
        EXPECT(0x81c9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x81c7));
        EXPECT(0xc7, gbc.readMem(0x81c8));
        // CB C7 0025
        gbc.setState(0x304d, 0x7ca8, 0x56f0, 0x7503, 0x7c0f, 0xa939, 0x1, 0x1);
        gbc.writeMem(0x304d, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x7ca8, gbc.sp());
        EXPECT(0x304f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C7 0026
        gbc.setState(0x6b28, 0xe8cb, 0x9820, 0x1cf8, 0xf8b3, 0x3745, 0x1, 0x0);
        gbc.writeMem(0x6b28, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0xe8cb, gbc.sp());
        EXPECT(0x6b2a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C7 0027
        gbc.setState(0x9c23, 0x2653, 0x4b0, 0x68d9, 0x7c18, 0x8d46, 0x1, 0x0);
        gbc.writeMem(0x9c23, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x2653, gbc.sp());
        EXPECT(0x9c25, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9c23));
        EXPECT(0xc7, gbc.readMem(0x9c24));
        // CB C7 0028
        gbc.setState(0x8f10, 0x831c, 0x8510, 0x890a, 0xfe50, 0xf326, 0x0, 0x1);
        gbc.writeMem(0x8f10, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x831c, gbc.sp());
        EXPECT(0x8f12, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8f10));
        EXPECT(0xc7, gbc.readMem(0x8f11));
        // CB C7 0029
        gbc.setState(0x5570, 0x2c2c, 0x4bf0, 0xc1a2, 0xf62f, 0xdc8d, 0x1, 0x1);
        gbc.writeMem(0x5570, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x2c2c, gbc.sp());
        EXPECT(0x5572, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C7 002A
        gbc.setState(0xd837, 0xf8b4, 0x400, 0x7e9c, 0xaf9d, 0xd856, 0x1, 0x0);
        gbc.writeMem(0xd837, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0xf8b4, gbc.sp());
        EXPECT(0xd839, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd837));
        EXPECT(0xc7, gbc.readMem(0xd838));
        // CB C7 002B
        gbc.setState(0x2a6d, 0x5ace, 0x1a20, 0x1a68, 0xfd51, 0xde09, 0x0, 0x0);
        gbc.writeMem(0x2a6d, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x5ace, gbc.sp());
        EXPECT(0x2a6f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C7 002C
        gbc.setState(0x81a6, 0xa7e1, 0x30e0, 0x80a1, 0xaaf7, 0x36b7, 0x0, 0x1);
        gbc.writeMem(0x81a6, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0xa7e1, gbc.sp());
        EXPECT(0x81a8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x81a6));
        EXPECT(0xc7, gbc.readMem(0x81a7));
        // CB C7 002D
        gbc.setState(0x81e8, 0xb1f2, 0xbb10, 0x5e12, 0x7400, 0xf98, 0x1, 0x0);
        gbc.writeMem(0x81e8, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0xb1f2, gbc.sp());
        EXPECT(0x81ea, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x81e8));
        EXPECT(0xc7, gbc.readMem(0x81e9));
        // CB C7 002E
        gbc.setState(0xb3be, 0xce91, 0x9cf0, 0xe4ba, 0x3a55, 0xec06, 0x1, 0x0);
        gbc.writeMem(0xb3be, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0xce91, gbc.sp());
        EXPECT(0xb3c0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb3be));
        EXPECT(0xc7, gbc.readMem(0xb3bf));
        // CB C7 002F
        gbc.setState(0xa81d, 0x4eb, 0xcda0, 0xc9fa, 0xcb9d, 0x1946, 0x1, 0x1);
        gbc.writeMem(0xa81d, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x4eb, gbc.sp());
        EXPECT(0xa81f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa81d));
        EXPECT(0xc7, gbc.readMem(0xa81e));
        // CB C7 0030
        gbc.setState(0x4690, 0xe056, 0x550, 0x63a5, 0x2dd5, 0x822d, 0x1, 0x0);
        gbc.writeMem(0x4690, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0xe056, gbc.sp());
        EXPECT(0x4692, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C7 0031
        gbc.setState(0x491f, 0x71e9, 0xa1c0, 0xfa79, 0xfe60, 0xbc3f, 0x1, 0x0);
        gbc.writeMem(0x491f, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0x71e9, gbc.sp());
        EXPECT(0x4921, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C7 0032
        gbc.setState(0x6ea6, 0xa2c5, 0xd9f0, 0x3ef6, 0xdc0f, 0x8186, 0x0, 0x0);
        gbc.writeMem(0x6ea6, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0xa2c5, gbc.sp());
        EXPECT(0x6ea8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C7 0033
        gbc.setState(0x618b, 0xabc3, 0x4120, 0x230b, 0x16dc, 0x720f, 0x1, 0x0);
        gbc.writeMem(0x618b, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0xabc3, gbc.sp());
        EXPECT(0x618d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C7 0034
        gbc.setState(0x73c7, 0x57f0, 0x1580, 0x6019, 0xed60, 0x16a7, 0x1, 0x1);
        gbc.writeMem(0x73c7, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x57f0, gbc.sp());
        EXPECT(0x73c9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C7 0035
        gbc.setState(0x7417, 0x4a90, 0x4ef0, 0xc40a, 0x3f51, 0x28c7, 0x0, 0x0);
        gbc.writeMem(0x7417, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x4a90, gbc.sp());
        EXPECT(0x7419, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C7 0036
        gbc.setState(0xb3fd, 0x6886, 0x8850, 0xe6ba, 0x6cbf, 0x1aa, 0x0, 0x0);
        gbc.writeMem(0xb3fd, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x6886, gbc.sp());
        EXPECT(0xb3ff, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb3fd));
        EXPECT(0xc7, gbc.readMem(0xb3fe));
        // CB C7 0037
        gbc.setState(0x2861, 0x56c, 0x3400, 0x3b81, 0x8dfd, 0xc00b, 0x1, 0x0);
        gbc.writeMem(0x2861, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x56c, gbc.sp());
        EXPECT(0x2863, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C7 0038
        gbc.setState(0xa4ad, 0xb38b, 0xf400, 0x5847, 0xd1b8, 0x738b, 0x0, 0x1);
        gbc.writeMem(0xa4ad, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0xb38b, gbc.sp());
        EXPECT(0xa4af, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa4ad));
        EXPECT(0xc7, gbc.readMem(0xa4ae));
        // CB C7 0039
        gbc.setState(0xc8c9, 0x3e05, 0x5260, 0x6750, 0x6e13, 0x7b39, 0x0, 0x1);
        gbc.writeMem(0xc8c9, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x3e05, gbc.sp());
        EXPECT(0xc8cb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc8c9));
        EXPECT(0xc7, gbc.readMem(0xc8ca));
        // CB C7 003A
        gbc.setState(0xe894, 0xc3ee, 0x2a20, 0x17f6, 0x6d28, 0xb8b7, 0x0, 0x0);
        gbc.writeMem(0xe894, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0xc3ee, gbc.sp());
        EXPECT(0xe896, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe894));
        EXPECT(0xc7, gbc.readMem(0xe895));
        // CB C7 003B
        gbc.setState(0x541e, 0xa4f7, 0x34e0, 0x59ca, 0xdeb4, 0xa372, 0x0, 0x1);
        gbc.writeMem(0x541e, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0xa4f7, gbc.sp());
        EXPECT(0x5420, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C7 003C
        gbc.setState(0xcc1c, 0xadbd, 0x2f20, 0x8219, 0xb45e, 0xfd92, 0x1, 0x0);
        gbc.writeMem(0xcc1c, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0xadbd, gbc.sp());
        EXPECT(0xcc1e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcc1c));
        EXPECT(0xc7, gbc.readMem(0xcc1d));
        // CB C7 003D
        gbc.setState(0x7f25, 0xc47d, 0xa3b0, 0x4182, 0xf4e5, 0xe8ce, 0x0, 0x1);
        gbc.writeMem(0x7f25, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0xc47d, gbc.sp());
        EXPECT(0x7f27, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C7 003E
        gbc.setState(0x875a, 0xc396, 0xb440, 0x3d7b, 0x685e, 0xc06, 0x0, 0x0);
        gbc.writeMem(0x875a, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0xc396, gbc.sp());
        EXPECT(0x875c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x875a));
        EXPECT(0xc7, gbc.readMem(0x875b));
        // CB C7 0040
        gbc.setState(0x2ffd, 0x805e, 0x7360, 0x3596, 0xce94, 0xb4a1, 0x1, 0x1);
        gbc.writeMem(0x2ffd, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x805e, gbc.sp());
        EXPECT(0x2fff, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C7 0041
        gbc.setState(0xcbf4, 0x5497, 0x6720, 0x24e1, 0xd237, 0x6ef2, 0x1, 0x0);
        gbc.writeMem(0xcbf4, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x5497, gbc.sp());
        EXPECT(0xcbf6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcbf4));
        EXPECT(0xc7, gbc.readMem(0xcbf5));
        // CB C7 0042
        gbc.setState(0xb9bd, 0x7ec1, 0x4760, 0x9aa4, 0xb43d, 0x6485, 0x1, 0x1);
        gbc.writeMem(0xb9bd, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x7ec1, gbc.sp());
        EXPECT(0xb9bf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb9bd));
        EXPECT(0xc7, gbc.readMem(0xb9be));
        // CB C7 0043
        gbc.setState(0x7e8e, 0xa266, 0xdd40, 0xa47d, 0x8f00, 0xb4bf, 0x1, 0x0);
        gbc.writeMem(0x7e8e, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0xa266, gbc.sp());
        EXPECT(0x7e90, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C7 0044
        gbc.setState(0x946e, 0xb805, 0x6920, 0x578, 0xa13c, 0x8a52, 0x1, 0x0);
        gbc.writeMem(0x946e, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0xb805, gbc.sp());
        EXPECT(0x9470, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x946e));
        EXPECT(0xc7, gbc.readMem(0x946f));
        // CB C7 0045
        gbc.setState(0x54ca, 0x92ee, 0xe930, 0xd878, 0xa329, 0x3559, 0x1, 0x0);
        gbc.writeMem(0x54ca, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x92ee, gbc.sp());
        EXPECT(0x54cc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C7 0046
        gbc.setState(0x8228, 0xf57, 0xf1f0, 0xa4bf, 0xa23f, 0xa48, 0x1, 0x1);
        gbc.writeMem(0x8228, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0xf57, gbc.sp());
        EXPECT(0x822a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8228));
        EXPECT(0xc7, gbc.readMem(0x8229));
        // CB C7 0047
        gbc.setState(0x4882, 0x6553, 0xf7a0, 0xee3b, 0x800c, 0xb80, 0x0, 0x0);
        gbc.writeMem(0x4882, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x6553, gbc.sp());
        EXPECT(0x4884, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C7 0048
        gbc.setState(0x9575, 0x118c, 0xa160, 0x5766, 0xc82e, 0x8772, 0x0, 0x0);
        gbc.writeMem(0x9575, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x118c, gbc.sp());
        EXPECT(0x9577, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9575));
        EXPECT(0xc7, gbc.readMem(0x9576));
        // CB C7 0049
        gbc.setState(0x1003, 0x7b77, 0x2360, 0x715b, 0x41ae, 0x83d8, 0x0, 0x1);
        gbc.writeMem(0x1003, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x7b77, gbc.sp());
        EXPECT(0x1005, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C7 004A
        gbc.setState(0xeb09, 0x9925, 0x6cf0, 0xcbda, 0x22dd, 0x8577, 0x1, 0x0);
        gbc.writeMem(0xeb09, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x9925, gbc.sp());
        EXPECT(0xeb0b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeb09));
        EXPECT(0xc7, gbc.readMem(0xeb0a));
        // CB C7 004B
        gbc.setState(0x3a96, 0x340a, 0x4130, 0x9a7b, 0x86aa, 0xb200, 0x0, 0x1);
        gbc.writeMem(0x3a96, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x340a, gbc.sp());
        EXPECT(0x3a98, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C7 004C
        gbc.setState(0x4142, 0x8886, 0x9bf0, 0x1fc0, 0x7407, 0x8119, 0x0, 0x1);
        gbc.writeMem(0x4142, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x8886, gbc.sp());
        EXPECT(0x4144, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C7 004D
        gbc.setState(0x2965, 0xa1e4, 0xd0c0, 0xf85d, 0x3f87, 0x929e, 0x1, 0x0);
        gbc.writeMem(0x2965, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0xa1e4, gbc.sp());
        EXPECT(0x2967, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C7 004E
        gbc.setState(0x9d2b, 0xd96a, 0x4040, 0xdb36, 0xbc10, 0xaafd, 0x1, 0x1);
        gbc.writeMem(0x9d2b, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0xd96a, gbc.sp());
        EXPECT(0x9d2d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9d2b));
        EXPECT(0xc7, gbc.readMem(0x9d2c));
        // CB C7 004F
        gbc.setState(0x8d92, 0xcdb, 0x6360, 0x93b5, 0x1ae9, 0xa4c7, 0x1, 0x0);
        gbc.writeMem(0x8d92, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0xcdb, gbc.sp());
        EXPECT(0x8d94, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8d92));
        EXPECT(0xc7, gbc.readMem(0x8d93));
        // CB C7 0050
        gbc.setState(0x2aad, 0xbe63, 0x4e90, 0x7dcd, 0x41f7, 0xe690, 0x0, 0x1);
        gbc.writeMem(0x2aad, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0xbe63, gbc.sp());
        EXPECT(0x2aaf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C7 0052
        gbc.setState(0xa945, 0x19e9, 0xbb10, 0x9ba5, 0x51d3, 0x2133, 0x0, 0x0);
        gbc.writeMem(0xa945, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x19e9, gbc.sp());
        EXPECT(0xa947, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa945));
        EXPECT(0xc7, gbc.readMem(0xa946));
        // CB C7 0053
        gbc.setState(0x55dd, 0x53db, 0x1fd0, 0x7816, 0x8ca3, 0x2d9d, 0x0, 0x1);
        gbc.writeMem(0x55dd, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x53db, gbc.sp());
        EXPECT(0x55df, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C7 0054
        gbc.setState(0xbf14, 0x2646, 0xcec0, 0x3c0a, 0x1a64, 0x3d7, 0x0, 0x1);
        gbc.writeMem(0xbf14, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0x2646, gbc.sp());
        EXPECT(0xbf16, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbf14));
        EXPECT(0xc7, gbc.readMem(0xbf15));
        // CB C7 0055
        gbc.setState(0x3ded, 0x1c57, 0x7470, 0x52c, 0xeb63, 0xda65, 0x1, 0x0);
        gbc.writeMem(0x3ded, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x1c57, gbc.sp());
        EXPECT(0x3def, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C7 0056
        gbc.setState(0x8ceb, 0xaad9, 0xf800, 0x8e3f, 0xf2b0, 0x420c, 0x0, 0x1);
        gbc.writeMem(0x8ceb, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0xaad9, gbc.sp());
        EXPECT(0x8ced, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8ceb));
        EXPECT(0xc7, gbc.readMem(0x8cec));
        // CB C7 0057
        gbc.setState(0xdc9, 0x3002, 0xb320, 0x7f66, 0x7187, 0x6dfe, 0x0, 0x1);
        gbc.writeMem(0xdc9, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x3002, gbc.sp());
        EXPECT(0xdcb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C7 0058
        gbc.setState(0xc041, 0xaba0, 0xa530, 0x73db, 0x7e8e, 0xc9d0, 0x0, 0x0);
        gbc.writeMem(0xc041, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0xaba0, gbc.sp());
        EXPECT(0xc043, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc041));
        EXPECT(0xc7, gbc.readMem(0xc042));
        // CB C7 0059
        gbc.setState(0x50ad, 0xa33, 0x7700, 0xbbc5, 0x9165, 0xe648, 0x0, 0x0);
        gbc.writeMem(0x50ad, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0xa33, gbc.sp());
        EXPECT(0x50af, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C7 005B
        gbc.setState(0x9473, 0xf3be, 0x3b70, 0x1536, 0x9f27, 0x661a, 0x1, 0x1);
        gbc.writeMem(0x9473, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0xf3be, gbc.sp());
        EXPECT(0x9475, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9473));
        EXPECT(0xc7, gbc.readMem(0x9474));
        // CB C7 005D
        gbc.setState(0x7ce4, 0x8867, 0xef50, 0x1996, 0x1c02, 0x252c, 0x1, 0x0);
        gbc.writeMem(0x7ce4, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x8867, gbc.sp());
        EXPECT(0x7ce6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C7 005E
        gbc.setState(0x9bba, 0x84cf, 0x6a00, 0x45ec, 0x84f6, 0xe50e, 0x0, 0x0);
        gbc.writeMem(0x9bba, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x84cf, gbc.sp());
        EXPECT(0x9bbc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9bba));
        EXPECT(0xc7, gbc.readMem(0x9bbb));
        // CB C7 005F
        gbc.setState(0x5a53, 0x3e85, 0xba70, 0x95dd, 0x9272, 0x6397, 0x0, 0x1);
        gbc.writeMem(0x5a53, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0x3e85, gbc.sp());
        EXPECT(0x5a55, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C7 0060
        gbc.setState(0xc0a7, 0xe0d9, 0x4ff0, 0x1d81, 0x49d9, 0x724e, 0x1, 0x0);
        gbc.writeMem(0xc0a7, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0xe0d9, gbc.sp());
        EXPECT(0xc0a9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc0a7));
        EXPECT(0xc7, gbc.readMem(0xc0a8));
        // CB C7 0061
        gbc.setState(0xaade, 0x4c90, 0x7e60, 0x19f8, 0x3f12, 0x768b, 0x1, 0x0);
        gbc.writeMem(0xaade, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x4c90, gbc.sp());
        EXPECT(0xaae0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaade));
        EXPECT(0xc7, gbc.readMem(0xaadf));
        // CB C7 0062
        gbc.setState(0xaef3, 0xfdc, 0xa530, 0xac4a, 0x479, 0x7e9, 0x0, 0x1);
        gbc.writeMem(0xaef3, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0xfdc, gbc.sp());
        EXPECT(0xaef5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaef3));
        EXPECT(0xc7, gbc.readMem(0xaef4));
        // CB C7 0064
        gbc.setState(0x7dc1, 0x680a, 0xce00, 0xa5b4, 0x5911, 0xc84f, 0x0, 0x1);
        gbc.writeMem(0x7dc1, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x680a, gbc.sp());
        EXPECT(0x7dc3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C7 0065
        gbc.setState(0xb220, 0xcb28, 0xab60, 0xd349, 0xbc0, 0x9279, 0x1, 0x0);
        gbc.writeMem(0xb220, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0xcb28, gbc.sp());
        EXPECT(0xb222, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb220));
        EXPECT(0xc7, gbc.readMem(0xb221));
        // CB C7 0067
        gbc.setState(0x16d0, 0xdff8, 0x6dc0, 0x9430, 0x8c11, 0xdd8b, 0x0, 0x0);
        gbc.writeMem(0x16d0, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0xdff8, gbc.sp());
        EXPECT(0x16d2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C7 0068
        gbc.setState(0xe45, 0xf340, 0x3e0, 0xe020, 0xf332, 0xd2b3, 0x0, 0x1);
        gbc.writeMem(0xe45, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0xf340, gbc.sp());
        EXPECT(0xe47, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C7 0069
        gbc.setState(0xaf58, 0xf87d, 0x7460, 0x5b4e, 0x317d, 0x51f7, 0x0, 0x1);
        gbc.writeMem(0xaf58, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0xf87d, gbc.sp());
        EXPECT(0xaf5a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaf58));
        EXPECT(0xc7, gbc.readMem(0xaf59));
        // CB C7 006B
        gbc.setState(0x518, 0x4a6, 0xd7a0, 0xc625, 0xfce6, 0x134c, 0x1, 0x1);
        gbc.writeMem(0x518, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x4a6, gbc.sp());
        EXPECT(0x51a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C7 006C
        gbc.setState(0x85b, 0xcc9e, 0xfba0, 0x7909, 0x47ef, 0xb1c8, 0x1, 0x0);
        gbc.writeMem(0x85b, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0xcc9e, gbc.sp());
        EXPECT(0x85d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C7 006D
        gbc.setState(0xe447, 0x1be0, 0x8ee0, 0xbbad, 0x2c, 0xcbc7, 0x0, 0x0);
        gbc.writeMem(0xe447, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x1be0, gbc.sp());
        EXPECT(0xe449, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe447));
        EXPECT(0xc7, gbc.readMem(0xe448));
        // CB C7 006E
        gbc.setState(0x4a2c, 0xcb4, 0x7270, 0x94c5, 0xa7a4, 0xba33, 0x1, 0x0);
        gbc.writeMem(0x4a2c, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0xcb4, gbc.sp());
        EXPECT(0x4a2e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C7 006F
        gbc.setState(0x1fa5, 0x64fd, 0xf2d0, 0x5f32, 0xa019, 0xd720, 0x0, 0x1);
        gbc.writeMem(0x1fa5, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x64fd, gbc.sp());
        EXPECT(0x1fa7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C7 0070
        gbc.setState(0xbf1, 0xbad1, 0x7230, 0xd34a, 0xe088, 0x2601, 0x1, 0x0);
        gbc.writeMem(0xbf1, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0xbad1, gbc.sp());
        EXPECT(0xbf3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C7 0071
        gbc.setState(0x8037, 0x83ad, 0xa980, 0x1083, 0xff65, 0xe621, 0x1, 0x0);
        gbc.writeMem(0x8037, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x83ad, gbc.sp());
        EXPECT(0x8039, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8037));
        EXPECT(0xc7, gbc.readMem(0x8038));
        // CB C7 0072
        gbc.setState(0xd4ce, 0xa0c6, 0x3180, 0xb3d9, 0xb7fe, 0xf779, 0x0, 0x1);
        gbc.writeMem(0xd4ce, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0xa0c6, gbc.sp());
        EXPECT(0xd4d0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd4ce));
        EXPECT(0xc7, gbc.readMem(0xd4cf));
        // CB C7 0073
        gbc.setState(0x2f08, 0x8afa, 0x76d0, 0x488, 0x70f7, 0x3c7c, 0x1, 0x0);
        gbc.writeMem(0x2f08, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x8afa, gbc.sp());
        EXPECT(0x2f0a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C7 0074
        gbc.setState(0x80ac, 0xb752, 0x8330, 0x9c6e, 0xc729, 0xbf76, 0x1, 0x1);
        gbc.writeMem(0x80ac, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0xb752, gbc.sp());
        EXPECT(0x80ae, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x80ac));
        EXPECT(0xc7, gbc.readMem(0x80ad));
        // CB C7 0075
        gbc.setState(0xdeca, 0x9fd7, 0x51c0, 0x240a, 0xda57, 0xde7d, 0x0, 0x0);
        gbc.writeMem(0xdeca, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x9fd7, gbc.sp());
        EXPECT(0xdecc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdeca));
        EXPECT(0xc7, gbc.readMem(0xdecb));
        // CB C7 0076
        gbc.setState(0x9f6a, 0xf32, 0xdb60, 0xdab2, 0x23ff, 0x1923, 0x0, 0x1);
        gbc.writeMem(0x9f6a, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0xf32, gbc.sp());
        EXPECT(0x9f6c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9f6a));
        EXPECT(0xc7, gbc.readMem(0x9f6b));
        // CB C7 0077
        gbc.setState(0x967a, 0x6d83, 0x9790, 0x985d, 0xe9e5, 0xcdca, 0x1, 0x1);
        gbc.writeMem(0x967a, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x6d83, gbc.sp());
        EXPECT(0x967c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x967a));
        EXPECT(0xc7, gbc.readMem(0x967b));
        // CB C7 0078
        gbc.setState(0xdabe, 0x1735, 0xb150, 0xa3cc, 0x3c59, 0x6e5e, 0x1, 0x0);
        gbc.writeMem(0xdabe, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x1735, gbc.sp());
        EXPECT(0xdac0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdabe));
        EXPECT(0xc7, gbc.readMem(0xdabf));
        // CB C7 0079
        gbc.setState(0x61b8, 0x10da, 0x6f90, 0x580d, 0x3361, 0xcdfd, 0x1, 0x1);
        gbc.writeMem(0x61b8, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x10da, gbc.sp());
        EXPECT(0x61ba, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C7 007A
        gbc.setState(0x245a, 0x8e09, 0xec00, 0xd3b5, 0xefc9, 0xb54a, 0x1, 0x1);
        gbc.writeMem(0x245a, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x8e09, gbc.sp());
        EXPECT(0x245c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C7 007B
        gbc.setState(0x57fe, 0x4596, 0xecd0, 0xd12d, 0x11c6, 0xf949, 0x1, 0x0);
        gbc.writeMem(0x57fe, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x4596, gbc.sp());
        EXPECT(0x5800, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C7 007C
        gbc.setState(0xbfd1, 0x9ebb, 0x5450, 0x59c8, 0x8953, 0xfb9d, 0x1, 0x1);
        gbc.writeMem(0xbfd1, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x9ebb, gbc.sp());
        EXPECT(0xbfd3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbfd1));
        EXPECT(0xc7, gbc.readMem(0xbfd2));
        // CB C7 007D
        gbc.setState(0x46f0, 0x1e43, 0x6400, 0x4c18, 0xb6ff, 0xecb4, 0x0, 0x1);
        gbc.writeMem(0x46f0, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x1e43, gbc.sp());
        EXPECT(0x46f2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C7 007E
        gbc.setState(0x5f4a, 0x7db6, 0xd1c0, 0xed2d, 0xd874, 0x8a8d, 0x0, 0x0);
        gbc.writeMem(0x5f4a, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x7db6, gbc.sp());
        EXPECT(0x5f4c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C7 007F
        gbc.setState(0x57a6, 0x69c8, 0x58a0, 0x3e84, 0x7f3, 0xb5d4, 0x1, 0x1);
        gbc.writeMem(0x57a6, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x69c8, gbc.sp());
        EXPECT(0x57a8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C7 0080
        gbc.setState(0x5307, 0x6048, 0x27b0, 0xeb23, 0x51e8, 0xe452, 0x0, 0x0);
        gbc.writeMem(0x5307, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x6048, gbc.sp());
        EXPECT(0x5309, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C7 0081
        gbc.setState(0xd4e3, 0x6193, 0x94c0, 0x2db1, 0x432e, 0x2db6, 0x1, 0x1);
        gbc.writeMem(0xd4e3, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x6193, gbc.sp());
        EXPECT(0xd4e5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd4e3));
        EXPECT(0xc7, gbc.readMem(0xd4e4));
        // CB C7 0082
        gbc.setState(0xb10c, 0x748b, 0x84d0, 0x7c34, 0xc34, 0xe5f0, 0x0, 0x1);
        gbc.writeMem(0xb10c, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x748b, gbc.sp());
        EXPECT(0xb10e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb10c));
        EXPECT(0xc7, gbc.readMem(0xb10d));
        // CB C7 0083
        gbc.setState(0x7b19, 0x4b6e, 0xfcf0, 0xe942, 0x9244, 0x7125, 0x1, 0x1);
        gbc.writeMem(0x7b19, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x4b6e, gbc.sp());
        EXPECT(0x7b1b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C7 0084
        gbc.setState(0x288e, 0x6070, 0x9980, 0x6619, 0x989f, 0x2aec, 0x1, 0x1);
        gbc.writeMem(0x288e, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x6070, gbc.sp());
        EXPECT(0x2890, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C7 0085
        gbc.setState(0x8366, 0xadae, 0x6e80, 0x3fdd, 0xba83, 0x4fb2, 0x1, 0x0);
        gbc.writeMem(0x8366, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0xadae, gbc.sp());
        EXPECT(0x8368, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8366));
        EXPECT(0xc7, gbc.readMem(0x8367));
        // CB C7 0086
        gbc.setState(0x84a1, 0xfd71, 0x7ea0, 0x31bc, 0xb164, 0x5ba3, 0x1, 0x0);
        gbc.writeMem(0x84a1, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0xfd71, gbc.sp());
        EXPECT(0x84a3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x84a1));
        EXPECT(0xc7, gbc.readMem(0x84a2));
        // CB C7 0087
        gbc.setState(0x20ae, 0xe70a, 0x7c70, 0xe3c, 0x77bf, 0x57e, 0x1, 0x1);
        gbc.writeMem(0x20ae, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0xe70a, gbc.sp());
        EXPECT(0x20b0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C7 0088
        gbc.setState(0x39dd, 0xbda, 0xa740, 0xa272, 0x4a20, 0x32be, 0x0, 0x1);
        gbc.writeMem(0x39dd, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0xbda, gbc.sp());
        EXPECT(0x39df, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C7 0089
        gbc.setState(0x890d, 0x376f, 0xfec0, 0xe0a6, 0x3bf2, 0x7e75, 0x0, 0x0);
        gbc.writeMem(0x890d, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x376f, gbc.sp());
        EXPECT(0x890f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x890d));
        EXPECT(0xc7, gbc.readMem(0x890e));
        // CB C7 008A
        gbc.setState(0x61db, 0xf932, 0x63d0, 0xe1fa, 0xeb7b, 0x7d22, 0x1, 0x0);
        gbc.writeMem(0x61db, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0xf932, gbc.sp());
        EXPECT(0x61dd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C7 008B
        gbc.setState(0x836f, 0x4006, 0x5cb0, 0xa972, 0x18ca, 0x5971, 0x1, 0x0);
        gbc.writeMem(0x836f, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x4006, gbc.sp());
        EXPECT(0x8371, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x836f));
        EXPECT(0xc7, gbc.readMem(0x8370));
        // CB C7 008C
        gbc.setState(0x7971, 0xdb72, 0xb690, 0x67c4, 0xb6ab, 0x90bc, 0x1, 0x0);
        gbc.writeMem(0x7971, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0xdb72, gbc.sp());
        EXPECT(0x7973, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C7 008D
        gbc.setState(0x5848, 0x1e7, 0x49f0, 0xb7fc, 0x7a36, 0x4f01, 0x1, 0x1);
        gbc.writeMem(0x5848, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x1e7, gbc.sp());
        EXPECT(0x584a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C7 008E
        gbc.setState(0x92eb, 0x4978, 0x7610, 0x8235, 0xd949, 0x9822, 0x0, 0x0);
        gbc.writeMem(0x92eb, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x4978, gbc.sp());
        EXPECT(0x92ed, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x92eb));
        EXPECT(0xc7, gbc.readMem(0x92ec));
        // CB C7 008F
        gbc.setState(0xa8b0, 0xaca1, 0x5510, 0x594b, 0xc056, 0x215e, 0x1, 0x1);
        gbc.writeMem(0xa8b0, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0xaca1, gbc.sp());
        EXPECT(0xa8b2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa8b0));
        EXPECT(0xc7, gbc.readMem(0xa8b1));
        // CB C7 0090
        gbc.setState(0xa3b2, 0x9f3c, 0xe220, 0xbe2f, 0xe0cd, 0x66e9, 0x0, 0x0);
        gbc.writeMem(0xa3b2, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x9f3c, gbc.sp());
        EXPECT(0xa3b4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa3b2));
        EXPECT(0xc7, gbc.readMem(0xa3b3));
        // CB C7 0091
        gbc.setState(0x3381, 0x9539, 0x6b40, 0x70bf, 0xbab4, 0xf2f9, 0x1, 0x0);
        gbc.writeMem(0x3381, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x9539, gbc.sp());
        EXPECT(0x3383, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C7 0092
        gbc.setState(0xaed4, 0xcf0a, 0xda90, 0x72df, 0x63e, 0x5cc5, 0x0, 0x1);
        gbc.writeMem(0xaed4, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0xcf0a, gbc.sp());
        EXPECT(0xaed6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaed4));
        EXPECT(0xc7, gbc.readMem(0xaed5));
        // CB C7 0093
        gbc.setState(0xccd9, 0x6c8a, 0x30e0, 0x7b67, 0x2966, 0x9df6, 0x1, 0x0);
        gbc.writeMem(0xccd9, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x6c8a, gbc.sp());
        EXPECT(0xccdb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xccd9));
        EXPECT(0xc7, gbc.readMem(0xccda));
        // CB C7 0094
        gbc.setState(0x252a, 0xeab6, 0xfe60, 0x7d01, 0x80ab, 0xecae, 0x1, 0x1);
        gbc.writeMem(0x252a, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0xeab6, gbc.sp());
        EXPECT(0x252c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C7 0095
        gbc.setState(0xb735, 0x32a7, 0x7d50, 0xaf11, 0x2afa, 0x35bc, 0x0, 0x0);
        gbc.writeMem(0xb735, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x32a7, gbc.sp());
        EXPECT(0xb737, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb735));
        EXPECT(0xc7, gbc.readMem(0xb736));
        // CB C7 0096
        gbc.setState(0x5deb, 0xfc13, 0xaf70, 0x28be, 0x2439, 0x1da0, 0x0, 0x0);
        gbc.writeMem(0x5deb, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0xfc13, gbc.sp());
        EXPECT(0x5ded, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C7 0097
        gbc.setState(0x6d4d, 0xe167, 0xde50, 0xd088, 0x4b2d, 0xae68, 0x1, 0x1);
        gbc.writeMem(0x6d4d, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0xe167, gbc.sp());
        EXPECT(0x6d4f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C7 0098
        gbc.setState(0x5d4f, 0xd993, 0x9080, 0x48f1, 0x664c, 0x7626, 0x0, 0x1);
        gbc.writeMem(0x5d4f, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0xd993, gbc.sp());
        EXPECT(0x5d51, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C7 0099
        gbc.setState(0xa0fd, 0xaa44, 0x1aa0, 0xdbd5, 0x2aae, 0xe83a, 0x0, 0x0);
        gbc.writeMem(0xa0fd, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0xaa44, gbc.sp());
        EXPECT(0xa0ff, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa0fd));
        EXPECT(0xc7, gbc.readMem(0xa0fe));
        // CB C7 009A
        gbc.setState(0xda2, 0x2571, 0xb1c0, 0x949a, 0xd056, 0xf9a, 0x0, 0x0);
        gbc.writeMem(0xda2, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x2571, gbc.sp());
        EXPECT(0xda4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C7 009B
        gbc.setState(0x25e7, 0xd26a, 0x71a0, 0x6e66, 0x48e9, 0x3794, 0x0, 0x1);
        gbc.writeMem(0x25e7, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0xd26a, gbc.sp());
        EXPECT(0x25e9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C7 009C
        gbc.setState(0x4623, 0x3ca7, 0x86b0, 0x9ed9, 0xd79e, 0x4c52, 0x0, 0x1);
        gbc.writeMem(0x4623, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x3ca7, gbc.sp());
        EXPECT(0x4625, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C7 009E
        gbc.setState(0x1e37, 0x49fc, 0xbea0, 0xb37d, 0xd2c4, 0xb375, 0x0, 0x0);
        gbc.writeMem(0x1e37, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x49fc, gbc.sp());
        EXPECT(0x1e39, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C7 009F
        gbc.setState(0x9bdf, 0x459e, 0xa540, 0x5591, 0x948b, 0x9bed, 0x1, 0x0);
        gbc.writeMem(0x9bdf, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x459e, gbc.sp());
        EXPECT(0x9be1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9bdf));
        EXPECT(0xc7, gbc.readMem(0x9be0));
        // CB C7 00A0
        gbc.setState(0xcb52, 0xc32, 0x3f60, 0x4361, 0x945c, 0xe029, 0x0, 0x1);
        gbc.writeMem(0xcb52, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0xc32, gbc.sp());
        EXPECT(0xcb54, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcb52));
        EXPECT(0xc7, gbc.readMem(0xcb53));
        // CB C7 00A1
        gbc.setState(0xb50e, 0xa6, 0x2aa0, 0xb65c, 0xbf15, 0xf276, 0x0, 0x0);
        gbc.writeMem(0xb50e, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0xa6, gbc.sp());
        EXPECT(0xb510, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb50e));
        EXPECT(0xc7, gbc.readMem(0xb50f));
        // CB C7 00A2
        gbc.setState(0xb50a, 0x485b, 0xd860, 0xf526, 0x7beb, 0x3e9c, 0x1, 0x0);
        gbc.writeMem(0xb50a, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x485b, gbc.sp());
        EXPECT(0xb50c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb50a));
        EXPECT(0xc7, gbc.readMem(0xb50b));
        // CB C7 00A3
        gbc.setState(0x628d, 0x29a1, 0xa50, 0xf698, 0xffed, 0xe44a, 0x1, 0x1);
        gbc.writeMem(0x628d, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x29a1, gbc.sp());
        EXPECT(0x628f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C7 00A4
        gbc.setState(0x380a, 0x68e1, 0x9ff0, 0xb591, 0x3f88, 0x1c3b, 0x1, 0x1);
        gbc.writeMem(0x380a, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x68e1, gbc.sp());
        EXPECT(0x380c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C7 00A5
        gbc.setState(0x9b67, 0x57d, 0xd0b0, 0x2b5e, 0xb0bb, 0xbff1, 0x1, 0x1);
        gbc.writeMem(0x9b67, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x57d, gbc.sp());
        EXPECT(0x9b69, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9b67));
        EXPECT(0xc7, gbc.readMem(0x9b68));
        // CB C7 00A6
        gbc.setState(0x5ec6, 0x408e, 0x3290, 0xbcc8, 0xa769, 0x1775, 0x1, 0x0);
        gbc.writeMem(0x5ec6, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x408e, gbc.sp());
        EXPECT(0x5ec8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C7 00A7
        gbc.setState(0x6e81, 0xb354, 0xcec0, 0x74fa, 0x1742, 0xbb13, 0x1, 0x0);
        gbc.writeMem(0x6e81, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0xb354, gbc.sp());
        EXPECT(0x6e83, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C7 00A8
        gbc.setState(0x588f, 0x8ac9, 0x8ea0, 0xafdf, 0x1628, 0xe9c4, 0x0, 0x0);
        gbc.writeMem(0x588f, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x8ac9, gbc.sp());
        EXPECT(0x5891, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C7 00A9
        gbc.setState(0xd7ed, 0x8cb, 0x6a40, 0xaed5, 0x110b, 0x3616, 0x0, 0x1);
        gbc.writeMem(0xd7ed, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x8cb, gbc.sp());
        EXPECT(0xd7ef, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd7ed));
        EXPECT(0xc7, gbc.readMem(0xd7ee));
        // CB C7 00AA
        gbc.setState(0x4214, 0x7a6f, 0x78d0, 0x9e73, 0x82b2, 0x322f, 0x1, 0x0);
        gbc.writeMem(0x4214, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x7a6f, gbc.sp());
        EXPECT(0x4216, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C7 00AB
        gbc.setState(0x86f7, 0x8ea, 0x9010, 0x9045, 0x2eda, 0x1f0b, 0x1, 0x1);
        gbc.writeMem(0x86f7, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x8ea, gbc.sp());
        EXPECT(0x86f9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x86f7));
        EXPECT(0xc7, gbc.readMem(0x86f8));
        // CB C7 00AC
        gbc.setState(0xa9a4, 0xb192, 0xb7f0, 0xdc8f, 0xe0ed, 0x879b, 0x0, 0x0);
        gbc.writeMem(0xa9a4, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0xb192, gbc.sp());
        EXPECT(0xa9a6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa9a4));
        EXPECT(0xc7, gbc.readMem(0xa9a5));
        // CB C7 00AD
        gbc.setState(0x833, 0x9c82, 0x8de0, 0xcbdc, 0x67b, 0x8967, 0x0, 0x1);
        gbc.writeMem(0x833, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x9c82, gbc.sp());
        EXPECT(0x835, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C7 00AE
        gbc.setState(0x6c65, 0xc4eb, 0xc0d0, 0x38e1, 0xd864, 0xd213, 0x0, 0x0);
        gbc.writeMem(0x6c65, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0xc4eb, gbc.sp());
        EXPECT(0x6c67, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C7 00B0
        gbc.setState(0xd605, 0xd68d, 0x6530, 0x7d30, 0x4d36, 0x616, 0x1, 0x0);
        gbc.writeMem(0xd605, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0xd68d, gbc.sp());
        EXPECT(0xd607, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd605));
        EXPECT(0xc7, gbc.readMem(0xd606));
        // CB C7 00B1
        gbc.setState(0x455c, 0xa1d1, 0x3930, 0x6a81, 0xb0d8, 0xdf7e, 0x0, 0x1);
        gbc.writeMem(0x455c, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0xa1d1, gbc.sp());
        EXPECT(0x455e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C7 00B2
        gbc.setState(0x66ce, 0xeb8a, 0xb870, 0x2f25, 0x6df0, 0xf725, 0x1, 0x1);
        gbc.writeMem(0x66ce, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0xeb8a, gbc.sp());
        EXPECT(0x66d0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C7 00B3
        gbc.setState(0xe89c, 0x449f, 0x6e40, 0x9479, 0x116d, 0x61ca, 0x1, 0x1);
        gbc.writeMem(0xe89c, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x449f, gbc.sp());
        EXPECT(0xe89e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe89c));
        EXPECT(0xc7, gbc.readMem(0xe89d));
        // CB C7 00B4
        gbc.setState(0x7c96, 0x119a, 0xf450, 0xd1f6, 0x15c3, 0xf7c3, 0x0, 0x1);
        gbc.writeMem(0x7c96, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x119a, gbc.sp());
        EXPECT(0x7c98, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C7 00B5
        gbc.setState(0x9f97, 0x7c10, 0xd0d0, 0xcae3, 0x6f88, 0xec17, 0x0, 0x0);
        gbc.writeMem(0x9f97, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x7c10, gbc.sp());
        EXPECT(0x9f99, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9f97));
        EXPECT(0xc7, gbc.readMem(0x9f98));
        // CB C7 00B6
        gbc.setState(0xef4a, 0x7f2, 0x58d0, 0x75d5, 0x6457, 0xdac8, 0x1, 0x1);
        gbc.writeMem(0xef4a, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x7f2, gbc.sp());
        EXPECT(0xef4c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xef4a));
        EXPECT(0xc7, gbc.readMem(0xef4b));
        // CB C7 00B7
        gbc.setState(0x53ef, 0x84cf, 0x510, 0x36dc, 0x725b, 0xdf04, 0x1, 0x1);
        gbc.writeMem(0x53ef, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x84cf, gbc.sp());
        EXPECT(0x53f1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C7 00B8
        gbc.setState(0x5a0a, 0x4aa, 0xde30, 0x8a0b, 0xa38a, 0xf378, 0x1, 0x1);
        gbc.writeMem(0x5a0a, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x4aa, gbc.sp());
        EXPECT(0x5a0c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C7 00B9
        gbc.setState(0x43d5, 0x98ca, 0x6cd0, 0x88e0, 0x99d6, 0xa334, 0x1, 0x1);
        gbc.writeMem(0x43d5, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x98ca, gbc.sp());
        EXPECT(0x43d7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C7 00BA
        gbc.setState(0x2799, 0xa7d5, 0xe820, 0x215e, 0x9cd, 0x237f, 0x0, 0x1);
        gbc.writeMem(0x2799, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0xa7d5, gbc.sp());
        EXPECT(0x279b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C7 00BB
        gbc.setState(0x865b, 0x8c56, 0x8520, 0x124e, 0x604b, 0x1cb8, 0x0, 0x1);
        gbc.writeMem(0x865b, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x8c56, gbc.sp());
        EXPECT(0x865d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x865b));
        EXPECT(0xc7, gbc.readMem(0x865c));
        // CB C7 00BC
        gbc.setState(0x76d8, 0xf630, 0x2cf0, 0xe8dc, 0xd998, 0xb9e6, 0x1, 0x1);
        gbc.writeMem(0x76d8, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0xf630, gbc.sp());
        EXPECT(0x76da, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C7 00BD
        gbc.setState(0x59bc, 0xfce7, 0x440, 0x88d0, 0x11cd, 0xd875, 0x0, 0x1);
        gbc.writeMem(0x59bc, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0xfce7, gbc.sp());
        EXPECT(0x59be, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C7 00BE
        gbc.setState(0x5883, 0x8b8e, 0x9af0, 0xba7, 0x285d, 0x4e31, 0x0, 0x0);
        gbc.writeMem(0x5883, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x8b8e, gbc.sp());
        EXPECT(0x5885, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C7 00BF
        gbc.setState(0x458c, 0x42e2, 0x8190, 0xc55b, 0x1b50, 0x5df0, 0x1, 0x1);
        gbc.writeMem(0x458c, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x42e2, gbc.sp());
        EXPECT(0x458e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C7 00C0
        gbc.setState(0xb807, 0xac39, 0xba80, 0xb337, 0x2efa, 0x7ab9, 0x1, 0x0);
        gbc.writeMem(0xb807, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0xac39, gbc.sp());
        EXPECT(0xb809, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb807));
        EXPECT(0xc7, gbc.readMem(0xb808));
        // CB C7 00C1
        gbc.setState(0xa3b0, 0x3aa3, 0x8290, 0x1e27, 0xf333, 0x342f, 0x1, 0x1);
        gbc.writeMem(0xa3b0, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x3aa3, gbc.sp());
        EXPECT(0xa3b2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa3b0));
        EXPECT(0xc7, gbc.readMem(0xa3b1));
        // CB C7 00C2
        gbc.setState(0x359e, 0x21be, 0x9ca0, 0x44e8, 0x34fc, 0x3ece, 0x0, 0x0);
        gbc.writeMem(0x359e, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x21be, gbc.sp());
        EXPECT(0x35a0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C7 00C3
        gbc.setState(0xe40b, 0x38d0, 0x5d60, 0x63d3, 0x291, 0x8e61, 0x0, 0x1);
        gbc.writeMem(0xe40b, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x38d0, gbc.sp());
        EXPECT(0xe40d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe40b));
        EXPECT(0xc7, gbc.readMem(0xe40c));
        // CB C7 00C4
        gbc.setState(0x6514, 0x3c42, 0xd6b0, 0x8838, 0xef3, 0xf658, 0x1, 0x0);
        gbc.writeMem(0x6514, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x3c42, gbc.sp());
        EXPECT(0x6516, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C7 00C5
        gbc.setState(0x879b, 0xeb0e, 0xf080, 0xb425, 0xe80f, 0xd2b0, 0x1, 0x0);
        gbc.writeMem(0x879b, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0xeb0e, gbc.sp());
        EXPECT(0x879d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x879b));
        EXPECT(0xc7, gbc.readMem(0x879c));
        // CB C7 00C6
        gbc.setState(0xba8c, 0xcb0c, 0x60f0, 0xec26, 0xcf3e, 0x3de1, 0x0, 0x0);
        gbc.writeMem(0xba8c, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0xcb0c, gbc.sp());
        EXPECT(0xba8e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xba8c));
        EXPECT(0xc7, gbc.readMem(0xba8d));
        // CB C7 00C7
        gbc.setState(0x5bab, 0x9164, 0xa330, 0xab5, 0xf243, 0xf045, 0x1, 0x1);
        gbc.writeMem(0x5bab, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x9164, gbc.sp());
        EXPECT(0x5bad, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C7 00C8
        gbc.setState(0xad6f, 0x2442, 0x3dc0, 0xc41f, 0x19bc, 0x6912, 0x0, 0x0);
        gbc.writeMem(0xad6f, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x2442, gbc.sp());
        EXPECT(0xad71, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xad6f));
        EXPECT(0xc7, gbc.readMem(0xad70));
        // CB C7 00C9
        gbc.setState(0x7d07, 0x6840, 0x2420, 0xeffb, 0x3d2, 0x5858, 0x0, 0x0);
        gbc.writeMem(0x7d07, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x6840, gbc.sp());
        EXPECT(0x7d09, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C7 00CA
        gbc.setState(0x34c4, 0xd335, 0x4c40, 0x970d, 0x9a3b, 0x3975, 0x0, 0x1);
        gbc.writeMem(0x34c4, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0xd335, gbc.sp());
        EXPECT(0x34c6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C7 00CB
        gbc.setState(0x29d5, 0x87d8, 0xa0b0, 0x9050, 0x450a, 0x2b4, 0x0, 0x0);
        gbc.writeMem(0x29d5, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x87d8, gbc.sp());
        EXPECT(0x29d7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C7 00CC
        gbc.setState(0x36e3, 0x29a8, 0xbe60, 0x3dfd, 0x75ec, 0xb721, 0x1, 0x1);
        gbc.writeMem(0x36e3, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x29a8, gbc.sp());
        EXPECT(0x36e5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C7 00CD
        gbc.setState(0xc209, 0x9ee6, 0x1360, 0x6d70, 0x89ef, 0x3fd, 0x1, 0x1);
        gbc.writeMem(0xc209, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x9ee6, gbc.sp());
        EXPECT(0xc20b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc209));
        EXPECT(0xc7, gbc.readMem(0xc20a));
        // CB C7 00CE
        gbc.setState(0xdc3b, 0x1b2f, 0xb410, 0x81e7, 0xedef, 0x2bef, 0x1, 0x1);
        gbc.writeMem(0xdc3b, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x1b2f, gbc.sp());
        EXPECT(0xdc3d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdc3b));
        EXPECT(0xc7, gbc.readMem(0xdc3c));
        // CB C7 00D0
        gbc.setState(0x4c7d, 0x6b66, 0x5be0, 0x21ae, 0x2174, 0xe0dc, 0x1, 0x0);
        gbc.writeMem(0x4c7d, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x6b66, gbc.sp());
        EXPECT(0x4c7f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C7 00D1
        gbc.setState(0xda5d, 0xa9f6, 0x77a0, 0x3ae5, 0x6e0d, 0xe921, 0x1, 0x1);
        gbc.writeMem(0xda5d, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0xa9f6, gbc.sp());
        EXPECT(0xda5f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xda5d));
        EXPECT(0xc7, gbc.readMem(0xda5e));
        // CB C7 00D2
        gbc.setState(0xba2e, 0x7cd8, 0x2290, 0x8ae5, 0x4667, 0xa48e, 0x1, 0x0);
        gbc.writeMem(0xba2e, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x7cd8, gbc.sp());
        EXPECT(0xba30, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xba2e));
        EXPECT(0xc7, gbc.readMem(0xba2f));
        // CB C7 00D4
        gbc.setState(0x25c2, 0x4d24, 0x200, 0xdf2c, 0x2c98, 0x3a8a, 0x1, 0x1);
        gbc.writeMem(0x25c2, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x4d24, gbc.sp());
        EXPECT(0x25c4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C7 00D5
        gbc.setState(0x74e2, 0xfd57, 0x9b0, 0xce70, 0xf911, 0x1896, 0x1, 0x1);
        gbc.writeMem(0x74e2, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0xfd57, gbc.sp());
        EXPECT(0x74e4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C7 00D6
        gbc.setState(0x6973, 0x4468, 0x2e50, 0x10b2, 0x8daa, 0x75a2, 0x0, 0x0);
        gbc.writeMem(0x6973, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x4468, gbc.sp());
        EXPECT(0x6975, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C7 00D7
        gbc.setState(0xc536, 0xb9ed, 0xd580, 0x33ec, 0xf355, 0x33fe, 0x0, 0x0);
        gbc.writeMem(0xc536, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0xb9ed, gbc.sp());
        EXPECT(0xc538, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc536));
        EXPECT(0xc7, gbc.readMem(0xc537));
        // CB C7 00D8
        gbc.setState(0x2bc7, 0xd961, 0xbc10, 0x9a10, 0xc0ad, 0xa106, 0x0, 0x0);
        gbc.writeMem(0x2bc7, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0xd961, gbc.sp());
        EXPECT(0x2bc9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C7 00D9
        gbc.setState(0xe149, 0x25ff, 0x9470, 0x8469, 0x98a7, 0x9f8c, 0x1, 0x0);
        gbc.writeMem(0xe149, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x25ff, gbc.sp());
        EXPECT(0xe14b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe149));
        EXPECT(0xc7, gbc.readMem(0xe14a));
        // CB C7 00DA
        gbc.setState(0xbf02, 0xf1c, 0xc920, 0x2069, 0x771, 0x1b64, 0x1, 0x0);
        gbc.writeMem(0xbf02, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0xf1c, gbc.sp());
        EXPECT(0xbf04, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbf02));
        EXPECT(0xc7, gbc.readMem(0xbf03));
        // CB C7 00DB
        gbc.setState(0x8dc8, 0x67a5, 0xe3d0, 0xbfb4, 0xaf27, 0x1cfd, 0x0, 0x0);
        gbc.writeMem(0x8dc8, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x67a5, gbc.sp());
        EXPECT(0x8dca, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8dc8));
        EXPECT(0xc7, gbc.readMem(0x8dc9));
        // CB C7 00DC
        gbc.setState(0x30d4, 0xbb68, 0x68c0, 0x84cf, 0x1713, 0x6fcb, 0x0, 0x1);
        gbc.writeMem(0x30d4, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0xbb68, gbc.sp());
        EXPECT(0x30d6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C7 00DD
        gbc.setState(0x86d1, 0x9cd1, 0x64f0, 0x6153, 0x1326, 0x410d, 0x0, 0x1);
        gbc.writeMem(0x86d1, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x9cd1, gbc.sp());
        EXPECT(0x86d3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x86d1));
        EXPECT(0xc7, gbc.readMem(0x86d2));
        // CB C7 00DE
        gbc.setState(0xe236, 0xb6b2, 0xb160, 0xe3ac, 0xb8bc, 0xdec7, 0x0, 0x1);
        gbc.writeMem(0xe236, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0xb6b2, gbc.sp());
        EXPECT(0xe238, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe236));
        EXPECT(0xc7, gbc.readMem(0xe237));
        // CB C7 00DF
        gbc.setState(0x63b, 0xad55, 0x3a30, 0x683, 0xbd6d, 0x4845, 0x0, 0x1);
        gbc.writeMem(0x63b, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0xad55, gbc.sp());
        EXPECT(0x63d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C7 00E0
        gbc.setState(0x60dc, 0xe9b4, 0xb240, 0xf040, 0x9858, 0x5309, 0x1, 0x1);
        gbc.writeMem(0x60dc, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0xe9b4, gbc.sp());
        EXPECT(0x60de, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C7 00E1
        gbc.setState(0xad0c, 0xdfd4, 0x7690, 0x85a9, 0x612a, 0xf5e6, 0x0, 0x1);
        gbc.writeMem(0xad0c, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0xdfd4, gbc.sp());
        EXPECT(0xad0e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xad0c));
        EXPECT(0xc7, gbc.readMem(0xad0d));
        // CB C7 00E2
        gbc.setState(0x5260, 0x4299, 0x72f0, 0x882c, 0xab55, 0x1ced, 0x0, 0x1);
        gbc.writeMem(0x5260, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x4299, gbc.sp());
        EXPECT(0x5262, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C7 00E3
        gbc.setState(0x9577, 0x5121, 0x7410, 0x3d75, 0x2e2f, 0x57fa, 0x0, 0x1);
        gbc.writeMem(0x9577, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0x5121, gbc.sp());
        EXPECT(0x9579, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9577));
        EXPECT(0xc7, gbc.readMem(0x9578));
        // CB C7 00E4
        gbc.setState(0xac4a, 0xc51, 0x33e0, 0x67ed, 0x65f5, 0x59df, 0x0, 0x0);
        gbc.writeMem(0xac4a, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0xc51, gbc.sp());
        EXPECT(0xac4c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xac4a));
        EXPECT(0xc7, gbc.readMem(0xac4b));
        // CB C7 00E5
        gbc.setState(0x1c16, 0x9a8a, 0xe510, 0xb8f, 0xd5db, 0x3009, 0x0, 0x1);
        gbc.writeMem(0x1c16, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x9a8a, gbc.sp());
        EXPECT(0x1c18, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C7 00E6
        gbc.setState(0x1af7, 0xdb6c, 0xbb80, 0x9888, 0xf55d, 0x3ab6, 0x1, 0x1);
        gbc.writeMem(0x1af7, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0xdb6c, gbc.sp());
        EXPECT(0x1af9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C7 00E7
        gbc.setState(0x3e76, 0x4dee, 0x6700, 0x979e, 0xa826, 0x725e, 0x0, 0x0);
        gbc.writeMem(0x3e76, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x4dee, gbc.sp());
        EXPECT(0x3e78, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C7 00E8
        gbc.setState(0x346e, 0xf15b, 0xb9c0, 0xbe38, 0x63db, 0xd5fc, 0x0, 0x1);
        gbc.writeMem(0x346e, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0xf15b, gbc.sp());
        EXPECT(0x3470, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C7 00EA
        gbc.setState(0xc36a, 0x6fe5, 0xcde0, 0x5335, 0xfb3e, 0xe0dd, 0x1, 0x0);
        gbc.writeMem(0xc36a, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x6fe5, gbc.sp());
        EXPECT(0xc36c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc36a));
        EXPECT(0xc7, gbc.readMem(0xc36b));
        // CB C7 00EB
        gbc.setState(0xe161, 0x2a06, 0x4980, 0xeb16, 0x7c77, 0x74d6, 0x0, 0x1);
        gbc.writeMem(0xe161, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x2a06, gbc.sp());
        EXPECT(0xe163, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe161));
        EXPECT(0xc7, gbc.readMem(0xe162));
        // CB C7 00EC
        gbc.setState(0x2b97, 0x6ca5, 0x6a30, 0x9a14, 0xbb4b, 0xb5b9, 0x1, 0x0);
        gbc.writeMem(0x2b97, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x6ca5, gbc.sp());
        EXPECT(0x2b99, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C7 00ED
        gbc.setState(0x34f3, 0x8eb6, 0x1700, 0xbefc, 0x2343, 0x808f, 0x0, 0x0);
        gbc.writeMem(0x34f3, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x8eb6, gbc.sp());
        EXPECT(0x34f5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C7 00EE
        gbc.setState(0x6e24, 0xcec7, 0x3fb0, 0xfd6, 0x68e0, 0x6683, 0x0, 0x0);
        gbc.writeMem(0x6e24, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0xcec7, gbc.sp());
        EXPECT(0x6e26, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C7 00EF
        gbc.setState(0x7dfe, 0x1a6b, 0xe490, 0xc129, 0xf27d, 0x5f63, 0x1, 0x1);
        gbc.writeMem(0x7dfe, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x1a6b, gbc.sp());
        EXPECT(0x7e00, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C7 00F0
        gbc.setState(0x7a56, 0x2902, 0xb650, 0x926, 0xb098, 0x52e2, 0x0, 0x1);
        gbc.writeMem(0x7a56, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x2902, gbc.sp());
        EXPECT(0x7a58, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C7 00F1
        gbc.setState(0xec35, 0x471c, 0x4100, 0x61f8, 0x21c, 0x65ee, 0x1, 0x1);
        gbc.writeMem(0xec35, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x471c, gbc.sp());
        EXPECT(0xec37, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xec35));
        EXPECT(0xc7, gbc.readMem(0xec36));
        // CB C7 00F2
        gbc.setState(0x47b1, 0x5826, 0xe800, 0xf32d, 0xeb2f, 0x69b8, 0x1, 0x0);
        gbc.writeMem(0x47b1, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x5826, gbc.sp());
        EXPECT(0x47b3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C7 00F3
        gbc.setState(0x19fc, 0x6c90, 0xffc0, 0x9321, 0x6e15, 0x3ce3, 0x0, 0x0);
        gbc.writeMem(0x19fc, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x6c90, gbc.sp());
        EXPECT(0x19fe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C7 00F4
        gbc.setState(0x53bd, 0xf3fb, 0xba10, 0xc7db, 0xc1f7, 0x4d91, 0x0, 0x1);
        gbc.writeMem(0x53bd, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0xf3fb, gbc.sp());
        EXPECT(0x53bf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C7 00F5
        gbc.setState(0xac6b, 0x280e, 0x8da0, 0x689, 0x551c, 0xec8f, 0x1, 0x1);
        gbc.writeMem(0xac6b, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x280e, gbc.sp());
        EXPECT(0xac6d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xac6b));
        EXPECT(0xc7, gbc.readMem(0xac6c));
        // CB C7 00F6
        gbc.setState(0x9ab, 0x44c2, 0xa70, 0xf8ff, 0xfeee, 0xdc9, 0x0, 0x0);
        gbc.writeMem(0x9ab, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x44c2, gbc.sp());
        EXPECT(0x9ad, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C7 00F7
        gbc.setState(0x1695, 0x75ad, 0x3250, 0x1968, 0x619f, 0xf081, 0x1, 0x1);
        gbc.writeMem(0x1695, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x75ad, gbc.sp());
        EXPECT(0x1697, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C7 00F8
        gbc.setState(0xdc38, 0x75b7, 0xeaa0, 0xbd88, 0x28e1, 0xc044, 0x1, 0x0);
        gbc.writeMem(0xdc38, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x75b7, gbc.sp());
        EXPECT(0xdc3a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdc38));
        EXPECT(0xc7, gbc.readMem(0xdc39));
        // CB C7 00F9
        gbc.setState(0x5b9b, 0xe238, 0x1a0, 0x100c, 0x18e8, 0x40da, 0x0, 0x1);
        gbc.writeMem(0x5b9b, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0xe238, gbc.sp());
        EXPECT(0x5b9d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C7 00FB
        gbc.setState(0x460d, 0x26f6, 0x9830, 0x706f, 0x5f4a, 0x43af, 0x0, 0x1);
        gbc.writeMem(0x460d, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x26f6, gbc.sp());
        EXPECT(0x460f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C7 00FC
        gbc.setState(0x37a8, 0xa806, 0xa8e0, 0xda24, 0xede6, 0x1059, 0x0, 0x0);
        gbc.writeMem(0x37a8, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0xa806, gbc.sp());
        EXPECT(0x37aa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C7 00FD
        gbc.setState(0x8f22, 0xc8b5, 0xbf80, 0x90e9, 0x993c, 0xdc58, 0x1, 0x1);
        gbc.writeMem(0x8f22, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0xc8b5, gbc.sp());
        EXPECT(0x8f24, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8f22));
        EXPECT(0xc7, gbc.readMem(0x8f23));
        // CB C7 00FE
        gbc.setState(0xd358, 0xa4df, 0x6eb0, 0x17ed, 0x40f6, 0x4ef4, 0x0, 0x1);
        gbc.writeMem(0xd358, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0xa4df, gbc.sp());
        EXPECT(0xd35a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd358));
        EXPECT(0xc7, gbc.readMem(0xd359));
        // CB C7 00FF
        gbc.setState(0xe652, 0xaf40, 0xeed0, 0x99ae, 0x455e, 0x124e, 0x1, 0x1);
        gbc.writeMem(0xe652, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0xaf40, gbc.sp());
        EXPECT(0xe654, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe652));
        EXPECT(0xc7, gbc.readMem(0xe653));
        // CB C7 0100
        gbc.setState(0xe5ef, 0xe40f, 0x6820, 0x9c77, 0xbb2c, 0x4090, 0x1, 0x0);
        gbc.writeMem(0xe5ef, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0xe40f, gbc.sp());
        EXPECT(0xe5f1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe5ef));
        EXPECT(0xc7, gbc.readMem(0xe5f0));
        // CB C7 0101
        gbc.setState(0xe84, 0x326a, 0xbf90, 0x866b, 0xefdc, 0x3d20, 0x1, 0x1);
        gbc.writeMem(0xe84, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x326a, gbc.sp());
        EXPECT(0xe86, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C7 0103
        gbc.setState(0x5b05, 0xa8e8, 0xa8c0, 0xd698, 0x321e, 0x1163, 0x1, 0x1);
        gbc.writeMem(0x5b05, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0xa8e8, gbc.sp());
        EXPECT(0x5b07, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C7 0104
        gbc.setState(0x7806, 0x3a59, 0xa260, 0x37ca, 0x7ab8, 0x4225, 0x0, 0x1);
        gbc.writeMem(0x7806, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x3a59, gbc.sp());
        EXPECT(0x7808, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C7 0105
        gbc.setState(0xdcfc, 0x56b1, 0x8060, 0xdf22, 0xf616, 0x795a, 0x1, 0x1);
        gbc.writeMem(0xdcfc, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x56b1, gbc.sp());
        EXPECT(0xdcfe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdcfc));
        EXPECT(0xc7, gbc.readMem(0xdcfd));
        // CB C7 0106
        gbc.setState(0x2aad, 0x7f54, 0x8660, 0xe465, 0xa0ae, 0x5bc8, 0x0, 0x1);
        gbc.writeMem(0x2aad, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x7f54, gbc.sp());
        EXPECT(0x2aaf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C7 0107
        gbc.setState(0x9685, 0x85d7, 0xd700, 0x46b0, 0x8768, 0x61e9, 0x0, 0x1);
        gbc.writeMem(0x9685, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x85d7, gbc.sp());
        EXPECT(0x9687, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9685));
        EXPECT(0xc7, gbc.readMem(0x9686));
        // CB C7 0108
        gbc.setState(0xee30, 0x47fd, 0xe280, 0x857e, 0x75f1, 0x9ab0, 0x1, 0x0);
        gbc.writeMem(0xee30, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x47fd, gbc.sp());
        EXPECT(0xee32, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xee30));
        EXPECT(0xc7, gbc.readMem(0xee31));
        // CB C7 0109
        gbc.setState(0x3f4e, 0x10d0, 0xe270, 0x98c9, 0xd16, 0xe, 0x0, 0x1);
        gbc.writeMem(0x3f4e, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x10d0, gbc.sp());
        EXPECT(0x3f50, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C7 010A
        gbc.setState(0x9c9a, 0x40d2, 0x5980, 0x4c1a, 0xadcd, 0xf21c, 0x0, 0x0);
        gbc.writeMem(0x9c9a, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x40d2, gbc.sp());
        EXPECT(0x9c9c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9c9a));
        EXPECT(0xc7, gbc.readMem(0x9c9b));
        // CB C7 010B
        gbc.setState(0x5e8b, 0xd95c, 0x7960, 0x19e4, 0x9f7f, 0xafce, 0x0, 0x0);
        gbc.writeMem(0x5e8b, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0xd95c, gbc.sp());
        EXPECT(0x5e8d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C7 010C
        gbc.setState(0x52a9, 0xd39c, 0x6c70, 0x400, 0x2d14, 0x3ebe, 0x1, 0x1);
        gbc.writeMem(0x52a9, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0xd39c, gbc.sp());
        EXPECT(0x52ab, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C7 010D
        gbc.setState(0x3548, 0xa568, 0x2c80, 0x6664, 0xb233, 0xf0c4, 0x0, 0x0);
        gbc.writeMem(0x3548, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0xa568, gbc.sp());
        EXPECT(0x354a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C7 010E
        gbc.setState(0xdfd2, 0x5b7c, 0x8430, 0x6d9b, 0x55b4, 0x5ca3, 0x1, 0x1);
        gbc.writeMem(0xdfd2, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0x5b7c, gbc.sp());
        EXPECT(0xdfd4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdfd2));
        EXPECT(0xc7, gbc.readMem(0xdfd3));
        // CB C7 0110
        gbc.setState(0x2972, 0x6f2c, 0x8a40, 0x2dd, 0xd0fb, 0x32a1, 0x0, 0x0);
        gbc.writeMem(0x2972, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x6f2c, gbc.sp());
        EXPECT(0x2974, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C7 0111
        gbc.setState(0x7e4e, 0x8ccb, 0xbeb0, 0x6030, 0xc21f, 0x29b, 0x1, 0x0);
        gbc.writeMem(0x7e4e, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x8ccb, gbc.sp());
        EXPECT(0x7e50, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C7 0112
        gbc.setState(0xefc6, 0x1f60, 0x8ec0, 0x87ca, 0x42b4, 0x44f3, 0x1, 0x0);
        gbc.writeMem(0xefc6, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x1f60, gbc.sp());
        EXPECT(0xefc8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xefc6));
        EXPECT(0xc7, gbc.readMem(0xefc7));
        // CB C7 0113
        gbc.setState(0xc2dd, 0x2308, 0xa610, 0x88d9, 0x1511, 0x29d3, 0x1, 0x1);
        gbc.writeMem(0xc2dd, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x2308, gbc.sp());
        EXPECT(0xc2df, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc2dd));
        EXPECT(0xc7, gbc.readMem(0xc2de));
        // CB C7 0114
        gbc.setState(0xe71c, 0xef74, 0x93b0, 0xbeef, 0xc02f, 0x99e7, 0x1, 0x0);
        gbc.writeMem(0xe71c, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0xef74, gbc.sp());
        EXPECT(0xe71e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe71c));
        EXPECT(0xc7, gbc.readMem(0xe71d));
        // CB C7 0115
        gbc.setState(0xc14d, 0x783, 0xd0b0, 0x4f90, 0xb51c, 0xb824, 0x0, 0x1);
        gbc.writeMem(0xc14d, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x783, gbc.sp());
        EXPECT(0xc14f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc14d));
        EXPECT(0xc7, gbc.readMem(0xc14e));
        // CB C7 0116
        gbc.setState(0xccd1, 0xe33a, 0xb590, 0xba8, 0xd6ec, 0x1a59, 0x0, 0x1);
        gbc.writeMem(0xccd1, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0xe33a, gbc.sp());
        EXPECT(0xccd3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xccd1));
        EXPECT(0xc7, gbc.readMem(0xccd2));
        // CB C7 0117
        gbc.setState(0x2113, 0xcccc, 0x22d0, 0x390a, 0x238c, 0x715f, 0x0, 0x1);
        gbc.writeMem(0x2113, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0xcccc, gbc.sp());
        EXPECT(0x2115, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C7 0118
        gbc.setState(0x4de2, 0x54a1, 0x3d80, 0xcff6, 0x652a, 0x59ba, 0x1, 0x0);
        gbc.writeMem(0x4de2, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0x54a1, gbc.sp());
        EXPECT(0x4de4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C7 011A
        gbc.setState(0x3c69, 0xeb56, 0x7aa0, 0x663d, 0x3483, 0x521a, 0x0, 0x1);
        gbc.writeMem(0x3c69, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0xeb56, gbc.sp());
        EXPECT(0x3c6b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C7 011B
        gbc.setState(0x2602, 0x78fd, 0xccb0, 0x1706, 0x1fd7, 0xa823, 0x0, 0x1);
        gbc.writeMem(0x2602, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x78fd, gbc.sp());
        EXPECT(0x2604, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C7 011C
        gbc.setState(0x9919, 0x1020, 0xfae0, 0x6269, 0xd747, 0x7eda, 0x1, 0x1);
        gbc.writeMem(0x9919, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x1020, gbc.sp());
        EXPECT(0x991b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9919));
        EXPECT(0xc7, gbc.readMem(0x991a));
        // CB C7 011D
        gbc.setState(0xd297, 0xe9e8, 0x9650, 0xb0a3, 0xde04, 0x68a2, 0x1, 0x1);
        gbc.writeMem(0xd297, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0xe9e8, gbc.sp());
        EXPECT(0xd299, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd297));
        EXPECT(0xc7, gbc.readMem(0xd298));
        // CB C7 011E
        gbc.setState(0x6b1e, 0x55ad, 0x26f0, 0x786, 0x984, 0xcb34, 0x0, 0x1);
        gbc.writeMem(0x6b1e, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x55ad, gbc.sp());
        EXPECT(0x6b20, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C7 011F
        gbc.setState(0xa259, 0xa145, 0x4350, 0x9393, 0x9f61, 0x6d7e, 0x1, 0x0);
        gbc.writeMem(0xa259, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0xa145, gbc.sp());
        EXPECT(0xa25b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa259));
        EXPECT(0xc7, gbc.readMem(0xa25a));
        // CB C7 0120
        gbc.setState(0x1fac, 0xcf09, 0x5b50, 0x1d71, 0xe274, 0x8b35, 0x1, 0x1);
        gbc.writeMem(0x1fac, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0xcf09, gbc.sp());
        EXPECT(0x1fae, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C7 0121
        gbc.setState(0x88ee, 0xc4c0, 0x4c30, 0xe317, 0x2d59, 0xbe40, 0x1, 0x1);
        gbc.writeMem(0x88ee, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0xc4c0, gbc.sp());
        EXPECT(0x88f0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x88ee));
        EXPECT(0xc7, gbc.readMem(0x88ef));
        // CB C7 0122
        gbc.setState(0xc66c, 0xf64e, 0x9650, 0x388d, 0xb762, 0x81a, 0x1, 0x1);
        gbc.writeMem(0xc66c, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0xf64e, gbc.sp());
        EXPECT(0xc66e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc66c));
        EXPECT(0xc7, gbc.readMem(0xc66d));
        // CB C7 0123
        gbc.setState(0x9b84, 0x239c, 0xf8a0, 0x180, 0x6571, 0x692, 0x0, 0x0);
        gbc.writeMem(0x9b84, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x239c, gbc.sp());
        EXPECT(0x9b86, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9b84));
        EXPECT(0xc7, gbc.readMem(0x9b85));
        // CB C7 0124
        gbc.setState(0x4b1b, 0x8b9d, 0xa50, 0xff4c, 0xea65, 0xe298, 0x1, 0x1);
        gbc.writeMem(0x4b1b, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x8b9d, gbc.sp());
        EXPECT(0x4b1d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C7 0125
        gbc.setState(0xe25b, 0x8606, 0x83b0, 0xe53d, 0x1388, 0xabc3, 0x1, 0x1);
        gbc.writeMem(0xe25b, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x8606, gbc.sp());
        EXPECT(0xe25d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe25b));
        EXPECT(0xc7, gbc.readMem(0xe25c));
        // CB C7 0126
        gbc.setState(0xc806, 0xd3d7, 0x8b90, 0xf214, 0x478f, 0x6119, 0x0, 0x1);
        gbc.writeMem(0xc806, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0xd3d7, gbc.sp());
        EXPECT(0xc808, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc806));
        EXPECT(0xc7, gbc.readMem(0xc807));
        // CB C7 0127
        gbc.setState(0x8f80, 0xca28, 0xd120, 0x90a7, 0x9071, 0xcccc, 0x1, 0x0);
        gbc.writeMem(0x8f80, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0xca28, gbc.sp());
        EXPECT(0x8f82, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8f80));
        EXPECT(0xc7, gbc.readMem(0x8f81));
        // CB C7 0128
        gbc.setState(0xedb1, 0x1338, 0x9690, 0xf414, 0x901d, 0x37f4, 0x0, 0x0);
        gbc.writeMem(0xedb1, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x1338, gbc.sp());
        EXPECT(0xedb3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xedb1));
        EXPECT(0xc7, gbc.readMem(0xedb2));
        // CB C7 0129
        gbc.setState(0x5f38, 0xd7ab, 0x8290, 0x64bb, 0x68a9, 0x974d, 0x1, 0x0);
        gbc.writeMem(0x5f38, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0xd7ab, gbc.sp());
        EXPECT(0x5f3a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C7 012A
        gbc.setState(0x7423, 0xb66, 0x10a0, 0xc598, 0xcb96, 0xce3, 0x1, 0x1);
        gbc.writeMem(0x7423, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0xb66, gbc.sp());
        EXPECT(0x7425, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C7 012B
        gbc.setState(0xe46c, 0x8837, 0xec20, 0xc630, 0x4534, 0x691b, 0x1, 0x0);
        gbc.writeMem(0xe46c, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x8837, gbc.sp());
        EXPECT(0xe46e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe46c));
        EXPECT(0xc7, gbc.readMem(0xe46d));
        // CB C7 012C
        gbc.setState(0x8862, 0x6cff, 0x17e0, 0x433c, 0xa0c2, 0xae2, 0x1, 0x1);
        gbc.writeMem(0x8862, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x6cff, gbc.sp());
        EXPECT(0x8864, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8862));
        EXPECT(0xc7, gbc.readMem(0x8863));
        // CB C7 012E
        gbc.setState(0xbbfb, 0x9a7d, 0x1a90, 0xe177, 0x54e7, 0x1d10, 0x1, 0x1);
        gbc.writeMem(0xbbfb, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x9a7d, gbc.sp());
        EXPECT(0xbbfd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbbfb));
        EXPECT(0xc7, gbc.readMem(0xbbfc));
        // CB C7 012F
        gbc.setState(0xc9b, 0xc5e5, 0x83f0, 0x43bc, 0x14e3, 0xc774, 0x0, 0x0);
        gbc.writeMem(0xc9b, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0xc5e5, gbc.sp());
        EXPECT(0xc9d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C7 0130
        gbc.setState(0x85c7, 0x999d, 0xd260, 0x7dd4, 0x2172, 0x9b68, 0x0, 0x0);
        gbc.writeMem(0x85c7, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x999d, gbc.sp());
        EXPECT(0x85c9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x85c7));
        EXPECT(0xc7, gbc.readMem(0x85c8));
        // CB C7 0131
        gbc.setState(0x78a9, 0xe26a, 0x8b30, 0x7c1c, 0xc3d3, 0x51e0, 0x0, 0x1);
        gbc.writeMem(0x78a9, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0xe26a, gbc.sp());
        EXPECT(0x78ab, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C7 0132
        gbc.setState(0x25f9, 0x885c, 0x1ee0, 0xa1e5, 0xcb2c, 0xe3cb, 0x0, 0x1);
        gbc.writeMem(0x25f9, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x885c, gbc.sp());
        EXPECT(0x25fb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C7 0133
        gbc.setState(0xa2bb, 0x73f8, 0x7f30, 0xe50b, 0xaf1d, 0x88fc, 0x0, 0x1);
        gbc.writeMem(0xa2bb, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x73f8, gbc.sp());
        EXPECT(0xa2bd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa2bb));
        EXPECT(0xc7, gbc.readMem(0xa2bc));
        // CB C7 0134
        gbc.setState(0x42f7, 0x92b0, 0x7c0, 0x249b, 0x7d1d, 0xfe98, 0x1, 0x1);
        gbc.writeMem(0x42f7, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x92b0, gbc.sp());
        EXPECT(0x42f9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C7 0135
        gbc.setState(0x1102, 0x2388, 0x8590, 0x8492, 0xd856, 0xf962, 0x1, 0x1);
        gbc.writeMem(0x1102, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x2388, gbc.sp());
        EXPECT(0x1104, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C7 0136
        gbc.setState(0xd664, 0x39fc, 0x8e40, 0x22a5, 0x6b49, 0x144f, 0x1, 0x1);
        gbc.writeMem(0xd664, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x39fc, gbc.sp());
        EXPECT(0xd666, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd664));
        EXPECT(0xc7, gbc.readMem(0xd665));
        // CB C7 0137
        gbc.setState(0xdf71, 0x5d99, 0x8f90, 0x9bef, 0x1f1a, 0x9fd7, 0x0, 0x1);
        gbc.writeMem(0xdf71, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0x5d99, gbc.sp());
        EXPECT(0xdf73, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdf71));
        EXPECT(0xc7, gbc.readMem(0xdf72));
        // CB C7 0138
        gbc.setState(0x1e06, 0x4847, 0xc30, 0x5b46, 0xef29, 0x52ed, 0x1, 0x1);
        gbc.writeMem(0x1e06, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x4847, gbc.sp());
        EXPECT(0x1e08, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C7 0139
        gbc.setState(0xe571, 0xd781, 0x4740, 0x276d, 0xa36b, 0x5f4d, 0x1, 0x0);
        gbc.writeMem(0xe571, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0xd781, gbc.sp());
        EXPECT(0xe573, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe571));
        EXPECT(0xc7, gbc.readMem(0xe572));
        // CB C7 013A
        gbc.setState(0x43c, 0xb219, 0xf5e0, 0xc66, 0xb5e0, 0x82, 0x1, 0x0);
        gbc.writeMem(0x43c, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0xb219, gbc.sp());
        EXPECT(0x43e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C7 013B
        gbc.setState(0xbe67, 0x5507, 0x7780, 0xd815, 0x7877, 0xc4b7, 0x1, 0x0);
        gbc.writeMem(0xbe67, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x5507, gbc.sp());
        EXPECT(0xbe69, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbe67));
        EXPECT(0xc7, gbc.readMem(0xbe68));
        // CB C7 013C
        gbc.setState(0x2998, 0x2f5b, 0x7310, 0xf81b, 0xcb29, 0x8917, 0x0, 0x1);
        gbc.writeMem(0x2998, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x2f5b, gbc.sp());
        EXPECT(0x299a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C7 013D
        gbc.setState(0xe895, 0x77b1, 0xe220, 0xdff1, 0x1201, 0xca64, 0x0, 0x0);
        gbc.writeMem(0xe895, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x77b1, gbc.sp());
        EXPECT(0xe897, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe895));
        EXPECT(0xc7, gbc.readMem(0xe896));
        // CB C7 013E
        gbc.setState(0x8dc4, 0xbb4, 0x8570, 0x513a, 0xbff6, 0xd42e, 0x0, 0x1);
        gbc.writeMem(0x8dc4, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0xbb4, gbc.sp());
        EXPECT(0x8dc6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8dc4));
        EXPECT(0xc7, gbc.readMem(0x8dc5));
        // CB C7 013F
        gbc.setState(0x6b26, 0xd43, 0x4210, 0x5c53, 0x137e, 0xf0df, 0x0, 0x1);
        gbc.writeMem(0x6b26, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0xd43, gbc.sp());
        EXPECT(0x6b28, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C7 0140
        gbc.setState(0xbcf5, 0xdd8a, 0x20f0, 0x50c, 0x563c, 0x995d, 0x1, 0x1);
        gbc.writeMem(0xbcf5, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0xdd8a, gbc.sp());
        EXPECT(0xbcf7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbcf5));
        EXPECT(0xc7, gbc.readMem(0xbcf6));
        // CB C7 0141
        gbc.setState(0x9e2f, 0x1deb, 0x10c0, 0xf84, 0xbaf6, 0x127b, 0x1, 0x0);
        gbc.writeMem(0x9e2f, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x1deb, gbc.sp());
        EXPECT(0x9e31, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9e2f));
        EXPECT(0xc7, gbc.readMem(0x9e30));
        // CB C7 0142
        gbc.setState(0x25bb, 0x98a3, 0xd00, 0xfa8e, 0x1e9f, 0xaca5, 0x1, 0x1);
        gbc.writeMem(0x25bb, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x98a3, gbc.sp());
        EXPECT(0x25bd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C7 0143
        gbc.setState(0x368a, 0x9827, 0xdb00, 0x4b67, 0xbf7d, 0x3f9c, 0x1, 0x1);
        gbc.writeMem(0x368a, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x9827, gbc.sp());
        EXPECT(0x368c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C7 0144
        gbc.setState(0x51a0, 0x252d, 0xa270, 0x18f7, 0xd23d, 0x311b, 0x0, 0x0);
        gbc.writeMem(0x51a0, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x252d, gbc.sp());
        EXPECT(0x51a2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C7 0145
        gbc.setState(0x1fd3, 0x272d, 0xc260, 0xed7, 0x47e3, 0xa34e, 0x0, 0x0);
        gbc.writeMem(0x1fd3, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x272d, gbc.sp());
        EXPECT(0x1fd5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C7 0146
        gbc.setState(0x11cf, 0x9a39, 0x5290, 0x1f70, 0x617e, 0x6158, 0x1, 0x0);
        gbc.writeMem(0x11cf, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x9a39, gbc.sp());
        EXPECT(0x11d1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C7 0148
        gbc.setState(0xdf7c, 0x4923, 0xe990, 0xc484, 0xd954, 0xea06, 0x0, 0x1);
        gbc.writeMem(0xdf7c, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x4923, gbc.sp());
        EXPECT(0xdf7e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdf7c));
        EXPECT(0xc7, gbc.readMem(0xdf7d));
        // CB C7 0149
        gbc.setState(0x447e, 0x3391, 0x91d0, 0x44f6, 0x9fb9, 0x8f09, 0x0, 0x1);
        gbc.writeMem(0x447e, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x3391, gbc.sp());
        EXPECT(0x4480, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C7 014A
        gbc.setState(0x4cff, 0x57d1, 0x5c70, 0x2444, 0xdbc8, 0xa6e3, 0x1, 0x0);
        gbc.writeMem(0x4cff, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x57d1, gbc.sp());
        EXPECT(0x4d01, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C7 014B
        gbc.setState(0x4f25, 0x8e2b, 0xd920, 0xc53d, 0x778e, 0x5ac9, 0x0, 0x0);
        gbc.writeMem(0x4f25, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x8e2b, gbc.sp());
        EXPECT(0x4f27, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C7 014C
        gbc.setState(0x39a0, 0xeb93, 0x45a0, 0x9627, 0xee0b, 0x9105, 0x1, 0x0);
        gbc.writeMem(0x39a0, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0xeb93, gbc.sp());
        EXPECT(0x39a2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C7 014D
        gbc.setState(0xcdd0, 0xc40e, 0x3970, 0x776f, 0x3371, 0x92d5, 0x0, 0x0);
        gbc.writeMem(0xcdd0, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0xc40e, gbc.sp());
        EXPECT(0xcdd2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcdd0));
        EXPECT(0xc7, gbc.readMem(0xcdd1));
        // CB C7 014E
        gbc.setState(0xe8b, 0x65d5, 0x1100, 0x903b, 0xea1b, 0xe2ad, 0x0, 0x1);
        gbc.writeMem(0xe8b, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x65d5, gbc.sp());
        EXPECT(0xe8d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C7 014F
        gbc.setState(0xa66, 0xc7c1, 0x3f0, 0x2208, 0x99ca, 0x4367, 0x1, 0x0);
        gbc.writeMem(0xa66, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0xc7c1, gbc.sp());
        EXPECT(0xa68, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C7 0150
        gbc.setState(0x83d2, 0xcf9d, 0xe3a0, 0x4d2e, 0xa87e, 0x30f2, 0x1, 0x0);
        gbc.writeMem(0x83d2, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0xcf9d, gbc.sp());
        EXPECT(0x83d4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x83d2));
        EXPECT(0xc7, gbc.readMem(0x83d3));
        // CB C7 0151
        gbc.setState(0x7936, 0x99e0, 0x5530, 0xc28a, 0x811, 0xc89d, 0x0, 0x0);
        gbc.writeMem(0x7936, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x99e0, gbc.sp());
        EXPECT(0x7938, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C7 0152
        gbc.setState(0x84c9, 0xd620, 0x2a70, 0x7f25, 0x6748, 0x20d, 0x0, 0x0);
        gbc.writeMem(0x84c9, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0xd620, gbc.sp());
        EXPECT(0x84cb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x84c9));
        EXPECT(0xc7, gbc.readMem(0x84ca));
        // CB C7 0153
        gbc.setState(0x98aa, 0x4883, 0xb690, 0x86f8, 0x8a9c, 0x25e3, 0x0, 0x1);
        gbc.writeMem(0x98aa, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x4883, gbc.sp());
        EXPECT(0x98ac, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x98aa));
        EXPECT(0xc7, gbc.readMem(0x98ab));
        // CB C7 0154
        gbc.setState(0x1612, 0xb326, 0xa060, 0xb798, 0x3faf, 0x703d, 0x1, 0x1);
        gbc.writeMem(0x1612, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0xb326, gbc.sp());
        EXPECT(0x1614, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C7 0155
        gbc.setState(0xed2f, 0x125b, 0xfaf0, 0x17e2, 0xfd6f, 0xb980, 0x1, 0x1);
        gbc.writeMem(0xed2f, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x125b, gbc.sp());
        EXPECT(0xed31, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xed2f));
        EXPECT(0xc7, gbc.readMem(0xed30));
        // CB C7 0157
        gbc.setState(0x2a5e, 0xa4a0, 0xf320, 0xe908, 0x3766, 0xc218, 0x0, 0x1);
        gbc.writeMem(0x2a5e, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0xa4a0, gbc.sp());
        EXPECT(0x2a60, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C7 0158
        gbc.setState(0xb1bb, 0xe3a7, 0x3600, 0xf6ac, 0x1f7b, 0xc07f, 0x1, 0x1);
        gbc.writeMem(0xb1bb, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0xe3a7, gbc.sp());
        EXPECT(0xb1bd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb1bb));
        EXPECT(0xc7, gbc.readMem(0xb1bc));
        // CB C7 0159
        gbc.setState(0xdf44, 0x564d, 0x5a90, 0x17d9, 0xd0f, 0xe12, 0x0, 0x1);
        gbc.writeMem(0xdf44, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x564d, gbc.sp());
        EXPECT(0xdf46, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdf44));
        EXPECT(0xc7, gbc.readMem(0xdf45));
        // CB C7 015A
        gbc.setState(0xc968, 0x1f75, 0xdb0, 0x9fed, 0xa56f, 0x3ee7, 0x1, 0x0);
        gbc.writeMem(0xc968, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x1f75, gbc.sp());
        EXPECT(0xc96a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc968));
        EXPECT(0xc7, gbc.readMem(0xc969));
        // CB C7 015B
        gbc.setState(0xc802, 0x5fd0, 0xa990, 0xb862, 0x17f0, 0x52a8, 0x0, 0x0);
        gbc.writeMem(0xc802, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x5fd0, gbc.sp());
        EXPECT(0xc804, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc802));
        EXPECT(0xc7, gbc.readMem(0xc803));
        // CB C7 015C
        gbc.setState(0x12b8, 0xb5b8, 0x2190, 0x4556, 0x2886, 0x8668, 0x0, 0x0);
        gbc.writeMem(0x12b8, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0xb5b8, gbc.sp());
        EXPECT(0x12ba, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C7 015E
        gbc.setState(0x2ac7, 0xb10c, 0xcc70, 0xed67, 0xa9bc, 0x360f, 0x1, 0x1);
        gbc.writeMem(0x2ac7, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0xb10c, gbc.sp());
        EXPECT(0x2ac9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C7 015F
        gbc.setState(0xd62, 0x24f0, 0x770, 0x702d, 0xda5e, 0x9f82, 0x1, 0x1);
        gbc.writeMem(0xd62, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x24f0, gbc.sp());
        EXPECT(0xd64, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C7 0161
        gbc.setState(0x51e, 0x16b9, 0xa4d0, 0x559, 0x7bdd, 0x86c0, 0x0, 0x1);
        gbc.writeMem(0x51e, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x16b9, gbc.sp());
        EXPECT(0x520, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C7 0162
        gbc.setState(0xc87a, 0xdb65, 0x4b80, 0xd37b, 0x2956, 0x87b, 0x1, 0x0);
        gbc.writeMem(0xc87a, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0xdb65, gbc.sp());
        EXPECT(0xc87c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc87a));
        EXPECT(0xc7, gbc.readMem(0xc87b));
        // CB C7 0163
        gbc.setState(0x2cca, 0xccc7, 0xeb40, 0x299, 0x517f, 0x314e, 0x0, 0x1);
        gbc.writeMem(0x2cca, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0xccc7, gbc.sp());
        EXPECT(0x2ccc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C7 0164
        gbc.setState(0x5236, 0x2986, 0x75e0, 0x130b, 0xdb4f, 0xa65e, 0x0, 0x1);
        gbc.writeMem(0x5236, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x2986, gbc.sp());
        EXPECT(0x5238, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C7 0165
        gbc.setState(0x89d7, 0xc9ab, 0x8d10, 0x74e8, 0x8d64, 0xdd3, 0x0, 0x0);
        gbc.writeMem(0x89d7, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0xc9ab, gbc.sp());
        EXPECT(0x89d9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x89d7));
        EXPECT(0xc7, gbc.readMem(0x89d8));
        // CB C7 0166
        gbc.setState(0x3696, 0x32d8, 0x6480, 0xa7e9, 0x284f, 0xa689, 0x0, 0x1);
        gbc.writeMem(0x3696, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x32d8, gbc.sp());
        EXPECT(0x3698, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C7 0167
        gbc.setState(0xcfaf, 0x9826, 0x9f50, 0xeaf2, 0x22c0, 0x2c49, 0x0, 0x0);
        gbc.writeMem(0xcfaf, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x9826, gbc.sp());
        EXPECT(0xcfb1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcfaf));
        EXPECT(0xc7, gbc.readMem(0xcfb0));
        // CB C7 0168
        gbc.setState(0x1789, 0xfe06, 0x7760, 0x28cd, 0x68bc, 0x8784, 0x1, 0x1);
        gbc.writeMem(0x1789, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0xfe06, gbc.sp());
        EXPECT(0x178b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C7 0169
        gbc.setState(0x11ab, 0x6f8, 0xd1d0, 0x1785, 0x2637, 0x62a1, 0x1, 0x0);
        gbc.writeMem(0x11ab, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x6f8, gbc.sp());
        EXPECT(0x11ad, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C7 016A
        gbc.setState(0x1bc9, 0x91b5, 0xf560, 0x966a, 0xec88, 0x48ae, 0x1, 0x1);
        gbc.writeMem(0x1bc9, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0x91b5, gbc.sp());
        EXPECT(0x1bcb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C7 016B
        gbc.setState(0x26c0, 0x616c, 0xb900, 0xd2c1, 0x5a5c, 0x1534, 0x0, 0x0);
        gbc.writeMem(0x26c0, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x616c, gbc.sp());
        EXPECT(0x26c2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C7 016C
        gbc.setState(0xea05, 0x3c2e, 0x26a0, 0x155f, 0x87d0, 0x96d9, 0x0, 0x1);
        gbc.writeMem(0xea05, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x3c2e, gbc.sp());
        EXPECT(0xea07, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xea05));
        EXPECT(0xc7, gbc.readMem(0xea06));
        // CB C7 016D
        gbc.setState(0xea62, 0x62aa, 0xcac0, 0xe999, 0x91fd, 0x1e4f, 0x1, 0x0);
        gbc.writeMem(0xea62, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x62aa, gbc.sp());
        EXPECT(0xea64, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xea62));
        EXPECT(0xc7, gbc.readMem(0xea63));
        // CB C7 016F
        gbc.setState(0x2e08, 0xcb2c, 0xb0d0, 0xf353, 0xf4c3, 0x395d, 0x1, 0x0);
        gbc.writeMem(0x2e08, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0xcb2c, gbc.sp());
        EXPECT(0x2e0a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C7 0170
        gbc.setState(0x6bc5, 0xea4a, 0xc7f0, 0x9a92, 0xe1e9, 0x54a2, 0x1, 0x1);
        gbc.writeMem(0x6bc5, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0xea4a, gbc.sp());
        EXPECT(0x6bc7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C7 0171
        gbc.setState(0xee79, 0xa915, 0x1d0, 0xdc2d, 0x1f2c, 0x2905, 0x0, 0x0);
        gbc.writeMem(0xee79, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0xa915, gbc.sp());
        EXPECT(0xee7b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xee79));
        EXPECT(0xc7, gbc.readMem(0xee7a));
        // CB C7 0172
        gbc.setState(0x6b3e, 0x7df8, 0xcf80, 0x6f72, 0x9b26, 0x704, 0x0, 0x0);
        gbc.writeMem(0x6b3e, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x7df8, gbc.sp());
        EXPECT(0x6b40, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C7 0173
        gbc.setState(0x3f91, 0x63a6, 0x8f20, 0x5357, 0xb2aa, 0xdd6d, 0x0, 0x1);
        gbc.writeMem(0x3f91, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x63a6, gbc.sp());
        EXPECT(0x3f93, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C7 0174
        gbc.setState(0x62ab, 0x3c80, 0x42a0, 0xa95d, 0xd486, 0x970, 0x0, 0x0);
        gbc.writeMem(0x62ab, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x3c80, gbc.sp());
        EXPECT(0x62ad, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C7 0175
        gbc.setState(0xa85d, 0xab53, 0x8a00, 0x2bcc, 0x8c2b, 0xf9f5, 0x1, 0x1);
        gbc.writeMem(0xa85d, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0xab53, gbc.sp());
        EXPECT(0xa85f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa85d));
        EXPECT(0xc7, gbc.readMem(0xa85e));
        // CB C7 0176
        gbc.setState(0x3cbc, 0x4707, 0xb540, 0xf1ae, 0x1996, 0xe2f5, 0x1, 0x0);
        gbc.writeMem(0x3cbc, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x4707, gbc.sp());
        EXPECT(0x3cbe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C7 0178
        gbc.setState(0x4a2d, 0x5b73, 0x1c70, 0x6bca, 0x1652, 0xeb2c, 0x1, 0x0);
        gbc.writeMem(0x4a2d, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x5b73, gbc.sp());
        EXPECT(0x4a2f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C7 0179
        gbc.setState(0xb728, 0xefae, 0x7390, 0x5657, 0x2b2f, 0xcc41, 0x1, 0x1);
        gbc.writeMem(0xb728, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0xefae, gbc.sp());
        EXPECT(0xb72a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb728));
        EXPECT(0xc7, gbc.readMem(0xb729));
        // CB C7 017A
        gbc.setState(0x8f23, 0x543d, 0x63e0, 0xe604, 0x311a, 0xb8da, 0x1, 0x0);
        gbc.writeMem(0x8f23, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x543d, gbc.sp());
        EXPECT(0x8f25, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8f23));
        EXPECT(0xc7, gbc.readMem(0x8f24));
        // CB C7 017C
        gbc.setState(0xab2d, 0x3430, 0x10b0, 0x3d17, 0xb0bd, 0xf61b, 0x0, 0x1);
        gbc.writeMem(0xab2d, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x3430, gbc.sp());
        EXPECT(0xab2f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xab2d));
        EXPECT(0xc7, gbc.readMem(0xab2e));
        // CB C7 017D
        gbc.setState(0x7629, 0xf2a0, 0x3910, 0x11be, 0x1ebb, 0xbda5, 0x0, 0x0);
        gbc.writeMem(0x7629, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0xf2a0, gbc.sp());
        EXPECT(0x762b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C7 017F
        gbc.setState(0x8d00, 0xbe25, 0xb490, 0x4080, 0x154c, 0x4d4, 0x0, 0x0);
        gbc.writeMem(0x8d00, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0xbe25, gbc.sp());
        EXPECT(0x8d02, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8d00));
        EXPECT(0xc7, gbc.readMem(0x8d01));
        // CB C7 0180
        gbc.setState(0x4c69, 0x4aaa, 0x6cb0, 0x14b7, 0x5da1, 0x2838, 0x1, 0x0);
        gbc.writeMem(0x4c69, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x4aaa, gbc.sp());
        EXPECT(0x4c6b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C7 0181
        gbc.setState(0xa961, 0xcf2, 0x4dc0, 0xb5dd, 0x1377, 0xf91f, 0x0, 0x0);
        gbc.writeMem(0xa961, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0xcf2, gbc.sp());
        EXPECT(0xa963, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa961));
        EXPECT(0xc7, gbc.readMem(0xa962));
        // CB C7 0182
        gbc.setState(0x47de, 0x5009, 0x24f0, 0xc0a7, 0x9f3e, 0x637d, 0x0, 0x1);
        gbc.writeMem(0x47de, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x5009, gbc.sp());
        EXPECT(0x47e0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C7 0183
        gbc.setState(0x87eb, 0xd4b0, 0xe9e0, 0x67ee, 0x3a0d, 0xdec3, 0x0, 0x1);
        gbc.writeMem(0x87eb, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0xd4b0, gbc.sp());
        EXPECT(0x87ed, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x87eb));
        EXPECT(0xc7, gbc.readMem(0x87ec));
        // CB C7 0184
        gbc.setState(0x971e, 0xb559, 0x3800, 0x7512, 0x67b7, 0x396d, 0x1, 0x1);
        gbc.writeMem(0x971e, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0xb559, gbc.sp());
        EXPECT(0x9720, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x971e));
        EXPECT(0xc7, gbc.readMem(0x971f));
        // CB C7 0185
        gbc.setState(0x138b, 0x7c7a, 0x4d80, 0xb163, 0x5bf6, 0xca3f, 0x1, 0x0);
        gbc.writeMem(0x138b, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0x7c7a, gbc.sp());
        EXPECT(0x138d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C7 0186
        gbc.setState(0xa536, 0x9b30, 0xc0d0, 0x9a1c, 0x6abb, 0x7475, 0x0, 0x1);
        gbc.writeMem(0xa536, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x9b30, gbc.sp());
        EXPECT(0xa538, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa536));
        EXPECT(0xc7, gbc.readMem(0xa537));
        // CB C7 0187
        gbc.setState(0x8462, 0x75a8, 0x5e20, 0xdebc, 0x9137, 0x822e, 0x0, 0x0);
        gbc.writeMem(0x8462, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x75a8, gbc.sp());
        EXPECT(0x8464, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8462));
        EXPECT(0xc7, gbc.readMem(0x8463));
        // CB C7 0188
        gbc.setState(0x7708, 0x3bc1, 0xe240, 0xece5, 0x797, 0xd2b1, 0x1, 0x0);
        gbc.writeMem(0x7708, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x3bc1, gbc.sp());
        EXPECT(0x770a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C7 018A
        gbc.setState(0xc789, 0x4e1d, 0x6b90, 0x28b8, 0xd08f, 0xe025, 0x1, 0x1);
        gbc.writeMem(0xc789, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x4e1d, gbc.sp());
        EXPECT(0xc78b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc789));
        EXPECT(0xc7, gbc.readMem(0xc78a));
        // CB C7 018B
        gbc.setState(0xa1b7, 0x1cf7, 0x7310, 0xd324, 0xdf92, 0x9585, 0x1, 0x1);
        gbc.writeMem(0xa1b7, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x1cf7, gbc.sp());
        EXPECT(0xa1b9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa1b7));
        EXPECT(0xc7, gbc.readMem(0xa1b8));
        // CB C7 018C
        gbc.setState(0x5a25, 0x2829, 0x6600, 0x89b9, 0x560e, 0x89bb, 0x0, 0x0);
        gbc.writeMem(0x5a25, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x2829, gbc.sp());
        EXPECT(0x5a27, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C7 018D
        gbc.setState(0x4bd9, 0x1a9a, 0x6c70, 0x69d1, 0x476, 0xd64c, 0x0, 0x0);
        gbc.writeMem(0x4bd9, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x1a9a, gbc.sp());
        EXPECT(0x4bdb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C7 018E
        gbc.setState(0xed78, 0x2d90, 0x3970, 0x21d3, 0xa381, 0x914a, 0x0, 0x1);
        gbc.writeMem(0xed78, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x2d90, gbc.sp());
        EXPECT(0xed7a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xed78));
        EXPECT(0xc7, gbc.readMem(0xed79));
        // CB C7 018F
        gbc.setState(0xde95, 0xb41c, 0x940, 0x3cd2, 0x44c3, 0x9b3f, 0x0, 0x1);
        gbc.writeMem(0xde95, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0xb41c, gbc.sp());
        EXPECT(0xde97, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xde95));
        EXPECT(0xc7, gbc.readMem(0xde96));
        // CB C7 0190
        gbc.setState(0xbba5, 0xe72c, 0x9680, 0x40fe, 0x8369, 0x746f, 0x0, 0x0);
        gbc.writeMem(0xbba5, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0xe72c, gbc.sp());
        EXPECT(0xbba7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbba5));
        EXPECT(0xc7, gbc.readMem(0xbba6));
        // CB C7 0191
        gbc.setState(0xc99e, 0xcf57, 0x3d80, 0xccae, 0x7655, 0xf7ac, 0x0, 0x0);
        gbc.writeMem(0xc99e, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0xcf57, gbc.sp());
        EXPECT(0xc9a0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc99e));
        EXPECT(0xc7, gbc.readMem(0xc99f));
        // CB C7 0192
        gbc.setState(0x24e0, 0xdc51, 0x3a40, 0xd052, 0x95e5, 0x221e, 0x1, 0x1);
        gbc.writeMem(0x24e0, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0xdc51, gbc.sp());
        EXPECT(0x24e2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C7 0193
        gbc.setState(0xb32d, 0xe395, 0x54f0, 0xad93, 0xcad4, 0xc20e, 0x1, 0x1);
        gbc.writeMem(0xb32d, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0xe395, gbc.sp());
        EXPECT(0xb32f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb32d));
        EXPECT(0xc7, gbc.readMem(0xb32e));
        // CB C7 0194
        gbc.setState(0x7856, 0x2ed9, 0x9760, 0x37c9, 0x4b83, 0xbc5d, 0x0, 0x1);
        gbc.writeMem(0x7856, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x2ed9, gbc.sp());
        EXPECT(0x7858, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C7 0195
        gbc.setState(0x38d1, 0x238, 0x2440, 0x3a02, 0xd1c0, 0x4977, 0x0, 0x0);
        gbc.writeMem(0x38d1, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x238, gbc.sp());
        EXPECT(0x38d3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C7 0196
        gbc.setState(0x4665, 0x82fd, 0x84f0, 0x85fa, 0x68b3, 0x2c68, 0x1, 0x0);
        gbc.writeMem(0x4665, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x82fd, gbc.sp());
        EXPECT(0x4667, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C7 0197
        gbc.setState(0xa6b1, 0x696, 0x810, 0x4039, 0x111f, 0xe15b, 0x1, 0x1);
        gbc.writeMem(0xa6b1, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x696, gbc.sp());
        EXPECT(0xa6b3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa6b1));
        EXPECT(0xc7, gbc.readMem(0xa6b2));
        // CB C7 0198
        gbc.setState(0xc252, 0xfb37, 0x210, 0xbc4a, 0xf50, 0xd17b, 0x1, 0x0);
        gbc.writeMem(0xc252, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0xfb37, gbc.sp());
        EXPECT(0xc254, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc252));
        EXPECT(0xc7, gbc.readMem(0xc253));
        // CB C7 0199
        gbc.setState(0x7f31, 0x255c, 0x27f0, 0xebe4, 0xd059, 0x90fb, 0x1, 0x1);
        gbc.writeMem(0x7f31, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x255c, gbc.sp());
        EXPECT(0x7f33, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C7 019A
        gbc.setState(0xce, 0x1035, 0xb2e0, 0x2a62, 0x437c, 0xd130, 0x0, 0x1);
        gbc.writeMem(0xce, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x1035, gbc.sp());
        EXPECT(0xd0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C7 019B
        gbc.setState(0xa2c1, 0x583c, 0x1ed0, 0x32d9, 0x1591, 0x59ea, 0x1, 0x1);
        gbc.writeMem(0xa2c1, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x583c, gbc.sp());
        EXPECT(0xa2c3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa2c1));
        EXPECT(0xc7, gbc.readMem(0xa2c2));
        // CB C7 019C
        gbc.setState(0x774c, 0x5180, 0xa280, 0x60f4, 0xc597, 0xd3c2, 0x1, 0x1);
        gbc.writeMem(0x774c, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x5180, gbc.sp());
        EXPECT(0x774e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C7 019D
        gbc.setState(0xe976, 0x2aad, 0xcf10, 0xf46f, 0x1137, 0xd38e, 0x0, 0x0);
        gbc.writeMem(0xe976, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x2aad, gbc.sp());
        EXPECT(0xe978, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe976));
        EXPECT(0xc7, gbc.readMem(0xe977));
        // CB C7 019E
        gbc.setState(0x7848, 0xde8c, 0xb1e0, 0x408, 0x77b9, 0xd5b0, 0x0, 0x1);
        gbc.writeMem(0x7848, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0xde8c, gbc.sp());
        EXPECT(0x784a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C7 019F
        gbc.setState(0xeed5, 0xe887, 0x9900, 0x405c, 0x8eaf, 0xf3ee, 0x1, 0x1);
        gbc.writeMem(0xeed5, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0xe887, gbc.sp());
        EXPECT(0xeed7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeed5));
        EXPECT(0xc7, gbc.readMem(0xeed6));
        // CB C7 01A0
        gbc.setState(0x6a3e, 0x8935, 0x86d0, 0xe2cd, 0xc4d8, 0x5b9, 0x0, 0x1);
        gbc.writeMem(0x6a3e, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x8935, gbc.sp());
        EXPECT(0x6a40, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C7 01A1
        gbc.setState(0x5ab0, 0x3f5a, 0xa5d0, 0xcf0a, 0x1c7c, 0x5bf, 0x0, 0x1);
        gbc.writeMem(0x5ab0, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x3f5a, gbc.sp());
        EXPECT(0x5ab2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C7 01A2
        gbc.setState(0xafb9, 0x2f6f, 0xf460, 0x119f, 0x448f, 0x1f6b, 0x1, 0x0);
        gbc.writeMem(0xafb9, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x2f6f, gbc.sp());
        EXPECT(0xafbb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xafb9));
        EXPECT(0xc7, gbc.readMem(0xafba));
        // CB C7 01A4
        gbc.setState(0x78ad, 0x551, 0x88a0, 0x2784, 0x5d4, 0xdc35, 0x1, 0x0);
        gbc.writeMem(0x78ad, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x551, gbc.sp());
        EXPECT(0x78af, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C7 01A5
        gbc.setState(0xc3b, 0x25c6, 0x5e30, 0x5fa0, 0x8344, 0x48ab, 0x1, 0x1);
        gbc.writeMem(0xc3b, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x25c6, gbc.sp());
        EXPECT(0xc3d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C7 01A6
        gbc.setState(0xd3d0, 0x8974, 0x41b0, 0xc85a, 0x9524, 0x48c1, 0x0, 0x1);
        gbc.writeMem(0xd3d0, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x8974, gbc.sp());
        EXPECT(0xd3d2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd3d0));
        EXPECT(0xc7, gbc.readMem(0xd3d1));
        // CB C7 01A7
        gbc.setState(0x6ed3, 0x1fd7, 0x1a30, 0x71be, 0x614c, 0x1048, 0x1, 0x1);
        gbc.writeMem(0x6ed3, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0x1fd7, gbc.sp());
        EXPECT(0x6ed5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C7 01A8
        gbc.setState(0x8f2e, 0x4400, 0x6cf0, 0xb467, 0x2bc1, 0x52a0, 0x0, 0x0);
        gbc.writeMem(0x8f2e, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x4400, gbc.sp());
        EXPECT(0x8f30, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8f2e));
        EXPECT(0xc7, gbc.readMem(0x8f2f));
        // CB C7 01A9
        gbc.setState(0x8e79, 0x2c06, 0x7cb0, 0x7aed, 0x4cf1, 0xe0af, 0x1, 0x1);
        gbc.writeMem(0x8e79, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x2c06, gbc.sp());
        EXPECT(0x8e7b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8e79));
        EXPECT(0xc7, gbc.readMem(0x8e7a));
        // CB C7 01AA
        gbc.setState(0xd154, 0x369c, 0xc2a0, 0xf101, 0xb51f, 0x4e9e, 0x1, 0x0);
        gbc.writeMem(0xd154, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x369c, gbc.sp());
        EXPECT(0xd156, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd154));
        EXPECT(0xc7, gbc.readMem(0xd155));
        // CB C7 01AB
        gbc.setState(0x5a8f, 0x6a7d, 0xc150, 0xde2c, 0x347d, 0x718, 0x1, 0x1);
        gbc.writeMem(0x5a8f, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x6a7d, gbc.sp());
        EXPECT(0x5a91, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C7 01AC
        gbc.setState(0x1095, 0xf742, 0x640, 0x234, 0x99f6, 0x9921, 0x0, 0x1);
        gbc.writeMem(0x1095, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0xf742, gbc.sp());
        EXPECT(0x1097, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C7 01AD
        gbc.setState(0xa975, 0x1a00, 0x4990, 0x3834, 0x58c2, 0xf35d, 0x1, 0x0);
        gbc.writeMem(0xa975, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x1a00, gbc.sp());
        EXPECT(0xa977, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa975));
        EXPECT(0xc7, gbc.readMem(0xa976));
        // CB C7 01AE
        gbc.setState(0x9f27, 0x177d, 0xb20, 0xbd6, 0x677d, 0x9a21, 0x1, 0x1);
        gbc.writeMem(0x9f27, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x177d, gbc.sp());
        EXPECT(0x9f29, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9f27));
        EXPECT(0xc7, gbc.readMem(0x9f28));
        // CB C7 01B0
        gbc.setState(0x293b, 0xf677, 0xcdf0, 0xf8e0, 0x14fa, 0x1383, 0x1, 0x1);
        gbc.writeMem(0x293b, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0xf677, gbc.sp());
        EXPECT(0x293d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C7 01B1
        gbc.setState(0x97f0, 0xe415, 0x29f0, 0xf300, 0x67fa, 0x2baa, 0x1, 0x0);
        gbc.writeMem(0x97f0, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0xe415, gbc.sp());
        EXPECT(0x97f2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x97f0));
        EXPECT(0xc7, gbc.readMem(0x97f1));
        // CB C7 01B2
        gbc.setState(0x69f1, 0x22d3, 0xbfd0, 0x48b0, 0x6fb3, 0xe368, 0x0, 0x0);
        gbc.writeMem(0x69f1, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x22d3, gbc.sp());
        EXPECT(0x69f3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C7 01B3
        gbc.setState(0x74dc, 0x4c30, 0xcf90, 0x6a9, 0x8e3e, 0x51d, 0x1, 0x1);
        gbc.writeMem(0x74dc, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x4c30, gbc.sp());
        EXPECT(0x74de, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C7 01B4
        gbc.setState(0x2420, 0x551a, 0xe840, 0xcfc1, 0x5578, 0x731b, 0x1, 0x1);
        gbc.writeMem(0x2420, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x551a, gbc.sp());
        EXPECT(0x2422, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C7 01B5
        gbc.setState(0x8e74, 0x49c5, 0xaba0, 0x2fbc, 0xcdfb, 0x2d8b, 0x0, 0x0);
        gbc.writeMem(0x8e74, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x49c5, gbc.sp());
        EXPECT(0x8e76, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8e74));
        EXPECT(0xc7, gbc.readMem(0x8e75));
        // CB C7 01B6
        gbc.setState(0xa52f, 0x501, 0xbb50, 0x9c3a, 0x6fb3, 0x80c, 0x0, 0x1);
        gbc.writeMem(0xa52f, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x501, gbc.sp());
        EXPECT(0xa531, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa52f));
        EXPECT(0xc7, gbc.readMem(0xa530));
        // CB C7 01B8
        gbc.setState(0xac84, 0xc84d, 0x39e0, 0x3dc, 0x5d20, 0x715e, 0x1, 0x1);
        gbc.writeMem(0xac84, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0xc84d, gbc.sp());
        EXPECT(0xac86, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xac84));
        EXPECT(0xc7, gbc.readMem(0xac85));
        // CB C7 01B9
        gbc.setState(0x665e, 0xc6ec, 0x9ba0, 0xd76a, 0x3b4a, 0xc70c, 0x0, 0x1);
        gbc.writeMem(0x665e, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0xc6ec, gbc.sp());
        EXPECT(0x6660, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C7 01BA
        gbc.setState(0x787, 0xf55, 0x4610, 0x1d97, 0xbf8, 0xc9ee, 0x0, 0x0);
        gbc.writeMem(0x787, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0xf55, gbc.sp());
        EXPECT(0x789, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C7 01BB
        gbc.setState(0x8228, 0x7ef9, 0xdd80, 0x47a9, 0x9cb6, 0x25d, 0x1, 0x0);
        gbc.writeMem(0x8228, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x7ef9, gbc.sp());
        EXPECT(0x822a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8228));
        EXPECT(0xc7, gbc.readMem(0x8229));
        // CB C7 01BD
        gbc.setState(0x8af5, 0x56f6, 0xdd40, 0x4c42, 0x2d3a, 0x4117, 0x1, 0x1);
        gbc.writeMem(0x8af5, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x56f6, gbc.sp());
        EXPECT(0x8af7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8af5));
        EXPECT(0xc7, gbc.readMem(0x8af6));
        // CB C7 01BE
        gbc.setState(0x87ca, 0x229c, 0xa390, 0xb5b6, 0x928b, 0xaadb, 0x1, 0x1);
        gbc.writeMem(0x87ca, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x229c, gbc.sp());
        EXPECT(0x87cc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x87ca));
        EXPECT(0xc7, gbc.readMem(0x87cb));
        // CB C7 01BF
        gbc.setState(0x7178, 0x7ad9, 0xefe0, 0xef23, 0xf460, 0x4d15, 0x1, 0x0);
        gbc.writeMem(0x7178, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x7ad9, gbc.sp());
        EXPECT(0x717a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C7 01C0
        gbc.setState(0x600b, 0x4434, 0xdfd0, 0xafcc, 0xaf3a, 0x7be5, 0x0, 0x1);
        gbc.writeMem(0x600b, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x4434, gbc.sp());
        EXPECT(0x600d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C7 01C1
        gbc.setState(0x6989, 0xafb4, 0x1f80, 0x98ff, 0x31ef, 0xc8c0, 0x1, 0x0);
        gbc.writeMem(0x6989, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0xafb4, gbc.sp());
        EXPECT(0x698b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C7 01C2
        gbc.setState(0x435c, 0xb752, 0x11d0, 0xdf57, 0xe433, 0x52c3, 0x0, 0x0);
        gbc.writeMem(0x435c, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0xb752, gbc.sp());
        EXPECT(0x435e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C7 01C3
        gbc.setState(0xa1b1, 0x2cff, 0xca30, 0x8d09, 0x71af, 0xb3e6, 0x1, 0x1);
        gbc.writeMem(0xa1b1, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x2cff, gbc.sp());
        EXPECT(0xa1b3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa1b1));
        EXPECT(0xc7, gbc.readMem(0xa1b2));
        // CB C7 01C4
        gbc.setState(0x96a4, 0x3d8c, 0x7e70, 0x8bd3, 0x1629, 0xf70d, 0x1, 0x1);
        gbc.writeMem(0x96a4, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x3d8c, gbc.sp());
        EXPECT(0x96a6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x96a4));
        EXPECT(0xc7, gbc.readMem(0x96a5));
        // CB C7 01C5
        gbc.setState(0x9a8b, 0x95d5, 0x1980, 0x3086, 0x5244, 0x2ab, 0x1, 0x0);
        gbc.writeMem(0x9a8b, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x95d5, gbc.sp());
        EXPECT(0x9a8d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9a8b));
        EXPECT(0xc7, gbc.readMem(0x9a8c));
        // CB C7 01C6
        gbc.setState(0x191f, 0x2c80, 0x57d0, 0x4434, 0x44d, 0x4172, 0x0, 0x0);
        gbc.writeMem(0x191f, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x2c80, gbc.sp());
        EXPECT(0x1921, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C7 01C8
        gbc.setState(0x48f9, 0x1f06, 0x5b20, 0x8238, 0xc7b2, 0x9a0a, 0x0, 0x0);
        gbc.writeMem(0x48f9, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x1f06, gbc.sp());
        EXPECT(0x48fb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C7 01C9
        gbc.setState(0xeed6, 0xc91e, 0xf350, 0x9b77, 0xea3e, 0xd3c2, 0x1, 0x0);
        gbc.writeMem(0xeed6, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0xc91e, gbc.sp());
        EXPECT(0xeed8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeed6));
        EXPECT(0xc7, gbc.readMem(0xeed7));
        // CB C7 01CA
        gbc.setState(0x2dbc, 0x5639, 0xd600, 0xfe70, 0x3474, 0x7d70, 0x1, 0x0);
        gbc.writeMem(0x2dbc, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x5639, gbc.sp());
        EXPECT(0x2dbe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C7 01CB
        gbc.setState(0x9a14, 0xdc59, 0x9f50, 0x53e3, 0x7165, 0x512e, 0x0, 0x1);
        gbc.writeMem(0x9a14, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0xdc59, gbc.sp());
        EXPECT(0x9a16, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9a14));
        EXPECT(0xc7, gbc.readMem(0x9a15));
        // CB C7 01CC
        gbc.setState(0x7ba3, 0xe6a5, 0x2a0, 0xd81b, 0x65a, 0xdf59, 0x1, 0x1);
        gbc.writeMem(0x7ba3, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0xe6a5, gbc.sp());
        EXPECT(0x7ba5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C7 01CD
        gbc.setState(0x2f49, 0x2c77, 0x76d0, 0x649e, 0xee9e, 0xb410, 0x0, 0x1);
        gbc.writeMem(0x2f49, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x2c77, gbc.sp());
        EXPECT(0x2f4b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C7 01CE
        gbc.setState(0x88be, 0xa844, 0x41e0, 0xda0, 0x56ae, 0x5a04, 0x1, 0x0);
        gbc.writeMem(0x88be, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0xa844, gbc.sp());
        EXPECT(0x88c0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x88be));
        EXPECT(0xc7, gbc.readMem(0x88bf));
        // CB C7 01CF
        gbc.setState(0x9c64, 0x7ac3, 0x3790, 0x1f74, 0xb064, 0xb69c, 0x1, 0x1);
        gbc.writeMem(0x9c64, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x7ac3, gbc.sp());
        EXPECT(0x9c66, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9c64));
        EXPECT(0xc7, gbc.readMem(0x9c65));
        // CB C7 01D0
        gbc.setState(0x44ea, 0xc2c7, 0x6940, 0x6486, 0xf0ea, 0x2a2f, 0x0, 0x0);
        gbc.writeMem(0x44ea, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0xc2c7, gbc.sp());
        EXPECT(0x44ec, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C7 01D1
        gbc.setState(0x87b6, 0x66e9, 0x7600, 0xe424, 0x388a, 0xca26, 0x1, 0x1);
        gbc.writeMem(0x87b6, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x66e9, gbc.sp());
        EXPECT(0x87b8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x87b6));
        EXPECT(0xc7, gbc.readMem(0x87b7));
        // CB C7 01D2
        gbc.setState(0x965f, 0x7d2d, 0xf180, 0x3a0, 0x1db9, 0xdf84, 0x1, 0x0);
        gbc.writeMem(0x965f, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x7d2d, gbc.sp());
        EXPECT(0x9661, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x965f));
        EXPECT(0xc7, gbc.readMem(0x9660));
        // CB C7 01D3
        gbc.setState(0x4524, 0x8fc1, 0x7600, 0x68bd, 0x8f2, 0x5744, 0x0, 0x0);
        gbc.writeMem(0x4524, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x8fc1, gbc.sp());
        EXPECT(0x4526, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C7 01D4
        gbc.setState(0x94d, 0xd269, 0x1bf0, 0x97c1, 0xa5cc, 0x864b, 0x1, 0x0);
        gbc.writeMem(0x94d, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0xd269, gbc.sp());
        EXPECT(0x94f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C7 01D6
        gbc.setState(0x9a75, 0xc854, 0x410, 0xce6, 0x476b, 0x15e8, 0x0, 0x0);
        gbc.writeMem(0x9a75, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0xc854, gbc.sp());
        EXPECT(0x9a77, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9a75));
        EXPECT(0xc7, gbc.readMem(0x9a76));
        // CB C7 01D7
        gbc.setState(0xafc7, 0xc474, 0x1c20, 0xa620, 0xa7c3, 0x24a6, 0x1, 0x0);
        gbc.writeMem(0xafc7, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0xc474, gbc.sp());
        EXPECT(0xafc9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xafc7));
        EXPECT(0xc7, gbc.readMem(0xafc8));
        // CB C7 01D8
        gbc.setState(0xb5e3, 0x2226, 0xb820, 0x645d, 0x1174, 0x4380, 0x0, 0x1);
        gbc.writeMem(0xb5e3, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x2226, gbc.sp());
        EXPECT(0xb5e5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb5e3));
        EXPECT(0xc7, gbc.readMem(0xb5e4));
        // CB C7 01D9
        gbc.setState(0x7403, 0x1792, 0x7fc0, 0xb0f5, 0xfb, 0xde2b, 0x1, 0x0);
        gbc.writeMem(0x7403, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x1792, gbc.sp());
        EXPECT(0x7405, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C7 01DA
        gbc.setState(0xdc3e, 0xc6ab, 0x7460, 0xc146, 0x212d, 0xbc74, 0x1, 0x0);
        gbc.writeMem(0xdc3e, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0xc6ab, gbc.sp());
        EXPECT(0xdc40, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdc3e));
        EXPECT(0xc7, gbc.readMem(0xdc3f));
        // CB C7 01DB
        gbc.setState(0x9077, 0x2507, 0x8590, 0xd9a9, 0xc1d0, 0x89e2, 0x1, 0x1);
        gbc.writeMem(0x9077, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x2507, gbc.sp());
        EXPECT(0x9079, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9077));
        EXPECT(0xc7, gbc.readMem(0x9078));
        // CB C7 01DC
        gbc.setState(0x2f4d, 0x67d9, 0x2100, 0xcdd9, 0x2bb7, 0x3c64, 0x1, 0x0);
        gbc.writeMem(0x2f4d, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x67d9, gbc.sp());
        EXPECT(0x2f4f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C7 01DD
        gbc.setState(0x8f74, 0xf0a3, 0x2b90, 0x794b, 0x4ce5, 0x1218, 0x1, 0x1);
        gbc.writeMem(0x8f74, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0xf0a3, gbc.sp());
        EXPECT(0x8f76, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8f74));
        EXPECT(0xc7, gbc.readMem(0x8f75));
        // CB C7 01DE
        gbc.setState(0x953e, 0x9b93, 0xc4c0, 0x476d, 0x7bf8, 0xf502, 0x1, 0x0);
        gbc.writeMem(0x953e, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x9b93, gbc.sp());
        EXPECT(0x9540, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x953e));
        EXPECT(0xc7, gbc.readMem(0x953f));
        // CB C7 01DF
        gbc.setState(0x356e, 0xe7b0, 0x7e60, 0xd0c8, 0xc029, 0x4e3c, 0x0, 0x0);
        gbc.writeMem(0x356e, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0xe7b0, gbc.sp());
        EXPECT(0x3570, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C7 01E0
        gbc.setState(0xb7b8, 0x4236, 0x8370, 0xcf9, 0xc0f3, 0x9b9, 0x1, 0x1);
        gbc.writeMem(0xb7b8, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x4236, gbc.sp());
        EXPECT(0xb7ba, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb7b8));
        EXPECT(0xc7, gbc.readMem(0xb7b9));
        // CB C7 01E1
        gbc.setState(0x93de, 0x512d, 0xddb0, 0x4b3e, 0x972e, 0x7e37, 0x0, 0x0);
        gbc.writeMem(0x93de, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x512d, gbc.sp());
        EXPECT(0x93e0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x93de));
        EXPECT(0xc7, gbc.readMem(0x93df));
        // CB C7 01E3
        gbc.setState(0xa956, 0x4014, 0xc130, 0xf3a4, 0xef89, 0x5948, 0x1, 0x1);
        gbc.writeMem(0xa956, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0x4014, gbc.sp());
        EXPECT(0xa958, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa956));
        EXPECT(0xc7, gbc.readMem(0xa957));
        // CB C7 01E4
        gbc.setState(0x16f5, 0x9af9, 0x3c00, 0x5c52, 0x4866, 0x56fe, 0x0, 0x1);
        gbc.writeMem(0x16f5, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x9af9, gbc.sp());
        EXPECT(0x16f7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C7 01E5
        gbc.setState(0xba35, 0xf48b, 0x31a0, 0x321c, 0xb3e0, 0x1190, 0x0, 0x0);
        gbc.writeMem(0xba35, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0xf48b, gbc.sp());
        EXPECT(0xba37, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xba35));
        EXPECT(0xc7, gbc.readMem(0xba36));
        // CB C7 01E6
        gbc.setState(0x20e2, 0x6140, 0xa810, 0x1f57, 0x1bbf, 0x7c7f, 0x1, 0x1);
        gbc.writeMem(0x20e2, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x6140, gbc.sp());
        EXPECT(0x20e4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C7 01E7
        gbc.setState(0x2dcd, 0xe4e2, 0x8b0, 0x5b56, 0xf3c0, 0xf9ef, 0x0, 0x1);
        gbc.writeMem(0x2dcd, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0xe4e2, gbc.sp());
        EXPECT(0x2dcf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C7 01E8
        gbc.setState(0x2575, 0xd4e1, 0x5f90, 0xc040, 0x467e, 0xb6aa, 0x0, 0x1);
        gbc.writeMem(0x2575, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0xd4e1, gbc.sp());
        EXPECT(0x2577, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C7 01E9
        gbc.setState(0x569b, 0x7129, 0x440, 0x767b, 0x993c, 0xfa29, 0x0, 0x1);
        gbc.writeMem(0x569b, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x7129, gbc.sp());
        EXPECT(0x569d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C7 01EA
        gbc.setState(0x9f59, 0x7f54, 0xe760, 0xbcfc, 0xa343, 0xcb61, 0x1, 0x1);
        gbc.writeMem(0x9f59, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x7f54, gbc.sp());
        EXPECT(0x9f5b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9f59));
        EXPECT(0xc7, gbc.readMem(0x9f5a));
        // CB C7 01EB
        gbc.setState(0xaac1, 0x587, 0x2550, 0x8ac3, 0x25b1, 0x4fe0, 0x0, 0x1);
        gbc.writeMem(0xaac1, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x587, gbc.sp());
        EXPECT(0xaac3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaac1));
        EXPECT(0xc7, gbc.readMem(0xaac2));
        // CB C7 01EC
        gbc.setState(0xc9e4, 0xa475, 0xcde0, 0x6f1e, 0x20e2, 0xb060, 0x1, 0x0);
        gbc.writeMem(0xc9e4, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0xa475, gbc.sp());
        EXPECT(0xc9e6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc9e4));
        EXPECT(0xc7, gbc.readMem(0xc9e5));
        // CB C7 01ED
        gbc.setState(0x2eee, 0x7ed0, 0x3a90, 0x4f53, 0x908b, 0xc9a6, 0x0, 0x0);
        gbc.writeMem(0x2eee, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x7ed0, gbc.sp());
        EXPECT(0x2ef0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C7 01EE
        gbc.setState(0x670e, 0x532f, 0xe0b0, 0x961b, 0x50d1, 0xa389, 0x0, 0x0);
        gbc.writeMem(0x670e, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x532f, gbc.sp());
        EXPECT(0x6710, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C7 01EF
        gbc.setState(0xd7d1, 0x1b91, 0xeb00, 0x2a2b, 0x237, 0xfe6d, 0x0, 0x1);
        gbc.writeMem(0xd7d1, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x1b91, gbc.sp());
        EXPECT(0xd7d3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd7d1));
        EXPECT(0xc7, gbc.readMem(0xd7d2));
        // CB C7 01F0
        gbc.setState(0xde7, 0xac9, 0x970, 0xd124, 0xfa5b, 0xc604, 0x0, 0x1);
        gbc.writeMem(0xde7, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0xac9, gbc.sp());
        EXPECT(0xde9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C7 01F1
        gbc.setState(0xd5ff, 0x3974, 0xdd20, 0x60f9, 0x5069, 0xd542, 0x0, 0x1);
        gbc.writeMem(0xd5ff, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x3974, gbc.sp());
        EXPECT(0xd601, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd5ff));
        EXPECT(0xc7, gbc.readMem(0xd600));
        // CB C7 01F2
        gbc.setState(0x2dac, 0x84dd, 0xcb40, 0xce0b, 0x8d41, 0x6836, 0x1, 0x1);
        gbc.writeMem(0x2dac, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x84dd, gbc.sp());
        EXPECT(0x2dae, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C7 01F3
        gbc.setState(0x7ada, 0xa520, 0x4190, 0x5224, 0xd7f3, 0xe01f, 0x1, 0x1);
        gbc.writeMem(0x7ada, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0xa520, gbc.sp());
        EXPECT(0x7adc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C7 01F4
        gbc.setState(0x14e5, 0x207a, 0x20a0, 0xe7f4, 0xd936, 0x7f33, 0x1, 0x1);
        gbc.writeMem(0x14e5, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x207a, gbc.sp());
        EXPECT(0x14e7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C7 01F5
        gbc.setState(0x5b9a, 0x5a5f, 0xaec0, 0xe4a1, 0xc774, 0xe924, 0x0, 0x1);
        gbc.writeMem(0x5b9a, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x5a5f, gbc.sp());
        EXPECT(0x5b9c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C7 01F6
        gbc.setState(0x5edd, 0x73d9, 0x3000, 0x1000, 0xe350, 0xd396, 0x0, 0x1);
        gbc.writeMem(0x5edd, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x73d9, gbc.sp());
        EXPECT(0x5edf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C7 01F7
        gbc.setState(0x5aaa, 0xe83c, 0xec70, 0xde41, 0x5b1, 0x1c0d, 0x0, 0x0);
        gbc.writeMem(0x5aaa, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0xe83c, gbc.sp());
        EXPECT(0x5aac, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C7 01F8
        gbc.setState(0xe37c, 0xc5db, 0x6290, 0xa645, 0xa7f4, 0x4ef4, 0x1, 0x1);
        gbc.writeMem(0xe37c, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0xc5db, gbc.sp());
        EXPECT(0xe37e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe37c));
        EXPECT(0xc7, gbc.readMem(0xe37d));
        // CB C7 01F9
        gbc.setState(0x9580, 0x36e6, 0x1b70, 0x728a, 0x5b38, 0x8c5c, 0x1, 0x0);
        gbc.writeMem(0x9580, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x36e6, gbc.sp());
        EXPECT(0x9582, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9580));
        EXPECT(0xc7, gbc.readMem(0x9581));
        // CB C7 01FA
        gbc.setState(0x8b45, 0xaaab, 0xa1a0, 0x5bf4, 0xe1d8, 0xeb77, 0x1, 0x1);
        gbc.writeMem(0x8b45, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0xaaab, gbc.sp());
        EXPECT(0x8b47, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8b45));
        EXPECT(0xc7, gbc.readMem(0x8b46));
        // CB C7 01FB
        gbc.setState(0xaf3a, 0xb9a7, 0xc5f0, 0x35f5, 0x4686, 0x9883, 0x0, 0x0);
        gbc.writeMem(0xaf3a, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0xb9a7, gbc.sp());
        EXPECT(0xaf3c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaf3a));
        EXPECT(0xc7, gbc.readMem(0xaf3b));
        // CB C7 01FC
        gbc.setState(0x3050, 0x5545, 0xc960, 0x3797, 0x9daf, 0x24ba, 0x0, 0x0);
        gbc.writeMem(0x3050, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0x5545, gbc.sp());
        EXPECT(0x3052, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C7 01FD
        gbc.setState(0x7059, 0x5cd1, 0x6fd0, 0xec27, 0x26ac, 0xfd6, 0x1, 0x1);
        gbc.writeMem(0x7059, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x5cd1, gbc.sp());
        EXPECT(0x705b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C7 01FE
        gbc.setState(0x71d5, 0x66c8, 0xbcf0, 0xe9d1, 0xe4bf, 0x7a8e, 0x1, 0x0);
        gbc.writeMem(0x71d5, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x66c8, gbc.sp());
        EXPECT(0x71d7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C7 01FF
        gbc.setState(0x153a, 0x16fc, 0xf6a0, 0xfe33, 0xcafc, 0xbf91, 0x1, 0x1);
        gbc.writeMem(0x153a, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x16fc, gbc.sp());
        EXPECT(0x153c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C7 0200
        gbc.setState(0xadc8, 0x338a, 0x41b0, 0x531, 0xea9a, 0x8e97, 0x0, 0x1);
        gbc.writeMem(0xadc8, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0x338a, gbc.sp());
        EXPECT(0xadca, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xadc8));
        EXPECT(0xc7, gbc.readMem(0xadc9));
        // CB C7 0201
        gbc.setState(0x398, 0x82bf, 0xad70, 0xa62d, 0x5533, 0xf250, 0x0, 0x1);
        gbc.writeMem(0x398, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x82bf, gbc.sp());
        EXPECT(0x39a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C7 0202
        gbc.setState(0x234f, 0xdeb4, 0x3310, 0xf467, 0x64ad, 0xba9b, 0x0, 0x1);
        gbc.writeMem(0x234f, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0xdeb4, gbc.sp());
        EXPECT(0x2351, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C7 0204
        gbc.setState(0xa489, 0xc82d, 0xc940, 0xf34a, 0x219a, 0x2216, 0x0, 0x0);
        gbc.writeMem(0xa489, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0xc82d, gbc.sp());
        EXPECT(0xa48b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa489));
        EXPECT(0xc7, gbc.readMem(0xa48a));
        // CB C7 0205
        gbc.setState(0x614a, 0x5a2a, 0x5e40, 0x6e0b, 0x98b3, 0xf4af, 0x1, 0x1);
        gbc.writeMem(0x614a, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x5a2a, gbc.sp());
        EXPECT(0x614c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C7 0206
        gbc.setState(0x4274, 0x8e25, 0x32e0, 0xc312, 0x73a3, 0xc14f, 0x1, 0x1);
        gbc.writeMem(0x4274, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x8e25, gbc.sp());
        EXPECT(0x4276, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C7 0207
        gbc.setState(0x59f9, 0x7c24, 0x22f0, 0x78f1, 0xd836, 0x4a8c, 0x0, 0x1);
        gbc.writeMem(0x59f9, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x7c24, gbc.sp());
        EXPECT(0x59fb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C7 0208
        gbc.setState(0xbbad, 0x8724, 0x2740, 0x7671, 0x12df, 0xefd3, 0x0, 0x0);
        gbc.writeMem(0xbbad, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x8724, gbc.sp());
        EXPECT(0xbbaf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbbad));
        EXPECT(0xc7, gbc.readMem(0xbbae));
        // CB C7 0209
        gbc.setState(0xbcbb, 0xeb4e, 0x6280, 0x6e82, 0x616f, 0xb45, 0x1, 0x1);
        gbc.writeMem(0xbcbb, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0xeb4e, gbc.sp());
        EXPECT(0xbcbd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbcbb));
        EXPECT(0xc7, gbc.readMem(0xbcbc));
        // CB C7 020A
        gbc.setState(0x47ef, 0xd171, 0xcc00, 0x4d3f, 0x33bd, 0xfd4, 0x1, 0x0);
        gbc.writeMem(0x47ef, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0xd171, gbc.sp());
        EXPECT(0x47f1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C7 020B
        gbc.setState(0x9a9a, 0x56d, 0x4290, 0xa907, 0xed75, 0x8d15, 0x0, 0x1);
        gbc.writeMem(0x9a9a, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x56d, gbc.sp());
        EXPECT(0x9a9c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9a9a));
        EXPECT(0xc7, gbc.readMem(0x9a9b));
        // CB C7 020C
        gbc.setState(0xc932, 0x7b3f, 0x2720, 0xaa6c, 0x103d, 0xb518, 0x1, 0x0);
        gbc.writeMem(0xc932, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x7b3f, gbc.sp());
        EXPECT(0xc934, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc932));
        EXPECT(0xc7, gbc.readMem(0xc933));
        // CB C7 020D
        gbc.setState(0xd074, 0xcb9c, 0x2e0, 0x4044, 0xbde8, 0xcf95, 0x0, 0x0);
        gbc.writeMem(0xd074, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0xcb9c, gbc.sp());
        EXPECT(0xd076, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd074));
        EXPECT(0xc7, gbc.readMem(0xd075));
        // CB C7 020F
        gbc.setState(0x6fd5, 0x9687, 0x3d40, 0x4ded, 0x26d4, 0x8fd5, 0x0, 0x0);
        gbc.writeMem(0x6fd5, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x9687, gbc.sp());
        EXPECT(0x6fd7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C7 0210
        gbc.setState(0x9039, 0xdd0c, 0x9f40, 0xa7ca, 0xc50d, 0xf852, 0x0, 0x0);
        gbc.writeMem(0x9039, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0xdd0c, gbc.sp());
        EXPECT(0x903b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9039));
        EXPECT(0xc7, gbc.readMem(0x903a));
        // CB C7 0211
        gbc.setState(0x6917, 0xcffe, 0xab30, 0xe9d4, 0x2346, 0x7e23, 0x0, 0x0);
        gbc.writeMem(0x6917, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0xcffe, gbc.sp());
        EXPECT(0x6919, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C7 0212
        gbc.setState(0x7688, 0xb087, 0xac60, 0xf744, 0x132b, 0x1e6f, 0x1, 0x1);
        gbc.writeMem(0x7688, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0xb087, gbc.sp());
        EXPECT(0x768a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C7 0213
        gbc.setState(0x1bb2, 0x986b, 0xee90, 0xd049, 0xdaad, 0xd26b, 0x1, 0x0);
        gbc.writeMem(0x1bb2, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x986b, gbc.sp());
        EXPECT(0x1bb4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C7 0214
        gbc.setState(0x16c1, 0x837a, 0x6170, 0xd917, 0x8f24, 0xc66d, 0x1, 0x0);
        gbc.writeMem(0x16c1, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x837a, gbc.sp());
        EXPECT(0x16c3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C7 0215
        gbc.setState(0xe48, 0x4579, 0x9410, 0xef37, 0xade5, 0xdb23, 0x1, 0x1);
        gbc.writeMem(0xe48, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x4579, gbc.sp());
        EXPECT(0xe4a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C7 0217
        gbc.setState(0xd022, 0xcf4c, 0x35d0, 0x92b8, 0xf0cf, 0x4084, 0x1, 0x1);
        gbc.writeMem(0xd022, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0xcf4c, gbc.sp());
        EXPECT(0xd024, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd022));
        EXPECT(0xc7, gbc.readMem(0xd023));
        // CB C7 0218
        gbc.setState(0x9e3c, 0xd592, 0x93f0, 0xf264, 0x1d3e, 0xfb5e, 0x1, 0x0);
        gbc.writeMem(0x9e3c, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0xd592, gbc.sp());
        EXPECT(0x9e3e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9e3c));
        EXPECT(0xc7, gbc.readMem(0x9e3d));
        // CB C7 0219
        gbc.setState(0x4539, 0x1181, 0xed70, 0x1e3b, 0x64f3, 0xc479, 0x1, 0x0);
        gbc.writeMem(0x4539, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x1181, gbc.sp());
        EXPECT(0x453b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C7 021A
        gbc.setState(0xbb20, 0xbbd, 0x1d00, 0x522, 0xb461, 0x9257, 0x0, 0x0);
        gbc.writeMem(0xbb20, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0xbbd, gbc.sp());
        EXPECT(0xbb22, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbb20));
        EXPECT(0xc7, gbc.readMem(0xbb21));
        // CB C7 021B
        gbc.setState(0xaca4, 0x7408, 0xcd90, 0xb4cd, 0x2105, 0x62c2, 0x0, 0x1);
        gbc.writeMem(0xaca4, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x7408, gbc.sp());
        EXPECT(0xaca6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaca4));
        EXPECT(0xc7, gbc.readMem(0xaca5));
        // CB C7 021C
        gbc.setState(0xe2dc, 0xfc0b, 0xe810, 0x6a6b, 0x7323, 0xb935, 0x0, 0x1);
        gbc.writeMem(0xe2dc, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0xfc0b, gbc.sp());
        EXPECT(0xe2de, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe2dc));
        EXPECT(0xc7, gbc.readMem(0xe2dd));
        // CB C7 021D
        gbc.setState(0x6206, 0x8a7f, 0xc1d0, 0xc410, 0x8bd8, 0xbc82, 0x1, 0x1);
        gbc.writeMem(0x6206, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x8a7f, gbc.sp());
        EXPECT(0x6208, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C7 021E
        gbc.setState(0x4628, 0x3313, 0xf030, 0xba73, 0x6a73, 0x42ed, 0x0, 0x0);
        gbc.writeMem(0x4628, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x3313, gbc.sp());
        EXPECT(0x462a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C7 021F
        gbc.setState(0x6466, 0x1bca, 0x5c50, 0xf39e, 0x43c6, 0x868a, 0x0, 0x0);
        gbc.writeMem(0x6466, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x1bca, gbc.sp());
        EXPECT(0x6468, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C7 0220
        gbc.setState(0x80f1, 0x4dc7, 0x420, 0x167e, 0xf23c, 0xce61, 0x1, 0x1);
        gbc.writeMem(0x80f1, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x4dc7, gbc.sp());
        EXPECT(0x80f3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x80f1));
        EXPECT(0xc7, gbc.readMem(0x80f2));
        // CB C7 0221
        gbc.setState(0x97d2, 0x4bac, 0x7720, 0xfe3b, 0x291f, 0xa9e, 0x1, 0x1);
        gbc.writeMem(0x97d2, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x4bac, gbc.sp());
        EXPECT(0x97d4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x97d2));
        EXPECT(0xc7, gbc.readMem(0x97d3));
        // CB C7 0222
        gbc.setState(0xdae5, 0x4db1, 0x3060, 0x73ab, 0x47cb, 0xb50d, 0x1, 0x1);
        gbc.writeMem(0xdae5, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x4db1, gbc.sp());
        EXPECT(0xdae7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdae5));
        EXPECT(0xc7, gbc.readMem(0xdae6));
        // CB C7 0223
        gbc.setState(0x5182, 0x6388, 0xd7d0, 0x7b1a, 0xfdda, 0xc840, 0x1, 0x1);
        gbc.writeMem(0x5182, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x6388, gbc.sp());
        EXPECT(0x5184, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C7 0224
        gbc.setState(0x1ca, 0xcbe6, 0x3e80, 0x2fbd, 0x1264, 0x76e, 0x1, 0x0);
        gbc.writeMem(0x1ca, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0xcbe6, gbc.sp());
        EXPECT(0x1cc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C7 0225
        gbc.setState(0x51d0, 0x63d0, 0xf070, 0x5a5d, 0x3e97, 0x6fb3, 0x0, 0x1);
        gbc.writeMem(0x51d0, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x63d0, gbc.sp());
        EXPECT(0x51d2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C7 0226
        gbc.setState(0xb0a4, 0x5e84, 0xfa10, 0xc701, 0xd600, 0xa4d0, 0x1, 0x1);
        gbc.writeMem(0xb0a4, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x5e84, gbc.sp());
        EXPECT(0xb0a6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb0a4));
        EXPECT(0xc7, gbc.readMem(0xb0a5));
        // CB C7 0227
        gbc.setState(0xb416, 0x8947, 0xd940, 0x11ac, 0x5aff, 0x3010, 0x1, 0x0);
        gbc.writeMem(0xb416, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x8947, gbc.sp());
        EXPECT(0xb418, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb416));
        EXPECT(0xc7, gbc.readMem(0xb417));
        // CB C7 0228
        gbc.setState(0x240c, 0xc0d0, 0x2d10, 0x4c84, 0x476f, 0x58b3, 0x0, 0x1);
        gbc.writeMem(0x240c, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0xc0d0, gbc.sp());
        EXPECT(0x240e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C7 022A
        gbc.setState(0x9298, 0x42f7, 0xe5c0, 0x4796, 0x66c7, 0x2de9, 0x0, 0x1);
        gbc.writeMem(0x9298, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x42f7, gbc.sp());
        EXPECT(0x929a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9298));
        EXPECT(0xc7, gbc.readMem(0x9299));
        // CB C7 022B
        gbc.setState(0xeb6, 0x1ec7, 0x3c0, 0xafb0, 0xe101, 0x6d40, 0x0, 0x0);
        gbc.writeMem(0xeb6, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x1ec7, gbc.sp());
        EXPECT(0xeb8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C7 022C
        gbc.setState(0xd7c3, 0xcd23, 0x6f60, 0x9bef, 0x6dcf, 0xd04e, 0x0, 0x0);
        gbc.writeMem(0xd7c3, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0xcd23, gbc.sp());
        EXPECT(0xd7c5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd7c3));
        EXPECT(0xc7, gbc.readMem(0xd7c4));
        // CB C7 022D
        gbc.setState(0xd3b6, 0x7d8e, 0x3640, 0x677, 0x6248, 0x901c, 0x1, 0x1);
        gbc.writeMem(0xd3b6, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x7d8e, gbc.sp());
        EXPECT(0xd3b8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd3b6));
        EXPECT(0xc7, gbc.readMem(0xd3b7));
        // CB C7 022E
        gbc.setState(0x2dc, 0xe199, 0x1730, 0x10b3, 0x33c5, 0x1738, 0x0, 0x0);
        gbc.writeMem(0x2dc, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0xe199, gbc.sp());
        EXPECT(0x2de, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C7 022F
        gbc.setState(0x478e, 0xeb4, 0xad0, 0x9a80, 0xd319, 0x5bbd, 0x0, 0x1);
        gbc.writeMem(0x478e, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0xeb4, gbc.sp());
        EXPECT(0x4790, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C7 0230
        gbc.setState(0x6cad, 0x6b6e, 0xca00, 0xb06d, 0x6530, 0x66e7, 0x1, 0x1);
        gbc.writeMem(0x6cad, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x6b6e, gbc.sp());
        EXPECT(0x6caf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C7 0231
        gbc.setState(0x3eae, 0xc2f5, 0x15e0, 0x2f4c, 0x6e1d, 0x2582, 0x0, 0x1);
        gbc.writeMem(0x3eae, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0xc2f5, gbc.sp());
        EXPECT(0x3eb0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C7 0232
        gbc.setState(0xc8cd, 0x1ae3, 0x9750, 0xcc84, 0x2ae9, 0x6c0c, 0x0, 0x0);
        gbc.writeMem(0xc8cd, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x1ae3, gbc.sp());
        EXPECT(0xc8cf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc8cd));
        EXPECT(0xc7, gbc.readMem(0xc8ce));
        // CB C7 0233
        gbc.setState(0x7579, 0x7215, 0xfa50, 0xbfed, 0xfd96, 0xaf23, 0x0, 0x1);
        gbc.writeMem(0x7579, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x7215, gbc.sp());
        EXPECT(0x757b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C7 0235
        gbc.setState(0x9834, 0xff13, 0x6730, 0x6bb5, 0xf160, 0x4013, 0x1, 0x1);
        gbc.writeMem(0x9834, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0xff13, gbc.sp());
        EXPECT(0x9836, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9834));
        EXPECT(0xc7, gbc.readMem(0x9835));
        // CB C7 0236
        gbc.setState(0xd058, 0xcf5b, 0x19c0, 0xa987, 0xfc24, 0xcba1, 0x0, 0x1);
        gbc.writeMem(0xd058, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0xcf5b, gbc.sp());
        EXPECT(0xd05a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd058));
        EXPECT(0xc7, gbc.readMem(0xd059));
        // CB C7 0237
        gbc.setState(0x40a5, 0x11f3, 0xa3e0, 0x3, 0xc7da, 0x50fa, 0x0, 0x1);
        gbc.writeMem(0x40a5, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0x11f3, gbc.sp());
        EXPECT(0x40a7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C7 0238
        gbc.setState(0xa702, 0xb6ec, 0x3100, 0xdde2, 0x6a56, 0xea83, 0x1, 0x1);
        gbc.writeMem(0xa702, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0xb6ec, gbc.sp());
        EXPECT(0xa704, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa702));
        EXPECT(0xc7, gbc.readMem(0xa703));
        // CB C7 0239
        gbc.setState(0x7634, 0xe18c, 0x41e0, 0xd7a2, 0xf28e, 0x65c6, 0x1, 0x0);
        gbc.writeMem(0x7634, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0xe18c, gbc.sp());
        EXPECT(0x7636, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C7 023A
        gbc.setState(0x249f, 0x43c8, 0xf610, 0xa685, 0xb7ea, 0x7c3, 0x1, 0x0);
        gbc.writeMem(0x249f, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x43c8, gbc.sp());
        EXPECT(0x24a1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C7 023B
        gbc.setState(0xca4e, 0x814d, 0x1510, 0x99b7, 0x5578, 0xf570, 0x0, 0x1);
        gbc.writeMem(0xca4e, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x814d, gbc.sp());
        EXPECT(0xca50, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xca4e));
        EXPECT(0xc7, gbc.readMem(0xca4f));
        // CB C7 023C
        gbc.setState(0x4d85, 0x37d5, 0xc700, 0x53db, 0x20b1, 0x415b, 0x1, 0x1);
        gbc.writeMem(0x4d85, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x37d5, gbc.sp());
        EXPECT(0x4d87, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C7 023D
        gbc.setState(0x5f35, 0x77b0, 0x3cc0, 0xf40b, 0x1c6c, 0xb0a9, 0x0, 0x1);
        gbc.writeMem(0x5f35, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x77b0, gbc.sp());
        EXPECT(0x5f37, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C7 023E
        gbc.setState(0xa299, 0x801b, 0x2240, 0x3a97, 0x64d6, 0x85b1, 0x0, 0x0);
        gbc.writeMem(0xa299, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x801b, gbc.sp());
        EXPECT(0xa29b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa299));
        EXPECT(0xc7, gbc.readMem(0xa29a));
        // CB C7 023F
        gbc.setState(0xd26f, 0xc2ea, 0x5960, 0xde93, 0xff20, 0x9b8f, 0x1, 0x1);
        gbc.writeMem(0xd26f, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0xc2ea, gbc.sp());
        EXPECT(0xd271, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd26f));
        EXPECT(0xc7, gbc.readMem(0xd270));
        // CB C7 0240
        gbc.setState(0x148, 0xa039, 0xfd30, 0x8787, 0x709d, 0xd6d1, 0x0, 0x0);
        gbc.writeMem(0x148, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0xa039, gbc.sp());
        EXPECT(0x14a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C7 0241
        gbc.setState(0x8396, 0x2285, 0xc260, 0xb726, 0xadba, 0x582a, 0x1, 0x1);
        gbc.writeMem(0x8396, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x2285, gbc.sp());
        EXPECT(0x8398, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8396));
        EXPECT(0xc7, gbc.readMem(0x8397));
        // CB C7 0242
        gbc.setState(0xbc74, 0x482e, 0x3f20, 0x6af3, 0x8a7f, 0x8cd9, 0x1, 0x0);
        gbc.writeMem(0xbc74, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x482e, gbc.sp());
        EXPECT(0xbc76, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbc74));
        EXPECT(0xc7, gbc.readMem(0xbc75));
        // CB C7 0243
        gbc.setState(0x2b8, 0x3e0b, 0xb60, 0x3012, 0x2044, 0x7708, 0x0, 0x0);
        gbc.writeMem(0x2b8, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x3e0b, gbc.sp());
        EXPECT(0x2ba, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C7 0244
        gbc.setState(0xb1ca, 0x581, 0xad00, 0x3371, 0x6675, 0x32dc, 0x1, 0x1);
        gbc.writeMem(0xb1ca, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x581, gbc.sp());
        EXPECT(0xb1cc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb1ca));
        EXPECT(0xc7, gbc.readMem(0xb1cb));
        // CB C7 0245
        gbc.setState(0xab4b, 0x2fb2, 0x4d0, 0xa4be, 0x80af, 0xe10d, 0x0, 0x0);
        gbc.writeMem(0xab4b, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x2fb2, gbc.sp());
        EXPECT(0xab4d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xab4b));
        EXPECT(0xc7, gbc.readMem(0xab4c));
        // CB C7 0246
        gbc.setState(0xd1d0, 0x2fd6, 0x3cc0, 0xc103, 0x93f5, 0xa93e, 0x1, 0x0);
        gbc.writeMem(0xd1d0, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x2fd6, gbc.sp());
        EXPECT(0xd1d2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd1d0));
        EXPECT(0xc7, gbc.readMem(0xd1d1));
        // CB C7 0247
        gbc.setState(0xc640, 0x69a8, 0x5e40, 0xe714, 0x48e1, 0xf64, 0x1, 0x0);
        gbc.writeMem(0xc640, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x69a8, gbc.sp());
        EXPECT(0xc642, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc640));
        EXPECT(0xc7, gbc.readMem(0xc641));
        // CB C7 0248
        gbc.setState(0x87b, 0xf647, 0xb3e0, 0x2a02, 0x632e, 0x8ca1, 0x1, 0x0);
        gbc.writeMem(0x87b, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0xf647, gbc.sp());
        EXPECT(0x87d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C7 0249
        gbc.setState(0x8ec8, 0x988c, 0xed00, 0x6a32, 0x686d, 0x64ce, 0x0, 0x0);
        gbc.writeMem(0x8ec8, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x988c, gbc.sp());
        EXPECT(0x8eca, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8ec8));
        EXPECT(0xc7, gbc.readMem(0x8ec9));
        // CB C7 024A
        gbc.setState(0x88eb, 0x7f34, 0x41a0, 0x85bb, 0xe9e, 0xbb8e, 0x0, 0x0);
        gbc.writeMem(0x88eb, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x7f34, gbc.sp());
        EXPECT(0x88ed, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x88eb));
        EXPECT(0xc7, gbc.readMem(0x88ec));
        // CB C7 024B
        gbc.setState(0xa19e, 0x34c8, 0x440, 0x5785, 0xc64e, 0xb0ed, 0x0, 0x1);
        gbc.writeMem(0xa19e, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x34c8, gbc.sp());
        EXPECT(0xa1a0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa19e));
        EXPECT(0xc7, gbc.readMem(0xa19f));
        // CB C7 024C
        gbc.setState(0x57ad, 0xc015, 0x4190, 0x8fe0, 0xbd23, 0x95aa, 0x0, 0x0);
        gbc.writeMem(0x57ad, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0xc015, gbc.sp());
        EXPECT(0x57af, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C7 024D
        gbc.setState(0xe9fb, 0x9d3c, 0xa370, 0x4266, 0x4075, 0x3cd7, 0x1, 0x1);
        gbc.writeMem(0xe9fb, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0x9d3c, gbc.sp());
        EXPECT(0xe9fd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe9fb));
        EXPECT(0xc7, gbc.readMem(0xe9fc));
        // CB C7 024E
        gbc.setState(0x3f15, 0xa04a, 0xbc70, 0xf758, 0x7a56, 0xa023, 0x0, 0x0);
        gbc.writeMem(0x3f15, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0xa04a, gbc.sp());
        EXPECT(0x3f17, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C7 024F
        gbc.setState(0xee61, 0x2b4e, 0x320, 0x7ad9, 0x9f7e, 0x7e20, 0x0, 0x0);
        gbc.writeMem(0xee61, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x2b4e, gbc.sp());
        EXPECT(0xee63, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xee61));
        EXPECT(0xc7, gbc.readMem(0xee62));
        // CB C7 0250
        gbc.setState(0x9170, 0x78e, 0xafd0, 0xab8, 0x4a5d, 0xd256, 0x1, 0x0);
        gbc.writeMem(0x9170, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0x78e, gbc.sp());
        EXPECT(0x9172, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9170));
        EXPECT(0xc7, gbc.readMem(0x9171));
        // CB C7 0251
        gbc.setState(0x572c, 0x3158, 0x93b0, 0x7b8, 0xb0e3, 0xb2a0, 0x0, 0x0);
        gbc.writeMem(0x572c, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x3158, gbc.sp());
        EXPECT(0x572e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C7 0252
        gbc.setState(0x6933, 0x9c58, 0xa990, 0x97db, 0x8e1c, 0x4cf3, 0x1, 0x0);
        gbc.writeMem(0x6933, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x9c58, gbc.sp());
        EXPECT(0x6935, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C7 0253
        gbc.setState(0x8f2c, 0xc6e6, 0x2c40, 0x239d, 0xb773, 0x5980, 0x1, 0x1);
        gbc.writeMem(0x8f2c, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0xc6e6, gbc.sp());
        EXPECT(0x8f2e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8f2c));
        EXPECT(0xc7, gbc.readMem(0x8f2d));
        // CB C7 0254
        gbc.setState(0x1ac4, 0xbecf, 0xe540, 0x66e1, 0xd4b2, 0x47ad, 0x1, 0x0);
        gbc.writeMem(0x1ac4, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0xbecf, gbc.sp());
        EXPECT(0x1ac6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C7 0255
        gbc.setState(0x8aa2, 0xbcf8, 0x7290, 0xcd7c, 0xf79, 0x8283, 0x1, 0x1);
        gbc.writeMem(0x8aa2, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0xbcf8, gbc.sp());
        EXPECT(0x8aa4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8aa2));
        EXPECT(0xc7, gbc.readMem(0x8aa3));
        // CB C7 0256
        gbc.setState(0x8a0c, 0x16f2, 0x5460, 0x2762, 0x4ed5, 0x9fde, 0x1, 0x0);
        gbc.writeMem(0x8a0c, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x16f2, gbc.sp());
        EXPECT(0x8a0e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8a0c));
        EXPECT(0xc7, gbc.readMem(0x8a0d));
        // CB C7 0257
        gbc.setState(0x2526, 0x62c7, 0x6610, 0xb1b, 0x7fb8, 0x20ba, 0x0, 0x0);
        gbc.writeMem(0x2526, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0x62c7, gbc.sp());
        EXPECT(0x2528, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C7 0258
        gbc.setState(0x10ea, 0xe0b5, 0xdf90, 0x20eb, 0x504c, 0xe526, 0x1, 0x0);
        gbc.writeMem(0x10ea, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0xe0b5, gbc.sp());
        EXPECT(0x10ec, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C7 0259
        gbc.setState(0xe45d, 0xdb2b, 0xb1e0, 0x1bc0, 0x169e, 0xd62d, 0x0, 0x0);
        gbc.writeMem(0xe45d, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0xdb2b, gbc.sp());
        EXPECT(0xe45f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe45d));
        EXPECT(0xc7, gbc.readMem(0xe45e));
        // CB C7 025A
        gbc.setState(0x5c03, 0x14b7, 0xcd60, 0xc20b, 0xf13f, 0x1f4c, 0x1, 0x0);
        gbc.writeMem(0x5c03, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x14b7, gbc.sp());
        EXPECT(0x5c05, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C7 025B
        gbc.setState(0xcb08, 0x96ef, 0x1220, 0x5070, 0xb78b, 0x7fd, 0x0, 0x0);
        gbc.writeMem(0xcb08, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x96ef, gbc.sp());
        EXPECT(0xcb0a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcb08));
        EXPECT(0xc7, gbc.readMem(0xcb09));
        // CB C7 025C
        gbc.setState(0xd129, 0x6cc9, 0xe360, 0x7eba, 0xff2d, 0xb942, 0x0, 0x0);
        gbc.writeMem(0xd129, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x6cc9, gbc.sp());
        EXPECT(0xd12b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd129));
        EXPECT(0xc7, gbc.readMem(0xd12a));
        // CB C7 025D
        gbc.setState(0x8d4a, 0xb55d, 0xddf0, 0x9e4e, 0x8af3, 0xa207, 0x1, 0x1);
        gbc.writeMem(0x8d4a, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0xb55d, gbc.sp());
        EXPECT(0x8d4c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8d4a));
        EXPECT(0xc7, gbc.readMem(0x8d4b));
        // CB C7 025E
        gbc.setState(0x1491, 0x8f38, 0x46b0, 0x1d7b, 0x9c56, 0xc339, 0x1, 0x1);
        gbc.writeMem(0x1491, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x8f38, gbc.sp());
        EXPECT(0x1493, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C7 025F
        gbc.setState(0xa270, 0x43a6, 0x62b0, 0x2d69, 0x17a4, 0xa3e6, 0x1, 0x0);
        gbc.writeMem(0xa270, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x43a6, gbc.sp());
        EXPECT(0xa272, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa270));
        EXPECT(0xc7, gbc.readMem(0xa271));
        // CB C7 0260
        gbc.setState(0xddcf, 0x3de8, 0x1790, 0x3355, 0xbbbb, 0x3df9, 0x1, 0x1);
        gbc.writeMem(0xddcf, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x3de8, gbc.sp());
        EXPECT(0xddd1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xddcf));
        EXPECT(0xc7, gbc.readMem(0xddd0));
        // CB C7 0261
        gbc.setState(0xab9e, 0xb6dc, 0x4c20, 0x2de5, 0x99c, 0x2b9a, 0x0, 0x0);
        gbc.writeMem(0xab9e, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0xb6dc, gbc.sp());
        EXPECT(0xaba0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xab9e));
        EXPECT(0xc7, gbc.readMem(0xab9f));
        // CB C7 0262
        gbc.setState(0xb149, 0x5fad, 0x8ab0, 0xb472, 0x2895, 0xa3e3, 0x0, 0x0);
        gbc.writeMem(0xb149, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x5fad, gbc.sp());
        EXPECT(0xb14b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb149));
        EXPECT(0xc7, gbc.readMem(0xb14a));
        // CB C7 0263
        gbc.setState(0xc147, 0x313d, 0xa00, 0x9029, 0xc62, 0x58b2, 0x1, 0x0);
        gbc.writeMem(0xc147, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x313d, gbc.sp());
        EXPECT(0xc149, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc147));
        EXPECT(0xc7, gbc.readMem(0xc148));
        // CB C7 0264
        gbc.setState(0xdc9, 0x5fc0, 0xfc80, 0x3c4c, 0xe04c, 0xf017, 0x0, 0x1);
        gbc.writeMem(0xdc9, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x5fc0, gbc.sp());
        EXPECT(0xdcb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C7 0265
        gbc.setState(0x2432, 0x1793, 0x9c40, 0xf95d, 0x6b3f, 0x3684, 0x0, 0x0);
        gbc.writeMem(0x2432, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x1793, gbc.sp());
        EXPECT(0x2434, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C7 0266
        gbc.setState(0xb2b7, 0xf653, 0xc910, 0x55c1, 0xd8dd, 0x74f, 0x1, 0x1);
        gbc.writeMem(0xb2b7, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0xf653, gbc.sp());
        EXPECT(0xb2b9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb2b7));
        EXPECT(0xc7, gbc.readMem(0xb2b8));
        // CB C7 0267
        gbc.setState(0xe8a, 0xd485, 0xf9c0, 0xfedc, 0xcda3, 0xa101, 0x0, 0x0);
        gbc.writeMem(0xe8a, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0xd485, gbc.sp());
        EXPECT(0xe8c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C7 0268
        gbc.setState(0xe17a, 0xd437, 0x1990, 0x556d, 0x6948, 0x31ee, 0x1, 0x1);
        gbc.writeMem(0xe17a, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0xd437, gbc.sp());
        EXPECT(0xe17c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe17a));
        EXPECT(0xc7, gbc.readMem(0xe17b));
        // CB C7 0269
        gbc.setState(0x1de6, 0x455e, 0x1cb0, 0x4ee, 0x71a1, 0x143f, 0x1, 0x1);
        gbc.writeMem(0x1de6, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0x455e, gbc.sp());
        EXPECT(0x1de8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C7 026A
        gbc.setState(0xd61b, 0xa045, 0x9d20, 0x9bc4, 0x46b, 0xf0f4, 0x1, 0x1);
        gbc.writeMem(0xd61b, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0xa045, gbc.sp());
        EXPECT(0xd61d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd61b));
        EXPECT(0xc7, gbc.readMem(0xd61c));
        // CB C7 026B
        gbc.setState(0x75a6, 0xac4b, 0x1ae0, 0x2166, 0x9545, 0x32fe, 0x1, 0x1);
        gbc.writeMem(0x75a6, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0xac4b, gbc.sp());
        EXPECT(0x75a8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C7 026C
        gbc.setState(0xbb0d, 0x913b, 0xbd40, 0xd620, 0x4bee, 0xcb0b, 0x0, 0x0);
        gbc.writeMem(0xbb0d, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x913b, gbc.sp());
        EXPECT(0xbb0f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbb0d));
        EXPECT(0xc7, gbc.readMem(0xbb0e));
        // CB C7 026D
        gbc.setState(0x4011, 0x307c, 0x9380, 0xb809, 0x9d52, 0x4d47, 0x1, 0x1);
        gbc.writeMem(0x4011, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x307c, gbc.sp());
        EXPECT(0x4013, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C7 026E
        gbc.setState(0xe4a2, 0xa6aa, 0x7a50, 0x3b2e, 0x83f5, 0xbcd5, 0x0, 0x0);
        gbc.writeMem(0xe4a2, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0xa6aa, gbc.sp());
        EXPECT(0xe4a4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe4a2));
        EXPECT(0xc7, gbc.readMem(0xe4a3));
        // CB C7 026F
        gbc.setState(0x5e1b, 0x50bf, 0xe6a0, 0xb677, 0x2f04, 0xe80d, 0x1, 0x1);
        gbc.writeMem(0x5e1b, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x50bf, gbc.sp());
        EXPECT(0x5e1d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C7 0271
        gbc.setState(0x4f8d, 0xd623, 0xdf20, 0xfc39, 0x586e, 0xd009, 0x1, 0x1);
        gbc.writeMem(0x4f8d, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0xd623, gbc.sp());
        EXPECT(0x4f8f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C7 0272
        gbc.setState(0xb5c5, 0x99fc, 0xcb40, 0xe874, 0x6c06, 0xfbf9, 0x1, 0x0);
        gbc.writeMem(0xb5c5, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x99fc, gbc.sp());
        EXPECT(0xb5c7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb5c5));
        EXPECT(0xc7, gbc.readMem(0xb5c6));
        // CB C7 0273
        gbc.setState(0x9ca1, 0x1c57, 0xedc0, 0x4631, 0x996d, 0xcfa9, 0x0, 0x1);
        gbc.writeMem(0x9ca1, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x1c57, gbc.sp());
        EXPECT(0x9ca3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9ca1));
        EXPECT(0xc7, gbc.readMem(0x9ca2));
        // CB C7 0274
        gbc.setState(0x2b60, 0xb258, 0x34b0, 0x7bbc, 0x3116, 0x6f99, 0x0, 0x0);
        gbc.writeMem(0x2b60, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0xb258, gbc.sp());
        EXPECT(0x2b62, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C7 0275
        gbc.setState(0x5691, 0xbf55, 0xf8a0, 0xda94, 0xb4ea, 0x4f15, 0x1, 0x1);
        gbc.writeMem(0x5691, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0xbf55, gbc.sp());
        EXPECT(0x5693, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C7 0276
        gbc.setState(0xecd9, 0xc1c0, 0x6740, 0xe0e, 0x8bc6, 0xfc3b, 0x0, 0x1);
        gbc.writeMem(0xecd9, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0xc1c0, gbc.sp());
        EXPECT(0xecdb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xecd9));
        EXPECT(0xc7, gbc.readMem(0xecda));
        // CB C7 0277
        gbc.setState(0x1a1a, 0x11e7, 0x4260, 0xb097, 0xdc9d, 0x7fbd, 0x1, 0x0);
        gbc.writeMem(0x1a1a, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x11e7, gbc.sp());
        EXPECT(0x1a1c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C7 0278
        gbc.setState(0x5ec8, 0xe1f2, 0x1100, 0x55d5, 0x2790, 0xb763, 0x1, 0x1);
        gbc.writeMem(0x5ec8, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0xe1f2, gbc.sp());
        EXPECT(0x5eca, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C7 0279
        gbc.setState(0x3065, 0x931, 0x9a50, 0x7ee6, 0x808f, 0x6c60, 0x1, 0x0);
        gbc.writeMem(0x3065, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x931, gbc.sp());
        EXPECT(0x3067, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C7 027A
        gbc.setState(0xb646, 0xa1a8, 0xcd20, 0xd9a9, 0xb6a5, 0x68e8, 0x0, 0x1);
        gbc.writeMem(0xb646, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0xa1a8, gbc.sp());
        EXPECT(0xb648, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb646));
        EXPECT(0xc7, gbc.readMem(0xb647));
        // CB C7 027B
        gbc.setState(0x62b7, 0x784e, 0x1d60, 0xc07, 0xe22c, 0x6e6b, 0x1, 0x1);
        gbc.writeMem(0x62b7, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x784e, gbc.sp());
        EXPECT(0x62b9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C7 027C
        gbc.setState(0xa063, 0xe56, 0xdf90, 0xdc23, 0x345e, 0xfc73, 0x0, 0x1);
        gbc.writeMem(0xa063, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0xe56, gbc.sp());
        EXPECT(0xa065, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa063));
        EXPECT(0xc7, gbc.readMem(0xa064));
        // CB C7 027D
        gbc.setState(0x2b4b, 0xc261, 0xb4e0, 0x4e1c, 0xa408, 0x2235, 0x1, 0x1);
        gbc.writeMem(0x2b4b, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0xc261, gbc.sp());
        EXPECT(0x2b4d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C7 027E
        gbc.setState(0x31a6, 0x3414, 0xe460, 0x5ff9, 0x73e2, 0xb0cc, 0x1, 0x0);
        gbc.writeMem(0x31a6, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x3414, gbc.sp());
        EXPECT(0x31a8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C7 027F
        gbc.setState(0x3bb5, 0x4c98, 0xe1b0, 0x5ede, 0x41e8, 0x3427, 0x0, 0x0);
        gbc.writeMem(0x3bb5, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x4c98, gbc.sp());
        EXPECT(0x3bb7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C7 0280
        gbc.setState(0xde93, 0xd3dd, 0x29e0, 0x1531, 0x4fd2, 0x4df2, 0x0, 0x1);
        gbc.writeMem(0xde93, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0xd3dd, gbc.sp());
        EXPECT(0xde95, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xde93));
        EXPECT(0xc7, gbc.readMem(0xde94));
        // CB C7 0281
        gbc.setState(0x53ca, 0xac7f, 0xfbd0, 0x7f4c, 0x8fa1, 0xf535, 0x0, 0x1);
        gbc.writeMem(0x53ca, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0xac7f, gbc.sp());
        EXPECT(0x53cc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C7 0282
        gbc.setState(0xa7a1, 0x4fc1, 0x4e40, 0x503a, 0xccc7, 0xc1d9, 0x0, 0x1);
        gbc.writeMem(0xa7a1, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x4fc1, gbc.sp());
        EXPECT(0xa7a3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa7a1));
        EXPECT(0xc7, gbc.readMem(0xa7a2));
        // CB C7 0283
        gbc.setState(0x9976, 0xbc28, 0xd460, 0x555f, 0x279f, 0xbc54, 0x1, 0x0);
        gbc.writeMem(0x9976, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0xbc28, gbc.sp());
        EXPECT(0x9978, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9976));
        EXPECT(0xc7, gbc.readMem(0x9977));
        // CB C7 0284
        gbc.setState(0x74d0, 0xbed1, 0x1980, 0xde, 0x9805, 0xf841, 0x0, 0x1);
        gbc.writeMem(0x74d0, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0xbed1, gbc.sp());
        EXPECT(0x74d2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C7 0285
        gbc.setState(0xaad7, 0xa657, 0x7080, 0xb6ad, 0xcab1, 0x6a8a, 0x1, 0x0);
        gbc.writeMem(0xaad7, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0xa657, gbc.sp());
        EXPECT(0xaad9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaad7));
        EXPECT(0xc7, gbc.readMem(0xaad8));
        // CB C7 0286
        gbc.setState(0x3909, 0xb63b, 0x5ca0, 0xc9b9, 0x610c, 0x77bf, 0x1, 0x0);
        gbc.writeMem(0x3909, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0xb63b, gbc.sp());
        EXPECT(0x390b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C7 0287
        gbc.setState(0xe5c8, 0xff4c, 0x8700, 0x93fc, 0x2a9e, 0x7fc, 0x1, 0x1);
        gbc.writeMem(0xe5c8, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0xff4c, gbc.sp());
        EXPECT(0xe5ca, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe5c8));
        EXPECT(0xc7, gbc.readMem(0xe5c9));
        // CB C7 0288
        gbc.setState(0xab77, 0x8fec, 0xe2b0, 0x3ab2, 0xf909, 0xb5f1, 0x1, 0x1);
        gbc.writeMem(0xab77, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x8fec, gbc.sp());
        EXPECT(0xab79, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xab77));
        EXPECT(0xc7, gbc.readMem(0xab78));
        // CB C7 0289
        gbc.setState(0x968f, 0x3733, 0xdeb0, 0xc2db, 0xac38, 0xace6, 0x1, 0x1);
        gbc.writeMem(0x968f, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x3733, gbc.sp());
        EXPECT(0x9691, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x968f));
        EXPECT(0xc7, gbc.readMem(0x9690));
        // CB C7 028A
        gbc.setState(0xb584, 0xdf93, 0xfd70, 0x9bab, 0x7c6d, 0x393, 0x1, 0x1);
        gbc.writeMem(0xb584, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0xdf93, gbc.sp());
        EXPECT(0xb586, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb584));
        EXPECT(0xc7, gbc.readMem(0xb585));
        // CB C7 028B
        gbc.setState(0xa0f9, 0x1f2c, 0x1930, 0x9246, 0xbdcc, 0x771a, 0x1, 0x0);
        gbc.writeMem(0xa0f9, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x1f2c, gbc.sp());
        EXPECT(0xa0fb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa0f9));
        EXPECT(0xc7, gbc.readMem(0xa0fa));
        // CB C7 028C
        gbc.setState(0x171c, 0xac3b, 0x5350, 0x1819, 0xd646, 0xa055, 0x1, 0x1);
        gbc.writeMem(0x171c, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0xac3b, gbc.sp());
        EXPECT(0x171e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C7 028D
        gbc.setState(0x2e6, 0x8e0f, 0x1ac0, 0xa1df, 0xab5c, 0x20dc, 0x1, 0x0);
        gbc.writeMem(0x2e6, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x8e0f, gbc.sp());
        EXPECT(0x2e8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C7 028E
        gbc.setState(0xb396, 0xecfb, 0x6840, 0xc54e, 0x7f11, 0x5562, 0x0, 0x1);
        gbc.writeMem(0xb396, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0xecfb, gbc.sp());
        EXPECT(0xb398, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb396));
        EXPECT(0xc7, gbc.readMem(0xb397));
        // CB C7 028F
        gbc.setState(0xccfa, 0x6095, 0xa7a0, 0x3221, 0xcc11, 0x11b5, 0x1, 0x0);
        gbc.writeMem(0xccfa, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x6095, gbc.sp());
        EXPECT(0xccfc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xccfa));
        EXPECT(0xc7, gbc.readMem(0xccfb));
        // CB C7 0290
        gbc.setState(0xbd19, 0xaf59, 0xb8f0, 0xbc42, 0x691c, 0x5a0a, 0x1, 0x0);
        gbc.writeMem(0xbd19, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0xaf59, gbc.sp());
        EXPECT(0xbd1b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbd19));
        EXPECT(0xc7, gbc.readMem(0xbd1a));
        // CB C7 0291
        gbc.setState(0x1570, 0x1d3b, 0xa600, 0x95e1, 0x9bd4, 0xe11e, 0x0, 0x1);
        gbc.writeMem(0x1570, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x1d3b, gbc.sp());
        EXPECT(0x1572, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C7 0294
        gbc.setState(0x5bfc, 0x188c, 0xf290, 0x2486, 0x178f, 0x28cd, 0x0, 0x0);
        gbc.writeMem(0x5bfc, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x188c, gbc.sp());
        EXPECT(0x5bfe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C7 0295
        gbc.setState(0x86e5, 0x62d0, 0x9de0, 0xdd26, 0x64aa, 0xbd41, 0x0, 0x1);
        gbc.writeMem(0x86e5, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x62d0, gbc.sp());
        EXPECT(0x86e7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x86e5));
        EXPECT(0xc7, gbc.readMem(0x86e6));
        // CB C7 0296
        gbc.setState(0xa0ec, 0x62a2, 0x3bf0, 0x7d22, 0x6b2f, 0x2762, 0x1, 0x0);
        gbc.writeMem(0xa0ec, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x62a2, gbc.sp());
        EXPECT(0xa0ee, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa0ec));
        EXPECT(0xc7, gbc.readMem(0xa0ed));
        // CB C7 0297
        gbc.setState(0xd439, 0x24d5, 0x7e30, 0x960, 0x1bb, 0x9aac, 0x1, 0x1);
        gbc.writeMem(0xd439, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x24d5, gbc.sp());
        EXPECT(0xd43b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd439));
        EXPECT(0xc7, gbc.readMem(0xd43a));
        // CB C7 0298
        gbc.setState(0x3856, 0x76e4, 0x6950, 0x13d8, 0x3ded, 0xc822, 0x0, 0x1);
        gbc.writeMem(0x3856, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x76e4, gbc.sp());
        EXPECT(0x3858, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C7 0299
        gbc.setState(0x66ed, 0xbd1d, 0xbff0, 0x8b48, 0x84f2, 0x7352, 0x0, 0x1);
        gbc.writeMem(0x66ed, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0xbd1d, gbc.sp());
        EXPECT(0x66ef, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C7 029A
        gbc.setState(0x82b4, 0x5e18, 0x3dc0, 0xffac, 0x7cc0, 0x5d28, 0x1, 0x1);
        gbc.writeMem(0x82b4, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x5e18, gbc.sp());
        EXPECT(0x82b6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x82b4));
        EXPECT(0xc7, gbc.readMem(0x82b5));
        // CB C7 029B
        gbc.setState(0xbdfc, 0x32b9, 0x34b0, 0xe5a0, 0xa103, 0xa84f, 0x0, 0x0);
        gbc.writeMem(0xbdfc, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x32b9, gbc.sp());
        EXPECT(0xbdfe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbdfc));
        EXPECT(0xc7, gbc.readMem(0xbdfd));
        // CB C7 029C
        gbc.setState(0x613, 0xeede, 0x7380, 0x566b, 0x1358, 0x374e, 0x1, 0x0);
        gbc.writeMem(0x613, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0xeede, gbc.sp());
        EXPECT(0x615, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C7 029D
        gbc.setState(0x13c9, 0x26d, 0x3bb0, 0x5efd, 0x4909, 0x18f1, 0x0, 0x0);
        gbc.writeMem(0x13c9, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x26d, gbc.sp());
        EXPECT(0x13cb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C7 029E
        gbc.setState(0x35fb, 0x5b2c, 0xc160, 0x10f9, 0x8b68, 0x476a, 0x1, 0x1);
        gbc.writeMem(0x35fb, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x5b2c, gbc.sp());
        EXPECT(0x35fd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C7 029F
        gbc.setState(0x176b, 0xea16, 0x7390, 0x51fd, 0x5938, 0xf6c3, 0x0, 0x0);
        gbc.writeMem(0x176b, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0xea16, gbc.sp());
        EXPECT(0x176d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C7 02A0
        gbc.setState(0x5ade, 0x6d3f, 0x5ca0, 0x629, 0x781e, 0xa18f, 0x1, 0x0);
        gbc.writeMem(0x5ade, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x6d3f, gbc.sp());
        EXPECT(0x5ae0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C7 02A1
        gbc.setState(0x99b5, 0x4558, 0x9ce0, 0x25ec, 0x5655, 0x6b5a, 0x1, 0x1);
        gbc.writeMem(0x99b5, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x4558, gbc.sp());
        EXPECT(0x99b7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x99b5));
        EXPECT(0xc7, gbc.readMem(0x99b6));
        // CB C7 02A2
        gbc.setState(0x62df, 0x25dc, 0x5b10, 0xd5ba, 0x57e5, 0x98b6, 0x1, 0x1);
        gbc.writeMem(0x62df, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x25dc, gbc.sp());
        EXPECT(0x62e1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C7 02A3
        gbc.setState(0x1170, 0x70e3, 0x35e0, 0xc15f, 0x2471, 0x79db, 0x0, 0x1);
        gbc.writeMem(0x1170, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x70e3, gbc.sp());
        EXPECT(0x1172, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C7 02A4
        gbc.setState(0xbd08, 0xe1b1, 0x9f00, 0x50b3, 0x5b96, 0x7b51, 0x0, 0x0);
        gbc.writeMem(0xbd08, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0xe1b1, gbc.sp());
        EXPECT(0xbd0a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbd08));
        EXPECT(0xc7, gbc.readMem(0xbd09));
        // CB C7 02A5
        gbc.setState(0xbfc, 0xae14, 0xb180, 0x68ac, 0xce46, 0x243e, 0x0, 0x1);
        gbc.writeMem(0xbfc, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0xae14, gbc.sp());
        EXPECT(0xbfe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C7 02A6
        gbc.setState(0x8cf4, 0xe717, 0xc980, 0x5c9e, 0xe785, 0x2097, 0x1, 0x1);
        gbc.writeMem(0x8cf4, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0xe717, gbc.sp());
        EXPECT(0x8cf6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8cf4));
        EXPECT(0xc7, gbc.readMem(0x8cf5));
        // CB C7 02A7
        gbc.setState(0x47c7, 0xf507, 0x7d20, 0x59ea, 0xf116, 0x1147, 0x1, 0x1);
        gbc.writeMem(0x47c7, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0xf507, gbc.sp());
        EXPECT(0x47c9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C7 02A8
        gbc.setState(0xeaea, 0xbf67, 0xff80, 0x4ff6, 0xa581, 0x276, 0x1, 0x0);
        gbc.writeMem(0xeaea, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0xbf67, gbc.sp());
        EXPECT(0xeaec, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeaea));
        EXPECT(0xc7, gbc.readMem(0xeaeb));
        // CB C7 02A9
        gbc.setState(0xe96b, 0xa92b, 0x7cb0, 0x1a2c, 0x948c, 0x484e, 0x0, 0x0);
        gbc.writeMem(0xe96b, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0xa92b, gbc.sp());
        EXPECT(0xe96d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe96b));
        EXPECT(0xc7, gbc.readMem(0xe96c));
        // CB C7 02AB
        gbc.setState(0xa083, 0xc1cd, 0x7d80, 0xfedc, 0xf0c4, 0xe6eb, 0x0, 0x1);
        gbc.writeMem(0xa083, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0xc1cd, gbc.sp());
        EXPECT(0xa085, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa083));
        EXPECT(0xc7, gbc.readMem(0xa084));
        // CB C7 02AC
        gbc.setState(0xc278, 0x605f, 0x5870, 0x6e8b, 0xea3a, 0x38cf, 0x1, 0x1);
        gbc.writeMem(0xc278, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x605f, gbc.sp());
        EXPECT(0xc27a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc278));
        EXPECT(0xc7, gbc.readMem(0xc279));
        // CB C7 02AD
        gbc.setState(0x6b26, 0x94aa, 0x3740, 0x1476, 0x54f0, 0xa523, 0x0, 0x0);
        gbc.writeMem(0x6b26, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x94aa, gbc.sp());
        EXPECT(0x6b28, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C7 02AE
        gbc.setState(0x9e3e, 0x606, 0xe5d0, 0x85d6, 0x2a61, 0xf8c7, 0x1, 0x1);
        gbc.writeMem(0x9e3e, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x606, gbc.sp());
        EXPECT(0x9e40, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9e3e));
        EXPECT(0xc7, gbc.readMem(0x9e3f));
        // CB C7 02AF
        gbc.setState(0xe74d, 0x1700, 0x6730, 0x578f, 0x8b9c, 0x7225, 0x0, 0x0);
        gbc.writeMem(0xe74d, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x1700, gbc.sp());
        EXPECT(0xe74f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe74d));
        EXPECT(0xc7, gbc.readMem(0xe74e));
        // CB C7 02B0
        gbc.setState(0x6004, 0xc64b, 0x3870, 0xe631, 0x39bb, 0xd262, 0x0, 0x1);
        gbc.writeMem(0x6004, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0xc64b, gbc.sp());
        EXPECT(0x6006, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C7 02B1
        gbc.setState(0x2868, 0x48d4, 0x94a0, 0xe8de, 0x44be, 0x3954, 0x1, 0x0);
        gbc.writeMem(0x2868, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x48d4, gbc.sp());
        EXPECT(0x286a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C7 02B2
        gbc.setState(0xabb2, 0x3828, 0xc900, 0xeee2, 0x25a, 0x98f, 0x1, 0x0);
        gbc.writeMem(0xabb2, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x3828, gbc.sp());
        EXPECT(0xabb4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xabb2));
        EXPECT(0xc7, gbc.readMem(0xabb3));
        // CB C7 02B3
        gbc.setState(0xb627, 0x3264, 0x3e70, 0x6d31, 0x4742, 0x3c1, 0x0, 0x1);
        gbc.writeMem(0xb627, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x3264, gbc.sp());
        EXPECT(0xb629, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb627));
        EXPECT(0xc7, gbc.readMem(0xb628));
        // CB C7 02B4
        gbc.setState(0x1488, 0x4a9b, 0xa1e0, 0xa325, 0xefde, 0x71fb, 0x1, 0x1);
        gbc.writeMem(0x1488, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x4a9b, gbc.sp());
        EXPECT(0x148a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C7 02B5
        gbc.setState(0x4acd, 0x6d53, 0x5cd0, 0x4e19, 0x2077, 0xb5ec, 0x1, 0x0);
        gbc.writeMem(0x4acd, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x6d53, gbc.sp());
        EXPECT(0x4acf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C7 02B6
        gbc.setState(0x3211, 0x987a, 0x96a0, 0x15e3, 0x22a7, 0x2781, 0x0, 0x1);
        gbc.writeMem(0x3211, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x987a, gbc.sp());
        EXPECT(0x3213, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C7 02B7
        gbc.setState(0x65a7, 0xa1a0, 0x8730, 0xb632, 0x6d44, 0xed68, 0x0, 0x0);
        gbc.writeMem(0x65a7, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0xa1a0, gbc.sp());
        EXPECT(0x65a9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C7 02B8
        gbc.setState(0xd00c, 0xaadb, 0x82d0, 0xade4, 0x70f7, 0x3647, 0x0, 0x1);
        gbc.writeMem(0xd00c, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0xaadb, gbc.sp());
        EXPECT(0xd00e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd00c));
        EXPECT(0xc7, gbc.readMem(0xd00d));
        // CB C7 02B9
        gbc.setState(0x5613, 0x71e5, 0x9e20, 0x8c87, 0x6e13, 0xd6fa, 0x0, 0x1);
        gbc.writeMem(0x5613, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0x71e5, gbc.sp());
        EXPECT(0x5615, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C7 02BB
        gbc.setState(0xd380, 0x93d1, 0xa070, 0xefbd, 0xc81e, 0x4a02, 0x0, 0x0);
        gbc.writeMem(0xd380, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x93d1, gbc.sp());
        EXPECT(0xd382, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd380));
        EXPECT(0xc7, gbc.readMem(0xd381));
        // CB C7 02BC
        gbc.setState(0x6dc4, 0xc8dc, 0x2a90, 0xad3d, 0x1c71, 0x6d15, 0x0, 0x1);
        gbc.writeMem(0x6dc4, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0xc8dc, gbc.sp());
        EXPECT(0x6dc6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C7 02BD
        gbc.setState(0x3550, 0x8bfe, 0xbe40, 0x4f6a, 0xd74a, 0xb95, 0x0, 0x0);
        gbc.writeMem(0x3550, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x8bfe, gbc.sp());
        EXPECT(0x3552, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C7 02BE
        gbc.setState(0x2940, 0x4c8, 0x94a0, 0x7dbb, 0x3567, 0x1ed8, 0x1, 0x1);
        gbc.writeMem(0x2940, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x4c8, gbc.sp());
        EXPECT(0x2942, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C7 02BF
        gbc.setState(0xe136, 0xbde1, 0xa330, 0x6c76, 0xe924, 0xce08, 0x0, 0x0);
        gbc.writeMem(0xe136, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0xbde1, gbc.sp());
        EXPECT(0xe138, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe136));
        EXPECT(0xc7, gbc.readMem(0xe137));
        // CB C7 02C0
        gbc.setState(0x6a1a, 0x6a, 0x34e0, 0x754b, 0x5445, 0x38c1, 0x1, 0x1);
        gbc.writeMem(0x6a1a, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x6a, gbc.sp());
        EXPECT(0x6a1c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C7 02C1
        gbc.setState(0x443b, 0x9e61, 0xab70, 0x6aa6, 0xb025, 0x1c45, 0x1, 0x0);
        gbc.writeMem(0x443b, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x9e61, gbc.sp());
        EXPECT(0x443d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C7 02C3
        gbc.setState(0x3cf5, 0xe1a7, 0x9870, 0x8a61, 0xcd84, 0x9ee5, 0x0, 0x0);
        gbc.writeMem(0x3cf5, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0xe1a7, gbc.sp());
        EXPECT(0x3cf7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C7 02C4
        gbc.setState(0x9916, 0xa757, 0x4a80, 0x6072, 0xef3, 0xde1, 0x1, 0x1);
        gbc.writeMem(0x9916, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0xa757, gbc.sp());
        EXPECT(0x9918, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9916));
        EXPECT(0xc7, gbc.readMem(0x9917));
        // CB C7 02C5
        gbc.setState(0xca6f, 0xc98d, 0x410, 0xe727, 0x921, 0x2202, 0x1, 0x1);
        gbc.writeMem(0xca6f, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0xc98d, gbc.sp());
        EXPECT(0xca71, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xca6f));
        EXPECT(0xc7, gbc.readMem(0xca70));
        // CB C7 02C6
        gbc.setState(0x5360, 0xb7a, 0x1fc0, 0x5c33, 0x5202, 0xfe30, 0x1, 0x0);
        gbc.writeMem(0x5360, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0xb7a, gbc.sp());
        EXPECT(0x5362, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C7 02C7
        gbc.setState(0x7553, 0x9866, 0x4d00, 0x1c30, 0xebb0, 0x77fa, 0x0, 0x1);
        gbc.writeMem(0x7553, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0x9866, gbc.sp());
        EXPECT(0x7555, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C7 02C8
        gbc.setState(0x26ba, 0x1fb3, 0x39c0, 0x4b5b, 0xa349, 0x5c18, 0x1, 0x0);
        gbc.writeMem(0x26ba, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x1fb3, gbc.sp());
        EXPECT(0x26bc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C7 02C9
        gbc.setState(0x19a9, 0x51a4, 0xf80, 0x7865, 0x4e0f, 0x3aa9, 0x0, 0x0);
        gbc.writeMem(0x19a9, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x51a4, gbc.sp());
        EXPECT(0x19ab, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C7 02CA
        gbc.setState(0x3170, 0x918, 0xd490, 0x923c, 0xc5f7, 0x5565, 0x0, 0x0);
        gbc.writeMem(0x3170, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x918, gbc.sp());
        EXPECT(0x3172, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C7 02CB
        gbc.setState(0x8c87, 0xd071, 0x3cc0, 0xb0d9, 0x600f, 0x6c1b, 0x1, 0x0);
        gbc.writeMem(0x8c87, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0xd071, gbc.sp());
        EXPECT(0x8c89, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8c87));
        EXPECT(0xc7, gbc.readMem(0x8c88));
        // CB C7 02CC
        gbc.setState(0x3f45, 0x5120, 0x1a10, 0x83a3, 0xd87a, 0xdc2b, 0x1, 0x1);
        gbc.writeMem(0x3f45, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x5120, gbc.sp());
        EXPECT(0x3f47, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C7 02CD
        gbc.setState(0x62ec, 0xbe8d, 0x8da0, 0x5c1a, 0x171b, 0xd686, 0x1, 0x0);
        gbc.writeMem(0x62ec, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0xbe8d, gbc.sp());
        EXPECT(0x62ee, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C7 02CE
        gbc.setState(0x3cd3, 0xbc5, 0xbb80, 0x7399, 0x1ea2, 0xd4a0, 0x0, 0x0);
        gbc.writeMem(0x3cd3, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0xbc5, gbc.sp());
        EXPECT(0x3cd5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C7 02D0
        gbc.setState(0x8fd1, 0xf68c, 0x14b0, 0x4613, 0xecf1, 0xfc0c, 0x0, 0x0);
        gbc.writeMem(0x8fd1, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0xf68c, gbc.sp());
        EXPECT(0x8fd3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8fd1));
        EXPECT(0xc7, gbc.readMem(0x8fd2));
        // CB C7 02D1
        gbc.setState(0x9158, 0xdc53, 0xfc10, 0x40a, 0x5d9f, 0x6304, 0x1, 0x1);
        gbc.writeMem(0x9158, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0xdc53, gbc.sp());
        EXPECT(0x915a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9158));
        EXPECT(0xc7, gbc.readMem(0x9159));
        // CB C7 02D3
        gbc.setState(0x8fc6, 0x97fd, 0x2f50, 0x43ce, 0x28e4, 0xa556, 0x1, 0x1);
        gbc.writeMem(0x8fc6, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0x97fd, gbc.sp());
        EXPECT(0x8fc8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8fc6));
        EXPECT(0xc7, gbc.readMem(0x8fc7));
        // CB C7 02D4
        gbc.setState(0x24d1, 0x7272, 0x1aa0, 0x6544, 0xac29, 0xe2c1, 0x0, 0x1);
        gbc.writeMem(0x24d1, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x7272, gbc.sp());
        EXPECT(0x24d3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C7 02D6
        gbc.setState(0xe8c7, 0x24b4, 0xab70, 0xa69f, 0xf215, 0x7d93, 0x0, 0x0);
        gbc.writeMem(0xe8c7, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0x24b4, gbc.sp());
        EXPECT(0xe8c9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe8c7));
        EXPECT(0xc7, gbc.readMem(0xe8c8));
        // CB C7 02D7
        gbc.setState(0xc331, 0xb54e, 0x7ab0, 0xfcf1, 0x27ba, 0x932e, 0x0, 0x0);
        gbc.writeMem(0xc331, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0xb54e, gbc.sp());
        EXPECT(0xc333, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc331));
        EXPECT(0xc7, gbc.readMem(0xc332));
        // CB C7 02D8
        gbc.setState(0x212c, 0xa1b7, 0xf5f0, 0x9c1b, 0xada2, 0xb8c7, 0x0, 0x0);
        gbc.writeMem(0x212c, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0xa1b7, gbc.sp());
        EXPECT(0x212e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C7 02D9
        gbc.setState(0xd78c, 0x73f8, 0x44a0, 0x8c3f, 0xc8b3, 0x4bcd, 0x0, 0x0);
        gbc.writeMem(0xd78c, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x73f8, gbc.sp());
        EXPECT(0xd78e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd78c));
        EXPECT(0xc7, gbc.readMem(0xd78d));
        // CB C7 02DA
        gbc.setState(0x5a1, 0x1d4d, 0x9940, 0x91e5, 0x9273, 0x6479, 0x0, 0x0);
        gbc.writeMem(0x5a1, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x1d4d, gbc.sp());
        EXPECT(0x5a3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C7 02DB
        gbc.setState(0x9d1b, 0x742f, 0xb7d0, 0x51e0, 0x938b, 0xe644, 0x0, 0x1);
        gbc.writeMem(0x9d1b, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x742f, gbc.sp());
        EXPECT(0x9d1d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9d1b));
        EXPECT(0xc7, gbc.readMem(0x9d1c));
        // CB C7 02DC
        gbc.setState(0xab8, 0xee4c, 0xd480, 0xa34b, 0x5c2a, 0xc3fa, 0x0, 0x1);
        gbc.writeMem(0xab8, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0xee4c, gbc.sp());
        EXPECT(0xaba, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C7 02DD
        gbc.setState(0xe47d, 0x536a, 0xb660, 0x786d, 0xd857, 0xf605, 0x0, 0x1);
        gbc.writeMem(0xe47d, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x536a, gbc.sp());
        EXPECT(0xe47f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe47d));
        EXPECT(0xc7, gbc.readMem(0xe47e));
        // CB C7 02DE
        gbc.setState(0xc01e, 0xb3c, 0x8740, 0xd044, 0x789b, 0x1151, 0x0, 0x1);
        gbc.writeMem(0xc01e, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0xb3c, gbc.sp());
        EXPECT(0xc020, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc01e));
        EXPECT(0xc7, gbc.readMem(0xc01f));
        // CB C7 02DF
        gbc.setState(0xafc8, 0x4d98, 0xadd0, 0xf44b, 0xb9f7, 0x6ac0, 0x1, 0x0);
        gbc.writeMem(0xafc8, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x4d98, gbc.sp());
        EXPECT(0xafca, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xafc8));
        EXPECT(0xc7, gbc.readMem(0xafc9));
        // CB C7 02E0
        gbc.setState(0x3932, 0xf7f, 0xe750, 0x24da, 0x43a1, 0xf950, 0x1, 0x0);
        gbc.writeMem(0x3932, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0xf7f, gbc.sp());
        EXPECT(0x3934, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C7 02E1
        gbc.setState(0x149b, 0x1d9a, 0x4150, 0x4613, 0xedcb, 0x7874, 0x0, 0x1);
        gbc.writeMem(0x149b, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x1d9a, gbc.sp());
        EXPECT(0x149d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C7 02E2
        gbc.setState(0xbe96, 0xe532, 0xdf50, 0x93d8, 0xef00, 0x2e14, 0x1, 0x0);
        gbc.writeMem(0xbe96, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0xe532, gbc.sp());
        EXPECT(0xbe98, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbe96));
        EXPECT(0xc7, gbc.readMem(0xbe97));
        // CB C7 02E3
        gbc.setState(0x6d53, 0x69b9, 0x3b40, 0x94c9, 0xf964, 0xbcff, 0x1, 0x1);
        gbc.writeMem(0x6d53, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x69b9, gbc.sp());
        EXPECT(0x6d55, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C7 02E4
        gbc.setState(0x32c6, 0x5500, 0x29a0, 0xa500, 0x56a9, 0xc0a9, 0x0, 0x0);
        gbc.writeMem(0x32c6, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x5500, gbc.sp());
        EXPECT(0x32c8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C7 02E5
        gbc.setState(0xb90c, 0x3fc1, 0x3560, 0x8da7, 0xf94b, 0x2c47, 0x0, 0x1);
        gbc.writeMem(0xb90c, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x3fc1, gbc.sp());
        EXPECT(0xb90e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb90c));
        EXPECT(0xc7, gbc.readMem(0xb90d));
        // CB C7 02E6
        gbc.setState(0xe56, 0xcd4f, 0xdb40, 0x708a, 0xb6de, 0x3a8d, 0x0, 0x1);
        gbc.writeMem(0xe56, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0xcd4f, gbc.sp());
        EXPECT(0xe58, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C7 02E8
        gbc.setState(0xeb36, 0xde72, 0x2380, 0x62f3, 0x6bf5, 0x6136, 0x0, 0x1);
        gbc.writeMem(0xeb36, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0xde72, gbc.sp());
        EXPECT(0xeb38, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeb36));
        EXPECT(0xc7, gbc.readMem(0xeb37));
        // CB C7 02E9
        gbc.setState(0x3714, 0xe14, 0xd300, 0xd1ae, 0xcf15, 0x8599, 0x0, 0x0);
        gbc.writeMem(0x3714, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0xe14, gbc.sp());
        EXPECT(0x3716, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C7 02EA
        gbc.setState(0xe97b, 0xfac1, 0xcd50, 0x2662, 0x9044, 0xd1a6, 0x1, 0x1);
        gbc.writeMem(0xe97b, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0xfac1, gbc.sp());
        EXPECT(0xe97d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe97b));
        EXPECT(0xc7, gbc.readMem(0xe97c));
        // CB C7 02EB
        gbc.setState(0xe7bb, 0xfaa5, 0x8900, 0x43c7, 0xea3c, 0x6dfa, 0x1, 0x1);
        gbc.writeMem(0xe7bb, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0xfaa5, gbc.sp());
        EXPECT(0xe7bd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe7bb));
        EXPECT(0xc7, gbc.readMem(0xe7bc));
        // CB C7 02ED
        gbc.setState(0x79de, 0x5861, 0x1dc0, 0x426e, 0xbe5d, 0x1571, 0x0, 0x0);
        gbc.writeMem(0x79de, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x5861, gbc.sp());
        EXPECT(0x79e0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C7 02EE
        gbc.setState(0xe755, 0xf53e, 0x2d20, 0x1922, 0x19da, 0x4772, 0x0, 0x0);
        gbc.writeMem(0xe755, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0xf53e, gbc.sp());
        EXPECT(0xe757, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe755));
        EXPECT(0xc7, gbc.readMem(0xe756));
        // CB C7 02F0
        gbc.setState(0x1fd4, 0x872e, 0x8ba0, 0x97eb, 0x445f, 0xf787, 0x1, 0x1);
        gbc.writeMem(0x1fd4, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x872e, gbc.sp());
        EXPECT(0x1fd6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C7 02F1
        gbc.setState(0x9df0, 0x8791, 0x7cd0, 0x9d92, 0xb85a, 0xd27, 0x1, 0x1);
        gbc.writeMem(0x9df0, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x8791, gbc.sp());
        EXPECT(0x9df2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9df0));
        EXPECT(0xc7, gbc.readMem(0x9df1));
        // CB C7 02F2
        gbc.setState(0x1607, 0x40ab, 0xcb20, 0x8119, 0x7b0d, 0x3f47, 0x0, 0x1);
        gbc.writeMem(0x1607, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x40ab, gbc.sp());
        EXPECT(0x1609, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C7 02F3
        gbc.setState(0x56a, 0xcf18, 0xd9d0, 0x50a3, 0x1ce3, 0x486, 0x0, 0x0);
        gbc.writeMem(0x56a, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0xcf18, gbc.sp());
        EXPECT(0x56c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C7 02F4
        gbc.setState(0x71d8, 0x4ccd, 0x9980, 0x4834, 0x92c0, 0x68d7, 0x0, 0x0);
        gbc.writeMem(0x71d8, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0x4ccd, gbc.sp());
        EXPECT(0x71da, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C7 02F5
        gbc.setState(0xe64c, 0x39fd, 0x7950, 0xef19, 0x5848, 0x8761, 0x1, 0x1);
        gbc.writeMem(0xe64c, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x39fd, gbc.sp());
        EXPECT(0xe64e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe64c));
        EXPECT(0xc7, gbc.readMem(0xe64d));
        // CB C7 02F6
        gbc.setState(0xe3a7, 0x60c5, 0xd8e0, 0x5ec2, 0xdf52, 0x69c0, 0x1, 0x1);
        gbc.writeMem(0xe3a7, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x60c5, gbc.sp());
        EXPECT(0xe3a9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe3a7));
        EXPECT(0xc7, gbc.readMem(0xe3a8));
        // CB C7 02F7
        gbc.setState(0xd054, 0x1605, 0xb8a0, 0x56a8, 0x2224, 0x6f16, 0x1, 0x1);
        gbc.writeMem(0xd054, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x1605, gbc.sp());
        EXPECT(0xd056, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd054));
        EXPECT(0xc7, gbc.readMem(0xd055));
        // CB C7 02F8
        gbc.setState(0x4858, 0x58e8, 0x9f50, 0xe3e7, 0x7c8a, 0x9c2b, 0x1, 0x1);
        gbc.writeMem(0x4858, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x58e8, gbc.sp());
        EXPECT(0x485a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C7 02F9
        gbc.setState(0xe57, 0xe6e1, 0x3fc0, 0xba79, 0x1dea, 0xe06c, 0x0, 0x1);
        gbc.writeMem(0xe57, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0xe6e1, gbc.sp());
        EXPECT(0xe59, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C7 02FA
        gbc.setState(0xe2bd, 0x58ba, 0x1ff0, 0x5f16, 0xc09f, 0xeb59, 0x0, 0x1);
        gbc.writeMem(0xe2bd, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x58ba, gbc.sp());
        EXPECT(0xe2bf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe2bd));
        EXPECT(0xc7, gbc.readMem(0xe2be));
        // CB C7 02FB
        gbc.setState(0xc189, 0xaae, 0x5e10, 0x35b2, 0x4274, 0x89b3, 0x1, 0x0);
        gbc.writeMem(0xc189, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0xaae, gbc.sp());
        EXPECT(0xc18b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc189));
        EXPECT(0xc7, gbc.readMem(0xc18a));
        // CB C7 02FC
        gbc.setState(0x4034, 0xea4b, 0x2140, 0x643d, 0xaeb0, 0xf7a, 0x0, 0x0);
        gbc.writeMem(0x4034, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0xea4b, gbc.sp());
        EXPECT(0x4036, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C7 02FD
        gbc.setState(0xe91f, 0x9411, 0xb360, 0xdc26, 0xdb6b, 0x650b, 0x1, 0x0);
        gbc.writeMem(0xe91f, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x9411, gbc.sp());
        EXPECT(0xe921, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe91f));
        EXPECT(0xc7, gbc.readMem(0xe920));
        // CB C7 02FE
        gbc.setState(0xa0eb, 0xd06c, 0xb050, 0x6bef, 0x1be3, 0xd769, 0x1, 0x1);
        gbc.writeMem(0xa0eb, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0xd06c, gbc.sp());
        EXPECT(0xa0ed, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa0eb));
        EXPECT(0xc7, gbc.readMem(0xa0ec));
        // CB C7 02FF
        gbc.setState(0xa168, 0x348e, 0x4570, 0xe978, 0x268c, 0xb231, 0x0, 0x0);
        gbc.writeMem(0xa168, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x348e, gbc.sp());
        EXPECT(0xa16a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa168));
        EXPECT(0xc7, gbc.readMem(0xa169));
        // CB C7 0300
        gbc.setState(0x5768, 0xbd8f, 0x1fb0, 0x101d, 0xa79, 0x7383, 0x1, 0x0);
        gbc.writeMem(0x5768, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0xbd8f, gbc.sp());
        EXPECT(0x576a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C7 0301
        gbc.setState(0x51aa, 0x82d7, 0xcb10, 0x957c, 0xe61, 0xee94, 0x0, 0x1);
        gbc.writeMem(0x51aa, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x82d7, gbc.sp());
        EXPECT(0x51ac, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C7 0302
        gbc.setState(0x2745, 0xb81a, 0x2c20, 0x6cdf, 0x473d, 0x459e, 0x1, 0x0);
        gbc.writeMem(0x2745, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0xb81a, gbc.sp());
        EXPECT(0x2747, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C7 0303
        gbc.setState(0x728c, 0xca12, 0xb180, 0x7a0a, 0xe626, 0x9be3, 0x1, 0x0);
        gbc.writeMem(0x728c, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0xca12, gbc.sp());
        EXPECT(0x728e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C7 0304
        gbc.setState(0xb447, 0x2b37, 0x13d0, 0x6b2c, 0xbaf2, 0x915f, 0x1, 0x1);
        gbc.writeMem(0xb447, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x2b37, gbc.sp());
        EXPECT(0xb449, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb447));
        EXPECT(0xc7, gbc.readMem(0xb448));
        // CB C7 0305
        gbc.setState(0x5ee0, 0x78a7, 0xb4f0, 0x10b, 0xa0b, 0x904e, 0x1, 0x1);
        gbc.writeMem(0x5ee0, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x78a7, gbc.sp());
        EXPECT(0x5ee2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C7 0306
        gbc.setState(0x562d, 0x2ac3, 0x8030, 0x933, 0x77b5, 0x40a0, 0x1, 0x0);
        gbc.writeMem(0x562d, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x2ac3, gbc.sp());
        EXPECT(0x562f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C7 0307
        gbc.setState(0x8b3a, 0x36fb, 0x4b30, 0xe66, 0xb819, 0x5eb8, 0x1, 0x0);
        gbc.writeMem(0x8b3a, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x36fb, gbc.sp());
        EXPECT(0x8b3c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8b3a));
        EXPECT(0xc7, gbc.readMem(0x8b3b));
        // CB C7 0308
        gbc.setState(0x8b40, 0x8f87, 0x85a0, 0xc202, 0x252a, 0x28e6, 0x1, 0x1);
        gbc.writeMem(0x8b40, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x8f87, gbc.sp());
        EXPECT(0x8b42, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8b40));
        EXPECT(0xc7, gbc.readMem(0x8b41));
        // CB C7 0309
        gbc.setState(0xb4bd, 0xfde7, 0xa260, 0xb188, 0x3091, 0x5197, 0x1, 0x0);
        gbc.writeMem(0xb4bd, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0xfde7, gbc.sp());
        EXPECT(0xb4bf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb4bd));
        EXPECT(0xc7, gbc.readMem(0xb4be));
        // CB C7 030A
        gbc.setState(0xa302, 0xe1ff, 0x2270, 0x8ce5, 0xd738, 0x5e7e, 0x1, 0x1);
        gbc.writeMem(0xa302, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0xe1ff, gbc.sp());
        EXPECT(0xa304, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa302));
        EXPECT(0xc7, gbc.readMem(0xa303));
        // CB C7 030B
        gbc.setState(0xb5ff, 0xe275, 0x2000, 0x52a0, 0x6af7, 0x8fff, 0x1, 0x1);
        gbc.writeMem(0xb5ff, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0xe275, gbc.sp());
        EXPECT(0xb601, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb5ff));
        EXPECT(0xc7, gbc.readMem(0xb600));
        // CB C7 030C
        gbc.setState(0x1705, 0xbf71, 0x2f20, 0x55f, 0xb7be, 0xa416, 0x0, 0x1);
        gbc.writeMem(0x1705, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0xbf71, gbc.sp());
        EXPECT(0x1707, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C7 030D
        gbc.setState(0xe795, 0x57c9, 0x6c80, 0xbf63, 0x2555, 0x3abf, 0x0, 0x1);
        gbc.writeMem(0xe795, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x57c9, gbc.sp());
        EXPECT(0xe797, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe795));
        EXPECT(0xc7, gbc.readMem(0xe796));
        // CB C7 030E
        gbc.setState(0x683b, 0x82a0, 0x5be0, 0x9dc7, 0xe5d7, 0xe9e8, 0x1, 0x0);
        gbc.writeMem(0x683b, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x82a0, gbc.sp());
        EXPECT(0x683d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C7 0310
        gbc.setState(0x901e, 0xb1ba, 0x5e30, 0xb0a8, 0x1261, 0xef2a, 0x0, 0x0);
        gbc.writeMem(0x901e, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0xb1ba, gbc.sp());
        EXPECT(0x9020, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x901e));
        EXPECT(0xc7, gbc.readMem(0x901f));
        // CB C7 0311
        gbc.setState(0x1156, 0xefbc, 0xe930, 0xf060, 0x2465, 0x43f1, 0x0, 0x1);
        gbc.writeMem(0x1156, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0xefbc, gbc.sp());
        EXPECT(0x1158, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C7 0313
        gbc.setState(0x7569, 0x8966, 0xa350, 0x32bd, 0xb0cb, 0x9c1a, 0x0, 0x0);
        gbc.writeMem(0x7569, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x8966, gbc.sp());
        EXPECT(0x756b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C7 0314
        gbc.setState(0x429c, 0xd4ba, 0xe7f0, 0xd3de, 0x396d, 0x6f56, 0x0, 0x1);
        gbc.writeMem(0x429c, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0xd4ba, gbc.sp());
        EXPECT(0x429e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C7 0315
        gbc.setState(0xcfac, 0x372, 0xa900, 0x2fbc, 0x629c, 0xe4a3, 0x0, 0x0);
        gbc.writeMem(0xcfac, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0x372, gbc.sp());
        EXPECT(0xcfae, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcfac));
        EXPECT(0xc7, gbc.readMem(0xcfad));
        // CB C7 0316
        gbc.setState(0x490, 0xcdcc, 0x75b0, 0xf590, 0x84d, 0x8a93, 0x0, 0x1);
        gbc.writeMem(0x490, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0xcdcc, gbc.sp());
        EXPECT(0x492, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C7 0317
        gbc.setState(0x78b3, 0x71b8, 0x13c0, 0x4b63, 0xfd72, 0x8c69, 0x0, 0x1);
        gbc.writeMem(0x78b3, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0x71b8, gbc.sp());
        EXPECT(0x78b5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C7 0318
        gbc.setState(0x4c80, 0xc2e5, 0xe220, 0xd070, 0x9896, 0xbe47, 0x0, 0x1);
        gbc.writeMem(0x4c80, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0xc2e5, gbc.sp());
        EXPECT(0x4c82, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C7 0319
        gbc.setState(0x5dd4, 0xd7c0, 0x73d0, 0x76dc, 0x1d32, 0xec61, 0x1, 0x1);
        gbc.writeMem(0x5dd4, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0xd7c0, gbc.sp());
        EXPECT(0x5dd6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C7 031A
        gbc.setState(0xfd6, 0x9171, 0xb460, 0x3b0, 0xc11a, 0x7ad4, 0x0, 0x1);
        gbc.writeMem(0xfd6, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x9171, gbc.sp());
        EXPECT(0xfd8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C7 031B
        gbc.setState(0x9b8c, 0xde0c, 0x2600, 0xb8ff, 0xf1df, 0xcbad, 0x0, 0x0);
        gbc.writeMem(0x9b8c, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0xde0c, gbc.sp());
        EXPECT(0x9b8e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9b8c));
        EXPECT(0xc7, gbc.readMem(0x9b8d));
        // CB C7 031C
        gbc.setState(0x785a, 0x4255, 0x2320, 0xc73d, 0x7fc, 0xdd1a, 0x0, 0x0);
        gbc.writeMem(0x785a, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x4255, gbc.sp());
        EXPECT(0x785c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C7 031D
        gbc.setState(0x98d5, 0xc9f7, 0xaf70, 0x7685, 0x7e6f, 0x99db, 0x1, 0x1);
        gbc.writeMem(0x98d5, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0xc9f7, gbc.sp());
        EXPECT(0x98d7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x98d5));
        EXPECT(0xc7, gbc.readMem(0x98d6));
        // CB C7 031E
        gbc.setState(0xb585, 0x1d73, 0xa040, 0x8c61, 0x13fb, 0xb8f5, 0x0, 0x1);
        gbc.writeMem(0xb585, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x1d73, gbc.sp());
        EXPECT(0xb587, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb585));
        EXPECT(0xc7, gbc.readMem(0xb586));
        // CB C7 031F
        gbc.setState(0x7e38, 0x7b5b, 0xf2a0, 0xb0a, 0xe2b3, 0x5587, 0x0, 0x1);
        gbc.writeMem(0x7e38, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x7b5b, gbc.sp());
        EXPECT(0x7e3a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C7 0320
        gbc.setState(0x2a81, 0xa4dc, 0xa10, 0x221a, 0x1e9a, 0x5cbe, 0x0, 0x1);
        gbc.writeMem(0x2a81, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0xa4dc, gbc.sp());
        EXPECT(0x2a83, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C7 0321
        gbc.setState(0xb494, 0xa96, 0xfa50, 0xfa6d, 0x5a12, 0xb1c1, 0x0, 0x0);
        gbc.writeMem(0xb494, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0xa96, gbc.sp());
        EXPECT(0xb496, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb494));
        EXPECT(0xc7, gbc.readMem(0xb495));
        // CB C7 0322
        gbc.setState(0xe599, 0x8d3a, 0x5980, 0x9b79, 0x725f, 0x7092, 0x0, 0x1);
        gbc.writeMem(0xe599, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x8d3a, gbc.sp());
        EXPECT(0xe59b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe599));
        EXPECT(0xc7, gbc.readMem(0xe59a));
        // CB C7 0323
        gbc.setState(0x6a5b, 0x7e03, 0x28b0, 0xcd47, 0x14ec, 0xf86c, 0x1, 0x1);
        gbc.writeMem(0x6a5b, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x7e03, gbc.sp());
        EXPECT(0x6a5d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C7 0324
        gbc.setState(0xca38, 0x2512, 0x1df0, 0x4b02, 0x5d4e, 0x7ce7, 0x1, 0x0);
        gbc.writeMem(0xca38, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x2512, gbc.sp());
        EXPECT(0xca3a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xca38));
        EXPECT(0xc7, gbc.readMem(0xca39));
        // CB C7 0325
        gbc.setState(0x3d28, 0x5d64, 0xf150, 0x47e8, 0xf656, 0x4aa2, 0x0, 0x1);
        gbc.writeMem(0x3d28, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x5d64, gbc.sp());
        EXPECT(0x3d2a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C7 0326
        gbc.setState(0x25c2, 0xfb74, 0x75e0, 0xa833, 0xf7df, 0x5634, 0x0, 0x1);
        gbc.writeMem(0x25c2, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0xfb74, gbc.sp());
        EXPECT(0x25c4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C7 0327
        gbc.setState(0x79c8, 0x5e9, 0x4ab0, 0xf6aa, 0xc9cc, 0x4adc, 0x0, 0x1);
        gbc.writeMem(0x79c8, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x5e9, gbc.sp());
        EXPECT(0x79ca, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C7 0328
        gbc.setState(0xe773, 0x616e, 0xd8a0, 0x449, 0x497e, 0xf5d5, 0x0, 0x0);
        gbc.writeMem(0xe773, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x616e, gbc.sp());
        EXPECT(0xe775, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe773));
        EXPECT(0xc7, gbc.readMem(0xe774));
        // CB C7 0329
        gbc.setState(0xd63f, 0x4f25, 0xd00, 0x97a6, 0x8678, 0x8a86, 0x0, 0x0);
        gbc.writeMem(0xd63f, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x4f25, gbc.sp());
        EXPECT(0xd641, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd63f));
        EXPECT(0xc7, gbc.readMem(0xd640));
        // CB C7 032A
        gbc.setState(0xa49, 0x2e96, 0x5a80, 0xdf52, 0xcd72, 0xd46c, 0x0, 0x0);
        gbc.writeMem(0xa49, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x2e96, gbc.sp());
        EXPECT(0xa4b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C7 032B
        gbc.setState(0xfc3, 0x6ee9, 0x1c30, 0x8838, 0xe88c, 0xd846, 0x1, 0x1);
        gbc.writeMem(0xfc3, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x6ee9, gbc.sp());
        EXPECT(0xfc5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C7 032C
        gbc.setState(0x9e8f, 0xdabe, 0x82b0, 0xd8d5, 0xa34f, 0x699, 0x1, 0x1);
        gbc.writeMem(0x9e8f, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0xdabe, gbc.sp());
        EXPECT(0x9e91, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9e8f));
        EXPECT(0xc7, gbc.readMem(0x9e90));
        // CB C7 032D
        gbc.setState(0x8ea5, 0xc86a, 0x22b0, 0x6c48, 0x1a7e, 0x9bd4, 0x1, 0x0);
        gbc.writeMem(0x8ea5, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0xc86a, gbc.sp());
        EXPECT(0x8ea7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8ea5));
        EXPECT(0xc7, gbc.readMem(0x8ea6));
        // CB C7 032E
        gbc.setState(0x58f6, 0x5b7d, 0x7290, 0xcfe, 0x7bd2, 0xdd9d, 0x1, 0x1);
        gbc.writeMem(0x58f6, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x5b7d, gbc.sp());
        EXPECT(0x58f8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C7 032F
        gbc.setState(0xa49a, 0x6953, 0x78e0, 0x4bb6, 0x428d, 0xc245, 0x0, 0x0);
        gbc.writeMem(0xa49a, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x6953, gbc.sp());
        EXPECT(0xa49c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa49a));
        EXPECT(0xc7, gbc.readMem(0xa49b));
        // CB C7 0330
        gbc.setState(0xc995, 0x85da, 0x49f0, 0xa578, 0xc211, 0xe165, 0x1, 0x0);
        gbc.writeMem(0xc995, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x85da, gbc.sp());
        EXPECT(0xc997, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc995));
        EXPECT(0xc7, gbc.readMem(0xc996));
        // CB C7 0331
        gbc.setState(0x13b3, 0x3559, 0x1160, 0x68f8, 0x81f3, 0xbbb3, 0x1, 0x1);
        gbc.writeMem(0x13b3, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x3559, gbc.sp());
        EXPECT(0x13b5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C7 0332
        gbc.setState(0x340c, 0x92cd, 0xbb20, 0x70a2, 0xf9b2, 0x819c, 0x0, 0x0);
        gbc.writeMem(0x340c, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x92cd, gbc.sp());
        EXPECT(0x340e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C7 0333
        gbc.setState(0x15d0, 0x145c, 0xdb30, 0xc794, 0x2bf8, 0x8925, 0x0, 0x1);
        gbc.writeMem(0x15d0, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x145c, gbc.sp());
        EXPECT(0x15d2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C7 0334
        gbc.setState(0x38b, 0xcd7a, 0x9850, 0x9ddc, 0x434f, 0x93b7, 0x0, 0x1);
        gbc.writeMem(0x38b, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0xcd7a, gbc.sp());
        EXPECT(0x38d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C7 0335
        gbc.setState(0x9c33, 0x2295, 0xc7b0, 0x853a, 0x8dbb, 0xb0aa, 0x0, 0x0);
        gbc.writeMem(0x9c33, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x2295, gbc.sp());
        EXPECT(0x9c35, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9c33));
        EXPECT(0xc7, gbc.readMem(0x9c34));
        // CB C7 0336
        gbc.setState(0xeafc, 0x6f6a, 0x5300, 0x2d25, 0xe9bb, 0xbe96, 0x1, 0x0);
        gbc.writeMem(0xeafc, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x6f6a, gbc.sp());
        EXPECT(0xeafe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeafc));
        EXPECT(0xc7, gbc.readMem(0xeafd));
        // CB C7 0337
        gbc.setState(0x6588, 0xb971, 0xc130, 0xca3f, 0x8ae7, 0xa618, 0x0, 0x1);
        gbc.writeMem(0x6588, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0xb971, gbc.sp());
        EXPECT(0x658a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C7 0338
        gbc.setState(0x3091, 0x521b, 0x7f90, 0xa6eb, 0x37a1, 0xb666, 0x1, 0x0);
        gbc.writeMem(0x3091, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x521b, gbc.sp());
        EXPECT(0x3093, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C7 0339
        gbc.setState(0x81f1, 0x5d88, 0xf20, 0x9c57, 0xda0a, 0x9aa0, 0x0, 0x1);
        gbc.writeMem(0x81f1, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x5d88, gbc.sp());
        EXPECT(0x81f3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x81f1));
        EXPECT(0xc7, gbc.readMem(0x81f2));
        // CB C7 033A
        gbc.setState(0xcb31, 0x669a, 0xf7e0, 0xe7be, 0x2625, 0x3430, 0x0, 0x0);
        gbc.writeMem(0xcb31, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x669a, gbc.sp());
        EXPECT(0xcb33, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcb31));
        EXPECT(0xc7, gbc.readMem(0xcb32));
        // CB C7 033B
        gbc.setState(0x4960, 0xeaa6, 0x2cd0, 0x119b, 0x6068, 0x6dfd, 0x0, 0x1);
        gbc.writeMem(0x4960, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0xeaa6, gbc.sp());
        EXPECT(0x4962, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C7 033C
        gbc.setState(0x9a5d, 0xf831, 0x50, 0x9b70, 0x665a, 0x46e6, 0x1, 0x1);
        gbc.writeMem(0x9a5d, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0xf831, gbc.sp());
        EXPECT(0x9a5f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9a5d));
        EXPECT(0xc7, gbc.readMem(0x9a5e));
        // CB C7 033D
        gbc.setState(0xa04, 0x95b9, 0xa4a0, 0x4062, 0x7daa, 0xf02f, 0x1, 0x0);
        gbc.writeMem(0xa04, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x95b9, gbc.sp());
        EXPECT(0xa06, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C7 033E
        gbc.setState(0x16a7, 0xbf94, 0x6710, 0x99be, 0x52f4, 0x510c, 0x1, 0x1);
        gbc.writeMem(0x16a7, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0xbf94, gbc.sp());
        EXPECT(0x16a9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C7 033F
        gbc.setState(0x7730, 0x3999, 0x4b50, 0xd640, 0xe2a, 0x7804, 0x0, 0x1);
        gbc.writeMem(0x7730, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x3999, gbc.sp());
        EXPECT(0x7732, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C7 0341
        gbc.setState(0xc348, 0x923a, 0x6e40, 0xafa3, 0x81cf, 0xa98f, 0x1, 0x1);
        gbc.writeMem(0xc348, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x923a, gbc.sp());
        EXPECT(0xc34a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc348));
        EXPECT(0xc7, gbc.readMem(0xc349));
        // CB C7 0342
        gbc.setState(0xabaf, 0x1566, 0x44a0, 0x820f, 0xa7a4, 0xe6e1, 0x0, 0x1);
        gbc.writeMem(0xabaf, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0x1566, gbc.sp());
        EXPECT(0xabb1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xabaf));
        EXPECT(0xc7, gbc.readMem(0xabb0));
        // CB C7 0343
        gbc.setState(0xce1a, 0x49, 0xc570, 0x6dda, 0xab88, 0x958c, 0x1, 0x0);
        gbc.writeMem(0xce1a, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x49, gbc.sp());
        EXPECT(0xce1c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xce1a));
        EXPECT(0xc7, gbc.readMem(0xce1b));
        // CB C7 0344
        gbc.setState(0x618b, 0x1866, 0xd70, 0xe8bb, 0x55af, 0x17cf, 0x0, 0x0);
        gbc.writeMem(0x618b, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x1866, gbc.sp());
        EXPECT(0x618d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C7 0345
        gbc.setState(0xbad7, 0x8c50, 0x5c20, 0x7d32, 0x998d, 0xf33d, 0x0, 0x0);
        gbc.writeMem(0xbad7, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x8c50, gbc.sp());
        EXPECT(0xbad9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbad7));
        EXPECT(0xc7, gbc.readMem(0xbad8));
        // CB C7 0346
        gbc.setState(0x7875, 0xf4cc, 0xa890, 0x3656, 0xcfa9, 0x1234, 0x1, 0x0);
        gbc.writeMem(0x7875, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0xf4cc, gbc.sp());
        EXPECT(0x7877, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C7 0347
        gbc.setState(0x181b, 0x528, 0xd480, 0xe54b, 0xb678, 0x67f0, 0x0, 0x1);
        gbc.writeMem(0x181b, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x528, gbc.sp());
        EXPECT(0x181d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C7 0348
        gbc.setState(0xde94, 0xfde6, 0xfbe0, 0x7ad3, 0x366d, 0x45dd, 0x1, 0x0);
        gbc.writeMem(0xde94, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0xfde6, gbc.sp());
        EXPECT(0xde96, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xde94));
        EXPECT(0xc7, gbc.readMem(0xde95));
        // CB C7 0349
        gbc.setState(0xe593, 0x20f2, 0xb560, 0x1b1e, 0xaf51, 0xc4ad, 0x1, 0x1);
        gbc.writeMem(0xe593, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x20f2, gbc.sp());
        EXPECT(0xe595, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe593));
        EXPECT(0xc7, gbc.readMem(0xe594));
        // CB C7 034A
        gbc.setState(0x2ab2, 0xd213, 0x9460, 0x5e71, 0xabdd, 0x255d, 0x1, 0x0);
        gbc.writeMem(0x2ab2, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0xd213, gbc.sp());
        EXPECT(0x2ab4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C7 034B
        gbc.setState(0x8ea, 0x4396, 0xc180, 0x63c5, 0xc8e0, 0x2734, 0x1, 0x0);
        gbc.writeMem(0x8ea, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x4396, gbc.sp());
        EXPECT(0x8ec, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C7 034C
        gbc.setState(0xc200, 0x3b24, 0x160, 0xc8af, 0xe62d, 0x9422, 0x0, 0x0);
        gbc.writeMem(0xc200, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x3b24, gbc.sp());
        EXPECT(0xc202, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc200));
        EXPECT(0xc7, gbc.readMem(0xc201));
        // CB C7 034D
        gbc.setState(0x46e0, 0x24ab, 0x1ac0, 0x7c2d, 0x506c, 0xe1a7, 0x0, 0x0);
        gbc.writeMem(0x46e0, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x24ab, gbc.sp());
        EXPECT(0x46e2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C7 034E
        gbc.setState(0x48f8, 0x683a, 0x8560, 0x8a6c, 0xd04f, 0x6c2e, 0x1, 0x0);
        gbc.writeMem(0x48f8, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x683a, gbc.sp());
        EXPECT(0x48fa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C7 034F
        gbc.setState(0x717, 0x1d1b, 0x9e40, 0x888c, 0xd891, 0x8239, 0x0, 0x0);
        gbc.writeMem(0x717, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x1d1b, gbc.sp());
        EXPECT(0x719, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C7 0350
        gbc.setState(0x3485, 0xce81, 0x9c60, 0x14c0, 0x68f8, 0xa4b, 0x1, 0x1);
        gbc.writeMem(0x3485, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0xce81, gbc.sp());
        EXPECT(0x3487, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C7 0351
        gbc.setState(0xaae5, 0x5367, 0x4420, 0xe8c, 0xe51b, 0xc277, 0x0, 0x1);
        gbc.writeMem(0xaae5, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x5367, gbc.sp());
        EXPECT(0xaae7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaae5));
        EXPECT(0xc7, gbc.readMem(0xaae6));
        // CB C7 0352
        gbc.setState(0x55fa, 0xff1c, 0xb180, 0x4b48, 0xb5ea, 0xccab, 0x1, 0x0);
        gbc.writeMem(0x55fa, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0xff1c, gbc.sp());
        EXPECT(0x55fc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C7 0353
        gbc.setState(0x9213, 0x6f5b, 0xd530, 0x12d7, 0x9b0f, 0x23dd, 0x0, 0x1);
        gbc.writeMem(0x9213, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x6f5b, gbc.sp());
        EXPECT(0x9215, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9213));
        EXPECT(0xc7, gbc.readMem(0x9214));
        // CB C7 0354
        gbc.setState(0x99ca, 0x93b5, 0x2130, 0x9be0, 0xb149, 0xfa28, 0x1, 0x1);
        gbc.writeMem(0x99ca, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x93b5, gbc.sp());
        EXPECT(0x99cc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x99ca));
        EXPECT(0xc7, gbc.readMem(0x99cb));
        // CB C7 0355
        gbc.setState(0xee52, 0xe89d, 0xecd0, 0x1675, 0x556d, 0x2e69, 0x1, 0x1);
        gbc.writeMem(0xee52, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0xe89d, gbc.sp());
        EXPECT(0xee54, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xee52));
        EXPECT(0xc7, gbc.readMem(0xee53));
        // CB C7 0356
        gbc.setState(0x25f7, 0x40f4, 0x17a0, 0xe5e5, 0xca5c, 0x4310, 0x1, 0x1);
        gbc.writeMem(0x25f7, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x40f4, gbc.sp());
        EXPECT(0x25f9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C7 0357
        gbc.setState(0x739c, 0x460d, 0x9120, 0x955a, 0x1f47, 0x430, 0x1, 0x1);
        gbc.writeMem(0x739c, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x460d, gbc.sp());
        EXPECT(0x739e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C7 0358
        gbc.setState(0xc61f, 0xc34e, 0xbef0, 0x177d, 0x742b, 0xbf4, 0x1, 0x0);
        gbc.writeMem(0xc61f, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0xc34e, gbc.sp());
        EXPECT(0xc621, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc61f));
        EXPECT(0xc7, gbc.readMem(0xc620));
        // CB C7 0359
        gbc.setState(0x3ae3, 0xea7b, 0xd550, 0x5116, 0x8003, 0x568b, 0x0, 0x0);
        gbc.writeMem(0x3ae3, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0xea7b, gbc.sp());
        EXPECT(0x3ae5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C7 035A
        gbc.setState(0x73f2, 0x55aa, 0x4370, 0x3c49, 0x82f5, 0xd885, 0x1, 0x1);
        gbc.writeMem(0x73f2, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x55aa, gbc.sp());
        EXPECT(0x73f4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C7 035B
        gbc.setState(0xeb8e, 0x2b64, 0xe430, 0x94e8, 0xcb84, 0xfbf1, 0x0, 0x0);
        gbc.writeMem(0xeb8e, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x2b64, gbc.sp());
        EXPECT(0xeb90, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeb8e));
        EXPECT(0xc7, gbc.readMem(0xeb8f));
        // CB C7 035C
        gbc.setState(0x9bb9, 0xcb0a, 0x9f20, 0x2fc7, 0x2b53, 0x9d9c, 0x0, 0x0);
        gbc.writeMem(0x9bb9, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0xcb0a, gbc.sp());
        EXPECT(0x9bbb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9bb9));
        EXPECT(0xc7, gbc.readMem(0x9bba));
        // CB C7 035D
        gbc.setState(0x6c47, 0xa5d0, 0x7580, 0x3484, 0x678c, 0x1bb4, 0x0, 0x1);
        gbc.writeMem(0x6c47, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0xa5d0, gbc.sp());
        EXPECT(0x6c49, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C7 035E
        gbc.setState(0xad7a, 0xb73b, 0xa150, 0xdf26, 0x7fe3, 0xfd69, 0x1, 0x0);
        gbc.writeMem(0xad7a, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0xb73b, gbc.sp());
        EXPECT(0xad7c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xad7a));
        EXPECT(0xc7, gbc.readMem(0xad7b));
        // CB C7 035F
        gbc.setState(0xc3b0, 0xb734, 0x7b50, 0x91c7, 0xf529, 0xae19, 0x0, 0x1);
        gbc.writeMem(0xc3b0, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0xb734, gbc.sp());
        EXPECT(0xc3b2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc3b0));
        EXPECT(0xc7, gbc.readMem(0xc3b1));
        // CB C7 0360
        gbc.setState(0x9254, 0xbacb, 0x2750, 0xe685, 0x26e7, 0x2a86, 0x1, 0x1);
        gbc.writeMem(0x9254, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0xbacb, gbc.sp());
        EXPECT(0x9256, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9254));
        EXPECT(0xc7, gbc.readMem(0x9255));
        // CB C7 0361
        gbc.setState(0x8b19, 0xad66, 0x54a0, 0x87cc, 0xf76, 0x8436, 0x0, 0x1);
        gbc.writeMem(0x8b19, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0xad66, gbc.sp());
        EXPECT(0x8b1b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8b19));
        EXPECT(0xc7, gbc.readMem(0x8b1a));
        // CB C7 0363
        gbc.setState(0x69, 0xe3a8, 0x3040, 0x3660, 0x67d3, 0x7652, 0x1, 0x1);
        gbc.writeMem(0x69, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0xe3a8, gbc.sp());
        EXPECT(0x6b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C7 0364
        gbc.setState(0x7f16, 0x3aec, 0x6bc0, 0xe742, 0xeef6, 0xc106, 0x0, 0x1);
        gbc.writeMem(0x7f16, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x3aec, gbc.sp());
        EXPECT(0x7f18, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C7 0365
        gbc.setState(0x3b77, 0x54b4, 0x9bd0, 0x6c93, 0xae94, 0x2dde, 0x0, 0x0);
        gbc.writeMem(0x3b77, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x54b4, gbc.sp());
        EXPECT(0x3b79, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C7 0366
        gbc.setState(0x42eb, 0x4a7a, 0x4780, 0xf58d, 0x54eb, 0x4d5, 0x1, 0x0);
        gbc.writeMem(0x42eb, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x4a7a, gbc.sp());
        EXPECT(0x42ed, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C7 0367
        gbc.setState(0xb686, 0x747a, 0x42f0, 0xf468, 0x326b, 0x6fd5, 0x1, 0x0);
        gbc.writeMem(0xb686, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x747a, gbc.sp());
        EXPECT(0xb688, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb686));
        EXPECT(0xc7, gbc.readMem(0xb687));
        // CB C7 0368
        gbc.setState(0x7c13, 0x4e43, 0xd800, 0x878, 0x8c31, 0xa537, 0x0, 0x1);
        gbc.writeMem(0x7c13, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x4e43, gbc.sp());
        EXPECT(0x7c15, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C7 0369
        gbc.setState(0xc3db, 0x8159, 0xc280, 0x7cc, 0x655e, 0x1663, 0x0, 0x0);
        gbc.writeMem(0xc3db, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x8159, gbc.sp());
        EXPECT(0xc3dd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc3db));
        EXPECT(0xc7, gbc.readMem(0xc3dc));
        // CB C7 036A
        gbc.setState(0x11d7, 0x5940, 0x90e0, 0xa459, 0xfd7b, 0xaf34, 0x1, 0x1);
        gbc.writeMem(0x11d7, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x5940, gbc.sp());
        EXPECT(0x11d9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C7 036B
        gbc.setState(0x44c7, 0xafaf, 0x3b50, 0xb791, 0xf4da, 0xd79a, 0x1, 0x1);
        gbc.writeMem(0x44c7, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0xafaf, gbc.sp());
        EXPECT(0x44c9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C7 036C
        gbc.setState(0x163e, 0xbc4c, 0xf310, 0x2be8, 0xf231, 0x3e61, 0x0, 0x1);
        gbc.writeMem(0x163e, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0xbc4c, gbc.sp());
        EXPECT(0x1640, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C7 036F
        gbc.setState(0xd9aa, 0x103f, 0x8600, 0x48a2, 0x4448, 0xebb6, 0x1, 0x0);
        gbc.writeMem(0xd9aa, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x103f, gbc.sp());
        EXPECT(0xd9ac, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd9aa));
        EXPECT(0xc7, gbc.readMem(0xd9ab));
        // CB C7 0370
        gbc.setState(0xa2ee, 0x5da9, 0xea20, 0x90de, 0xfc7, 0x8fa6, 0x0, 0x1);
        gbc.writeMem(0xa2ee, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x5da9, gbc.sp());
        EXPECT(0xa2f0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa2ee));
        EXPECT(0xc7, gbc.readMem(0xa2ef));
        // CB C7 0371
        gbc.setState(0x8839, 0x8f78, 0xc70, 0x9f05, 0xeb54, 0x9f40, 0x1, 0x0);
        gbc.writeMem(0x8839, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x8f78, gbc.sp());
        EXPECT(0x883b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8839));
        EXPECT(0xc7, gbc.readMem(0x883a));
        // CB C7 0372
        gbc.setState(0x2e8d, 0x13ca, 0x4db0, 0x1b27, 0x2a0b, 0x1d9e, 0x1, 0x0);
        gbc.writeMem(0x2e8d, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x13ca, gbc.sp());
        EXPECT(0x2e8f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C7 0373
        gbc.setState(0x818a, 0x7cf8, 0xf660, 0x4a51, 0x9206, 0x2d13, 0x0, 0x1);
        gbc.writeMem(0x818a, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x7cf8, gbc.sp());
        EXPECT(0x818c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x818a));
        EXPECT(0xc7, gbc.readMem(0x818b));
        // CB C7 0374
        gbc.setState(0x9623, 0x9dbe, 0x3740, 0x23c4, 0x5019, 0x61c2, 0x1, 0x0);
        gbc.writeMem(0x9623, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x9dbe, gbc.sp());
        EXPECT(0x9625, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9623));
        EXPECT(0xc7, gbc.readMem(0x9624));
        // CB C7 0375
        gbc.setState(0xd670, 0xf2c5, 0xaf60, 0xa2dc, 0x55a, 0x4f9a, 0x1, 0x1);
        gbc.writeMem(0xd670, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0xf2c5, gbc.sp());
        EXPECT(0xd672, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd670));
        EXPECT(0xc7, gbc.readMem(0xd671));
        // CB C7 0376
        gbc.setState(0xe2c2, 0x3df5, 0x5650, 0x2cc2, 0x3067, 0x253b, 0x0, 0x1);
        gbc.writeMem(0xe2c2, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x3df5, gbc.sp());
        EXPECT(0xe2c4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe2c2));
        EXPECT(0xc7, gbc.readMem(0xe2c3));
        // CB C7 0377
        gbc.setState(0xc6c5, 0xf074, 0xba40, 0xcc59, 0xc59b, 0x7a01, 0x0, 0x1);
        gbc.writeMem(0xc6c5, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0xf074, gbc.sp());
        EXPECT(0xc6c7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc6c5));
        EXPECT(0xc7, gbc.readMem(0xc6c6));
        // CB C7 0378
        gbc.setState(0xb712, 0x2370, 0xab40, 0x2684, 0xf84a, 0x8065, 0x0, 0x1);
        gbc.writeMem(0xb712, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x2370, gbc.sp());
        EXPECT(0xb714, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb712));
        EXPECT(0xc7, gbc.readMem(0xb713));
        // CB C7 0379
        gbc.setState(0x99c3, 0x7aa6, 0xed20, 0xcea0, 0xf4df, 0xec7e, 0x1, 0x0);
        gbc.writeMem(0x99c3, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0x7aa6, gbc.sp());
        EXPECT(0x99c5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x99c3));
        EXPECT(0xc7, gbc.readMem(0x99c4));
        // CB C7 037B
        gbc.setState(0xd15e, 0x4b91, 0x2f0, 0xfcea, 0x52a6, 0x5f47, 0x1, 0x0);
        gbc.writeMem(0xd15e, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x4b91, gbc.sp());
        EXPECT(0xd160, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd15e));
        EXPECT(0xc7, gbc.readMem(0xd15f));
        // CB C7 037C
        gbc.setState(0x5d79, 0xfc5d, 0xe3d0, 0x255b, 0xcaa2, 0x16c, 0x0, 0x1);
        gbc.writeMem(0x5d79, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0xfc5d, gbc.sp());
        EXPECT(0x5d7b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C7 037D
        gbc.setState(0xd532, 0x5d04, 0x7a30, 0x2a47, 0xd0e6, 0x5ec4, 0x0, 0x1);
        gbc.writeMem(0xd532, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x5d04, gbc.sp());
        EXPECT(0xd534, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd532));
        EXPECT(0xc7, gbc.readMem(0xd533));
        // CB C7 037E
        gbc.setState(0x68d5, 0xb976, 0x8a50, 0xb6ca, 0xd8cf, 0x4a66, 0x0, 0x1);
        gbc.writeMem(0x68d5, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0xb976, gbc.sp());
        EXPECT(0x68d7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C7 037F
        gbc.setState(0x788f, 0xf952, 0x4a20, 0xe15c, 0x5dd7, 0x727b, 0x1, 0x1);
        gbc.writeMem(0x788f, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0xf952, gbc.sp());
        EXPECT(0x7891, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C7 0380
        gbc.setState(0x8a51, 0xca02, 0xc430, 0xac1f, 0xf5c9, 0xcd18, 0x0, 0x1);
        gbc.writeMem(0x8a51, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0xca02, gbc.sp());
        EXPECT(0x8a53, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8a51));
        EXPECT(0xc7, gbc.readMem(0x8a52));
        // CB C7 0382
        gbc.setState(0xbfa8, 0xe7ff, 0xfa80, 0xcbdf, 0xbd79, 0x2fc6, 0x1, 0x0);
        gbc.writeMem(0xbfa8, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0xe7ff, gbc.sp());
        EXPECT(0xbfaa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbfa8));
        EXPECT(0xc7, gbc.readMem(0xbfa9));
        // CB C7 0383
        gbc.setState(0x6a5d, 0xb80c, 0x7500, 0x4eeb, 0xcad8, 0xf897, 0x0, 0x0);
        gbc.writeMem(0x6a5d, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0xb80c, gbc.sp());
        EXPECT(0x6a5f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C7 0384
        gbc.setState(0xe191, 0xa447, 0x4db0, 0xe0a9, 0x3379, 0x96f7, 0x1, 0x1);
        gbc.writeMem(0xe191, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0xa447, gbc.sp());
        EXPECT(0xe193, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe191));
        EXPECT(0xc7, gbc.readMem(0xe192));
        // CB C7 0385
        gbc.setState(0xa1a, 0xb7bc, 0xd0c0, 0x3b64, 0xcdec, 0x859f, 0x0, 0x0);
        gbc.writeMem(0xa1a, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0xb7bc, gbc.sp());
        EXPECT(0xa1c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C7 0386
        gbc.setState(0x38dd, 0xae09, 0x650, 0x7f, 0xcd1d, 0x4505, 0x0, 0x1);
        gbc.writeMem(0x38dd, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0xae09, gbc.sp());
        EXPECT(0x38df, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C7 0387
        gbc.setState(0x9070, 0xca34, 0x5a70, 0xf1f1, 0x5fc9, 0xd0c2, 0x0, 0x1);
        gbc.writeMem(0x9070, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0xca34, gbc.sp());
        EXPECT(0x9072, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9070));
        EXPECT(0xc7, gbc.readMem(0x9071));
        // CB C7 0388
        gbc.setState(0x46e9, 0x9bd5, 0x30b0, 0x6a34, 0x4448, 0xdba5, 0x1, 0x0);
        gbc.writeMem(0x46e9, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x9bd5, gbc.sp());
        EXPECT(0x46eb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C7 0389
        gbc.setState(0x6eff, 0x73d2, 0xc3a0, 0xb3ca, 0xeca3, 0x3df5, 0x0, 0x0);
        gbc.writeMem(0x6eff, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x73d2, gbc.sp());
        EXPECT(0x6f01, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C7 038A
        gbc.setState(0xa042, 0x477e, 0x57b0, 0x3dc4, 0xfe4d, 0x2f41, 0x0, 0x1);
        gbc.writeMem(0xa042, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x477e, gbc.sp());
        EXPECT(0xa044, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa042));
        EXPECT(0xc7, gbc.readMem(0xa043));
        // CB C7 038B
        gbc.setState(0xdfc5, 0xa7b2, 0x2430, 0x7f9e, 0xce6e, 0xc29e, 0x0, 0x1);
        gbc.writeMem(0xdfc5, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0xa7b2, gbc.sp());
        EXPECT(0xdfc7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdfc5));
        EXPECT(0xc7, gbc.readMem(0xdfc6));
        // CB C7 038C
        gbc.setState(0x4956, 0xd528, 0x8430, 0xc8af, 0x2218, 0x556c, 0x1, 0x1);
        gbc.writeMem(0x4956, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0xd528, gbc.sp());
        EXPECT(0x4958, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C7 038E
        gbc.setState(0x4711, 0xf7a3, 0x5000, 0x45dd, 0xed6b, 0x88e2, 0x1, 0x0);
        gbc.writeMem(0x4711, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0xf7a3, gbc.sp());
        EXPECT(0x4713, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C7 038F
        gbc.setState(0x118a, 0x914d, 0x7110, 0x799b, 0x55e4, 0x2d9f, 0x0, 0x0);
        gbc.writeMem(0x118a, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x914d, gbc.sp());
        EXPECT(0x118c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C7 0391
        gbc.setState(0x38ab, 0x6e40, 0x9270, 0xdf09, 0xc3d7, 0x73d6, 0x1, 0x1);
        gbc.writeMem(0x38ab, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x6e40, gbc.sp());
        EXPECT(0x38ad, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C7 0392
        gbc.setState(0x13a4, 0xb1d8, 0xa9c0, 0x1194, 0x3663, 0xb8ab, 0x0, 0x0);
        gbc.writeMem(0x13a4, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0xb1d8, gbc.sp());
        EXPECT(0x13a6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C7 0393
        gbc.setState(0x1204, 0x5e8d, 0xadf0, 0x5b0, 0xa447, 0x2d8f, 0x0, 0x0);
        gbc.writeMem(0x1204, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x5e8d, gbc.sp());
        EXPECT(0x1206, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C7 0394
        gbc.setState(0xba18, 0x541b, 0x390, 0x5d16, 0xd499, 0x2481, 0x0, 0x1);
        gbc.writeMem(0xba18, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x541b, gbc.sp());
        EXPECT(0xba1a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xba18));
        EXPECT(0xc7, gbc.readMem(0xba19));
        // CB C7 0395
        gbc.setState(0x259c, 0xb383, 0xd7f0, 0x12aa, 0xafd8, 0x4579, 0x1, 0x0);
        gbc.writeMem(0x259c, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0xb383, gbc.sp());
        EXPECT(0x259e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C7 0396
        gbc.setState(0x2902, 0x2336, 0x1ff0, 0x4b51, 0xecd1, 0x49cb, 0x1, 0x1);
        gbc.writeMem(0x2902, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x2336, gbc.sp());
        EXPECT(0x2904, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C7 0397
        gbc.setState(0xa000, 0xc089, 0x4b70, 0x2c47, 0x612a, 0x9f69, 0x0, 0x0);
        gbc.writeMem(0xa000, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0xc089, gbc.sp());
        EXPECT(0xa002, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa000));
        EXPECT(0xc7, gbc.readMem(0xa001));
        // CB C7 0398
        gbc.setState(0x1eeb, 0xf8ae, 0x5e70, 0x69b6, 0xbc42, 0x30db, 0x1, 0x0);
        gbc.writeMem(0x1eeb, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0xf8ae, gbc.sp());
        EXPECT(0x1eed, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C7 0399
        gbc.setState(0xacc8, 0x3b13, 0xa6a0, 0xf146, 0x374, 0xf7f8, 0x1, 0x1);
        gbc.writeMem(0xacc8, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x3b13, gbc.sp());
        EXPECT(0xacca, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xacc8));
        EXPECT(0xc7, gbc.readMem(0xacc9));
        // CB C7 039A
        gbc.setState(0xa7ef, 0xaab, 0xb000, 0x5094, 0xfb1b, 0x6d76, 0x1, 0x1);
        gbc.writeMem(0xa7ef, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0xaab, gbc.sp());
        EXPECT(0xa7f1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa7ef));
        EXPECT(0xc7, gbc.readMem(0xa7f0));
        // CB C7 039B
        gbc.setState(0x198e, 0xf0aa, 0xfe70, 0x5089, 0x1ef3, 0x7c8f, 0x1, 0x1);
        gbc.writeMem(0x198e, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0xf0aa, gbc.sp());
        EXPECT(0x1990, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C7 039C
        gbc.setState(0x815f, 0x7708, 0x34b0, 0x5f89, 0x2b5d, 0xbd3d, 0x0, 0x0);
        gbc.writeMem(0x815f, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x7708, gbc.sp());
        EXPECT(0x8161, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x815f));
        EXPECT(0xc7, gbc.readMem(0x8160));
        // CB C7 039E
        gbc.setState(0xd6b3, 0x1aad, 0x4ba0, 0xd253, 0x6c2c, 0x1e1c, 0x0, 0x1);
        gbc.writeMem(0xd6b3, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x1aad, gbc.sp());
        EXPECT(0xd6b5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd6b3));
        EXPECT(0xc7, gbc.readMem(0xd6b4));
        // CB C7 039F
        gbc.setState(0xeda4, 0x75da, 0x3270, 0x5c39, 0x400c, 0x92e9, 0x0, 0x0);
        gbc.writeMem(0xeda4, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x75da, gbc.sp());
        EXPECT(0xeda6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeda4));
        EXPECT(0xc7, gbc.readMem(0xeda5));
        // CB C7 03A0
        gbc.setState(0x7719, 0x7ad4, 0x12c0, 0xbcea, 0x107e, 0x1bd3, 0x1, 0x0);
        gbc.writeMem(0x7719, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x7ad4, gbc.sp());
        EXPECT(0x771b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C7 03A1
        gbc.setState(0xd8ae, 0xe82d, 0xee60, 0x87ca, 0x4ee3, 0xe78, 0x0, 0x0);
        gbc.writeMem(0xd8ae, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0xe82d, gbc.sp());
        EXPECT(0xd8b0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd8ae));
        EXPECT(0xc7, gbc.readMem(0xd8af));
        // CB C7 03A2
        gbc.setState(0xb1d1, 0x97f5, 0xf3c0, 0xa445, 0x9706, 0xf312, 0x0, 0x1);
        gbc.writeMem(0xb1d1, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x97f5, gbc.sp());
        EXPECT(0xb1d3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb1d1));
        EXPECT(0xc7, gbc.readMem(0xb1d2));
        // CB C7 03A3
        gbc.setState(0x32c3, 0xad41, 0xe9d0, 0xabc3, 0xcc6f, 0x411e, 0x1, 0x1);
        gbc.writeMem(0x32c3, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0xad41, gbc.sp());
        EXPECT(0x32c5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C7 03A4
        gbc.setState(0x6f6c, 0xaacf, 0x94b0, 0xc59f, 0xa06e, 0xc454, 0x1, 0x0);
        gbc.writeMem(0x6f6c, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0xaacf, gbc.sp());
        EXPECT(0x6f6e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C7 03A5
        gbc.setState(0x42ab, 0xedde, 0xf750, 0x8566, 0x4ebd, 0x9cc, 0x0, 0x1);
        gbc.writeMem(0x42ab, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0xedde, gbc.sp());
        EXPECT(0x42ad, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C7 03A6
        gbc.setState(0x1391, 0xce6d, 0xb960, 0x9734, 0x3a31, 0x55db, 0x1, 0x0);
        gbc.writeMem(0x1391, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0xce6d, gbc.sp());
        EXPECT(0x1393, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C7 03A7
        gbc.setState(0xe3a7, 0x6d6f, 0x3370, 0xfd34, 0x9fd5, 0x4e06, 0x0, 0x0);
        gbc.writeMem(0xe3a7, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x6d6f, gbc.sp());
        EXPECT(0xe3a9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe3a7));
        EXPECT(0xc7, gbc.readMem(0xe3a8));
        // CB C7 03A8
        gbc.setState(0x6e1a, 0x24ed, 0xfdf0, 0x37c6, 0xbd9f, 0xe71e, 0x1, 0x0);
        gbc.writeMem(0x6e1a, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x24ed, gbc.sp());
        EXPECT(0x6e1c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C7 03A9
        gbc.setState(0x9887, 0x82b3, 0xb2d0, 0x9924, 0x8f69, 0x4905, 0x0, 0x0);
        gbc.writeMem(0x9887, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x82b3, gbc.sp());
        EXPECT(0x9889, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9887));
        EXPECT(0xc7, gbc.readMem(0x9888));
        // CB C7 03AA
        gbc.setState(0x1af3, 0xac4b, 0xbcb0, 0xf3ff, 0xce44, 0x50d8, 0x0, 0x1);
        gbc.writeMem(0x1af3, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0xac4b, gbc.sp());
        EXPECT(0x1af5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C7 03AB
        gbc.setState(0x722, 0x2071, 0xf3f0, 0x7713, 0x3339, 0xb694, 0x1, 0x1);
        gbc.writeMem(0x722, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x2071, gbc.sp());
        EXPECT(0x724, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C7 03AC
        gbc.setState(0x95d4, 0xa9de, 0x3b10, 0x35a4, 0x84f8, 0x335c, 0x0, 0x1);
        gbc.writeMem(0x95d4, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0xa9de, gbc.sp());
        EXPECT(0x95d6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x95d4));
        EXPECT(0xc7, gbc.readMem(0x95d5));
        // CB C7 03AD
        gbc.setState(0xc293, 0x5d55, 0xc760, 0x6d46, 0xa421, 0x7822, 0x0, 0x0);
        gbc.writeMem(0xc293, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x5d55, gbc.sp());
        EXPECT(0xc295, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc293));
        EXPECT(0xc7, gbc.readMem(0xc294));
        // CB C7 03AE
        gbc.setState(0xc87f, 0x3aba, 0x2d20, 0xaa70, 0xbb8e, 0x8caa, 0x0, 0x1);
        gbc.writeMem(0xc87f, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x3aba, gbc.sp());
        EXPECT(0xc881, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc87f));
        EXPECT(0xc7, gbc.readMem(0xc880));
        // CB C7 03AF
        gbc.setState(0xe07e, 0x2d5, 0x2d60, 0xed6a, 0x6d34, 0xe1f1, 0x0, 0x0);
        gbc.writeMem(0xe07e, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x2d5, gbc.sp());
        EXPECT(0xe080, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe07e));
        EXPECT(0xc7, gbc.readMem(0xe07f));
        // CB C7 03B0
        gbc.setState(0x84b0, 0x3bd1, 0xc150, 0x2060, 0x8b43, 0x7044, 0x1, 0x1);
        gbc.writeMem(0x84b0, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x3bd1, gbc.sp());
        EXPECT(0x84b2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x84b0));
        EXPECT(0xc7, gbc.readMem(0x84b1));
        // CB C7 03B1
        gbc.setState(0xaf23, 0x2b26, 0xa2c0, 0x5b1f, 0x2ec7, 0x924b, 0x1, 0x1);
        gbc.writeMem(0xaf23, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x2b26, gbc.sp());
        EXPECT(0xaf25, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaf23));
        EXPECT(0xc7, gbc.readMem(0xaf24));
        // CB C7 03B2
        gbc.setState(0x2f2, 0xafb2, 0x900, 0x648, 0x1dec, 0x97e7, 0x0, 0x1);
        gbc.writeMem(0x2f2, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0xafb2, gbc.sp());
        EXPECT(0x2f4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C7 03B4
        gbc.setState(0xc145, 0x594d, 0x810, 0x5ae7, 0xaf42, 0x74fd, 0x1, 0x1);
        gbc.writeMem(0xc145, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x594d, gbc.sp());
        EXPECT(0xc147, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc145));
        EXPECT(0xc7, gbc.readMem(0xc146));
        // CB C7 03B5
        gbc.setState(0x6c4c, 0x2d28, 0x8dd0, 0xabbb, 0x666b, 0x662d, 0x1, 0x0);
        gbc.writeMem(0x6c4c, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x2d28, gbc.sp());
        EXPECT(0x6c4e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C7 03B6
        gbc.setState(0x589f, 0x86b4, 0x7eb0, 0xa113, 0xcf8d, 0x94a2, 0x1, 0x1);
        gbc.writeMem(0x589f, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x86b4, gbc.sp());
        EXPECT(0x58a1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C7 03B7
        gbc.setState(0x7ca6, 0x1a99, 0x5630, 0x99ff, 0xedf6, 0xbebd, 0x1, 0x1);
        gbc.writeMem(0x7ca6, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x1a99, gbc.sp());
        EXPECT(0x7ca8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C7 03B8
        gbc.setState(0xce84, 0xf136, 0xe450, 0xf5ba, 0x491b, 0xdeca, 0x0, 0x1);
        gbc.writeMem(0xce84, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0xf136, gbc.sp());
        EXPECT(0xce86, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xce84));
        EXPECT(0xc7, gbc.readMem(0xce85));
        // CB C7 03B9
        gbc.setState(0x6041, 0x2c63, 0x9700, 0x1aa8, 0x1867, 0xd040, 0x1, 0x0);
        gbc.writeMem(0x6041, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x2c63, gbc.sp());
        EXPECT(0x6043, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C7 03BA
        gbc.setState(0x27b7, 0x341e, 0x7ae0, 0x8618, 0x310f, 0xacb6, 0x1, 0x0);
        gbc.writeMem(0x27b7, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x341e, gbc.sp());
        EXPECT(0x27b9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C7 03BB
        gbc.setState(0xdf12, 0x4a19, 0xda60, 0x2397, 0x1945, 0xc38a, 0x1, 0x1);
        gbc.writeMem(0xdf12, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x4a19, gbc.sp());
        EXPECT(0xdf14, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdf12));
        EXPECT(0xc7, gbc.readMem(0xdf13));
        // CB C7 03BC
        gbc.setState(0x6b49, 0x71bd, 0xe300, 0xde35, 0xcf3d, 0x47c9, 0x0, 0x1);
        gbc.writeMem(0x6b49, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x71bd, gbc.sp());
        EXPECT(0x6b4b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C7 03BD
        gbc.setState(0x3822, 0x12f2, 0xe190, 0x70b0, 0x7ccd, 0xfcaf, 0x0, 0x1);
        gbc.writeMem(0x3822, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x12f2, gbc.sp());
        EXPECT(0x3824, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C7 03BE
        gbc.setState(0xbdcb, 0xcb37, 0xcfa0, 0x19ed, 0x5743, 0xc34a, 0x1, 0x0);
        gbc.writeMem(0xbdcb, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0xcb37, gbc.sp());
        EXPECT(0xbdcd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbdcb));
        EXPECT(0xc7, gbc.readMem(0xbdcc));
        // CB C7 03BF
        gbc.setState(0xa46e, 0xf7cd, 0xa560, 0xbdeb, 0x4d65, 0xba30, 0x0, 0x1);
        gbc.writeMem(0xa46e, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0xf7cd, gbc.sp());
        EXPECT(0xa470, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa46e));
        EXPECT(0xc7, gbc.readMem(0xa46f));
        // CB C7 03C0
        gbc.setState(0x3e14, 0xc3a, 0x4230, 0xeb2e, 0x67e5, 0xc0e7, 0x1, 0x0);
        gbc.writeMem(0x3e14, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0xc3a, gbc.sp());
        EXPECT(0x3e16, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C7 03C1
        gbc.setState(0x6611, 0x626c, 0x9df0, 0xb227, 0xa7ca, 0x835f, 0x0, 0x0);
        gbc.writeMem(0x6611, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x626c, gbc.sp());
        EXPECT(0x6613, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C7 03C2
        gbc.setState(0x4768, 0xd755, 0xe710, 0x63a9, 0xef44, 0x7916, 0x1, 0x1);
        gbc.writeMem(0x4768, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0xd755, gbc.sp());
        EXPECT(0x476a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C7 03C3
        gbc.setState(0xbf58, 0x133d, 0xa8c0, 0x24f1, 0x4afb, 0xdfcd, 0x0, 0x1);
        gbc.writeMem(0xbf58, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x133d, gbc.sp());
        EXPECT(0xbf5a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbf58));
        EXPECT(0xc7, gbc.readMem(0xbf59));
        // CB C7 03C4
        gbc.setState(0x2e9e, 0xb202, 0xe0c0, 0x81bf, 0x3ab6, 0x9541, 0x0, 0x0);
        gbc.writeMem(0x2e9e, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0xb202, gbc.sp());
        EXPECT(0x2ea0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C7 03C5
        gbc.setState(0x2ad7, 0xf76b, 0xdda0, 0xfa39, 0xaf0, 0xc06f, 0x0, 0x1);
        gbc.writeMem(0x2ad7, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0xf76b, gbc.sp());
        EXPECT(0x2ad9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C7 03C6
        gbc.setState(0x7c0f, 0x2e8c, 0x8310, 0x304e, 0xc771, 0x84f6, 0x1, 0x0);
        gbc.writeMem(0x7c0f, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x2e8c, gbc.sp());
        EXPECT(0x7c11, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C7 03C7
        gbc.setState(0x2f4d, 0x94b4, 0x9290, 0x7b66, 0x9bb9, 0x264f, 0x1, 0x0);
        gbc.writeMem(0x2f4d, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x94b4, gbc.sp());
        EXPECT(0x2f4f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C7 03C8
        gbc.setState(0xe16c, 0x3e19, 0xa170, 0x984e, 0x5580, 0x3995, 0x1, 0x0);
        gbc.writeMem(0xe16c, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x3e19, gbc.sp());
        EXPECT(0xe16e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe16c));
        EXPECT(0xc7, gbc.readMem(0xe16d));
        // CB C7 03C9
        gbc.setState(0x2b6e, 0xbde0, 0x7ca0, 0xf410, 0x832, 0xc07a, 0x1, 0x0);
        gbc.writeMem(0x2b6e, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0xbde0, gbc.sp());
        EXPECT(0x2b70, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C7 03CA
        gbc.setState(0x3130, 0x3cc9, 0xbaa0, 0x99b4, 0xcaa1, 0x63e3, 0x0, 0x1);
        gbc.writeMem(0x3130, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x3cc9, gbc.sp());
        EXPECT(0x3132, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C7 03CB
        gbc.setState(0x5a55, 0x8088, 0xe6d0, 0xfc50, 0xf6cf, 0x7c97, 0x0, 0x0);
        gbc.writeMem(0x5a55, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0x8088, gbc.sp());
        EXPECT(0x5a57, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C7 03CC
        gbc.setState(0x77f2, 0x294f, 0x9f70, 0x7227, 0x32a4, 0xf3ef, 0x1, 0x1);
        gbc.writeMem(0x77f2, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x294f, gbc.sp());
        EXPECT(0x77f4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C7 03CD
        gbc.setState(0x72f0, 0x7b78, 0xba70, 0xb47b, 0x4e0, 0x7cc5, 0x1, 0x0);
        gbc.writeMem(0x72f0, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x7b78, gbc.sp());
        EXPECT(0x72f2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C7 03CE
        gbc.setState(0x2d32, 0x47bd, 0xf3d0, 0x1c0e, 0xe769, 0x7e3e, 0x1, 0x1);
        gbc.writeMem(0x2d32, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x47bd, gbc.sp());
        EXPECT(0x2d34, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C7 03CF
        gbc.setState(0xaeaa, 0x8213, 0xe180, 0xd8cc, 0x6eb2, 0x975c, 0x1, 0x1);
        gbc.writeMem(0xaeaa, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x8213, gbc.sp());
        EXPECT(0xaeac, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaeaa));
        EXPECT(0xc7, gbc.readMem(0xaeab));
        // CB C7 03D0
        gbc.setState(0xaff7, 0xa686, 0xd620, 0x4d4b, 0x3a16, 0x94b, 0x1, 0x0);
        gbc.writeMem(0xaff7, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0xa686, gbc.sp());
        EXPECT(0xaff9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaff7));
        EXPECT(0xc7, gbc.readMem(0xaff8));
        // CB C7 03D2
        gbc.setState(0xabff, 0x69de, 0x68a0, 0x8510, 0x76cd, 0x9d8, 0x1, 0x1);
        gbc.writeMem(0xabff, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x69de, gbc.sp());
        EXPECT(0xac01, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xabff));
        EXPECT(0xc7, gbc.readMem(0xac00));
        // CB C7 03D3
        gbc.setState(0x90b3, 0x3426, 0xd740, 0x5a72, 0xe1e6, 0x4d17, 0x1, 0x0);
        gbc.writeMem(0x90b3, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x3426, gbc.sp());
        EXPECT(0x90b5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x90b3));
        EXPECT(0xc7, gbc.readMem(0x90b4));
        // CB C7 03D5
        gbc.setState(0x75ce, 0x1bd0, 0xfa60, 0xfa3b, 0xaf2e, 0xbb13, 0x0, 0x1);
        gbc.writeMem(0x75ce, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x1bd0, gbc.sp());
        EXPECT(0x75d0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C7 03D6
        gbc.setState(0x7d2f, 0xfea3, 0x91b0, 0xb80a, 0xa16a, 0x9881, 0x0, 0x0);
        gbc.writeMem(0x7d2f, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0xfea3, gbc.sp());
        EXPECT(0x7d31, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C7 03D7
        gbc.setState(0xbc06, 0x6127, 0x1d80, 0x6c8e, 0xf6c, 0xfaca, 0x0, 0x0);
        gbc.writeMem(0xbc06, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x6127, gbc.sp());
        EXPECT(0xbc08, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbc06));
        EXPECT(0xc7, gbc.readMem(0xbc07));
        // CB C7 03D8
        gbc.setState(0xdff6, 0x3414, 0x8d40, 0xc403, 0x2eed, 0x95a0, 0x1, 0x0);
        gbc.writeMem(0xdff6, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x3414, gbc.sp());
        EXPECT(0xdff8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdff6));
        EXPECT(0xc7, gbc.readMem(0xdff7));
        // CB C7 03D9
        gbc.setState(0xd1fb, 0xaada, 0x27a0, 0x3533, 0xfb8e, 0xdc40, 0x1, 0x0);
        gbc.writeMem(0xd1fb, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0xaada, gbc.sp());
        EXPECT(0xd1fd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd1fb));
        EXPECT(0xc7, gbc.readMem(0xd1fc));
        // CB C7 03DA
        gbc.setState(0x13e9, 0x20f1, 0x7e40, 0x692, 0x7a2d, 0xb372, 0x0, 0x1);
        gbc.writeMem(0x13e9, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x20f1, gbc.sp());
        EXPECT(0x13eb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C7 03DB
        gbc.setState(0x83f9, 0xa01e, 0xd9e0, 0xf7bf, 0x3ba0, 0x40c1, 0x1, 0x0);
        gbc.writeMem(0x83f9, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0xa01e, gbc.sp());
        EXPECT(0x83fb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x83f9));
        EXPECT(0xc7, gbc.readMem(0x83fa));
        // CB C7 03DC
        gbc.setState(0x9c6c, 0x30ff, 0x7c60, 0x1483, 0xe195, 0x7eb0, 0x0, 0x0);
        gbc.writeMem(0x9c6c, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x30ff, gbc.sp());
        EXPECT(0x9c6e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9c6c));
        EXPECT(0xc7, gbc.readMem(0x9c6d));
        // CB C7 03DD
        gbc.setState(0xb447, 0xad6c, 0x4f10, 0x15a1, 0x83f1, 0xc82d, 0x1, 0x1);
        gbc.writeMem(0xb447, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0xad6c, gbc.sp());
        EXPECT(0xb449, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb447));
        EXPECT(0xc7, gbc.readMem(0xb448));
        // CB C7 03DE
        gbc.setState(0x1bcf, 0x3e4a, 0x27a0, 0xc201, 0x8c65, 0x9f40, 0x0, 0x1);
        gbc.writeMem(0x1bcf, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x3e4a, gbc.sp());
        EXPECT(0x1bd1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C7 03DF
        gbc.setState(0x52d4, 0x1074, 0xbd0, 0x5a9c, 0x8e1c, 0xc229, 0x1, 0x1);
        gbc.writeMem(0x52d4, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x1074, gbc.sp());
        EXPECT(0x52d6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C7 03E1
        gbc.setState(0xe4ca, 0xba99, 0x50a0, 0x9e78, 0xd427, 0x4abe, 0x1, 0x0);
        gbc.writeMem(0xe4ca, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0xba99, gbc.sp());
        EXPECT(0xe4cc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe4ca));
        EXPECT(0xc7, gbc.readMem(0xe4cb));
        // CB C7 03E2
        gbc.setState(0x74e4, 0x2f74, 0x1590, 0xe225, 0xcd06, 0xb558, 0x1, 0x0);
        gbc.writeMem(0x74e4, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x2f74, gbc.sp());
        EXPECT(0x74e6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C7 03E3
        gbc.setState(0x9de7, 0x111e, 0x16b0, 0x2722, 0x859c, 0x683c, 0x0, 0x1);
        gbc.writeMem(0x9de7, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x111e, gbc.sp());
        EXPECT(0x9de9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9de7));
        EXPECT(0xc7, gbc.readMem(0x9de8));
        // CB C7 03E4
        gbc.setState(0x583b, 0xd7bf, 0xbd30, 0x8c93, 0xf286, 0xc1a3, 0x0, 0x1);
        gbc.writeMem(0x583b, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0xd7bf, gbc.sp());
        EXPECT(0x583d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C7 03E5
        gbc.setState(0xe365, 0x4f6a, 0x2240, 0xc8e0, 0xbb3f, 0xcddd, 0x0, 0x0);
        gbc.writeMem(0xe365, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x4f6a, gbc.sp());
        EXPECT(0xe367, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe365));
        EXPECT(0xc7, gbc.readMem(0xe366));
        // CB C7 03E6
        gbc.setState(0x1a1a, 0x16a6, 0xe680, 0x726c, 0x270b, 0x79cf, 0x0, 0x1);
        gbc.writeMem(0x1a1a, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x16a6, gbc.sp());
        EXPECT(0x1a1c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C7 03E7
        gbc.setState(0x130b, 0xa7a8, 0x7d90, 0x754f, 0xadad, 0xcc60, 0x0, 0x1);
        gbc.writeMem(0x130b, { 0xcb, 0xc7 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0xa7a8, gbc.sp());
        EXPECT(0x130d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
    }
