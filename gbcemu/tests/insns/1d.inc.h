    TEST(gbcemu, opcode_1d) {
        GBCEmu gbc{};
        uint8_t cartridge[0x8000];
        cartridge[0x149] = 0x02; // 8kb external RAM
        gbc.loadCartridge(new FlashGamePak(cartridge));
        // 1D 0000
        gbc.setState(0x19bc, 0x387c, 0x6490, 0x2671, 0x2bf0, 0xb1b2, 0x1, 0x1);
        gbc.writeMem(0x19bc, { 0x1d });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x387c, gbc.sp());
        EXPECT(0x19bd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 1D 0001
        gbc.setState(0x1880, 0xd5c, 0xb630, 0xf86, 0x9145, 0x47b7, 0x1, 0x0);
        gbc.writeMem(0x1880, { 0x1d });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0xd5c, gbc.sp());
        EXPECT(0x1881, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 1D 0002
        gbc.setState(0xbcdf, 0xb10, 0xc70, 0xf97c, 0x1a51, 0x526b, 0x0, 0x0);
        gbc.writeMem(0xbcdf, { 0x1d });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0xb10, gbc.sp());
        EXPECT(0xbce0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1d, gbc.readMem(0xbcdf));
        // 1D 0003
        gbc.setState(0x400f, 0x9a25, 0x7f60, 0xbee4, 0xa809, 0x2948, 0x0, 0x0);
        gbc.writeMem(0x400f, { 0x1d });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0x9a25, gbc.sp());
        EXPECT(0x4010, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 1D 0004
        gbc.setState(0xbb48, 0xd442, 0xf680, 0xe47e, 0x3439, 0xb50d, 0x1, 0x1);
        gbc.writeMem(0xbb48, { 0x1d });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0xd442, gbc.sp());
        EXPECT(0xbb49, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1d, gbc.readMem(0xbb48));
        // 1D 0006
        gbc.setState(0xd8fb, 0xfbe, 0x3e40, 0x8a87, 0xfaf6, 0x7533, 0x1, 0x1);
        gbc.writeMem(0xd8fb, { 0x1d });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0xfbe, gbc.sp());
        EXPECT(0xd8fc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1d, gbc.readMem(0xd8fb));
        // 1D 0007
        gbc.setState(0x289a, 0xd1ca, 0x340, 0xd947, 0x35c2, 0xc46, 0x1, 0x1);
        gbc.writeMem(0x289a, { 0x1d });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0xd1ca, gbc.sp());
        EXPECT(0x289b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 1D 0008
        gbc.setState(0x69b1, 0x28c7, 0x3f40, 0xd796, 0x5a0d, 0x2f7b, 0x1, 0x0);
        gbc.writeMem(0x69b1, { 0x1d });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x28c7, gbc.sp());
        EXPECT(0x69b2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 1D 0009
        gbc.setState(0x971e, 0x8e40, 0x5dd0, 0xaa9b, 0xafc6, 0x9d29, 0x1, 0x0);
        gbc.writeMem(0x971e, { 0x1d });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x8e40, gbc.sp());
        EXPECT(0x971f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1d, gbc.readMem(0x971e));
        // 1D 000A
        gbc.setState(0xc7e0, 0xc3b1, 0x5e0, 0xe5bc, 0xe505, 0x284f, 0x0, 0x1);
        gbc.writeMem(0xc7e0, { 0x1d });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0xc3b1, gbc.sp());
        EXPECT(0xc7e1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1d, gbc.readMem(0xc7e0));
        // 1D 000B
        gbc.setState(0x24e8, 0xd736, 0x81d0, 0x2273, 0x1ca4, 0xd4bd, 0x0, 0x1);
        gbc.writeMem(0x24e8, { 0x1d });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0xd736, gbc.sp());
        EXPECT(0x24e9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 1D 000D
        gbc.setState(0x4d8e, 0x5a33, 0x78b0, 0xae38, 0x85f6, 0x819e, 0x1, 0x0);
        gbc.writeMem(0x4d8e, { 0x1d });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x5a33, gbc.sp());
        EXPECT(0x4d8f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 1D 000E
        gbc.setState(0x7b5f, 0xaf2e, 0x9db0, 0xa94f, 0xdf15, 0x8792, 0x0, 0x1);
        gbc.writeMem(0x7b5f, { 0x1d });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0xaf2e, gbc.sp());
        EXPECT(0x7b60, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 1D 000F
        gbc.setState(0x6c0c, 0xb3b0, 0x73c0, 0x7cde, 0x5499, 0x70cb, 0x0, 0x1);
        gbc.writeMem(0x6c0c, { 0x1d });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0xb3b0, gbc.sp());
        EXPECT(0x6c0d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 1D 0010
        gbc.setState(0xbe53, 0x44f, 0x8fe0, 0xcff6, 0x478f, 0x99f, 0x0, 0x1);
        gbc.writeMem(0xbe53, { 0x1d });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x44f, gbc.sp());
        EXPECT(0xbe54, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1d, gbc.readMem(0xbe53));
        // 1D 0011
        gbc.setState(0x613b, 0x7ce5, 0xd0d0, 0xe42e, 0x9e25, 0xcd00, 0x0, 0x1);
        gbc.writeMem(0x613b, { 0x1d });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x7ce5, gbc.sp());
        EXPECT(0x613c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 1D 0012
        gbc.setState(0x427a, 0x6e3f, 0x7c0, 0xe63d, 0x6b2a, 0x626c, 0x1, 0x0);
        gbc.writeMem(0x427a, { 0x1d });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x6e3f, gbc.sp());
        EXPECT(0x427b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 1D 0013
        gbc.setState(0x2544, 0xee0f, 0x2480, 0x22c9, 0x471, 0xd99c, 0x0, 0x1);
        gbc.writeMem(0x2544, { 0x1d });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0xee0f, gbc.sp());
        EXPECT(0x2545, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 1D 0014
        gbc.setState(0xbbba, 0x8ece, 0xacd0, 0xcb84, 0xfc01, 0xe97b, 0x0, 0x0);
        gbc.writeMem(0xbbba, { 0x1d });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x8ece, gbc.sp());
        EXPECT(0xbbbb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1d, gbc.readMem(0xbbba));
        // 1D 0015
        gbc.setState(0xd4e6, 0x8fda, 0xaa70, 0xe91e, 0x562d, 0xba83, 0x1, 0x1);
        gbc.writeMem(0xd4e6, { 0x1d });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x8fda, gbc.sp());
        EXPECT(0xd4e7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1d, gbc.readMem(0xd4e6));
        // 1D 0016
        gbc.setState(0x5fd, 0x97f8, 0x4a30, 0x420f, 0xbb24, 0xe48f, 0x1, 0x1);
        gbc.writeMem(0x5fd, { 0x1d });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x97f8, gbc.sp());
        EXPECT(0x5fe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 1D 0017
        gbc.setState(0x4c76, 0x3a4e, 0xc880, 0x673d, 0xd785, 0x2d34, 0x0, 0x1);
        gbc.writeMem(0x4c76, { 0x1d });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x3a4e, gbc.sp());
        EXPECT(0x4c77, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 1D 0018
        gbc.setState(0x515, 0xf222, 0xaf20, 0xb836, 0xb3be, 0x9dd5, 0x1, 0x1);
        gbc.writeMem(0x515, { 0x1d });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0xf222, gbc.sp());
        EXPECT(0x516, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 1D 0019
        gbc.setState(0xeace, 0xa5a9, 0xa4c0, 0x9610, 0x2bc7, 0xa368, 0x0, 0x1);
        gbc.writeMem(0xeace, { 0x1d });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0xa5a9, gbc.sp());
        EXPECT(0xeacf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1d, gbc.readMem(0xeace));
        // 1D 001A
        gbc.setState(0xf70, 0xca3c, 0x31d0, 0xc521, 0x5324, 0xdb81, 0x0, 0x1);
        gbc.writeMem(0xf70, { 0x1d });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0xca3c, gbc.sp());
        EXPECT(0xf71, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 1D 001B
        gbc.setState(0x765d, 0x15, 0xcd10, 0x1b3, 0xc8c5, 0x696f, 0x1, 0x1);
        gbc.writeMem(0x765d, { 0x1d });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x15, gbc.sp());
        EXPECT(0x765e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 1D 001C
        gbc.setState(0x185, 0xae02, 0xb910, 0x36c6, 0x36b3, 0x7b7a, 0x1, 0x0);
        gbc.writeMem(0x185, { 0x1d });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0xae02, gbc.sp());
        EXPECT(0x186, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 1D 001D
        gbc.setState(0x329e, 0xd172, 0xb480, 0xe878, 0xa2f5, 0x6dfc, 0x1, 0x0);
        gbc.writeMem(0x329e, { 0x1d });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0xd172, gbc.sp());
        EXPECT(0x329f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 1D 001E
        gbc.setState(0x4992, 0x8c04, 0xd320, 0x788, 0xbf82, 0x8f9b, 0x1, 0x1);
        gbc.writeMem(0x4992, { 0x1d });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x8c04, gbc.sp());
        EXPECT(0x4993, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 1D 001F
        gbc.setState(0x1228, 0xe266, 0x8780, 0x9c36, 0xdbac, 0xd9ce, 0x1, 0x1);
        gbc.writeMem(0x1228, { 0x1d });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0xe266, gbc.sp());
        EXPECT(0x1229, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 1D 0020
        gbc.setState(0xe419, 0x7cb3, 0x35f0, 0xa200, 0x8b21, 0xc508, 0x1, 0x0);
        gbc.writeMem(0xe419, { 0x1d });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x7cb3, gbc.sp());
        EXPECT(0xe41a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1d, gbc.readMem(0xe419));
        // 1D 0021
        gbc.setState(0xea98, 0x66c7, 0x1d90, 0x964, 0x27, 0xb9aa, 0x0, 0x0);
        gbc.writeMem(0xea98, { 0x1d });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x66c7, gbc.sp());
        EXPECT(0xea99, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1d, gbc.readMem(0xea98));
        // 1D 0022
        gbc.setState(0x4050, 0x7bae, 0x7420, 0xece5, 0xadc7, 0x11d6, 0x1, 0x0);
        gbc.writeMem(0x4050, { 0x1d });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x7bae, gbc.sp());
        EXPECT(0x4051, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 1D 0023
        gbc.setState(0x9559, 0x5e40, 0xbfc0, 0xe1de, 0x1f3b, 0x7dba, 0x0, 0x0);
        gbc.writeMem(0x9559, { 0x1d });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0x5e40, gbc.sp());
        EXPECT(0x955a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1d, gbc.readMem(0x9559));
        // 1D 0024
        gbc.setState(0x68d8, 0x715f, 0x4550, 0x53b6, 0x7159, 0x2956, 0x1, 0x0);
        gbc.writeMem(0x68d8, { 0x1d });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0x715f, gbc.sp());
        EXPECT(0x68d9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 1D 0025
        gbc.setState(0x8fc4, 0xdb55, 0xa5b0, 0xcd02, 0xdfac, 0xa1b8, 0x0, 0x0);
        gbc.writeMem(0x8fc4, { 0x1d });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0xdb55, gbc.sp());
        EXPECT(0x8fc5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1d, gbc.readMem(0x8fc4));
        // 1D 0026
        gbc.setState(0x59d1, 0xd5fa, 0xb860, 0x96eb, 0xcd15, 0x74c4, 0x1, 0x1);
        gbc.writeMem(0x59d1, { 0x1d });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0xd5fa, gbc.sp());
        EXPECT(0x59d2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 1D 0027
        gbc.setState(0xca37, 0xc23f, 0x7c50, 0x82d, 0xebc9, 0xe007, 0x1, 0x0);
        gbc.writeMem(0xca37, { 0x1d });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0xc23f, gbc.sp());
        EXPECT(0xca38, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1d, gbc.readMem(0xca37));
        // 1D 0028
        gbc.setState(0x7455, 0xdea1, 0xfcd0, 0xbbdd, 0xae38, 0xffe6, 0x1, 0x1);
        gbc.writeMem(0x7455, { 0x1d });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0xdea1, gbc.sp());
        EXPECT(0x7456, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 1D 0029
        gbc.setState(0x1d3, 0xb5c5, 0x3060, 0x3f51, 0x31ae, 0xfbc7, 0x1, 0x1);
        gbc.writeMem(0x1d3, { 0x1d });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0xb5c5, gbc.sp());
        EXPECT(0x1d4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 1D 002A
        gbc.setState(0x2dc5, 0xbd3f, 0x450, 0x74be, 0x728a, 0xbac5, 0x1, 0x1);
        gbc.writeMem(0x2dc5, { 0x1d });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0xbd3f, gbc.sp());
        EXPECT(0x2dc6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 1D 002B
        gbc.setState(0xebf6, 0x55db, 0x4e10, 0x4a03, 0x1296, 0xfeb8, 0x0, 0x0);
        gbc.writeMem(0xebf6, { 0x1d });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x55db, gbc.sp());
        EXPECT(0xebf7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1d, gbc.readMem(0xebf6));
        // 1D 002D
        gbc.setState(0x74f3, 0x965b, 0x9400, 0x3f03, 0x1577, 0x50f9, 0x0, 0x1);
        gbc.writeMem(0x74f3, { 0x1d });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x965b, gbc.sp());
        EXPECT(0x74f4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 1D 002E
        gbc.setState(0xe26b, 0xa555, 0xadb0, 0x32a9, 0x8a31, 0x7571, 0x1, 0x0);
        gbc.writeMem(0xe26b, { 0x1d });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0xa555, gbc.sp());
        EXPECT(0xe26c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1d, gbc.readMem(0xe26b));
        // 1D 002F
        gbc.setState(0xbb6d, 0x4459, 0x7be0, 0x33eb, 0xb43d, 0x1565, 0x1, 0x0);
        gbc.writeMem(0xbb6d, { 0x1d });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x4459, gbc.sp());
        EXPECT(0xbb6e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1d, gbc.readMem(0xbb6d));
        // 1D 0030
        gbc.setState(0x1699, 0x3fa0, 0x5ea0, 0x3e1a, 0xcc2e, 0x2d6f, 0x0, 0x0);
        gbc.writeMem(0x1699, { 0x1d });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x3fa0, gbc.sp());
        EXPECT(0x169a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 1D 0031
        gbc.setState(0x59bd, 0xd76b, 0xecc0, 0xbceb, 0x4ab, 0xf4dc, 0x1, 0x1);
        gbc.writeMem(0x59bd, { 0x1d });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0xd76b, gbc.sp());
        EXPECT(0x59be, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 1D 0032
        gbc.setState(0x6eeb, 0x3390, 0x3dd0, 0x2238, 0xf6df, 0x812f, 0x1, 0x0);
        gbc.writeMem(0x6eeb, { 0x1d });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x3390, gbc.sp());
        EXPECT(0x6eec, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 1D 0033
        gbc.setState(0xea7, 0xff6, 0x1d50, 0x363, 0x86ba, 0xd35e, 0x1, 0x1);
        gbc.writeMem(0xea7, { 0x1d });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0xff6, gbc.sp());
        EXPECT(0xea8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 1D 0034
        gbc.setState(0x8228, 0x30c1, 0x80e0, 0x8050, 0x9244, 0x1077, 0x0, 0x1);
        gbc.writeMem(0x8228, { 0x1d });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x30c1, gbc.sp());
        EXPECT(0x8229, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1d, gbc.readMem(0x8228));
        // 1D 0035
        gbc.setState(0x39b0, 0x7974, 0x4e90, 0x65c8, 0x96f6, 0xae36, 0x0, 0x0);
        gbc.writeMem(0x39b0, { 0x1d });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x7974, gbc.sp());
        EXPECT(0x39b1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 1D 0036
        gbc.setState(0x8c77, 0x4b5b, 0xe820, 0xa247, 0x12ce, 0x5cc, 0x1, 0x1);
        gbc.writeMem(0x8c77, { 0x1d });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x4b5b, gbc.sp());
        EXPECT(0x8c78, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1d, gbc.readMem(0x8c77));
        // 1D 0037
        gbc.setState(0xdf0a, 0xf98f, 0x7d70, 0x5fcb, 0x6138, 0x7ae8, 0x1, 0x0);
        gbc.writeMem(0xdf0a, { 0x1d });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0xf98f, gbc.sp());
        EXPECT(0xdf0b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1d, gbc.readMem(0xdf0a));
        // 1D 0038
        gbc.setState(0x2e99, 0xb5e9, 0xe720, 0x2a6a, 0x1b56, 0x5b0e, 0x0, 0x1);
        gbc.writeMem(0x2e99, { 0x1d });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0xb5e9, gbc.sp());
        EXPECT(0x2e9a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 1D 0039
        gbc.setState(0xd9a6, 0xa007, 0xc7f0, 0x2a04, 0x8516, 0x743e, 0x0, 0x0);
        gbc.writeMem(0xd9a6, { 0x1d });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0xa007, gbc.sp());
        EXPECT(0xd9a7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1d, gbc.readMem(0xd9a6));
        // 1D 003A
        gbc.setState(0xdd9f, 0xecb, 0x750, 0xac86, 0xdd89, 0xe51c, 0x1, 0x1);
        gbc.writeMem(0xdd9f, { 0x1d });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0xecb, gbc.sp());
        EXPECT(0xdda0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1d, gbc.readMem(0xdd9f));
        // 1D 003B
        gbc.setState(0x180a, 0x91e2, 0xad90, 0x26fe, 0x26f0, 0xbca2, 0x1, 0x0);
        gbc.writeMem(0x180a, { 0x1d });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x91e2, gbc.sp());
        EXPECT(0x180b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 1D 003C
        gbc.setState(0x9758, 0x2c39, 0xe8e0, 0x66a9, 0x7bdd, 0xc8a4, 0x0, 0x0);
        gbc.writeMem(0x9758, { 0x1d });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x2c39, gbc.sp());
        EXPECT(0x9759, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1d, gbc.readMem(0x9758));
        // 1D 003E
        gbc.setState(0x7a3c, 0x24bc, 0xbf40, 0x4cee, 0xc166, 0xa705, 0x1, 0x0);
        gbc.writeMem(0x7a3c, { 0x1d });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x24bc, gbc.sp());
        EXPECT(0x7a3d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 1D 003F
        gbc.setState(0x8e7b, 0x7c51, 0x7e30, 0x868d, 0x62ae, 0x6fca, 0x1, 0x1);
        gbc.writeMem(0x8e7b, { 0x1d });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x7c51, gbc.sp());
        EXPECT(0x8e7c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1d, gbc.readMem(0x8e7b));
        // 1D 0040
        gbc.setState(0x73b5, 0xfef4, 0xbec0, 0x89ae, 0xe7e4, 0x237d, 0x0, 0x0);
        gbc.writeMem(0x73b5, { 0x1d });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0xfef4, gbc.sp());
        EXPECT(0x73b6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 1D 0042
        gbc.setState(0x5134, 0xd32f, 0xbde0, 0x35e3, 0xc273, 0xe1eb, 0x1, 0x1);
        gbc.writeMem(0x5134, { 0x1d });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0xd32f, gbc.sp());
        EXPECT(0x5135, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 1D 0043
        gbc.setState(0x4cdf, 0x4185, 0x6c00, 0x7553, 0xe661, 0xc9de, 0x1, 0x1);
        gbc.writeMem(0x4cdf, { 0x1d });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x4185, gbc.sp());
        EXPECT(0x4ce0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 1D 0045
        gbc.setState(0xe349, 0x948c, 0x55c0, 0x15ee, 0xa593, 0xd2b8, 0x0, 0x1);
        gbc.writeMem(0xe349, { 0x1d });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x948c, gbc.sp());
        EXPECT(0xe34a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1d, gbc.readMem(0xe349));
        // 1D 0046
        gbc.setState(0xecd5, 0x842a, 0xade0, 0x344, 0x2f45, 0x4291, 0x1, 0x0);
        gbc.writeMem(0xecd5, { 0x1d });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x842a, gbc.sp());
        EXPECT(0xecd6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1d, gbc.readMem(0xecd5));
        // 1D 0047
        gbc.setState(0xe0cb, 0xf2ab, 0x6830, 0x70e0, 0x44ac, 0xa643, 0x0, 0x0);
        gbc.writeMem(0xe0cb, { 0x1d });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0xf2ab, gbc.sp());
        EXPECT(0xe0cc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1d, gbc.readMem(0xe0cb));
        // 1D 0048
        gbc.setState(0x9dd0, 0xae54, 0x6320, 0xca91, 0xd9a2, 0x20df, 0x0, 0x0);
        gbc.writeMem(0x9dd0, { 0x1d });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0xae54, gbc.sp());
        EXPECT(0x9dd1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1d, gbc.readMem(0x9dd0));
        // 1D 0049
        gbc.setState(0xc11d, 0x7fe7, 0x7070, 0x9bc8, 0x24b8, 0xd015, 0x0, 0x1);
        gbc.writeMem(0xc11d, { 0x1d });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x7fe7, gbc.sp());
        EXPECT(0xc11e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1d, gbc.readMem(0xc11d));
        // 1D 004A
        gbc.setState(0xcc87, 0xc450, 0x3c50, 0xd29f, 0xfa1f, 0xce00, 0x1, 0x0);
        gbc.writeMem(0xcc87, { 0x1d });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0xc450, gbc.sp());
        EXPECT(0xcc88, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1d, gbc.readMem(0xcc87));
        // 1D 004B
        gbc.setState(0x2f4b, 0x8fdd, 0x9ff0, 0x1ab1, 0x139b, 0xb61c, 0x1, 0x1);
        gbc.writeMem(0x2f4b, { 0x1d });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x8fdd, gbc.sp());
        EXPECT(0x2f4c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 1D 004D
        gbc.setState(0x8b4b, 0x1d27, 0x3b80, 0x330d, 0x87a4, 0xf388, 0x0, 0x0);
        gbc.writeMem(0x8b4b, { 0x1d });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x1d27, gbc.sp());
        EXPECT(0x8b4c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1d, gbc.readMem(0x8b4b));
        // 1D 004E
        gbc.setState(0x9f15, 0x967c, 0x7dc0, 0x865e, 0xcfd, 0x4c93, 0x0, 0x1);
        gbc.writeMem(0x9f15, { 0x1d });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0x967c, gbc.sp());
        EXPECT(0x9f16, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1d, gbc.readMem(0x9f15));
        // 1D 004F
        gbc.setState(0x3b7e, 0x1017, 0xe980, 0xc857, 0x3ca3, 0x8f49, 0x0, 0x1);
        gbc.writeMem(0x3b7e, { 0x1d });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x1017, gbc.sp());
        EXPECT(0x3b7f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 1D 0050
        gbc.setState(0xeb8a, 0x276, 0xbbc0, 0x7723, 0xd29c, 0xb3cf, 0x0, 0x0);
        gbc.writeMem(0xeb8a, { 0x1d });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x276, gbc.sp());
        EXPECT(0xeb8b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1d, gbc.readMem(0xeb8a));
        // 1D 0051
        gbc.setState(0xe4d6, 0x1359, 0xaa80, 0xf444, 0x8953, 0xf78d, 0x1, 0x1);
        gbc.writeMem(0xe4d6, { 0x1d });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x1359, gbc.sp());
        EXPECT(0xe4d7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1d, gbc.readMem(0xe4d6));
        // 1D 0052
        gbc.setState(0x2645, 0x4972, 0x53f0, 0x2640, 0xc140, 0xfa53, 0x0, 0x0);
        gbc.writeMem(0x2645, { 0x1d });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x4972, gbc.sp());
        EXPECT(0x2646, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 1D 0053
        gbc.setState(0x7c14, 0x94c8, 0xf050, 0x4c28, 0x7615, 0x771a, 0x1, 0x0);
        gbc.writeMem(0x7c14, { 0x1d });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x94c8, gbc.sp());
        EXPECT(0x7c15, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 1D 0054
        gbc.setState(0x14e8, 0x6da1, 0x4020, 0x8978, 0x6047, 0x6118, 0x0, 0x1);
        gbc.writeMem(0x14e8, { 0x1d });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x6da1, gbc.sp());
        EXPECT(0x14e9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 1D 0055
        gbc.setState(0x2874, 0xb5bc, 0x6040, 0x64fa, 0x5e, 0x928a, 0x1, 0x0);
        gbc.writeMem(0x2874, { 0x1d });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0xb5bc, gbc.sp());
        EXPECT(0x2875, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 1D 0056
        gbc.setState(0xf31, 0x615, 0x8f20, 0xd141, 0xb543, 0x7864, 0x0, 0x0);
        gbc.writeMem(0xf31, { 0x1d });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x615, gbc.sp());
        EXPECT(0xf32, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 1D 0057
        gbc.setState(0x2b53, 0x61af, 0x66c0, 0x1f33, 0x7e7f, 0xc375, 0x0, 0x0);
        gbc.writeMem(0x2b53, { 0x1d });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x61af, gbc.sp());
        EXPECT(0x2b54, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 1D 0058
        gbc.setState(0x744f, 0x558, 0x2a40, 0x2d5, 0x2417, 0xdfae, 0x0, 0x1);
        gbc.writeMem(0x744f, { 0x1d });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0x558, gbc.sp());
        EXPECT(0x7450, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 1D 0059
        gbc.setState(0x5d95, 0x8745, 0xdc60, 0xe381, 0x2efd, 0xed56, 0x1, 0x0);
        gbc.writeMem(0x5d95, { 0x1d });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0x8745, gbc.sp());
        EXPECT(0x5d96, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 1D 005A
        gbc.setState(0x7cd6, 0xa249, 0x6840, 0xe142, 0x866e, 0x71dd, 0x0, 0x0);
        gbc.writeMem(0x7cd6, { 0x1d });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0xa249, gbc.sp());
        EXPECT(0x7cd7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 1D 005B
        gbc.setState(0xbc38, 0xc039, 0xc3b0, 0x46a1, 0x5ff, 0x5539, 0x1, 0x1);
        gbc.writeMem(0xbc38, { 0x1d });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0xc039, gbc.sp());
        EXPECT(0xbc39, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1d, gbc.readMem(0xbc38));
        // 1D 005C
        gbc.setState(0x700e, 0x2d6e, 0x6a10, 0x30ff, 0xd047, 0x5842, 0x1, 0x0);
        gbc.writeMem(0x700e, { 0x1d });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x2d6e, gbc.sp());
        EXPECT(0x700f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 1D 005D
        gbc.setState(0x751c, 0x2e9d, 0xe090, 0x70bf, 0x867c, 0x1d3c, 0x1, 0x1);
        gbc.writeMem(0x751c, { 0x1d });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x2e9d, gbc.sp());
        EXPECT(0x751d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 1D 005E
        gbc.setState(0x5363, 0x438d, 0xaec0, 0xbbd1, 0xe7b2, 0xbc9, 0x1, 0x0);
        gbc.writeMem(0x5363, { 0x1d });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x438d, gbc.sp());
        EXPECT(0x5364, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 1D 005F
        gbc.setState(0x5403, 0x6f1d, 0x2cb0, 0x7860, 0x1410, 0x1ab, 0x1, 0x1);
        gbc.writeMem(0x5403, { 0x1d });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x6f1d, gbc.sp());
        EXPECT(0x5404, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 1D 0060
        gbc.setState(0x3dc9, 0xb1d0, 0x6870, 0x5057, 0x25b3, 0x4a0b, 0x1, 0x1);
        gbc.writeMem(0x3dc9, { 0x1d });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0xb1d0, gbc.sp());
        EXPECT(0x3dca, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 1D 0061
        gbc.setState(0xbaeb, 0x835e, 0x9be0, 0x3f12, 0xb150, 0x7b6, 0x0, 0x1);
        gbc.writeMem(0xbaeb, { 0x1d });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x835e, gbc.sp());
        EXPECT(0xbaec, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1d, gbc.readMem(0xbaeb));
        // 1D 0062
        gbc.setState(0x9b52, 0x7567, 0xf940, 0xdb25, 0x5b53, 0x780b, 0x1, 0x0);
        gbc.writeMem(0x9b52, { 0x1d });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x7567, gbc.sp());
        EXPECT(0x9b53, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1d, gbc.readMem(0x9b52));
        // 1D 0063
        gbc.setState(0x19b1, 0xc002, 0x4030, 0x84fa, 0x2e3d, 0xf151, 0x1, 0x0);
        gbc.writeMem(0x19b1, { 0x1d });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0xc002, gbc.sp());
        EXPECT(0x19b2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 1D 0064
        gbc.setState(0xb4f2, 0x77d3, 0x48d0, 0x62b5, 0x5c50, 0x776e, 0x0, 0x0);
        gbc.writeMem(0xb4f2, { 0x1d });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x77d3, gbc.sp());
        EXPECT(0xb4f3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1d, gbc.readMem(0xb4f2));
        // 1D 0065
        gbc.setState(0x8e2b, 0x6435, 0x3a20, 0x5b3, 0x1aab, 0xfcf3, 0x1, 0x0);
        gbc.writeMem(0x8e2b, { 0x1d });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x6435, gbc.sp());
        EXPECT(0x8e2c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1d, gbc.readMem(0x8e2b));
        // 1D 0066
        gbc.setState(0x2ef, 0x215c, 0x5340, 0x9bdc, 0xd8ff, 0x118c, 0x0, 0x0);
        gbc.writeMem(0x2ef, { 0x1d });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x215c, gbc.sp());
        EXPECT(0x2f0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 1D 0067
        gbc.setState(0x5e7d, 0x11d2, 0xe000, 0x9df7, 0xa7d5, 0x20ab, 0x1, 0x1);
        gbc.writeMem(0x5e7d, { 0x1d });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x11d2, gbc.sp());
        EXPECT(0x5e7e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 1D 0068
        gbc.setState(0x103, 0x32d6, 0x8360, 0xfb58, 0xd93b, 0xba64, 0x0, 0x1);
        gbc.writeMem(0x103, { 0x1d });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x32d6, gbc.sp());
        EXPECT(0x104, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 1D 0069
        gbc.setState(0x5b3f, 0xff01, 0xfe00, 0x39c0, 0x3561, 0xa12d, 0x0, 0x0);
        gbc.writeMem(0x5b3f, { 0x1d });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0xff01, gbc.sp());
        EXPECT(0x5b40, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 1D 006A
        gbc.setState(0xd5dc, 0x157c, 0x4390, 0xb9f0, 0x1baf, 0x26dd, 0x1, 0x1);
        gbc.writeMem(0xd5dc, { 0x1d });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x157c, gbc.sp());
        EXPECT(0xd5dd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1d, gbc.readMem(0xd5dc));
        // 1D 006B
        gbc.setState(0x6860, 0xc24f, 0x75c0, 0x1c7d, 0x688c, 0x5ff4, 0x1, 0x0);
        gbc.writeMem(0x6860, { 0x1d });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0xc24f, gbc.sp());
        EXPECT(0x6861, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 1D 006C
        gbc.setState(0xaf92, 0x9a89, 0x93d0, 0x1507, 0x4463, 0x7972, 0x1, 0x1);
        gbc.writeMem(0xaf92, { 0x1d });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x9a89, gbc.sp());
        EXPECT(0xaf93, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1d, gbc.readMem(0xaf92));
        // 1D 006D
        gbc.setState(0xa49f, 0x3667, 0xaa90, 0x6afa, 0xbdf4, 0x7c99, 0x1, 0x1);
        gbc.writeMem(0xa49f, { 0x1d });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x3667, gbc.sp());
        EXPECT(0xa4a0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1d, gbc.readMem(0xa49f));
        // 1D 006F
        gbc.setState(0x8735, 0x4808, 0xb040, 0xcf4b, 0x7db0, 0x1aa5, 0x0, 0x0);
        gbc.writeMem(0x8735, { 0x1d });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x4808, gbc.sp());
        EXPECT(0x8736, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1d, gbc.readMem(0x8735));
        // 1D 0070
        gbc.setState(0xeec5, 0x4a57, 0xd370, 0x8856, 0xcac2, 0x64b2, 0x0, 0x1);
        gbc.writeMem(0xeec5, { 0x1d });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x4a57, gbc.sp());
        EXPECT(0xeec6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1d, gbc.readMem(0xeec5));
        // 1D 0071
        gbc.setState(0x1e18, 0xaf4a, 0x76c0, 0x7913, 0x805e, 0xf8e1, 0x0, 0x0);
        gbc.writeMem(0x1e18, { 0x1d });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0xaf4a, gbc.sp());
        EXPECT(0x1e19, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 1D 0072
        gbc.setState(0xbfb1, 0x68c4, 0xf9b0, 0xc3ef, 0x3c0c, 0xc5e1, 0x0, 0x0);
        gbc.writeMem(0xbfb1, { 0x1d });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0x68c4, gbc.sp());
        EXPECT(0xbfb2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1d, gbc.readMem(0xbfb1));
        // 1D 0073
        gbc.setState(0x1c9b, 0xe9b4, 0xe710, 0xe5f0, 0xf83c, 0xb249, 0x0, 0x1);
        gbc.writeMem(0x1c9b, { 0x1d });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0xe9b4, gbc.sp());
        EXPECT(0x1c9c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 1D 0074
        gbc.setState(0x79bd, 0xb9a4, 0x3e80, 0x89d9, 0x1a9d, 0x3f38, 0x1, 0x1);
        gbc.writeMem(0x79bd, { 0x1d });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0xb9a4, gbc.sp());
        EXPECT(0x79be, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 1D 0076
        gbc.setState(0x75e8, 0x9ed6, 0x2dd0, 0x9e8b, 0x1863, 0xf808, 0x1, 0x0);
        gbc.writeMem(0x75e8, { 0x1d });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x9ed6, gbc.sp());
        EXPECT(0x75e9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 1D 0078
        gbc.setState(0x9735, 0x9dea, 0xe6b0, 0xbda0, 0x1124, 0xc1f6, 0x1, 0x0);
        gbc.writeMem(0x9735, { 0x1d });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x9dea, gbc.sp());
        EXPECT(0x9736, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1d, gbc.readMem(0x9735));
        // 1D 0079
        gbc.setState(0x77d3, 0x714f, 0xd360, 0xcec6, 0x9360, 0xbcd3, 0x1, 0x0);
        gbc.writeMem(0x77d3, { 0x1d });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x714f, gbc.sp());
        EXPECT(0x77d4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 1D 007A
        gbc.setState(0xce41, 0x7, 0x36b0, 0xa289, 0x20ae, 0x6417, 0x1, 0x0);
        gbc.writeMem(0xce41, { 0x1d });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x7, gbc.sp());
        EXPECT(0xce42, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1d, gbc.readMem(0xce41));
        // 1D 007B
        gbc.setState(0x956, 0x6fa3, 0x7bf0, 0x8b57, 0xc7a, 0x8dce, 0x0, 0x0);
        gbc.writeMem(0x956, { 0x1d });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x6fa3, gbc.sp());
        EXPECT(0x957, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 1D 007C
        gbc.setState(0xeb76, 0xaa3e, 0xb390, 0xda39, 0xe00b, 0x9afd, 0x0, 0x1);
        gbc.writeMem(0xeb76, { 0x1d });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0xaa3e, gbc.sp());
        EXPECT(0xeb77, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1d, gbc.readMem(0xeb76));
        // 1D 007D
        gbc.setState(0x536d, 0xbaed, 0xb5b0, 0xdb8f, 0x470b, 0x4e23, 0x0, 0x1);
        gbc.writeMem(0x536d, { 0x1d });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0xbaed, gbc.sp());
        EXPECT(0x536e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 1D 007E
        gbc.setState(0x9ea, 0x9fb6, 0x96c0, 0x8452, 0x2faf, 0x7888, 0x0, 0x1);
        gbc.writeMem(0x9ea, { 0x1d });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x9fb6, gbc.sp());
        EXPECT(0x9eb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 1D 007F
        gbc.setState(0x9c18, 0x360d, 0x6d90, 0xcfc8, 0xb89e, 0xf578, 0x1, 0x1);
        gbc.writeMem(0x9c18, { 0x1d });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x360d, gbc.sp());
        EXPECT(0x9c19, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1d, gbc.readMem(0x9c18));
        // 1D 0080
        gbc.setState(0xe0d6, 0x5ef9, 0x71b0, 0x7a42, 0xd63d, 0xebde, 0x0, 0x0);
        gbc.writeMem(0xe0d6, { 0x1d });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x5ef9, gbc.sp());
        EXPECT(0xe0d7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1d, gbc.readMem(0xe0d6));
        // 1D 0081
        gbc.setState(0xebad, 0x40aa, 0xfaa0, 0xe58f, 0xc17e, 0x86c0, 0x0, 0x0);
        gbc.writeMem(0xebad, { 0x1d });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x40aa, gbc.sp());
        EXPECT(0xebae, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1d, gbc.readMem(0xebad));
        // 1D 0082
        gbc.setState(0xc1f1, 0x5848, 0x9fc0, 0x7969, 0xca56, 0xb18d, 0x1, 0x0);
        gbc.writeMem(0xc1f1, { 0x1d });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x5848, gbc.sp());
        EXPECT(0xc1f2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1d, gbc.readMem(0xc1f1));
        // 1D 0083
        gbc.setState(0xc32, 0xef46, 0x2b70, 0x634e, 0xc26c, 0x4483, 0x1, 0x1);
        gbc.writeMem(0xc32, { 0x1d });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0xef46, gbc.sp());
        EXPECT(0xc33, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 1D 0085
        gbc.setState(0xcd63, 0x7f42, 0x3890, 0x24ed, 0x384f, 0xa500, 0x1, 0x1);
        gbc.writeMem(0xcd63, { 0x1d });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x7f42, gbc.sp());
        EXPECT(0xcd64, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1d, gbc.readMem(0xcd63));
        // 1D 0086
        gbc.setState(0x55e1, 0x3867, 0xc410, 0xa252, 0x794d, 0xf87, 0x1, 0x0);
        gbc.writeMem(0x55e1, { 0x1d });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x3867, gbc.sp());
        EXPECT(0x55e2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 1D 0087
        gbc.setState(0x85fb, 0xd7af, 0xcf30, 0xa591, 0x6a82, 0x57a7, 0x0, 0x0);
        gbc.writeMem(0x85fb, { 0x1d });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0xd7af, gbc.sp());
        EXPECT(0x85fc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1d, gbc.readMem(0x85fb));
        // 1D 0088
        gbc.setState(0x92fa, 0x2263, 0x8530, 0xc146, 0xd6b4, 0x2941, 0x1, 0x0);
        gbc.writeMem(0x92fa, { 0x1d });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x2263, gbc.sp());
        EXPECT(0x92fb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1d, gbc.readMem(0x92fa));
        // 1D 0089
        gbc.setState(0x241b, 0x38ec, 0x6530, 0xda30, 0xfa13, 0x3fc9, 0x1, 0x1);
        gbc.writeMem(0x241b, { 0x1d });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x38ec, gbc.sp());
        EXPECT(0x241c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 1D 008A
        gbc.setState(0x9136, 0x751f, 0x3c20, 0x851d, 0x3cdb, 0x29c1, 0x1, 0x1);
        gbc.writeMem(0x9136, { 0x1d });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x751f, gbc.sp());
        EXPECT(0x9137, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1d, gbc.readMem(0x9136));
        // 1D 008B
        gbc.setState(0x44f8, 0xadf6, 0x2190, 0xb1b3, 0x16f1, 0xc4f3, 0x1, 0x1);
        gbc.writeMem(0x44f8, { 0x1d });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0xadf6, gbc.sp());
        EXPECT(0x44f9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 1D 008D
        gbc.setState(0x6d81, 0x39d2, 0x9d50, 0xa949, 0x2c06, 0x22c7, 0x1, 0x0);
        gbc.writeMem(0x6d81, { 0x1d });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x39d2, gbc.sp());
        EXPECT(0x6d82, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 1D 008E
        gbc.setState(0x6c53, 0x3fd3, 0x2160, 0x4258, 0x5dd5, 0x5db, 0x0, 0x1);
        gbc.writeMem(0x6c53, { 0x1d });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x3fd3, gbc.sp());
        EXPECT(0x6c54, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 1D 008F
        gbc.setState(0x4908, 0xaab3, 0x95b0, 0x4c1f, 0x6682, 0x3c7d, 0x1, 0x1);
        gbc.writeMem(0x4908, { 0x1d });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0xaab3, gbc.sp());
        EXPECT(0x4909, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 1D 0091
        gbc.setState(0x1be2, 0x523e, 0xcab0, 0x64db, 0x1116, 0xe51f, 0x1, 0x0);
        gbc.writeMem(0x1be2, { 0x1d });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x523e, gbc.sp());
        EXPECT(0x1be3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 1D 0092
        gbc.setState(0x4cba, 0x55a1, 0x5a40, 0x7b53, 0x7c60, 0xc4f, 0x0, 0x1);
        gbc.writeMem(0x4cba, { 0x1d });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x55a1, gbc.sp());
        EXPECT(0x4cbb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 1D 0093
        gbc.setState(0x73c0, 0x958e, 0x2f0, 0x8db7, 0x8b7d, 0xa74a, 0x0, 0x0);
        gbc.writeMem(0x73c0, { 0x1d });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x958e, gbc.sp());
        EXPECT(0x73c1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 1D 0094
        gbc.setState(0xbf61, 0xe584, 0xff50, 0x2466, 0x4d75, 0x81d5, 0x1, 0x1);
        gbc.writeMem(0xbf61, { 0x1d });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0xe584, gbc.sp());
        EXPECT(0xbf62, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1d, gbc.readMem(0xbf61));
        // 1D 0095
        gbc.setState(0xa4c1, 0x6476, 0x6e80, 0x59e8, 0x2244, 0xf612, 0x1, 0x1);
        gbc.writeMem(0xa4c1, { 0x1d });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x6476, gbc.sp());
        EXPECT(0xa4c2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1d, gbc.readMem(0xa4c1));
        // 1D 0096
        gbc.setState(0xc196, 0xf6f5, 0xcbd0, 0xd364, 0x55f7, 0xd2fe, 0x1, 0x1);
        gbc.writeMem(0xc196, { 0x1d });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0xf6f5, gbc.sp());
        EXPECT(0xc197, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1d, gbc.readMem(0xc196));
        // 1D 0097
        gbc.setState(0x18d7, 0x5849, 0xba80, 0xf2cf, 0xe7cc, 0xfa25, 0x0, 0x0);
        gbc.writeMem(0x18d7, { 0x1d });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x5849, gbc.sp());
        EXPECT(0x18d8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 1D 0098
        gbc.setState(0x99bc, 0xb8f4, 0xbb60, 0xdf6f, 0x7fcd, 0x7c9b, 0x1, 0x1);
        gbc.writeMem(0x99bc, { 0x1d });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0xb8f4, gbc.sp());
        EXPECT(0x99bd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1d, gbc.readMem(0x99bc));
        // 1D 0099
        gbc.setState(0x9205, 0x5b3, 0xeb30, 0xebca, 0x907e, 0x62e5, 0x1, 0x0);
        gbc.writeMem(0x9205, { 0x1d });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x5b3, gbc.sp());
        EXPECT(0x9206, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1d, gbc.readMem(0x9205));
        // 1D 009A
        gbc.setState(0x62a6, 0xd6b5, 0x86d0, 0x8b87, 0xf985, 0x321d, 0x1, 0x0);
        gbc.writeMem(0x62a6, { 0x1d });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0xd6b5, gbc.sp());
        EXPECT(0x62a7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 1D 009B
        gbc.setState(0xdb7c, 0x3d5b, 0x7610, 0xa08c, 0xf4e8, 0x98a9, 0x0, 0x0);
        gbc.writeMem(0xdb7c, { 0x1d });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x3d5b, gbc.sp());
        EXPECT(0xdb7d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1d, gbc.readMem(0xdb7c));
        // 1D 009C
        gbc.setState(0x5386, 0x7852, 0xdc70, 0x2d86, 0xbc9e, 0xb5e6, 0x0, 0x0);
        gbc.writeMem(0x5386, { 0x1d });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x7852, gbc.sp());
        EXPECT(0x5387, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 1D 009D
        gbc.setState(0x42f7, 0xeb64, 0xbc30, 0x56cf, 0x810c, 0x4042, 0x1, 0x1);
        gbc.writeMem(0x42f7, { 0x1d });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0xeb64, gbc.sp());
        EXPECT(0x42f8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 1D 009E
        gbc.setState(0x6263, 0xe4f1, 0x6ec0, 0x6da8, 0xa9d8, 0xb46b, 0x0, 0x0);
        gbc.writeMem(0x6263, { 0x1d });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0xe4f1, gbc.sp());
        EXPECT(0x6264, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 1D 009F
        gbc.setState(0x6de7, 0x5f99, 0xbd10, 0x1b77, 0x1206, 0x4eaa, 0x1, 0x1);
        gbc.writeMem(0x6de7, { 0x1d });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x5f99, gbc.sp());
        EXPECT(0x6de8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 1D 00A0
        gbc.setState(0xd7f0, 0x6d71, 0x3b30, 0x9003, 0xea87, 0x9dda, 0x1, 0x1);
        gbc.writeMem(0xd7f0, { 0x1d });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x6d71, gbc.sp());
        EXPECT(0xd7f1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1d, gbc.readMem(0xd7f0));
        // 1D 00A1
        gbc.setState(0xc7d7, 0xfbac, 0xe560, 0x25b8, 0x2142, 0x2072, 0x0, 0x0);
        gbc.writeMem(0xc7d7, { 0x1d });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0xfbac, gbc.sp());
        EXPECT(0xc7d8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1d, gbc.readMem(0xc7d7));
        // 1D 00A3
        gbc.setState(0x225a, 0x8561, 0x3830, 0xa7ec, 0x98b4, 0xa9da, 0x0, 0x1);
        gbc.writeMem(0x225a, { 0x1d });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x8561, gbc.sp());
        EXPECT(0x225b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 1D 00A4
        gbc.setState(0x9b2b, 0x229, 0x60d0, 0x3ad0, 0xa146, 0x1a68, 0x1, 0x0);
        gbc.writeMem(0x9b2b, { 0x1d });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x229, gbc.sp());
        EXPECT(0x9b2c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1d, gbc.readMem(0x9b2b));
        // 1D 00A5
        gbc.setState(0xd0bb, 0x28eb, 0xfed0, 0x2dee, 0x2fd3, 0x31d2, 0x0, 0x1);
        gbc.writeMem(0xd0bb, { 0x1d });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x28eb, gbc.sp());
        EXPECT(0xd0bc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1d, gbc.readMem(0xd0bb));
        // 1D 00A6
        gbc.setState(0x406b, 0x17da, 0xedb0, 0x644, 0x7fc2, 0xf5df, 0x1, 0x0);
        gbc.writeMem(0x406b, { 0x1d });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x17da, gbc.sp());
        EXPECT(0x406c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 1D 00A7
        gbc.setState(0x1cb1, 0x8838, 0x6c40, 0x69cc, 0x4735, 0x9fdd, 0x1, 0x1);
        gbc.writeMem(0x1cb1, { 0x1d });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x8838, gbc.sp());
        EXPECT(0x1cb2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 1D 00A8
        gbc.setState(0x3e18, 0xad17, 0x6b10, 0x6ac9, 0xadcc, 0xd835, 0x1, 0x1);
        gbc.writeMem(0x3e18, { 0x1d });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0xad17, gbc.sp());
        EXPECT(0x3e19, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 1D 00A9
        gbc.setState(0x4c7e, 0xd6e, 0x7b70, 0xefa8, 0x8342, 0xc275, 0x0, 0x1);
        gbc.writeMem(0x4c7e, { 0x1d });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0xd6e, gbc.sp());
        EXPECT(0x4c7f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 1D 00AA
        gbc.setState(0x6216, 0x86af, 0x8070, 0x87cc, 0x4080, 0xdd6a, 0x0, 0x0);
        gbc.writeMem(0x6216, { 0x1d });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x86af, gbc.sp());
        EXPECT(0x6217, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 1D 00AD
        gbc.setState(0x1b19, 0x7d5a, 0xc750, 0x65b3, 0x941e, 0x5795, 0x0, 0x1);
        gbc.writeMem(0x1b19, { 0x1d });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x7d5a, gbc.sp());
        EXPECT(0x1b1a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 1D 00AE
        gbc.setState(0x9057, 0x5153, 0xc700, 0x3e5d, 0x8f1d, 0xd24b, 0x1, 0x0);
        gbc.writeMem(0x9057, { 0x1d });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x5153, gbc.sp());
        EXPECT(0x9058, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1d, gbc.readMem(0x9057));
        // 1D 00B0
        gbc.setState(0x4346, 0xe299, 0x2eb0, 0x5dae, 0x326e, 0x60d8, 0x0, 0x0);
        gbc.writeMem(0x4346, { 0x1d });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0xe299, gbc.sp());
        EXPECT(0x4347, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 1D 00B1
        gbc.setState(0x86c8, 0x905e, 0x3050, 0xfe0b, 0xc59e, 0xa76b, 0x1, 0x0);
        gbc.writeMem(0x86c8, { 0x1d });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x905e, gbc.sp());
        EXPECT(0x86c9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1d, gbc.readMem(0x86c8));
        // 1D 00B2
        gbc.setState(0x8257, 0xc716, 0x79d0, 0x6992, 0x8d93, 0x35a8, 0x0, 0x0);
        gbc.writeMem(0x8257, { 0x1d });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0xc716, gbc.sp());
        EXPECT(0x8258, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1d, gbc.readMem(0x8257));
        // 1D 00B3
        gbc.setState(0xee0f, 0xfbb4, 0xeb10, 0x56b8, 0x6319, 0xeac2, 0x1, 0x1);
        gbc.writeMem(0xee0f, { 0x1d });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0xfbb4, gbc.sp());
        EXPECT(0xee10, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1d, gbc.readMem(0xee0f));
        // 1D 00B4
        gbc.setState(0xba1f, 0x103a, 0x3670, 0x33e4, 0xff13, 0xa5cf, 0x0, 0x0);
        gbc.writeMem(0xba1f, { 0x1d });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x103a, gbc.sp());
        EXPECT(0xba20, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1d, gbc.readMem(0xba1f));
        // 1D 00B5
        gbc.setState(0xdd62, 0x2dbd, 0xc520, 0x4200, 0x9d5e, 0x3f6, 0x1, 0x1);
        gbc.writeMem(0xdd62, { 0x1d });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x2dbd, gbc.sp());
        EXPECT(0xdd63, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1d, gbc.readMem(0xdd62));
        // 1D 00B6
        gbc.setState(0x406a, 0x2ada, 0x67d0, 0x433, 0x3063, 0x5946, 0x1, 0x0);
        gbc.writeMem(0x406a, { 0x1d });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x2ada, gbc.sp());
        EXPECT(0x406b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 1D 00B7
        gbc.setState(0x29b1, 0xf912, 0xe850, 0xd5b8, 0xc16f, 0xb151, 0x1, 0x1);
        gbc.writeMem(0x29b1, { 0x1d });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0xf912, gbc.sp());
        EXPECT(0x29b2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 1D 00BA
        gbc.setState(0xea13, 0x6d0e, 0xb3d0, 0x9e1a, 0x266d, 0xdaf8, 0x0, 0x1);
        gbc.writeMem(0xea13, { 0x1d });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x6d0e, gbc.sp());
        EXPECT(0xea14, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1d, gbc.readMem(0xea13));
        // 1D 00BC
        gbc.setState(0x8e6a, 0x808d, 0xde50, 0x193a, 0x575e, 0x734d, 0x0, 0x1);
        gbc.writeMem(0x8e6a, { 0x1d });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x808d, gbc.sp());
        EXPECT(0x8e6b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1d, gbc.readMem(0x8e6a));
        // 1D 00BD
        gbc.setState(0xe309, 0x8c5, 0x5720, 0xd61e, 0xb032, 0x27e2, 0x1, 0x0);
        gbc.writeMem(0xe309, { 0x1d });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x8c5, gbc.sp());
        EXPECT(0xe30a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1d, gbc.readMem(0xe309));
        // 1D 00BE
        gbc.setState(0x4795, 0x3cd2, 0xed20, 0x6cce, 0x5abd, 0x3d7d, 0x1, 0x0);
        gbc.writeMem(0x4795, { 0x1d });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x3cd2, gbc.sp());
        EXPECT(0x4796, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 1D 00BF
        gbc.setState(0x8847, 0xf014, 0x1c10, 0x3495, 0x7c49, 0xf987, 0x1, 0x0);
        gbc.writeMem(0x8847, { 0x1d });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0xf014, gbc.sp());
        EXPECT(0x8848, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1d, gbc.readMem(0x8847));
        // 1D 00C0
        gbc.setState(0x541c, 0xb353, 0xe5b0, 0x350, 0xe649, 0x3d49, 0x0, 0x0);
        gbc.writeMem(0x541c, { 0x1d });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0xb353, gbc.sp());
        EXPECT(0x541d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 1D 00C1
        gbc.setState(0x8859, 0xcd12, 0x8c00, 0xc66a, 0xeef1, 0xe950, 0x1, 0x1);
        gbc.writeMem(0x8859, { 0x1d });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0xcd12, gbc.sp());
        EXPECT(0x885a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1d, gbc.readMem(0x8859));
        // 1D 00C2
        gbc.setState(0xc63b, 0x8318, 0x9d00, 0x8ed6, 0xd3cf, 0x839b, 0x0, 0x1);
        gbc.writeMem(0xc63b, { 0x1d });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x8318, gbc.sp());
        EXPECT(0xc63c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1d, gbc.readMem(0xc63b));
        // 1D 00C3
        gbc.setState(0xace3, 0xd012, 0xff20, 0xa73d, 0xa9e6, 0x7d1c, 0x1, 0x1);
        gbc.writeMem(0xace3, { 0x1d });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0xd012, gbc.sp());
        EXPECT(0xace4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1d, gbc.readMem(0xace3));
        // 1D 00C4
        gbc.setState(0xbb16, 0xa02e, 0x4e80, 0xfe56, 0x58ba, 0x5adb, 0x0, 0x0);
        gbc.writeMem(0xbb16, { 0x1d });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0xa02e, gbc.sp());
        EXPECT(0xbb17, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1d, gbc.readMem(0xbb16));
        // 1D 00C5
        gbc.setState(0x9709, 0xcfc6, 0x9500, 0x79f1, 0x3ecb, 0x9abf, 0x1, 0x0);
        gbc.writeMem(0x9709, { 0x1d });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0xcfc6, gbc.sp());
        EXPECT(0x970a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1d, gbc.readMem(0x9709));
        // 1D 00C6
        gbc.setState(0x545d, 0xee85, 0x65d0, 0xfd15, 0x14c4, 0xba7e, 0x1, 0x1);
        gbc.writeMem(0x545d, { 0x1d });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0xee85, gbc.sp());
        EXPECT(0x545e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 1D 00C7
        gbc.setState(0xe80f, 0x59b5, 0x90d0, 0x76c3, 0x3380, 0x4686, 0x1, 0x0);
        gbc.writeMem(0xe80f, { 0x1d });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x59b5, gbc.sp());
        EXPECT(0xe810, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1d, gbc.readMem(0xe80f));
        // 1D 00C8
        gbc.setState(0x28d, 0xa9ee, 0x410, 0x7ba3, 0x124b, 0xe819, 0x0, 0x1);
        gbc.writeMem(0x28d, { 0x1d });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0xa9ee, gbc.sp());
        EXPECT(0x28e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 1D 00CA
        gbc.setState(0xb8cb, 0x43cb, 0xa560, 0xe840, 0x43ac, 0x6f84, 0x1, 0x0);
        gbc.writeMem(0xb8cb, { 0x1d });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x43cb, gbc.sp());
        EXPECT(0xb8cc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1d, gbc.readMem(0xb8cb));
        // 1D 00CB
        gbc.setState(0x924, 0xbe29, 0x880, 0x965c, 0xfb0, 0xeaed, 0x1, 0x1);
        gbc.writeMem(0x924, { 0x1d });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0xbe29, gbc.sp());
        EXPECT(0x925, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 1D 00CC
        gbc.setState(0x8367, 0x2d7, 0x10d0, 0xe671, 0x6dfb, 0x98d1, 0x0, 0x1);
        gbc.writeMem(0x8367, { 0x1d });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x2d7, gbc.sp());
        EXPECT(0x8368, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1d, gbc.readMem(0x8367));
        // 1D 00CD
        gbc.setState(0x3a60, 0xc376, 0x47f0, 0x62d5, 0x55d7, 0x6094, 0x0, 0x1);
        gbc.writeMem(0x3a60, { 0x1d });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0xc376, gbc.sp());
        EXPECT(0x3a61, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 1D 00CE
        gbc.setState(0xb10, 0x71, 0x8ab0, 0x797, 0x7e8b, 0xec46, 0x0, 0x0);
        gbc.writeMem(0xb10, { 0x1d });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x71, gbc.sp());
        EXPECT(0xb11, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 1D 00CF
        gbc.setState(0x4242, 0x490f, 0xab30, 0x53af, 0x9407, 0x80a8, 0x1, 0x0);
        gbc.writeMem(0x4242, { 0x1d });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x490f, gbc.sp());
        EXPECT(0x4243, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 1D 00D0
        gbc.setState(0x9edf, 0xe128, 0xe910, 0x729d, 0x81, 0x4f83, 0x0, 0x1);
        gbc.writeMem(0x9edf, { 0x1d });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0xe128, gbc.sp());
        EXPECT(0x9ee0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1d, gbc.readMem(0x9edf));
        // 1D 00D1
        gbc.setState(0xb2ee, 0x487d, 0x4970, 0x9e1b, 0x639e, 0x281f, 0x1, 0x1);
        gbc.writeMem(0xb2ee, { 0x1d });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x487d, gbc.sp());
        EXPECT(0xb2ef, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1d, gbc.readMem(0xb2ee));
        // 1D 00D2
        gbc.setState(0x1fa9, 0x67ee, 0xf390, 0x2609, 0x5456, 0xecaf, 0x1, 0x0);
        gbc.writeMem(0x1fa9, { 0x1d });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x67ee, gbc.sp());
        EXPECT(0x1faa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 1D 00D3
        gbc.setState(0xbe55, 0x3272, 0x41e0, 0x163b, 0x4eb2, 0x28ad, 0x1, 0x1);
        gbc.writeMem(0xbe55, { 0x1d });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x3272, gbc.sp());
        EXPECT(0xbe56, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1d, gbc.readMem(0xbe55));
        // 1D 00D5
        gbc.setState(0x8b18, 0xccc3, 0x13e0, 0x59fb, 0xe994, 0x7edb, 0x0, 0x1);
        gbc.writeMem(0x8b18, { 0x1d });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0xccc3, gbc.sp());
        EXPECT(0x8b19, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1d, gbc.readMem(0x8b18));
        // 1D 00D6
        gbc.setState(0x7ee5, 0x1412, 0xdae0, 0x8bfc, 0x3f2, 0x2df, 0x1, 0x1);
        gbc.writeMem(0x7ee5, { 0x1d });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x1412, gbc.sp());
        EXPECT(0x7ee6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 1D 00D8
        gbc.setState(0x53f9, 0xc324, 0xa800, 0xd6f7, 0x93d, 0xe220, 0x1, 0x1);
        gbc.writeMem(0x53f9, { 0x1d });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0xc324, gbc.sp());
        EXPECT(0x53fa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 1D 00D9
        gbc.setState(0x4eec, 0xc5e1, 0xd4b0, 0xb27, 0xa986, 0x6d5, 0x1, 0x0);
        gbc.writeMem(0x4eec, { 0x1d });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0xc5e1, gbc.sp());
        EXPECT(0x4eed, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 1D 00DA
        gbc.setState(0x1f1, 0xf4bb, 0xe360, 0xc9c0, 0x6528, 0x2637, 0x1, 0x1);
        gbc.writeMem(0x1f1, { 0x1d });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0xf4bb, gbc.sp());
        EXPECT(0x1f2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 1D 00DB
        gbc.setState(0x9f37, 0xf372, 0x8cd0, 0xc24a, 0x19b1, 0x40c3, 0x0, 0x0);
        gbc.writeMem(0x9f37, { 0x1d });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0xf372, gbc.sp());
        EXPECT(0x9f38, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1d, gbc.readMem(0x9f37));
        // 1D 00DC
        gbc.setState(0xdd5c, 0xdabe, 0xd120, 0x47b9, 0xe11, 0x9f6c, 0x1, 0x0);
        gbc.writeMem(0xdd5c, { 0x1d });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0xdabe, gbc.sp());
        EXPECT(0xdd5d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1d, gbc.readMem(0xdd5c));
        // 1D 00DD
        gbc.setState(0x4470, 0xb5f9, 0x3640, 0x3df6, 0x9b38, 0x35d9, 0x0, 0x0);
        gbc.writeMem(0x4470, { 0x1d });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0xb5f9, gbc.sp());
        EXPECT(0x4471, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 1D 00DE
        gbc.setState(0x97d8, 0xe322, 0x6560, 0x6792, 0x615b, 0x5dfe, 0x0, 0x1);
        gbc.writeMem(0x97d8, { 0x1d });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0xe322, gbc.sp());
        EXPECT(0x97d9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1d, gbc.readMem(0x97d8));
        // 1D 00DF
        gbc.setState(0x5301, 0xb9c6, 0x4e20, 0xb618, 0x4fff, 0xb65c, 0x1, 0x0);
        gbc.writeMem(0x5301, { 0x1d });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0xb9c6, gbc.sp());
        EXPECT(0x5302, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 1D 00E1
        gbc.setState(0x8e8c, 0x7e31, 0x79c0, 0x19a3, 0x4584, 0x918c, 0x1, 0x0);
        gbc.writeMem(0x8e8c, { 0x1d });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x7e31, gbc.sp());
        EXPECT(0x8e8d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1d, gbc.readMem(0x8e8c));
        // 1D 00E3
        gbc.setState(0x101b, 0x4d73, 0x2a90, 0x5a8, 0xa66e, 0x4836, 0x0, 0x0);
        gbc.writeMem(0x101b, { 0x1d });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x4d73, gbc.sp());
        EXPECT(0x101c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 1D 00E4
        gbc.setState(0x90cf, 0xaf63, 0xf1c0, 0xf7e7, 0xe2e8, 0x67df, 0x1, 0x0);
        gbc.writeMem(0x90cf, { 0x1d });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0xaf63, gbc.sp());
        EXPECT(0x90d0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1d, gbc.readMem(0x90cf));
        // 1D 00E5
        gbc.setState(0x9b3a, 0x6fb8, 0xad0, 0x80d9, 0x20fe, 0x8793, 0x1, 0x0);
        gbc.writeMem(0x9b3a, { 0x1d });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0x6fb8, gbc.sp());
        EXPECT(0x9b3b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1d, gbc.readMem(0x9b3a));
        // 1D 00E6
        gbc.setState(0xb6c4, 0x1cd3, 0xb8a0, 0xc80f, 0x9409, 0x7333, 0x0, 0x0);
        gbc.writeMem(0xb6c4, { 0x1d });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x1cd3, gbc.sp());
        EXPECT(0xb6c5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1d, gbc.readMem(0xb6c4));
        // 1D 00E7
        gbc.setState(0xc030, 0x533c, 0xeef0, 0x1e00, 0x6a0c, 0xe68f, 0x0, 0x0);
        gbc.writeMem(0xc030, { 0x1d });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x533c, gbc.sp());
        EXPECT(0xc031, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1d, gbc.readMem(0xc030));
        // 1D 00E8
        gbc.setState(0x3ede, 0x3857, 0xe5e0, 0x57c5, 0x23cf, 0xe540, 0x1, 0x0);
        gbc.writeMem(0x3ede, { 0x1d });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x3857, gbc.sp());
        EXPECT(0x3edf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 1D 00EA
        gbc.setState(0xd435, 0x62b8, 0x30a0, 0x945f, 0x6f38, 0xf9ed, 0x0, 0x1);
        gbc.writeMem(0xd435, { 0x1d });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x62b8, gbc.sp());
        EXPECT(0xd436, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1d, gbc.readMem(0xd435));
        // 1D 00EB
        gbc.setState(0xeaf3, 0x6a62, 0x1f80, 0x6a7d, 0x69e9, 0x8fa0, 0x1, 0x1);
        gbc.writeMem(0xeaf3, { 0x1d });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x6a62, gbc.sp());
        EXPECT(0xeaf4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1d, gbc.readMem(0xeaf3));
        // 1D 00EC
        gbc.setState(0x9442, 0xfdd7, 0x7360, 0x513, 0x370b, 0x9439, 0x1, 0x0);
        gbc.writeMem(0x9442, { 0x1d });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0xfdd7, gbc.sp());
        EXPECT(0x9443, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1d, gbc.readMem(0x9442));
        // 1D 00ED
        gbc.setState(0x4f51, 0x17f6, 0x4e30, 0x6aaf, 0xa4ce, 0xcc08, 0x1, 0x0);
        gbc.writeMem(0x4f51, { 0x1d });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x17f6, gbc.sp());
        EXPECT(0x4f52, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 1D 00EE
        gbc.setState(0x815d, 0x58b3, 0xdd90, 0x434f, 0x26d2, 0x3ff5, 0x1, 0x1);
        gbc.writeMem(0x815d, { 0x1d });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x58b3, gbc.sp());
        EXPECT(0x815e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1d, gbc.readMem(0x815d));
        // 1D 00EF
        gbc.setState(0x9bae, 0xc5c7, 0x15b0, 0xb837, 0x6818, 0xa9b3, 0x0, 0x0);
        gbc.writeMem(0x9bae, { 0x1d });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0xc5c7, gbc.sp());
        EXPECT(0x9baf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1d, gbc.readMem(0x9bae));
        // 1D 00F0
        gbc.setState(0x5f8d, 0xdbe, 0xdf10, 0xa61c, 0xa8cd, 0xda43, 0x1, 0x0);
        gbc.writeMem(0x5f8d, { 0x1d });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0xdbe, gbc.sp());
        EXPECT(0x5f8e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 1D 00F1
        gbc.setState(0x3b5a, 0x2c1f, 0x9cc0, 0x8aee, 0x5, 0xf1ca, 0x0, 0x1);
        gbc.writeMem(0x3b5a, { 0x1d });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x2c1f, gbc.sp());
        EXPECT(0x3b5b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 1D 00F2
        gbc.setState(0x6682, 0x98d7, 0x5470, 0x571c, 0xd13d, 0x7cc4, 0x1, 0x0);
        gbc.writeMem(0x6682, { 0x1d });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x98d7, gbc.sp());
        EXPECT(0x6683, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 1D 00F3
        gbc.setState(0x28b0, 0xac36, 0x1f00, 0xa9b8, 0x5fe2, 0x2ba8, 0x1, 0x1);
        gbc.writeMem(0x28b0, { 0x1d });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0xac36, gbc.sp());
        EXPECT(0x28b1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 1D 00F4
        gbc.setState(0xd8a8, 0x154b, 0xe70, 0xc9c0, 0xabf0, 0xe695, 0x0, 0x1);
        gbc.writeMem(0xd8a8, { 0x1d });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x154b, gbc.sp());
        EXPECT(0xd8a9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1d, gbc.readMem(0xd8a8));
        // 1D 00F5
        gbc.setState(0xc668, 0xfad0, 0x3610, 0x89ec, 0xdfeb, 0xfa3b, 0x1, 0x1);
        gbc.writeMem(0xc668, { 0x1d });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0xfad0, gbc.sp());
        EXPECT(0xc669, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1d, gbc.readMem(0xc668));
        // 1D 00F6
        gbc.setState(0x4884, 0x6f9a, 0x5110, 0x3ebc, 0xf2ab, 0x6e4d, 0x1, 0x1);
        gbc.writeMem(0x4884, { 0x1d });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x6f9a, gbc.sp());
        EXPECT(0x4885, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 1D 00F7
        gbc.setState(0x4b7c, 0xcb9, 0x5cc0, 0xed4b, 0x92d2, 0xfba0, 0x0, 0x0);
        gbc.writeMem(0x4b7c, { 0x1d });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0xcb9, gbc.sp());
        EXPECT(0x4b7d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 1D 00F8
        gbc.setState(0x343b, 0x8d8f, 0x5d10, 0xa593, 0x5297, 0x4877, 0x0, 0x1);
        gbc.writeMem(0x343b, { 0x1d });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x8d8f, gbc.sp());
        EXPECT(0x343c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 1D 00F9
        gbc.setState(0x335c, 0x3efb, 0x7b00, 0x9ea1, 0xc0ce, 0x237a, 0x1, 0x0);
        gbc.writeMem(0x335c, { 0x1d });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x3efb, gbc.sp());
        EXPECT(0x335d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 1D 00FA
        gbc.setState(0xb392, 0x618f, 0x5ef0, 0xab60, 0x3132, 0x47d7, 0x1, 0x1);
        gbc.writeMem(0xb392, { 0x1d });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0x618f, gbc.sp());
        EXPECT(0xb393, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1d, gbc.readMem(0xb392));
        // 1D 00FB
        gbc.setState(0x87aa, 0x6168, 0x2ca0, 0xfe21, 0xf9ea, 0x3a48, 0x1, 0x1);
        gbc.writeMem(0x87aa, { 0x1d });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0x6168, gbc.sp());
        EXPECT(0x87ab, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1d, gbc.readMem(0x87aa));
        // 1D 00FC
        gbc.setState(0xec3, 0xb6f, 0xea0, 0xb39c, 0x682, 0x2cb8, 0x1, 0x0);
        gbc.writeMem(0xec3, { 0x1d });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0xb6f, gbc.sp());
        EXPECT(0xec4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 1D 00FD
        gbc.setState(0xd929, 0x7dee, 0x2e10, 0xe1c4, 0x4dfb, 0x35f, 0x0, 0x0);
        gbc.writeMem(0xd929, { 0x1d });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x7dee, gbc.sp());
        EXPECT(0xd92a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1d, gbc.readMem(0xd929));
        // 1D 00FE
        gbc.setState(0x6a06, 0x7c90, 0xbe20, 0x240f, 0xb82f, 0xa70, 0x1, 0x1);
        gbc.writeMem(0x6a06, { 0x1d });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x7c90, gbc.sp());
        EXPECT(0x6a07, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 1D 00FF
        gbc.setState(0x1815, 0x6e11, 0x8200, 0x1fbc, 0xede, 0xbb07, 0x0, 0x1);
        gbc.writeMem(0x1815, { 0x1d });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x6e11, gbc.sp());
        EXPECT(0x1816, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 1D 0100
        gbc.setState(0xe45d, 0x1500, 0x2b30, 0xa447, 0x2c8d, 0x9676, 0x1, 0x0);
        gbc.writeMem(0xe45d, { 0x1d });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x1500, gbc.sp());
        EXPECT(0xe45e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1d, gbc.readMem(0xe45d));
        // 1D 0101
        gbc.setState(0xc0a, 0xbf6b, 0x6b70, 0x3eb5, 0x1c94, 0x719c, 0x0, 0x1);
        gbc.writeMem(0xc0a, { 0x1d });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0xbf6b, gbc.sp());
        EXPECT(0xc0b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 1D 0102
        gbc.setState(0x5715, 0xe662, 0x1d80, 0x325f, 0x7171, 0xbb95, 0x1, 0x0);
        gbc.writeMem(0x5715, { 0x1d });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0xe662, gbc.sp());
        EXPECT(0x5716, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 1D 0104
        gbc.setState(0xbb85, 0xe39a, 0x3b50, 0x7b95, 0x2971, 0xe193, 0x1, 0x1);
        gbc.writeMem(0xbb85, { 0x1d });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0xe39a, gbc.sp());
        EXPECT(0xbb86, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1d, gbc.readMem(0xbb85));
        // 1D 0105
        gbc.setState(0x7be7, 0xb900, 0xbb0, 0x3a4a, 0x7fa6, 0x1897, 0x0, 0x0);
        gbc.writeMem(0x7be7, { 0x1d });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0xb900, gbc.sp());
        EXPECT(0x7be8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 1D 0108
        gbc.setState(0xa0b5, 0x352d, 0x3920, 0x4700, 0xcc74, 0x9fb1, 0x0, 0x1);
        gbc.writeMem(0xa0b5, { 0x1d });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x352d, gbc.sp());
        EXPECT(0xa0b6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1d, gbc.readMem(0xa0b5));
        // 1D 0109
        gbc.setState(0xc6fa, 0x4f83, 0xff0, 0x9453, 0x7cbe, 0x5f95, 0x1, 0x1);
        gbc.writeMem(0xc6fa, { 0x1d });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x4f83, gbc.sp());
        EXPECT(0xc6fb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1d, gbc.readMem(0xc6fa));
        // 1D 010A
        gbc.setState(0x349, 0x1940, 0x2fc0, 0x59b9, 0xa867, 0x984b, 0x0, 0x1);
        gbc.writeMem(0x349, { 0x1d });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x1940, gbc.sp());
        EXPECT(0x34a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 1D 010B
        gbc.setState(0x43f7, 0xf0d3, 0xa520, 0xbdf7, 0xe584, 0xa3a0, 0x1, 0x1);
        gbc.writeMem(0x43f7, { 0x1d });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0xf0d3, gbc.sp());
        EXPECT(0x43f8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 1D 010C
        gbc.setState(0xa0eb, 0xf648, 0x970, 0xeee3, 0xf10f, 0x9ab4, 0x1, 0x1);
        gbc.writeMem(0xa0eb, { 0x1d });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0xf648, gbc.sp());
        EXPECT(0xa0ec, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1d, gbc.readMem(0xa0eb));
        // 1D 010D
        gbc.setState(0xaa36, 0x6865, 0x2e0, 0xbb4e, 0xa517, 0x6ae4, 0x0, 0x0);
        gbc.writeMem(0xaa36, { 0x1d });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x6865, gbc.sp());
        EXPECT(0xaa37, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1d, gbc.readMem(0xaa36));
        // 1D 010E
        gbc.setState(0xa755, 0xeaa6, 0xfdd0, 0xbd8d, 0x2086, 0x668a, 0x0, 0x0);
        gbc.writeMem(0xa755, { 0x1d });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0xeaa6, gbc.sp());
        EXPECT(0xa756, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1d, gbc.readMem(0xa755));
        // 1D 010F
        gbc.setState(0x9c54, 0x45ee, 0x91d0, 0x16c3, 0xdbb, 0x361c, 0x1, 0x1);
        gbc.writeMem(0x9c54, { 0x1d });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x45ee, gbc.sp());
        EXPECT(0x9c55, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1d, gbc.readMem(0x9c54));
        // 1D 0110
        gbc.setState(0xd3b1, 0x81dd, 0xf250, 0x8ae, 0x458b, 0xee02, 0x0, 0x0);
        gbc.writeMem(0xd3b1, { 0x1d });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x81dd, gbc.sp());
        EXPECT(0xd3b2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1d, gbc.readMem(0xd3b1));
        // 1D 0111
        gbc.setState(0xa68f, 0x4c83, 0x5440, 0xc1bc, 0xc7b0, 0xe81a, 0x0, 0x0);
        gbc.writeMem(0xa68f, { 0x1d });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x4c83, gbc.sp());
        EXPECT(0xa690, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1d, gbc.readMem(0xa68f));
        // 1D 0112
        gbc.setState(0x12ee, 0x2d28, 0x2e0, 0x290c, 0x267, 0x445e, 0x0, 0x1);
        gbc.writeMem(0x12ee, { 0x1d });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x2d28, gbc.sp());
        EXPECT(0x12ef, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 1D 0113
        gbc.setState(0x3b34, 0x993a, 0xb620, 0xc331, 0x9485, 0xfe0e, 0x0, 0x1);
        gbc.writeMem(0x3b34, { 0x1d });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x993a, gbc.sp());
        EXPECT(0x3b35, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 1D 0114
        gbc.setState(0xcb04, 0xcd63, 0x5230, 0x88e3, 0xed53, 0x5766, 0x0, 0x0);
        gbc.writeMem(0xcb04, { 0x1d });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0xcd63, gbc.sp());
        EXPECT(0xcb05, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1d, gbc.readMem(0xcb04));
        // 1D 0115
        gbc.setState(0xc11c, 0xc9e6, 0x9880, 0x8457, 0xfec8, 0xbc03, 0x0, 0x1);
        gbc.writeMem(0xc11c, { 0x1d });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0xc9e6, gbc.sp());
        EXPECT(0xc11d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1d, gbc.readMem(0xc11c));
        // 1D 0116
        gbc.setState(0x5721, 0xc17b, 0x9c00, 0xaa71, 0x1d2a, 0x64bf, 0x0, 0x1);
        gbc.writeMem(0x5721, { 0x1d });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0xc17b, gbc.sp());
        EXPECT(0x5722, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 1D 0117
        gbc.setState(0xa484, 0xc026, 0x7ce0, 0xc3aa, 0x6fd7, 0xe972, 0x0, 0x0);
        gbc.writeMem(0xa484, { 0x1d });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0xc026, gbc.sp());
        EXPECT(0xa485, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1d, gbc.readMem(0xa484));
        // 1D 0118
        gbc.setState(0xa16, 0x2666, 0xa030, 0x87e8, 0x5b61, 0xa3f7, 0x0, 0x0);
        gbc.writeMem(0xa16, { 0x1d });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x2666, gbc.sp());
        EXPECT(0xa17, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 1D 0119
        gbc.setState(0x3ff, 0x9445, 0x5b10, 0x92ca, 0x6086, 0xefba, 0x1, 0x1);
        gbc.writeMem(0x3ff, { 0x1d });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0x9445, gbc.sp());
        EXPECT(0x400, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 1D 011A
        gbc.setState(0xa40b, 0x9252, 0xbb50, 0xf4b7, 0xba88, 0x4d4d, 0x1, 0x0);
        gbc.writeMem(0xa40b, { 0x1d });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x9252, gbc.sp());
        EXPECT(0xa40c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1d, gbc.readMem(0xa40b));
        // 1D 011B
        gbc.setState(0x1594, 0xb1b1, 0xe350, 0x8a57, 0xd1fd, 0xbcf3, 0x0, 0x0);
        gbc.writeMem(0x1594, { 0x1d });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0xb1b1, gbc.sp());
        EXPECT(0x1595, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 1D 011C
        gbc.setState(0xbff5, 0x4fdb, 0x1c90, 0x4862, 0x66a6, 0x8c03, 0x0, 0x1);
        gbc.writeMem(0xbff5, { 0x1d });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x4fdb, gbc.sp());
        EXPECT(0xbff6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1d, gbc.readMem(0xbff5));
        // 1D 011D
        gbc.setState(0xa673, 0x29, 0x1ea0, 0x3a8b, 0x13d1, 0xfdea, 0x1, 0x1);
        gbc.writeMem(0xa673, { 0x1d });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x29, gbc.sp());
        EXPECT(0xa674, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1d, gbc.readMem(0xa673));
        // 1D 011E
        gbc.setState(0xa54a, 0xcbce, 0xc940, 0x5f2a, 0x6fd5, 0x27f8, 0x1, 0x0);
        gbc.writeMem(0xa54a, { 0x1d });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0xcbce, gbc.sp());
        EXPECT(0xa54b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1d, gbc.readMem(0xa54a));
        // 1D 011F
        gbc.setState(0x3649, 0x54c, 0xe0e0, 0xb62a, 0xc8eb, 0x40b2, 0x0, 0x0);
        gbc.writeMem(0x3649, { 0x1d });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x54c, gbc.sp());
        EXPECT(0x364a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 1D 0120
        gbc.setState(0x2e7d, 0xb5ac, 0x3e90, 0xf259, 0xf4d3, 0x2a3c, 0x1, 0x1);
        gbc.writeMem(0x2e7d, { 0x1d });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0xb5ac, gbc.sp());
        EXPECT(0x2e7e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 1D 0121
        gbc.setState(0xee91, 0x30c3, 0x670, 0xb085, 0x20e2, 0x5554, 0x1, 0x0);
        gbc.writeMem(0xee91, { 0x1d });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x30c3, gbc.sp());
        EXPECT(0xee92, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1d, gbc.readMem(0xee91));
        // 1D 0122
        gbc.setState(0x29e8, 0xb813, 0x7ef0, 0x8c03, 0x3abf, 0xd35b, 0x1, 0x1);
        gbc.writeMem(0x29e8, { 0x1d });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0xb813, gbc.sp());
        EXPECT(0x29e9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 1D 0123
        gbc.setState(0xbc34, 0x9db9, 0x32c0, 0x9cc1, 0xcbad, 0xa27e, 0x0, 0x0);
        gbc.writeMem(0xbc34, { 0x1d });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0x9db9, gbc.sp());
        EXPECT(0xbc35, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1d, gbc.readMem(0xbc34));
        // 1D 0124
        gbc.setState(0x266a, 0xb3cb, 0x7d20, 0x3bf, 0x112d, 0xb2d3, 0x1, 0x1);
        gbc.writeMem(0x266a, { 0x1d });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0xb3cb, gbc.sp());
        EXPECT(0x266b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 1D 0125
        gbc.setState(0x2ccc, 0xfa01, 0x6700, 0x53f3, 0xf486, 0x1f79, 0x1, 0x0);
        gbc.writeMem(0x2ccc, { 0x1d });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0xfa01, gbc.sp());
        EXPECT(0x2ccd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 1D 0126
        gbc.setState(0x73ef, 0x758d, 0xa030, 0x7665, 0xd5f6, 0xa228, 0x0, 0x0);
        gbc.writeMem(0x73ef, { 0x1d });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x758d, gbc.sp());
        EXPECT(0x73f0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 1D 0127
        gbc.setState(0x6550, 0x6dba, 0x9fd0, 0x5eaf, 0xcd09, 0x34ec, 0x0, 0x1);
        gbc.writeMem(0x6550, { 0x1d });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x6dba, gbc.sp());
        EXPECT(0x6551, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 1D 0128
        gbc.setState(0xae46, 0x86bb, 0x7510, 0x3728, 0xd899, 0xd796, 0x1, 0x0);
        gbc.writeMem(0xae46, { 0x1d });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x86bb, gbc.sp());
        EXPECT(0xae47, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1d, gbc.readMem(0xae46));
        // 1D 0129
        gbc.setState(0x988b, 0xd7fc, 0xed0, 0xb684, 0x2e45, 0xbeeb, 0x1, 0x1);
        gbc.writeMem(0x988b, { 0x1d });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0xd7fc, gbc.sp());
        EXPECT(0x988c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1d, gbc.readMem(0x988b));
        // 1D 012A
        gbc.setState(0x4ace, 0x9c0e, 0x8c0, 0x6f0, 0x52f, 0x85a7, 0x0, 0x0);
        gbc.writeMem(0x4ace, { 0x1d });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x9c0e, gbc.sp());
        EXPECT(0x4acf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 1D 012B
        gbc.setState(0x3f3c, 0xc833, 0xa330, 0x58df, 0x6ddc, 0x6e1d, 0x0, 0x1);
        gbc.writeMem(0x3f3c, { 0x1d });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0xc833, gbc.sp());
        EXPECT(0x3f3d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 1D 012C
        gbc.setState(0x4531, 0x1a4e, 0xaaa0, 0x8bfe, 0x55bc, 0x44b3, 0x1, 0x1);
        gbc.writeMem(0x4531, { 0x1d });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x1a4e, gbc.sp());
        EXPECT(0x4532, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 1D 012D
        gbc.setState(0xa91a, 0xa02c, 0xd930, 0xd593, 0x806d, 0x76ae, 0x0, 0x1);
        gbc.writeMem(0xa91a, { 0x1d });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0xa02c, gbc.sp());
        EXPECT(0xa91b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1d, gbc.readMem(0xa91a));
        // 1D 012E
        gbc.setState(0x8088, 0xa60e, 0xf6c0, 0x472a, 0xd56c, 0x730f, 0x1, 0x1);
        gbc.writeMem(0x8088, { 0x1d });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0xa60e, gbc.sp());
        EXPECT(0x8089, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1d, gbc.readMem(0x8088));
        // 1D 012F
        gbc.setState(0xa85c, 0xb209, 0xde30, 0xfa13, 0xbf1b, 0x2054, 0x1, 0x0);
        gbc.writeMem(0xa85c, { 0x1d });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0xb209, gbc.sp());
        EXPECT(0xa85d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1d, gbc.readMem(0xa85c));
        // 1D 0130
        gbc.setState(0xa9b3, 0xe3db, 0x7160, 0x4161, 0xaf30, 0x7c94, 0x0, 0x1);
        gbc.writeMem(0xa9b3, { 0x1d });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0xe3db, gbc.sp());
        EXPECT(0xa9b4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1d, gbc.readMem(0xa9b3));
        // 1D 0131
        gbc.setState(0xd92f, 0xdf05, 0xee50, 0x52ce, 0x2f72, 0x5064, 0x0, 0x1);
        gbc.writeMem(0xd92f, { 0x1d });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0xdf05, gbc.sp());
        EXPECT(0xd930, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1d, gbc.readMem(0xd92f));
        // 1D 0132
        gbc.setState(0xeb1c, 0xa40b, 0xff80, 0x3185, 0x4d29, 0x32c, 0x0, 0x0);
        gbc.writeMem(0xeb1c, { 0x1d });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0xa40b, gbc.sp());
        EXPECT(0xeb1d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1d, gbc.readMem(0xeb1c));
        // 1D 0133
        gbc.setState(0x6876, 0xd7fb, 0x7430, 0xfdd6, 0xc1d1, 0x29c, 0x0, 0x1);
        gbc.writeMem(0x6876, { 0x1d });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0xd7fb, gbc.sp());
        EXPECT(0x6877, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 1D 0134
        gbc.setState(0xa031, 0xf115, 0x9730, 0x5504, 0x865c, 0x624, 0x0, 0x1);
        gbc.writeMem(0xa031, { 0x1d });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0xf115, gbc.sp());
        EXPECT(0xa032, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1d, gbc.readMem(0xa031));
        // 1D 0135
        gbc.setState(0x808d, 0x867d, 0xd810, 0x585d, 0x5e89, 0x8812, 0x1, 0x0);
        gbc.writeMem(0x808d, { 0x1d });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x867d, gbc.sp());
        EXPECT(0x808e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1d, gbc.readMem(0x808d));
        // 1D 0136
        gbc.setState(0xdcbb, 0x8158, 0x9d50, 0xac63, 0x3a4, 0x29d0, 0x1, 0x1);
        gbc.writeMem(0xdcbb, { 0x1d });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x8158, gbc.sp());
        EXPECT(0xdcbc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1d, gbc.readMem(0xdcbb));
        // 1D 0137
        gbc.setState(0x4dfb, 0xb1a2, 0x8620, 0xe4dd, 0x3694, 0xf459, 0x1, 0x0);
        gbc.writeMem(0x4dfb, { 0x1d });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0xb1a2, gbc.sp());
        EXPECT(0x4dfc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 1D 0138
        gbc.setState(0x3dc6, 0xe6e1, 0xd060, 0x38ea, 0x6976, 0xd09f, 0x0, 0x0);
        gbc.writeMem(0x3dc6, { 0x1d });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0xe6e1, gbc.sp());
        EXPECT(0x3dc7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 1D 0139
        gbc.setState(0xa525, 0x3b91, 0xf9d0, 0x45ca, 0x5992, 0x27ab, 0x0, 0x0);
        gbc.writeMem(0xa525, { 0x1d });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x3b91, gbc.sp());
        EXPECT(0xa526, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1d, gbc.readMem(0xa525));
        // 1D 013A
        gbc.setState(0x54ff, 0xd2dc, 0x3950, 0x4ba5, 0xd00d, 0x1a3e, 0x0, 0x0);
        gbc.writeMem(0x54ff, { 0x1d });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0xd2dc, gbc.sp());
        EXPECT(0x5500, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 1D 013C
        gbc.setState(0xbbc9, 0x1f79, 0xa3d0, 0x7ee0, 0x6762, 0x2e2e, 0x0, 0x1);
        gbc.writeMem(0xbbc9, { 0x1d });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x1f79, gbc.sp());
        EXPECT(0xbbca, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1d, gbc.readMem(0xbbc9));
        // 1D 013D
        gbc.setState(0x737a, 0xd5c6, 0xa8b0, 0xa6d9, 0x2db, 0x363e, 0x1, 0x1);
        gbc.writeMem(0x737a, { 0x1d });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0xd5c6, gbc.sp());
        EXPECT(0x737b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 1D 013F
        gbc.setState(0xe90d, 0x3be1, 0xe960, 0xcc9d, 0xb8a3, 0x28a7, 0x0, 0x0);
        gbc.writeMem(0xe90d, { 0x1d });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x3be1, gbc.sp());
        EXPECT(0xe90e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1d, gbc.readMem(0xe90d));
        // 1D 0140
        gbc.setState(0xaec7, 0xb52e, 0x910, 0x39c8, 0xb9d8, 0x436a, 0x0, 0x1);
        gbc.writeMem(0xaec7, { 0x1d });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0xb52e, gbc.sp());
        EXPECT(0xaec8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1d, gbc.readMem(0xaec7));
        // 1D 0142
        gbc.setState(0x5dbe, 0x2a8f, 0x4640, 0x3cef, 0x92f2, 0xbf0c, 0x0, 0x0);
        gbc.writeMem(0x5dbe, { 0x1d });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x2a8f, gbc.sp());
        EXPECT(0x5dbf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 1D 0143
        gbc.setState(0x7a62, 0xd340, 0x33d0, 0x1408, 0x8ef7, 0xa422, 0x0, 0x0);
        gbc.writeMem(0x7a62, { 0x1d });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0xd340, gbc.sp());
        EXPECT(0x7a63, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 1D 0144
        gbc.setState(0x42e7, 0xeda6, 0x6220, 0x9489, 0xc681, 0xb8d9, 0x1, 0x1);
        gbc.writeMem(0x42e7, { 0x1d });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0xeda6, gbc.sp());
        EXPECT(0x42e8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 1D 0145
        gbc.setState(0xe0c, 0x74c1, 0xdb60, 0xfd6f, 0x883, 0x87d8, 0x0, 0x1);
        gbc.writeMem(0xe0c, { 0x1d });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x74c1, gbc.sp());
        EXPECT(0xe0d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 1D 0146
        gbc.setState(0x9370, 0x22a8, 0x8580, 0x5a56, 0x8bf6, 0xeef2, 0x1, 0x1);
        gbc.writeMem(0x9370, { 0x1d });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x22a8, gbc.sp());
        EXPECT(0x9371, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1d, gbc.readMem(0x9370));
        // 1D 0147
        gbc.setState(0xc3bc, 0x60bc, 0xef50, 0xab4f, 0xcb83, 0xc047, 0x1, 0x1);
        gbc.writeMem(0xc3bc, { 0x1d });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x60bc, gbc.sp());
        EXPECT(0xc3bd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1d, gbc.readMem(0xc3bc));
        // 1D 0148
        gbc.setState(0x2779, 0xafc8, 0x4b10, 0xe742, 0x87e2, 0x8dee, 0x0, 0x0);
        gbc.writeMem(0x2779, { 0x1d });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0xafc8, gbc.sp());
        EXPECT(0x277a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 1D 0149
        gbc.setState(0x9d87, 0x9d3f, 0x1a20, 0x8f50, 0xa3c0, 0x4ed, 0x1, 0x0);
        gbc.writeMem(0x9d87, { 0x1d });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x9d3f, gbc.sp());
        EXPECT(0x9d88, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1d, gbc.readMem(0x9d87));
        // 1D 014B
        gbc.setState(0xa3ad, 0x95de, 0xe590, 0x780e, 0x1085, 0xb6f5, 0x0, 0x0);
        gbc.writeMem(0xa3ad, { 0x1d });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x95de, gbc.sp());
        EXPECT(0xa3ae, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1d, gbc.readMem(0xa3ad));
        // 1D 014C
        gbc.setState(0x2932, 0xb7f6, 0x1910, 0xea9c, 0x8c9c, 0x4dc, 0x0, 0x1);
        gbc.writeMem(0x2932, { 0x1d });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0xb7f6, gbc.sp());
        EXPECT(0x2933, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 1D 014D
        gbc.setState(0x14f, 0x1967, 0xef50, 0xa07b, 0x92a6, 0x4764, 0x0, 0x1);
        gbc.writeMem(0x14f, { 0x1d });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x1967, gbc.sp());
        EXPECT(0x150, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 1D 014E
        gbc.setState(0x3715, 0x67ce, 0x66c0, 0x36f9, 0x9967, 0xde0a, 0x1, 0x0);
        gbc.writeMem(0x3715, { 0x1d });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x67ce, gbc.sp());
        EXPECT(0x3716, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 1D 014F
        gbc.setState(0xb21d, 0x17e5, 0x2c50, 0xe60, 0x2e9f, 0xdf37, 0x1, 0x1);
        gbc.writeMem(0xb21d, { 0x1d });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x17e5, gbc.sp());
        EXPECT(0xb21e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1d, gbc.readMem(0xb21d));
        // 1D 0150
        gbc.setState(0xeb74, 0xa94c, 0xc8d0, 0xb69e, 0xb1df, 0x5411, 0x0, 0x1);
        gbc.writeMem(0xeb74, { 0x1d });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0xa94c, gbc.sp());
        EXPECT(0xeb75, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1d, gbc.readMem(0xeb74));
        // 1D 0151
        gbc.setState(0xcbe6, 0xb385, 0xaeb0, 0x5596, 0x1907, 0x2d4f, 0x0, 0x0);
        gbc.writeMem(0xcbe6, { 0x1d });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0xb385, gbc.sp());
        EXPECT(0xcbe7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1d, gbc.readMem(0xcbe6));
        // 1D 0152
        gbc.setState(0xd26e, 0x8d4e, 0x1430, 0xd3ed, 0xec6f, 0xda7b, 0x1, 0x1);
        gbc.writeMem(0xd26e, { 0x1d });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x8d4e, gbc.sp());
        EXPECT(0xd26f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1d, gbc.readMem(0xd26e));
        // 1D 0153
        gbc.setState(0x2ec3, 0x65e6, 0x7260, 0x27ab, 0x61f8, 0x8958, 0x1, 0x1);
        gbc.writeMem(0x2ec3, { 0x1d });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x65e6, gbc.sp());
        EXPECT(0x2ec4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 1D 0154
        gbc.setState(0x694a, 0xc671, 0xf930, 0xf3d9, 0xe1c6, 0x21e7, 0x1, 0x0);
        gbc.writeMem(0x694a, { 0x1d });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0xc671, gbc.sp());
        EXPECT(0x694b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 1D 0155
        gbc.setState(0x8ec5, 0xa0bb, 0x4980, 0x9048, 0x3a23, 0x1833, 0x0, 0x1);
        gbc.writeMem(0x8ec5, { 0x1d });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0xa0bb, gbc.sp());
        EXPECT(0x8ec6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1d, gbc.readMem(0x8ec5));
        // 1D 0156
        gbc.setState(0x906e, 0x4a6a, 0xb350, 0xd5d3, 0xdb16, 0x8771, 0x1, 0x1);
        gbc.writeMem(0x906e, { 0x1d });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x4a6a, gbc.sp());
        EXPECT(0x906f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1d, gbc.readMem(0x906e));
        // 1D 0157
        gbc.setState(0x4cdc, 0xb23d, 0x5460, 0xfa62, 0x7343, 0x4902, 0x1, 0x0);
        gbc.writeMem(0x4cdc, { 0x1d });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0xb23d, gbc.sp());
        EXPECT(0x4cdd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 1D 0158
        gbc.setState(0x7d28, 0x8ad9, 0xfff0, 0xbf0b, 0x9a6e, 0xbc75, 0x0, 0x1);
        gbc.writeMem(0x7d28, { 0x1d });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x8ad9, gbc.sp());
        EXPECT(0x7d29, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 1D 015A
        gbc.setState(0xbc03, 0xf9f6, 0x7130, 0x4192, 0x1312, 0xc9ef, 0x0, 0x0);
        gbc.writeMem(0xbc03, { 0x1d });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0xf9f6, gbc.sp());
        EXPECT(0xbc04, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1d, gbc.readMem(0xbc03));
        // 1D 015B
        gbc.setState(0xe4a4, 0xc8f, 0xc440, 0xab0b, 0x16f4, 0x3025, 0x1, 0x1);
        gbc.writeMem(0xe4a4, { 0x1d });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0xc8f, gbc.sp());
        EXPECT(0xe4a5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1d, gbc.readMem(0xe4a4));
        // 1D 015C
        gbc.setState(0xe33, 0x90b4, 0xc120, 0x1a57, 0x379, 0x8c83, 0x1, 0x1);
        gbc.writeMem(0xe33, { 0x1d });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x90b4, gbc.sp());
        EXPECT(0xe34, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 1D 015D
        gbc.setState(0xa580, 0xfc77, 0x70d0, 0x5304, 0x7eca, 0x3549, 0x1, 0x0);
        gbc.writeMem(0xa580, { 0x1d });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0xfc77, gbc.sp());
        EXPECT(0xa581, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1d, gbc.readMem(0xa580));
        // 1D 015E
        gbc.setState(0x8f1, 0x8fa5, 0xa7f0, 0xdec5, 0x5712, 0xce84, 0x0, 0x1);
        gbc.writeMem(0x8f1, { 0x1d });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x8fa5, gbc.sp());
        EXPECT(0x8f2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 1D 015F
        gbc.setState(0x6cb, 0x841f, 0xcb60, 0x349d, 0xf201, 0xea53, 0x1, 0x0);
        gbc.writeMem(0x6cb, { 0x1d });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x841f, gbc.sp());
        EXPECT(0x6cc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 1D 0161
        gbc.setState(0x9edd, 0x45e6, 0xda30, 0xf338, 0x36d5, 0x4d92, 0x0, 0x0);
        gbc.writeMem(0x9edd, { 0x1d });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x45e6, gbc.sp());
        EXPECT(0x9ede, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1d, gbc.readMem(0x9edd));
        // 1D 0162
        gbc.setState(0x7b3c, 0x85dd, 0x2a00, 0x58cf, 0x848c, 0x7bc8, 0x0, 0x0);
        gbc.writeMem(0x7b3c, { 0x1d });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x85dd, gbc.sp());
        EXPECT(0x7b3d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 1D 0163
        gbc.setState(0x1b5, 0xa7f6, 0xdbc0, 0xf12a, 0xd9da, 0x8a3c, 0x1, 0x0);
        gbc.writeMem(0x1b5, { 0x1d });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0xa7f6, gbc.sp());
        EXPECT(0x1b6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 1D 0164
        gbc.setState(0xe7b, 0x7431, 0xb030, 0x7178, 0x4468, 0xdfb2, 0x0, 0x1);
        gbc.writeMem(0xe7b, { 0x1d });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x7431, gbc.sp());
        EXPECT(0xe7c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 1D 0165
        gbc.setState(0xfef, 0xb880, 0x8b00, 0xcc4d, 0xe2d4, 0xc4da, 0x0, 0x1);
        gbc.writeMem(0xfef, { 0x1d });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0xb880, gbc.sp());
        EXPECT(0xff0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 1D 0166
        gbc.setState(0xbe5a, 0xd369, 0x270, 0xa8bf, 0x13af, 0x3a8, 0x1, 0x1);
        gbc.writeMem(0xbe5a, { 0x1d });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0xd369, gbc.sp());
        EXPECT(0xbe5b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1d, gbc.readMem(0xbe5a));
        // 1D 0167
        gbc.setState(0x5de9, 0x1e47, 0x9df0, 0xc07d, 0xe40, 0x7e01, 0x1, 0x0);
        gbc.writeMem(0x5de9, { 0x1d });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x1e47, gbc.sp());
        EXPECT(0x5dea, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 1D 0168
        gbc.setState(0xb8b8, 0x230a, 0xa3f0, 0x1801, 0x3eab, 0x5dd4, 0x1, 0x1);
        gbc.writeMem(0xb8b8, { 0x1d });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x230a, gbc.sp());
        EXPECT(0xb8b9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1d, gbc.readMem(0xb8b8));
        // 1D 0169
        gbc.setState(0x88f0, 0xb034, 0xd1f0, 0xd857, 0x782b, 0xf418, 0x1, 0x1);
        gbc.writeMem(0x88f0, { 0x1d });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0xb034, gbc.sp());
        EXPECT(0x88f1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1d, gbc.readMem(0x88f0));
        // 1D 016A
        gbc.setState(0xba12, 0x4cf0, 0x1a50, 0x71f, 0x64f4, 0xbf20, 0x0, 0x0);
        gbc.writeMem(0xba12, { 0x1d });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x4cf0, gbc.sp());
        EXPECT(0xba13, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1d, gbc.readMem(0xba12));
        // 1D 016B
        gbc.setState(0xc916, 0x6320, 0xfce0, 0x610d, 0xad68, 0x6be5, 0x0, 0x0);
        gbc.writeMem(0xc916, { 0x1d });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x6320, gbc.sp());
        EXPECT(0xc917, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1d, gbc.readMem(0xc916));
        // 1D 016C
        gbc.setState(0x1d5d, 0x4d78, 0x61f0, 0x598d, 0x30df, 0xb65b, 0x1, 0x1);
        gbc.writeMem(0x1d5d, { 0x1d });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x4d78, gbc.sp());
        EXPECT(0x1d5e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 1D 016D
        gbc.setState(0x2816, 0xda08, 0x2d00, 0x14bd, 0xc4a0, 0x94e4, 0x0, 0x1);
        gbc.writeMem(0x2816, { 0x1d });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0xda08, gbc.sp());
        EXPECT(0x2817, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 1D 016E
        gbc.setState(0xd7ba, 0x9421, 0x89f0, 0x183, 0x2d2a, 0x7a0, 0x1, 0x1);
        gbc.writeMem(0xd7ba, { 0x1d });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x9421, gbc.sp());
        EXPECT(0xd7bb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1d, gbc.readMem(0xd7ba));
        // 1D 016F
        gbc.setState(0xa5ae, 0x4325, 0x3e20, 0xb8f3, 0x436c, 0xa36e, 0x0, 0x0);
        gbc.writeMem(0xa5ae, { 0x1d });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x4325, gbc.sp());
        EXPECT(0xa5af, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1d, gbc.readMem(0xa5ae));
        // 1D 0170
        gbc.setState(0x4a20, 0x1649, 0x9ed0, 0xf2e2, 0x91b4, 0x168c, 0x1, 0x1);
        gbc.writeMem(0x4a20, { 0x1d });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x1649, gbc.sp());
        EXPECT(0x4a21, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 1D 0171
        gbc.setState(0x2e98, 0x3a79, 0x3230, 0x2b3c, 0xc33a, 0xae30, 0x0, 0x0);
        gbc.writeMem(0x2e98, { 0x1d });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x3a79, gbc.sp());
        EXPECT(0x2e99, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 1D 0172
        gbc.setState(0xcb54, 0x9ae0, 0x56c0, 0x350e, 0x28da, 0x7cdf, 0x0, 0x1);
        gbc.writeMem(0xcb54, { 0x1d });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x9ae0, gbc.sp());
        EXPECT(0xcb55, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1d, gbc.readMem(0xcb54));
        // 1D 0174
        gbc.setState(0xa746, 0x2dd1, 0xd610, 0xa233, 0xc3d1, 0xca07, 0x1, 0x0);
        gbc.writeMem(0xa746, { 0x1d });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x2dd1, gbc.sp());
        EXPECT(0xa747, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1d, gbc.readMem(0xa746));
        // 1D 0175
        gbc.setState(0xae0b, 0x582b, 0x1770, 0xe97b, 0x4866, 0x2599, 0x0, 0x1);
        gbc.writeMem(0xae0b, { 0x1d });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x582b, gbc.sp());
        EXPECT(0xae0c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1d, gbc.readMem(0xae0b));
        // 1D 0176
        gbc.setState(0x9c4, 0x4f87, 0x7ad0, 0x8054, 0x7868, 0x4294, 0x0, 0x0);
        gbc.writeMem(0x9c4, { 0x1d });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x4f87, gbc.sp());
        EXPECT(0x9c5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 1D 0177
        gbc.setState(0x5e3c, 0xfd42, 0x1910, 0xdbb7, 0xa87e, 0x20b8, 0x0, 0x0);
        gbc.writeMem(0x5e3c, { 0x1d });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0xfd42, gbc.sp());
        EXPECT(0x5e3d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 1D 0178
        gbc.setState(0xeb91, 0x3d91, 0x410, 0xf979, 0x5de4, 0xa8b0, 0x1, 0x0);
        gbc.writeMem(0xeb91, { 0x1d });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x3d91, gbc.sp());
        EXPECT(0xeb92, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1d, gbc.readMem(0xeb91));
        // 1D 0179
        gbc.setState(0xbb1f, 0x2392, 0x7ae0, 0x1aa3, 0x9a9f, 0xc8f, 0x0, 0x0);
        gbc.writeMem(0xbb1f, { 0x1d });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x2392, gbc.sp());
        EXPECT(0xbb20, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1d, gbc.readMem(0xbb1f));
        // 1D 017A
        gbc.setState(0xc0cf, 0x75d7, 0x8b30, 0xde13, 0x2246, 0xa3f, 0x1, 0x0);
        gbc.writeMem(0xc0cf, { 0x1d });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0x75d7, gbc.sp());
        EXPECT(0xc0d0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1d, gbc.readMem(0xc0cf));
        // 1D 017B
        gbc.setState(0x3331, 0x6375, 0xeee0, 0x9b49, 0x1300, 0x8e4, 0x0, 0x1);
        gbc.writeMem(0x3331, { 0x1d });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x6375, gbc.sp());
        EXPECT(0x3332, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 1D 017C
        gbc.setState(0x31c4, 0xbbd0, 0x7fd0, 0xcb3c, 0xdd43, 0x6f39, 0x1, 0x0);
        gbc.writeMem(0x31c4, { 0x1d });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0xbbd0, gbc.sp());
        EXPECT(0x31c5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 1D 017D
        gbc.setState(0x8525, 0x3e3b, 0xb420, 0xb10c, 0xd70a, 0xbba, 0x0, 0x0);
        gbc.writeMem(0x8525, { 0x1d });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0x3e3b, gbc.sp());
        EXPECT(0x8526, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1d, gbc.readMem(0x8525));
        // 1D 017E
        gbc.setState(0xa688, 0xd933, 0x2a60, 0x16be, 0x35cd, 0x2e9a, 0x1, 0x1);
        gbc.writeMem(0xa688, { 0x1d });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0xd933, gbc.sp());
        EXPECT(0xa689, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1d, gbc.readMem(0xa688));
        // 1D 017F
        gbc.setState(0xe52b, 0xc958, 0x1630, 0xe873, 0x4f8a, 0x62e7, 0x0, 0x1);
        gbc.writeMem(0xe52b, { 0x1d });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0xc958, gbc.sp());
        EXPECT(0xe52c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1d, gbc.readMem(0xe52b));
        // 1D 0180
        gbc.setState(0x90fc, 0x75bc, 0x8b00, 0xff2d, 0x66f9, 0xb6da, 0x1, 0x1);
        gbc.writeMem(0x90fc, { 0x1d });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x75bc, gbc.sp());
        EXPECT(0x90fd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1d, gbc.readMem(0x90fc));
        // 1D 0181
        gbc.setState(0xdb22, 0x7a4a, 0x9e0, 0x4d1b, 0x95c0, 0x73d8, 0x1, 0x0);
        gbc.writeMem(0xdb22, { 0x1d });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x7a4a, gbc.sp());
        EXPECT(0xdb23, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1d, gbc.readMem(0xdb22));
        // 1D 0183
        gbc.setState(0x3611, 0x31f7, 0x15a0, 0xc1e5, 0x80ac, 0x62b5, 0x1, 0x1);
        gbc.writeMem(0x3611, { 0x1d });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x31f7, gbc.sp());
        EXPECT(0x3612, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 1D 0184
        gbc.setState(0x942b, 0xc6ee, 0x6fb0, 0x2de3, 0xe3d4, 0x3c78, 0x1, 0x1);
        gbc.writeMem(0x942b, { 0x1d });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0xc6ee, gbc.sp());
        EXPECT(0x942c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1d, gbc.readMem(0x942b));
        // 1D 0185
        gbc.setState(0xaec2, 0x689, 0x1dd0, 0x3dc4, 0x2f68, 0xcb1, 0x0, 0x0);
        gbc.writeMem(0xaec2, { 0x1d });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x689, gbc.sp());
        EXPECT(0xaec3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1d, gbc.readMem(0xaec2));
        // 1D 0186
        gbc.setState(0xeb3a, 0xc076, 0x580, 0x8263, 0xf812, 0x9d55, 0x0, 0x1);
        gbc.writeMem(0xeb3a, { 0x1d });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0xc076, gbc.sp());
        EXPECT(0xeb3b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1d, gbc.readMem(0xeb3a));
        // 1D 0187
        gbc.setState(0xa2d6, 0x967, 0xecb0, 0x1a66, 0xd20b, 0x8b73, 0x1, 0x0);
        gbc.writeMem(0xa2d6, { 0x1d });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x967, gbc.sp());
        EXPECT(0xa2d7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1d, gbc.readMem(0xa2d6));
        // 1D 0188
        gbc.setState(0x3e6, 0xe2e3, 0x5880, 0xf62c, 0x4b66, 0x2867, 0x1, 0x1);
        gbc.writeMem(0x3e6, { 0x1d });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0xe2e3, gbc.sp());
        EXPECT(0x3e7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 1D 018A
        gbc.setState(0x3a17, 0xe54e, 0x7c10, 0x2a24, 0x3d9e, 0x3296, 0x1, 0x0);
        gbc.writeMem(0x3a17, { 0x1d });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0xe54e, gbc.sp());
        EXPECT(0x3a18, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 1D 018B
        gbc.setState(0x7570, 0x2bac, 0x3d50, 0xaa65, 0xd650, 0xf050, 0x1, 0x0);
        gbc.writeMem(0x7570, { 0x1d });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x2bac, gbc.sp());
        EXPECT(0x7571, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 1D 018C
        gbc.setState(0xad6e, 0xf67e, 0x71c0, 0x49eb, 0xc48f, 0xf864, 0x1, 0x0);
        gbc.writeMem(0xad6e, { 0x1d });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0xf67e, gbc.sp());
        EXPECT(0xad6f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1d, gbc.readMem(0xad6e));
        // 1D 018D
        gbc.setState(0x7b37, 0x650e, 0xf840, 0xe076, 0xefe8, 0x6a92, 0x0, 0x0);
        gbc.writeMem(0x7b37, { 0x1d });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x650e, gbc.sp());
        EXPECT(0x7b38, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 1D 018E
        gbc.setState(0x41ee, 0x2f6c, 0xa810, 0xa2ca, 0xd4fc, 0x4463, 0x1, 0x0);
        gbc.writeMem(0x41ee, { 0x1d });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x2f6c, gbc.sp());
        EXPECT(0x41ef, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 1D 018F
        gbc.setState(0x4652, 0xa491, 0x9730, 0x2703, 0x3fd2, 0x2338, 0x1, 0x0);
        gbc.writeMem(0x4652, { 0x1d });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0xa491, gbc.sp());
        EXPECT(0x4653, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 1D 0190
        gbc.setState(0x2ab1, 0x2a45, 0xf150, 0x2027, 0xc8ce, 0xdbe2, 0x1, 0x0);
        gbc.writeMem(0x2ab1, { 0x1d });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x2a45, gbc.sp());
        EXPECT(0x2ab2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 1D 0191
        gbc.setState(0x47fb, 0xa17f, 0x83d0, 0x4896, 0xf903, 0xb71c, 0x0, 0x0);
        gbc.writeMem(0x47fb, { 0x1d });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0xa17f, gbc.sp());
        EXPECT(0x47fc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 1D 0192
        gbc.setState(0xdd42, 0x70bc, 0x6f80, 0xb729, 0x23a4, 0xe781, 0x1, 0x0);
        gbc.writeMem(0xdd42, { 0x1d });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x70bc, gbc.sp());
        EXPECT(0xdd43, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1d, gbc.readMem(0xdd42));
        // 1D 0193
        gbc.setState(0xcbe4, 0x380a, 0x9060, 0x2721, 0x48d, 0x1c19, 0x1, 0x1);
        gbc.writeMem(0xcbe4, { 0x1d });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x380a, gbc.sp());
        EXPECT(0xcbe5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1d, gbc.readMem(0xcbe4));
        // 1D 0194
        gbc.setState(0xd446, 0x9083, 0xe460, 0x2f1, 0x81bf, 0xb1e5, 0x1, 0x0);
        gbc.writeMem(0xd446, { 0x1d });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x9083, gbc.sp());
        EXPECT(0xd447, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1d, gbc.readMem(0xd446));
        // 1D 0195
        gbc.setState(0xafd4, 0xad94, 0xfb20, 0xfb81, 0xa045, 0x6861, 0x1, 0x1);
        gbc.writeMem(0xafd4, { 0x1d });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0xad94, gbc.sp());
        EXPECT(0xafd5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1d, gbc.readMem(0xafd4));
        // 1D 0196
        gbc.setState(0x15f, 0x109c, 0xa120, 0x65d9, 0xa7e6, 0x5af0, 0x0, 0x0);
        gbc.writeMem(0x15f, { 0x1d });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x109c, gbc.sp());
        EXPECT(0x160, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 1D 0197
        gbc.setState(0xeca6, 0x5aa6, 0x2db0, 0xb82d, 0x8d43, 0xba85, 0x1, 0x1);
        gbc.writeMem(0xeca6, { 0x1d });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x5aa6, gbc.sp());
        EXPECT(0xeca7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1d, gbc.readMem(0xeca6));
        // 1D 0198
        gbc.setState(0xb1ee, 0x7114, 0xdaf0, 0xaa2, 0x69f9, 0x1633, 0x1, 0x0);
        gbc.writeMem(0xb1ee, { 0x1d });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x7114, gbc.sp());
        EXPECT(0xb1ef, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1d, gbc.readMem(0xb1ee));
        // 1D 0199
        gbc.setState(0x9c4e, 0xa6c, 0xef50, 0x21d5, 0x606b, 0x2bca, 0x0, 0x1);
        gbc.writeMem(0x9c4e, { 0x1d });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0xa6c, gbc.sp());
        EXPECT(0x9c4f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1d, gbc.readMem(0x9c4e));
        // 1D 019A
        gbc.setState(0xd813, 0xa7ed, 0xf340, 0x9e6f, 0xdf3d, 0x5724, 0x1, 0x1);
        gbc.writeMem(0xd813, { 0x1d });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0xa7ed, gbc.sp());
        EXPECT(0xd814, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1d, gbc.readMem(0xd813));
        // 1D 019B
        gbc.setState(0x8229, 0x636e, 0x4c70, 0x631e, 0x3bb4, 0x7de, 0x1, 0x1);
        gbc.writeMem(0x8229, { 0x1d });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x636e, gbc.sp());
        EXPECT(0x822a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1d, gbc.readMem(0x8229));
        // 1D 019C
        gbc.setState(0x7151, 0xc49d, 0x87e0, 0xd676, 0xf8cb, 0x6e20, 0x0, 0x0);
        gbc.writeMem(0x7151, { 0x1d });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0xc49d, gbc.sp());
        EXPECT(0x7152, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 1D 019D
        gbc.setState(0xc2e, 0x8eee, 0x7380, 0xd874, 0x98ae, 0xecea, 0x0, 0x0);
        gbc.writeMem(0xc2e, { 0x1d });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x8eee, gbc.sp());
        EXPECT(0xc2f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 1D 019E
        gbc.setState(0x7bc9, 0x7d55, 0x6a40, 0x548a, 0x2fad, 0xfa7a, 0x0, 0x1);
        gbc.writeMem(0x7bc9, { 0x1d });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x7d55, gbc.sp());
        EXPECT(0x7bca, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 1D 019F
        gbc.setState(0x6f66, 0x59af, 0xea70, 0x9143, 0x9419, 0xfbca, 0x0, 0x0);
        gbc.writeMem(0x6f66, { 0x1d });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x59af, gbc.sp());
        EXPECT(0x6f67, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 1D 01A0
        gbc.setState(0x1f46, 0x2500, 0x6fc0, 0xcb04, 0x6f4c, 0x1833, 0x1, 0x0);
        gbc.writeMem(0x1f46, { 0x1d });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x2500, gbc.sp());
        EXPECT(0x1f47, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 1D 01A1
        gbc.setState(0x3856, 0x9e75, 0x3f10, 0x5527, 0x2302, 0x3541, 0x0, 0x1);
        gbc.writeMem(0x3856, { 0x1d });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x9e75, gbc.sp());
        EXPECT(0x3857, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 1D 01A2
        gbc.setState(0x8f45, 0x2ec7, 0x8cd0, 0x2fbd, 0x8386, 0x12f7, 0x1, 0x1);
        gbc.writeMem(0x8f45, { 0x1d });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x2ec7, gbc.sp());
        EXPECT(0x8f46, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1d, gbc.readMem(0x8f45));
        // 1D 01A3
        gbc.setState(0x69f4, 0x9aac, 0xe9b0, 0x750b, 0xd46, 0x88e4, 0x0, 0x0);
        gbc.writeMem(0x69f4, { 0x1d });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x9aac, gbc.sp());
        EXPECT(0x69f5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 1D 01A4
        gbc.setState(0xe17, 0x8406, 0x10b0, 0x5458, 0xe111, 0x7cb7, 0x1, 0x0);
        gbc.writeMem(0xe17, { 0x1d });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x8406, gbc.sp());
        EXPECT(0xe18, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 1D 01A5
        gbc.setState(0x5140, 0x5d84, 0x6a20, 0xbac7, 0x4dbf, 0x54f, 0x0, 0x1);
        gbc.writeMem(0x5140, { 0x1d });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x5d84, gbc.sp());
        EXPECT(0x5141, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 1D 01A6
        gbc.setState(0x2d8f, 0x910b, 0x7a80, 0x115c, 0x3da6, 0x9e36, 0x0, 0x1);
        gbc.writeMem(0x2d8f, { 0x1d });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x910b, gbc.sp());
        EXPECT(0x2d90, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 1D 01A7
        gbc.setState(0x73b8, 0x77c2, 0x7a80, 0xe850, 0xac9a, 0xb2e, 0x1, 0x0);
        gbc.writeMem(0x73b8, { 0x1d });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x77c2, gbc.sp());
        EXPECT(0x73b9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 1D 01A8
        gbc.setState(0x65d0, 0x9ca0, 0xa340, 0x1b51, 0x5dbf, 0x7624, 0x0, 0x0);
        gbc.writeMem(0x65d0, { 0x1d });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x9ca0, gbc.sp());
        EXPECT(0x65d1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 1D 01A9
        gbc.setState(0xee2d, 0xff0d, 0x8a00, 0x5499, 0x33c8, 0xfa9a, 0x0, 0x1);
        gbc.writeMem(0xee2d, { 0x1d });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0xff0d, gbc.sp());
        EXPECT(0xee2e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1d, gbc.readMem(0xee2d));
        // 1D 01AA
        gbc.setState(0xa2c4, 0x67e2, 0x8d10, 0x1bef, 0x4cd7, 0x9266, 0x1, 0x0);
        gbc.writeMem(0xa2c4, { 0x1d });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x67e2, gbc.sp());
        EXPECT(0xa2c5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1d, gbc.readMem(0xa2c4));
        // 1D 01AB
        gbc.setState(0xe861, 0x33d1, 0xf410, 0x24c3, 0xcc88, 0xe89e, 0x0, 0x1);
        gbc.writeMem(0xe861, { 0x1d });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x33d1, gbc.sp());
        EXPECT(0xe862, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1d, gbc.readMem(0xe861));
        // 1D 01AC
        gbc.setState(0xc886, 0xe822, 0x4320, 0x120, 0xc07e, 0x151f, 0x1, 0x0);
        gbc.writeMem(0xc886, { 0x1d });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0xe822, gbc.sp());
        EXPECT(0xc887, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1d, gbc.readMem(0xc886));
        // 1D 01AD
        gbc.setState(0x4cf8, 0x6eea, 0x3e10, 0xf0e5, 0xecc0, 0x9e95, 0x0, 0x0);
        gbc.writeMem(0x4cf8, { 0x1d });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x6eea, gbc.sp());
        EXPECT(0x4cf9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 1D 01AE
        gbc.setState(0x1f6c, 0xecd1, 0x72d0, 0x8be7, 0xb4d2, 0x5512, 0x1, 0x1);
        gbc.writeMem(0x1f6c, { 0x1d });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0xecd1, gbc.sp());
        EXPECT(0x1f6d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 1D 01AF
        gbc.setState(0x49a3, 0x7de2, 0x2ca0, 0x9539, 0x7c13, 0xdc07, 0x0, 0x0);
        gbc.writeMem(0x49a3, { 0x1d });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x7de2, gbc.sp());
        EXPECT(0x49a4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 1D 01B0
        gbc.setState(0x42a9, 0x5b39, 0x7c50, 0x53b0, 0x5206, 0xb89b, 0x0, 0x1);
        gbc.writeMem(0x42a9, { 0x1d });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x5b39, gbc.sp());
        EXPECT(0x42aa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 1D 01B1
        gbc.setState(0xc27c, 0x6085, 0x65d0, 0x9d78, 0x9311, 0x35c6, 0x0, 0x0);
        gbc.writeMem(0xc27c, { 0x1d });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x6085, gbc.sp());
        EXPECT(0xc27d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1d, gbc.readMem(0xc27c));
        // 1D 01B2
        gbc.setState(0xa526, 0x733c, 0xaab0, 0xcd7d, 0x4725, 0x1ef7, 0x0, 0x0);
        gbc.writeMem(0xa526, { 0x1d });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x733c, gbc.sp());
        EXPECT(0xa527, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1d, gbc.readMem(0xa526));
        // 1D 01B3
        gbc.setState(0x4a2e, 0x61a5, 0xcc30, 0x1d91, 0x878a, 0x9ca, 0x1, 0x1);
        gbc.writeMem(0x4a2e, { 0x1d });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x61a5, gbc.sp());
        EXPECT(0x4a2f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 1D 01B4
        gbc.setState(0xd4a0, 0x29ff, 0x6cd0, 0xa54e, 0x9aee, 0x5ff8, 0x0, 0x0);
        gbc.writeMem(0xd4a0, { 0x1d });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x29ff, gbc.sp());
        EXPECT(0xd4a1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1d, gbc.readMem(0xd4a0));
        // 1D 01B5
        gbc.setState(0x937f, 0xefb4, 0x1960, 0xf9cf, 0x3ff9, 0xc22f, 0x0, 0x1);
        gbc.writeMem(0x937f, { 0x1d });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0xefb4, gbc.sp());
        EXPECT(0x9380, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1d, gbc.readMem(0x937f));
        // 1D 01B6
        gbc.setState(0xbfc4, 0x65f1, 0xd1f0, 0x6ee8, 0xf6a1, 0xc534, 0x0, 0x0);
        gbc.writeMem(0xbfc4, { 0x1d });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x65f1, gbc.sp());
        EXPECT(0xbfc5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1d, gbc.readMem(0xbfc4));
        // 1D 01B7
        gbc.setState(0xb78e, 0x9146, 0x3e20, 0xab22, 0x339, 0xf5e9, 0x1, 0x0);
        gbc.writeMem(0xb78e, { 0x1d });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x9146, gbc.sp());
        EXPECT(0xb78f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1d, gbc.readMem(0xb78e));
        // 1D 01B8
        gbc.setState(0xbc00, 0x5845, 0x97c0, 0x2e8b, 0x8732, 0x513e, 0x0, 0x1);
        gbc.writeMem(0xbc00, { 0x1d });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x5845, gbc.sp());
        EXPECT(0xbc01, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1d, gbc.readMem(0xbc00));
        // 1D 01B9
        gbc.setState(0x7090, 0x86e1, 0x2670, 0x76b, 0xf485, 0x4fb4, 0x0, 0x1);
        gbc.writeMem(0x7090, { 0x1d });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x86e1, gbc.sp());
        EXPECT(0x7091, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 1D 01BA
        gbc.setState(0x6a, 0xd7d7, 0xb950, 0x385d, 0x15ad, 0xeeb0, 0x0, 0x1);
        gbc.writeMem(0x6a, { 0x1d });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0xd7d7, gbc.sp());
        EXPECT(0x6b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 1D 01BC
        gbc.setState(0x4f24, 0x7e8c, 0x2080, 0xd537, 0x59e0, 0xa7d2, 0x1, 0x1);
        gbc.writeMem(0x4f24, { 0x1d });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x7e8c, gbc.sp());
        EXPECT(0x4f25, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 1D 01BD
        gbc.setState(0xa429, 0x6e52, 0x9480, 0x8420, 0x5ee2, 0x6d2, 0x0, 0x0);
        gbc.writeMem(0xa429, { 0x1d });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x6e52, gbc.sp());
        EXPECT(0xa42a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1d, gbc.readMem(0xa429));
        // 1D 01BE
        gbc.setState(0x1820, 0x747a, 0xf770, 0x2ff2, 0xbb9b, 0xe0e4, 0x0, 0x0);
        gbc.writeMem(0x1820, { 0x1d });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x747a, gbc.sp());
        EXPECT(0x1821, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 1D 01BF
        gbc.setState(0xbf15, 0x195e, 0x3320, 0x587a, 0xef71, 0x281, 0x1, 0x1);
        gbc.writeMem(0xbf15, { 0x1d });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x195e, gbc.sp());
        EXPECT(0xbf16, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1d, gbc.readMem(0xbf15));
        // 1D 01C0
        gbc.setState(0x17bc, 0xfe4b, 0xc8a0, 0x3870, 0xab04, 0xb757, 0x1, 0x1);
        gbc.writeMem(0x17bc, { 0x1d });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0xfe4b, gbc.sp());
        EXPECT(0x17bd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 1D 01C1
        gbc.setState(0x38a3, 0x6377, 0xc3b0, 0x5ff0, 0x958c, 0x17a8, 0x1, 0x0);
        gbc.writeMem(0x38a3, { 0x1d });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x6377, gbc.sp());
        EXPECT(0x38a4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 1D 01C2
        gbc.setState(0x90b8, 0x827e, 0xa8b0, 0x84db, 0xdbc, 0xe48f, 0x0, 0x0);
        gbc.writeMem(0x90b8, { 0x1d });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x827e, gbc.sp());
        EXPECT(0x90b9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1d, gbc.readMem(0x90b8));
        // 1D 01C3
        gbc.setState(0x7aff, 0xae0f, 0xd60, 0x3b54, 0x864a, 0xc65e, 0x1, 0x0);
        gbc.writeMem(0x7aff, { 0x1d });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0xae0f, gbc.sp());
        EXPECT(0x7b00, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 1D 01C4
        gbc.setState(0x90c7, 0xbcc5, 0x600, 0xab0d, 0xb47b, 0xa60e, 0x0, 0x0);
        gbc.writeMem(0x90c7, { 0x1d });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0xbcc5, gbc.sp());
        EXPECT(0x90c8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1d, gbc.readMem(0x90c7));
        // 1D 01C5
        gbc.setState(0x2808, 0x317d, 0x2660, 0x8fc6, 0x1872, 0x306b, 0x0, 0x0);
        gbc.writeMem(0x2808, { 0x1d });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x317d, gbc.sp());
        EXPECT(0x2809, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 1D 01C6
        gbc.setState(0xb20d, 0x7bd0, 0x26a0, 0xa484, 0xf67d, 0x19c2, 0x0, 0x0);
        gbc.writeMem(0xb20d, { 0x1d });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x7bd0, gbc.sp());
        EXPECT(0xb20e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1d, gbc.readMem(0xb20d));
        // 1D 01C7
        gbc.setState(0xea6e, 0xf139, 0x2be0, 0x6559, 0xe272, 0xf267, 0x1, 0x0);
        gbc.writeMem(0xea6e, { 0x1d });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0xf139, gbc.sp());
        EXPECT(0xea6f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1d, gbc.readMem(0xea6e));
        // 1D 01C8
        gbc.setState(0x90c1, 0xc731, 0xfb30, 0xbd83, 0x34f, 0x8abb, 0x0, 0x0);
        gbc.writeMem(0x90c1, { 0x1d });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0xc731, gbc.sp());
        EXPECT(0x90c2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1d, gbc.readMem(0x90c1));
        // 1D 01C9
        gbc.setState(0xd7d0, 0xd3a0, 0xa30, 0xe001, 0x994e, 0x6ef0, 0x0, 0x1);
        gbc.writeMem(0xd7d0, { 0x1d });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0xd3a0, gbc.sp());
        EXPECT(0xd7d1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1d, gbc.readMem(0xd7d0));
        // 1D 01CA
        gbc.setState(0xb453, 0x4deb, 0xac80, 0x8db3, 0x60bd, 0xd1a2, 0x0, 0x0);
        gbc.writeMem(0xb453, { 0x1d });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x4deb, gbc.sp());
        EXPECT(0xb454, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1d, gbc.readMem(0xb453));
        // 1D 01CC
        gbc.setState(0xdf17, 0xe8b6, 0x3c20, 0x310f, 0xb876, 0xd064, 0x0, 0x0);
        gbc.writeMem(0xdf17, { 0x1d });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0xe8b6, gbc.sp());
        EXPECT(0xdf18, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1d, gbc.readMem(0xdf17));
        // 1D 01CD
        gbc.setState(0x9434, 0xa7b, 0x8ff0, 0xa794, 0x366b, 0x8aa7, 0x1, 0x0);
        gbc.writeMem(0x9434, { 0x1d });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0xa7b, gbc.sp());
        EXPECT(0x9435, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1d, gbc.readMem(0x9434));
        // 1D 01CE
        gbc.setState(0x56f2, 0x9792, 0x7b30, 0x2938, 0x4f41, 0xdb85, 0x0, 0x0);
        gbc.writeMem(0x56f2, { 0x1d });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x9792, gbc.sp());
        EXPECT(0x56f3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 1D 01CF
        gbc.setState(0x13f4, 0xbc4, 0x6bf0, 0xace1, 0xf927, 0xd67f, 0x1, 0x0);
        gbc.writeMem(0x13f4, { 0x1d });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0xbc4, gbc.sp());
        EXPECT(0x13f5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 1D 01D0
        gbc.setState(0x11ff, 0x8b6b, 0x73f0, 0xa5ff, 0x3b4e, 0xaa08, 0x1, 0x0);
        gbc.writeMem(0x11ff, { 0x1d });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x8b6b, gbc.sp());
        EXPECT(0x1200, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 1D 01D2
        gbc.setState(0x41ce, 0x9843, 0x3b90, 0x657e, 0x4484, 0x1dd5, 0x0, 0x0);
        gbc.writeMem(0x41ce, { 0x1d });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x9843, gbc.sp());
        EXPECT(0x41cf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 1D 01D3
        gbc.setState(0x3f47, 0x1582, 0x6790, 0xec8a, 0x6895, 0xce68, 0x0, 0x1);
        gbc.writeMem(0x3f47, { 0x1d });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x1582, gbc.sp());
        EXPECT(0x3f48, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 1D 01D4
        gbc.setState(0x3067, 0x86d7, 0x5980, 0x56ae, 0x2bd2, 0xe908, 0x0, 0x0);
        gbc.writeMem(0x3067, { 0x1d });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x86d7, gbc.sp());
        EXPECT(0x3068, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 1D 01D5
        gbc.setState(0x26e5, 0xab3c, 0x5e0, 0xff10, 0x6f24, 0x935b, 0x1, 0x1);
        gbc.writeMem(0x26e5, { 0x1d });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0xab3c, gbc.sp());
        EXPECT(0x26e6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 1D 01D6
        gbc.setState(0x312b, 0xe7f6, 0x5c40, 0x5023, 0x420, 0xb6ef, 0x1, 0x0);
        gbc.writeMem(0x312b, { 0x1d });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0xe7f6, gbc.sp());
        EXPECT(0x312c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 1D 01D7
        gbc.setState(0xe601, 0x716e, 0xbcb0, 0x8fd3, 0xb8c9, 0xe29, 0x1, 0x1);
        gbc.writeMem(0xe601, { 0x1d });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x716e, gbc.sp());
        EXPECT(0xe602, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1d, gbc.readMem(0xe601));
        // 1D 01D8
        gbc.setState(0xdffe, 0x22c6, 0x4ce0, 0x8252, 0x636a, 0x823, 0x1, 0x0);
        gbc.writeMem(0xdffe, { 0x1d });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x22c6, gbc.sp());
        EXPECT(0xdfff, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1d, gbc.readMem(0xdffe));
        // 1D 01D9
        gbc.setState(0x5154, 0xd42e, 0xc2b0, 0x4ec, 0xa6d5, 0x28c9, 0x0, 0x0);
        gbc.writeMem(0x5154, { 0x1d });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0xd42e, gbc.sp());
        EXPECT(0x5155, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 1D 01DA
        gbc.setState(0x9ed9, 0x7895, 0xd520, 0xad15, 0x3873, 0x31c6, 0x1, 0x1);
        gbc.writeMem(0x9ed9, { 0x1d });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x7895, gbc.sp());
        EXPECT(0x9eda, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1d, gbc.readMem(0x9ed9));
        // 1D 01DB
        gbc.setState(0x6f3f, 0x37a8, 0x2200, 0xf1d4, 0x4ce, 0xb12e, 0x0, 0x1);
        gbc.writeMem(0x6f3f, { 0x1d });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x37a8, gbc.sp());
        EXPECT(0x6f40, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 1D 01DC
        gbc.setState(0xe88a, 0xe2a9, 0x6ef0, 0xe260, 0xea30, 0xd3b4, 0x0, 0x0);
        gbc.writeMem(0xe88a, { 0x1d });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0xe2a9, gbc.sp());
        EXPECT(0xe88b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1d, gbc.readMem(0xe88a));
        // 1D 01DD
        gbc.setState(0xd46, 0xf442, 0xc2b0, 0xe27c, 0x427, 0xea56, 0x1, 0x1);
        gbc.writeMem(0xd46, { 0x1d });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0xf442, gbc.sp());
        EXPECT(0xd47, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 1D 01DE
        gbc.setState(0x21df, 0xe1c2, 0x7e50, 0xf957, 0x2c0c, 0xbc51, 0x1, 0x0);
        gbc.writeMem(0x21df, { 0x1d });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0xe1c2, gbc.sp());
        EXPECT(0x21e0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 1D 01DF
        gbc.setState(0x1896, 0xba70, 0x1350, 0xacf3, 0x9b3a, 0xfe9f, 0x1, 0x0);
        gbc.writeMem(0x1896, { 0x1d });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0xba70, gbc.sp());
        EXPECT(0x1897, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 1D 01E0
        gbc.setState(0x2138, 0x33fe, 0x2910, 0xb57b, 0xf83, 0x9407, 0x0, 0x0);
        gbc.writeMem(0x2138, { 0x1d });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x33fe, gbc.sp());
        EXPECT(0x2139, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 1D 01E1
        gbc.setState(0xf8f, 0x7840, 0x90a0, 0x3fb4, 0xb4d5, 0x9c4f, 0x1, 0x0);
        gbc.writeMem(0xf8f, { 0x1d });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x7840, gbc.sp());
        EXPECT(0xf90, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 1D 01E2
        gbc.setState(0x5eae, 0x5a86, 0xbfe0, 0xde20, 0xc044, 0xd88f, 0x0, 0x1);
        gbc.writeMem(0x5eae, { 0x1d });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x5a86, gbc.sp());
        EXPECT(0x5eaf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 1D 01E3
        gbc.setState(0xdc71, 0x3083, 0xb290, 0xf7cf, 0x612c, 0x468d, 0x1, 0x1);
        gbc.writeMem(0xdc71, { 0x1d });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x3083, gbc.sp());
        EXPECT(0xdc72, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1d, gbc.readMem(0xdc71));
        // 1D 01E4
        gbc.setState(0x24f8, 0xe6e5, 0x5a40, 0x1887, 0x6a53, 0xc18, 0x1, 0x1);
        gbc.writeMem(0x24f8, { 0x1d });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0xe6e5, gbc.sp());
        EXPECT(0x24f9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 1D 01E5
        gbc.setState(0x28f, 0x40f0, 0xaea0, 0x2c1, 0x5251, 0x220f, 0x1, 0x1);
        gbc.writeMem(0x28f, { 0x1d });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x40f0, gbc.sp());
        EXPECT(0x290, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 1D 01E6
        gbc.setState(0x999, 0x7581, 0xeab0, 0x3d5f, 0xf0b, 0x251e, 0x0, 0x1);
        gbc.writeMem(0x999, { 0x1d });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x7581, gbc.sp());
        EXPECT(0x99a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 1D 01E7
        gbc.setState(0x6f8e, 0x5156, 0x1410, 0xa0f9, 0xb09c, 0xdace, 0x0, 0x0);
        gbc.writeMem(0x6f8e, { 0x1d });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x5156, gbc.sp());
        EXPECT(0x6f8f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 1D 01E8
        gbc.setState(0xe03f, 0x4420, 0x5f00, 0x97f7, 0x4e57, 0x3d4b, 0x0, 0x0);
        gbc.writeMem(0xe03f, { 0x1d });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x4420, gbc.sp());
        EXPECT(0xe040, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1d, gbc.readMem(0xe03f));
        // 1D 01E9
        gbc.setState(0x8cf1, 0x690a, 0xa440, 0xc0f5, 0x8117, 0xc384, 0x0, 0x0);
        gbc.writeMem(0x8cf1, { 0x1d });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x690a, gbc.sp());
        EXPECT(0x8cf2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1d, gbc.readMem(0x8cf1));
        // 1D 01EA
        gbc.setState(0x65d5, 0xa9ff, 0x5c60, 0xd340, 0xdeec, 0x8bd4, 0x1, 0x1);
        gbc.writeMem(0x65d5, { 0x1d });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0xa9ff, gbc.sp());
        EXPECT(0x65d6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 1D 01EB
        gbc.setState(0x9acf, 0x97f1, 0x8210, 0x251c, 0x4002, 0x6532, 0x0, 0x0);
        gbc.writeMem(0x9acf, { 0x1d });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x97f1, gbc.sp());
        EXPECT(0x9ad0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1d, gbc.readMem(0x9acf));
        // 1D 01EC
        gbc.setState(0x26bb, 0xcce8, 0xad20, 0x9224, 0x2cd6, 0xdf74, 0x1, 0x1);
        gbc.writeMem(0x26bb, { 0x1d });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0xcce8, gbc.sp());
        EXPECT(0x26bc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 1D 01ED
        gbc.setState(0xe9c8, 0xf7ab, 0x9600, 0x78eb, 0xaaef, 0xc94e, 0x0, 0x0);
        gbc.writeMem(0xe9c8, { 0x1d });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0xf7ab, gbc.sp());
        EXPECT(0xe9c9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1d, gbc.readMem(0xe9c8));
        // 1D 01EE
        gbc.setState(0xb08a, 0xefff, 0xbe0, 0x6bab, 0x34fe, 0xf886, 0x1, 0x1);
        gbc.writeMem(0xb08a, { 0x1d });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0xefff, gbc.sp());
        EXPECT(0xb08b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1d, gbc.readMem(0xb08a));
        // 1D 01EF
        gbc.setState(0x9a84, 0x5ab8, 0x78a0, 0x9907, 0x4b19, 0x5463, 0x0, 0x0);
        gbc.writeMem(0x9a84, { 0x1d });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x5ab8, gbc.sp());
        EXPECT(0x9a85, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1d, gbc.readMem(0x9a84));
        // 1D 01F0
        gbc.setState(0xd304, 0x2165, 0xfde0, 0x619b, 0x705a, 0xfd6, 0x1, 0x1);
        gbc.writeMem(0xd304, { 0x1d });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x2165, gbc.sp());
        EXPECT(0xd305, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1d, gbc.readMem(0xd304));
        // 1D 01F1
        gbc.setState(0x2b9d, 0xf42b, 0xd430, 0x25da, 0xcb98, 0x8438, 0x1, 0x1);
        gbc.writeMem(0x2b9d, { 0x1d });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0xf42b, gbc.sp());
        EXPECT(0x2b9e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 1D 01F2
        gbc.setState(0x1c56, 0x6007, 0x81d0, 0xc71e, 0xac38, 0x3ddc, 0x1, 0x0);
        gbc.writeMem(0x1c56, { 0x1d });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x6007, gbc.sp());
        EXPECT(0x1c57, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 1D 01F3
        gbc.setState(0xca85, 0x5818, 0x9980, 0xa1fc, 0x6e3d, 0xc522, 0x1, 0x1);
        gbc.writeMem(0xca85, { 0x1d });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x5818, gbc.sp());
        EXPECT(0xca86, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1d, gbc.readMem(0xca85));
        // 1D 01F4
        gbc.setState(0xbe21, 0xcd24, 0xd6c0, 0x87cd, 0x2aca, 0x8149, 0x1, 0x0);
        gbc.writeMem(0xbe21, { 0x1d });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0xcd24, gbc.sp());
        EXPECT(0xbe22, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1d, gbc.readMem(0xbe21));
        // 1D 01F5
        gbc.setState(0xa15a, 0xdc96, 0x5b0, 0x1e13, 0x29e1, 0x3e9, 0x1, 0x1);
        gbc.writeMem(0xa15a, { 0x1d });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0xdc96, gbc.sp());
        EXPECT(0xa15b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1d, gbc.readMem(0xa15a));
        // 1D 01F6
        gbc.setState(0x6826, 0x1ad1, 0xa890, 0xbe4d, 0x77be, 0x8bb7, 0x1, 0x1);
        gbc.writeMem(0x6826, { 0x1d });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x1ad1, gbc.sp());
        EXPECT(0x6827, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 1D 01F7
        gbc.setState(0x37de, 0xb4d4, 0x8730, 0xb6f2, 0xbfc1, 0x5bd6, 0x1, 0x1);
        gbc.writeMem(0x37de, { 0x1d });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0xb4d4, gbc.sp());
        EXPECT(0x37df, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 1D 01F8
        gbc.setState(0xcbc2, 0xd975, 0xeaf0, 0xd953, 0xdb56, 0xa544, 0x0, 0x1);
        gbc.writeMem(0xcbc2, { 0x1d });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0xd975, gbc.sp());
        EXPECT(0xcbc3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1d, gbc.readMem(0xcbc2));
        // 1D 01F9
        gbc.setState(0xab6d, 0x15b6, 0x4f60, 0xd68c, 0xadfa, 0x9155, 0x0, 0x0);
        gbc.writeMem(0xab6d, { 0x1d });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x15b6, gbc.sp());
        EXPECT(0xab6e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1d, gbc.readMem(0xab6d));
        // 1D 01FA
        gbc.setState(0xe355, 0xb273, 0xbd00, 0x14ec, 0xcd0b, 0xc0a8, 0x0, 0x1);
        gbc.writeMem(0xe355, { 0x1d });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0xb273, gbc.sp());
        EXPECT(0xe356, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1d, gbc.readMem(0xe355));
        // 1D 01FB
        gbc.setState(0x1bca, 0xa0ab, 0x4cf0, 0xd70a, 0x459d, 0xaf5d, 0x1, 0x0);
        gbc.writeMem(0x1bca, { 0x1d });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0xa0ab, gbc.sp());
        EXPECT(0x1bcb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 1D 01FC
        gbc.setState(0x4b5a, 0x65ce, 0xe9a0, 0x9d7e, 0x29b1, 0x58f9, 0x0, 0x0);
        gbc.writeMem(0x4b5a, { 0x1d });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x65ce, gbc.sp());
        EXPECT(0x4b5b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 1D 01FD
        gbc.setState(0x6d3f, 0x70ae, 0x4370, 0x5645, 0x5b54, 0x38ac, 0x0, 0x1);
        gbc.writeMem(0x6d3f, { 0x1d });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x70ae, gbc.sp());
        EXPECT(0x6d40, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 1D 01FE
        gbc.setState(0xbd44, 0x10ac, 0x24f0, 0xb80a, 0x9006, 0x967, 0x0, 0x1);
        gbc.writeMem(0xbd44, { 0x1d });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x10ac, gbc.sp());
        EXPECT(0xbd45, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1d, gbc.readMem(0xbd44));
        // 1D 01FF
        gbc.setState(0x83b5, 0xf685, 0xdc80, 0x5a62, 0x41a6, 0xc2ed, 0x1, 0x0);
        gbc.writeMem(0x83b5, { 0x1d });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0xf685, gbc.sp());
        EXPECT(0x83b6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1d, gbc.readMem(0x83b5));
        // 1D 0200
        gbc.setState(0xb8a7, 0xebb1, 0xd250, 0x39ee, 0x92ed, 0xa892, 0x1, 0x0);
        gbc.writeMem(0xb8a7, { 0x1d });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0xebb1, gbc.sp());
        EXPECT(0xb8a8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1d, gbc.readMem(0xb8a7));
        // 1D 0201
        gbc.setState(0x420d, 0x2f99, 0x120, 0xf5b1, 0xf95d, 0xb3b5, 0x0, 0x0);
        gbc.writeMem(0x420d, { 0x1d });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x2f99, gbc.sp());
        EXPECT(0x420e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 1D 0202
        gbc.setState(0x8ebe, 0x132c, 0x2990, 0x1b88, 0xed1, 0x6d89, 0x0, 0x0);
        gbc.writeMem(0x8ebe, { 0x1d });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x132c, gbc.sp());
        EXPECT(0x8ebf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1d, gbc.readMem(0x8ebe));
        // 1D 0203
        gbc.setState(0x319d, 0xbf06, 0x1060, 0xae30, 0x404b, 0x1915, 0x1, 0x0);
        gbc.writeMem(0x319d, { 0x1d });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0xbf06, gbc.sp());
        EXPECT(0x319e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 1D 0204
        gbc.setState(0x9c5f, 0x1a33, 0x1ba0, 0xbee2, 0x7b7, 0xe01e, 0x0, 0x1);
        gbc.writeMem(0x9c5f, { 0x1d });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x1a33, gbc.sp());
        EXPECT(0x9c60, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1d, gbc.readMem(0x9c5f));
        // 1D 0205
        gbc.setState(0x25b3, 0x4715, 0x9600, 0x62ee, 0x28e8, 0xe4a9, 0x1, 0x1);
        gbc.writeMem(0x25b3, { 0x1d });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x4715, gbc.sp());
        EXPECT(0x25b4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 1D 0206
        gbc.setState(0xcbcc, 0xac9c, 0xacd0, 0x7f3e, 0x72f3, 0x6fcd, 0x0, 0x0);
        gbc.writeMem(0xcbcc, { 0x1d });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0xac9c, gbc.sp());
        EXPECT(0xcbcd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1d, gbc.readMem(0xcbcc));
        // 1D 0207
        gbc.setState(0xe0fc, 0xf309, 0x9ca0, 0x6217, 0x2245, 0x6e07, 0x0, 0x0);
        gbc.writeMem(0xe0fc, { 0x1d });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0xf309, gbc.sp());
        EXPECT(0xe0fd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1d, gbc.readMem(0xe0fc));
        // 1D 0208
        gbc.setState(0x3883, 0x3c8a, 0x1870, 0x396a, 0x596, 0x83b9, 0x1, 0x0);
        gbc.writeMem(0x3883, { 0x1d });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x3c8a, gbc.sp());
        EXPECT(0x3884, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 1D 0209
        gbc.setState(0x208b, 0x9e96, 0x78a0, 0x436b, 0xedbd, 0xebd5, 0x0, 0x1);
        gbc.writeMem(0x208b, { 0x1d });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x9e96, gbc.sp());
        EXPECT(0x208c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 1D 020A
        gbc.setState(0x3a9b, 0xf8ab, 0xe5b0, 0x8038, 0x9b9c, 0x2e95, 0x0, 0x1);
        gbc.writeMem(0x3a9b, { 0x1d });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0xf8ab, gbc.sp());
        EXPECT(0x3a9c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 1D 020B
        gbc.setState(0xbd33, 0x7c81, 0xc30, 0xe5ea, 0x4475, 0xf951, 0x1, 0x0);
        gbc.writeMem(0xbd33, { 0x1d });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x7c81, gbc.sp());
        EXPECT(0xbd34, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1d, gbc.readMem(0xbd33));
        // 1D 020C
        gbc.setState(0x734e, 0x41a5, 0x9560, 0x9d25, 0xc65b, 0x9978, 0x1, 0x1);
        gbc.writeMem(0x734e, { 0x1d });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x41a5, gbc.sp());
        EXPECT(0x734f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 1D 020D
        gbc.setState(0xb75a, 0xdd1f, 0x34d0, 0x4ae1, 0xcd21, 0xda36, 0x0, 0x1);
        gbc.writeMem(0xb75a, { 0x1d });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0xdd1f, gbc.sp());
        EXPECT(0xb75b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1d, gbc.readMem(0xb75a));
        // 1D 020E
        gbc.setState(0xc838, 0xde6d, 0xe290, 0xf7a6, 0xc44a, 0xdf57, 0x1, 0x1);
        gbc.writeMem(0xc838, { 0x1d });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0xde6d, gbc.sp());
        EXPECT(0xc839, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1d, gbc.readMem(0xc838));
        // 1D 020F
        gbc.setState(0x31fe, 0xd32f, 0xde40, 0x942a, 0x137f, 0x5b57, 0x1, 0x0);
        gbc.writeMem(0x31fe, { 0x1d });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0xd32f, gbc.sp());
        EXPECT(0x31ff, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 1D 0210
        gbc.setState(0xa17c, 0x56d4, 0xbb80, 0xdf3e, 0x4d3c, 0xf0f9, 0x0, 0x1);
        gbc.writeMem(0xa17c, { 0x1d });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x56d4, gbc.sp());
        EXPECT(0xa17d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1d, gbc.readMem(0xa17c));
        // 1D 0211
        gbc.setState(0x914c, 0xbfe6, 0x4f60, 0x7388, 0x9f4e, 0x6288, 0x0, 0x1);
        gbc.writeMem(0x914c, { 0x1d });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0xbfe6, gbc.sp());
        EXPECT(0x914d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1d, gbc.readMem(0x914c));
        // 1D 0212
        gbc.setState(0x4465, 0x9a1d, 0x7ed0, 0xb3aa, 0xdd7a, 0x98c9, 0x1, 0x1);
        gbc.writeMem(0x4465, { 0x1d });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x9a1d, gbc.sp());
        EXPECT(0x4466, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 1D 0213
        gbc.setState(0x6355, 0x31bf, 0xea20, 0x3e71, 0xc78b, 0x85b3, 0x0, 0x1);
        gbc.writeMem(0x6355, { 0x1d });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x31bf, gbc.sp());
        EXPECT(0x6356, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 1D 0214
        gbc.setState(0x1a40, 0xf587, 0x7260, 0xa49a, 0xc86d, 0x51b1, 0x0, 0x1);
        gbc.writeMem(0x1a40, { 0x1d });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0xf587, gbc.sp());
        EXPECT(0x1a41, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 1D 0215
        gbc.setState(0x4745, 0xd509, 0xd650, 0x64a5, 0xcc6c, 0x4b6f, 0x0, 0x1);
        gbc.writeMem(0x4745, { 0x1d });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0xd509, gbc.sp());
        EXPECT(0x4746, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 1D 0216
        gbc.setState(0xaf70, 0x3a04, 0x7be0, 0xb391, 0x10bd, 0x8e31, 0x1, 0x1);
        gbc.writeMem(0xaf70, { 0x1d });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x3a04, gbc.sp());
        EXPECT(0xaf71, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1d, gbc.readMem(0xaf70));
        // 1D 0217
        gbc.setState(0x169d, 0xa9b, 0x2da0, 0x7d06, 0xc09b, 0xe461, 0x0, 0x0);
        gbc.writeMem(0x169d, { 0x1d });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0xa9b, gbc.sp());
        EXPECT(0x169e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 1D 0218
        gbc.setState(0x9fc8, 0x110f, 0xa640, 0xe3ab, 0x25a6, 0xb2df, 0x0, 0x0);
        gbc.writeMem(0x9fc8, { 0x1d });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x110f, gbc.sp());
        EXPECT(0x9fc9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1d, gbc.readMem(0x9fc8));
        // 1D 0219
        gbc.setState(0xba59, 0x3b1c, 0xd10, 0xed3, 0x9281, 0x8d20, 0x0, 0x1);
        gbc.writeMem(0xba59, { 0x1d });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x3b1c, gbc.sp());
        EXPECT(0xba5a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1d, gbc.readMem(0xba59));
        // 1D 021A
        gbc.setState(0x9b68, 0xaaa3, 0x5ed0, 0x352d, 0xc4ba, 0xdac4, 0x0, 0x0);
        gbc.writeMem(0x9b68, { 0x1d });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0xaaa3, gbc.sp());
        EXPECT(0x9b69, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1d, gbc.readMem(0x9b68));
        // 1D 021B
        gbc.setState(0x9cd7, 0x15f5, 0xa5c0, 0x307a, 0xd46b, 0x3be3, 0x0, 0x1);
        gbc.writeMem(0x9cd7, { 0x1d });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x15f5, gbc.sp());
        EXPECT(0x9cd8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1d, gbc.readMem(0x9cd7));
        // 1D 021C
        gbc.setState(0x6515, 0xcfc3, 0x2e70, 0x2106, 0x6aa9, 0xe908, 0x0, 0x0);
        gbc.writeMem(0x6515, { 0x1d });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0xcfc3, gbc.sp());
        EXPECT(0x6516, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 1D 021D
        gbc.setState(0xe18b, 0x463a, 0x4d50, 0x5789, 0xac47, 0x7460, 0x0, 0x0);
        gbc.writeMem(0xe18b, { 0x1d });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x463a, gbc.sp());
        EXPECT(0xe18c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1d, gbc.readMem(0xe18b));
        // 1D 021E
        gbc.setState(0x2c19, 0xc76a, 0xd780, 0x4869, 0xdeab, 0x318b, 0x1, 0x1);
        gbc.writeMem(0x2c19, { 0x1d });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0xc76a, gbc.sp());
        EXPECT(0x2c1a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 1D 021F
        gbc.setState(0x45d, 0xe539, 0xf080, 0x836f, 0x619, 0x3d38, 0x1, 0x0);
        gbc.writeMem(0x45d, { 0x1d });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0xe539, gbc.sp());
        EXPECT(0x45e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 1D 0220
        gbc.setState(0x3e26, 0x6b6c, 0x73b0, 0xb250, 0xe57e, 0xa9eb, 0x0, 0x0);
        gbc.writeMem(0x3e26, { 0x1d });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x6b6c, gbc.sp());
        EXPECT(0x3e27, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 1D 0221
        gbc.setState(0x1460, 0x604a, 0x76c0, 0xd8f8, 0x4db0, 0x161c, 0x0, 0x1);
        gbc.writeMem(0x1460, { 0x1d });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x604a, gbc.sp());
        EXPECT(0x1461, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 1D 0222
        gbc.setState(0xeb22, 0x1c73, 0xe430, 0xdcd4, 0x1122, 0x7888, 0x1, 0x0);
        gbc.writeMem(0xeb22, { 0x1d });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x1c73, gbc.sp());
        EXPECT(0xeb23, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1d, gbc.readMem(0xeb22));
        // 1D 0223
        gbc.setState(0xe33a, 0x930e, 0x2530, 0x546, 0xb0a4, 0xdb20, 0x0, 0x0);
        gbc.writeMem(0xe33a, { 0x1d });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x930e, gbc.sp());
        EXPECT(0xe33b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1d, gbc.readMem(0xe33a));
        // 1D 0224
        gbc.setState(0xe2ca, 0x9620, 0xe7c0, 0x52c8, 0xc7aa, 0x2631, 0x0, 0x0);
        gbc.writeMem(0xe2ca, { 0x1d });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x9620, gbc.sp());
        EXPECT(0xe2cb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1d, gbc.readMem(0xe2ca));
        // 1D 0225
        gbc.setState(0x5ae4, 0x8254, 0x6e0, 0x6d7, 0xb16c, 0x4cb7, 0x0, 0x0);
        gbc.writeMem(0x5ae4, { 0x1d });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x8254, gbc.sp());
        EXPECT(0x5ae5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 1D 0226
        gbc.setState(0xb961, 0xf91, 0x110, 0x2796, 0x4584, 0x25cb, 0x1, 0x0);
        gbc.writeMem(0xb961, { 0x1d });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0xf91, gbc.sp());
        EXPECT(0xb962, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1d, gbc.readMem(0xb961));
        // 1D 0227
        gbc.setState(0xef8f, 0x9ff3, 0x18f0, 0x2ded, 0x6809, 0xa05e, 0x0, 0x1);
        gbc.writeMem(0xef8f, { 0x1d });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x9ff3, gbc.sp());
        EXPECT(0xef90, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1d, gbc.readMem(0xef8f));
        // 1D 0228
        gbc.setState(0x50c3, 0x4cfa, 0x14a0, 0x2d8b, 0xcdb7, 0x34f9, 0x1, 0x1);
        gbc.writeMem(0x50c3, { 0x1d });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x4cfa, gbc.sp());
        EXPECT(0x50c4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 1D 0229
        gbc.setState(0x831, 0x3b57, 0x8260, 0xf822, 0xe472, 0x829b, 0x1, 0x0);
        gbc.writeMem(0x831, { 0x1d });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x3b57, gbc.sp());
        EXPECT(0x832, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 1D 022A
        gbc.setState(0x1b6a, 0xc619, 0x3540, 0x6f4d, 0x5416, 0x7f65, 0x0, 0x0);
        gbc.writeMem(0x1b6a, { 0x1d });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0xc619, gbc.sp());
        EXPECT(0x1b6b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 1D 022B
        gbc.setState(0x86d4, 0x500f, 0x77a0, 0x6444, 0xb381, 0x4ecd, 0x1, 0x0);
        gbc.writeMem(0x86d4, { 0x1d });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x500f, gbc.sp());
        EXPECT(0x86d5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1d, gbc.readMem(0x86d4));
        // 1D 022C
        gbc.setState(0xb765, 0xa21a, 0x5f60, 0xf978, 0x6185, 0x8284, 0x1, 0x1);
        gbc.writeMem(0xb765, { 0x1d });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0xa21a, gbc.sp());
        EXPECT(0xb766, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1d, gbc.readMem(0xb765));
        // 1D 022D
        gbc.setState(0xd7c, 0x3e4a, 0x1db0, 0xc704, 0xd222, 0xa9cf, 0x0, 0x0);
        gbc.writeMem(0xd7c, { 0x1d });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x3e4a, gbc.sp());
        EXPECT(0xd7d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 1D 022E
        gbc.setState(0x415d, 0xb92e, 0x9dd0, 0x477e, 0x8e0a, 0x1326, 0x0, 0x0);
        gbc.writeMem(0x415d, { 0x1d });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0xb92e, gbc.sp());
        EXPECT(0x415e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 1D 022F
        gbc.setState(0xd575, 0x9827, 0x9900, 0x2552, 0x10ba, 0xed50, 0x1, 0x1);
        gbc.writeMem(0xd575, { 0x1d });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x9827, gbc.sp());
        EXPECT(0xd576, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1d, gbc.readMem(0xd575));
        // 1D 0230
        gbc.setState(0x30ac, 0xa6c0, 0x2050, 0x95ca, 0xd8e6, 0xfe3c, 0x0, 0x1);
        gbc.writeMem(0x30ac, { 0x1d });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0xa6c0, gbc.sp());
        EXPECT(0x30ad, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 1D 0231
        gbc.setState(0xe07, 0x60e0, 0xdd40, 0xc04e, 0xb5d4, 0x4caa, 0x0, 0x1);
        gbc.writeMem(0xe07, { 0x1d });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x60e0, gbc.sp());
        EXPECT(0xe08, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 1D 0232
        gbc.setState(0xa53d, 0x5d8c, 0xcd10, 0x5683, 0xab65, 0xe954, 0x1, 0x1);
        gbc.writeMem(0xa53d, { 0x1d });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x5d8c, gbc.sp());
        EXPECT(0xa53e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1d, gbc.readMem(0xa53d));
        // 1D 0234
        gbc.setState(0xba64, 0x8002, 0xb2a0, 0xb56c, 0x62c2, 0xb8bd, 0x1, 0x0);
        gbc.writeMem(0xba64, { 0x1d });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x8002, gbc.sp());
        EXPECT(0xba65, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1d, gbc.readMem(0xba64));
        // 1D 0235
        gbc.setState(0x85ba, 0xac05, 0x2a00, 0xa7d5, 0x9c59, 0x3416, 0x0, 0x1);
        gbc.writeMem(0x85ba, { 0x1d });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0xac05, gbc.sp());
        EXPECT(0x85bb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1d, gbc.readMem(0x85ba));
        // 1D 0236
        gbc.setState(0xeb00, 0xbcef, 0x2330, 0xd592, 0xecab, 0x18d2, 0x1, 0x1);
        gbc.writeMem(0xeb00, { 0x1d });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0xbcef, gbc.sp());
        EXPECT(0xeb01, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1d, gbc.readMem(0xeb00));
        // 1D 0237
        gbc.setState(0x6287, 0xb871, 0x580, 0x3d62, 0x2d83, 0x6832, 0x0, 0x1);
        gbc.writeMem(0x6287, { 0x1d });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0xb871, gbc.sp());
        EXPECT(0x6288, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 1D 0238
        gbc.setState(0xd5ab, 0x819a, 0x8eb0, 0xa5a0, 0x1a08, 0x7176, 0x0, 0x1);
        gbc.writeMem(0xd5ab, { 0x1d });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x819a, gbc.sp());
        EXPECT(0xd5ac, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1d, gbc.readMem(0xd5ab));
        // 1D 0239
        gbc.setState(0x1161, 0x925b, 0x8c90, 0x29fe, 0xe810, 0x5b9d, 0x0, 0x1);
        gbc.writeMem(0x1161, { 0x1d });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x925b, gbc.sp());
        EXPECT(0x1162, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 1D 023A
        gbc.setState(0x784c, 0xdef6, 0xfb20, 0xc9ce, 0x533, 0x8b54, 0x0, 0x0);
        gbc.writeMem(0x784c, { 0x1d });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0xdef6, gbc.sp());
        EXPECT(0x784d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 1D 023B
        gbc.setState(0x9611, 0xea53, 0x53b0, 0xbb8d, 0x2b80, 0xe11c, 0x1, 0x1);
        gbc.writeMem(0x9611, { 0x1d });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0xea53, gbc.sp());
        EXPECT(0x9612, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1d, gbc.readMem(0x9611));
        // 1D 023C
        gbc.setState(0x43af, 0xa308, 0x9530, 0x4a5c, 0xbae, 0x93ae, 0x1, 0x0);
        gbc.writeMem(0x43af, { 0x1d });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0xa308, gbc.sp());
        EXPECT(0x43b0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 1D 023D
        gbc.setState(0x9fc9, 0xc097, 0x3750, 0x46b5, 0x7bc4, 0xbb46, 0x1, 0x0);
        gbc.writeMem(0x9fc9, { 0x1d });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0xc097, gbc.sp());
        EXPECT(0x9fca, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1d, gbc.readMem(0x9fc9));
        // 1D 023E
        gbc.setState(0x211f, 0x15fa, 0xcd40, 0x94e3, 0x3876, 0xf229, 0x0, 0x0);
        gbc.writeMem(0x211f, { 0x1d });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x15fa, gbc.sp());
        EXPECT(0x2120, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 1D 023F
        gbc.setState(0xcf2f, 0xa998, 0xe590, 0xcae8, 0x812e, 0x3802, 0x0, 0x1);
        gbc.writeMem(0xcf2f, { 0x1d });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0xa998, gbc.sp());
        EXPECT(0xcf30, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1d, gbc.readMem(0xcf2f));
        // 1D 0240
        gbc.setState(0x6e26, 0xe90a, 0xaa90, 0x4348, 0xeb67, 0x2b56, 0x1, 0x0);
        gbc.writeMem(0x6e26, { 0x1d });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0xe90a, gbc.sp());
        EXPECT(0x6e27, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 1D 0241
        gbc.setState(0xd5af, 0x2a37, 0x3a70, 0xa2df, 0xb84e, 0x53d3, 0x1, 0x1);
        gbc.writeMem(0xd5af, { 0x1d });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x2a37, gbc.sp());
        EXPECT(0xd5b0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1d, gbc.readMem(0xd5af));
        // 1D 0242
        gbc.setState(0x21bf, 0x8b6d, 0xa8d0, 0x78c4, 0x4f17, 0x6e41, 0x0, 0x1);
        gbc.writeMem(0x21bf, { 0x1d });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x8b6d, gbc.sp());
        EXPECT(0x21c0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 1D 0243
        gbc.setState(0xb17f, 0xd333, 0x10d0, 0x5210, 0x25, 0xd4ac, 0x1, 0x0);
        gbc.writeMem(0xb17f, { 0x1d });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0xd333, gbc.sp());
        EXPECT(0xb180, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1d, gbc.readMem(0xb17f));
        // 1D 0244
        gbc.setState(0xaef5, 0x9883, 0xe700, 0x887c, 0x4880, 0xff61, 0x1, 0x1);
        gbc.writeMem(0xaef5, { 0x1d });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x9883, gbc.sp());
        EXPECT(0xaef6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1d, gbc.readMem(0xaef5));
        // 1D 0245
        gbc.setState(0xe439, 0xa9c3, 0xc6b0, 0xe83f, 0x8fd, 0x988a, 0x0, 0x0);
        gbc.writeMem(0xe439, { 0x1d });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0xa9c3, gbc.sp());
        EXPECT(0xe43a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1d, gbc.readMem(0xe439));
        // 1D 0246
        gbc.setState(0x9fdc, 0x93a3, 0x6190, 0x49e0, 0x430f, 0xe0a4, 0x1, 0x1);
        gbc.writeMem(0x9fdc, { 0x1d });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x93a3, gbc.sp());
        EXPECT(0x9fdd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1d, gbc.readMem(0x9fdc));
        // 1D 0247
        gbc.setState(0x2957, 0xc8f6, 0xf300, 0xf349, 0x81f0, 0xc28e, 0x1, 0x0);
        gbc.writeMem(0x2957, { 0x1d });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0xc8f6, gbc.sp());
        EXPECT(0x2958, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 1D 0248
        gbc.setState(0x27e8, 0x37f8, 0x7e50, 0xf084, 0x8812, 0x2bfc, 0x1, 0x0);
        gbc.writeMem(0x27e8, { 0x1d });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x37f8, gbc.sp());
        EXPECT(0x27e9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 1D 0249
        gbc.setState(0x1b68, 0xebe3, 0xb7a0, 0xa57f, 0x33c2, 0xb918, 0x0, 0x1);
        gbc.writeMem(0x1b68, { 0x1d });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0xebe3, gbc.sp());
        EXPECT(0x1b69, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 1D 024A
        gbc.setState(0x484f, 0x4736, 0xdf40, 0x7444, 0x327a, 0x10a0, 0x0, 0x0);
        gbc.writeMem(0x484f, { 0x1d });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x4736, gbc.sp());
        EXPECT(0x4850, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 1D 024B
        gbc.setState(0x342f, 0xc2fa, 0x6530, 0xd8d0, 0x5440, 0xb4b, 0x0, 0x1);
        gbc.writeMem(0x342f, { 0x1d });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0xc2fa, gbc.sp());
        EXPECT(0x3430, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 1D 024C
        gbc.setState(0x68af, 0x5e6d, 0xef10, 0xe259, 0x76eb, 0x83c0, 0x1, 0x1);
        gbc.writeMem(0x68af, { 0x1d });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x5e6d, gbc.sp());
        EXPECT(0x68b0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 1D 024E
        gbc.setState(0x5ba7, 0xf598, 0xcd70, 0x510, 0xc056, 0x9052, 0x0, 0x1);
        gbc.writeMem(0x5ba7, { 0x1d });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0xf598, gbc.sp());
        EXPECT(0x5ba8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 1D 024F
        gbc.setState(0x8b53, 0xfeea, 0xf960, 0xa599, 0x5777, 0x2f35, 0x0, 0x0);
        gbc.writeMem(0x8b53, { 0x1d });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0xfeea, gbc.sp());
        EXPECT(0x8b54, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1d, gbc.readMem(0x8b53));
        // 1D 0250
        gbc.setState(0xc4d9, 0x834b, 0x43f0, 0x30f8, 0xce2a, 0x4555, 0x0, 0x1);
        gbc.writeMem(0xc4d9, { 0x1d });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x834b, gbc.sp());
        EXPECT(0xc4da, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1d, gbc.readMem(0xc4d9));
        // 1D 0251
        gbc.setState(0xaec4, 0xc76f, 0xb4e0, 0x7441, 0x4746, 0x3ae4, 0x0, 0x1);
        gbc.writeMem(0xaec4, { 0x1d });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0xc76f, gbc.sp());
        EXPECT(0xaec5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1d, gbc.readMem(0xaec4));
        // 1D 0252
        gbc.setState(0xee9c, 0xe5ca, 0xe040, 0x7a46, 0x5cb8, 0x99f2, 0x0, 0x0);
        gbc.writeMem(0xee9c, { 0x1d });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0xe5ca, gbc.sp());
        EXPECT(0xee9d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1d, gbc.readMem(0xee9c));
        // 1D 0253
        gbc.setState(0xbc0, 0x3426, 0xe410, 0x448, 0xcf94, 0xaaf8, 0x1, 0x0);
        gbc.writeMem(0xbc0, { 0x1d });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x3426, gbc.sp());
        EXPECT(0xbc1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 1D 0254
        gbc.setState(0xd4e4, 0x6f3c, 0x3a60, 0x5a8c, 0x75e5, 0xcdac, 0x0, 0x0);
        gbc.writeMem(0xd4e4, { 0x1d });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x6f3c, gbc.sp());
        EXPECT(0xd4e5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1d, gbc.readMem(0xd4e4));
        // 1D 0255
        gbc.setState(0xb11b, 0xcdf3, 0x4650, 0x5a9f, 0xa9b8, 0xa735, 0x0, 0x0);
        gbc.writeMem(0xb11b, { 0x1d });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0xcdf3, gbc.sp());
        EXPECT(0xb11c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1d, gbc.readMem(0xb11b));
        // 1D 0256
        gbc.setState(0xb677, 0x30a3, 0xa580, 0x3be3, 0x79a7, 0xd1e8, 0x1, 0x0);
        gbc.writeMem(0xb677, { 0x1d });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x30a3, gbc.sp());
        EXPECT(0xb678, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1d, gbc.readMem(0xb677));
        // 1D 0257
        gbc.setState(0x7e36, 0x7b2, 0xf2f0, 0xe4f6, 0x6402, 0x7fe4, 0x1, 0x0);
        gbc.writeMem(0x7e36, { 0x1d });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x7b2, gbc.sp());
        EXPECT(0x7e37, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 1D 0258
        gbc.setState(0x2c71, 0xc302, 0x96d0, 0xdd39, 0xb86b, 0x95ae, 0x0, 0x1);
        gbc.writeMem(0x2c71, { 0x1d });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0xc302, gbc.sp());
        EXPECT(0x2c72, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 1D 0259
        gbc.setState(0x98a2, 0x1dde, 0x9470, 0xf282, 0x30be, 0x436d, 0x0, 0x1);
        gbc.writeMem(0x98a2, { 0x1d });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x1dde, gbc.sp());
        EXPECT(0x98a3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1d, gbc.readMem(0x98a2));
        // 1D 025A
        gbc.setState(0x6df1, 0x427a, 0x8eb0, 0xd2c2, 0x5330, 0xa6a2, 0x1, 0x1);
        gbc.writeMem(0x6df1, { 0x1d });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x427a, gbc.sp());
        EXPECT(0x6df2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 1D 025B
        gbc.setState(0x5b49, 0xa00b, 0x4aa0, 0x5c3c, 0x5ca9, 0x82e7, 0x1, 0x1);
        gbc.writeMem(0x5b49, { 0x1d });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0xa00b, gbc.sp());
        EXPECT(0x5b4a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 1D 025C
        gbc.setState(0xd281, 0x5bf1, 0xe0f0, 0x3352, 0x2367, 0xdece, 0x0, 0x0);
        gbc.writeMem(0xd281, { 0x1d });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x5bf1, gbc.sp());
        EXPECT(0xd282, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1d, gbc.readMem(0xd281));
        // 1D 025D
        gbc.setState(0xb82a, 0xbaae, 0x5f10, 0x4503, 0xf455, 0x83d1, 0x0, 0x0);
        gbc.writeMem(0xb82a, { 0x1d });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0xbaae, gbc.sp());
        EXPECT(0xb82b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1d, gbc.readMem(0xb82a));
        // 1D 025E
        gbc.setState(0x87ef, 0xc7a2, 0x9780, 0xffdd, 0x62ee, 0xf7b5, 0x0, 0x1);
        gbc.writeMem(0x87ef, { 0x1d });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0xc7a2, gbc.sp());
        EXPECT(0x87f0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1d, gbc.readMem(0x87ef));
        // 1D 025F
        gbc.setState(0x33b3, 0x7992, 0x3310, 0x7049, 0x9ab0, 0xa8ca, 0x1, 0x1);
        gbc.writeMem(0x33b3, { 0x1d });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x7992, gbc.sp());
        EXPECT(0x33b4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 1D 0260
        gbc.setState(0x9dd8, 0xe8b1, 0x58d0, 0xfc8a, 0x8f90, 0xdc86, 0x0, 0x1);
        gbc.writeMem(0x9dd8, { 0x1d });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0xe8b1, gbc.sp());
        EXPECT(0x9dd9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1d, gbc.readMem(0x9dd8));
        // 1D 0262
        gbc.setState(0xe2b1, 0x2c21, 0xa6c0, 0xd4e6, 0xf07e, 0x7388, 0x0, 0x0);
        gbc.writeMem(0xe2b1, { 0x1d });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x2c21, gbc.sp());
        EXPECT(0xe2b2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1d, gbc.readMem(0xe2b1));
        // 1D 0263
        gbc.setState(0x6424, 0x6306, 0x2520, 0x5522, 0xa96b, 0x5bee, 0x0, 0x0);
        gbc.writeMem(0x6424, { 0x1d });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x6306, gbc.sp());
        EXPECT(0x6425, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 1D 0264
        gbc.setState(0xbab8, 0xc651, 0x6d00, 0xaa4, 0x6e87, 0xf30d, 0x1, 0x0);
        gbc.writeMem(0xbab8, { 0x1d });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0xc651, gbc.sp());
        EXPECT(0xbab9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1d, gbc.readMem(0xbab8));
        // 1D 0265
        gbc.setState(0x16db, 0x7ffb, 0x3a0, 0x12d3, 0x21be, 0x6d70, 0x0, 0x1);
        gbc.writeMem(0x16db, { 0x1d });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x7ffb, gbc.sp());
        EXPECT(0x16dc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 1D 0266
        gbc.setState(0xd62b, 0x3525, 0xaac0, 0x57e6, 0x9b5d, 0x3599, 0x0, 0x1);
        gbc.writeMem(0xd62b, { 0x1d });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x3525, gbc.sp());
        EXPECT(0xd62c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1d, gbc.readMem(0xd62b));
        // 1D 0267
        gbc.setState(0xe434, 0xe5fe, 0x1a90, 0xb9bb, 0x4570, 0x7023, 0x1, 0x0);
        gbc.writeMem(0xe434, { 0x1d });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0xe5fe, gbc.sp());
        EXPECT(0xe435, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1d, gbc.readMem(0xe434));
        // 1D 0268
        gbc.setState(0x646a, 0x884e, 0xa5e0, 0x5b8a, 0x81e, 0xa401, 0x1, 0x0);
        gbc.writeMem(0x646a, { 0x1d });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x884e, gbc.sp());
        EXPECT(0x646b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 1D 0269
        gbc.setState(0xc1c1, 0x625, 0x4ac0, 0x379b, 0x1fa6, 0x7ef5, 0x0, 0x1);
        gbc.writeMem(0xc1c1, { 0x1d });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x625, gbc.sp());
        EXPECT(0xc1c2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1d, gbc.readMem(0xc1c1));
        // 1D 026A
        gbc.setState(0x9f1f, 0x96b9, 0x1440, 0x69b3, 0xc523, 0x664b, 0x0, 0x1);
        gbc.writeMem(0x9f1f, { 0x1d });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x96b9, gbc.sp());
        EXPECT(0x9f20, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1d, gbc.readMem(0x9f1f));
        // 1D 026B
        gbc.setState(0x53c0, 0x5c55, 0x8560, 0x546f, 0x1441, 0xa86a, 0x1, 0x0);
        gbc.writeMem(0x53c0, { 0x1d });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x5c55, gbc.sp());
        EXPECT(0x53c1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 1D 026C
        gbc.setState(0x8db4, 0x7692, 0xd980, 0x7381, 0x3bf7, 0x5930, 0x0, 0x1);
        gbc.writeMem(0x8db4, { 0x1d });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x7692, gbc.sp());
        EXPECT(0x8db5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1d, gbc.readMem(0x8db4));
        // 1D 026D
        gbc.setState(0x912b, 0xb209, 0xb330, 0xaff0, 0x4f04, 0x93f0, 0x0, 0x0);
        gbc.writeMem(0x912b, { 0x1d });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0xb209, gbc.sp());
        EXPECT(0x912c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1d, gbc.readMem(0x912b));
        // 1D 026E
        gbc.setState(0x2b0b, 0x156, 0x8fc0, 0x9bdc, 0x9a95, 0xe616, 0x0, 0x1);
        gbc.writeMem(0x2b0b, { 0x1d });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x156, gbc.sp());
        EXPECT(0x2b0c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 1D 026F
        gbc.setState(0x1190, 0x4256, 0x5760, 0x804f, 0x4842, 0xd8d7, 0x0, 0x0);
        gbc.writeMem(0x1190, { 0x1d });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0x4256, gbc.sp());
        EXPECT(0x1191, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 1D 0270
        gbc.setState(0xd6c6, 0x528e, 0xc530, 0x6de5, 0x3b3a, 0xaf90, 0x1, 0x0);
        gbc.writeMem(0xd6c6, { 0x1d });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x528e, gbc.sp());
        EXPECT(0xd6c7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1d, gbc.readMem(0xd6c6));
        // 1D 0271
        gbc.setState(0xdb09, 0xfe1c, 0x2790, 0xe6e8, 0x4d87, 0x3638, 0x0, 0x1);
        gbc.writeMem(0xdb09, { 0x1d });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0xfe1c, gbc.sp());
        EXPECT(0xdb0a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1d, gbc.readMem(0xdb09));
        // 1D 0273
        gbc.setState(0xae90, 0xab25, 0x3ac0, 0xf103, 0xf2c6, 0x10c9, 0x0, 0x1);
        gbc.writeMem(0xae90, { 0x1d });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0xab25, gbc.sp());
        EXPECT(0xae91, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1d, gbc.readMem(0xae90));
        // 1D 0274
        gbc.setState(0x8a44, 0x90ca, 0xe530, 0xa493, 0xfff1, 0x6b44, 0x0, 0x1);
        gbc.writeMem(0x8a44, { 0x1d });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x90ca, gbc.sp());
        EXPECT(0x8a45, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1d, gbc.readMem(0x8a44));
        // 1D 0275
        gbc.setState(0x5a8, 0xb9e3, 0x5160, 0xc9d5, 0x5c90, 0x354, 0x1, 0x1);
        gbc.writeMem(0x5a8, { 0x1d });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0xb9e3, gbc.sp());
        EXPECT(0x5a9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 1D 0276
        gbc.setState(0x68d6, 0x5de6, 0xdc60, 0xa1e7, 0x3620, 0xf866, 0x1, 0x1);
        gbc.writeMem(0x68d6, { 0x1d });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x5de6, gbc.sp());
        EXPECT(0x68d7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 1D 0277
        gbc.setState(0x74bd, 0x6abf, 0xe5f0, 0x6d2f, 0xf8d7, 0x2a1d, 0x1, 0x0);
        gbc.writeMem(0x74bd, { 0x1d });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x6abf, gbc.sp());
        EXPECT(0x74be, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 1D 0278
        gbc.setState(0x87c4, 0xf285, 0x1ab0, 0xbc54, 0xe453, 0x605, 0x0, 0x0);
        gbc.writeMem(0x87c4, { 0x1d });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0xf285, gbc.sp());
        EXPECT(0x87c5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1d, gbc.readMem(0x87c4));
        // 1D 0279
        gbc.setState(0x930c, 0x68e1, 0x7700, 0xf033, 0x530e, 0x8a51, 0x0, 0x1);
        gbc.writeMem(0x930c, { 0x1d });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x68e1, gbc.sp());
        EXPECT(0x930d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1d, gbc.readMem(0x930c));
        // 1D 027A
        gbc.setState(0x885e, 0x9385, 0xe610, 0x2e87, 0x8a6a, 0x712c, 0x1, 0x0);
        gbc.writeMem(0x885e, { 0x1d });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x9385, gbc.sp());
        EXPECT(0x885f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1d, gbc.readMem(0x885e));
        // 1D 027B
        gbc.setState(0x2ec0, 0xdc4e, 0xce10, 0x4518, 0xbec, 0x9a78, 0x0, 0x0);
        gbc.writeMem(0x2ec0, { 0x1d });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0xdc4e, gbc.sp());
        EXPECT(0x2ec1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 1D 027D
        gbc.setState(0x2426, 0x7899, 0xd640, 0x2ce4, 0xbdbb, 0x9cb1, 0x0, 0x0);
        gbc.writeMem(0x2426, { 0x1d });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x7899, gbc.sp());
        EXPECT(0x2427, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 1D 027E
        gbc.setState(0xb1cd, 0x29df, 0xa850, 0x146, 0x3132, 0x6716, 0x0, 0x0);
        gbc.writeMem(0xb1cd, { 0x1d });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x29df, gbc.sp());
        EXPECT(0xb1ce, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1d, gbc.readMem(0xb1cd));
        // 1D 027F
        gbc.setState(0x97da, 0x404c, 0x8ef0, 0x6ec4, 0x794f, 0x7a93, 0x1, 0x0);
        gbc.writeMem(0x97da, { 0x1d });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0x404c, gbc.sp());
        EXPECT(0x97db, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1d, gbc.readMem(0x97da));
        // 1D 0281
        gbc.setState(0x7c52, 0x3aff, 0x6850, 0x3003, 0xdb41, 0xffd7, 0x1, 0x0);
        gbc.writeMem(0x7c52, { 0x1d });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0x3aff, gbc.sp());
        EXPECT(0x7c53, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 1D 0282
        gbc.setState(0x79e2, 0x928e, 0x9b40, 0x1c1b, 0x806a, 0xb3ef, 0x1, 0x0);
        gbc.writeMem(0x79e2, { 0x1d });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x928e, gbc.sp());
        EXPECT(0x79e3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 1D 0283
        gbc.setState(0xd990, 0xc100, 0x8880, 0xc04e, 0x38c8, 0x98b5, 0x0, 0x1);
        gbc.writeMem(0xd990, { 0x1d });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0xc100, gbc.sp());
        EXPECT(0xd991, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1d, gbc.readMem(0xd990));
        // 1D 0284
        gbc.setState(0x32b3, 0x2091, 0x5e40, 0x6e9d, 0x3b00, 0xc62, 0x1, 0x0);
        gbc.writeMem(0x32b3, { 0x1d });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x2091, gbc.sp());
        EXPECT(0x32b4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 1D 0285
        gbc.setState(0xaea1, 0x64e9, 0xfb0, 0xd529, 0xbb45, 0xf65e, 0x0, 0x1);
        gbc.writeMem(0xaea1, { 0x1d });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x64e9, gbc.sp());
        EXPECT(0xaea2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1d, gbc.readMem(0xaea1));
        // 1D 0286
        gbc.setState(0x5a8, 0x8e9b, 0xbac0, 0xfa5e, 0x7450, 0x5209, 0x0, 0x1);
        gbc.writeMem(0x5a8, { 0x1d });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x8e9b, gbc.sp());
        EXPECT(0x5a9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 1D 0287
        gbc.setState(0xae06, 0x3f19, 0x5110, 0x4e28, 0x8535, 0x15f0, 0x1, 0x0);
        gbc.writeMem(0xae06, { 0x1d });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x3f19, gbc.sp());
        EXPECT(0xae07, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1d, gbc.readMem(0xae06));
        // 1D 0288
        gbc.setState(0x39d1, 0x970e, 0x4d80, 0xacc7, 0x87f, 0x7ce8, 0x0, 0x1);
        gbc.writeMem(0x39d1, { 0x1d });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x970e, gbc.sp());
        EXPECT(0x39d2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 1D 0289
        gbc.setState(0xeb4c, 0x2ebc, 0xbdd0, 0x68db, 0x3a3e, 0xc8af, 0x1, 0x0);
        gbc.writeMem(0xeb4c, { 0x1d });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x2ebc, gbc.sp());
        EXPECT(0xeb4d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1d, gbc.readMem(0xeb4c));
        // 1D 028A
        gbc.setState(0xd191, 0x7759, 0x1160, 0x9c69, 0x8bf9, 0x993d, 0x0, 0x0);
        gbc.writeMem(0xd191, { 0x1d });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x7759, gbc.sp());
        EXPECT(0xd192, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1d, gbc.readMem(0xd191));
        // 1D 028B
        gbc.setState(0xdcfc, 0xe376, 0x1530, 0x6fb4, 0xe38b, 0xaa43, 0x0, 0x1);
        gbc.writeMem(0xdcfc, { 0x1d });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0xe376, gbc.sp());
        EXPECT(0xdcfd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1d, gbc.readMem(0xdcfc));
        // 1D 028E
        gbc.setState(0x1505, 0xe16e, 0x91d0, 0xc420, 0x7aef, 0x9aa0, 0x0, 0x1);
        gbc.writeMem(0x1505, { 0x1d });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0xe16e, gbc.sp());
        EXPECT(0x1506, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 1D 028F
        gbc.setState(0xa7b4, 0x4dc0, 0xb9d0, 0x204d, 0x273a, 0x98fe, 0x1, 0x0);
        gbc.writeMem(0xa7b4, { 0x1d });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x4dc0, gbc.sp());
        EXPECT(0xa7b5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1d, gbc.readMem(0xa7b4));
        // 1D 0290
        gbc.setState(0x7cf1, 0x1472, 0x4ac0, 0xb063, 0x2d35, 0x8b17, 0x0, 0x0);
        gbc.writeMem(0x7cf1, { 0x1d });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x1472, gbc.sp());
        EXPECT(0x7cf2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 1D 0291
        gbc.setState(0x1390, 0x8a32, 0x7ca0, 0xb64f, 0xe823, 0x9253, 0x1, 0x0);
        gbc.writeMem(0x1390, { 0x1d });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x8a32, gbc.sp());
        EXPECT(0x1391, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 1D 0292
        gbc.setState(0x6bea, 0x640a, 0xb8c0, 0x363d, 0x5957, 0x33f7, 0x1, 0x1);
        gbc.writeMem(0x6bea, { 0x1d });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x640a, gbc.sp());
        EXPECT(0x6beb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 1D 0293
        gbc.setState(0xd455, 0x20b3, 0x2fe0, 0xadd, 0xa05b, 0x5eb7, 0x1, 0x0);
        gbc.writeMem(0xd455, { 0x1d });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x20b3, gbc.sp());
        EXPECT(0xd456, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1d, gbc.readMem(0xd455));
        // 1D 0294
        gbc.setState(0xa336, 0xf4ea, 0x26b0, 0x7ae0, 0x39db, 0xbc9d, 0x1, 0x1);
        gbc.writeMem(0xa336, { 0x1d });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0xf4ea, gbc.sp());
        EXPECT(0xa337, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1d, gbc.readMem(0xa336));
        // 1D 0295
        gbc.setState(0xd299, 0xa74d, 0x2d00, 0x1c05, 0x8eeb, 0x71d8, 0x1, 0x0);
        gbc.writeMem(0xd299, { 0x1d });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0xa74d, gbc.sp());
        EXPECT(0xd29a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1d, gbc.readMem(0xd299));
        // 1D 0296
        gbc.setState(0xda8a, 0xc659, 0xdd80, 0x21df, 0x88cd, 0x23b2, 0x0, 0x0);
        gbc.writeMem(0xda8a, { 0x1d });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0xc659, gbc.sp());
        EXPECT(0xda8b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1d, gbc.readMem(0xda8a));
        // 1D 0297
        gbc.setState(0xaa15, 0x4d5f, 0xa280, 0xee82, 0xfd89, 0x49d5, 0x0, 0x0);
        gbc.writeMem(0xaa15, { 0x1d });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x4d5f, gbc.sp());
        EXPECT(0xaa16, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1d, gbc.readMem(0xaa15));
        // 1D 0298
        gbc.setState(0x5140, 0x5ed0, 0xc120, 0x7632, 0xb093, 0x44be, 0x0, 0x1);
        gbc.writeMem(0x5140, { 0x1d });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0x5ed0, gbc.sp());
        EXPECT(0x5141, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 1D 0299
        gbc.setState(0xaef7, 0xb3a2, 0xf40, 0xb066, 0x9ece, 0x4b76, 0x0, 0x1);
        gbc.writeMem(0xaef7, { 0x1d });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0xb3a2, gbc.sp());
        EXPECT(0xaef8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1d, gbc.readMem(0xaef7));
        // 1D 029A
        gbc.setState(0xa3e8, 0xd559, 0xe4a0, 0x17e, 0x48f6, 0x29b8, 0x0, 0x1);
        gbc.writeMem(0xa3e8, { 0x1d });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0xd559, gbc.sp());
        EXPECT(0xa3e9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1d, gbc.readMem(0xa3e8));
        // 1D 029B
        gbc.setState(0xe5dd, 0x2d4b, 0x8b30, 0xbaf7, 0x2335, 0x9a8e, 0x0, 0x1);
        gbc.writeMem(0xe5dd, { 0x1d });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x2d4b, gbc.sp());
        EXPECT(0xe5de, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1d, gbc.readMem(0xe5dd));
        // 1D 029C
        gbc.setState(0x7ea5, 0xc308, 0xd920, 0x9a0d, 0xfba6, 0xe6b, 0x1, 0x0);
        gbc.writeMem(0x7ea5, { 0x1d });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0xc308, gbc.sp());
        EXPECT(0x7ea6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 1D 029D
        gbc.setState(0x1605, 0x382, 0xeba0, 0x61fc, 0x2ee1, 0x3ecf, 0x0, 0x0);
        gbc.writeMem(0x1605, { 0x1d });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x382, gbc.sp());
        EXPECT(0x1606, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 1D 029F
        gbc.setState(0xcfd9, 0x8fd7, 0x80a0, 0xdee6, 0x5364, 0x24f5, 0x1, 0x0);
        gbc.writeMem(0xcfd9, { 0x1d });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x8fd7, gbc.sp());
        EXPECT(0xcfda, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1d, gbc.readMem(0xcfd9));
        // 1D 02A0
        gbc.setState(0x8123, 0xdafb, 0xdbf0, 0xb466, 0xa9d3, 0xb1e, 0x0, 0x1);
        gbc.writeMem(0x8123, { 0x1d });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0xdafb, gbc.sp());
        EXPECT(0x8124, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1d, gbc.readMem(0x8123));
        // 1D 02A1
        gbc.setState(0xe80e, 0xfb1f, 0x9e90, 0xb3a4, 0x4363, 0x311a, 0x0, 0x1);
        gbc.writeMem(0xe80e, { 0x1d });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0xfb1f, gbc.sp());
        EXPECT(0xe80f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1d, gbc.readMem(0xe80e));
        // 1D 02A2
        gbc.setState(0xaa62, 0x9327, 0xd780, 0x218b, 0x262, 0x731, 0x0, 0x0);
        gbc.writeMem(0xaa62, { 0x1d });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x9327, gbc.sp());
        EXPECT(0xaa63, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1d, gbc.readMem(0xaa62));
        // 1D 02A3
        gbc.setState(0x836, 0x30a9, 0x1ff0, 0x61b4, 0xcea4, 0x4727, 0x0, 0x1);
        gbc.writeMem(0x836, { 0x1d });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x30a9, gbc.sp());
        EXPECT(0x837, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 1D 02A4
        gbc.setState(0xb2a9, 0x8ed8, 0xd8c0, 0xd72b, 0x6ec7, 0x2e51, 0x1, 0x1);
        gbc.writeMem(0xb2a9, { 0x1d });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x8ed8, gbc.sp());
        EXPECT(0xb2aa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1d, gbc.readMem(0xb2a9));
        // 1D 02A5
        gbc.setState(0x471e, 0x7e10, 0xc180, 0xa7ff, 0x66aa, 0x1c70, 0x0, 0x0);
        gbc.writeMem(0x471e, { 0x1d });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x7e10, gbc.sp());
        EXPECT(0x471f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 1D 02A6
        gbc.setState(0xb088, 0xd648, 0x5e30, 0x1f0f, 0x1966, 0xd8a, 0x0, 0x1);
        gbc.writeMem(0xb088, { 0x1d });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0xd648, gbc.sp());
        EXPECT(0xb089, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1d, gbc.readMem(0xb088));
        // 1D 02A7
        gbc.setState(0x8407, 0x9837, 0x28e0, 0x1f7d, 0x8d87, 0x3010, 0x0, 0x1);
        gbc.writeMem(0x8407, { 0x1d });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x9837, gbc.sp());
        EXPECT(0x8408, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1d, gbc.readMem(0x8407));
        // 1D 02A8
        gbc.setState(0xd54d, 0x878a, 0x3450, 0xd3a9, 0x8787, 0xaf89, 0x1, 0x0);
        gbc.writeMem(0xd54d, { 0x1d });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x878a, gbc.sp());
        EXPECT(0xd54e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1d, gbc.readMem(0xd54d));
        // 1D 02A9
        gbc.setState(0xee83, 0xff07, 0xf800, 0x1680, 0xc9b9, 0xc9d3, 0x1, 0x0);
        gbc.writeMem(0xee83, { 0x1d });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0xff07, gbc.sp());
        EXPECT(0xee84, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1d, gbc.readMem(0xee83));
        // 1D 02AA
        gbc.setState(0x84e2, 0xae4b, 0xce20, 0x5ac8, 0xa11d, 0x87d7, 0x1, 0x0);
        gbc.writeMem(0x84e2, { 0x1d });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0xae4b, gbc.sp());
        EXPECT(0x84e3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1d, gbc.readMem(0x84e2));
        // 1D 02AB
        gbc.setState(0xca0f, 0xf0d9, 0x9820, 0x5e5a, 0xfe3a, 0xcede, 0x0, 0x1);
        gbc.writeMem(0xca0f, { 0x1d });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0xf0d9, gbc.sp());
        EXPECT(0xca10, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1d, gbc.readMem(0xca0f));
        // 1D 02AC
        gbc.setState(0xd436, 0x452f, 0x3340, 0x78c9, 0x7c0b, 0x28b1, 0x0, 0x1);
        gbc.writeMem(0xd436, { 0x1d });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x452f, gbc.sp());
        EXPECT(0xd437, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1d, gbc.readMem(0xd436));
        // 1D 02AD
        gbc.setState(0x13d3, 0xb287, 0x99f0, 0x2adc, 0x75ce, 0x286d, 0x1, 0x1);
        gbc.writeMem(0x13d3, { 0x1d });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0xb287, gbc.sp());
        EXPECT(0x13d4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 1D 02AE
        gbc.setState(0xc36d, 0x5f8a, 0xf030, 0xedb9, 0xd497, 0xd01b, 0x1, 0x0);
        gbc.writeMem(0xc36d, { 0x1d });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x5f8a, gbc.sp());
        EXPECT(0xc36e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1d, gbc.readMem(0xc36d));
        // 1D 02AF
        gbc.setState(0x544, 0x107d, 0xe960, 0x3a04, 0xdd77, 0xf944, 0x1, 0x1);
        gbc.writeMem(0x544, { 0x1d });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x107d, gbc.sp());
        EXPECT(0x545, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 1D 02B0
        gbc.setState(0xc9d1, 0x9501, 0xd3c0, 0x87a4, 0x26c9, 0xb659, 0x1, 0x0);
        gbc.writeMem(0xc9d1, { 0x1d });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x9501, gbc.sp());
        EXPECT(0xc9d2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1d, gbc.readMem(0xc9d1));
        // 1D 02B1
        gbc.setState(0x1475, 0x4975, 0xc400, 0x2add, 0x3fd2, 0xad3, 0x1, 0x1);
        gbc.writeMem(0x1475, { 0x1d });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x4975, gbc.sp());
        EXPECT(0x1476, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 1D 02B2
        gbc.setState(0x490, 0xa36e, 0xacd0, 0x71ec, 0x8a3e, 0xe5f9, 0x0, 0x1);
        gbc.writeMem(0x490, { 0x1d });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0xa36e, gbc.sp());
        EXPECT(0x491, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 1D 02B3
        gbc.setState(0x6b39, 0x5980, 0xdb30, 0x4bfe, 0x1e69, 0xe322, 0x1, 0x0);
        gbc.writeMem(0x6b39, { 0x1d });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x5980, gbc.sp());
        EXPECT(0x6b3a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 1D 02B5
        gbc.setState(0x2504, 0xa10d, 0xea20, 0xc1b9, 0xf85d, 0x9b2, 0x1, 0x0);
        gbc.writeMem(0x2504, { 0x1d });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0xa10d, gbc.sp());
        EXPECT(0x2505, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 1D 02B6
        gbc.setState(0x2551, 0xd129, 0xa030, 0x5866, 0xa40b, 0xb46c, 0x1, 0x1);
        gbc.writeMem(0x2551, { 0x1d });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0xd129, gbc.sp());
        EXPECT(0x2552, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 1D 02B7
        gbc.setState(0xdac9, 0x29ce, 0x7410, 0xd471, 0x41df, 0xd4f, 0x0, 0x1);
        gbc.writeMem(0xdac9, { 0x1d });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x29ce, gbc.sp());
        EXPECT(0xdaca, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1d, gbc.readMem(0xdac9));
        // 1D 02B9
        gbc.setState(0x7c16, 0xedcd, 0x850, 0x996a, 0x27ba, 0x25e8, 0x1, 0x0);
        gbc.writeMem(0x7c16, { 0x1d });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0xedcd, gbc.sp());
        EXPECT(0x7c17, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 1D 02BA
        gbc.setState(0xd636, 0xb5f0, 0xf7d0, 0xc262, 0xb7e3, 0x2027, 0x1, 0x1);
        gbc.writeMem(0xd636, { 0x1d });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0xb5f0, gbc.sp());
        EXPECT(0xd637, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1d, gbc.readMem(0xd636));
        // 1D 02BB
        gbc.setState(0x14b6, 0x613e, 0x5c00, 0xd408, 0x418c, 0xe115, 0x0, 0x1);
        gbc.writeMem(0x14b6, { 0x1d });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x613e, gbc.sp());
        EXPECT(0x14b7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 1D 02BC
        gbc.setState(0x5c9b, 0xa21, 0x17f0, 0xa728, 0xaa5d, 0x265e, 0x1, 0x0);
        gbc.writeMem(0x5c9b, { 0x1d });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0xa21, gbc.sp());
        EXPECT(0x5c9c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 1D 02BD
        gbc.setState(0xdb84, 0x2baf, 0x8410, 0x51a3, 0xbfc7, 0x8636, 0x0, 0x1);
        gbc.writeMem(0xdb84, { 0x1d });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x2baf, gbc.sp());
        EXPECT(0xdb85, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1d, gbc.readMem(0xdb84));
        // 1D 02BF
        gbc.setState(0x8ca3, 0xde8, 0x7000, 0x8b73, 0xbb4f, 0x543e, 0x1, 0x1);
        gbc.writeMem(0x8ca3, { 0x1d });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0xde8, gbc.sp());
        EXPECT(0x8ca4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1d, gbc.readMem(0x8ca3));
        // 1D 02C0
        gbc.setState(0xdaef, 0x9f88, 0xdaa0, 0x2c, 0xe48d, 0x9ad5, 0x1, 0x1);
        gbc.writeMem(0xdaef, { 0x1d });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x9f88, gbc.sp());
        EXPECT(0xdaf0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1d, gbc.readMem(0xdaef));
        // 1D 02C1
        gbc.setState(0xdf35, 0x5a67, 0xa920, 0x64c1, 0x1fdc, 0xf6e9, 0x0, 0x0);
        gbc.writeMem(0xdf35, { 0x1d });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x5a67, gbc.sp());
        EXPECT(0xdf36, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1d, gbc.readMem(0xdf35));
        // 1D 02C2
        gbc.setState(0x8611, 0xa755, 0xbf90, 0x9041, 0x39ec, 0xa886, 0x1, 0x0);
        gbc.writeMem(0x8611, { 0x1d });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0xa755, gbc.sp());
        EXPECT(0x8612, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1d, gbc.readMem(0x8611));
        // 1D 02C3
        gbc.setState(0xd96d, 0x651f, 0xe390, 0x7130, 0x92d8, 0x178, 0x0, 0x0);
        gbc.writeMem(0xd96d, { 0x1d });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x651f, gbc.sp());
        EXPECT(0xd96e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1d, gbc.readMem(0xd96d));
        // 1D 02C6
        gbc.setState(0x9329, 0x99df, 0xe580, 0x7194, 0x5b0b, 0x9401, 0x0, 0x0);
        gbc.writeMem(0x9329, { 0x1d });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x99df, gbc.sp());
        EXPECT(0x932a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1d, gbc.readMem(0x9329));
        // 1D 02C8
        gbc.setState(0x641a, 0x7dfe, 0x93a0, 0x4ce9, 0x530a, 0x9f91, 0x1, 0x1);
        gbc.writeMem(0x641a, { 0x1d });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x7dfe, gbc.sp());
        EXPECT(0x641b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 1D 02C9
        gbc.setState(0xcbd3, 0xa3c5, 0x2d70, 0x3c4a, 0xa5f, 0x746d, 0x1, 0x0);
        gbc.writeMem(0xcbd3, { 0x1d });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0xa3c5, gbc.sp());
        EXPECT(0xcbd4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1d, gbc.readMem(0xcbd3));
        // 1D 02CA
        gbc.setState(0x8d77, 0xaa9, 0xf920, 0xbcf4, 0xa587, 0x4495, 0x0, 0x0);
        gbc.writeMem(0x8d77, { 0x1d });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0xaa9, gbc.sp());
        EXPECT(0x8d78, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1d, gbc.readMem(0x8d77));
        // 1D 02CB
        gbc.setState(0xae05, 0xb75e, 0x4270, 0x8f5c, 0xad12, 0x8d7, 0x1, 0x1);
        gbc.writeMem(0xae05, { 0x1d });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0xb75e, gbc.sp());
        EXPECT(0xae06, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1d, gbc.readMem(0xae05));
        // 1D 02CC
        gbc.setState(0x98a0, 0xcef7, 0x93e0, 0xc64a, 0x2235, 0xf5c2, 0x1, 0x0);
        gbc.writeMem(0x98a0, { 0x1d });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0xcef7, gbc.sp());
        EXPECT(0x98a1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1d, gbc.readMem(0x98a0));
        // 1D 02CD
        gbc.setState(0x1f6a, 0x3b60, 0x6f00, 0xc7bc, 0x7490, 0x33fe, 0x0, 0x1);
        gbc.writeMem(0x1f6a, { 0x1d });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x3b60, gbc.sp());
        EXPECT(0x1f6b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 1D 02CE
        gbc.setState(0x83c1, 0x162d, 0x4d0, 0x9522, 0xa4a4, 0xcd88, 0x0, 0x1);
        gbc.writeMem(0x83c1, { 0x1d });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x162d, gbc.sp());
        EXPECT(0x83c2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1d, gbc.readMem(0x83c1));
        // 1D 02CF
        gbc.setState(0x13ca, 0xc7df, 0xb400, 0xb7e8, 0x23b8, 0x8fe3, 0x0, 0x1);
        gbc.writeMem(0x13ca, { 0x1d });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0xc7df, gbc.sp());
        EXPECT(0x13cb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 1D 02D0
        gbc.setState(0x6946, 0x90a7, 0x2ff0, 0x80b3, 0xc193, 0xf935, 0x0, 0x1);
        gbc.writeMem(0x6946, { 0x1d });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x90a7, gbc.sp());
        EXPECT(0x6947, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 1D 02D1
        gbc.setState(0x7c62, 0x6294, 0xb7b0, 0xd22, 0xb735, 0x60f4, 0x0, 0x1);
        gbc.writeMem(0x7c62, { 0x1d });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x6294, gbc.sp());
        EXPECT(0x7c63, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 1D 02D2
        gbc.setState(0x3473, 0x6e10, 0xa940, 0x53d3, 0x4633, 0x4658, 0x0, 0x1);
        gbc.writeMem(0x3473, { 0x1d });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x6e10, gbc.sp());
        EXPECT(0x3474, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 1D 02D3
        gbc.setState(0x77d3, 0x40d, 0x6660, 0x1f2f, 0x17e8, 0x9029, 0x0, 0x0);
        gbc.writeMem(0x77d3, { 0x1d });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x40d, gbc.sp());
        EXPECT(0x77d4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 1D 02D4
        gbc.setState(0x3c6, 0xc1dc, 0x8590, 0x9cec, 0xfadc, 0x4fb3, 0x0, 0x0);
        gbc.writeMem(0x3c6, { 0x1d });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0xc1dc, gbc.sp());
        EXPECT(0x3c7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 1D 02D5
        gbc.setState(0xd976, 0x72c, 0xbdf0, 0x5575, 0xd07, 0x513c, 0x0, 0x1);
        gbc.writeMem(0xd976, { 0x1d });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x72c, gbc.sp());
        EXPECT(0xd977, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1d, gbc.readMem(0xd976));
        // 1D 02D6
        gbc.setState(0x5cd3, 0xfa2b, 0x3c60, 0x388f, 0x7215, 0x4cbe, 0x1, 0x0);
        gbc.writeMem(0x5cd3, { 0x1d });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0xfa2b, gbc.sp());
        EXPECT(0x5cd4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 1D 02D7
        gbc.setState(0x4493, 0x5894, 0xb70, 0xa2d6, 0xe606, 0x1e38, 0x0, 0x1);
        gbc.writeMem(0x4493, { 0x1d });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x5894, gbc.sp());
        EXPECT(0x4494, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 1D 02D8
        gbc.setState(0xe2d8, 0xdc49, 0xf200, 0xcef7, 0x7b3d, 0x5533, 0x1, 0x0);
        gbc.writeMem(0xe2d8, { 0x1d });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0xdc49, gbc.sp());
        EXPECT(0xe2d9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1d, gbc.readMem(0xe2d8));
        // 1D 02D9
        gbc.setState(0x9610, 0xbfb3, 0xa990, 0xbe1, 0x33c3, 0xf44, 0x0, 0x0);
        gbc.writeMem(0x9610, { 0x1d });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0xbfb3, gbc.sp());
        EXPECT(0x9611, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1d, gbc.readMem(0x9610));
        // 1D 02DC
        gbc.setState(0xba49, 0xdb8c, 0xc90, 0xe47a, 0x843a, 0xb68b, 0x0, 0x0);
        gbc.writeMem(0xba49, { 0x1d });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0xdb8c, gbc.sp());
        EXPECT(0xba4a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1d, gbc.readMem(0xba49));
        // 1D 02DD
        gbc.setState(0xe48, 0x385d, 0x91c0, 0xfc1, 0xcde6, 0x7b43, 0x0, 0x0);
        gbc.writeMem(0xe48, { 0x1d });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x385d, gbc.sp());
        EXPECT(0xe49, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 1D 02DF
        gbc.setState(0xdbd0, 0xf702, 0x7530, 0xe3a6, 0x886e, 0x3e6a, 0x0, 0x0);
        gbc.writeMem(0xdbd0, { 0x1d });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0xf702, gbc.sp());
        EXPECT(0xdbd1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1d, gbc.readMem(0xdbd0));
        // 1D 02E0
        gbc.setState(0x5413, 0xff3f, 0x97b0, 0x191e, 0xc407, 0xf53d, 0x0, 0x1);
        gbc.writeMem(0x5413, { 0x1d });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0xff3f, gbc.sp());
        EXPECT(0x5414, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 1D 02E1
        gbc.setState(0xd5dd, 0xf96a, 0xe670, 0x2c35, 0xe353, 0x591b, 0x0, 0x1);
        gbc.writeMem(0xd5dd, { 0x1d });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0xf96a, gbc.sp());
        EXPECT(0xd5de, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1d, gbc.readMem(0xd5dd));
        // 1D 02E2
        gbc.setState(0xe974, 0xbeeb, 0x3c40, 0x313e, 0x573c, 0x189c, 0x0, 0x0);
        gbc.writeMem(0xe974, { 0x1d });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0xbeeb, gbc.sp());
        EXPECT(0xe975, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1d, gbc.readMem(0xe974));
        // 1D 02E3
        gbc.setState(0x44f8, 0xd2b6, 0xbd50, 0x40f3, 0x6398, 0x4953, 0x0, 0x1);
        gbc.writeMem(0x44f8, { 0x1d });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0xd2b6, gbc.sp());
        EXPECT(0x44f9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 1D 02E4
        gbc.setState(0x4bd4, 0x7dcc, 0xadd0, 0x593f, 0xea86, 0xfdec, 0x0, 0x0);
        gbc.writeMem(0x4bd4, { 0x1d });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x7dcc, gbc.sp());
        EXPECT(0x4bd5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 1D 02E5
        gbc.setState(0xb2d1, 0x5ed9, 0x5f00, 0xb8a8, 0x9482, 0xdb82, 0x0, 0x1);
        gbc.writeMem(0xb2d1, { 0x1d });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x5ed9, gbc.sp());
        EXPECT(0xb2d2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1d, gbc.readMem(0xb2d1));
        // 1D 02E6
        gbc.setState(0x7537, 0x9cf4, 0x4970, 0x6ab1, 0x1c4d, 0x5d99, 0x1, 0x1);
        gbc.writeMem(0x7537, { 0x1d });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x9cf4, gbc.sp());
        EXPECT(0x7538, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 1D 02E7
        gbc.setState(0x6e89, 0xd1d, 0xf1d0, 0x8df, 0xefb0, 0x8041, 0x0, 0x0);
        gbc.writeMem(0x6e89, { 0x1d });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0xd1d, gbc.sp());
        EXPECT(0x6e8a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 1D 02E8
        gbc.setState(0x494c, 0x4ec1, 0xd310, 0xf05d, 0x9995, 0x38df, 0x1, 0x1);
        gbc.writeMem(0x494c, { 0x1d });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x4ec1, gbc.sp());
        EXPECT(0x494d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 1D 02E9
        gbc.setState(0x6717, 0x3cf9, 0x4300, 0x8fab, 0xfe03, 0x7800, 0x0, 0x1);
        gbc.writeMem(0x6717, { 0x1d });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x3cf9, gbc.sp());
        EXPECT(0x6718, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 1D 02EA
        gbc.setState(0xe15, 0x4a6, 0x1780, 0x1e29, 0xfc97, 0x2ebe, 0x0, 0x1);
        gbc.writeMem(0xe15, { 0x1d });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0x4a6, gbc.sp());
        EXPECT(0xe16, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 1D 02EB
        gbc.setState(0xc896, 0xa57c, 0xff90, 0x6462, 0x9d65, 0xffe1, 0x1, 0x1);
        gbc.writeMem(0xc896, { 0x1d });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0xa57c, gbc.sp());
        EXPECT(0xc897, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1d, gbc.readMem(0xc896));
        // 1D 02EC
        gbc.setState(0xa613, 0x61b, 0x6e50, 0x38cb, 0x4308, 0x3f24, 0x1, 0x1);
        gbc.writeMem(0xa613, { 0x1d });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x61b, gbc.sp());
        EXPECT(0xa614, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1d, gbc.readMem(0xa613));
        // 1D 02ED
        gbc.setState(0x280c, 0xfbad, 0xd450, 0xe26d, 0x6712, 0xbda3, 0x0, 0x0);
        gbc.writeMem(0x280c, { 0x1d });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0xfbad, gbc.sp());
        EXPECT(0x280d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 1D 02EE
        gbc.setState(0xc79d, 0xee0e, 0x2800, 0x4315, 0xf36b, 0x4122, 0x1, 0x1);
        gbc.writeMem(0xc79d, { 0x1d });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0xee0e, gbc.sp());
        EXPECT(0xc79e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1d, gbc.readMem(0xc79d));
        // 1D 02EF
        gbc.setState(0x403d, 0x41c8, 0x5a60, 0xa81b, 0xe1a8, 0x8c0d, 0x0, 0x1);
        gbc.writeMem(0x403d, { 0x1d });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x41c8, gbc.sp());
        EXPECT(0x403e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 1D 02F0
        gbc.setState(0xa136, 0x4e71, 0xe860, 0x1476, 0xcb4b, 0xccde, 0x1, 0x1);
        gbc.writeMem(0xa136, { 0x1d });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x4e71, gbc.sp());
        EXPECT(0xa137, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1d, gbc.readMem(0xa136));
        // 1D 02F1
        gbc.setState(0xaa88, 0x4b5a, 0xc4d0, 0xe46e, 0x7702, 0x5063, 0x0, 0x1);
        gbc.writeMem(0xaa88, { 0x1d });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x4b5a, gbc.sp());
        EXPECT(0xaa89, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1d, gbc.readMem(0xaa88));
        // 1D 02F2
        gbc.setState(0x51c6, 0xa320, 0xabe0, 0x4be3, 0xcb29, 0xe525, 0x1, 0x1);
        gbc.writeMem(0x51c6, { 0x1d });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0xa320, gbc.sp());
        EXPECT(0x51c7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 1D 02F3
        gbc.setState(0x31d0, 0x58b7, 0x8cd0, 0x6144, 0x5b9, 0x461c, 0x0, 0x1);
        gbc.writeMem(0x31d0, { 0x1d });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x58b7, gbc.sp());
        EXPECT(0x31d1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 1D 02F4
        gbc.setState(0xa843, 0x5fa9, 0xf60, 0xa790, 0xdf0a, 0x70f6, 0x1, 0x1);
        gbc.writeMem(0xa843, { 0x1d });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x5fa9, gbc.sp());
        EXPECT(0xa844, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1d, gbc.readMem(0xa843));
        // 1D 02F6
        gbc.setState(0x6a79, 0x31c5, 0x9160, 0xedb3, 0xfbba, 0x9998, 0x0, 0x1);
        gbc.writeMem(0x6a79, { 0x1d });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x31c5, gbc.sp());
        EXPECT(0x6a7a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 1D 02F7
        gbc.setState(0xc922, 0xff04, 0x720, 0xbd0b, 0xdd2a, 0x1d68, 0x1, 0x0);
        gbc.writeMem(0xc922, { 0x1d });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0xff04, gbc.sp());
        EXPECT(0xc923, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1d, gbc.readMem(0xc922));
        // 1D 02F8
        gbc.setState(0x779d, 0xcdcc, 0xf620, 0x758b, 0xf2b7, 0x8ebd, 0x0, 0x0);
        gbc.writeMem(0x779d, { 0x1d });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0xcdcc, gbc.sp());
        EXPECT(0x779e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 1D 02F9
        gbc.setState(0x31b2, 0x9286, 0xe220, 0x8cda, 0x9ed5, 0xfca, 0x0, 0x1);
        gbc.writeMem(0x31b2, { 0x1d });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x9286, gbc.sp());
        EXPECT(0x31b3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 1D 02FB
        gbc.setState(0xbaae, 0x16be, 0xd3e0, 0x23a8, 0x1bd2, 0x28e3, 0x1, 0x0);
        gbc.writeMem(0xbaae, { 0x1d });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x16be, gbc.sp());
        EXPECT(0xbaaf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1d, gbc.readMem(0xbaae));
        // 1D 02FC
        gbc.setState(0x57f9, 0xac25, 0x5a30, 0xb36f, 0xb5da, 0x118, 0x1, 0x0);
        gbc.writeMem(0x57f9, { 0x1d });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0xac25, gbc.sp());
        EXPECT(0x57fa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 1D 02FD
        gbc.setState(0xe060, 0x27d5, 0x66e0, 0xd5ba, 0x7d05, 0xa8ff, 0x1, 0x1);
        gbc.writeMem(0xe060, { 0x1d });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x27d5, gbc.sp());
        EXPECT(0xe061, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1d, gbc.readMem(0xe060));
        // 1D 02FE
        gbc.setState(0xe8e6, 0x1a90, 0xf870, 0x9432, 0x8bf0, 0x1e0, 0x1, 0x1);
        gbc.writeMem(0xe8e6, { 0x1d });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x1a90, gbc.sp());
        EXPECT(0xe8e7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1d, gbc.readMem(0xe8e6));
        // 1D 02FF
        gbc.setState(0x867, 0xcd88, 0xc960, 0x4470, 0x19c, 0xfd89, 0x0, 0x0);
        gbc.writeMem(0x867, { 0x1d });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0xcd88, gbc.sp());
        EXPECT(0x868, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 1D 0301
        gbc.setState(0xab8d, 0x7d59, 0x9850, 0xd0a7, 0x2f3b, 0xc3e0, 0x0, 0x1);
        gbc.writeMem(0xab8d, { 0x1d });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x7d59, gbc.sp());
        EXPECT(0xab8e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1d, gbc.readMem(0xab8d));
        // 1D 0302
        gbc.setState(0xd8c0, 0x3adf, 0x68d0, 0xa47b, 0xd17d, 0xa781, 0x0, 0x1);
        gbc.writeMem(0xd8c0, { 0x1d });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x3adf, gbc.sp());
        EXPECT(0xd8c1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1d, gbc.readMem(0xd8c0));
        // 1D 0303
        gbc.setState(0x3e3b, 0xc8da, 0x7ed0, 0xedfe, 0x142, 0xe71e, 0x1, 0x1);
        gbc.writeMem(0x3e3b, { 0x1d });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0xc8da, gbc.sp());
        EXPECT(0x3e3c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 1D 0304
        gbc.setState(0x893e, 0x35b6, 0xe580, 0x4dc, 0x6301, 0x1a4f, 0x1, 0x1);
        gbc.writeMem(0x893e, { 0x1d });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x35b6, gbc.sp());
        EXPECT(0x893f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1d, gbc.readMem(0x893e));
        // 1D 0305
        gbc.setState(0x24f3, 0x1b89, 0x5cf0, 0xff07, 0x310, 0xe788, 0x1, 0x0);
        gbc.writeMem(0x24f3, { 0x1d });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x1b89, gbc.sp());
        EXPECT(0x24f4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 1D 0306
        gbc.setState(0x4b0a, 0xbf09, 0xf60, 0x3c73, 0xf81a, 0xc643, 0x0, 0x1);
        gbc.writeMem(0x4b0a, { 0x1d });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0xbf09, gbc.sp());
        EXPECT(0x4b0b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 1D 0307
        gbc.setState(0xe7aa, 0x8034, 0xfd80, 0xb6d2, 0xd794, 0xe8a5, 0x0, 0x0);
        gbc.writeMem(0xe7aa, { 0x1d });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x8034, gbc.sp());
        EXPECT(0xe7ab, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1d, gbc.readMem(0xe7aa));
        // 1D 0308
        gbc.setState(0xc48a, 0x974a, 0x43f0, 0x2311, 0xc697, 0x3758, 0x0, 0x0);
        gbc.writeMem(0xc48a, { 0x1d });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x974a, gbc.sp());
        EXPECT(0xc48b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1d, gbc.readMem(0xc48a));
        // 1D 0309
        gbc.setState(0xea55, 0xf778, 0x300, 0xd6a2, 0xa540, 0x239e, 0x0, 0x0);
        gbc.writeMem(0xea55, { 0x1d });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0xf778, gbc.sp());
        EXPECT(0xea56, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1d, gbc.readMem(0xea55));
        // 1D 030A
        gbc.setState(0x3d56, 0x32d3, 0xb7f0, 0x825f, 0x4274, 0x7868, 0x0, 0x0);
        gbc.writeMem(0x3d56, { 0x1d });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x32d3, gbc.sp());
        EXPECT(0x3d57, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 1D 030B
        gbc.setState(0xbd53, 0xcce5, 0x8190, 0x6dc8, 0xb0e, 0x601a, 0x1, 0x1);
        gbc.writeMem(0xbd53, { 0x1d });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0xcce5, gbc.sp());
        EXPECT(0xbd54, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1d, gbc.readMem(0xbd53));
        // 1D 030C
        gbc.setState(0x8f58, 0xc961, 0xb550, 0x3bf1, 0xd4e1, 0x294c, 0x0, 0x1);
        gbc.writeMem(0x8f58, { 0x1d });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0xc961, gbc.sp());
        EXPECT(0x8f59, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1d, gbc.readMem(0x8f58));
        // 1D 030D
        gbc.setState(0xbd40, 0x36d2, 0x3f90, 0x35d9, 0x3829, 0xd10, 0x0, 0x1);
        gbc.writeMem(0xbd40, { 0x1d });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x36d2, gbc.sp());
        EXPECT(0xbd41, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1d, gbc.readMem(0xbd40));
        // 1D 030E
        gbc.setState(0xc44, 0x6815, 0x7ed0, 0x50a0, 0xb302, 0xc752, 0x1, 0x1);
        gbc.writeMem(0xc44, { 0x1d });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x6815, gbc.sp());
        EXPECT(0xc45, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 1D 030F
        gbc.setState(0xd0ec, 0x252c, 0x4540, 0x263b, 0x3022, 0x6ccd, 0x0, 0x0);
        gbc.writeMem(0xd0ec, { 0x1d });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x252c, gbc.sp());
        EXPECT(0xd0ed, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1d, gbc.readMem(0xd0ec));
        // 1D 0310
        gbc.setState(0x8f5, 0x615b, 0x26c0, 0xf89f, 0x73e, 0xd4a3, 0x1, 0x1);
        gbc.writeMem(0x8f5, { 0x1d });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0x615b, gbc.sp());
        EXPECT(0x8f6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 1D 0311
        gbc.setState(0x238a, 0x2b12, 0xfb10, 0x2b05, 0xaa5a, 0x1de9, 0x1, 0x1);
        gbc.writeMem(0x238a, { 0x1d });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x2b12, gbc.sp());
        EXPECT(0x238b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 1D 0312
        gbc.setState(0x75e, 0x33bc, 0x8720, 0x1db6, 0x894a, 0xb46f, 0x0, 0x1);
        gbc.writeMem(0x75e, { 0x1d });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x33bc, gbc.sp());
        EXPECT(0x75f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 1D 0313
        gbc.setState(0x40e9, 0xc575, 0xb4d0, 0xe235, 0xcdaa, 0xd63b, 0x1, 0x1);
        gbc.writeMem(0x40e9, { 0x1d });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0xc575, gbc.sp());
        EXPECT(0x40ea, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 1D 0314
        gbc.setState(0x4465, 0xc8b0, 0x6c90, 0x655e, 0xb6cd, 0xbe79, 0x0, 0x0);
        gbc.writeMem(0x4465, { 0x1d });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0xc8b0, gbc.sp());
        EXPECT(0x4466, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 1D 0315
        gbc.setState(0x3fe4, 0xa909, 0x8560, 0x379c, 0xe2e2, 0x6936, 0x0, 0x0);
        gbc.writeMem(0x3fe4, { 0x1d });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0xa909, gbc.sp());
        EXPECT(0x3fe5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 1D 0316
        gbc.setState(0x5aa8, 0x3354, 0x1420, 0x6406, 0x5672, 0x27aa, 0x1, 0x1);
        gbc.writeMem(0x5aa8, { 0x1d });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x3354, gbc.sp());
        EXPECT(0x5aa9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 1D 0317
        gbc.setState(0xa90b, 0x70f7, 0xba40, 0xd50a, 0xdd0f, 0x1154, 0x1, 0x1);
        gbc.writeMem(0xa90b, { 0x1d });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x70f7, gbc.sp());
        EXPECT(0xa90c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1d, gbc.readMem(0xa90b));
        // 1D 0318
        gbc.setState(0x79c4, 0xa5aa, 0xf10, 0x1e5a, 0x5d94, 0x1975, 0x1, 0x0);
        gbc.writeMem(0x79c4, { 0x1d });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0xa5aa, gbc.sp());
        EXPECT(0x79c5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 1D 0319
        gbc.setState(0xa8ae, 0xbb35, 0xcff0, 0x73c5, 0x53bc, 0xc8e8, 0x0, 0x1);
        gbc.writeMem(0xa8ae, { 0x1d });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0xbb35, gbc.sp());
        EXPECT(0xa8af, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1d, gbc.readMem(0xa8ae));
        // 1D 031A
        gbc.setState(0xe146, 0x8bd9, 0xed10, 0x96f4, 0x593a, 0x740b, 0x0, 0x0);
        gbc.writeMem(0xe146, { 0x1d });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x8bd9, gbc.sp());
        EXPECT(0xe147, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1d, gbc.readMem(0xe146));
        // 1D 031B
        gbc.setState(0xa398, 0x6477, 0xe390, 0xb82d, 0x121b, 0x65b4, 0x1, 0x0);
        gbc.writeMem(0xa398, { 0x1d });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x6477, gbc.sp());
        EXPECT(0xa399, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1d, gbc.readMem(0xa398));
        // 1D 031C
        gbc.setState(0x358, 0x69b7, 0x15b0, 0x7897, 0xaec1, 0x6a46, 0x1, 0x0);
        gbc.writeMem(0x358, { 0x1d });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x69b7, gbc.sp());
        EXPECT(0x359, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 1D 031D
        gbc.setState(0x9be0, 0x9469, 0xb3c0, 0xe698, 0x2e7b, 0x9149, 0x1, 0x0);
        gbc.writeMem(0x9be0, { 0x1d });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x9469, gbc.sp());
        EXPECT(0x9be1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1d, gbc.readMem(0x9be0));
        // 1D 031E
        gbc.setState(0x967f, 0x322a, 0xfb90, 0xd6eb, 0x98ec, 0xc8d3, 0x1, 0x1);
        gbc.writeMem(0x967f, { 0x1d });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x322a, gbc.sp());
        EXPECT(0x9680, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1d, gbc.readMem(0x967f));
        // 1D 031F
        gbc.setState(0xc630, 0x8d3a, 0xcbf0, 0xfc12, 0xd901, 0x2a7d, 0x0, 0x0);
        gbc.writeMem(0xc630, { 0x1d });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x8d3a, gbc.sp());
        EXPECT(0xc631, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1d, gbc.readMem(0xc630));
        // 1D 0321
        gbc.setState(0xbf3b, 0x123a, 0x8670, 0x296b, 0x291, 0x224c, 0x0, 0x1);
        gbc.writeMem(0xbf3b, { 0x1d });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x123a, gbc.sp());
        EXPECT(0xbf3c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1d, gbc.readMem(0xbf3b));
        // 1D 0322
        gbc.setState(0x8af9, 0x3db6, 0x8540, 0xa73d, 0xd316, 0xa8b8, 0x0, 0x0);
        gbc.writeMem(0x8af9, { 0x1d });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x3db6, gbc.sp());
        EXPECT(0x8afa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1d, gbc.readMem(0x8af9));
        // 1D 0323
        gbc.setState(0xc647, 0x75d3, 0x9f80, 0xb60f, 0xd27b, 0x4228, 0x1, 0x1);
        gbc.writeMem(0xc647, { 0x1d });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x75d3, gbc.sp());
        EXPECT(0xc648, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1d, gbc.readMem(0xc647));
        // 1D 0324
        gbc.setState(0x45e6, 0x8d9e, 0xc790, 0xbaae, 0x718a, 0x6596, 0x0, 0x1);
        gbc.writeMem(0x45e6, { 0x1d });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x8d9e, gbc.sp());
        EXPECT(0x45e7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 1D 0325
        gbc.setState(0x64de, 0xfe84, 0x6150, 0x1579, 0x2f38, 0x3175, 0x1, 0x0);
        gbc.writeMem(0x64de, { 0x1d });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0xfe84, gbc.sp());
        EXPECT(0x64df, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 1D 0327
        gbc.setState(0x5798, 0xf7c9, 0x1130, 0x5817, 0xb786, 0x3a55, 0x0, 0x0);
        gbc.writeMem(0x5798, { 0x1d });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0xf7c9, gbc.sp());
        EXPECT(0x5799, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 1D 0328
        gbc.setState(0x91ad, 0x1648, 0xc5b0, 0x4426, 0x138f, 0xa8f2, 0x1, 0x1);
        gbc.writeMem(0x91ad, { 0x1d });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x1648, gbc.sp());
        EXPECT(0x91ae, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1d, gbc.readMem(0x91ad));
        // 1D 0329
        gbc.setState(0x6e62, 0x246c, 0x9180, 0x32f3, 0xba66, 0x6a8f, 0x1, 0x1);
        gbc.writeMem(0x6e62, { 0x1d });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x246c, gbc.sp());
        EXPECT(0x6e63, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 1D 032A
        gbc.setState(0x54eb, 0x4b2, 0x90d0, 0xecc8, 0x4578, 0x9042, 0x1, 0x0);
        gbc.writeMem(0x54eb, { 0x1d });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x4b2, gbc.sp());
        EXPECT(0x54ec, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 1D 032B
        gbc.setState(0x58fd, 0x28dd, 0x3000, 0xf3e7, 0x4468, 0x4cde, 0x0, 0x0);
        gbc.writeMem(0x58fd, { 0x1d });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x28dd, gbc.sp());
        EXPECT(0x58fe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 1D 032C
        gbc.setState(0x9ea2, 0x6d68, 0xeb60, 0x9697, 0xe258, 0x952, 0x1, 0x1);
        gbc.writeMem(0x9ea2, { 0x1d });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x6d68, gbc.sp());
        EXPECT(0x9ea3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1d, gbc.readMem(0x9ea2));
        // 1D 032D
        gbc.setState(0x4b27, 0xba6d, 0x7e0, 0x3c49, 0xa49c, 0xd93e, 0x0, 0x0);
        gbc.writeMem(0x4b27, { 0x1d });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0xba6d, gbc.sp());
        EXPECT(0x4b28, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 1D 032E
        gbc.setState(0x8a4e, 0x6f3c, 0xe690, 0x74d, 0x78df, 0x3867, 0x1, 0x1);
        gbc.writeMem(0x8a4e, { 0x1d });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x6f3c, gbc.sp());
        EXPECT(0x8a4f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1d, gbc.readMem(0x8a4e));
        // 1D 032F
        gbc.setState(0xefaa, 0x4df7, 0x3d60, 0xefd7, 0xb7e5, 0x2d36, 0x1, 0x0);
        gbc.writeMem(0xefaa, { 0x1d });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x4df7, gbc.sp());
        EXPECT(0xefab, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1d, gbc.readMem(0xefaa));
        // 1D 0332
        gbc.setState(0x2528, 0xec8e, 0xb750, 0x2da7, 0x78bf, 0xe05e, 0x1, 0x1);
        gbc.writeMem(0x2528, { 0x1d });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0xec8e, gbc.sp());
        EXPECT(0x2529, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 1D 0334
        gbc.setState(0x444d, 0x2387, 0x2990, 0xf34b, 0xbea6, 0x75fe, 0x0, 0x0);
        gbc.writeMem(0x444d, { 0x1d });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x2387, gbc.sp());
        EXPECT(0x444e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 1D 0335
        gbc.setState(0x74c8, 0x7753, 0xccf0, 0x3919, 0x53e3, 0xc434, 0x1, 0x1);
        gbc.writeMem(0x74c8, { 0x1d });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x7753, gbc.sp());
        EXPECT(0x74c9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 1D 0336
        gbc.setState(0x3242, 0x3957, 0x16d0, 0x53e4, 0x6d74, 0xe100, 0x0, 0x1);
        gbc.writeMem(0x3242, { 0x1d });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x3957, gbc.sp());
        EXPECT(0x3243, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 1D 0337
        gbc.setState(0x619, 0xc6a1, 0x6a90, 0x69ef, 0x8e6b, 0xa786, 0x0, 0x1);
        gbc.writeMem(0x619, { 0x1d });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0xc6a1, gbc.sp());
        EXPECT(0x61a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 1D 0338
        gbc.setState(0x1b6, 0x82e7, 0x3940, 0xb9d3, 0xe341, 0x30b6, 0x0, 0x0);
        gbc.writeMem(0x1b6, { 0x1d });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x82e7, gbc.sp());
        EXPECT(0x1b7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 1D 0339
        gbc.setState(0x5497, 0xa494, 0x2530, 0x5b18, 0x533e, 0xbe89, 0x0, 0x0);
        gbc.writeMem(0x5497, { 0x1d });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0xa494, gbc.sp());
        EXPECT(0x5498, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 1D 033A
        gbc.setState(0x7631, 0x8160, 0x62c0, 0x1eff, 0xa9c6, 0x1481, 0x1, 0x0);
        gbc.writeMem(0x7631, { 0x1d });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x8160, gbc.sp());
        EXPECT(0x7632, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 1D 033B
        gbc.setState(0x1c4f, 0xc8e5, 0x1a70, 0xea48, 0xbdab, 0xde1a, 0x1, 0x0);
        gbc.writeMem(0x1c4f, { 0x1d });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0xc8e5, gbc.sp());
        EXPECT(0x1c50, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 1D 033C
        gbc.setState(0xcc08, 0x3085, 0x9bf0, 0x457a, 0x51d4, 0xe1c1, 0x0, 0x1);
        gbc.writeMem(0xcc08, { 0x1d });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x3085, gbc.sp());
        EXPECT(0xcc09, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1d, gbc.readMem(0xcc08));
        // 1D 033D
        gbc.setState(0xaa5d, 0xe1e8, 0x3f80, 0x60cf, 0x36a8, 0xa0a4, 0x1, 0x1);
        gbc.writeMem(0xaa5d, { 0x1d });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0xe1e8, gbc.sp());
        EXPECT(0xaa5e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1d, gbc.readMem(0xaa5d));
        // 1D 033E
        gbc.setState(0x62ae, 0xe1cf, 0xde00, 0xfe02, 0x8d1f, 0x183, 0x1, 0x0);
        gbc.writeMem(0x62ae, { 0x1d });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0xe1cf, gbc.sp());
        EXPECT(0x62af, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 1D 033F
        gbc.setState(0xc25b, 0xb220, 0x29c0, 0x5785, 0x7118, 0x7d90, 0x0, 0x1);
        gbc.writeMem(0xc25b, { 0x1d });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0xb220, gbc.sp());
        EXPECT(0xc25c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1d, gbc.readMem(0xc25b));
        // 1D 0340
        gbc.setState(0xab70, 0x97db, 0xeac0, 0xaf37, 0x7bdc, 0xa981, 0x0, 0x0);
        gbc.writeMem(0xab70, { 0x1d });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x97db, gbc.sp());
        EXPECT(0xab71, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1d, gbc.readMem(0xab70));
        // 1D 0341
        gbc.setState(0xece4, 0xd9c4, 0x9fd0, 0xa0e7, 0x5e38, 0xf3db, 0x0, 0x0);
        gbc.writeMem(0xece4, { 0x1d });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0xd9c4, gbc.sp());
        EXPECT(0xece5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1d, gbc.readMem(0xece4));
        // 1D 0342
        gbc.setState(0xe861, 0xad3b, 0x2a60, 0x86b2, 0x8660, 0x9c02, 0x0, 0x0);
        gbc.writeMem(0xe861, { 0x1d });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0xad3b, gbc.sp());
        EXPECT(0xe862, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1d, gbc.readMem(0xe861));
        // 1D 0343
        gbc.setState(0x55b4, 0xfeab, 0x6c50, 0xe018, 0xe4e4, 0x8516, 0x0, 0x1);
        gbc.writeMem(0x55b4, { 0x1d });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0xfeab, gbc.sp());
        EXPECT(0x55b5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 1D 0344
        gbc.setState(0xde42, 0x1c6c, 0x50d0, 0xf47b, 0xd595, 0x847f, 0x1, 0x1);
        gbc.writeMem(0xde42, { 0x1d });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x1c6c, gbc.sp());
        EXPECT(0xde43, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1d, gbc.readMem(0xde42));
        // 1D 0345
        gbc.setState(0x3559, 0xa6, 0xa4c0, 0xffbc, 0xe08f, 0x2acf, 0x1, 0x1);
        gbc.writeMem(0x3559, { 0x1d });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0xa6, gbc.sp());
        EXPECT(0x355a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 1D 0346
        gbc.setState(0x411d, 0x8373, 0xd240, 0x540f, 0xf553, 0x234f, 0x1, 0x1);
        gbc.writeMem(0x411d, { 0x1d });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x8373, gbc.sp());
        EXPECT(0x411e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 1D 0347
        gbc.setState(0x31a9, 0xa42b, 0xa500, 0x1f4, 0x778d, 0x4c2, 0x0, 0x1);
        gbc.writeMem(0x31a9, { 0x1d });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0xa42b, gbc.sp());
        EXPECT(0x31aa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 1D 0348
        gbc.setState(0x77da, 0xd331, 0xd5b0, 0xcfc4, 0x4dcf, 0x576b, 0x1, 0x0);
        gbc.writeMem(0x77da, { 0x1d });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0xd331, gbc.sp());
        EXPECT(0x77db, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 1D 0349
        gbc.setState(0xb3c3, 0x3b4, 0xb410, 0x8eaa, 0x7254, 0x79b3, 0x1, 0x0);
        gbc.writeMem(0xb3c3, { 0x1d });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x3b4, gbc.sp());
        EXPECT(0xb3c4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1d, gbc.readMem(0xb3c3));
        // 1D 034B
        gbc.setState(0x4b19, 0xb745, 0x8f10, 0xeaee, 0x2e80, 0xc0c4, 0x0, 0x0);
        gbc.writeMem(0x4b19, { 0x1d });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0xb745, gbc.sp());
        EXPECT(0x4b1a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 1D 034C
        gbc.setState(0xae96, 0xc320, 0x7500, 0xfba, 0x7514, 0x76d6, 0x0, 0x0);
        gbc.writeMem(0xae96, { 0x1d });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0xc320, gbc.sp());
        EXPECT(0xae97, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1d, gbc.readMem(0xae96));
        // 1D 034D
        gbc.setState(0x5372, 0x5f6, 0xc720, 0x8219, 0x4725, 0xe1ad, 0x0, 0x0);
        gbc.writeMem(0x5372, { 0x1d });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x5f6, gbc.sp());
        EXPECT(0x5373, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 1D 034E
        gbc.setState(0x742, 0xdbdb, 0x77b0, 0xa7b1, 0xf361, 0x30b3, 0x0, 0x1);
        gbc.writeMem(0x742, { 0x1d });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0xdbdb, gbc.sp());
        EXPECT(0x743, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 1D 0350
        gbc.setState(0x1ff, 0x84fc, 0x33a0, 0xc6d1, 0xe774, 0x9b25, 0x0, 0x1);
        gbc.writeMem(0x1ff, { 0x1d });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x84fc, gbc.sp());
        EXPECT(0x200, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 1D 0351
        gbc.setState(0x478, 0xa5ae, 0xb7d0, 0x2e, 0x4a9, 0x2855, 0x0, 0x1);
        gbc.writeMem(0x478, { 0x1d });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0xa5ae, gbc.sp());
        EXPECT(0x479, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 1D 0352
        gbc.setState(0x70d9, 0xca46, 0x3c90, 0x2df3, 0xd5d, 0xf344, 0x1, 0x1);
        gbc.writeMem(0x70d9, { 0x1d });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0xca46, gbc.sp());
        EXPECT(0x70da, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 1D 0353
        gbc.setState(0x7bd0, 0x3e83, 0xdc00, 0xb0de, 0x64a3, 0x764c, 0x1, 0x1);
        gbc.writeMem(0x7bd0, { 0x1d });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x3e83, gbc.sp());
        EXPECT(0x7bd1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 1D 0354
        gbc.setState(0xb915, 0x79be, 0xc870, 0xefdd, 0x821d, 0xb9d4, 0x0, 0x1);
        gbc.writeMem(0xb915, { 0x1d });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x79be, gbc.sp());
        EXPECT(0xb916, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1d, gbc.readMem(0xb915));
        // 1D 0355
        gbc.setState(0x7dae, 0xccbd, 0xf330, 0xd2f2, 0xa628, 0x744f, 0x1, 0x1);
        gbc.writeMem(0x7dae, { 0x1d });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0xccbd, gbc.sp());
        EXPECT(0x7daf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 1D 0356
        gbc.setState(0x8be8, 0x9e22, 0x4b30, 0x5363, 0xd3fe, 0x6316, 0x0, 0x0);
        gbc.writeMem(0x8be8, { 0x1d });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x9e22, gbc.sp());
        EXPECT(0x8be9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1d, gbc.readMem(0x8be8));
        // 1D 0357
        gbc.setState(0x2ee4, 0x239d, 0x40, 0xc92, 0xa7ef, 0x8269, 0x0, 0x0);
        gbc.writeMem(0x2ee4, { 0x1d });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0x239d, gbc.sp());
        EXPECT(0x2ee5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 1D 0358
        gbc.setState(0x4937, 0x5882, 0x64a0, 0x8f4a, 0x2e33, 0x8d57, 0x1, 0x0);
        gbc.writeMem(0x4937, { 0x1d });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x5882, gbc.sp());
        EXPECT(0x4938, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 1D 0359
        gbc.setState(0x8f99, 0x512c, 0x190, 0x60b1, 0xfcda, 0x201b, 0x1, 0x1);
        gbc.writeMem(0x8f99, { 0x1d });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x512c, gbc.sp());
        EXPECT(0x8f9a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1d, gbc.readMem(0x8f99));
        // 1D 035A
        gbc.setState(0x56d9, 0xc0bd, 0xd730, 0x47e2, 0xb4d2, 0xe844, 0x1, 0x0);
        gbc.writeMem(0x56d9, { 0x1d });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0xc0bd, gbc.sp());
        EXPECT(0x56da, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 1D 035B
        gbc.setState(0xed68, 0xe21c, 0x3440, 0x9512, 0x5cf1, 0xb865, 0x0, 0x1);
        gbc.writeMem(0xed68, { 0x1d });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0xe21c, gbc.sp());
        EXPECT(0xed69, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1d, gbc.readMem(0xed68));
        // 1D 035C
        gbc.setState(0x788f, 0x8bf, 0xbb20, 0x991b, 0x8c0c, 0xbecf, 0x0, 0x1);
        gbc.writeMem(0x788f, { 0x1d });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x8bf, gbc.sp());
        EXPECT(0x7890, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 1D 035E
        gbc.setState(0x508f, 0xe357, 0x2f70, 0xf74a, 0x738c, 0x7f4c, 0x0, 0x1);
        gbc.writeMem(0x508f, { 0x1d });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0xe357, gbc.sp());
        EXPECT(0x5090, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 1D 035F
        gbc.setState(0xe8ef, 0xf085, 0xda40, 0x69ce, 0x665, 0xf003, 0x1, 0x1);
        gbc.writeMem(0xe8ef, { 0x1d });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0xf085, gbc.sp());
        EXPECT(0xe8f0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1d, gbc.readMem(0xe8ef));
        // 1D 0360
        gbc.setState(0x5343, 0xddc9, 0xe720, 0x139d, 0x1cc0, 0xe853, 0x1, 0x1);
        gbc.writeMem(0x5343, { 0x1d });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0xddc9, gbc.sp());
        EXPECT(0x5344, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 1D 0361
        gbc.setState(0xee18, 0xf3d6, 0x8f70, 0x235c, 0xdc2f, 0x3bb5, 0x1, 0x0);
        gbc.writeMem(0xee18, { 0x1d });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0xf3d6, gbc.sp());
        EXPECT(0xee19, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1d, gbc.readMem(0xee18));
        // 1D 0362
        gbc.setState(0x831d, 0x3ef9, 0x6280, 0x7aaa, 0x93b, 0x2a18, 0x1, 0x1);
        gbc.writeMem(0x831d, { 0x1d });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x3ef9, gbc.sp());
        EXPECT(0x831e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1d, gbc.readMem(0x831d));
        // 1D 0363
        gbc.setState(0xc677, 0x12ba, 0x8930, 0xbb96, 0x1261, 0xe8b0, 0x1, 0x0);
        gbc.writeMem(0xc677, { 0x1d });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x12ba, gbc.sp());
        EXPECT(0xc678, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1d, gbc.readMem(0xc677));
        // 1D 0364
        gbc.setState(0xbda2, 0x6ead, 0xb5b0, 0x4090, 0xf42d, 0x2c66, 0x0, 0x0);
        gbc.writeMem(0xbda2, { 0x1d });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x6ead, gbc.sp());
        EXPECT(0xbda3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1d, gbc.readMem(0xbda2));
        // 1D 0365
        gbc.setState(0x2cdf, 0x38bc, 0xa280, 0xf7ac, 0x43bb, 0x802c, 0x0, 0x1);
        gbc.writeMem(0x2cdf, { 0x1d });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x38bc, gbc.sp());
        EXPECT(0x2ce0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 1D 0366
        gbc.setState(0x155a, 0x932e, 0x6460, 0x4b44, 0xeb19, 0x2f4f, 0x0, 0x0);
        gbc.writeMem(0x155a, { 0x1d });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x932e, gbc.sp());
        EXPECT(0x155b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 1D 0367
        gbc.setState(0xd6c1, 0x7a44, 0x52e0, 0xd4d6, 0x67ae, 0xd086, 0x0, 0x1);
        gbc.writeMem(0xd6c1, { 0x1d });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x7a44, gbc.sp());
        EXPECT(0xd6c2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1d, gbc.readMem(0xd6c1));
        // 1D 0368
        gbc.setState(0x1115, 0xccf, 0xb360, 0x8990, 0xcdf3, 0x5e02, 0x0, 0x1);
        gbc.writeMem(0x1115, { 0x1d });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0xccf, gbc.sp());
        EXPECT(0x1116, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 1D 036A
        gbc.setState(0xe86a, 0xdd3e, 0x3190, 0xe978, 0x99e7, 0x334b, 0x0, 0x1);
        gbc.writeMem(0xe86a, { 0x1d });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0xdd3e, gbc.sp());
        EXPECT(0xe86b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1d, gbc.readMem(0xe86a));
        // 1D 036B
        gbc.setState(0xe878, 0xe7bb, 0xc9c0, 0x5f93, 0x3f05, 0x9735, 0x1, 0x0);
        gbc.writeMem(0xe878, { 0x1d });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0xe7bb, gbc.sp());
        EXPECT(0xe879, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1d, gbc.readMem(0xe878));
        // 1D 036C
        gbc.setState(0x5697, 0xd609, 0xe550, 0xb354, 0xc5dc, 0x76e3, 0x0, 0x0);
        gbc.writeMem(0x5697, { 0x1d });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0xd609, gbc.sp());
        EXPECT(0x5698, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 1D 036D
        gbc.setState(0x4f4c, 0x87da, 0x6820, 0xffc8, 0x4cd6, 0xa53d, 0x1, 0x1);
        gbc.writeMem(0x4f4c, { 0x1d });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x87da, gbc.sp());
        EXPECT(0x4f4d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 1D 036E
        gbc.setState(0xe44a, 0xb721, 0x1110, 0xe8b0, 0x7df2, 0x178, 0x0, 0x0);
        gbc.writeMem(0xe44a, { 0x1d });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0xb721, gbc.sp());
        EXPECT(0xe44b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1d, gbc.readMem(0xe44a));
        // 1D 036F
        gbc.setState(0xd914, 0x5fd4, 0x4540, 0x6c3, 0xa73, 0xfca0, 0x0, 0x0);
        gbc.writeMem(0xd914, { 0x1d });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x5fd4, gbc.sp());
        EXPECT(0xd915, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1d, gbc.readMem(0xd914));
        // 1D 0370
        gbc.setState(0x4f66, 0xc12c, 0x5410, 0x66ef, 0xf0fa, 0x56ff, 0x0, 0x0);
        gbc.writeMem(0x4f66, { 0x1d });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0xc12c, gbc.sp());
        EXPECT(0x4f67, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 1D 0371
        gbc.setState(0x476b, 0xd3f8, 0xf770, 0xd0e1, 0x5f22, 0xac5f, 0x1, 0x0);
        gbc.writeMem(0x476b, { 0x1d });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0xd3f8, gbc.sp());
        EXPECT(0x476c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 1D 0373
        gbc.setState(0xecad, 0x5079, 0xb920, 0x58df, 0x971d, 0x7415, 0x1, 0x0);
        gbc.writeMem(0xecad, { 0x1d });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x5079, gbc.sp());
        EXPECT(0xecae, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1d, gbc.readMem(0xecad));
        // 1D 0374
        gbc.setState(0x91dd, 0x7b67, 0x8890, 0x2cc3, 0xbad7, 0xd69, 0x0, 0x0);
        gbc.writeMem(0x91dd, { 0x1d });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0x7b67, gbc.sp());
        EXPECT(0x91de, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1d, gbc.readMem(0x91dd));
        // 1D 0375
        gbc.setState(0x3d70, 0x8991, 0x96d0, 0x2dd6, 0x8e5a, 0x4fb9, 0x1, 0x1);
        gbc.writeMem(0x3d70, { 0x1d });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x8991, gbc.sp());
        EXPECT(0x3d71, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 1D 0376
        gbc.setState(0x49f6, 0x9ec9, 0x69b0, 0x905a, 0x9117, 0x94e, 0x1, 0x0);
        gbc.writeMem(0x49f6, { 0x1d });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x9ec9, gbc.sp());
        EXPECT(0x49f7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 1D 0377
        gbc.setState(0x1802, 0x8d9d, 0x25b0, 0xeb2c, 0xe3c9, 0xafaf, 0x1, 0x1);
        gbc.writeMem(0x1802, { 0x1d });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x8d9d, gbc.sp());
        EXPECT(0x1803, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 1D 0378
        gbc.setState(0x79d4, 0xfdc1, 0xc850, 0x89b1, 0x777e, 0xf096, 0x0, 0x1);
        gbc.writeMem(0x79d4, { 0x1d });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0xfdc1, gbc.sp());
        EXPECT(0x79d5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 1D 0379
        gbc.setState(0x6634, 0x1783, 0x4c50, 0xd9, 0x957f, 0x577, 0x0, 0x1);
        gbc.writeMem(0x6634, { 0x1d });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x1783, gbc.sp());
        EXPECT(0x6635, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 1D 037A
        gbc.setState(0x2773, 0x49f4, 0xa700, 0x1ba, 0x32dd, 0xe953, 0x1, 0x0);
        gbc.writeMem(0x2773, { 0x1d });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x49f4, gbc.sp());
        EXPECT(0x2774, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 1D 037B
        gbc.setState(0x5247, 0xd2b1, 0xde40, 0x7fcf, 0x20cb, 0xc1bd, 0x0, 0x1);
        gbc.writeMem(0x5247, { 0x1d });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0xd2b1, gbc.sp());
        EXPECT(0x5248, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 1D 037C
        gbc.setState(0x3824, 0x9b4a, 0xeb00, 0x77d, 0xccd5, 0x5827, 0x0, 0x0);
        gbc.writeMem(0x3824, { 0x1d });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x9b4a, gbc.sp());
        EXPECT(0x3825, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 1D 037D
        gbc.setState(0xedaf, 0x4058, 0xe690, 0x4cf, 0x2289, 0x7ef1, 0x0, 0x1);
        gbc.writeMem(0xedaf, { 0x1d });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x4058, gbc.sp());
        EXPECT(0xedb0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1d, gbc.readMem(0xedaf));
        // 1D 037E
        gbc.setState(0x7130, 0x9697, 0xa4f0, 0x4a31, 0x8696, 0x25bb, 0x0, 0x1);
        gbc.writeMem(0x7130, { 0x1d });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x9697, gbc.sp());
        EXPECT(0x7131, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 1D 037F
        gbc.setState(0xcfed, 0x1aa3, 0xe710, 0xb624, 0xe3d4, 0xda5a, 0x1, 0x1);
        gbc.writeMem(0xcfed, { 0x1d });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x1aa3, gbc.sp());
        EXPECT(0xcfee, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1d, gbc.readMem(0xcfed));
        // 1D 0380
        gbc.setState(0xce46, 0xf9b2, 0x8500, 0x549, 0x3eff, 0xacc, 0x1, 0x0);
        gbc.writeMem(0xce46, { 0x1d });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0xf9b2, gbc.sp());
        EXPECT(0xce47, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1d, gbc.readMem(0xce46));
        // 1D 0381
        gbc.setState(0xc7ca, 0x28b2, 0xbda0, 0xe4b4, 0x1905, 0x688, 0x0, 0x1);
        gbc.writeMem(0xc7ca, { 0x1d });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x28b2, gbc.sp());
        EXPECT(0xc7cb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1d, gbc.readMem(0xc7ca));
        // 1D 0382
        gbc.setState(0x9e5a, 0x15da, 0x6280, 0xd2c9, 0x6a1e, 0x990a, 0x1, 0x0);
        gbc.writeMem(0x9e5a, { 0x1d });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x15da, gbc.sp());
        EXPECT(0x9e5b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1d, gbc.readMem(0x9e5a));
        // 1D 0383
        gbc.setState(0xd803, 0xd773, 0x9000, 0x610, 0x8a50, 0xed8e, 0x0, 0x1);
        gbc.writeMem(0xd803, { 0x1d });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0xd773, gbc.sp());
        EXPECT(0xd804, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1d, gbc.readMem(0xd803));
        // 1D 0384
        gbc.setState(0xd3b, 0x671f, 0x6b20, 0x7883, 0x5714, 0xa8f3, 0x0, 0x0);
        gbc.writeMem(0xd3b, { 0x1d });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x671f, gbc.sp());
        EXPECT(0xd3c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 1D 0385
        gbc.setState(0x1bdb, 0x8dff, 0xe600, 0xe958, 0x1355, 0xdf33, 0x1, 0x0);
        gbc.writeMem(0x1bdb, { 0x1d });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x8dff, gbc.sp());
        EXPECT(0x1bdc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 1D 0386
        gbc.setState(0x3d28, 0x449b, 0x9f70, 0xa12a, 0xb5bb, 0xd8f0, 0x1, 0x0);
        gbc.writeMem(0x3d28, { 0x1d });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x449b, gbc.sp());
        EXPECT(0x3d29, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 1D 0387
        gbc.setState(0x1fc4, 0x4db8, 0x9400, 0x7132, 0x6b72, 0x125c, 0x0, 0x0);
        gbc.writeMem(0x1fc4, { 0x1d });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x4db8, gbc.sp());
        EXPECT(0x1fc5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 1D 0388
        gbc.setState(0xa892, 0x4a52, 0xc910, 0xa581, 0x5e95, 0x2e93, 0x0, 0x1);
        gbc.writeMem(0xa892, { 0x1d });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0x4a52, gbc.sp());
        EXPECT(0xa893, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1d, gbc.readMem(0xa892));
        // 1D 0389
        gbc.setState(0x2083, 0xb9cc, 0x5a60, 0xccd5, 0xd402, 0x500d, 0x0, 0x0);
        gbc.writeMem(0x2083, { 0x1d });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0xb9cc, gbc.sp());
        EXPECT(0x2084, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 1D 038A
        gbc.setState(0x2135, 0xdb9c, 0xc380, 0xed5, 0xe2fe, 0x65a0, 0x0, 0x0);
        gbc.writeMem(0x2135, { 0x1d });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0xdb9c, gbc.sp());
        EXPECT(0x2136, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 1D 038B
        gbc.setState(0x6896, 0xd1c1, 0x1440, 0xc688, 0x762a, 0x28f1, 0x0, 0x1);
        gbc.writeMem(0x6896, { 0x1d });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0xd1c1, gbc.sp());
        EXPECT(0x6897, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 1D 038C
        gbc.setState(0x340f, 0xe04e, 0x4e00, 0x1bf0, 0x9f99, 0xd995, 0x0, 0x1);
        gbc.writeMem(0x340f, { 0x1d });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0xe04e, gbc.sp());
        EXPECT(0x3410, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 1D 038D
        gbc.setState(0x2e62, 0x614, 0xa370, 0x2db0, 0x89b2, 0x84b0, 0x1, 0x1);
        gbc.writeMem(0x2e62, { 0x1d });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x614, gbc.sp());
        EXPECT(0x2e63, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 1D 038E
        gbc.setState(0xa9e3, 0x9c7b, 0xa6e0, 0x17bc, 0xa52c, 0xef26, 0x0, 0x1);
        gbc.writeMem(0xa9e3, { 0x1d });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x9c7b, gbc.sp());
        EXPECT(0xa9e4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1d, gbc.readMem(0xa9e3));
        // 1D 038F
        gbc.setState(0x716d, 0x1e7c, 0xba60, 0x925a, 0x4488, 0x7b59, 0x1, 0x1);
        gbc.writeMem(0x716d, { 0x1d });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x1e7c, gbc.sp());
        EXPECT(0x716e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 1D 0390
        gbc.setState(0xdbd3, 0x56d8, 0x9590, 0x948e, 0x7eb5, 0xd54b, 0x1, 0x1);
        gbc.writeMem(0xdbd3, { 0x1d });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x56d8, gbc.sp());
        EXPECT(0xdbd4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1d, gbc.readMem(0xdbd3));
        // 1D 0391
        gbc.setState(0x136e, 0x3bf0, 0x5490, 0x55da, 0xc7c0, 0x640b, 0x0, 0x0);
        gbc.writeMem(0x136e, { 0x1d });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x3bf0, gbc.sp());
        EXPECT(0x136f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 1D 0393
        gbc.setState(0x6c0c, 0x554b, 0x8660, 0xca8d, 0xee65, 0x6779, 0x1, 0x1);
        gbc.writeMem(0x6c0c, { 0x1d });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x554b, gbc.sp());
        EXPECT(0x6c0d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 1D 0394
        gbc.setState(0x9f68, 0x9c89, 0xe3b0, 0x613e, 0x521b, 0xb037, 0x1, 0x0);
        gbc.writeMem(0x9f68, { 0x1d });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x9c89, gbc.sp());
        EXPECT(0x9f69, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1d, gbc.readMem(0x9f68));
        // 1D 0395
        gbc.setState(0x2325, 0xd012, 0xdff0, 0x3cf, 0xfd39, 0x9262, 0x0, 0x1);
        gbc.writeMem(0x2325, { 0x1d });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0xd012, gbc.sp());
        EXPECT(0x2326, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 1D 0396
        gbc.setState(0xc03c, 0xd3d6, 0x19b0, 0x1c68, 0x599, 0x92b3, 0x0, 0x0);
        gbc.writeMem(0xc03c, { 0x1d });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0xd3d6, gbc.sp());
        EXPECT(0xc03d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1d, gbc.readMem(0xc03c));
        // 1D 0397
        gbc.setState(0x984e, 0x6152, 0xc1a0, 0x12c7, 0x9298, 0xd9bb, 0x1, 0x1);
        gbc.writeMem(0x984e, { 0x1d });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x6152, gbc.sp());
        EXPECT(0x984f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1d, gbc.readMem(0x984e));
        // 1D 0398
        gbc.setState(0xe0ea, 0x6bda, 0x50c0, 0x7bfc, 0xf96c, 0xb8ad, 0x0, 0x1);
        gbc.writeMem(0xe0ea, { 0x1d });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x6bda, gbc.sp());
        EXPECT(0xe0eb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1d, gbc.readMem(0xe0ea));
        // 1D 0399
        gbc.setState(0xdb8e, 0xe79f, 0x8f30, 0xd799, 0xadab, 0xf4d2, 0x0, 0x0);
        gbc.writeMem(0xdb8e, { 0x1d });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0xe79f, gbc.sp());
        EXPECT(0xdb8f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1d, gbc.readMem(0xdb8e));
        // 1D 039A
        gbc.setState(0xb92b, 0x6a0e, 0x8a40, 0x8a9b, 0xbddd, 0x7e25, 0x0, 0x1);
        gbc.writeMem(0xb92b, { 0x1d });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x6a0e, gbc.sp());
        EXPECT(0xb92c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1d, gbc.readMem(0xb92b));
        // 1D 039B
        gbc.setState(0x77ba, 0x18a9, 0x3630, 0x231, 0xf721, 0x6849, 0x0, 0x0);
        gbc.writeMem(0x77ba, { 0x1d });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x18a9, gbc.sp());
        EXPECT(0x77bb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 1D 039C
        gbc.setState(0xc30f, 0xa3dd, 0xe1e0, 0x4d26, 0x19f2, 0x44e9, 0x0, 0x1);
        gbc.writeMem(0xc30f, { 0x1d });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0xa3dd, gbc.sp());
        EXPECT(0xc310, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1d, gbc.readMem(0xc30f));
        // 1D 039D
        gbc.setState(0xc88e, 0x7f31, 0xce50, 0xb89e, 0xa5dc, 0x4f8f, 0x1, 0x0);
        gbc.writeMem(0xc88e, { 0x1d });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x7f31, gbc.sp());
        EXPECT(0xc88f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1d, gbc.readMem(0xc88e));
        // 1D 039E
        gbc.setState(0x7820, 0x651e, 0x3300, 0xfdef, 0xccee, 0x44b8, 0x1, 0x0);
        gbc.writeMem(0x7820, { 0x1d });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x651e, gbc.sp());
        EXPECT(0x7821, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 1D 039F
        gbc.setState(0xefb0, 0xba29, 0x7b30, 0x9bb6, 0xe236, 0xb250, 0x0, 0x1);
        gbc.writeMem(0xefb0, { 0x1d });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0xba29, gbc.sp());
        EXPECT(0xefb1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1d, gbc.readMem(0xefb0));
        // 1D 03A0
        gbc.setState(0xcb6f, 0xe527, 0xb2a0, 0xa0e, 0x29b2, 0xd6df, 0x1, 0x1);
        gbc.writeMem(0xcb6f, { 0x1d });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0xe527, gbc.sp());
        EXPECT(0xcb70, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1d, gbc.readMem(0xcb6f));
        // 1D 03A1
        gbc.setState(0xda53, 0xff50, 0xea30, 0x1815, 0x94d1, 0x6304, 0x0, 0x1);
        gbc.writeMem(0xda53, { 0x1d });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0xff50, gbc.sp());
        EXPECT(0xda54, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1d, gbc.readMem(0xda53));
        // 1D 03A2
        gbc.setState(0x403f, 0xd16c, 0x5f20, 0x57f2, 0x5f17, 0x5fc1, 0x1, 0x0);
        gbc.writeMem(0x403f, { 0x1d });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0xd16c, gbc.sp());
        EXPECT(0x4040, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 1D 03A3
        gbc.setState(0x99eb, 0x1ceb, 0x8c20, 0xf6a2, 0xa08e, 0xf8a4, 0x1, 0x1);
        gbc.writeMem(0x99eb, { 0x1d });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x1ceb, gbc.sp());
        EXPECT(0x99ec, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1d, gbc.readMem(0x99eb));
        // 1D 03A4
        gbc.setState(0x5354, 0x954d, 0xa870, 0x79d3, 0x1984, 0xe199, 0x1, 0x0);
        gbc.writeMem(0x5354, { 0x1d });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x954d, gbc.sp());
        EXPECT(0x5355, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 1D 03A5
        gbc.setState(0x2895, 0x4205, 0xae30, 0xeffa, 0x27c4, 0x3a56, 0x1, 0x0);
        gbc.writeMem(0x2895, { 0x1d });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0x4205, gbc.sp());
        EXPECT(0x2896, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 1D 03A6
        gbc.setState(0x24eb, 0x8bc3, 0x72a0, 0xe33e, 0xd761, 0x2125, 0x0, 0x0);
        gbc.writeMem(0x24eb, { 0x1d });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x8bc3, gbc.sp());
        EXPECT(0x24ec, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 1D 03A7
        gbc.setState(0xa224, 0x562a, 0xaac0, 0x835f, 0x87fa, 0xe824, 0x1, 0x0);
        gbc.writeMem(0xa224, { 0x1d });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x562a, gbc.sp());
        EXPECT(0xa225, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1d, gbc.readMem(0xa224));
        // 1D 03A8
        gbc.setState(0x248b, 0x79ef, 0x1fb0, 0x8c4b, 0x8c8a, 0x465b, 0x1, 0x0);
        gbc.writeMem(0x248b, { 0x1d });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x79ef, gbc.sp());
        EXPECT(0x248c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 1D 03A9
        gbc.setState(0x8474, 0x3642, 0xbc80, 0xcb00, 0x92c3, 0x7509, 0x0, 0x1);
        gbc.writeMem(0x8474, { 0x1d });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x3642, gbc.sp());
        EXPECT(0x8475, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1d, gbc.readMem(0x8474));
        // 1D 03AA
        gbc.setState(0xe128, 0x4d60, 0x37f0, 0xf920, 0x458f, 0xbd0b, 0x0, 0x1);
        gbc.writeMem(0xe128, { 0x1d });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x4d60, gbc.sp());
        EXPECT(0xe129, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1d, gbc.readMem(0xe128));
        // 1D 03AB
        gbc.setState(0x2ae2, 0xd6a8, 0xca00, 0xd1a1, 0x645a, 0x5ca7, 0x1, 0x0);
        gbc.writeMem(0x2ae2, { 0x1d });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0xd6a8, gbc.sp());
        EXPECT(0x2ae3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 1D 03AC
        gbc.setState(0x347e, 0xf468, 0x4da0, 0x579, 0xe290, 0x6bf1, 0x1, 0x0);
        gbc.writeMem(0x347e, { 0x1d });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0xf468, gbc.sp());
        EXPECT(0x347f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 1D 03AD
        gbc.setState(0x15d5, 0xcefb, 0xc60, 0x6396, 0xf8ad, 0x10d0, 0x0, 0x1);
        gbc.writeMem(0x15d5, { 0x1d });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0xcefb, gbc.sp());
        EXPECT(0x15d6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 1D 03AE
        gbc.setState(0x6998, 0x9c82, 0x6600, 0x85f, 0xcf0f, 0x60d3, 0x1, 0x1);
        gbc.writeMem(0x6998, { 0x1d });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x9c82, gbc.sp());
        EXPECT(0x6999, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 1D 03AF
        gbc.setState(0xcb2e, 0xabc2, 0xf940, 0xf57d, 0xa403, 0xb638, 0x0, 0x0);
        gbc.writeMem(0xcb2e, { 0x1d });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0xabc2, gbc.sp());
        EXPECT(0xcb2f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1d, gbc.readMem(0xcb2e));
        // 1D 03B0
        gbc.setState(0xbbb1, 0x8e0a, 0x58c0, 0xc25a, 0x2977, 0x687e, 0x1, 0x0);
        gbc.writeMem(0xbbb1, { 0x1d });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0x8e0a, gbc.sp());
        EXPECT(0xbbb2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1d, gbc.readMem(0xbbb1));
        // 1D 03B2
        gbc.setState(0x43b, 0xc30d, 0x9d70, 0xd46a, 0xa1d8, 0x3b10, 0x0, 0x0);
        gbc.writeMem(0x43b, { 0x1d });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0xc30d, gbc.sp());
        EXPECT(0x43c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 1D 03B3
        gbc.setState(0x2e7f, 0x2dd3, 0xd890, 0x4f0b, 0x3267, 0xf702, 0x1, 0x1);
        gbc.writeMem(0x2e7f, { 0x1d });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x2dd3, gbc.sp());
        EXPECT(0x2e80, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 1D 03B4
        gbc.setState(0x69ce, 0xf7b6, 0xba70, 0x66d7, 0xd0d9, 0x5dde, 0x0, 0x1);
        gbc.writeMem(0x69ce, { 0x1d });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0xf7b6, gbc.sp());
        EXPECT(0x69cf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 1D 03B5
        gbc.setState(0xe1fd, 0x80ed, 0xfcf0, 0x5d9, 0x99dd, 0x5d0b, 0x1, 0x1);
        gbc.writeMem(0xe1fd, { 0x1d });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x80ed, gbc.sp());
        EXPECT(0xe1fe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1d, gbc.readMem(0xe1fd));
        // 1D 03B6
        gbc.setState(0x1ba6, 0x7629, 0x3f90, 0x5ab9, 0x430, 0xe6ea, 0x0, 0x0);
        gbc.writeMem(0x1ba6, { 0x1d });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x7629, gbc.sp());
        EXPECT(0x1ba7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 1D 03B7
        gbc.setState(0x76ea, 0x55de, 0x85f0, 0x47c3, 0x7e67, 0x8cf8, 0x0, 0x1);
        gbc.writeMem(0x76ea, { 0x1d });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x55de, gbc.sp());
        EXPECT(0x76eb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 1D 03B8
        gbc.setState(0xd0a2, 0x4bba, 0x9630, 0x4d4b, 0x3f26, 0xd8cb, 0x1, 0x1);
        gbc.writeMem(0xd0a2, { 0x1d });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x4bba, gbc.sp());
        EXPECT(0xd0a3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1d, gbc.readMem(0xd0a2));
        // 1D 03B9
        gbc.setState(0x360d, 0xc6ca, 0xd1c0, 0xdde1, 0x6b9d, 0x336, 0x1, 0x1);
        gbc.writeMem(0x360d, { 0x1d });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0xc6ca, gbc.sp());
        EXPECT(0x360e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 1D 03BB
        gbc.setState(0x7920, 0xe26c, 0x9360, 0xede, 0x990c, 0xc6b, 0x0, 0x0);
        gbc.writeMem(0x7920, { 0x1d });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0xe26c, gbc.sp());
        EXPECT(0x7921, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 1D 03BC
        gbc.setState(0xc11f, 0x8a86, 0x2900, 0xf301, 0xc5ca, 0x62ad, 0x1, 0x1);
        gbc.writeMem(0xc11f, { 0x1d });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x8a86, gbc.sp());
        EXPECT(0xc120, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1d, gbc.readMem(0xc11f));
        // 1D 03BE
        gbc.setState(0x91c2, 0x9a1e, 0xc370, 0x6497, 0x9887, 0x931, 0x0, 0x1);
        gbc.writeMem(0x91c2, { 0x1d });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x9a1e, gbc.sp());
        EXPECT(0x91c3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1d, gbc.readMem(0x91c2));
        // 1D 03BF
        gbc.setState(0x4d98, 0xdc7d, 0x2340, 0x693d, 0x2165, 0xdc8b, 0x1, 0x0);
        gbc.writeMem(0x4d98, { 0x1d });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0xdc7d, gbc.sp());
        EXPECT(0x4d99, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 1D 03C0
        gbc.setState(0x3839, 0x1f1e, 0x4cc0, 0x8c74, 0x7b73, 0x4c52, 0x0, 0x0);
        gbc.writeMem(0x3839, { 0x1d });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x1f1e, gbc.sp());
        EXPECT(0x383a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 1D 03C1
        gbc.setState(0xcaf3, 0x42bb, 0xe4d0, 0x73b7, 0x8c4d, 0x45f2, 0x1, 0x1);
        gbc.writeMem(0xcaf3, { 0x1d });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x42bb, gbc.sp());
        EXPECT(0xcaf4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1d, gbc.readMem(0xcaf3));
        // 1D 03C2
        gbc.setState(0x5660, 0x15ea, 0x4d90, 0x7c47, 0x362, 0xb75b, 0x1, 0x0);
        gbc.writeMem(0x5660, { 0x1d });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x15ea, gbc.sp());
        EXPECT(0x5661, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 1D 03C3
        gbc.setState(0x8d2f, 0x6acb, 0x29f0, 0x3cec, 0x87ac, 0xb014, 0x1, 0x1);
        gbc.writeMem(0x8d2f, { 0x1d });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x6acb, gbc.sp());
        EXPECT(0x8d30, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1d, gbc.readMem(0x8d2f));
        // 1D 03C4
        gbc.setState(0x7bad, 0x920c, 0x5b60, 0xea01, 0x96ff, 0xedf5, 0x1, 0x0);
        gbc.writeMem(0x7bad, { 0x1d });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x920c, gbc.sp());
        EXPECT(0x7bae, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 1D 03C5
        gbc.setState(0x7a7f, 0x73, 0xd410, 0x5dd2, 0x415e, 0xc875, 0x1, 0x0);
        gbc.writeMem(0x7a7f, { 0x1d });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x73, gbc.sp());
        EXPECT(0x7a80, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 1D 03C6
        gbc.setState(0xb813, 0x2c40, 0x6690, 0x1ad9, 0x4076, 0x9fd2, 0x0, 0x0);
        gbc.writeMem(0xb813, { 0x1d });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x2c40, gbc.sp());
        EXPECT(0xb814, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1d, gbc.readMem(0xb813));
        // 1D 03C7
        gbc.setState(0xb5a3, 0xf9df, 0xd170, 0xaca4, 0x2da, 0x4096, 0x0, 0x0);
        gbc.writeMem(0xb5a3, { 0x1d });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0xf9df, gbc.sp());
        EXPECT(0xb5a4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1d, gbc.readMem(0xb5a3));
        // 1D 03C8
        gbc.setState(0xb45d, 0x1429, 0x4160, 0x2913, 0x1f0f, 0x35c4, 0x1, 0x1);
        gbc.writeMem(0xb45d, { 0x1d });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x1429, gbc.sp());
        EXPECT(0xb45e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1d, gbc.readMem(0xb45d));
        // 1D 03C9
        gbc.setState(0x8353, 0xa36c, 0xa4e0, 0x10e2, 0xfcd0, 0xa79e, 0x0, 0x1);
        gbc.writeMem(0x8353, { 0x1d });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0xa36c, gbc.sp());
        EXPECT(0x8354, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1d, gbc.readMem(0x8353));
        // 1D 03CA
        gbc.setState(0xb67f, 0x9e1b, 0xdb40, 0xb8e7, 0xdb43, 0x609f, 0x1, 0x1);
        gbc.writeMem(0xb67f, { 0x1d });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x9e1b, gbc.sp());
        EXPECT(0xb680, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1d, gbc.readMem(0xb67f));
        // 1D 03CB
        gbc.setState(0xeca7, 0x9354, 0x47f0, 0x2e86, 0xb079, 0x5914, 0x0, 0x1);
        gbc.writeMem(0xeca7, { 0x1d });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x9354, gbc.sp());
        EXPECT(0xeca8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1d, gbc.readMem(0xeca7));
        // 1D 03CC
        gbc.setState(0x574d, 0x6c33, 0x7f20, 0xab69, 0x8917, 0x66a5, 0x1, 0x0);
        gbc.writeMem(0x574d, { 0x1d });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x6c33, gbc.sp());
        EXPECT(0x574e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 1D 03CD
        gbc.setState(0x9339, 0x8e4c, 0x96d0, 0x52c1, 0xed31, 0x3078, 0x1, 0x0);
        gbc.writeMem(0x9339, { 0x1d });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x8e4c, gbc.sp());
        EXPECT(0x933a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1d, gbc.readMem(0x9339));
        // 1D 03CE
        gbc.setState(0xa066, 0x39fe, 0x5410, 0xe06b, 0x496, 0x3f0, 0x1, 0x0);
        gbc.writeMem(0xa066, { 0x1d });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x39fe, gbc.sp());
        EXPECT(0xa067, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1d, gbc.readMem(0xa066));
        // 1D 03CF
        gbc.setState(0x7935, 0xc975, 0x1d70, 0xa952, 0x17ba, 0x45eb, 0x1, 0x0);
        gbc.writeMem(0x7935, { 0x1d });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0xc975, gbc.sp());
        EXPECT(0x7936, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 1D 03D0
        gbc.setState(0x2917, 0x1100, 0x5a10, 0x6191, 0x703a, 0xebc4, 0x1, 0x0);
        gbc.writeMem(0x2917, { 0x1d });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x1100, gbc.sp());
        EXPECT(0x2918, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 1D 03D1
        gbc.setState(0x9cd1, 0xb403, 0xbf30, 0x3a42, 0x4bab, 0x6356, 0x1, 0x1);
        gbc.writeMem(0x9cd1, { 0x1d });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0xb403, gbc.sp());
        EXPECT(0x9cd2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1d, gbc.readMem(0x9cd1));
        // 1D 03D2
        gbc.setState(0xab54, 0x1396, 0x2870, 0x7529, 0x98f2, 0x5d68, 0x1, 0x1);
        gbc.writeMem(0xab54, { 0x1d });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x1396, gbc.sp());
        EXPECT(0xab55, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1d, gbc.readMem(0xab54));
        // 1D 03D3
        gbc.setState(0x40ac, 0x72cd, 0x9660, 0x10e2, 0xbbb4, 0x562d, 0x0, 0x0);
        gbc.writeMem(0x40ac, { 0x1d });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x72cd, gbc.sp());
        EXPECT(0x40ad, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 1D 03D5
        gbc.setState(0x9fe9, 0x226f, 0x7e10, 0xc260, 0x5709, 0x4d77, 0x1, 0x1);
        gbc.writeMem(0x9fe9, { 0x1d });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x226f, gbc.sp());
        EXPECT(0x9fea, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1d, gbc.readMem(0x9fe9));
        // 1D 03D6
        gbc.setState(0xea51, 0xa555, 0x1410, 0xebba, 0xda68, 0x2841, 0x0, 0x0);
        gbc.writeMem(0xea51, { 0x1d });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0xa555, gbc.sp());
        EXPECT(0xea52, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1d, gbc.readMem(0xea51));
        // 1D 03D7
        gbc.setState(0x3217, 0x3d0e, 0x1f10, 0xfd68, 0xba1, 0x225a, 0x1, 0x0);
        gbc.writeMem(0x3217, { 0x1d });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x3d0e, gbc.sp());
        EXPECT(0x3218, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 1D 03D8
        gbc.setState(0x75e4, 0x25d4, 0x3a30, 0xb385, 0x4a25, 0x11a0, 0x0, 0x1);
        gbc.writeMem(0x75e4, { 0x1d });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x25d4, gbc.sp());
        EXPECT(0x75e5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 1D 03D9
        gbc.setState(0xd690, 0x7924, 0x4670, 0x52db, 0x884, 0x576b, 0x1, 0x1);
        gbc.writeMem(0xd690, { 0x1d });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x7924, gbc.sp());
        EXPECT(0xd691, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1d, gbc.readMem(0xd690));
        // 1D 03DA
        gbc.setState(0x33d5, 0x4e9c, 0xfae0, 0xb932, 0x17e5, 0x3e9e, 0x0, 0x1);
        gbc.writeMem(0x33d5, { 0x1d });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x4e9c, gbc.sp());
        EXPECT(0x33d6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 1D 03DB
        gbc.setState(0xbfae, 0x7ed9, 0x9ae0, 0xbf12, 0x43ac, 0xbbe8, 0x0, 0x1);
        gbc.writeMem(0xbfae, { 0x1d });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x7ed9, gbc.sp());
        EXPECT(0xbfaf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1d, gbc.readMem(0xbfae));
        // 1D 03DC
        gbc.setState(0x4998, 0xdd40, 0x73a0, 0x7825, 0x4084, 0xce6a, 0x1, 0x1);
        gbc.writeMem(0x4998, { 0x1d });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0xdd40, gbc.sp());
        EXPECT(0x4999, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 1D 03DD
        gbc.setState(0xd1cf, 0x53d7, 0xd360, 0xa02f, 0x5000, 0x9ff6, 0x1, 0x1);
        gbc.writeMem(0xd1cf, { 0x1d });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x53d7, gbc.sp());
        EXPECT(0xd1d0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1d, gbc.readMem(0xd1cf));
        // 1D 03DE
        gbc.setState(0x563d, 0x1b48, 0x7b60, 0xcd6c, 0xf047, 0x977e, 0x1, 0x0);
        gbc.writeMem(0x563d, { 0x1d });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0x1b48, gbc.sp());
        EXPECT(0x563e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 1D 03E0
        gbc.setState(0x483f, 0x8162, 0xb030, 0x76a1, 0x24a6, 0x6daf, 0x0, 0x0);
        gbc.writeMem(0x483f, { 0x1d });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x8162, gbc.sp());
        EXPECT(0x4840, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 1D 03E1
        gbc.setState(0xbb44, 0xcdcf, 0xf3e0, 0x4caa, 0x9184, 0x45c6, 0x0, 0x1);
        gbc.writeMem(0xbb44, { 0x1d });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0xcdcf, gbc.sp());
        EXPECT(0xbb45, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1d, gbc.readMem(0xbb44));
        // 1D 03E3
        gbc.setState(0x2ed3, 0xee8, 0xf7d0, 0xfa6, 0x6e38, 0x28e3, 0x1, 0x1);
        gbc.writeMem(0x2ed3, { 0x1d });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0xee8, gbc.sp());
        EXPECT(0x2ed4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 1D 03E4
        gbc.setState(0xbd2, 0xec2f, 0xaaa0, 0xcc57, 0xf375, 0xf983, 0x1, 0x1);
        gbc.writeMem(0xbd2, { 0x1d });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0xec2f, gbc.sp());
        EXPECT(0xbd3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 1D 03E5
        gbc.setState(0xcde2, 0xc366, 0x55c0, 0x380b, 0xa65f, 0x5271, 0x0, 0x0);
        gbc.writeMem(0xcde2, { 0x1d });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0xc366, gbc.sp());
        EXPECT(0xcde3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1d, gbc.readMem(0xcde2));
        // 1D 03E6
        gbc.setState(0x32ce, 0xbc72, 0xe960, 0xe3a2, 0x6f13, 0x711, 0x1, 0x1);
        gbc.writeMem(0x32ce, { 0x1d });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0xbc72, gbc.sp());
        EXPECT(0x32cf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 1D 03E7
        gbc.setState(0xbc16, 0x3e81, 0x1be0, 0xb58b, 0x398, 0x6504, 0x1, 0x1);
        gbc.writeMem(0xbc16, { 0x1d });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x3e81, gbc.sp());
        EXPECT(0xbc17, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1d, gbc.readMem(0xbc16));
    }
