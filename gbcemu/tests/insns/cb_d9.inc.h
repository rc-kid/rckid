    TEST(gbcemu, opcode_cb_d9) {
        GBCEmu gbc{"", nullptr};
        uint8_t cartridge[0x8000];
        cartridge[0x149] = 0x02; // 8kb external RAM
        gbc.loadCartridge(new FlashGamePak(cartridge));
        // CB D9 0000
        gbc.setState(0xd87b, 0x7aa5, 0xfb40, 0x4c3, 0x57f1, 0x1cec, 0x0, 0x0);
        gbc.writeMem(0xd87b, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x7aa5, gbc.sp());
        EXPECT(0xd87d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd87b));
        EXPECT(0xd9, gbc.readMem(0xd87c));
        // CB D9 0001
        gbc.setState(0xc6db, 0x6612, 0xe060, 0x99b8, 0xcaf, 0x592f, 0x0, 0x1);
        gbc.writeMem(0xc6db, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x6612, gbc.sp());
        EXPECT(0xc6dd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc6db));
        EXPECT(0xd9, gbc.readMem(0xc6dc));
        // CB D9 0002
        gbc.setState(0xd3df, 0x45c1, 0xdcf0, 0xc51d, 0xe3c9, 0xfc1c, 0x1, 0x1);
        gbc.writeMem(0xd3df, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x45c1, gbc.sp());
        EXPECT(0xd3e1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd3df));
        EXPECT(0xd9, gbc.readMem(0xd3e0));
        // CB D9 0003
        gbc.setState(0xb411, 0x7232, 0xbed0, 0x8b4d, 0x8a61, 0x215f, 0x0, 0x1);
        gbc.writeMem(0xb411, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x7232, gbc.sp());
        EXPECT(0xb413, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb411));
        EXPECT(0xd9, gbc.readMem(0xb412));
        // CB D9 0004
        gbc.setState(0xd25d, 0xbcc0, 0x1ae0, 0x444e, 0x6359, 0xc0f5, 0x1, 0x1);
        gbc.writeMem(0xd25d, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0xbcc0, gbc.sp());
        EXPECT(0xd25f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd25d));
        EXPECT(0xd9, gbc.readMem(0xd25e));
        // CB D9 0005
        gbc.setState(0xd631, 0x6637, 0x2190, 0x91b2, 0x26c3, 0x15d6, 0x1, 0x1);
        gbc.writeMem(0xd631, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x6637, gbc.sp());
        EXPECT(0xd633, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd631));
        EXPECT(0xd9, gbc.readMem(0xd632));
        // CB D9 0006
        gbc.setState(0xbdf2, 0x39a4, 0x2760, 0x654c, 0x593f, 0xacb0, 0x0, 0x1);
        gbc.writeMem(0xbdf2, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x39a4, gbc.sp());
        EXPECT(0xbdf4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbdf2));
        EXPECT(0xd9, gbc.readMem(0xbdf3));
        // CB D9 0007
        gbc.setState(0x733e, 0x9c9a, 0xbd60, 0x5650, 0xe5f7, 0x78fd, 0x0, 0x1);
        gbc.writeMem(0x733e, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x9c9a, gbc.sp());
        EXPECT(0x7340, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D9 0008
        gbc.setState(0x48a5, 0x7a89, 0x4780, 0xc4de, 0x2c34, 0x250a, 0x0, 0x1);
        gbc.writeMem(0x48a5, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x7a89, gbc.sp());
        EXPECT(0x48a7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D9 0009
        gbc.setState(0x1e51, 0x5292, 0x5380, 0x4291, 0x8310, 0x884f, 0x1, 0x0);
        gbc.writeMem(0x1e51, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x5292, gbc.sp());
        EXPECT(0x1e53, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D9 000A
        gbc.setState(0x1b6d, 0x833f, 0xea60, 0x7b51, 0xff95, 0x9a5a, 0x0, 0x0);
        gbc.writeMem(0x1b6d, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x833f, gbc.sp());
        EXPECT(0x1b6f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D9 000B
        gbc.setState(0xc570, 0x5388, 0x6570, 0x6acc, 0xd6b5, 0xe4f3, 0x0, 0x0);
        gbc.writeMem(0xc570, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x5388, gbc.sp());
        EXPECT(0xc572, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc570));
        EXPECT(0xd9, gbc.readMem(0xc571));
        // CB D9 000C
        gbc.setState(0x4326, 0x107b, 0xaf60, 0x47c2, 0x98cf, 0xd50a, 0x1, 0x0);
        gbc.writeMem(0x4326, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x107b, gbc.sp());
        EXPECT(0x4328, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D9 000D
        gbc.setState(0xa07b, 0xf971, 0x21b0, 0x58c1, 0x5333, 0x9ab7, 0x1, 0x0);
        gbc.writeMem(0xa07b, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0xf971, gbc.sp());
        EXPECT(0xa07d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa07b));
        EXPECT(0xd9, gbc.readMem(0xa07c));
        // CB D9 000E
        gbc.setState(0x60c4, 0xc944, 0x4280, 0xe4b1, 0x5902, 0xe158, 0x0, 0x1);
        gbc.writeMem(0x60c4, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0xc944, gbc.sp());
        EXPECT(0x60c6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D9 000F
        gbc.setState(0x4586, 0xf813, 0x2e90, 0x1838, 0xbb62, 0xc9af, 0x1, 0x0);
        gbc.writeMem(0x4586, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0xf813, gbc.sp());
        EXPECT(0x4588, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D9 0010
        gbc.setState(0xecd4, 0x388c, 0xf2d0, 0xf365, 0xa411, 0x3b87, 0x1, 0x1);
        gbc.writeMem(0xecd4, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x388c, gbc.sp());
        EXPECT(0xecd6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xecd4));
        EXPECT(0xd9, gbc.readMem(0xecd5));
        // CB D9 0011
        gbc.setState(0xce5d, 0xf48, 0x7030, 0xcda4, 0xe440, 0x5027, 0x1, 0x0);
        gbc.writeMem(0xce5d, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0xf48, gbc.sp());
        EXPECT(0xce5f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xce5d));
        EXPECT(0xd9, gbc.readMem(0xce5e));
        // CB D9 0012
        gbc.setState(0xb32f, 0x1ad2, 0xb050, 0x2569, 0x2975, 0x45b, 0x0, 0x0);
        gbc.writeMem(0xb32f, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x1ad2, gbc.sp());
        EXPECT(0xb331, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb32f));
        EXPECT(0xd9, gbc.readMem(0xb330));
        // CB D9 0014
        gbc.setState(0x212b, 0x66e9, 0x660, 0xb026, 0x2a86, 0xc546, 0x1, 0x0);
        gbc.writeMem(0x212b, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x66e9, gbc.sp());
        EXPECT(0x212d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D9 0015
        gbc.setState(0x5826, 0x66c7, 0x4dd0, 0x6d39, 0x6bb8, 0xcc65, 0x1, 0x0);
        gbc.writeMem(0x5826, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x66c7, gbc.sp());
        EXPECT(0x5828, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D9 0016
        gbc.setState(0x8521, 0x9868, 0x7ed0, 0xa71f, 0x366a, 0x13e6, 0x1, 0x0);
        gbc.writeMem(0x8521, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x9868, gbc.sp());
        EXPECT(0x8523, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8521));
        EXPECT(0xd9, gbc.readMem(0x8522));
        // CB D9 0017
        gbc.setState(0x323d, 0xd67e, 0x75f0, 0x41f2, 0x5a95, 0x1672, 0x1, 0x0);
        gbc.writeMem(0x323d, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0xd67e, gbc.sp());
        EXPECT(0x323f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D9 0018
        gbc.setState(0x29e, 0x4b9b, 0x7ef0, 0x724d, 0xeac5, 0xbf11, 0x1, 0x0);
        gbc.writeMem(0x29e, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x4b9b, gbc.sp());
        EXPECT(0x2a0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D9 0019
        gbc.setState(0xae4f, 0x91ad, 0xe2b0, 0x8dca, 0xf6a1, 0x2cc1, 0x1, 0x1);
        gbc.writeMem(0xae4f, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x91ad, gbc.sp());
        EXPECT(0xae51, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xae4f));
        EXPECT(0xd9, gbc.readMem(0xae50));
        // CB D9 001A
        gbc.setState(0x6433, 0xf398, 0x99e0, 0x4361, 0x1e02, 0xf981, 0x1, 0x0);
        gbc.writeMem(0x6433, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0xf398, gbc.sp());
        EXPECT(0x6435, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D9 001B
        gbc.setState(0x60dc, 0xc713, 0xc070, 0x79b, 0x2a05, 0xec4, 0x0, 0x1);
        gbc.writeMem(0x60dc, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0xc713, gbc.sp());
        EXPECT(0x60de, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D9 001C
        gbc.setState(0x4eae, 0xcde3, 0x51b0, 0x8b36, 0x4fb5, 0xcd62, 0x1, 0x1);
        gbc.writeMem(0x4eae, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0xcde3, gbc.sp());
        EXPECT(0x4eb0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D9 001D
        gbc.setState(0xc137, 0x716e, 0x5d00, 0x5884, 0x8f1a, 0xe604, 0x0, 0x0);
        gbc.writeMem(0xc137, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x716e, gbc.sp());
        EXPECT(0xc139, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc137));
        EXPECT(0xd9, gbc.readMem(0xc138));
        // CB D9 001E
        gbc.setState(0x2267, 0x5bf3, 0x9d20, 0x1062, 0x5cc, 0x2cea, 0x1, 0x0);
        gbc.writeMem(0x2267, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x5bf3, gbc.sp());
        EXPECT(0x2269, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D9 001F
        gbc.setState(0xf88, 0x52eb, 0x9ec0, 0x1fcc, 0xd456, 0xa472, 0x0, 0x0);
        gbc.writeMem(0xf88, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x52eb, gbc.sp());
        EXPECT(0xf8a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D9 0020
        gbc.setState(0xc366, 0xbc1d, 0x6440, 0x8d90, 0x834a, 0x61ed, 0x0, 0x1);
        gbc.writeMem(0xc366, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0xbc1d, gbc.sp());
        EXPECT(0xc368, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc366));
        EXPECT(0xd9, gbc.readMem(0xc367));
        // CB D9 0021
        gbc.setState(0x9097, 0x246c, 0xb870, 0x82e0, 0x1c25, 0xe1e6, 0x1, 0x1);
        gbc.writeMem(0x9097, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x246c, gbc.sp());
        EXPECT(0x9099, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9097));
        EXPECT(0xd9, gbc.readMem(0x9098));
        // CB D9 0022
        gbc.setState(0xe39e, 0x711a, 0x3d0, 0xea30, 0x3180, 0x6093, 0x1, 0x0);
        gbc.writeMem(0xe39e, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0x711a, gbc.sp());
        EXPECT(0xe3a0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe39e));
        EXPECT(0xd9, gbc.readMem(0xe39f));
        // CB D9 0023
        gbc.setState(0x7464, 0x618b, 0xccd0, 0xe26c, 0x1c5d, 0x4e3b, 0x1, 0x0);
        gbc.writeMem(0x7464, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x618b, gbc.sp());
        EXPECT(0x7466, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D9 0024
        gbc.setState(0x2264, 0x961b, 0xbd80, 0x6bb6, 0x5307, 0x8be, 0x0, 0x0);
        gbc.writeMem(0x2264, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0x961b, gbc.sp());
        EXPECT(0x2266, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D9 0025
        gbc.setState(0x3090, 0xb273, 0x6700, 0xf669, 0x224f, 0x34fa, 0x1, 0x0);
        gbc.writeMem(0x3090, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0xb273, gbc.sp());
        EXPECT(0x3092, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D9 0026
        gbc.setState(0x30c3, 0x70d6, 0x48c0, 0x902e, 0x84d1, 0xecb6, 0x1, 0x1);
        gbc.writeMem(0x30c3, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x70d6, gbc.sp());
        EXPECT(0x30c5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D9 0027
        gbc.setState(0x4042, 0xb65d, 0x2960, 0xccd2, 0xbac2, 0xef3a, 0x1, 0x0);
        gbc.writeMem(0x4042, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0xb65d, gbc.sp());
        EXPECT(0x4044, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D9 0028
        gbc.setState(0x60f1, 0x97b3, 0x66b0, 0x4f9f, 0xa718, 0x9fc9, 0x0, 0x1);
        gbc.writeMem(0x60f1, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x97b3, gbc.sp());
        EXPECT(0x60f3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D9 0029
        gbc.setState(0xd0c1, 0xeec7, 0xfac0, 0x4b5f, 0x6b41, 0x7502, 0x1, 0x0);
        gbc.writeMem(0xd0c1, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0xeec7, gbc.sp());
        EXPECT(0xd0c3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd0c1));
        EXPECT(0xd9, gbc.readMem(0xd0c2));
        // CB D9 002A
        gbc.setState(0x95cb, 0xfc90, 0xd440, 0xc693, 0x1b84, 0xcb5c, 0x1, 0x0);
        gbc.writeMem(0x95cb, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0xfc90, gbc.sp());
        EXPECT(0x95cd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x95cb));
        EXPECT(0xd9, gbc.readMem(0x95cc));
        // CB D9 002B
        gbc.setState(0x84b2, 0x1bea, 0x3590, 0xe19c, 0xde1b, 0x1c73, 0x1, 0x1);
        gbc.writeMem(0x84b2, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x1bea, gbc.sp());
        EXPECT(0x84b4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x84b2));
        EXPECT(0xd9, gbc.readMem(0x84b3));
        // CB D9 002C
        gbc.setState(0x65ae, 0xc99d, 0xa160, 0x73e7, 0x9342, 0x5855, 0x0, 0x1);
        gbc.writeMem(0x65ae, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0xc99d, gbc.sp());
        EXPECT(0x65b0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D9 002D
        gbc.setState(0x7b68, 0xb5a4, 0x2f00, 0xc5a5, 0xc3cb, 0x3ed2, 0x0, 0x0);
        gbc.writeMem(0x7b68, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0xb5a4, gbc.sp());
        EXPECT(0x7b6a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D9 002E
        gbc.setState(0x986f, 0x4aa9, 0xfbc0, 0x6955, 0xc5c3, 0xb4c0, 0x1, 0x1);
        gbc.writeMem(0x986f, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x4aa9, gbc.sp());
        EXPECT(0x9871, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x986f));
        EXPECT(0xd9, gbc.readMem(0x9870));
        // CB D9 002F
        gbc.setState(0xd693, 0x2b6b, 0x32e0, 0x2fb0, 0xeefa, 0xbf92, 0x0, 0x0);
        gbc.writeMem(0xd693, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x2b6b, gbc.sp());
        EXPECT(0xd695, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd693));
        EXPECT(0xd9, gbc.readMem(0xd694));
        // CB D9 0030
        gbc.setState(0x8368, 0x7e88, 0xca10, 0xff09, 0xa28e, 0x280a, 0x0, 0x1);
        gbc.writeMem(0x8368, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x7e88, gbc.sp());
        EXPECT(0x836a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8368));
        EXPECT(0xd9, gbc.readMem(0x8369));
        // CB D9 0031
        gbc.setState(0x28f6, 0x2923, 0x5330, 0xbb9a, 0x5e6b, 0xa9c3, 0x1, 0x1);
        gbc.writeMem(0x28f6, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x2923, gbc.sp());
        EXPECT(0x28f8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D9 0032
        gbc.setState(0x3db7, 0xd9be, 0x3ae0, 0x6689, 0xa201, 0xd7a5, 0x0, 0x1);
        gbc.writeMem(0x3db7, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0xd9be, gbc.sp());
        EXPECT(0x3db9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D9 0033
        gbc.setState(0xb2d8, 0xdc2f, 0x72d0, 0xf908, 0x24a3, 0x1ac5, 0x0, 0x1);
        gbc.writeMem(0xb2d8, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0xdc2f, gbc.sp());
        EXPECT(0xb2da, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb2d8));
        EXPECT(0xd9, gbc.readMem(0xb2d9));
        // CB D9 0035
        gbc.setState(0x6b2a, 0x2e2d, 0x36b0, 0x69de, 0xa011, 0x2ff, 0x1, 0x1);
        gbc.writeMem(0x6b2a, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x2e2d, gbc.sp());
        EXPECT(0x6b2c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D9 0036
        gbc.setState(0xe1fb, 0x8692, 0x34f0, 0x106a, 0x897f, 0xf51e, 0x1, 0x1);
        gbc.writeMem(0xe1fb, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x8692, gbc.sp());
        EXPECT(0xe1fd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe1fb));
        EXPECT(0xd9, gbc.readMem(0xe1fc));
        // CB D9 0037
        gbc.setState(0x69e1, 0x7f2b, 0xbfb0, 0x4358, 0x3f2c, 0xa6eb, 0x0, 0x1);
        gbc.writeMem(0x69e1, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x7f2b, gbc.sp());
        EXPECT(0x69e3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D9 0038
        gbc.setState(0xc97d, 0x1950, 0x8e20, 0x86fe, 0x5ad0, 0x787d, 0x1, 0x1);
        gbc.writeMem(0xc97d, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x1950, gbc.sp());
        EXPECT(0xc97f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc97d));
        EXPECT(0xd9, gbc.readMem(0xc97e));
        // CB D9 0039
        gbc.setState(0x90db, 0xd228, 0x1d0, 0x53b7, 0xa9d5, 0x6ca1, 0x1, 0x0);
        gbc.writeMem(0x90db, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0xd228, gbc.sp());
        EXPECT(0x90dd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x90db));
        EXPECT(0xd9, gbc.readMem(0x90dc));
        // CB D9 003A
        gbc.setState(0xccaa, 0x3767, 0xdf80, 0xa03a, 0x8f43, 0xa7de, 0x1, 0x0);
        gbc.writeMem(0xccaa, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x3767, gbc.sp());
        EXPECT(0xccac, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xccaa));
        EXPECT(0xd9, gbc.readMem(0xccab));
        // CB D9 003B
        gbc.setState(0x8f2b, 0xc1be, 0x5dd0, 0x22fe, 0x3bb0, 0x971d, 0x1, 0x0);
        gbc.writeMem(0x8f2b, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0xc1be, gbc.sp());
        EXPECT(0x8f2d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8f2b));
        EXPECT(0xd9, gbc.readMem(0x8f2c));
        // CB D9 003D
        gbc.setState(0x1a29, 0xe515, 0xecb0, 0xfe2c, 0x3fdf, 0x1f3d, 0x1, 0x0);
        gbc.writeMem(0x1a29, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0xe515, gbc.sp());
        EXPECT(0x1a2b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D9 003F
        gbc.setState(0xdae1, 0xcc49, 0x72a0, 0x9d8, 0x9055, 0xeada, 0x0, 0x1);
        gbc.writeMem(0xdae1, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0xcc49, gbc.sp());
        EXPECT(0xdae3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdae1));
        EXPECT(0xd9, gbc.readMem(0xdae2));
        // CB D9 0040
        gbc.setState(0x9069, 0x6e1c, 0x35d0, 0x44ff, 0xd13c, 0x74e4, 0x0, 0x0);
        gbc.writeMem(0x9069, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x6e1c, gbc.sp());
        EXPECT(0x906b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9069));
        EXPECT(0xd9, gbc.readMem(0x906a));
        // CB D9 0041
        gbc.setState(0x2f12, 0x8cbe, 0x7470, 0xe5cc, 0x4864, 0xa81, 0x0, 0x0);
        gbc.writeMem(0x2f12, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x8cbe, gbc.sp());
        EXPECT(0x2f14, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D9 0042
        gbc.setState(0x77aa, 0x5238, 0x7850, 0x2d8d, 0x9e6b, 0x689, 0x1, 0x0);
        gbc.writeMem(0x77aa, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x5238, gbc.sp());
        EXPECT(0x77ac, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D9 0043
        gbc.setState(0x8e86, 0x7e3a, 0xb590, 0xa90, 0xb47f, 0x23d6, 0x0, 0x1);
        gbc.writeMem(0x8e86, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x7e3a, gbc.sp());
        EXPECT(0x8e88, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8e86));
        EXPECT(0xd9, gbc.readMem(0x8e87));
        // CB D9 0044
        gbc.setState(0x2c14, 0xe93d, 0x2720, 0xfefe, 0x5349, 0x24fd, 0x0, 0x0);
        gbc.writeMem(0x2c14, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0xe93d, gbc.sp());
        EXPECT(0x2c16, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D9 0045
        gbc.setState(0x345e, 0x1df8, 0x8700, 0x853f, 0xd7c4, 0x70b3, 0x0, 0x0);
        gbc.writeMem(0x345e, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x1df8, gbc.sp());
        EXPECT(0x3460, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D9 0046
        gbc.setState(0xb285, 0x9922, 0x8b50, 0xc955, 0x3345, 0x6ec2, 0x1, 0x0);
        gbc.writeMem(0xb285, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x9922, gbc.sp());
        EXPECT(0xb287, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb285));
        EXPECT(0xd9, gbc.readMem(0xb286));
        // CB D9 0047
        gbc.setState(0xcea8, 0x6237, 0x5380, 0x8b42, 0xf21, 0x15e4, 0x0, 0x1);
        gbc.writeMem(0xcea8, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x6237, gbc.sp());
        EXPECT(0xceaa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcea8));
        EXPECT(0xd9, gbc.readMem(0xcea9));
        // CB D9 0048
        gbc.setState(0x8d47, 0x57c9, 0xe6d0, 0xbb2b, 0x77d4, 0xabd9, 0x1, 0x1);
        gbc.writeMem(0x8d47, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x57c9, gbc.sp());
        EXPECT(0x8d49, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8d47));
        EXPECT(0xd9, gbc.readMem(0x8d48));
        // CB D9 0049
        gbc.setState(0xe9d7, 0x5d3c, 0xe620, 0xc3a7, 0x6b58, 0x556b, 0x0, 0x0);
        gbc.writeMem(0xe9d7, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x5d3c, gbc.sp());
        EXPECT(0xe9d9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe9d7));
        EXPECT(0xd9, gbc.readMem(0xe9d8));
        // CB D9 004A
        gbc.setState(0x5f0e, 0x563c, 0x7150, 0x9b18, 0xeaac, 0x9ee4, 0x0, 0x0);
        gbc.writeMem(0x5f0e, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x563c, gbc.sp());
        EXPECT(0x5f10, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D9 004B
        gbc.setState(0xcec1, 0x4060, 0xf200, 0x2aa, 0xfbae, 0xb8c7, 0x1, 0x0);
        gbc.writeMem(0xcec1, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x4060, gbc.sp());
        EXPECT(0xcec3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcec1));
        EXPECT(0xd9, gbc.readMem(0xcec2));
        // CB D9 004C
        gbc.setState(0xda4, 0x4bf4, 0xdad0, 0xf8e1, 0xdb94, 0x1505, 0x0, 0x0);
        gbc.writeMem(0xda4, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x4bf4, gbc.sp());
        EXPECT(0xda6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D9 004D
        gbc.setState(0xdee, 0x88dc, 0xaee0, 0xb419, 0xbcff, 0x61a4, 0x0, 0x0);
        gbc.writeMem(0xdee, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x88dc, gbc.sp());
        EXPECT(0xdf0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D9 004E
        gbc.setState(0x7d22, 0xc92d, 0x4910, 0x18aa, 0x7e51, 0x9b7, 0x0, 0x1);
        gbc.writeMem(0x7d22, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0xc92d, gbc.sp());
        EXPECT(0x7d24, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D9 004F
        gbc.setState(0x5dc8, 0x17a6, 0x2500, 0x79ae, 0x485b, 0xf48f, 0x0, 0x0);
        gbc.writeMem(0x5dc8, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x17a6, gbc.sp());
        EXPECT(0x5dca, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D9 0050
        gbc.setState(0x6953, 0xbca7, 0x7220, 0x5366, 0x5285, 0x8122, 0x1, 0x1);
        gbc.writeMem(0x6953, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0xbca7, gbc.sp());
        EXPECT(0x6955, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D9 0051
        gbc.setState(0x2fca, 0xaa33, 0xa590, 0x4e81, 0xad78, 0x8b0d, 0x0, 0x1);
        gbc.writeMem(0x2fca, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0xaa33, gbc.sp());
        EXPECT(0x2fcc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D9 0053
        gbc.setState(0x38f0, 0x621d, 0xe230, 0xd529, 0x662c, 0xd57c, 0x0, 0x1);
        gbc.writeMem(0x38f0, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x621d, gbc.sp());
        EXPECT(0x38f2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D9 0054
        gbc.setState(0xe211, 0xca8c, 0xe720, 0x5bb4, 0x102c, 0x2bbb, 0x0, 0x0);
        gbc.writeMem(0xe211, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0xca8c, gbc.sp());
        EXPECT(0xe213, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe211));
        EXPECT(0xd9, gbc.readMem(0xe212));
        // CB D9 0055
        gbc.setState(0xcc89, 0xad6b, 0x5730, 0x75b0, 0xa315, 0x44a4, 0x0, 0x0);
        gbc.writeMem(0xcc89, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0xad6b, gbc.sp());
        EXPECT(0xcc8b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcc89));
        EXPECT(0xd9, gbc.readMem(0xcc8a));
        // CB D9 0057
        gbc.setState(0x1990, 0x1ac, 0xc8a0, 0x738f, 0x79af, 0x1f42, 0x0, 0x0);
        gbc.writeMem(0x1990, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x1ac, gbc.sp());
        EXPECT(0x1992, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D9 0058
        gbc.setState(0x27f7, 0x2664, 0xeec0, 0xe726, 0xcc8b, 0xa80f, 0x0, 0x0);
        gbc.writeMem(0x27f7, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x2664, gbc.sp());
        EXPECT(0x27f9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D9 0059
        gbc.setState(0x6806, 0x5e0, 0x4530, 0x6eb6, 0x354d, 0xeda, 0x1, 0x0);
        gbc.writeMem(0x6806, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x5e0, gbc.sp());
        EXPECT(0x6808, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D9 005A
        gbc.setState(0x7a21, 0x3a4c, 0x8790, 0xb96a, 0x3e7d, 0x9360, 0x1, 0x1);
        gbc.writeMem(0x7a21, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x3a4c, gbc.sp());
        EXPECT(0x7a23, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D9 005B
        gbc.setState(0x4d64, 0xfb7, 0xb850, 0x1345, 0xa61e, 0x2160, 0x0, 0x0);
        gbc.writeMem(0x4d64, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0xfb7, gbc.sp());
        EXPECT(0x4d66, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D9 005D
        gbc.setState(0x7014, 0x6582, 0x3bf0, 0x2f3c, 0x9078, 0x4217, 0x0, 0x1);
        gbc.writeMem(0x7014, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x6582, gbc.sp());
        EXPECT(0x7016, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D9 005E
        gbc.setState(0xc9be, 0xee16, 0x65f0, 0xd355, 0x272f, 0xf851, 0x0, 0x0);
        gbc.writeMem(0xc9be, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0xee16, gbc.sp());
        EXPECT(0xc9c0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc9be));
        EXPECT(0xd9, gbc.readMem(0xc9bf));
        // CB D9 005F
        gbc.setState(0x38ab, 0xed5b, 0xc990, 0xd440, 0x5b85, 0xa74f, 0x1, 0x1);
        gbc.writeMem(0x38ab, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0xed5b, gbc.sp());
        EXPECT(0x38ad, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D9 0060
        gbc.setState(0x971c, 0x1214, 0x98d0, 0x763f, 0xeecc, 0xafbd, 0x1, 0x0);
        gbc.writeMem(0x971c, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x1214, gbc.sp());
        EXPECT(0x971e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x971c));
        EXPECT(0xd9, gbc.readMem(0x971d));
        // CB D9 0061
        gbc.setState(0x3c35, 0x45ca, 0x7660, 0xb0a6, 0x8ceb, 0x2eda, 0x0, 0x0);
        gbc.writeMem(0x3c35, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x45ca, gbc.sp());
        EXPECT(0x3c37, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D9 0062
        gbc.setState(0x475c, 0x404d, 0xd240, 0xfc73, 0xe812, 0xa462, 0x0, 0x1);
        gbc.writeMem(0x475c, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x404d, gbc.sp());
        EXPECT(0x475e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D9 0063
        gbc.setState(0x5607, 0xe85e, 0x2ac0, 0x44, 0x1b47, 0xad4e, 0x0, 0x0);
        gbc.writeMem(0x5607, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0xe85e, gbc.sp());
        EXPECT(0x5609, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D9 0064
        gbc.setState(0x1535, 0xcd2c, 0x3230, 0x87d1, 0xb8a9, 0x7e17, 0x0, 0x0);
        gbc.writeMem(0x1535, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0xcd2c, gbc.sp());
        EXPECT(0x1537, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D9 0065
        gbc.setState(0x2eb3, 0x1ee, 0x7c00, 0xc373, 0xe1fb, 0x7204, 0x1, 0x0);
        gbc.writeMem(0x2eb3, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x1ee, gbc.sp());
        EXPECT(0x2eb5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D9 0066
        gbc.setState(0xeec8, 0x8d18, 0x4e40, 0x7e69, 0xc6fc, 0x1c52, 0x1, 0x1);
        gbc.writeMem(0xeec8, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x8d18, gbc.sp());
        EXPECT(0xeeca, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeec8));
        EXPECT(0xd9, gbc.readMem(0xeec9));
        // CB D9 0067
        gbc.setState(0xae61, 0xb0c0, 0xa010, 0x289f, 0x6776, 0x8a37, 0x1, 0x1);
        gbc.writeMem(0xae61, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0xb0c0, gbc.sp());
        EXPECT(0xae63, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xae61));
        EXPECT(0xd9, gbc.readMem(0xae62));
        // CB D9 0068
        gbc.setState(0x134e, 0x9337, 0x8e10, 0x39c3, 0xf4fe, 0xf866, 0x0, 0x0);
        gbc.writeMem(0x134e, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x9337, gbc.sp());
        EXPECT(0x1350, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D9 0069
        gbc.setState(0x8349, 0xdf5, 0xc590, 0xd5a8, 0xd00f, 0x88f9, 0x0, 0x1);
        gbc.writeMem(0x8349, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0xdf5, gbc.sp());
        EXPECT(0x834b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8349));
        EXPECT(0xd9, gbc.readMem(0x834a));
        // CB D9 006A
        gbc.setState(0x8779, 0xa10c, 0xded0, 0xd4ef, 0x2cb5, 0xa169, 0x1, 0x1);
        gbc.writeMem(0x8779, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0xa10c, gbc.sp());
        EXPECT(0x877b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8779));
        EXPECT(0xd9, gbc.readMem(0x877a));
        // CB D9 006B
        gbc.setState(0x9032, 0xf2eb, 0x2f30, 0x98c5, 0x20e8, 0x3d2c, 0x1, 0x0);
        gbc.writeMem(0x9032, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0xf2eb, gbc.sp());
        EXPECT(0x9034, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9032));
        EXPECT(0xd9, gbc.readMem(0x9033));
        // CB D9 006C
        gbc.setState(0x889f, 0xe482, 0xe7f0, 0x7507, 0x9b37, 0xb0e7, 0x0, 0x0);
        gbc.writeMem(0x889f, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0xe482, gbc.sp());
        EXPECT(0x88a1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x889f));
        EXPECT(0xd9, gbc.readMem(0x88a0));
        // CB D9 006E
        gbc.setState(0xbfe4, 0xd32c, 0x6e30, 0x21a2, 0x1cf5, 0x5cf7, 0x1, 0x0);
        gbc.writeMem(0xbfe4, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0xd32c, gbc.sp());
        EXPECT(0xbfe6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbfe4));
        EXPECT(0xd9, gbc.readMem(0xbfe5));
        // CB D9 006F
        gbc.setState(0xd2e8, 0x1618, 0x7650, 0xb802, 0xf03f, 0x288b, 0x0, 0x1);
        gbc.writeMem(0xd2e8, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x1618, gbc.sp());
        EXPECT(0xd2ea, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd2e8));
        EXPECT(0xd9, gbc.readMem(0xd2e9));
        // CB D9 0070
        gbc.setState(0xe992, 0x451f, 0x5b80, 0x34af, 0xe777, 0x96a2, 0x1, 0x1);
        gbc.writeMem(0xe992, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x451f, gbc.sp());
        EXPECT(0xe994, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe992));
        EXPECT(0xd9, gbc.readMem(0xe993));
        // CB D9 0071
        gbc.setState(0x7408, 0xd702, 0x31d0, 0xbc55, 0xcca4, 0xda00, 0x0, 0x0);
        gbc.writeMem(0x7408, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0xd702, gbc.sp());
        EXPECT(0x740a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D9 0072
        gbc.setState(0xc28d, 0x5d1d, 0x3bf0, 0x8b66, 0xb5e5, 0x55de, 0x1, 0x0);
        gbc.writeMem(0xc28d, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x5d1d, gbc.sp());
        EXPECT(0xc28f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc28d));
        EXPECT(0xd9, gbc.readMem(0xc28e));
        // CB D9 0073
        gbc.setState(0x46da, 0xbd6b, 0x3790, 0x6eba, 0x1c59, 0xa6eb, 0x1, 0x0);
        gbc.writeMem(0x46da, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0xbd6b, gbc.sp());
        EXPECT(0x46dc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D9 0074
        gbc.setState(0xe63e, 0x9eb1, 0xb90, 0xc084, 0x8963, 0x8929, 0x0, 0x1);
        gbc.writeMem(0xe63e, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x9eb1, gbc.sp());
        EXPECT(0xe640, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe63e));
        EXPECT(0xd9, gbc.readMem(0xe63f));
        // CB D9 0075
        gbc.setState(0x4e06, 0xb86e, 0xa880, 0x6b89, 0xecf6, 0x98d3, 0x0, 0x0);
        gbc.writeMem(0x4e06, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0xb86e, gbc.sp());
        EXPECT(0x4e08, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D9 0076
        gbc.setState(0x8cfe, 0x6c61, 0x2b80, 0xc75d, 0x49c5, 0xe3d2, 0x0, 0x1);
        gbc.writeMem(0x8cfe, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x6c61, gbc.sp());
        EXPECT(0x8d00, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8cfe));
        EXPECT(0xd9, gbc.readMem(0x8cff));
        // CB D9 0077
        gbc.setState(0x9cb7, 0x7b36, 0x8de0, 0x4e38, 0x6baa, 0x4eed, 0x1, 0x1);
        gbc.writeMem(0x9cb7, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x7b36, gbc.sp());
        EXPECT(0x9cb9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9cb7));
        EXPECT(0xd9, gbc.readMem(0x9cb8));
        // CB D9 0078
        gbc.setState(0x5686, 0xdd5f, 0x3b80, 0x678, 0x36aa, 0x9483, 0x1, 0x1);
        gbc.writeMem(0x5686, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0xdd5f, gbc.sp());
        EXPECT(0x5688, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D9 0079
        gbc.setState(0xcc3e, 0x45dd, 0x4e10, 0x9e30, 0xec3e, 0x4a02, 0x1, 0x1);
        gbc.writeMem(0xcc3e, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x45dd, gbc.sp());
        EXPECT(0xcc40, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcc3e));
        EXPECT(0xd9, gbc.readMem(0xcc3f));
        // CB D9 007A
        gbc.setState(0xd3bb, 0x45d3, 0x3830, 0x814b, 0xf3d2, 0xe4e, 0x0, 0x0);
        gbc.writeMem(0xd3bb, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x45d3, gbc.sp());
        EXPECT(0xd3bd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd3bb));
        EXPECT(0xd9, gbc.readMem(0xd3bc));
        // CB D9 007C
        gbc.setState(0xd2de, 0xd6fb, 0x1cc0, 0x3ece, 0x7531, 0xf2c2, 0x0, 0x0);
        gbc.writeMem(0xd2de, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0xd6fb, gbc.sp());
        EXPECT(0xd2e0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd2de));
        EXPECT(0xd9, gbc.readMem(0xd2df));
        // CB D9 007D
        gbc.setState(0x305, 0xcb69, 0x5310, 0x72b8, 0x29ff, 0x8525, 0x0, 0x0);
        gbc.writeMem(0x305, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0xcb69, gbc.sp());
        EXPECT(0x307, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D9 007E
        gbc.setState(0x4b90, 0xe5ba, 0x7170, 0xfdb3, 0x65b6, 0xb3ea, 0x1, 0x1);
        gbc.writeMem(0x4b90, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0xe5ba, gbc.sp());
        EXPECT(0x4b92, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D9 007F
        gbc.setState(0x3e3d, 0xc855, 0xded0, 0xd278, 0xd249, 0x83fd, 0x0, 0x0);
        gbc.writeMem(0x3e3d, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0xc855, gbc.sp());
        EXPECT(0x3e3f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D9 0080
        gbc.setState(0xd7a4, 0x2a57, 0x51a0, 0xa0cf, 0x95f, 0x1d49, 0x1, 0x1);
        gbc.writeMem(0xd7a4, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x2a57, gbc.sp());
        EXPECT(0xd7a6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd7a4));
        EXPECT(0xd9, gbc.readMem(0xd7a5));
        // CB D9 0081
        gbc.setState(0xe2aa, 0x27e4, 0x6f00, 0x4e43, 0xddf7, 0x38a9, 0x1, 0x1);
        gbc.writeMem(0xe2aa, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x27e4, gbc.sp());
        EXPECT(0xe2ac, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe2aa));
        EXPECT(0xd9, gbc.readMem(0xe2ab));
        // CB D9 0082
        gbc.setState(0x1800, 0x4244, 0xb0, 0x3268, 0x10eb, 0xe08, 0x1, 0x0);
        gbc.writeMem(0x1800, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x4244, gbc.sp());
        EXPECT(0x1802, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D9 0083
        gbc.setState(0xb9fe, 0xe07f, 0x2480, 0xa247, 0xfa4c, 0xa8a6, 0x0, 0x1);
        gbc.writeMem(0xb9fe, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0xe07f, gbc.sp());
        EXPECT(0xba00, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb9fe));
        EXPECT(0xd9, gbc.readMem(0xb9ff));
        // CB D9 0084
        gbc.setState(0xbc83, 0xda95, 0xc1c0, 0xcdb5, 0x1905, 0xef99, 0x1, 0x0);
        gbc.writeMem(0xbc83, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0xda95, gbc.sp());
        EXPECT(0xbc85, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbc83));
        EXPECT(0xd9, gbc.readMem(0xbc84));
        // CB D9 0085
        gbc.setState(0x693e, 0x9657, 0x6e0, 0x69a1, 0xceec, 0x778e, 0x1, 0x0);
        gbc.writeMem(0x693e, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x9657, gbc.sp());
        EXPECT(0x6940, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D9 0086
        gbc.setState(0x89e4, 0x6ad2, 0x49f0, 0x527e, 0xc97b, 0xffee, 0x1, 0x1);
        gbc.writeMem(0x89e4, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x6ad2, gbc.sp());
        EXPECT(0x89e6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x89e4));
        EXPECT(0xd9, gbc.readMem(0x89e5));
        // CB D9 0087
        gbc.setState(0xcab9, 0x7389, 0xaf40, 0x6b9a, 0x330b, 0x23dd, 0x1, 0x1);
        gbc.writeMem(0xcab9, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x7389, gbc.sp());
        EXPECT(0xcabb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcab9));
        EXPECT(0xd9, gbc.readMem(0xcaba));
        // CB D9 0088
        gbc.setState(0x34f5, 0x79ee, 0x4750, 0x4777, 0xb8d3, 0x40f8, 0x1, 0x0);
        gbc.writeMem(0x34f5, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x79ee, gbc.sp());
        EXPECT(0x34f7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D9 0089
        gbc.setState(0xc94c, 0x8b5, 0xffb0, 0x5ac7, 0xf610, 0x142f, 0x1, 0x0);
        gbc.writeMem(0xc94c, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x8b5, gbc.sp());
        EXPECT(0xc94e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc94c));
        EXPECT(0xd9, gbc.readMem(0xc94d));
        // CB D9 008A
        gbc.setState(0x9820, 0x635, 0x8470, 0x8fc4, 0x979d, 0x5142, 0x0, 0x1);
        gbc.writeMem(0x9820, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x635, gbc.sp());
        EXPECT(0x9822, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9820));
        EXPECT(0xd9, gbc.readMem(0x9821));
        // CB D9 008B
        gbc.setState(0x248e, 0x4f16, 0x0, 0xa58e, 0xf27, 0x95b3, 0x0, 0x1);
        gbc.writeMem(0x248e, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x4f16, gbc.sp());
        EXPECT(0x2490, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D9 008C
        gbc.setState(0x46bc, 0x762f, 0x6310, 0x9430, 0x4bc, 0x564e, 0x1, 0x0);
        gbc.writeMem(0x46bc, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x762f, gbc.sp());
        EXPECT(0x46be, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D9 008D
        gbc.setState(0x1061, 0xaa8b, 0x5e50, 0x2524, 0xb352, 0xdf4, 0x1, 0x0);
        gbc.writeMem(0x1061, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0xaa8b, gbc.sp());
        EXPECT(0x1063, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D9 008E
        gbc.setState(0xe3d6, 0xa882, 0x7850, 0xd563, 0x7e5, 0x8c3b, 0x0, 0x0);
        gbc.writeMem(0xe3d6, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0xa882, gbc.sp());
        EXPECT(0xe3d8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe3d6));
        EXPECT(0xd9, gbc.readMem(0xe3d7));
        // CB D9 008F
        gbc.setState(0x8b39, 0x68a9, 0xb50, 0xb877, 0xfe90, 0x350b, 0x0, 0x1);
        gbc.writeMem(0x8b39, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x68a9, gbc.sp());
        EXPECT(0x8b3b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8b39));
        EXPECT(0xd9, gbc.readMem(0x8b3a));
        // CB D9 0090
        gbc.setState(0x33a, 0x78dc, 0x52d0, 0xbf1d, 0x1849, 0x3fba, 0x0, 0x0);
        gbc.writeMem(0x33a, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0x78dc, gbc.sp());
        EXPECT(0x33c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D9 0091
        gbc.setState(0x4a11, 0xb25f, 0xf9e0, 0x9d2d, 0x7a37, 0x28c3, 0x1, 0x1);
        gbc.writeMem(0x4a11, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0xb25f, gbc.sp());
        EXPECT(0x4a13, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D9 0092
        gbc.setState(0x20c0, 0x7ddd, 0x6f10, 0xdc43, 0xad92, 0xacb7, 0x1, 0x1);
        gbc.writeMem(0x20c0, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x7ddd, gbc.sp());
        EXPECT(0x20c2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D9 0093
        gbc.setState(0xe9b3, 0x5766, 0x9360, 0xa43d, 0x3000, 0x3fea, 0x1, 0x0);
        gbc.writeMem(0xe9b3, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x5766, gbc.sp());
        EXPECT(0xe9b5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe9b3));
        EXPECT(0xd9, gbc.readMem(0xe9b4));
        // CB D9 0094
        gbc.setState(0xdb51, 0xdb92, 0x90, 0xf387, 0x73d7, 0xec86, 0x1, 0x1);
        gbc.writeMem(0xdb51, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0xdb92, gbc.sp());
        EXPECT(0xdb53, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdb51));
        EXPECT(0xd9, gbc.readMem(0xdb52));
        // CB D9 0095
        gbc.setState(0xc99, 0x9884, 0x3560, 0xd1ba, 0xf89d, 0x70e, 0x1, 0x1);
        gbc.writeMem(0xc99, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x9884, gbc.sp());
        EXPECT(0xc9b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D9 0096
        gbc.setState(0x8ec3, 0xdf4d, 0xee20, 0xf965, 0x54f3, 0x1f4, 0x0, 0x1);
        gbc.writeMem(0x8ec3, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0xdf4d, gbc.sp());
        EXPECT(0x8ec5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8ec3));
        EXPECT(0xd9, gbc.readMem(0x8ec4));
        // CB D9 0098
        gbc.setState(0x139b, 0xdb5a, 0xabc0, 0x258f, 0xdfb0, 0xfe5b, 0x0, 0x0);
        gbc.writeMem(0x139b, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0xdb5a, gbc.sp());
        EXPECT(0x139d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D9 0099
        gbc.setState(0xebb0, 0x686c, 0x1a20, 0x18f5, 0x77d1, 0x27d8, 0x1, 0x1);
        gbc.writeMem(0xebb0, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x686c, gbc.sp());
        EXPECT(0xebb2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xebb0));
        EXPECT(0xd9, gbc.readMem(0xebb1));
        // CB D9 009A
        gbc.setState(0xaa7, 0xaa1c, 0x9370, 0x4053, 0x967d, 0xae13, 0x1, 0x0);
        gbc.writeMem(0xaa7, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0xaa1c, gbc.sp());
        EXPECT(0xaa9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D9 009B
        gbc.setState(0xf000, 0x2469, 0x8510, 0x3125, 0x4f8a, 0x4410, 0x0, 0x0);
        gbc.writeMem(0xf000, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x2469, gbc.sp());
        EXPECT(0xf002, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xf000));
        EXPECT(0xd9, gbc.readMem(0xf001));
        // CB D9 009C
        gbc.setState(0x9de8, 0xb95a, 0x5a60, 0xac07, 0x897a, 0x98f5, 0x0, 0x0);
        gbc.writeMem(0x9de8, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0xb95a, gbc.sp());
        EXPECT(0x9dea, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9de8));
        EXPECT(0xd9, gbc.readMem(0x9de9));
        // CB D9 009D
        gbc.setState(0xc4f4, 0xe4ac, 0xde30, 0x473d, 0x1fb2, 0xd1df, 0x1, 0x1);
        gbc.writeMem(0xc4f4, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0xe4ac, gbc.sp());
        EXPECT(0xc4f6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc4f4));
        EXPECT(0xd9, gbc.readMem(0xc4f5));
        // CB D9 009E
        gbc.setState(0xb136, 0x57e4, 0x4310, 0x5360, 0x9742, 0x96b8, 0x1, 0x1);
        gbc.writeMem(0xb136, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x57e4, gbc.sp());
        EXPECT(0xb138, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb136));
        EXPECT(0xd9, gbc.readMem(0xb137));
        // CB D9 009F
        gbc.setState(0x118d, 0x45b7, 0x83e0, 0xa65c, 0xed69, 0x7000, 0x0, 0x0);
        gbc.writeMem(0x118d, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x45b7, gbc.sp());
        EXPECT(0x118f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D9 00A0
        gbc.setState(0x6161, 0xa934, 0x37c0, 0xf8f6, 0xf7e2, 0x30dc, 0x1, 0x1);
        gbc.writeMem(0x6161, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0xa934, gbc.sp());
        EXPECT(0x6163, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D9 00A1
        gbc.setState(0x4d99, 0x95a7, 0x4160, 0x3954, 0x5bfa, 0x9d56, 0x0, 0x1);
        gbc.writeMem(0x4d99, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0x95a7, gbc.sp());
        EXPECT(0x4d9b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D9 00A2
        gbc.setState(0xe0f1, 0xc6f1, 0xf6f0, 0x2125, 0x7d51, 0xa22d, 0x1, 0x0);
        gbc.writeMem(0xe0f1, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0xc6f1, gbc.sp());
        EXPECT(0xe0f3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe0f1));
        EXPECT(0xd9, gbc.readMem(0xe0f2));
        // CB D9 00A3
        gbc.setState(0xa814, 0x2e13, 0x7c90, 0x8bc, 0xf84a, 0xcc3e, 0x0, 0x1);
        gbc.writeMem(0xa814, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x2e13, gbc.sp());
        EXPECT(0xa816, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa814));
        EXPECT(0xd9, gbc.readMem(0xa815));
        // CB D9 00A4
        gbc.setState(0xb9f9, 0xf675, 0xd960, 0xd9ae, 0x9c15, 0xcf8c, 0x0, 0x1);
        gbc.writeMem(0xb9f9, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0xf675, gbc.sp());
        EXPECT(0xb9fb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb9f9));
        EXPECT(0xd9, gbc.readMem(0xb9fa));
        // CB D9 00A5
        gbc.setState(0xea6f, 0xcc0e, 0x5f0, 0xc1fb, 0xafd6, 0xa658, 0x1, 0x1);
        gbc.writeMem(0xea6f, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0xcc0e, gbc.sp());
        EXPECT(0xea71, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xea6f));
        EXPECT(0xd9, gbc.readMem(0xea70));
        // CB D9 00A6
        gbc.setState(0x891b, 0xb1cf, 0x650, 0x6cb5, 0x8ba0, 0x18dd, 0x0, 0x1);
        gbc.writeMem(0x891b, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0xb1cf, gbc.sp());
        EXPECT(0x891d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x891b));
        EXPECT(0xd9, gbc.readMem(0x891c));
        // CB D9 00A7
        gbc.setState(0x2640, 0xed3f, 0xad70, 0xc160, 0x357e, 0x25ef, 0x0, 0x1);
        gbc.writeMem(0x2640, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0xed3f, gbc.sp());
        EXPECT(0x2642, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D9 00A8
        gbc.setState(0xac88, 0xdac1, 0xc6c0, 0x3cb1, 0x7b36, 0xa10c, 0x0, 0x0);
        gbc.writeMem(0xac88, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0xdac1, gbc.sp());
        EXPECT(0xac8a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xac88));
        EXPECT(0xd9, gbc.readMem(0xac89));
        // CB D9 00A9
        gbc.setState(0x6214, 0xfba4, 0x12f0, 0xa68e, 0xda05, 0x785, 0x1, 0x1);
        gbc.writeMem(0x6214, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0xfba4, gbc.sp());
        EXPECT(0x6216, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D9 00AA
        gbc.setState(0xc385, 0x786c, 0x6a00, 0x29b, 0x187f, 0x8d56, 0x1, 0x1);
        gbc.writeMem(0xc385, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0x786c, gbc.sp());
        EXPECT(0xc387, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc385));
        EXPECT(0xd9, gbc.readMem(0xc386));
        // CB D9 00AB
        gbc.setState(0xeb33, 0xe572, 0x7a40, 0x9fab, 0x7e4, 0xb246, 0x0, 0x0);
        gbc.writeMem(0xeb33, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0xe572, gbc.sp());
        EXPECT(0xeb35, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeb33));
        EXPECT(0xd9, gbc.readMem(0xeb34));
        // CB D9 00AD
        gbc.setState(0x9254, 0x3dec, 0xed0, 0x956b, 0xf763, 0x1406, 0x1, 0x0);
        gbc.writeMem(0x9254, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x3dec, gbc.sp());
        EXPECT(0x9256, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9254));
        EXPECT(0xd9, gbc.readMem(0x9255));
        // CB D9 00AE
        gbc.setState(0x8695, 0x251d, 0x5f80, 0x84be, 0x4271, 0xb38c, 0x1, 0x0);
        gbc.writeMem(0x8695, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x251d, gbc.sp());
        EXPECT(0x8697, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8695));
        EXPECT(0xd9, gbc.readMem(0x8696));
        // CB D9 00AF
        gbc.setState(0x1079, 0xf99c, 0xc260, 0x5b38, 0x73c6, 0x22ef, 0x1, 0x0);
        gbc.writeMem(0x1079, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0xf99c, gbc.sp());
        EXPECT(0x107b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D9 00B0
        gbc.setState(0x30a8, 0xf307, 0x6b50, 0x40e1, 0xc97f, 0x30ae, 0x1, 0x1);
        gbc.writeMem(0x30a8, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0xf307, gbc.sp());
        EXPECT(0x30aa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D9 00B1
        gbc.setState(0x42cb, 0xe9ed, 0x47e0, 0x7c8, 0x61c7, 0x2444, 0x0, 0x0);
        gbc.writeMem(0x42cb, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0xe9ed, gbc.sp());
        EXPECT(0x42cd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D9 00B2
        gbc.setState(0xe623, 0x13bb, 0x6650, 0x8d01, 0x6c77, 0x59fd, 0x1, 0x1);
        gbc.writeMem(0xe623, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x13bb, gbc.sp());
        EXPECT(0xe625, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe623));
        EXPECT(0xd9, gbc.readMem(0xe624));
        // CB D9 00B3
        gbc.setState(0x2762, 0x94da, 0xedc0, 0x84e1, 0x1145, 0x9db7, 0x0, 0x1);
        gbc.writeMem(0x2762, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x94da, gbc.sp());
        EXPECT(0x2764, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D9 00B4
        gbc.setState(0xa410, 0xb587, 0xf330, 0xd719, 0x59d3, 0x3ef9, 0x1, 0x0);
        gbc.writeMem(0xa410, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0xb587, gbc.sp());
        EXPECT(0xa412, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa410));
        EXPECT(0xd9, gbc.readMem(0xa411));
        // CB D9 00B5
        gbc.setState(0x16ff, 0xba90, 0x4980, 0xbc0f, 0xcce3, 0x2061, 0x0, 0x1);
        gbc.writeMem(0x16ff, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0xba90, gbc.sp());
        EXPECT(0x1701, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D9 00B6
        gbc.setState(0xa8b5, 0x8ff5, 0xf240, 0x2d43, 0x6838, 0xf4ff, 0x1, 0x1);
        gbc.writeMem(0xa8b5, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x8ff5, gbc.sp());
        EXPECT(0xa8b7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa8b5));
        EXPECT(0xd9, gbc.readMem(0xa8b6));
        // CB D9 00B7
        gbc.setState(0xaaee, 0xa004, 0x6810, 0x5eae, 0xfc25, 0xb1f6, 0x0, 0x0);
        gbc.writeMem(0xaaee, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0xa004, gbc.sp());
        EXPECT(0xaaf0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaaee));
        EXPECT(0xd9, gbc.readMem(0xaaef));
        // CB D9 00B8
        gbc.setState(0x4eca, 0x2deb, 0x6b30, 0x9487, 0x47dc, 0xe91c, 0x0, 0x0);
        gbc.writeMem(0x4eca, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x2deb, gbc.sp());
        EXPECT(0x4ecc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D9 00B9
        gbc.setState(0xe221, 0xba89, 0x3f70, 0x95a5, 0xe72a, 0xd4e3, 0x0, 0x0);
        gbc.writeMem(0xe221, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0xba89, gbc.sp());
        EXPECT(0xe223, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe221));
        EXPECT(0xd9, gbc.readMem(0xe222));
        // CB D9 00BA
        gbc.setState(0x3364, 0xbdb2, 0x24d0, 0x67c, 0x438, 0xd2b3, 0x0, 0x1);
        gbc.writeMem(0x3364, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0xbdb2, gbc.sp());
        EXPECT(0x3366, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D9 00BB
        gbc.setState(0x8a84, 0x4e2d, 0xc960, 0x1656, 0x769b, 0x6566, 0x0, 0x1);
        gbc.writeMem(0x8a84, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x4e2d, gbc.sp());
        EXPECT(0x8a86, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8a84));
        EXPECT(0xd9, gbc.readMem(0x8a85));
        // CB D9 00BC
        gbc.setState(0xe235, 0xf21e, 0x72b0, 0x8232, 0x4ba6, 0x6562, 0x0, 0x0);
        gbc.writeMem(0xe235, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0xf21e, gbc.sp());
        EXPECT(0xe237, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe235));
        EXPECT(0xd9, gbc.readMem(0xe236));
        // CB D9 00BD
        gbc.setState(0xb88c, 0x36e0, 0x9f10, 0xfadd, 0x7a5c, 0x7107, 0x0, 0x0);
        gbc.writeMem(0xb88c, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x36e0, gbc.sp());
        EXPECT(0xb88e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb88c));
        EXPECT(0xd9, gbc.readMem(0xb88d));
        // CB D9 00BE
        gbc.setState(0x181e, 0x6424, 0xc90, 0x8987, 0xb29a, 0xa368, 0x1, 0x0);
        gbc.writeMem(0x181e, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x6424, gbc.sp());
        EXPECT(0x1820, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D9 00BF
        gbc.setState(0x6feb, 0xbf, 0x84a0, 0x2059, 0x3383, 0x8eff, 0x0, 0x0);
        gbc.writeMem(0x6feb, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0xbf, gbc.sp());
        EXPECT(0x6fed, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D9 00C0
        gbc.setState(0xbf89, 0xde64, 0x25a0, 0x9048, 0x55fa, 0x7bdb, 0x1, 0x1);
        gbc.writeMem(0xbf89, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0xde64, gbc.sp());
        EXPECT(0xbf8b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbf89));
        EXPECT(0xd9, gbc.readMem(0xbf8a));
        // CB D9 00C1
        gbc.setState(0xae74, 0xf41b, 0xba30, 0x3cdf, 0xeb60, 0xe80a, 0x1, 0x0);
        gbc.writeMem(0xae74, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0xf41b, gbc.sp());
        EXPECT(0xae76, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xae74));
        EXPECT(0xd9, gbc.readMem(0xae75));
        // CB D9 00C2
        gbc.setState(0x9617, 0x5c29, 0x68a0, 0x3ebf, 0x2e75, 0x57c9, 0x0, 0x0);
        gbc.writeMem(0x9617, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x5c29, gbc.sp());
        EXPECT(0x9619, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9617));
        EXPECT(0xd9, gbc.readMem(0x9618));
        // CB D9 00C3
        gbc.setState(0x3f33, 0xfdab, 0x4350, 0xa6bb, 0xf7dc, 0x39dc, 0x0, 0x0);
        gbc.writeMem(0x3f33, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0xfdab, gbc.sp());
        EXPECT(0x3f35, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D9 00C4
        gbc.setState(0x76b7, 0x7629, 0xfbf0, 0x9987, 0x23d8, 0x1fd5, 0x0, 0x1);
        gbc.writeMem(0x76b7, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x7629, gbc.sp());
        EXPECT(0x76b9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D9 00C5
        gbc.setState(0x10e2, 0xbb57, 0xaf70, 0x85d8, 0x2e63, 0x95c9, 0x0, 0x1);
        gbc.writeMem(0x10e2, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0xbb57, gbc.sp());
        EXPECT(0x10e4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D9 00C6
        gbc.setState(0x1211, 0x291a, 0xaeb0, 0xe047, 0x92c4, 0x51c4, 0x0, 0x0);
        gbc.writeMem(0x1211, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x291a, gbc.sp());
        EXPECT(0x1213, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D9 00C7
        gbc.setState(0x4654, 0x2613, 0xec10, 0xc76d, 0xde5, 0xf632, 0x0, 0x1);
        gbc.writeMem(0x4654, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x2613, gbc.sp());
        EXPECT(0x4656, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D9 00C8
        gbc.setState(0x4c18, 0xb13e, 0x25c0, 0x174, 0xe78, 0xe20, 0x0, 0x0);
        gbc.writeMem(0x4c18, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0xb13e, gbc.sp());
        EXPECT(0x4c1a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D9 00C9
        gbc.setState(0x4fa, 0x9f36, 0x8950, 0x6e3d, 0x91b3, 0x4b05, 0x0, 0x0);
        gbc.writeMem(0x4fa, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x9f36, gbc.sp());
        EXPECT(0x4fc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D9 00CA
        gbc.setState(0xc275, 0x7a1b, 0x39a0, 0x3eb5, 0x6ad3, 0xd665, 0x1, 0x0);
        gbc.writeMem(0xc275, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x7a1b, gbc.sp());
        EXPECT(0xc277, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc275));
        EXPECT(0xd9, gbc.readMem(0xc276));
        // CB D9 00CB
        gbc.setState(0xc1b9, 0x2190, 0xcbb0, 0x7bf4, 0x3d59, 0x9da3, 0x0, 0x1);
        gbc.writeMem(0xc1b9, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0x2190, gbc.sp());
        EXPECT(0xc1bb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc1b9));
        EXPECT(0xd9, gbc.readMem(0xc1ba));
        // CB D9 00CC
        gbc.setState(0x46ba, 0x6cb, 0x8f90, 0xb18e, 0x485e, 0x6b06, 0x1, 0x0);
        gbc.writeMem(0x46ba, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x6cb, gbc.sp());
        EXPECT(0x46bc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D9 00CD
        gbc.setState(0x6cbb, 0x8336, 0xe9f0, 0xb7d5, 0xd080, 0x1d3a, 0x0, 0x1);
        gbc.writeMem(0x6cbb, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x8336, gbc.sp());
        EXPECT(0x6cbd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D9 00CE
        gbc.setState(0x507, 0xbbbb, 0xdd40, 0x7218, 0x40dc, 0x45b1, 0x0, 0x1);
        gbc.writeMem(0x507, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0xbbbb, gbc.sp());
        EXPECT(0x509, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D9 00CF
        gbc.setState(0x4db7, 0xe02b, 0x3680, 0xe332, 0x898c, 0x3b6e, 0x0, 0x1);
        gbc.writeMem(0x4db7, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0xe02b, gbc.sp());
        EXPECT(0x4db9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D9 00D0
        gbc.setState(0x3316, 0xb329, 0xec20, 0xdea1, 0x21e4, 0xe327, 0x0, 0x0);
        gbc.writeMem(0x3316, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0xb329, gbc.sp());
        EXPECT(0x3318, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D9 00D1
        gbc.setState(0xbe8d, 0x5739, 0x7b90, 0x9b20, 0x720d, 0x1fc0, 0x1, 0x0);
        gbc.writeMem(0xbe8d, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x5739, gbc.sp());
        EXPECT(0xbe8f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbe8d));
        EXPECT(0xd9, gbc.readMem(0xbe8e));
        // CB D9 00D2
        gbc.setState(0x4838, 0x602f, 0x5c30, 0x1c6, 0xaf54, 0xb0b8, 0x0, 0x0);
        gbc.writeMem(0x4838, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x602f, gbc.sp());
        EXPECT(0x483a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D9 00D3
        gbc.setState(0x399d, 0x18e2, 0xb7d0, 0x408c, 0x14be, 0x54b, 0x0, 0x0);
        gbc.writeMem(0x399d, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x18e2, gbc.sp());
        EXPECT(0x399f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D9 00D4
        gbc.setState(0x24b4, 0xa4a6, 0xcbc0, 0xca79, 0xcaa8, 0xe7db, 0x1, 0x1);
        gbc.writeMem(0x24b4, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0xa4a6, gbc.sp());
        EXPECT(0x24b6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D9 00D5
        gbc.setState(0x95f5, 0x3855, 0xa7c0, 0xb89d, 0xc01, 0xb68c, 0x1, 0x0);
        gbc.writeMem(0x95f5, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x3855, gbc.sp());
        EXPECT(0x95f7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x95f5));
        EXPECT(0xd9, gbc.readMem(0x95f6));
        // CB D9 00D6
        gbc.setState(0x4b32, 0x41c4, 0xa0a0, 0xc4b6, 0x431, 0x1a13, 0x0, 0x0);
        gbc.writeMem(0x4b32, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x41c4, gbc.sp());
        EXPECT(0x4b34, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D9 00D7
        gbc.setState(0x464d, 0x90c8, 0xa690, 0x8de7, 0xf0b8, 0xaa78, 0x1, 0x1);
        gbc.writeMem(0x464d, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x90c8, gbc.sp());
        EXPECT(0x464f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D9 00D8
        gbc.setState(0x2ba3, 0x9d4b, 0xf6e0, 0x2ac8, 0x8bc2, 0xd8f, 0x0, 0x1);
        gbc.writeMem(0x2ba3, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x9d4b, gbc.sp());
        EXPECT(0x2ba5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D9 00D9
        gbc.setState(0x73cd, 0x3d82, 0xb900, 0x33d7, 0x155b, 0xabe1, 0x1, 0x0);
        gbc.writeMem(0x73cd, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0x3d82, gbc.sp());
        EXPECT(0x73cf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D9 00DA
        gbc.setState(0x2e3, 0x29d4, 0xb530, 0x7118, 0xd335, 0x751a, 0x0, 0x0);
        gbc.writeMem(0x2e3, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x29d4, gbc.sp());
        EXPECT(0x2e5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D9 00DB
        gbc.setState(0x4c96, 0xe60f, 0xfb0, 0xb2b, 0x2740, 0x3124, 0x0, 0x0);
        gbc.writeMem(0x4c96, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0xe60f, gbc.sp());
        EXPECT(0x4c98, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D9 00DC
        gbc.setState(0xa3d8, 0x23f4, 0xbc60, 0xe82d, 0xbae2, 0x8469, 0x0, 0x0);
        gbc.writeMem(0xa3d8, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0x23f4, gbc.sp());
        EXPECT(0xa3da, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa3d8));
        EXPECT(0xd9, gbc.readMem(0xa3d9));
        // CB D9 00DD
        gbc.setState(0xcbd9, 0x1d5, 0x54c0, 0x2a02, 0x4613, 0x8e4b, 0x0, 0x0);
        gbc.writeMem(0xcbd9, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x1d5, gbc.sp());
        EXPECT(0xcbdb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcbd9));
        EXPECT(0xd9, gbc.readMem(0xcbda));
        // CB D9 00DE
        gbc.setState(0x3014, 0x1996, 0xbbe0, 0x21ce, 0x3b3d, 0x8882, 0x1, 0x1);
        gbc.writeMem(0x3014, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x1996, gbc.sp());
        EXPECT(0x3016, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D9 00DF
        gbc.setState(0x3d94, 0x776c, 0xec20, 0xe999, 0x3ff8, 0x2100, 0x1, 0x0);
        gbc.writeMem(0x3d94, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x776c, gbc.sp());
        EXPECT(0x3d96, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D9 00E0
        gbc.setState(0xc958, 0x4035, 0xa750, 0x15fa, 0x48ec, 0xe2ce, 0x1, 0x1);
        gbc.writeMem(0xc958, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x4035, gbc.sp());
        EXPECT(0xc95a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc958));
        EXPECT(0xd9, gbc.readMem(0xc959));
        // CB D9 00E1
        gbc.setState(0x73b2, 0xdd23, 0x7920, 0x495f, 0x3770, 0x6fb6, 0x1, 0x1);
        gbc.writeMem(0x73b2, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0xdd23, gbc.sp());
        EXPECT(0x73b4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D9 00E2
        gbc.setState(0x6832, 0x41b, 0x8310, 0xbad1, 0x7bc6, 0x736a, 0x1, 0x1);
        gbc.writeMem(0x6832, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x41b, gbc.sp());
        EXPECT(0x6834, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D9 00E3
        gbc.setState(0xc4d6, 0xc29f, 0x2140, 0xcaeb, 0x6ed7, 0xe044, 0x0, 0x1);
        gbc.writeMem(0xc4d6, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0xc29f, gbc.sp());
        EXPECT(0xc4d8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc4d6));
        EXPECT(0xd9, gbc.readMem(0xc4d7));
        // CB D9 00E4
        gbc.setState(0xec90, 0xebcd, 0xe200, 0xa764, 0x8091, 0x81f, 0x1, 0x0);
        gbc.writeMem(0xec90, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0xebcd, gbc.sp());
        EXPECT(0xec92, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xec90));
        EXPECT(0xd9, gbc.readMem(0xec91));
        // CB D9 00E5
        gbc.setState(0x720a, 0x8278, 0xf2f0, 0x477c, 0xfdcf, 0x9b7b, 0x0, 0x1);
        gbc.writeMem(0x720a, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x8278, gbc.sp());
        EXPECT(0x720c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D9 00E6
        gbc.setState(0x3fe7, 0x54d5, 0xfef0, 0x1254, 0x38b3, 0xddd0, 0x0, 0x1);
        gbc.writeMem(0x3fe7, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x54d5, gbc.sp());
        EXPECT(0x3fe9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D9 00E7
        gbc.setState(0x7196, 0x4f63, 0x1850, 0x1a4b, 0x4958, 0xf62e, 0x0, 0x0);
        gbc.writeMem(0x7196, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x4f63, gbc.sp());
        EXPECT(0x7198, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D9 00E8
        gbc.setState(0x204a, 0xf5e9, 0xf3e0, 0x29fe, 0x35ec, 0xb1a3, 0x0, 0x1);
        gbc.writeMem(0x204a, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0xf5e9, gbc.sp());
        EXPECT(0x204c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D9 00E9
        gbc.setState(0xcfe8, 0xcad, 0x26d0, 0xb4a1, 0xdf68, 0x61ed, 0x1, 0x1);
        gbc.writeMem(0xcfe8, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0xcad, gbc.sp());
        EXPECT(0xcfea, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcfe8));
        EXPECT(0xd9, gbc.readMem(0xcfe9));
        // CB D9 00EA
        gbc.setState(0x3205, 0xfd6c, 0x47d0, 0x6156, 0x79b7, 0x2c5b, 0x1, 0x0);
        gbc.writeMem(0x3205, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0xfd6c, gbc.sp());
        EXPECT(0x3207, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D9 00EB
        gbc.setState(0xd28e, 0x4644, 0xde20, 0xba7, 0x800f, 0x6e21, 0x0, 0x1);
        gbc.writeMem(0xd28e, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x4644, gbc.sp());
        EXPECT(0xd290, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd28e));
        EXPECT(0xd9, gbc.readMem(0xd28f));
        // CB D9 00EC
        gbc.setState(0x3d31, 0x5c62, 0x6820, 0xc75e, 0xfe7, 0x832a, 0x0, 0x0);
        gbc.writeMem(0x3d31, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x5c62, gbc.sp());
        EXPECT(0x3d33, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D9 00ED
        gbc.setState(0x34cd, 0xa36a, 0x9cd0, 0x75c7, 0x5cbc, 0xf153, 0x1, 0x1);
        gbc.writeMem(0x34cd, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0xa36a, gbc.sp());
        EXPECT(0x34cf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D9 00EF
        gbc.setState(0x52b8, 0xf2c0, 0x2b70, 0xe34e, 0xdd8e, 0x740b, 0x1, 0x1);
        gbc.writeMem(0x52b8, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0xf2c0, gbc.sp());
        EXPECT(0x52ba, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D9 00F0
        gbc.setState(0x41fe, 0xdba1, 0xcb30, 0xabf5, 0xa3ae, 0xed47, 0x0, 0x1);
        gbc.writeMem(0x41fe, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0xdba1, gbc.sp());
        EXPECT(0x4200, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D9 00F1
        gbc.setState(0x3ff9, 0xebcb, 0x65a0, 0x5935, 0x95a5, 0xc26, 0x0, 0x0);
        gbc.writeMem(0x3ff9, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0xebcb, gbc.sp());
        EXPECT(0x3ffb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D9 00F2
        gbc.setState(0x4ebb, 0x4087, 0xacb0, 0xcf6c, 0x9ad7, 0xe457, 0x0, 0x1);
        gbc.writeMem(0x4ebb, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x4087, gbc.sp());
        EXPECT(0x4ebd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D9 00F3
        gbc.setState(0xdd5c, 0xaf46, 0x6f20, 0xf6d2, 0x705e, 0xa03e, 0x0, 0x1);
        gbc.writeMem(0xdd5c, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0xaf46, gbc.sp());
        EXPECT(0xdd5e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdd5c));
        EXPECT(0xd9, gbc.readMem(0xdd5d));
        // CB D9 00F4
        gbc.setState(0x1eba, 0x4b11, 0xf050, 0xf11b, 0x766a, 0x9fd8, 0x0, 0x1);
        gbc.writeMem(0x1eba, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x4b11, gbc.sp());
        EXPECT(0x1ebc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D9 00F5
        gbc.setState(0x8803, 0x659e, 0x6940, 0xce36, 0xc36b, 0x14ff, 0x0, 0x1);
        gbc.writeMem(0x8803, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x659e, gbc.sp());
        EXPECT(0x8805, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8803));
        EXPECT(0xd9, gbc.readMem(0x8804));
        // CB D9 00F6
        gbc.setState(0x8d02, 0xce81, 0xa640, 0x6524, 0xb2a4, 0xc418, 0x0, 0x0);
        gbc.writeMem(0x8d02, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0xce81, gbc.sp());
        EXPECT(0x8d04, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8d02));
        EXPECT(0xd9, gbc.readMem(0x8d03));
        // CB D9 00F7
        gbc.setState(0xd11a, 0x36ff, 0x7280, 0x3bf0, 0x9e82, 0x4bc7, 0x1, 0x1);
        gbc.writeMem(0xd11a, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x36ff, gbc.sp());
        EXPECT(0xd11c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd11a));
        EXPECT(0xd9, gbc.readMem(0xd11b));
        // CB D9 00F8
        gbc.setState(0x6b5a, 0x90bf, 0x6170, 0x70b5, 0x5ad6, 0xd019, 0x1, 0x1);
        gbc.writeMem(0x6b5a, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x90bf, gbc.sp());
        EXPECT(0x6b5c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D9 00F9
        gbc.setState(0x4939, 0xcb33, 0xa300, 0x2e9f, 0x2734, 0xa217, 0x0, 0x0);
        gbc.writeMem(0x4939, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0xcb33, gbc.sp());
        EXPECT(0x493b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D9 00FA
        gbc.setState(0xa217, 0x5122, 0x2e20, 0xd0eb, 0x4c1, 0x999c, 0x0, 0x1);
        gbc.writeMem(0xa217, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x5122, gbc.sp());
        EXPECT(0xa219, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa217));
        EXPECT(0xd9, gbc.readMem(0xa218));
        // CB D9 00FB
        gbc.setState(0xdabf, 0x99aa, 0xd7d0, 0x457, 0x4e8a, 0x4842, 0x0, 0x0);
        gbc.writeMem(0xdabf, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x99aa, gbc.sp());
        EXPECT(0xdac1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdabf));
        EXPECT(0xd9, gbc.readMem(0xdac0));
        // CB D9 00FC
        gbc.setState(0xb5eb, 0xc76, 0x1d10, 0x8f0f, 0x8131, 0x2a0d, 0x1, 0x0);
        gbc.writeMem(0xb5eb, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0xc76, gbc.sp());
        EXPECT(0xb5ed, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb5eb));
        EXPECT(0xd9, gbc.readMem(0xb5ec));
        // CB D9 00FD
        gbc.setState(0xa424, 0x47c0, 0x8980, 0xc496, 0xf87f, 0x6ec, 0x1, 0x0);
        gbc.writeMem(0xa424, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x47c0, gbc.sp());
        EXPECT(0xa426, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa424));
        EXPECT(0xd9, gbc.readMem(0xa425));
        // CB D9 00FE
        gbc.setState(0xc9e2, 0x5f16, 0xb300, 0x160, 0x889, 0xb750, 0x1, 0x1);
        gbc.writeMem(0xc9e2, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x5f16, gbc.sp());
        EXPECT(0xc9e4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc9e2));
        EXPECT(0xd9, gbc.readMem(0xc9e3));
        // CB D9 00FF
        gbc.setState(0x7ed5, 0xe271, 0x2e60, 0xe5bc, 0x67bb, 0x19a9, 0x0, 0x1);
        gbc.writeMem(0x7ed5, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0xe271, gbc.sp());
        EXPECT(0x7ed7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D9 0100
        gbc.setState(0xcd37, 0x5f8b, 0xc240, 0x5c82, 0x4d4f, 0xe7c3, 0x1, 0x1);
        gbc.writeMem(0xcd37, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x5f8b, gbc.sp());
        EXPECT(0xcd39, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcd37));
        EXPECT(0xd9, gbc.readMem(0xcd38));
        // CB D9 0101
        gbc.setState(0xe513, 0x6bc3, 0x63e0, 0x4420, 0xc313, 0x2c4f, 0x1, 0x1);
        gbc.writeMem(0xe513, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x6bc3, gbc.sp());
        EXPECT(0xe515, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe513));
        EXPECT(0xd9, gbc.readMem(0xe514));
        // CB D9 0102
        gbc.setState(0x5b4f, 0x9dd6, 0x3060, 0xde3a, 0xd68, 0x9ac, 0x1, 0x0);
        gbc.writeMem(0x5b4f, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x9dd6, gbc.sp());
        EXPECT(0x5b51, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D9 0103
        gbc.setState(0x8d54, 0x82ff, 0x6740, 0x1b7d, 0xb050, 0xe8aa, 0x0, 0x1);
        gbc.writeMem(0x8d54, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x82ff, gbc.sp());
        EXPECT(0x8d56, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8d54));
        EXPECT(0xd9, gbc.readMem(0x8d55));
        // CB D9 0105
        gbc.setState(0x19b0, 0xdac3, 0xb4a0, 0xa16b, 0xa88d, 0xb795, 0x0, 0x0);
        gbc.writeMem(0x19b0, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0xdac3, gbc.sp());
        EXPECT(0x19b2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D9 0106
        gbc.setState(0x1fa, 0x2ab0, 0x7e80, 0x3c9a, 0xd98, 0x5b9f, 0x0, 0x1);
        gbc.writeMem(0x1fa, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x2ab0, gbc.sp());
        EXPECT(0x1fc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D9 0107
        gbc.setState(0x3f75, 0x95cf, 0x72f0, 0x5d02, 0x42b4, 0xaf96, 0x0, 0x1);
        gbc.writeMem(0x3f75, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x95cf, gbc.sp());
        EXPECT(0x3f77, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D9 0108
        gbc.setState(0xcc0d, 0x68ff, 0xfa0, 0x241c, 0x3ba7, 0x22f6, 0x0, 0x1);
        gbc.writeMem(0xcc0d, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x68ff, gbc.sp());
        EXPECT(0xcc0f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcc0d));
        EXPECT(0xd9, gbc.readMem(0xcc0e));
        // CB D9 0109
        gbc.setState(0x561a, 0xed9, 0x5750, 0x5e3f, 0xa549, 0x60e1, 0x0, 0x1);
        gbc.writeMem(0x561a, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0xed9, gbc.sp());
        EXPECT(0x561c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D9 010A
        gbc.setState(0xaf4d, 0xd85b, 0x76a0, 0x24f6, 0xd8b5, 0x3478, 0x1, 0x0);
        gbc.writeMem(0xaf4d, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0xd85b, gbc.sp());
        EXPECT(0xaf4f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaf4d));
        EXPECT(0xd9, gbc.readMem(0xaf4e));
        // CB D9 010B
        gbc.setState(0x774d, 0xc5b2, 0x3850, 0xeeee, 0x892, 0xc910, 0x0, 0x0);
        gbc.writeMem(0x774d, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0xc5b2, gbc.sp());
        EXPECT(0x774f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D9 010C
        gbc.setState(0xca22, 0x5896, 0x520, 0x54c9, 0x4026, 0x171a, 0x1, 0x1);
        gbc.writeMem(0xca22, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x5896, gbc.sp());
        EXPECT(0xca24, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xca22));
        EXPECT(0xd9, gbc.readMem(0xca23));
        // CB D9 010D
        gbc.setState(0xd07a, 0x39a1, 0x3d60, 0x770c, 0xf283, 0xe5b9, 0x1, 0x0);
        gbc.writeMem(0xd07a, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x39a1, gbc.sp());
        EXPECT(0xd07c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd07a));
        EXPECT(0xd9, gbc.readMem(0xd07b));
        // CB D9 010E
        gbc.setState(0xc998, 0x22ca, 0xa130, 0xed83, 0x1552, 0x5d47, 0x1, 0x0);
        gbc.writeMem(0xc998, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x22ca, gbc.sp());
        EXPECT(0xc99a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc998));
        EXPECT(0xd9, gbc.readMem(0xc999));
        // CB D9 010F
        gbc.setState(0x9e55, 0xff44, 0xf550, 0x9e29, 0xecb, 0x8c9c, 0x0, 0x1);
        gbc.writeMem(0x9e55, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0xff44, gbc.sp());
        EXPECT(0x9e57, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9e55));
        EXPECT(0xd9, gbc.readMem(0x9e56));
        // CB D9 0110
        gbc.setState(0x9ebd, 0x2981, 0xee80, 0x557d, 0x6168, 0xc22b, 0x1, 0x1);
        gbc.writeMem(0x9ebd, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x2981, gbc.sp());
        EXPECT(0x9ebf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9ebd));
        EXPECT(0xd9, gbc.readMem(0x9ebe));
        // CB D9 0111
        gbc.setState(0x5c96, 0xb2c6, 0xc1d0, 0xeeba, 0xc391, 0x6794, 0x0, 0x0);
        gbc.writeMem(0x5c96, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0xb2c6, gbc.sp());
        EXPECT(0x5c98, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D9 0112
        gbc.setState(0xe5e5, 0xf7cc, 0x400, 0x8ff3, 0xcc11, 0xa385, 0x0, 0x1);
        gbc.writeMem(0xe5e5, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0xf7cc, gbc.sp());
        EXPECT(0xe5e7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe5e5));
        EXPECT(0xd9, gbc.readMem(0xe5e6));
        // CB D9 0113
        gbc.setState(0x813c, 0xef9b, 0x5d90, 0x309c, 0x6f10, 0xeaab, 0x0, 0x1);
        gbc.writeMem(0x813c, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0xef9b, gbc.sp());
        EXPECT(0x813e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x813c));
        EXPECT(0xd9, gbc.readMem(0x813d));
        // CB D9 0114
        gbc.setState(0xef38, 0x8663, 0xc820, 0xc114, 0xaf04, 0x6d2c, 0x0, 0x0);
        gbc.writeMem(0xef38, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x8663, gbc.sp());
        EXPECT(0xef3a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xef38));
        EXPECT(0xd9, gbc.readMem(0xef39));
        // CB D9 0115
        gbc.setState(0x62c6, 0x71de, 0xcbf0, 0xc3b8, 0x5f07, 0x8142, 0x1, 0x1);
        gbc.writeMem(0x62c6, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x71de, gbc.sp());
        EXPECT(0x62c8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D9 0116
        gbc.setState(0x2e46, 0x40e2, 0xe570, 0x6b2, 0xd86d, 0x434f, 0x1, 0x0);
        gbc.writeMem(0x2e46, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x40e2, gbc.sp());
        EXPECT(0x2e48, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D9 0117
        gbc.setState(0xb423, 0xd150, 0x2760, 0xe2f5, 0x36e6, 0xae17, 0x0, 0x0);
        gbc.writeMem(0xb423, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0xd150, gbc.sp());
        EXPECT(0xb425, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb423));
        EXPECT(0xd9, gbc.readMem(0xb424));
        // CB D9 0118
        gbc.setState(0x362a, 0x69f, 0x0, 0x4df8, 0x3f2e, 0xaa91, 0x1, 0x1);
        gbc.writeMem(0x362a, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x69f, gbc.sp());
        EXPECT(0x362c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D9 0119
        gbc.setState(0xfaa, 0x5d76, 0x15f0, 0xf824, 0xac3b, 0xb687, 0x0, 0x1);
        gbc.writeMem(0xfaa, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x5d76, gbc.sp());
        EXPECT(0xfac, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D9 011A
        gbc.setState(0x5ee1, 0xe5ea, 0x7400, 0x3c0e, 0xe8b, 0x3e7c, 0x1, 0x1);
        gbc.writeMem(0x5ee1, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0xe5ea, gbc.sp());
        EXPECT(0x5ee3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D9 011B
        gbc.setState(0x6351, 0xe210, 0xe8c0, 0xe413, 0xb142, 0x9bf8, 0x1, 0x0);
        gbc.writeMem(0x6351, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0xe210, gbc.sp());
        EXPECT(0x6353, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D9 011C
        gbc.setState(0x6563, 0xf932, 0xa620, 0xf44c, 0x1a45, 0x3f04, 0x1, 0x0);
        gbc.writeMem(0x6563, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0xf932, gbc.sp());
        EXPECT(0x6565, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D9 011D
        gbc.setState(0x7e3a, 0xe493, 0x3b60, 0x8b21, 0xbd78, 0x91d7, 0x0, 0x0);
        gbc.writeMem(0x7e3a, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0xe493, gbc.sp());
        EXPECT(0x7e3c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D9 011E
        gbc.setState(0x3c0b, 0x1d3, 0x35c0, 0x4891, 0xfb4f, 0x4f24, 0x1, 0x0);
        gbc.writeMem(0x3c0b, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x1d3, gbc.sp());
        EXPECT(0x3c0d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D9 011F
        gbc.setState(0x19a9, 0x3a34, 0x4e20, 0xf0d, 0xcafd, 0x94d3, 0x0, 0x0);
        gbc.writeMem(0x19a9, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x3a34, gbc.sp());
        EXPECT(0x19ab, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D9 0120
        gbc.setState(0x64a5, 0xbfd5, 0xb180, 0x5790, 0x9102, 0xde01, 0x0, 0x1);
        gbc.writeMem(0x64a5, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0xbfd5, gbc.sp());
        EXPECT(0x64a7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D9 0121
        gbc.setState(0xe8f6, 0xbcaa, 0xf270, 0xf146, 0x6e5a, 0xabf1, 0x1, 0x1);
        gbc.writeMem(0xe8f6, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0xbcaa, gbc.sp());
        EXPECT(0xe8f8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe8f6));
        EXPECT(0xd9, gbc.readMem(0xe8f7));
        // CB D9 0122
        gbc.setState(0x7404, 0x241b, 0xfaf0, 0xdb46, 0x8348, 0xbcb5, 0x0, 0x1);
        gbc.writeMem(0x7404, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x241b, gbc.sp());
        EXPECT(0x7406, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D9 0123
        gbc.setState(0x5dc7, 0xf1b3, 0x3e0, 0x91cb, 0x8c17, 0x780c, 0x0, 0x1);
        gbc.writeMem(0x5dc7, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0xf1b3, gbc.sp());
        EXPECT(0x5dc9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D9 0124
        gbc.setState(0x4e67, 0x78ce, 0x8890, 0xdce1, 0x1d76, 0x26d7, 0x1, 0x1);
        gbc.writeMem(0x4e67, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0x78ce, gbc.sp());
        EXPECT(0x4e69, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D9 0125
        gbc.setState(0xbac0, 0xb725, 0xfc0, 0x7095, 0xd33b, 0x57f9, 0x1, 0x0);
        gbc.writeMem(0xbac0, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0xb725, gbc.sp());
        EXPECT(0xbac2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbac0));
        EXPECT(0xd9, gbc.readMem(0xbac1));
        // CB D9 0126
        gbc.setState(0x18c6, 0x8743, 0xb4e0, 0x9723, 0xdf24, 0xbdce, 0x0, 0x0);
        gbc.writeMem(0x18c6, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x8743, gbc.sp());
        EXPECT(0x18c8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D9 0127
        gbc.setState(0xcf6c, 0x6fdf, 0xd960, 0x9dd4, 0xa268, 0x6fc2, 0x0, 0x1);
        gbc.writeMem(0xcf6c, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x6fdf, gbc.sp());
        EXPECT(0xcf6e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcf6c));
        EXPECT(0xd9, gbc.readMem(0xcf6d));
        // CB D9 0129
        gbc.setState(0x630c, 0x3902, 0x4230, 0x915, 0x29f5, 0x5c42, 0x1, 0x1);
        gbc.writeMem(0x630c, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x3902, gbc.sp());
        EXPECT(0x630e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D9 012A
        gbc.setState(0x187a, 0xbc7d, 0xd2f0, 0x98ee, 0x4e7f, 0xe1ef, 0x1, 0x1);
        gbc.writeMem(0x187a, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0xbc7d, gbc.sp());
        EXPECT(0x187c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D9 012C
        gbc.setState(0x6aa2, 0x5058, 0xed20, 0x50c6, 0x2879, 0x5ae, 0x0, 0x0);
        gbc.writeMem(0x6aa2, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0x5058, gbc.sp());
        EXPECT(0x6aa4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D9 012D
        gbc.setState(0x5f0a, 0x70a7, 0x7720, 0x97ee, 0x1115, 0xa3fa, 0x0, 0x1);
        gbc.writeMem(0x5f0a, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0x70a7, gbc.sp());
        EXPECT(0x5f0c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D9 012E
        gbc.setState(0x82eb, 0xc044, 0xd880, 0xc1d6, 0xa85b, 0xcbc2, 0x1, 0x0);
        gbc.writeMem(0x82eb, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0xc044, gbc.sp());
        EXPECT(0x82ed, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x82eb));
        EXPECT(0xd9, gbc.readMem(0x82ec));
        // CB D9 012F
        gbc.setState(0x2d94, 0x6b8, 0x8d30, 0xfbb1, 0xe7ae, 0xfa0f, 0x0, 0x1);
        gbc.writeMem(0x2d94, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x6b8, gbc.sp());
        EXPECT(0x2d96, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D9 0130
        gbc.setState(0x4439, 0x2920, 0x38e0, 0xc5cc, 0x915, 0x91f5, 0x0, 0x1);
        gbc.writeMem(0x4439, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x2920, gbc.sp());
        EXPECT(0x443b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D9 0131
        gbc.setState(0xc35a, 0x15d9, 0x26b0, 0x69e7, 0xd8db, 0xb0ac, 0x1, 0x1);
        gbc.writeMem(0xc35a, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x15d9, gbc.sp());
        EXPECT(0xc35c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc35a));
        EXPECT(0xd9, gbc.readMem(0xc35b));
        // CB D9 0132
        gbc.setState(0x269, 0xa1f2, 0xde20, 0xa7d9, 0x79d6, 0xd2a1, 0x0, 0x1);
        gbc.writeMem(0x269, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0xa1f2, gbc.sp());
        EXPECT(0x26b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D9 0133
        gbc.setState(0x18c, 0x6900, 0xb110, 0x2d3c, 0xcfbb, 0xbf97, 0x1, 0x0);
        gbc.writeMem(0x18c, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0x6900, gbc.sp());
        EXPECT(0x18e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D9 0134
        gbc.setState(0xc80c, 0x5c9f, 0xe410, 0x50dd, 0xef6, 0x2a56, 0x1, 0x1);
        gbc.writeMem(0xc80c, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0x5c9f, gbc.sp());
        EXPECT(0xc80e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc80c));
        EXPECT(0xd9, gbc.readMem(0xc80d));
        // CB D9 0135
        gbc.setState(0x9e98, 0x8250, 0x6740, 0x91d5, 0x160d, 0x8dd2, 0x1, 0x0);
        gbc.writeMem(0x9e98, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x8250, gbc.sp());
        EXPECT(0x9e9a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9e98));
        EXPECT(0xd9, gbc.readMem(0x9e99));
        // CB D9 0136
        gbc.setState(0x8cad, 0x7ba6, 0x2820, 0xb7fb, 0x6825, 0x6a1b, 0x1, 0x0);
        gbc.writeMem(0x8cad, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x7ba6, gbc.sp());
        EXPECT(0x8caf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8cad));
        EXPECT(0xd9, gbc.readMem(0x8cae));
        // CB D9 0137
        gbc.setState(0x3940, 0x5476, 0x5aa0, 0x3586, 0x82d1, 0xd247, 0x0, 0x0);
        gbc.writeMem(0x3940, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x5476, gbc.sp());
        EXPECT(0x3942, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D9 0138
        gbc.setState(0xa3fd, 0x5b4, 0x8e00, 0x1b38, 0x6510, 0xc75b, 0x1, 0x1);
        gbc.writeMem(0xa3fd, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x5b4, gbc.sp());
        EXPECT(0xa3ff, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa3fd));
        EXPECT(0xd9, gbc.readMem(0xa3fe));
        // CB D9 0139
        gbc.setState(0x35c8, 0x2840, 0x7370, 0x225a, 0x438e, 0x611d, 0x0, 0x1);
        gbc.writeMem(0x35c8, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x2840, gbc.sp());
        EXPECT(0x35ca, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D9 013A
        gbc.setState(0x7273, 0x276d, 0xc5b0, 0x449d, 0xf28b, 0xc945, 0x1, 0x0);
        gbc.writeMem(0x7273, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x276d, gbc.sp());
        EXPECT(0x7275, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D9 013B
        gbc.setState(0x11d2, 0x691a, 0x7850, 0x2484, 0x6be5, 0x2fd2, 0x1, 0x0);
        gbc.writeMem(0x11d2, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x691a, gbc.sp());
        EXPECT(0x11d4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D9 013C
        gbc.setState(0xa351, 0xc992, 0x4860, 0x9021, 0x6453, 0xb1c1, 0x1, 0x1);
        gbc.writeMem(0xa351, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0xc992, gbc.sp());
        EXPECT(0xa353, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa351));
        EXPECT(0xd9, gbc.readMem(0xa352));
        // CB D9 013D
        gbc.setState(0xb4b0, 0x17fe, 0xd220, 0x7b36, 0x2bc0, 0x62ec, 0x1, 0x1);
        gbc.writeMem(0xb4b0, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x17fe, gbc.sp());
        EXPECT(0xb4b2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb4b0));
        EXPECT(0xd9, gbc.readMem(0xb4b1));
        // CB D9 013E
        gbc.setState(0x686c, 0x4bf, 0xbdf0, 0x41fb, 0x82de, 0x6e3f, 0x1, 0x0);
        gbc.writeMem(0x686c, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0x4bf, gbc.sp());
        EXPECT(0x686e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D9 013F
        gbc.setState(0xe0d4, 0xdd39, 0xd880, 0x4542, 0xcfed, 0xc960, 0x1, 0x0);
        gbc.writeMem(0xe0d4, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0xdd39, gbc.sp());
        EXPECT(0xe0d6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe0d4));
        EXPECT(0xd9, gbc.readMem(0xe0d5));
        // CB D9 0140
        gbc.setState(0x714d, 0xfb55, 0x5160, 0xc1da, 0x3ff9, 0xc53e, 0x0, 0x1);
        gbc.writeMem(0x714d, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0xfb55, gbc.sp());
        EXPECT(0x714f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D9 0141
        gbc.setState(0xcb50, 0x7f6b, 0x2ac0, 0x8f0f, 0xdc38, 0x1bf1, 0x1, 0x0);
        gbc.writeMem(0xcb50, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x7f6b, gbc.sp());
        EXPECT(0xcb52, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcb50));
        EXPECT(0xd9, gbc.readMem(0xcb51));
        // CB D9 0142
        gbc.setState(0xd270, 0x55ea, 0x2200, 0x6daf, 0x594a, 0x2e43, 0x1, 0x0);
        gbc.writeMem(0xd270, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x55ea, gbc.sp());
        EXPECT(0xd272, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd270));
        EXPECT(0xd9, gbc.readMem(0xd271));
        // CB D9 0143
        gbc.setState(0x6e03, 0xa4dc, 0x80a0, 0xc55f, 0x9941, 0x22f4, 0x0, 0x0);
        gbc.writeMem(0x6e03, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0xa4dc, gbc.sp());
        EXPECT(0x6e05, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D9 0144
        gbc.setState(0x7349, 0xd069, 0x8970, 0x54e1, 0x68ca, 0x360a, 0x0, 0x1);
        gbc.writeMem(0x7349, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0xd069, gbc.sp());
        EXPECT(0x734b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D9 0145
        gbc.setState(0x9d7c, 0x2b0f, 0xdd50, 0xef99, 0xb10e, 0xf744, 0x1, 0x1);
        gbc.writeMem(0x9d7c, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x2b0f, gbc.sp());
        EXPECT(0x9d7e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9d7c));
        EXPECT(0xd9, gbc.readMem(0x9d7d));
        // CB D9 0146
        gbc.setState(0xb47e, 0xd02, 0xf8b0, 0xa365, 0xe7e3, 0x80c4, 0x1, 0x0);
        gbc.writeMem(0xb47e, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0xd02, gbc.sp());
        EXPECT(0xb480, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb47e));
        EXPECT(0xd9, gbc.readMem(0xb47f));
        // CB D9 0147
        gbc.setState(0x113b, 0x51ea, 0x6490, 0x5094, 0x6a2c, 0xe851, 0x1, 0x0);
        gbc.writeMem(0x113b, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x51ea, gbc.sp());
        EXPECT(0x113d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D9 0148
        gbc.setState(0x650b, 0x74e4, 0x9ac0, 0xe179, 0xf1a6, 0xf770, 0x0, 0x1);
        gbc.writeMem(0x650b, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x74e4, gbc.sp());
        EXPECT(0x650d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D9 0149
        gbc.setState(0xc948, 0x8ec3, 0x5db0, 0xce3c, 0xb4e4, 0xe3a, 0x0, 0x0);
        gbc.writeMem(0xc948, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x8ec3, gbc.sp());
        EXPECT(0xc94a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc948));
        EXPECT(0xd9, gbc.readMem(0xc949));
        // CB D9 014A
        gbc.setState(0x754d, 0xc71a, 0xb530, 0x99a7, 0x583, 0x559d, 0x0, 0x0);
        gbc.writeMem(0x754d, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0xc71a, gbc.sp());
        EXPECT(0x754f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D9 014B
        gbc.setState(0xd4f0, 0xf90b, 0xf100, 0xa50b, 0x240b, 0x8e4, 0x1, 0x1);
        gbc.writeMem(0xd4f0, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0xf90b, gbc.sp());
        EXPECT(0xd4f2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd4f0));
        EXPECT(0xd9, gbc.readMem(0xd4f1));
        // CB D9 014C
        gbc.setState(0x7022, 0x50de, 0xf1b0, 0x6831, 0x2827, 0x972f, 0x1, 0x1);
        gbc.writeMem(0x7022, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x50de, gbc.sp());
        EXPECT(0x7024, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D9 014D
        gbc.setState(0x5fb5, 0x6c3f, 0x3290, 0xeb5c, 0xfcd8, 0x4a0, 0x0, 0x1);
        gbc.writeMem(0x5fb5, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x6c3f, gbc.sp());
        EXPECT(0x5fb7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D9 014E
        gbc.setState(0x97a4, 0xa8b5, 0xd510, 0xb47d, 0xdb5a, 0xba40, 0x0, 0x0);
        gbc.writeMem(0x97a4, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0xa8b5, gbc.sp());
        EXPECT(0x97a6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x97a4));
        EXPECT(0xd9, gbc.readMem(0x97a5));
        // CB D9 014F
        gbc.setState(0x79ea, 0xd701, 0x9ed0, 0x8b1d, 0x16c2, 0x27fb, 0x1, 0x0);
        gbc.writeMem(0x79ea, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0xd701, gbc.sp());
        EXPECT(0x79ec, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D9 0150
        gbc.setState(0x1519, 0x2fad, 0x6c40, 0x6ad, 0x90ca, 0x9c22, 0x1, 0x0);
        gbc.writeMem(0x1519, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x2fad, gbc.sp());
        EXPECT(0x151b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D9 0151
        gbc.setState(0x369a, 0xe801, 0x8e00, 0x1083, 0x3933, 0x6444, 0x1, 0x0);
        gbc.writeMem(0x369a, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0xe801, gbc.sp());
        EXPECT(0x369c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D9 0152
        gbc.setState(0xb29d, 0x28e9, 0x6e50, 0x9b6b, 0xd33a, 0x33e, 0x0, 0x0);
        gbc.writeMem(0xb29d, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x28e9, gbc.sp());
        EXPECT(0xb29f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb29d));
        EXPECT(0xd9, gbc.readMem(0xb29e));
        // CB D9 0153
        gbc.setState(0x99, 0x56c4, 0x9f0, 0xea5b, 0x7a2, 0x251d, 0x0, 0x0);
        gbc.writeMem(0x99, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x56c4, gbc.sp());
        EXPECT(0x9b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D9 0154
        gbc.setState(0xcfdf, 0xd5e4, 0x74e0, 0x13fe, 0x2078, 0x738, 0x1, 0x0);
        gbc.writeMem(0xcfdf, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0xd5e4, gbc.sp());
        EXPECT(0xcfe1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcfdf));
        EXPECT(0xd9, gbc.readMem(0xcfe0));
        // CB D9 0155
        gbc.setState(0xc9c0, 0xb701, 0x8250, 0x9d48, 0xb1f0, 0xbc35, 0x0, 0x1);
        gbc.writeMem(0xc9c0, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0xb701, gbc.sp());
        EXPECT(0xc9c2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc9c0));
        EXPECT(0xd9, gbc.readMem(0xc9c1));
        // CB D9 0156
        gbc.setState(0x3282, 0x67ef, 0xed40, 0x4ba4, 0x7343, 0xf2d0, 0x0, 0x0);
        gbc.writeMem(0x3282, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x67ef, gbc.sp());
        EXPECT(0x3284, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D9 0157
        gbc.setState(0xe969, 0x6fa, 0x8f00, 0x1461, 0x25c5, 0x5dbf, 0x1, 0x0);
        gbc.writeMem(0xe969, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x6fa, gbc.sp());
        EXPECT(0xe96b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe969));
        EXPECT(0xd9, gbc.readMem(0xe96a));
        // CB D9 0158
        gbc.setState(0x502f, 0x2f20, 0x1fe0, 0x2f4d, 0xd395, 0x505f, 0x1, 0x1);
        gbc.writeMem(0x502f, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x2f20, gbc.sp());
        EXPECT(0x5031, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D9 0159
        gbc.setState(0x1f48, 0xb4cb, 0xc550, 0x2433, 0x2a12, 0x48d8, 0x1, 0x1);
        gbc.writeMem(0x1f48, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0xb4cb, gbc.sp());
        EXPECT(0x1f4a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D9 015A
        gbc.setState(0xd084, 0x3550, 0x880, 0x19c0, 0x2c44, 0xea3f, 0x0, 0x0);
        gbc.writeMem(0xd084, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0x3550, gbc.sp());
        EXPECT(0xd086, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd084));
        EXPECT(0xd9, gbc.readMem(0xd085));
        // CB D9 015B
        gbc.setState(0x138a, 0xbfd5, 0xf30, 0xb698, 0x738a, 0x9b06, 0x1, 0x0);
        gbc.writeMem(0x138a, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0xbfd5, gbc.sp());
        EXPECT(0x138c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D9 015C
        gbc.setState(0x740e, 0x48bc, 0xf3e0, 0xfc6e, 0x2b10, 0x32b7, 0x0, 0x1);
        gbc.writeMem(0x740e, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x48bc, gbc.sp());
        EXPECT(0x7410, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D9 015D
        gbc.setState(0xbd80, 0x3913, 0x8900, 0xeb50, 0x783e, 0xadc3, 0x1, 0x0);
        gbc.writeMem(0xbd80, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x3913, gbc.sp());
        EXPECT(0xbd82, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbd80));
        EXPECT(0xd9, gbc.readMem(0xbd81));
        // CB D9 015E
        gbc.setState(0x542, 0xd01d, 0x5ad0, 0x3e0, 0xcf42, 0x471d, 0x0, 0x0);
        gbc.writeMem(0x542, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0xd01d, gbc.sp());
        EXPECT(0x544, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D9 015F
        gbc.setState(0xe26, 0x7715, 0x83a0, 0x77d2, 0x69e3, 0x2645, 0x0, 0x1);
        gbc.writeMem(0xe26, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x7715, gbc.sp());
        EXPECT(0xe28, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D9 0160
        gbc.setState(0x9831, 0x84aa, 0x21d0, 0x283, 0xb4af, 0xea3e, 0x1, 0x0);
        gbc.writeMem(0x9831, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x84aa, gbc.sp());
        EXPECT(0x9833, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9831));
        EXPECT(0xd9, gbc.readMem(0x9832));
        // CB D9 0161
        gbc.setState(0xdaed, 0xa251, 0x4a20, 0xbada, 0xec3b, 0x820f, 0x0, 0x1);
        gbc.writeMem(0xdaed, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0xa251, gbc.sp());
        EXPECT(0xdaef, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdaed));
        EXPECT(0xd9, gbc.readMem(0xdaee));
        // CB D9 0162
        gbc.setState(0x3fb, 0x9642, 0xa870, 0x6fdd, 0xaf2e, 0xcb9f, 0x1, 0x0);
        gbc.writeMem(0x3fb, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x9642, gbc.sp());
        EXPECT(0x3fd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D9 0163
        gbc.setState(0xa6cf, 0x706d, 0x96f0, 0x3c34, 0xd0ce, 0x9005, 0x0, 0x1);
        gbc.writeMem(0xa6cf, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x706d, gbc.sp());
        EXPECT(0xa6d1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa6cf));
        EXPECT(0xd9, gbc.readMem(0xa6d0));
        // CB D9 0164
        gbc.setState(0x8b86, 0xcc61, 0x5770, 0xb381, 0xbb0f, 0xfa13, 0x1, 0x0);
        gbc.writeMem(0x8b86, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0xcc61, gbc.sp());
        EXPECT(0x8b88, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8b86));
        EXPECT(0xd9, gbc.readMem(0x8b87));
        // CB D9 0166
        gbc.setState(0xbe9d, 0xedcd, 0x8310, 0xcccf, 0x5e82, 0x88ae, 0x1, 0x0);
        gbc.writeMem(0xbe9d, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0xedcd, gbc.sp());
        EXPECT(0xbe9f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbe9d));
        EXPECT(0xd9, gbc.readMem(0xbe9e));
        // CB D9 0167
        gbc.setState(0xa46c, 0x9300, 0xb430, 0x904c, 0x7f8, 0xe7e0, 0x1, 0x1);
        gbc.writeMem(0xa46c, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x9300, gbc.sp());
        EXPECT(0xa46e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa46c));
        EXPECT(0xd9, gbc.readMem(0xa46d));
        // CB D9 0168
        gbc.setState(0xcae1, 0x6552, 0x57e0, 0xbc2f, 0x9ce1, 0x3480, 0x0, 0x0);
        gbc.writeMem(0xcae1, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x6552, gbc.sp());
        EXPECT(0xcae3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcae1));
        EXPECT(0xd9, gbc.readMem(0xcae2));
        // CB D9 0169
        gbc.setState(0x2012, 0x1898, 0x4900, 0x7d9f, 0x88ee, 0xd64f, 0x1, 0x0);
        gbc.writeMem(0x2012, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x1898, gbc.sp());
        EXPECT(0x2014, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D9 016A
        gbc.setState(0x7ffb, 0x9dca, 0xace0, 0x9a56, 0x2bb3, 0x2e78, 0x1, 0x1);
        gbc.writeMem(0x7ffb, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x9dca, gbc.sp());
        EXPECT(0x7ffd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D9 016B
        gbc.setState(0xc14a, 0x4dc2, 0xed80, 0xe011, 0x93fd, 0x2387, 0x0, 0x0);
        gbc.writeMem(0xc14a, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x4dc2, gbc.sp());
        EXPECT(0xc14c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc14a));
        EXPECT(0xd9, gbc.readMem(0xc14b));
        // CB D9 016C
        gbc.setState(0xfe5, 0xb9ff, 0xca60, 0x9532, 0x442f, 0x3acc, 0x0, 0x0);
        gbc.writeMem(0xfe5, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0xb9ff, gbc.sp());
        EXPECT(0xfe7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D9 016D
        gbc.setState(0x88b1, 0x59b, 0xbfe0, 0x6eee, 0x44eb, 0x2b13, 0x0, 0x0);
        gbc.writeMem(0x88b1, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x59b, gbc.sp());
        EXPECT(0x88b3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x88b1));
        EXPECT(0xd9, gbc.readMem(0x88b2));
        // CB D9 016E
        gbc.setState(0x3dbe, 0x5e2a, 0xa480, 0x820d, 0x4aef, 0x9333, 0x0, 0x1);
        gbc.writeMem(0x3dbe, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x5e2a, gbc.sp());
        EXPECT(0x3dc0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D9 016F
        gbc.setState(0xd525, 0x9aca, 0xe450, 0x628f, 0x7750, 0x3685, 0x0, 0x1);
        gbc.writeMem(0xd525, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x9aca, gbc.sp());
        EXPECT(0xd527, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd525));
        EXPECT(0xd9, gbc.readMem(0xd526));
        // CB D9 0170
        gbc.setState(0x2b5, 0x109f, 0x6ae0, 0x4eee, 0xc873, 0x4cae, 0x0, 0x0);
        gbc.writeMem(0x2b5, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0x109f, gbc.sp());
        EXPECT(0x2b7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D9 0171
        gbc.setState(0xcca8, 0x708c, 0xd1c0, 0xd506, 0x940, 0xa1b3, 0x0, 0x0);
        gbc.writeMem(0xcca8, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x708c, gbc.sp());
        EXPECT(0xccaa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcca8));
        EXPECT(0xd9, gbc.readMem(0xcca9));
        // CB D9 0172
        gbc.setState(0xcbab, 0xc619, 0xf6e0, 0xd4a8, 0xbd8a, 0x7e3b, 0x1, 0x0);
        gbc.writeMem(0xcbab, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0xc619, gbc.sp());
        EXPECT(0xcbad, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcbab));
        EXPECT(0xd9, gbc.readMem(0xcbac));
        // CB D9 0173
        gbc.setState(0xd7ef, 0x4195, 0x74a0, 0x76bb, 0xa1f5, 0x52df, 0x0, 0x1);
        gbc.writeMem(0xd7ef, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x4195, gbc.sp());
        EXPECT(0xd7f1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd7ef));
        EXPECT(0xd9, gbc.readMem(0xd7f0));
        // CB D9 0174
        gbc.setState(0xc867, 0x6b7d, 0x4980, 0xa74b, 0x5331, 0x2140, 0x1, 0x1);
        gbc.writeMem(0xc867, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x6b7d, gbc.sp());
        EXPECT(0xc869, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc867));
        EXPECT(0xd9, gbc.readMem(0xc868));
        // CB D9 0175
        gbc.setState(0x50d2, 0x8428, 0x2460, 0xfca2, 0xcfe4, 0x2f65, 0x1, 0x0);
        gbc.writeMem(0x50d2, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x8428, gbc.sp());
        EXPECT(0x50d4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D9 0176
        gbc.setState(0x415a, 0x317e, 0x9fd0, 0x793e, 0xfd9f, 0xa6fc, 0x1, 0x0);
        gbc.writeMem(0x415a, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x317e, gbc.sp());
        EXPECT(0x415c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D9 0177
        gbc.setState(0x4f90, 0x8ce3, 0xcbe0, 0x3984, 0x4e35, 0xaa2, 0x0, 0x1);
        gbc.writeMem(0x4f90, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x8ce3, gbc.sp());
        EXPECT(0x4f92, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D9 0178
        gbc.setState(0x2e31, 0xa44d, 0x16a0, 0x430e, 0xed88, 0xae58, 0x0, 0x1);
        gbc.writeMem(0x2e31, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0xa44d, gbc.sp());
        EXPECT(0x2e33, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D9 0179
        gbc.setState(0x32ba, 0xe082, 0xc280, 0xf254, 0x1381, 0xa18c, 0x1, 0x0);
        gbc.writeMem(0x32ba, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0xe082, gbc.sp());
        EXPECT(0x32bc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D9 017A
        gbc.setState(0x3c29, 0x1086, 0x55f0, 0x77f2, 0x9968, 0xab26, 0x0, 0x0);
        gbc.writeMem(0x3c29, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x1086, gbc.sp());
        EXPECT(0x3c2b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D9 017B
        gbc.setState(0xd747, 0x4eb6, 0x3d20, 0x2aab, 0xe09e, 0x25c, 0x0, 0x0);
        gbc.writeMem(0xd747, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x4eb6, gbc.sp());
        EXPECT(0xd749, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd747));
        EXPECT(0xd9, gbc.readMem(0xd748));
        // CB D9 017C
        gbc.setState(0x9d46, 0xe6c5, 0x530, 0x8538, 0xa587, 0xf4a2, 0x1, 0x0);
        gbc.writeMem(0x9d46, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0xe6c5, gbc.sp());
        EXPECT(0x9d48, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9d46));
        EXPECT(0xd9, gbc.readMem(0x9d47));
        // CB D9 017D
        gbc.setState(0x1030, 0x3486, 0x5ec0, 0xeb63, 0x15f9, 0x36a5, 0x1, 0x0);
        gbc.writeMem(0x1030, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x3486, gbc.sp());
        EXPECT(0x1032, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D9 017E
        gbc.setState(0xc934, 0x5033, 0x9f0, 0xc7e8, 0x45d4, 0x4de2, 0x0, 0x0);
        gbc.writeMem(0xc934, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x5033, gbc.sp());
        EXPECT(0xc936, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc934));
        EXPECT(0xd9, gbc.readMem(0xc935));
        // CB D9 017F
        gbc.setState(0xd353, 0x26aa, 0x7e90, 0x6397, 0x1120, 0x9bf8, 0x0, 0x1);
        gbc.writeMem(0xd353, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x26aa, gbc.sp());
        EXPECT(0xd355, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd353));
        EXPECT(0xd9, gbc.readMem(0xd354));
        // CB D9 0180
        gbc.setState(0xc901, 0xe607, 0x5c40, 0xe5eb, 0x97c6, 0x3b54, 0x1, 0x0);
        gbc.writeMem(0xc901, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0xe607, gbc.sp());
        EXPECT(0xc903, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc901));
        EXPECT(0xd9, gbc.readMem(0xc902));
        // CB D9 0181
        gbc.setState(0x2adc, 0xb951, 0x14f0, 0xf84a, 0x5dba, 0xb7fc, 0x0, 0x0);
        gbc.writeMem(0x2adc, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0xb951, gbc.sp());
        EXPECT(0x2ade, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D9 0182
        gbc.setState(0x3cb6, 0xb740, 0x3450, 0xad4f, 0xbe44, 0x7883, 0x1, 0x0);
        gbc.writeMem(0x3cb6, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0xb740, gbc.sp());
        EXPECT(0x3cb8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D9 0183
        gbc.setState(0x2b91, 0xb2d1, 0x3b70, 0x7c55, 0x2e25, 0x7a55, 0x1, 0x1);
        gbc.writeMem(0x2b91, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0xb2d1, gbc.sp());
        EXPECT(0x2b93, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D9 0184
        gbc.setState(0x6d7b, 0xe45e, 0xfe90, 0xc06c, 0xb6e1, 0xd8b, 0x1, 0x1);
        gbc.writeMem(0x6d7b, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0xe45e, gbc.sp());
        EXPECT(0x6d7d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D9 0185
        gbc.setState(0xe37c, 0xa0cf, 0xb4e0, 0xd2df, 0xab10, 0xb389, 0x0, 0x1);
        gbc.writeMem(0xe37c, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0xa0cf, gbc.sp());
        EXPECT(0xe37e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe37c));
        EXPECT(0xd9, gbc.readMem(0xe37d));
        // CB D9 0186
        gbc.setState(0x9b3c, 0x6634, 0xb460, 0xd205, 0x3a1b, 0x9c67, 0x0, 0x1);
        gbc.writeMem(0x9b3c, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x6634, gbc.sp());
        EXPECT(0x9b3e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9b3c));
        EXPECT(0xd9, gbc.readMem(0x9b3d));
        // CB D9 0187
        gbc.setState(0x9f74, 0xbc2a, 0xc320, 0xcbef, 0x1a38, 0xc0b2, 0x0, 0x1);
        gbc.writeMem(0x9f74, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0xbc2a, gbc.sp());
        EXPECT(0x9f76, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9f74));
        EXPECT(0xd9, gbc.readMem(0x9f75));
        // CB D9 0188
        gbc.setState(0xc05b, 0xb3b8, 0x3990, 0x1ebb, 0xe97e, 0x7f26, 0x1, 0x0);
        gbc.writeMem(0xc05b, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0xb3b8, gbc.sp());
        EXPECT(0xc05d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc05b));
        EXPECT(0xd9, gbc.readMem(0xc05c));
        // CB D9 0189
        gbc.setState(0xbaec, 0xfb51, 0x8dd0, 0xaab9, 0x2ea6, 0xd658, 0x1, 0x0);
        gbc.writeMem(0xbaec, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0xfb51, gbc.sp());
        EXPECT(0xbaee, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbaec));
        EXPECT(0xd9, gbc.readMem(0xbaed));
        // CB D9 018A
        gbc.setState(0xa7e7, 0xa149, 0x7110, 0x6dc9, 0xb145, 0xde6e, 0x0, 0x1);
        gbc.writeMem(0xa7e7, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0xa149, gbc.sp());
        EXPECT(0xa7e9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa7e7));
        EXPECT(0xd9, gbc.readMem(0xa7e8));
        // CB D9 018B
        gbc.setState(0x83cf, 0x3922, 0x450, 0xade7, 0x5bf3, 0x766e, 0x1, 0x1);
        gbc.writeMem(0x83cf, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x3922, gbc.sp());
        EXPECT(0x83d1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x83cf));
        EXPECT(0xd9, gbc.readMem(0x83d0));
        // CB D9 018C
        gbc.setState(0x3015, 0x4b99, 0xe040, 0xa56a, 0x2487, 0xdb3c, 0x1, 0x1);
        gbc.writeMem(0x3015, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x4b99, gbc.sp());
        EXPECT(0x3017, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D9 018D
        gbc.setState(0x6821, 0x873c, 0xb190, 0x7cb7, 0x8c3e, 0xfa48, 0x1, 0x1);
        gbc.writeMem(0x6821, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0x873c, gbc.sp());
        EXPECT(0x6823, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D9 018E
        gbc.setState(0xa36, 0xc968, 0x1240, 0x9f0, 0x6f8f, 0x528d, 0x1, 0x0);
        gbc.writeMem(0xa36, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0xc968, gbc.sp());
        EXPECT(0xa38, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D9 018F
        gbc.setState(0x3116, 0x1bc2, 0x7840, 0x23a2, 0xa459, 0xa2a4, 0x0, 0x1);
        gbc.writeMem(0x3116, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x1bc2, gbc.sp());
        EXPECT(0x3118, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D9 0190
        gbc.setState(0x4b80, 0xc278, 0xec0, 0x1ee, 0xdaef, 0xdff3, 0x1, 0x1);
        gbc.writeMem(0x4b80, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0xc278, gbc.sp());
        EXPECT(0x4b82, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D9 0191
        gbc.setState(0x3aec, 0x484, 0x460, 0x749f, 0x7502, 0x849f, 0x1, 0x1);
        gbc.writeMem(0x3aec, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x484, gbc.sp());
        EXPECT(0x3aee, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D9 0192
        gbc.setState(0xe1cf, 0xb536, 0xaf0, 0x8d58, 0xbc56, 0x568d, 0x0, 0x0);
        gbc.writeMem(0xe1cf, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0xb536, gbc.sp());
        EXPECT(0xe1d1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe1cf));
        EXPECT(0xd9, gbc.readMem(0xe1d0));
        // CB D9 0193
        gbc.setState(0x1fdc, 0xaafc, 0x9fb0, 0x86ad, 0x3844, 0xae28, 0x0, 0x0);
        gbc.writeMem(0x1fdc, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0xaafc, gbc.sp());
        EXPECT(0x1fde, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D9 0194
        gbc.setState(0xd23a, 0x9b3f, 0xa420, 0xd0df, 0xe13f, 0x86f7, 0x0, 0x1);
        gbc.writeMem(0xd23a, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x9b3f, gbc.sp());
        EXPECT(0xd23c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd23a));
        EXPECT(0xd9, gbc.readMem(0xd23b));
        // CB D9 0195
        gbc.setState(0xebd2, 0x4ab7, 0xfe60, 0x410d, 0xb3d5, 0x3e72, 0x1, 0x1);
        gbc.writeMem(0xebd2, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x4ab7, gbc.sp());
        EXPECT(0xebd4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xebd2));
        EXPECT(0xd9, gbc.readMem(0xebd3));
        // CB D9 0196
        gbc.setState(0xbd4c, 0xff56, 0x46d0, 0xbc3a, 0x9af7, 0xad51, 0x1, 0x1);
        gbc.writeMem(0xbd4c, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0xff56, gbc.sp());
        EXPECT(0xbd4e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbd4c));
        EXPECT(0xd9, gbc.readMem(0xbd4d));
        // CB D9 0197
        gbc.setState(0x5c0e, 0x21a9, 0x9170, 0xb3c7, 0xada0, 0xdfee, 0x1, 0x1);
        gbc.writeMem(0x5c0e, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x21a9, gbc.sp());
        EXPECT(0x5c10, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D9 0198
        gbc.setState(0xee8, 0x45be, 0xe120, 0xc36d, 0x907b, 0x43a8, 0x0, 0x0);
        gbc.writeMem(0xee8, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x45be, gbc.sp());
        EXPECT(0xeea, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D9 0199
        gbc.setState(0xa75b, 0x1c88, 0xfce0, 0x1caa, 0x27a7, 0x89b2, 0x0, 0x1);
        gbc.writeMem(0xa75b, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x1c88, gbc.sp());
        EXPECT(0xa75d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa75b));
        EXPECT(0xd9, gbc.readMem(0xa75c));
        // CB D9 019A
        gbc.setState(0xd51b, 0x96ad, 0x8f10, 0x6b63, 0x213e, 0xaf0, 0x1, 0x0);
        gbc.writeMem(0xd51b, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x96ad, gbc.sp());
        EXPECT(0xd51d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd51b));
        EXPECT(0xd9, gbc.readMem(0xd51c));
        // CB D9 019B
        gbc.setState(0xe3aa, 0x5a2d, 0x98c0, 0x61c3, 0xdc9c, 0xbb41, 0x1, 0x1);
        gbc.writeMem(0xe3aa, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x5a2d, gbc.sp());
        EXPECT(0xe3ac, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe3aa));
        EXPECT(0xd9, gbc.readMem(0xe3ab));
        // CB D9 019C
        gbc.setState(0x9a78, 0x3309, 0x1280, 0xfc72, 0xe634, 0x68ca, 0x1, 0x0);
        gbc.writeMem(0x9a78, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x3309, gbc.sp());
        EXPECT(0x9a7a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9a78));
        EXPECT(0xd9, gbc.readMem(0x9a79));
        // CB D9 019D
        gbc.setState(0x36fe, 0xa384, 0x1840, 0x4de5, 0x240f, 0xa2a1, 0x1, 0x1);
        gbc.writeMem(0x36fe, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0xa384, gbc.sp());
        EXPECT(0x3700, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D9 019F
        gbc.setState(0x8075, 0x5e06, 0xfa70, 0xb6c2, 0x91c4, 0x32af, 0x0, 0x0);
        gbc.writeMem(0x8075, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x5e06, gbc.sp());
        EXPECT(0x8077, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8075));
        EXPECT(0xd9, gbc.readMem(0x8076));
        // CB D9 01A0
        gbc.setState(0xc64a, 0x9a9c, 0x3cb0, 0xb075, 0x9869, 0xf7da, 0x0, 0x0);
        gbc.writeMem(0xc64a, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x9a9c, gbc.sp());
        EXPECT(0xc64c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc64a));
        EXPECT(0xd9, gbc.readMem(0xc64b));
        // CB D9 01A1
        gbc.setState(0x6acd, 0x69af, 0xef20, 0xbd87, 0xb740, 0x95a3, 0x1, 0x0);
        gbc.writeMem(0x6acd, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0x69af, gbc.sp());
        EXPECT(0x6acf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D9 01A2
        gbc.setState(0x7756, 0x9490, 0xf220, 0x544c, 0x767, 0xacff, 0x1, 0x0);
        gbc.writeMem(0x7756, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x9490, gbc.sp());
        EXPECT(0x7758, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D9 01A3
        gbc.setState(0x736b, 0x51bf, 0x6e90, 0x96f0, 0xfd84, 0xd111, 0x0, 0x1);
        gbc.writeMem(0x736b, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x51bf, gbc.sp());
        EXPECT(0x736d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D9 01A4
        gbc.setState(0x8af2, 0x4416, 0x25b0, 0x6a56, 0xede8, 0xf90b, 0x1, 0x1);
        gbc.writeMem(0x8af2, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x4416, gbc.sp());
        EXPECT(0x8af4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8af2));
        EXPECT(0xd9, gbc.readMem(0x8af3));
        // CB D9 01A5
        gbc.setState(0x5e1c, 0xac7f, 0x7eb0, 0x4a4, 0xdd98, 0xf60, 0x1, 0x1);
        gbc.writeMem(0x5e1c, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0xac7f, gbc.sp());
        EXPECT(0x5e1e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D9 01A6
        gbc.setState(0xcc2e, 0x463f, 0xb860, 0x5c6b, 0xf29c, 0x1449, 0x1, 0x0);
        gbc.writeMem(0xcc2e, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x463f, gbc.sp());
        EXPECT(0xcc30, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcc2e));
        EXPECT(0xd9, gbc.readMem(0xcc2f));
        // CB D9 01A7
        gbc.setState(0xddf, 0x3f76, 0x5d20, 0x5470, 0xb148, 0x586a, 0x1, 0x0);
        gbc.writeMem(0xddf, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x3f76, gbc.sp());
        EXPECT(0xde1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D9 01A8
        gbc.setState(0x21ab, 0x2e2b, 0x3290, 0x3fc4, 0xecf1, 0xaa11, 0x1, 0x0);
        gbc.writeMem(0x21ab, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x2e2b, gbc.sp());
        EXPECT(0x21ad, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D9 01A9
        gbc.setState(0xac12, 0xd29f, 0xc550, 0xa7ae, 0x3cb2, 0x9a4f, 0x0, 0x0);
        gbc.writeMem(0xac12, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0xd29f, gbc.sp());
        EXPECT(0xac14, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xac12));
        EXPECT(0xd9, gbc.readMem(0xac13));
        // CB D9 01AA
        gbc.setState(0x1629, 0xf968, 0x650, 0xa15d, 0x7725, 0x7b2, 0x0, 0x1);
        gbc.writeMem(0x1629, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0xf968, gbc.sp());
        EXPECT(0x162b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D9 01AB
        gbc.setState(0x2eb1, 0xb8ad, 0x47d0, 0xe372, 0x92b3, 0x767c, 0x0, 0x0);
        gbc.writeMem(0x2eb1, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0xb8ad, gbc.sp());
        EXPECT(0x2eb3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D9 01AC
        gbc.setState(0x89e3, 0xac3, 0xdff0, 0xe7b3, 0x8995, 0x80af, 0x0, 0x1);
        gbc.writeMem(0x89e3, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0xac3, gbc.sp());
        EXPECT(0x89e5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x89e3));
        EXPECT(0xd9, gbc.readMem(0x89e4));
        // CB D9 01AD
        gbc.setState(0xed30, 0xdde6, 0xa750, 0xc143, 0x81ca, 0x70c9, 0x0, 0x0);
        gbc.writeMem(0xed30, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0xdde6, gbc.sp());
        EXPECT(0xed32, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xed30));
        EXPECT(0xd9, gbc.readMem(0xed31));
        // CB D9 01AE
        gbc.setState(0xdf33, 0x66a6, 0x69b0, 0xc6b6, 0xe5c1, 0x31b7, 0x0, 0x1);
        gbc.writeMem(0xdf33, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x66a6, gbc.sp());
        EXPECT(0xdf35, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdf33));
        EXPECT(0xd9, gbc.readMem(0xdf34));
        // CB D9 01B0
        gbc.setState(0x8d85, 0x2b43, 0x7e90, 0xe4ec, 0xa194, 0x7528, 0x1, 0x1);
        gbc.writeMem(0x8d85, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x2b43, gbc.sp());
        EXPECT(0x8d87, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8d85));
        EXPECT(0xd9, gbc.readMem(0x8d86));
        // CB D9 01B1
        gbc.setState(0x4a8f, 0x4d0, 0xc2f0, 0x17bf, 0x19ce, 0x7a37, 0x1, 0x0);
        gbc.writeMem(0x4a8f, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x4d0, gbc.sp());
        EXPECT(0x4a91, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D9 01B2
        gbc.setState(0x4601, 0xe2ae, 0x67d0, 0x99fb, 0xd6ac, 0x6712, 0x1, 0x0);
        gbc.writeMem(0x4601, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0xe2ae, gbc.sp());
        EXPECT(0x4603, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D9 01B3
        gbc.setState(0xd5d2, 0x5c0d, 0xc8a0, 0x6548, 0xf316, 0xf1cd, 0x1, 0x1);
        gbc.writeMem(0xd5d2, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x5c0d, gbc.sp());
        EXPECT(0xd5d4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd5d2));
        EXPECT(0xd9, gbc.readMem(0xd5d3));
        // CB D9 01B4
        gbc.setState(0x1f94, 0x181f, 0x14f0, 0x13b2, 0x543a, 0xdb02, 0x0, 0x0);
        gbc.writeMem(0x1f94, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x181f, gbc.sp());
        EXPECT(0x1f96, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D9 01B5
        gbc.setState(0x8d26, 0x9fc4, 0xb240, 0x5cbd, 0xf480, 0x602f, 0x1, 0x0);
        gbc.writeMem(0x8d26, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x9fc4, gbc.sp());
        EXPECT(0x8d28, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8d26));
        EXPECT(0xd9, gbc.readMem(0x8d27));
        // CB D9 01B6
        gbc.setState(0xc580, 0xba6b, 0xd910, 0x5ec1, 0x60d9, 0x221c, 0x0, 0x0);
        gbc.writeMem(0xc580, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0xba6b, gbc.sp());
        EXPECT(0xc582, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc580));
        EXPECT(0xd9, gbc.readMem(0xc581));
        // CB D9 01B7
        gbc.setState(0xe7cf, 0x1fa, 0x7410, 0x5543, 0xc597, 0x99cc, 0x0, 0x1);
        gbc.writeMem(0xe7cf, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x1fa, gbc.sp());
        EXPECT(0xe7d1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe7cf));
        EXPECT(0xd9, gbc.readMem(0xe7d0));
        // CB D9 01B8
        gbc.setState(0x618b, 0xac00, 0xd500, 0xcbd9, 0xebe2, 0x421c, 0x1, 0x0);
        gbc.writeMem(0x618b, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0xac00, gbc.sp());
        EXPECT(0x618d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D9 01B9
        gbc.setState(0x500e, 0xe00a, 0x4bd0, 0xb43b, 0x358c, 0x428, 0x0, 0x1);
        gbc.writeMem(0x500e, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0xe00a, gbc.sp());
        EXPECT(0x5010, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D9 01BB
        gbc.setState(0x59ad, 0xb331, 0xad20, 0xe4f7, 0x4cef, 0xbf0d, 0x1, 0x1);
        gbc.writeMem(0x59ad, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0xb331, gbc.sp());
        EXPECT(0x59af, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D9 01BC
        gbc.setState(0x7d04, 0x5b63, 0xe70, 0xec76, 0xfc8a, 0x9cfa, 0x1, 0x1);
        gbc.writeMem(0x7d04, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0x5b63, gbc.sp());
        EXPECT(0x7d06, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D9 01BD
        gbc.setState(0xe677, 0xe184, 0xe2b0, 0x7861, 0x32ab, 0x5bb6, 0x1, 0x1);
        gbc.writeMem(0xe677, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0xe184, gbc.sp());
        EXPECT(0xe679, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe677));
        EXPECT(0xd9, gbc.readMem(0xe678));
        // CB D9 01BE
        gbc.setState(0xaa5a, 0x6d91, 0xc2e0, 0xdbf9, 0xea03, 0x78db, 0x1, 0x0);
        gbc.writeMem(0xaa5a, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x6d91, gbc.sp());
        EXPECT(0xaa5c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaa5a));
        EXPECT(0xd9, gbc.readMem(0xaa5b));
        // CB D9 01BF
        gbc.setState(0x4e30, 0x4755, 0x3ab0, 0x82f9, 0xa2af, 0x43cd, 0x0, 0x1);
        gbc.writeMem(0x4e30, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x4755, gbc.sp());
        EXPECT(0x4e32, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D9 01C0
        gbc.setState(0x13eb, 0xc035, 0x21d0, 0xfb8f, 0x49bd, 0xabc3, 0x0, 0x1);
        gbc.writeMem(0x13eb, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0xc035, gbc.sp());
        EXPECT(0x13ed, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D9 01C1
        gbc.setState(0xe71d, 0x68ff, 0xb850, 0xce0e, 0xb5ac, 0xbb11, 0x1, 0x0);
        gbc.writeMem(0xe71d, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x68ff, gbc.sp());
        EXPECT(0xe71f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe71d));
        EXPECT(0xd9, gbc.readMem(0xe71e));
        // CB D9 01C2
        gbc.setState(0xc647, 0x2ab6, 0x1b80, 0xfbe8, 0x4e4e, 0x1dbe, 0x1, 0x0);
        gbc.writeMem(0xc647, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0x2ab6, gbc.sp());
        EXPECT(0xc649, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc647));
        EXPECT(0xd9, gbc.readMem(0xc648));
        // CB D9 01C3
        gbc.setState(0x7938, 0x4798, 0x63a0, 0x87de, 0x5653, 0x57de, 0x1, 0x0);
        gbc.writeMem(0x7938, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x4798, gbc.sp());
        EXPECT(0x793a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D9 01C4
        gbc.setState(0x933f, 0xce64, 0x8880, 0x71f4, 0x16e1, 0x7aca, 0x1, 0x0);
        gbc.writeMem(0x933f, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0xce64, gbc.sp());
        EXPECT(0x9341, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x933f));
        EXPECT(0xd9, gbc.readMem(0x9340));
        // CB D9 01C6
        gbc.setState(0xc0d, 0x550c, 0x3610, 0x38c3, 0x81bb, 0x197b, 0x1, 0x0);
        gbc.writeMem(0xc0d, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x550c, gbc.sp());
        EXPECT(0xc0f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D9 01C7
        gbc.setState(0xe6f8, 0xf321, 0x9c80, 0x30ed, 0x5010, 0x7a24, 0x0, 0x1);
        gbc.writeMem(0xe6f8, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0xf321, gbc.sp());
        EXPECT(0xe6fa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe6f8));
        EXPECT(0xd9, gbc.readMem(0xe6f9));
        // CB D9 01C8
        gbc.setState(0xb857, 0xf6eb, 0xf280, 0x808e, 0xbabd, 0x6883, 0x1, 0x0);
        gbc.writeMem(0xb857, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0xf6eb, gbc.sp());
        EXPECT(0xb859, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb857));
        EXPECT(0xd9, gbc.readMem(0xb858));
        // CB D9 01CA
        gbc.setState(0x9aef, 0xbd44, 0xbc30, 0xa8e0, 0xed, 0xa3b, 0x0, 0x0);
        gbc.writeMem(0x9aef, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0xbd44, gbc.sp());
        EXPECT(0x9af1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9aef));
        EXPECT(0xd9, gbc.readMem(0x9af0));
        // CB D9 01CB
        gbc.setState(0xed3e, 0x57f0, 0x64a0, 0x2e3c, 0x3baa, 0xea6e, 0x0, 0x0);
        gbc.writeMem(0xed3e, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x57f0, gbc.sp());
        EXPECT(0xed40, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xed3e));
        EXPECT(0xd9, gbc.readMem(0xed3f));
        // CB D9 01CC
        gbc.setState(0x258a, 0xf7b, 0x8ca0, 0x9222, 0xa31e, 0x8baf, 0x0, 0x0);
        gbc.writeMem(0x258a, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0xf7b, gbc.sp());
        EXPECT(0x258c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D9 01CD
        gbc.setState(0x4682, 0x6f5e, 0xbb80, 0x49cc, 0x8bcc, 0xd569, 0x0, 0x0);
        gbc.writeMem(0x4682, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0x6f5e, gbc.sp());
        EXPECT(0x4684, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D9 01CF
        gbc.setState(0x8eaa, 0x2bc, 0x4e10, 0x734f, 0xd610, 0xfb77, 0x0, 0x0);
        gbc.writeMem(0x8eaa, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x2bc, gbc.sp());
        EXPECT(0x8eac, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8eaa));
        EXPECT(0xd9, gbc.readMem(0x8eab));
        // CB D9 01D0
        gbc.setState(0x6890, 0x914d, 0x1d40, 0xe75a, 0xd1ba, 0xe1b2, 0x0, 0x0);
        gbc.writeMem(0x6890, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x914d, gbc.sp());
        EXPECT(0x6892, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D9 01D1
        gbc.setState(0xbd4d, 0x7d6d, 0x8d00, 0xfd46, 0x7cac, 0x9c92, 0x0, 0x0);
        gbc.writeMem(0xbd4d, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x7d6d, gbc.sp());
        EXPECT(0xbd4f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbd4d));
        EXPECT(0xd9, gbc.readMem(0xbd4e));
        // CB D9 01D2
        gbc.setState(0xb9a, 0xa17b, 0x24b0, 0x84c4, 0x378a, 0x5880, 0x1, 0x1);
        gbc.writeMem(0xb9a, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0xa17b, gbc.sp());
        EXPECT(0xb9c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D9 01D3
        gbc.setState(0x2bdc, 0x1dda, 0x3470, 0xf8c5, 0xb49a, 0x608, 0x0, 0x1);
        gbc.writeMem(0x2bdc, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x1dda, gbc.sp());
        EXPECT(0x2bde, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D9 01D4
        gbc.setState(0xd561, 0x48a3, 0xfdd0, 0xa641, 0x1662, 0xf09d, 0x0, 0x1);
        gbc.writeMem(0xd561, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x48a3, gbc.sp());
        EXPECT(0xd563, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd561));
        EXPECT(0xd9, gbc.readMem(0xd562));
        // CB D9 01D5
        gbc.setState(0x6b42, 0x7a74, 0x1eb0, 0x1498, 0x6721, 0x7a36, 0x1, 0x1);
        gbc.writeMem(0x6b42, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x7a74, gbc.sp());
        EXPECT(0x6b44, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D9 01D6
        gbc.setState(0xa9cb, 0x898c, 0x1500, 0xf5ed, 0x83f0, 0x294a, 0x1, 0x0);
        gbc.writeMem(0xa9cb, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x898c, gbc.sp());
        EXPECT(0xa9cd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa9cb));
        EXPECT(0xd9, gbc.readMem(0xa9cc));
        // CB D9 01D7
        gbc.setState(0x1992, 0x661, 0xb9f0, 0xbc7c, 0x2439, 0x6e4d, 0x0, 0x1);
        gbc.writeMem(0x1992, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x661, gbc.sp());
        EXPECT(0x1994, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D9 01D8
        gbc.setState(0xc692, 0x339a, 0x9ec0, 0xae6, 0x47df, 0xab85, 0x0, 0x1);
        gbc.writeMem(0xc692, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x339a, gbc.sp());
        EXPECT(0xc694, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc692));
        EXPECT(0xd9, gbc.readMem(0xc693));
        // CB D9 01D9
        gbc.setState(0x748e, 0x955a, 0x8d20, 0x808a, 0x877f, 0xfbc6, 0x1, 0x0);
        gbc.writeMem(0x748e, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x955a, gbc.sp());
        EXPECT(0x7490, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D9 01DA
        gbc.setState(0x439, 0x6966, 0x8b90, 0x790f, 0xd74d, 0x614, 0x1, 0x1);
        gbc.writeMem(0x439, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x6966, gbc.sp());
        EXPECT(0x43b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D9 01DB
        gbc.setState(0x4063, 0x429, 0xabb0, 0x23c6, 0xfce, 0xbf1f, 0x0, 0x0);
        gbc.writeMem(0x4063, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x429, gbc.sp());
        EXPECT(0x4065, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D9 01DC
        gbc.setState(0xb8cf, 0x6222, 0xedb0, 0xe8f4, 0xbeca, 0xd761, 0x0, 0x1);
        gbc.writeMem(0xb8cf, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x6222, gbc.sp());
        EXPECT(0xb8d1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb8cf));
        EXPECT(0xd9, gbc.readMem(0xb8d0));
        // CB D9 01DD
        gbc.setState(0x49e1, 0xfb61, 0xd8e0, 0x42f9, 0x26d9, 0x4ebc, 0x0, 0x1);
        gbc.writeMem(0x49e1, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0xfb61, gbc.sp());
        EXPECT(0x49e3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D9 01DE
        gbc.setState(0x7686, 0x43b9, 0xb290, 0x49ee, 0xa2b2, 0x19b9, 0x0, 0x1);
        gbc.writeMem(0x7686, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x43b9, gbc.sp());
        EXPECT(0x7688, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D9 01DF
        gbc.setState(0x1d02, 0x61e0, 0x2de0, 0x92c7, 0x604b, 0xcb1, 0x0, 0x1);
        gbc.writeMem(0x1d02, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x61e0, gbc.sp());
        EXPECT(0x1d04, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D9 01E0
        gbc.setState(0xe76d, 0xe7c6, 0x7a80, 0x84b4, 0x7395, 0xfa50, 0x0, 0x0);
        gbc.writeMem(0xe76d, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0xe7c6, gbc.sp());
        EXPECT(0xe76f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe76d));
        EXPECT(0xd9, gbc.readMem(0xe76e));
        // CB D9 01E1
        gbc.setState(0x9212, 0xb2c1, 0x5aa0, 0xbb92, 0x3b29, 0x46b, 0x1, 0x1);
        gbc.writeMem(0x9212, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0xb2c1, gbc.sp());
        EXPECT(0x9214, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9212));
        EXPECT(0xd9, gbc.readMem(0x9213));
        // CB D9 01E3
        gbc.setState(0x320a, 0xae7a, 0xf930, 0x396d, 0x91a7, 0x8a1d, 0x1, 0x0);
        gbc.writeMem(0x320a, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0xae7a, gbc.sp());
        EXPECT(0x320c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D9 01E4
        gbc.setState(0x1c15, 0xcdbf, 0xfab0, 0x17d8, 0xb9d0, 0x6681, 0x0, 0x1);
        gbc.writeMem(0x1c15, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0xcdbf, gbc.sp());
        EXPECT(0x1c17, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D9 01E5
        gbc.setState(0x2a89, 0x3ee4, 0xcda0, 0x10ac, 0x8c49, 0x820d, 0x0, 0x1);
        gbc.writeMem(0x2a89, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x3ee4, gbc.sp());
        EXPECT(0x2a8b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D9 01E6
        gbc.setState(0x6e58, 0x8bc4, 0x2440, 0xbc5b, 0xeb3b, 0x7d1, 0x0, 0x0);
        gbc.writeMem(0x6e58, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x8bc4, gbc.sp());
        EXPECT(0x6e5a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D9 01E7
        gbc.setState(0x5010, 0x86bb, 0xb300, 0xcd, 0x93c2, 0xa814, 0x1, 0x1);
        gbc.writeMem(0x5010, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x86bb, gbc.sp());
        EXPECT(0x5012, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D9 01E8
        gbc.setState(0xa7e6, 0x884, 0x6ea0, 0xc1dc, 0x3e2d, 0x5de7, 0x0, 0x1);
        gbc.writeMem(0xa7e6, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x884, gbc.sp());
        EXPECT(0xa7e8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa7e6));
        EXPECT(0xd9, gbc.readMem(0xa7e7));
        // CB D9 01E9
        gbc.setState(0x70b3, 0xd186, 0x8700, 0x5479, 0x578f, 0x36c4, 0x1, 0x0);
        gbc.writeMem(0x70b3, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0xd186, gbc.sp());
        EXPECT(0x70b5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D9 01EA
        gbc.setState(0xed0d, 0xf71d, 0x6340, 0x8d83, 0x2329, 0x9e, 0x1, 0x0);
        gbc.writeMem(0xed0d, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0xf71d, gbc.sp());
        EXPECT(0xed0f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xed0d));
        EXPECT(0xd9, gbc.readMem(0xed0e));
        // CB D9 01EB
        gbc.setState(0xc39f, 0xb35a, 0x73d0, 0x5af9, 0xe5ba, 0xc5ff, 0x0, 0x1);
        gbc.writeMem(0xc39f, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0xb35a, gbc.sp());
        EXPECT(0xc3a1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc39f));
        EXPECT(0xd9, gbc.readMem(0xc3a0));
        // CB D9 01EC
        gbc.setState(0xcc32, 0x73a, 0xc7d0, 0x3068, 0x8640, 0xcf96, 0x1, 0x1);
        gbc.writeMem(0xcc32, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x73a, gbc.sp());
        EXPECT(0xcc34, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcc32));
        EXPECT(0xd9, gbc.readMem(0xcc33));
        // CB D9 01ED
        gbc.setState(0x2a58, 0x31e8, 0xd620, 0x2406, 0x976, 0x89f7, 0x0, 0x1);
        gbc.writeMem(0x2a58, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x31e8, gbc.sp());
        EXPECT(0x2a5a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D9 01EE
        gbc.setState(0x6882, 0xb987, 0xcdc0, 0xd565, 0xa389, 0x3f35, 0x0, 0x1);
        gbc.writeMem(0x6882, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0xb987, gbc.sp());
        EXPECT(0x6884, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D9 01EF
        gbc.setState(0xaf68, 0x9c7, 0x75d0, 0xf782, 0x3762, 0xf22d, 0x1, 0x1);
        gbc.writeMem(0xaf68, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x9c7, gbc.sp());
        EXPECT(0xaf6a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaf68));
        EXPECT(0xd9, gbc.readMem(0xaf69));
        // CB D9 01F0
        gbc.setState(0x524f, 0xc1ef, 0x9d20, 0xb1fe, 0x199, 0x303d, 0x0, 0x0);
        gbc.writeMem(0x524f, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0xc1ef, gbc.sp());
        EXPECT(0x5251, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D9 01F1
        gbc.setState(0xe2fc, 0x78a0, 0x5600, 0x2a80, 0x7cb, 0x80ca, 0x0, 0x0);
        gbc.writeMem(0xe2fc, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x78a0, gbc.sp());
        EXPECT(0xe2fe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe2fc));
        EXPECT(0xd9, gbc.readMem(0xe2fd));
        // CB D9 01F2
        gbc.setState(0x57aa, 0xe045, 0x67e0, 0x34e7, 0xd802, 0xb217, 0x0, 0x0);
        gbc.writeMem(0x57aa, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0xe045, gbc.sp());
        EXPECT(0x57ac, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D9 01F3
        gbc.setState(0x1bf, 0x6f16, 0xca00, 0xe95f, 0x29, 0x1381, 0x1, 0x0);
        gbc.writeMem(0x1bf, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x6f16, gbc.sp());
        EXPECT(0x1c1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D9 01F5
        gbc.setState(0xb86f, 0x9288, 0xc470, 0x48a3, 0x6b4a, 0xb843, 0x1, 0x1);
        gbc.writeMem(0xb86f, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x9288, gbc.sp());
        EXPECT(0xb871, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb86f));
        EXPECT(0xd9, gbc.readMem(0xb870));
        // CB D9 01F6
        gbc.setState(0x7638, 0xa7fc, 0x8420, 0x8cee, 0x3588, 0xdfb3, 0x1, 0x0);
        gbc.writeMem(0x7638, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0xa7fc, gbc.sp());
        EXPECT(0x763a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D9 01F7
        gbc.setState(0x8b41, 0x1bf, 0x380, 0xb550, 0xb0c5, 0x19ce, 0x0, 0x0);
        gbc.writeMem(0x8b41, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x1bf, gbc.sp());
        EXPECT(0x8b43, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8b41));
        EXPECT(0xd9, gbc.readMem(0x8b42));
        // CB D9 01F8
        gbc.setState(0xa332, 0xa637, 0x7d70, 0xcd67, 0x79fb, 0x564, 0x1, 0x1);
        gbc.writeMem(0xa332, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0xa637, gbc.sp());
        EXPECT(0xa334, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa332));
        EXPECT(0xd9, gbc.readMem(0xa333));
        // CB D9 01F9
        gbc.setState(0x1977, 0x6de0, 0xd3c0, 0x9197, 0xf406, 0x779f, 0x0, 0x1);
        gbc.writeMem(0x1977, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x6de0, gbc.sp());
        EXPECT(0x1979, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D9 01FA
        gbc.setState(0x2cf7, 0xcf32, 0x3010, 0x68a8, 0xda1, 0x7fd, 0x1, 0x1);
        gbc.writeMem(0x2cf7, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0xcf32, gbc.sp());
        EXPECT(0x2cf9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D9 01FB
        gbc.setState(0x8678, 0xb75b, 0xbf10, 0xc62d, 0xffd5, 0xfc36, 0x0, 0x1);
        gbc.writeMem(0x8678, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0xb75b, gbc.sp());
        EXPECT(0x867a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8678));
        EXPECT(0xd9, gbc.readMem(0x8679));
        // CB D9 01FC
        gbc.setState(0x5dc, 0x305e, 0x43d0, 0x67d, 0xfada, 0x5d34, 0x1, 0x0);
        gbc.writeMem(0x5dc, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x305e, gbc.sp());
        EXPECT(0x5de, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D9 01FD
        gbc.setState(0x5ee9, 0x7169, 0x26c0, 0x6c68, 0x9455, 0x2058, 0x1, 0x1);
        gbc.writeMem(0x5ee9, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x7169, gbc.sp());
        EXPECT(0x5eeb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D9 01FE
        gbc.setState(0xee27, 0xe62e, 0xf410, 0xf82b, 0x7bf1, 0x1761, 0x0, 0x0);
        gbc.writeMem(0xee27, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0xe62e, gbc.sp());
        EXPECT(0xee29, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xee27));
        EXPECT(0xd9, gbc.readMem(0xee28));
        // CB D9 01FF
        gbc.setState(0xe0c1, 0x1965, 0x33d0, 0x5406, 0x1b4e, 0xf82b, 0x1, 0x0);
        gbc.writeMem(0xe0c1, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x1965, gbc.sp());
        EXPECT(0xe0c3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe0c1));
        EXPECT(0xd9, gbc.readMem(0xe0c2));
        // CB D9 0200
        gbc.setState(0x2de1, 0xcd81, 0x5bb0, 0x724d, 0xb089, 0x4fdc, 0x1, 0x0);
        gbc.writeMem(0x2de1, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0xcd81, gbc.sp());
        EXPECT(0x2de3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D9 0201
        gbc.setState(0x29fe, 0xbcdf, 0x2d90, 0x11f0, 0xaa18, 0x532f, 0x0, 0x1);
        gbc.writeMem(0x29fe, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0xbcdf, gbc.sp());
        EXPECT(0x2a00, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D9 0202
        gbc.setState(0xad77, 0xf82a, 0xd80, 0x8ff5, 0xcf39, 0xa5e8, 0x0, 0x0);
        gbc.writeMem(0xad77, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0xf82a, gbc.sp());
        EXPECT(0xad79, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xad77));
        EXPECT(0xd9, gbc.readMem(0xad78));
        // CB D9 0203
        gbc.setState(0x30d5, 0x8e69, 0x8e30, 0x38f3, 0xac91, 0x357d, 0x1, 0x0);
        gbc.writeMem(0x30d5, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x8e69, gbc.sp());
        EXPECT(0x30d7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D9 0204
        gbc.setState(0x1c76, 0x967d, 0x44b0, 0xf907, 0xa257, 0x11ab, 0x1, 0x1);
        gbc.writeMem(0x1c76, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x967d, gbc.sp());
        EXPECT(0x1c78, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D9 0205
        gbc.setState(0x1705, 0xd038, 0xdae0, 0x2117, 0xc5e6, 0x5755, 0x1, 0x1);
        gbc.writeMem(0x1705, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0xd038, gbc.sp());
        EXPECT(0x1707, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D9 0206
        gbc.setState(0x23c0, 0xf2b8, 0xae50, 0x954, 0xd201, 0xd13, 0x1, 0x0);
        gbc.writeMem(0x23c0, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0xf2b8, gbc.sp());
        EXPECT(0x23c2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D9 0207
        gbc.setState(0xdfc3, 0x34b9, 0x2f00, 0x2796, 0x5aa3, 0x7bef, 0x0, 0x0);
        gbc.writeMem(0xdfc3, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x34b9, gbc.sp());
        EXPECT(0xdfc5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdfc3));
        EXPECT(0xd9, gbc.readMem(0xdfc4));
        // CB D9 0208
        gbc.setState(0x5c18, 0x9521, 0x6510, 0x91f, 0xeac2, 0xcbed, 0x1, 0x0);
        gbc.writeMem(0x5c18, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x9521, gbc.sp());
        EXPECT(0x5c1a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D9 0209
        gbc.setState(0x4d05, 0x5283, 0xafe0, 0x216f, 0xff2c, 0x74a4, 0x1, 0x1);
        gbc.writeMem(0x4d05, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x5283, gbc.sp());
        EXPECT(0x4d07, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D9 020A
        gbc.setState(0xd918, 0x3ccb, 0x21f0, 0x3d07, 0x4da0, 0xba95, 0x1, 0x1);
        gbc.writeMem(0xd918, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x3ccb, gbc.sp());
        EXPECT(0xd91a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd918));
        EXPECT(0xd9, gbc.readMem(0xd919));
        // CB D9 020B
        gbc.setState(0xce13, 0x69aa, 0xf660, 0xb4a3, 0xcdac, 0x58f3, 0x0, 0x1);
        gbc.writeMem(0xce13, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x69aa, gbc.sp());
        EXPECT(0xce15, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xce13));
        EXPECT(0xd9, gbc.readMem(0xce14));
        // CB D9 020C
        gbc.setState(0x93df, 0xfbf, 0xa80, 0x7efe, 0x68b2, 0x3aac, 0x0, 0x0);
        gbc.writeMem(0x93df, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0xfbf, gbc.sp());
        EXPECT(0x93e1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x93df));
        EXPECT(0xd9, gbc.readMem(0x93e0));
        // CB D9 020E
        gbc.setState(0xa263, 0xdeca, 0x93d0, 0x8cd1, 0x1610, 0x2f2, 0x0, 0x0);
        gbc.writeMem(0xa263, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0xdeca, gbc.sp());
        EXPECT(0xa265, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa263));
        EXPECT(0xd9, gbc.readMem(0xa264));
        // CB D9 020F
        gbc.setState(0x143a, 0x4c92, 0xa540, 0xbfd7, 0x3c, 0x9355, 0x1, 0x0);
        gbc.writeMem(0x143a, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x4c92, gbc.sp());
        EXPECT(0x143c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D9 0210
        gbc.setState(0xd39e, 0x21a5, 0x2b10, 0x788c, 0x8aa1, 0xc65f, 0x1, 0x1);
        gbc.writeMem(0xd39e, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x21a5, gbc.sp());
        EXPECT(0xd3a0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd39e));
        EXPECT(0xd9, gbc.readMem(0xd39f));
        // CB D9 0211
        gbc.setState(0xcfc3, 0x9742, 0xc130, 0x1818, 0x1278, 0x2e42, 0x0, 0x0);
        gbc.writeMem(0xcfc3, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x9742, gbc.sp());
        EXPECT(0xcfc5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcfc3));
        EXPECT(0xd9, gbc.readMem(0xcfc4));
        // CB D9 0212
        gbc.setState(0x8261, 0x3338, 0xb290, 0x14f1, 0xe595, 0xdc7, 0x1, 0x0);
        gbc.writeMem(0x8261, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x3338, gbc.sp());
        EXPECT(0x8263, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8261));
        EXPECT(0xd9, gbc.readMem(0x8262));
        // CB D9 0213
        gbc.setState(0xe86c, 0xcb63, 0x6210, 0x2fa3, 0xc598, 0x4f87, 0x1, 0x1);
        gbc.writeMem(0xe86c, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0xcb63, gbc.sp());
        EXPECT(0xe86e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe86c));
        EXPECT(0xd9, gbc.readMem(0xe86d));
        // CB D9 0215
        gbc.setState(0x3de3, 0xa01d, 0x4070, 0x4e74, 0x7918, 0xdd5b, 0x0, 0x0);
        gbc.writeMem(0x3de3, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0xa01d, gbc.sp());
        EXPECT(0x3de5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D9 0216
        gbc.setState(0x6919, 0x46d9, 0x1860, 0x5ff1, 0xd783, 0xdf6b, 0x0, 0x1);
        gbc.writeMem(0x6919, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x46d9, gbc.sp());
        EXPECT(0x691b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D9 0217
        gbc.setState(0x8b9d, 0xbb97, 0x130, 0x3079, 0xd5a6, 0x4bac, 0x1, 0x0);
        gbc.writeMem(0x8b9d, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0xbb97, gbc.sp());
        EXPECT(0x8b9f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8b9d));
        EXPECT(0xd9, gbc.readMem(0x8b9e));
        // CB D9 0218
        gbc.setState(0x2528, 0xd48e, 0xbbc0, 0x77ed, 0xa544, 0x29d9, 0x0, 0x0);
        gbc.writeMem(0x2528, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0xd48e, gbc.sp());
        EXPECT(0x252a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D9 021A
        gbc.setState(0xb859, 0x7e9, 0xa820, 0x3f9f, 0x742c, 0xdc62, 0x0, 0x0);
        gbc.writeMem(0xb859, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x7e9, gbc.sp());
        EXPECT(0xb85b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb859));
        EXPECT(0xd9, gbc.readMem(0xb85a));
        // CB D9 021B
        gbc.setState(0x646b, 0x88e0, 0x9910, 0x83ee, 0xb60d, 0x9091, 0x0, 0x1);
        gbc.writeMem(0x646b, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x88e0, gbc.sp());
        EXPECT(0x646d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D9 021C
        gbc.setState(0xb53, 0xc2f6, 0x7ae0, 0x959b, 0xe695, 0x946b, 0x1, 0x0);
        gbc.writeMem(0xb53, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0xc2f6, gbc.sp());
        EXPECT(0xb55, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D9 021E
        gbc.setState(0x97b2, 0x6b98, 0xac30, 0x6d78, 0xce7e, 0xe39a, 0x1, 0x1);
        gbc.writeMem(0x97b2, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x6b98, gbc.sp());
        EXPECT(0x97b4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x97b2));
        EXPECT(0xd9, gbc.readMem(0x97b3));
        // CB D9 021F
        gbc.setState(0xdea4, 0x94fb, 0x1470, 0xc77e, 0x239b, 0x53b2, 0x0, 0x0);
        gbc.writeMem(0xdea4, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x94fb, gbc.sp());
        EXPECT(0xdea6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdea4));
        EXPECT(0xd9, gbc.readMem(0xdea5));
        // CB D9 0220
        gbc.setState(0xcbbd, 0xdcfe, 0x9410, 0x8b71, 0xfae7, 0xc0d8, 0x1, 0x0);
        gbc.writeMem(0xcbbd, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0xdcfe, gbc.sp());
        EXPECT(0xcbbf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcbbd));
        EXPECT(0xd9, gbc.readMem(0xcbbe));
        // CB D9 0221
        gbc.setState(0xd951, 0xf249, 0xb7f0, 0xe878, 0x1180, 0xe4ee, 0x0, 0x0);
        gbc.writeMem(0xd951, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0xf249, gbc.sp());
        EXPECT(0xd953, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd951));
        EXPECT(0xd9, gbc.readMem(0xd952));
        // CB D9 0222
        gbc.setState(0x21e1, 0x8a53, 0xbe20, 0xb8e3, 0x2801, 0x90c6, 0x1, 0x1);
        gbc.writeMem(0x21e1, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x8a53, gbc.sp());
        EXPECT(0x21e3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D9 0223
        gbc.setState(0xc183, 0x1b2d, 0x4690, 0x8400, 0xcb47, 0x45c1, 0x0, 0x0);
        gbc.writeMem(0xc183, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x1b2d, gbc.sp());
        EXPECT(0xc185, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc183));
        EXPECT(0xd9, gbc.readMem(0xc184));
        // CB D9 0224
        gbc.setState(0x741, 0x37da, 0x5bc0, 0xc8a9, 0xd28, 0x773a, 0x0, 0x0);
        gbc.writeMem(0x741, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x37da, gbc.sp());
        EXPECT(0x743, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D9 0225
        gbc.setState(0xa8f6, 0xa23e, 0xf950, 0x5d2f, 0xa714, 0xaef6, 0x1, 0x1);
        gbc.writeMem(0xa8f6, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0xa23e, gbc.sp());
        EXPECT(0xa8f8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa8f6));
        EXPECT(0xd9, gbc.readMem(0xa8f7));
        // CB D9 0226
        gbc.setState(0xcae0, 0xc73c, 0x8d10, 0xb512, 0x44e0, 0xcac8, 0x0, 0x1);
        gbc.writeMem(0xcae0, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0xc73c, gbc.sp());
        EXPECT(0xcae2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcae0));
        EXPECT(0xd9, gbc.readMem(0xcae1));
        // CB D9 0227
        gbc.setState(0x2858, 0xdf75, 0xef80, 0xdb24, 0x5c3, 0x666f, 0x1, 0x1);
        gbc.writeMem(0x2858, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0xdf75, gbc.sp());
        EXPECT(0x285a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D9 0228
        gbc.setState(0xd07f, 0xe64a, 0x9100, 0xefc8, 0x680a, 0xb768, 0x1, 0x1);
        gbc.writeMem(0xd07f, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0xe64a, gbc.sp());
        EXPECT(0xd081, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd07f));
        EXPECT(0xd9, gbc.readMem(0xd080));
        // CB D9 022A
        gbc.setState(0x68ba, 0x6139, 0x78f0, 0xcc3f, 0x9c82, 0xb615, 0x1, 0x0);
        gbc.writeMem(0x68ba, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x6139, gbc.sp());
        EXPECT(0x68bc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D9 022B
        gbc.setState(0x7f34, 0x2042, 0xbbc0, 0x9410, 0xe41, 0xbbad, 0x1, 0x1);
        gbc.writeMem(0x7f34, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x2042, gbc.sp());
        EXPECT(0x7f36, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D9 022C
        gbc.setState(0x87dd, 0xb89d, 0xc090, 0xff9d, 0xef7c, 0x3de4, 0x0, 0x1);
        gbc.writeMem(0x87dd, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0xb89d, gbc.sp());
        EXPECT(0x87df, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x87dd));
        EXPECT(0xd9, gbc.readMem(0x87de));
        // CB D9 022D
        gbc.setState(0x5d01, 0x2a1f, 0x4ce0, 0x8047, 0x5c0d, 0xb5fd, 0x0, 0x0);
        gbc.writeMem(0x5d01, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x2a1f, gbc.sp());
        EXPECT(0x5d03, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D9 022E
        gbc.setState(0x5542, 0x3d41, 0x9910, 0x4001, 0x8e8f, 0x6ede, 0x1, 0x1);
        gbc.writeMem(0x5542, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x3d41, gbc.sp());
        EXPECT(0x5544, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D9 022F
        gbc.setState(0x5a5, 0xa187, 0x4420, 0x2bcc, 0x9263, 0x433e, 0x0, 0x0);
        gbc.writeMem(0x5a5, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0xa187, gbc.sp());
        EXPECT(0x5a7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D9 0230
        gbc.setState(0xd30b, 0x661c, 0x6ba0, 0xd0d2, 0x599f, 0x173f, 0x0, 0x1);
        gbc.writeMem(0xd30b, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0x661c, gbc.sp());
        EXPECT(0xd30d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd30b));
        EXPECT(0xd9, gbc.readMem(0xd30c));
        // CB D9 0231
        gbc.setState(0xcdca, 0xe2cd, 0xdb00, 0x5971, 0xf1cd, 0x12e6, 0x1, 0x1);
        gbc.writeMem(0xcdca, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0xe2cd, gbc.sp());
        EXPECT(0xcdcc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcdca));
        EXPECT(0xd9, gbc.readMem(0xcdcb));
        // CB D9 0232
        gbc.setState(0x7a12, 0x63e3, 0x5900, 0x1d56, 0x7816, 0x5c79, 0x1, 0x1);
        gbc.writeMem(0x7a12, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x63e3, gbc.sp());
        EXPECT(0x7a14, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D9 0233
        gbc.setState(0x85e8, 0xfe87, 0x5070, 0x86bc, 0x3381, 0x5ae1, 0x1, 0x1);
        gbc.writeMem(0x85e8, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0xfe87, gbc.sp());
        EXPECT(0x85ea, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x85e8));
        EXPECT(0xd9, gbc.readMem(0x85e9));
        // CB D9 0234
        gbc.setState(0x25b5, 0x4d, 0xca80, 0x84a4, 0x8de7, 0xb46c, 0x1, 0x1);
        gbc.writeMem(0x25b5, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x4d, gbc.sp());
        EXPECT(0x25b7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D9 0235
        gbc.setState(0xc7e9, 0x40c8, 0x4230, 0x5cb6, 0x1a1e, 0x8844, 0x1, 0x1);
        gbc.writeMem(0xc7e9, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x40c8, gbc.sp());
        EXPECT(0xc7eb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc7e9));
        EXPECT(0xd9, gbc.readMem(0xc7ea));
        // CB D9 0236
        gbc.setState(0xcd, 0xc9d3, 0xeef0, 0x41a3, 0xbcc8, 0x4fc8, 0x1, 0x0);
        gbc.writeMem(0xcd, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0xc9d3, gbc.sp());
        EXPECT(0xcf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D9 0237
        gbc.setState(0xd01e, 0x725d, 0x1f70, 0x4398, 0x6da3, 0x4609, 0x0, 0x1);
        gbc.writeMem(0xd01e, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x725d, gbc.sp());
        EXPECT(0xd020, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd01e));
        EXPECT(0xd9, gbc.readMem(0xd01f));
        // CB D9 0238
        gbc.setState(0x7a53, 0xab0, 0x3b70, 0x41a9, 0xc675, 0x532, 0x0, 0x0);
        gbc.writeMem(0x7a53, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0xab0, gbc.sp());
        EXPECT(0x7a55, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D9 0239
        gbc.setState(0x6cc8, 0xbaef, 0x2320, 0xb2ad, 0xd9d8, 0xc6be, 0x1, 0x1);
        gbc.writeMem(0x6cc8, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0xbaef, gbc.sp());
        EXPECT(0x6cca, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D9 023A
        gbc.setState(0x6477, 0xdbca, 0x5040, 0x26cd, 0xf7ba, 0x969b, 0x0, 0x1);
        gbc.writeMem(0x6477, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0xdbca, gbc.sp());
        EXPECT(0x6479, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D9 023B
        gbc.setState(0xee10, 0xf9dc, 0x5f50, 0xd537, 0xe755, 0xa3cc, 0x0, 0x1);
        gbc.writeMem(0xee10, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0xf9dc, gbc.sp());
        EXPECT(0xee12, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xee10));
        EXPECT(0xd9, gbc.readMem(0xee11));
        // CB D9 023C
        gbc.setState(0xece0, 0xbc6, 0xe960, 0xd1f6, 0xc53f, 0x8bdc, 0x1, 0x1);
        gbc.writeMem(0xece0, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0xbc6, gbc.sp());
        EXPECT(0xece2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xece0));
        EXPECT(0xd9, gbc.readMem(0xece1));
        // CB D9 023D
        gbc.setState(0x396f, 0x7ca6, 0x4da0, 0xc6e, 0xdb65, 0xf276, 0x1, 0x1);
        gbc.writeMem(0x396f, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x7ca6, gbc.sp());
        EXPECT(0x3971, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D9 023E
        gbc.setState(0xcee5, 0xf316, 0x6b20, 0x582, 0x22de, 0xb4f7, 0x0, 0x1);
        gbc.writeMem(0xcee5, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0xf316, gbc.sp());
        EXPECT(0xcee7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcee5));
        EXPECT(0xd9, gbc.readMem(0xcee6));
        // CB D9 023F
        gbc.setState(0x9146, 0x7625, 0x3860, 0xada4, 0xf528, 0xf194, 0x0, 0x0);
        gbc.writeMem(0x9146, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x7625, gbc.sp());
        EXPECT(0x9148, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9146));
        EXPECT(0xd9, gbc.readMem(0x9147));
        // CB D9 0240
        gbc.setState(0x5531, 0xa868, 0xafc0, 0x1221, 0x9375, 0x240c, 0x1, 0x0);
        gbc.writeMem(0x5531, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0xa868, gbc.sp());
        EXPECT(0x5533, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D9 0241
        gbc.setState(0x7308, 0x1a15, 0x2060, 0x8d40, 0x6f3b, 0xd3be, 0x0, 0x1);
        gbc.writeMem(0x7308, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0x1a15, gbc.sp());
        EXPECT(0x730a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D9 0242
        gbc.setState(0x71d6, 0x9b38, 0x3860, 0x7d53, 0x4b52, 0xa0af, 0x0, 0x1);
        gbc.writeMem(0x71d6, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x9b38, gbc.sp());
        EXPECT(0x71d8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D9 0244
        gbc.setState(0x267c, 0x9853, 0xf40, 0x746, 0x3904, 0x15dd, 0x1, 0x0);
        gbc.writeMem(0x267c, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x9853, gbc.sp());
        EXPECT(0x267e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D9 0245
        gbc.setState(0x88e6, 0xf533, 0x5e00, 0x30d4, 0xdd3a, 0xfa13, 0x1, 0x0);
        gbc.writeMem(0x88e6, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0xf533, gbc.sp());
        EXPECT(0x88e8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x88e6));
        EXPECT(0xd9, gbc.readMem(0x88e7));
        // CB D9 0246
        gbc.setState(0xc407, 0x3bdc, 0xb360, 0x71b3, 0x8bcf, 0x1e7, 0x0, 0x0);
        gbc.writeMem(0xc407, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x3bdc, gbc.sp());
        EXPECT(0xc409, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc407));
        EXPECT(0xd9, gbc.readMem(0xc408));
        // CB D9 0247
        gbc.setState(0xd148, 0xdd7f, 0x3230, 0x23ff, 0xa1a9, 0x601f, 0x1, 0x1);
        gbc.writeMem(0xd148, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0xdd7f, gbc.sp());
        EXPECT(0xd14a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd148));
        EXPECT(0xd9, gbc.readMem(0xd149));
        // CB D9 0248
        gbc.setState(0x9c75, 0x2427, 0x64d0, 0x1ac5, 0xfe1a, 0x10c0, 0x1, 0x0);
        gbc.writeMem(0x9c75, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x2427, gbc.sp());
        EXPECT(0x9c77, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9c75));
        EXPECT(0xd9, gbc.readMem(0x9c76));
        // CB D9 0249
        gbc.setState(0x6386, 0xb817, 0x25f0, 0x108b, 0xd466, 0x9c49, 0x0, 0x1);
        gbc.writeMem(0x6386, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0xb817, gbc.sp());
        EXPECT(0x6388, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D9 024A
        gbc.setState(0xbe70, 0xbf16, 0xf030, 0x5b3d, 0xdccf, 0xaa2b, 0x1, 0x0);
        gbc.writeMem(0xbe70, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0xbf16, gbc.sp());
        EXPECT(0xbe72, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbe70));
        EXPECT(0xd9, gbc.readMem(0xbe71));
        // CB D9 024B
        gbc.setState(0x1e00, 0x24d9, 0x4520, 0x3f63, 0xc91f, 0x781b, 0x0, 0x0);
        gbc.writeMem(0x1e00, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x24d9, gbc.sp());
        EXPECT(0x1e02, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D9 024C
        gbc.setState(0x879f, 0x70d, 0xc780, 0x21a5, 0x6b17, 0x1ac1, 0x1, 0x1);
        gbc.writeMem(0x879f, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x70d, gbc.sp());
        EXPECT(0x87a1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x879f));
        EXPECT(0xd9, gbc.readMem(0x87a0));
        // CB D9 024D
        gbc.setState(0x463b, 0x1b75, 0x8f70, 0x8ce9, 0x773b, 0x156e, 0x1, 0x1);
        gbc.writeMem(0x463b, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x1b75, gbc.sp());
        EXPECT(0x463d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D9 024E
        gbc.setState(0xebaf, 0xabcb, 0xb140, 0x3df, 0xb52f, 0x37fd, 0x1, 0x1);
        gbc.writeMem(0xebaf, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0xabcb, gbc.sp());
        EXPECT(0xebb1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xebaf));
        EXPECT(0xd9, gbc.readMem(0xebb0));
        // CB D9 024F
        gbc.setState(0x3f8c, 0x2eca, 0xfde0, 0xdc2a, 0x7df9, 0xbe31, 0x1, 0x1);
        gbc.writeMem(0x3f8c, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x2eca, gbc.sp());
        EXPECT(0x3f8e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D9 0250
        gbc.setState(0xde0c, 0x70a7, 0x80a0, 0x9a0f, 0x59a9, 0x1948, 0x0, 0x1);
        gbc.writeMem(0xde0c, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0x70a7, gbc.sp());
        EXPECT(0xde0e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xde0c));
        EXPECT(0xd9, gbc.readMem(0xde0d));
        // CB D9 0251
        gbc.setState(0x484f, 0xa0ac, 0x2490, 0xf36, 0x1f4e, 0xaa7c, 0x1, 0x0);
        gbc.writeMem(0x484f, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0xa0ac, gbc.sp());
        EXPECT(0x4851, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D9 0253
        gbc.setState(0xb2b3, 0x50d8, 0x21a0, 0x7d69, 0xfd95, 0xf28d, 0x1, 0x1);
        gbc.writeMem(0xb2b3, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x50d8, gbc.sp());
        EXPECT(0xb2b5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb2b3));
        EXPECT(0xd9, gbc.readMem(0xb2b4));
        // CB D9 0254
        gbc.setState(0x5ed, 0x4065, 0x43b0, 0x8526, 0x2916, 0xe971, 0x1, 0x0);
        gbc.writeMem(0x5ed, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x4065, gbc.sp());
        EXPECT(0x5ef, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D9 0255
        gbc.setState(0xb308, 0x2561, 0x6b40, 0x828a, 0xcbd6, 0xb5a2, 0x1, 0x0);
        gbc.writeMem(0xb308, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x2561, gbc.sp());
        EXPECT(0xb30a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb308));
        EXPECT(0xd9, gbc.readMem(0xb309));
        // CB D9 0257
        gbc.setState(0xc5b7, 0xc767, 0x3fa0, 0x56bb, 0x2816, 0xe, 0x1, 0x0);
        gbc.writeMem(0xc5b7, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0xc767, gbc.sp());
        EXPECT(0xc5b9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc5b7));
        EXPECT(0xd9, gbc.readMem(0xc5b8));
        // CB D9 0258
        gbc.setState(0x8bf5, 0x76f4, 0xe630, 0x25e4, 0x1fde, 0x5c83, 0x0, 0x0);
        gbc.writeMem(0x8bf5, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x76f4, gbc.sp());
        EXPECT(0x8bf7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8bf5));
        EXPECT(0xd9, gbc.readMem(0x8bf6));
        // CB D9 0259
        gbc.setState(0xd212, 0x7d0c, 0xf090, 0x84a4, 0x7e06, 0x3847, 0x0, 0x1);
        gbc.writeMem(0xd212, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x7d0c, gbc.sp());
        EXPECT(0xd214, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd212));
        EXPECT(0xd9, gbc.readMem(0xd213));
        // CB D9 025A
        gbc.setState(0x3ba6, 0x8e8c, 0xcaa0, 0x5633, 0xe1e9, 0xef17, 0x0, 0x1);
        gbc.writeMem(0x3ba6, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x8e8c, gbc.sp());
        EXPECT(0x3ba8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D9 025B
        gbc.setState(0x792f, 0xf405, 0x1bf0, 0x34f8, 0x9210, 0xe426, 0x1, 0x1);
        gbc.writeMem(0x792f, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0xf405, gbc.sp());
        EXPECT(0x7931, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D9 025C
        gbc.setState(0x4426, 0xa199, 0xfa10, 0x9d2e, 0x5952, 0xb88f, 0x0, 0x0);
        gbc.writeMem(0x4426, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0xa199, gbc.sp());
        EXPECT(0x4428, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D9 025D
        gbc.setState(0xecd5, 0x2007, 0x31d0, 0x366f, 0xb703, 0x96b, 0x0, 0x1);
        gbc.writeMem(0xecd5, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x2007, gbc.sp());
        EXPECT(0xecd7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xecd5));
        EXPECT(0xd9, gbc.readMem(0xecd6));
        // CB D9 025E
        gbc.setState(0xb811, 0xb4b1, 0xf5c0, 0xc778, 0xc2c9, 0xf91c, 0x0, 0x1);
        gbc.writeMem(0xb811, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0xb4b1, gbc.sp());
        EXPECT(0xb813, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb811));
        EXPECT(0xd9, gbc.readMem(0xb812));
        // CB D9 025F
        gbc.setState(0xe099, 0x4e8e, 0xa280, 0xe6d2, 0x728f, 0x8681, 0x0, 0x0);
        gbc.writeMem(0xe099, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x4e8e, gbc.sp());
        EXPECT(0xe09b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe099));
        EXPECT(0xd9, gbc.readMem(0xe09a));
        // CB D9 0260
        gbc.setState(0x78f, 0xd323, 0x9060, 0x1a85, 0x9bca, 0x8ecc, 0x0, 0x0);
        gbc.writeMem(0x78f, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0xd323, gbc.sp());
        EXPECT(0x791, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D9 0262
        gbc.setState(0x2b66, 0x1d10, 0x1ce0, 0x6e97, 0x72b3, 0x1fc3, 0x1, 0x1);
        gbc.writeMem(0x2b66, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x1d10, gbc.sp());
        EXPECT(0x2b68, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D9 0263
        gbc.setState(0x43ee, 0x935c, 0x7240, 0xc362, 0xe8bf, 0x167a, 0x0, 0x1);
        gbc.writeMem(0x43ee, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x935c, gbc.sp());
        EXPECT(0x43f0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D9 0264
        gbc.setState(0x6a46, 0x4af, 0xed0, 0xfd6, 0xc935, 0xf92d, 0x0, 0x0);
        gbc.writeMem(0x6a46, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x4af, gbc.sp());
        EXPECT(0x6a48, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D9 0265
        gbc.setState(0x22f6, 0x601, 0x7a00, 0x4d64, 0xec45, 0x71f3, 0x1, 0x1);
        gbc.writeMem(0x22f6, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x601, gbc.sp());
        EXPECT(0x22f8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D9 0266
        gbc.setState(0x8955, 0x2420, 0xcf60, 0x394b, 0x13c5, 0x41cd, 0x1, 0x0);
        gbc.writeMem(0x8955, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x2420, gbc.sp());
        EXPECT(0x8957, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8955));
        EXPECT(0xd9, gbc.readMem(0x8956));
        // CB D9 0267
        gbc.setState(0x734c, 0x8500, 0x5e70, 0x605f, 0x5b0c, 0xb50a, 0x0, 0x1);
        gbc.writeMem(0x734c, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x8500, gbc.sp());
        EXPECT(0x734e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D9 0268
        gbc.setState(0x7f37, 0x13c4, 0x5f0, 0x51b9, 0xc701, 0xe576, 0x1, 0x0);
        gbc.writeMem(0x7f37, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x13c4, gbc.sp());
        EXPECT(0x7f39, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D9 0269
        gbc.setState(0x793e, 0x12c5, 0x4c50, 0x85e, 0x35a0, 0xd106, 0x1, 0x1);
        gbc.writeMem(0x793e, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x12c5, gbc.sp());
        EXPECT(0x7940, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D9 026A
        gbc.setState(0x31e7, 0xba1d, 0x4ea0, 0xc65e, 0xb4fc, 0xeac2, 0x1, 0x0);
        gbc.writeMem(0x31e7, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0xba1d, gbc.sp());
        EXPECT(0x31e9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D9 026B
        gbc.setState(0x3485, 0x163a, 0xdea0, 0xef58, 0x17c5, 0x171a, 0x1, 0x1);
        gbc.writeMem(0x3485, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x163a, gbc.sp());
        EXPECT(0x3487, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D9 026D
        gbc.setState(0xe342, 0x6b4a, 0x1ef0, 0x382c, 0x8868, 0x3086, 0x0, 0x1);
        gbc.writeMem(0xe342, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x6b4a, gbc.sp());
        EXPECT(0xe344, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe342));
        EXPECT(0xd9, gbc.readMem(0xe343));
        // CB D9 026E
        gbc.setState(0x34d, 0xa381, 0x3f30, 0xaf0d, 0x9f07, 0xc44b, 0x1, 0x0);
        gbc.writeMem(0x34d, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0xa381, gbc.sp());
        EXPECT(0x34f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D9 026F
        gbc.setState(0x5e40, 0x5b8e, 0x6920, 0x1e0a, 0xeb43, 0x9c02, 0x0, 0x0);
        gbc.writeMem(0x5e40, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x5b8e, gbc.sp());
        EXPECT(0x5e42, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D9 0270
        gbc.setState(0x9399, 0xb8ef, 0x1350, 0x24a2, 0xc7a6, 0xb3c5, 0x0, 0x1);
        gbc.writeMem(0x9399, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0xb8ef, gbc.sp());
        EXPECT(0x939b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9399));
        EXPECT(0xd9, gbc.readMem(0x939a));
        // CB D9 0271
        gbc.setState(0xbdb5, 0x294c, 0xe3f0, 0x18af, 0x2249, 0xd42a, 0x0, 0x0);
        gbc.writeMem(0xbdb5, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x294c, gbc.sp());
        EXPECT(0xbdb7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbdb5));
        EXPECT(0xd9, gbc.readMem(0xbdb6));
        // CB D9 0272
        gbc.setState(0x50e6, 0xc3c6, 0x8c90, 0xc584, 0xb66, 0xe3a0, 0x0, 0x0);
        gbc.writeMem(0x50e6, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0xc3c6, gbc.sp());
        EXPECT(0x50e8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D9 0273
        gbc.setState(0xdf23, 0xaf9c, 0x98f0, 0x7395, 0x5d25, 0x6fac, 0x0, 0x0);
        gbc.writeMem(0xdf23, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0xaf9c, gbc.sp());
        EXPECT(0xdf25, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdf23));
        EXPECT(0xd9, gbc.readMem(0xdf24));
        // CB D9 0274
        gbc.setState(0xd114, 0xf3, 0x5f90, 0xd14b, 0x4046, 0xaf1a, 0x1, 0x0);
        gbc.writeMem(0xd114, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0xf3, gbc.sp());
        EXPECT(0xd116, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd114));
        EXPECT(0xd9, gbc.readMem(0xd115));
        // CB D9 0275
        gbc.setState(0xbbc9, 0x487a, 0x4760, 0x6b12, 0x561a, 0x1c10, 0x1, 0x1);
        gbc.writeMem(0xbbc9, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x487a, gbc.sp());
        EXPECT(0xbbcb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbbc9));
        EXPECT(0xd9, gbc.readMem(0xbbca));
        // CB D9 0276
        gbc.setState(0x6a5a, 0x84e7, 0xe240, 0xa106, 0x72c4, 0x48e3, 0x0, 0x0);
        gbc.writeMem(0x6a5a, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x84e7, gbc.sp());
        EXPECT(0x6a5c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D9 0277
        gbc.setState(0xa3ed, 0xed18, 0xf710, 0x60b1, 0x88a7, 0x189c, 0x1, 0x0);
        gbc.writeMem(0xa3ed, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0xed18, gbc.sp());
        EXPECT(0xa3ef, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa3ed));
        EXPECT(0xd9, gbc.readMem(0xa3ee));
        // CB D9 0278
        gbc.setState(0x16cc, 0x2948, 0x5880, 0x983f, 0x1aee, 0x4824, 0x1, 0x0);
        gbc.writeMem(0x16cc, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x2948, gbc.sp());
        EXPECT(0x16ce, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D9 0279
        gbc.setState(0xb700, 0x39a2, 0x4770, 0xf28c, 0x3a1e, 0x2ad1, 0x1, 0x0);
        gbc.writeMem(0xb700, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x39a2, gbc.sp());
        EXPECT(0xb702, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb700));
        EXPECT(0xd9, gbc.readMem(0xb701));
        // CB D9 027A
        gbc.setState(0x406d, 0x1272, 0xebe0, 0x2fc, 0xde32, 0xd0e4, 0x0, 0x0);
        gbc.writeMem(0x406d, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x1272, gbc.sp());
        EXPECT(0x406f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D9 027B
        gbc.setState(0xd5b0, 0x141c, 0x76a0, 0x3020, 0x6e4f, 0x5503, 0x1, 0x1);
        gbc.writeMem(0xd5b0, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x141c, gbc.sp());
        EXPECT(0xd5b2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd5b0));
        EXPECT(0xd9, gbc.readMem(0xd5b1));
        // CB D9 027C
        gbc.setState(0x92a7, 0xf630, 0xe5b0, 0xa394, 0x705d, 0x3682, 0x1, 0x1);
        gbc.writeMem(0x92a7, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0xf630, gbc.sp());
        EXPECT(0x92a9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x92a7));
        EXPECT(0xd9, gbc.readMem(0x92a8));
        // CB D9 027D
        gbc.setState(0xe40, 0x811b, 0xf290, 0xf625, 0xee45, 0x185a, 0x1, 0x1);
        gbc.writeMem(0xe40, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x811b, gbc.sp());
        EXPECT(0xe42, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D9 027E
        gbc.setState(0xda3b, 0x9b40, 0xd4f0, 0x3ab1, 0x913e, 0x4f2, 0x0, 0x0);
        gbc.writeMem(0xda3b, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x9b40, gbc.sp());
        EXPECT(0xda3d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xda3b));
        EXPECT(0xd9, gbc.readMem(0xda3c));
        // CB D9 027F
        gbc.setState(0x4366, 0x7ee8, 0x3620, 0x9771, 0x628d, 0x169f, 0x0, 0x0);
        gbc.writeMem(0x4366, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x7ee8, gbc.sp());
        EXPECT(0x4368, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D9 0280
        gbc.setState(0x8d47, 0x3432, 0x8930, 0x19ee, 0xc44, 0x335a, 0x0, 0x1);
        gbc.writeMem(0x8d47, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x3432, gbc.sp());
        EXPECT(0x8d49, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8d47));
        EXPECT(0xd9, gbc.readMem(0x8d48));
        // CB D9 0281
        gbc.setState(0xe5a, 0x6ac7, 0x2e60, 0x58b6, 0x9a24, 0x671b, 0x1, 0x0);
        gbc.writeMem(0xe5a, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x6ac7, gbc.sp());
        EXPECT(0xe5c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D9 0282
        gbc.setState(0x8e94, 0x6856, 0x74f0, 0xad92, 0xd912, 0xf34c, 0x1, 0x1);
        gbc.writeMem(0x8e94, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x6856, gbc.sp());
        EXPECT(0x8e96, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8e94));
        EXPECT(0xd9, gbc.readMem(0x8e95));
        // CB D9 0283
        gbc.setState(0x16f2, 0xd704, 0xe4f0, 0x9072, 0x5b5e, 0xdd7e, 0x0, 0x0);
        gbc.writeMem(0x16f2, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0xd704, gbc.sp());
        EXPECT(0x16f4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D9 0284
        gbc.setState(0xcc90, 0x451, 0x66c0, 0x8530, 0xc3f, 0x6bbc, 0x1, 0x0);
        gbc.writeMem(0xcc90, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x451, gbc.sp());
        EXPECT(0xcc92, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcc90));
        EXPECT(0xd9, gbc.readMem(0xcc91));
        // CB D9 0285
        gbc.setState(0x763f, 0x58ee, 0xad70, 0x9c3d, 0x5a65, 0x179e, 0x0, 0x1);
        gbc.writeMem(0x763f, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x58ee, gbc.sp());
        EXPECT(0x7641, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D9 0286
        gbc.setState(0xc2d4, 0xdf30, 0x4ee0, 0x2d20, 0x19bb, 0x605f, 0x0, 0x0);
        gbc.writeMem(0xc2d4, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0xdf30, gbc.sp());
        EXPECT(0xc2d6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc2d4));
        EXPECT(0xd9, gbc.readMem(0xc2d5));
        // CB D9 0287
        gbc.setState(0xb015, 0xa948, 0x5730, 0x4723, 0x1708, 0xb982, 0x1, 0x1);
        gbc.writeMem(0xb015, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0xa948, gbc.sp());
        EXPECT(0xb017, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb015));
        EXPECT(0xd9, gbc.readMem(0xb016));
        // CB D9 0288
        gbc.setState(0xd750, 0x291a, 0x2930, 0xa320, 0x9930, 0x1ea2, 0x0, 0x1);
        gbc.writeMem(0xd750, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x291a, gbc.sp());
        EXPECT(0xd752, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd750));
        EXPECT(0xd9, gbc.readMem(0xd751));
        // CB D9 0289
        gbc.setState(0x5047, 0xe5c5, 0x2fb0, 0x4a45, 0x24a2, 0x632e, 0x1, 0x0);
        gbc.writeMem(0x5047, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0xe5c5, gbc.sp());
        EXPECT(0x5049, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D9 028A
        gbc.setState(0x244c, 0xf1f2, 0x61a0, 0x9ef3, 0xf97f, 0xf34a, 0x0, 0x1);
        gbc.writeMem(0x244c, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0xf1f2, gbc.sp());
        EXPECT(0x244e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D9 028B
        gbc.setState(0x93a4, 0xaf6, 0xc0, 0xe12, 0xeda6, 0x13b5, 0x1, 0x0);
        gbc.writeMem(0x93a4, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0xaf6, gbc.sp());
        EXPECT(0x93a6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x93a4));
        EXPECT(0xd9, gbc.readMem(0x93a5));
        // CB D9 028C
        gbc.setState(0x3cda, 0xdb2d, 0xa550, 0x5832, 0x706f, 0xe7e8, 0x1, 0x0);
        gbc.writeMem(0x3cda, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0xdb2d, gbc.sp());
        EXPECT(0x3cdc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D9 028D
        gbc.setState(0x8d48, 0x84cf, 0xbf60, 0x4ca1, 0x1555, 0x7acb, 0x1, 0x0);
        gbc.writeMem(0x8d48, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x84cf, gbc.sp());
        EXPECT(0x8d4a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8d48));
        EXPECT(0xd9, gbc.readMem(0x8d49));
        // CB D9 028E
        gbc.setState(0xe89b, 0xd6a1, 0x7510, 0xfd11, 0xf142, 0x37fe, 0x1, 0x1);
        gbc.writeMem(0xe89b, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0xd6a1, gbc.sp());
        EXPECT(0xe89d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe89b));
        EXPECT(0xd9, gbc.readMem(0xe89c));
        // CB D9 028F
        gbc.setState(0x9589, 0xb96a, 0x6250, 0x6bff, 0x36d7, 0xf5a5, 0x1, 0x1);
        gbc.writeMem(0x9589, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0xb96a, gbc.sp());
        EXPECT(0x958b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9589));
        EXPECT(0xd9, gbc.readMem(0x958a));
        // CB D9 0290
        gbc.setState(0xa445, 0x5f54, 0x78d0, 0xc291, 0x97a, 0x81ad, 0x0, 0x0);
        gbc.writeMem(0xa445, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x5f54, gbc.sp());
        EXPECT(0xa447, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa445));
        EXPECT(0xd9, gbc.readMem(0xa446));
        // CB D9 0291
        gbc.setState(0x6ce6, 0xdeb3, 0xc0f0, 0xabcb, 0x5e6e, 0x2bde, 0x1, 0x0);
        gbc.writeMem(0x6ce6, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0xdeb3, gbc.sp());
        EXPECT(0x6ce8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D9 0292
        gbc.setState(0xdd8d, 0x77f3, 0x8a50, 0x208b, 0x3274, 0x2191, 0x0, 0x0);
        gbc.writeMem(0xdd8d, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x77f3, gbc.sp());
        EXPECT(0xdd8f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdd8d));
        EXPECT(0xd9, gbc.readMem(0xdd8e));
        // CB D9 0293
        gbc.setState(0x9d6, 0x5eaa, 0x910, 0x1da4, 0x7642, 0x1de0, 0x1, 0x0);
        gbc.writeMem(0x9d6, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x5eaa, gbc.sp());
        EXPECT(0x9d8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D9 0294
        gbc.setState(0x9197, 0x8197, 0xb170, 0x7e86, 0xa8d1, 0x9816, 0x0, 0x1);
        gbc.writeMem(0x9197, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x8197, gbc.sp());
        EXPECT(0x9199, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9197));
        EXPECT(0xd9, gbc.readMem(0x9198));
        // CB D9 0295
        gbc.setState(0x69b5, 0x874d, 0x5900, 0xfedb, 0x3d67, 0x5bd3, 0x1, 0x0);
        gbc.writeMem(0x69b5, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x874d, gbc.sp());
        EXPECT(0x69b7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D9 0297
        gbc.setState(0x1676, 0x2dfe, 0x5220, 0xad6c, 0x8481, 0x5390, 0x1, 0x0);
        gbc.writeMem(0x1676, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x2dfe, gbc.sp());
        EXPECT(0x1678, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D9 0299
        gbc.setState(0xe491, 0xa570, 0x4740, 0xee96, 0xef56, 0xa4ee, 0x0, 0x1);
        gbc.writeMem(0xe491, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0xa570, gbc.sp());
        EXPECT(0xe493, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe491));
        EXPECT(0xd9, gbc.readMem(0xe492));
        // CB D9 029A
        gbc.setState(0x5846, 0x4b18, 0x230, 0x5d98, 0xaedf, 0x8711, 0x1, 0x1);
        gbc.writeMem(0x5846, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x4b18, gbc.sp());
        EXPECT(0x5848, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D9 029B
        gbc.setState(0xb0b5, 0x93fb, 0xaac0, 0xdcf6, 0x7c43, 0xd9dc, 0x1, 0x0);
        gbc.writeMem(0xb0b5, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x93fb, gbc.sp());
        EXPECT(0xb0b7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb0b5));
        EXPECT(0xd9, gbc.readMem(0xb0b6));
        // CB D9 029C
        gbc.setState(0x2ea5, 0x8f24, 0xfcc0, 0x2655, 0x5d0a, 0xc2da, 0x1, 0x0);
        gbc.writeMem(0x2ea5, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x8f24, gbc.sp());
        EXPECT(0x2ea7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D9 029D
        gbc.setState(0xd4c9, 0x1b4, 0xf290, 0x7d24, 0xea86, 0xeb87, 0x1, 0x0);
        gbc.writeMem(0xd4c9, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x1b4, gbc.sp());
        EXPECT(0xd4cb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd4c9));
        EXPECT(0xd9, gbc.readMem(0xd4ca));
        // CB D9 029E
        gbc.setState(0x1fd6, 0x870c, 0x36c0, 0x2d49, 0xe1b7, 0x66ce, 0x0, 0x1);
        gbc.writeMem(0x1fd6, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x870c, gbc.sp());
        EXPECT(0x1fd8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D9 029F
        gbc.setState(0x49d0, 0xc23b, 0xb6b0, 0xac23, 0xe178, 0x5576, 0x0, 0x0);
        gbc.writeMem(0x49d0, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0xc23b, gbc.sp());
        EXPECT(0x49d2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D9 02A0
        gbc.setState(0x1be2, 0x19c1, 0x9b20, 0x3f0d, 0x9a6b, 0x7991, 0x0, 0x1);
        gbc.writeMem(0x1be2, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x19c1, gbc.sp());
        EXPECT(0x1be4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D9 02A1
        gbc.setState(0xace8, 0x5759, 0x8410, 0x61a, 0xebca, 0xcf45, 0x0, 0x1);
        gbc.writeMem(0xace8, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x5759, gbc.sp());
        EXPECT(0xacea, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xace8));
        EXPECT(0xd9, gbc.readMem(0xace9));
        // CB D9 02A3
        gbc.setState(0x37a7, 0xc87b, 0x8c20, 0x94be, 0x91ee, 0xc1e2, 0x0, 0x1);
        gbc.writeMem(0x37a7, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0xc87b, gbc.sp());
        EXPECT(0x37a9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D9 02A4
        gbc.setState(0xc06a, 0x2869, 0xa7c0, 0x4c12, 0xb651, 0x7e0b, 0x0, 0x0);
        gbc.writeMem(0xc06a, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x2869, gbc.sp());
        EXPECT(0xc06c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc06a));
        EXPECT(0xd9, gbc.readMem(0xc06b));
        // CB D9 02A5
        gbc.setState(0xfa, 0xde5e, 0xf7f0, 0x4222, 0xe565, 0xccfb, 0x1, 0x0);
        gbc.writeMem(0xfa, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0xde5e, gbc.sp());
        EXPECT(0xfc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D9 02A6
        gbc.setState(0x8bd7, 0xdecd, 0xe540, 0x788, 0x5295, 0x44d7, 0x1, 0x1);
        gbc.writeMem(0x8bd7, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0xdecd, gbc.sp());
        EXPECT(0x8bd9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8bd7));
        EXPECT(0xd9, gbc.readMem(0x8bd8));
        // CB D9 02A7
        gbc.setState(0x742f, 0x8bc1, 0x1800, 0xabca, 0x6176, 0xa1aa, 0x0, 0x0);
        gbc.writeMem(0x742f, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x8bc1, gbc.sp());
        EXPECT(0x7431, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D9 02A8
        gbc.setState(0xb326, 0x7f1d, 0x9140, 0x2ed3, 0xbf51, 0x9fdb, 0x1, 0x1);
        gbc.writeMem(0xb326, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x7f1d, gbc.sp());
        EXPECT(0xb328, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb326));
        EXPECT(0xd9, gbc.readMem(0xb327));
        // CB D9 02A9
        gbc.setState(0x6fd4, 0x9787, 0x9d60, 0x3d0, 0x7db9, 0x251, 0x0, 0x0);
        gbc.writeMem(0x6fd4, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x9787, gbc.sp());
        EXPECT(0x6fd6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D9 02AA
        gbc.setState(0x75a4, 0x4940, 0xf5c0, 0x97bc, 0xb6b3, 0x68f0, 0x1, 0x0);
        gbc.writeMem(0x75a4, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x4940, gbc.sp());
        EXPECT(0x75a6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D9 02AB
        gbc.setState(0x19e0, 0xdbd8, 0x3c90, 0x5cc0, 0xd7ca, 0xdea3, 0x0, 0x1);
        gbc.writeMem(0x19e0, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0xdbd8, gbc.sp());
        EXPECT(0x19e2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D9 02AC
        gbc.setState(0x31f8, 0x2aea, 0x7160, 0xcf40, 0xf182, 0x599d, 0x0, 0x1);
        gbc.writeMem(0x31f8, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x2aea, gbc.sp());
        EXPECT(0x31fa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D9 02AE
        gbc.setState(0xbc74, 0x6dd7, 0x5b0, 0xae74, 0x760a, 0xce2b, 0x0, 0x0);
        gbc.writeMem(0xbc74, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x6dd7, gbc.sp());
        EXPECT(0xbc76, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbc74));
        EXPECT(0xd9, gbc.readMem(0xbc75));
        // CB D9 02AF
        gbc.setState(0x9e8a, 0xd6eb, 0x56a0, 0x4d19, 0x65d0, 0xcda0, 0x0, 0x0);
        gbc.writeMem(0x9e8a, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0xd6eb, gbc.sp());
        EXPECT(0x9e8c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9e8a));
        EXPECT(0xd9, gbc.readMem(0x9e8b));
        // CB D9 02B0
        gbc.setState(0xc53, 0xb47f, 0x76f0, 0xb64b, 0x782a, 0xf75d, 0x0, 0x0);
        gbc.writeMem(0xc53, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0xb47f, gbc.sp());
        EXPECT(0xc55, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D9 02B1
        gbc.setState(0x70c5, 0xbb62, 0xab0, 0x7a87, 0xfa79, 0xba74, 0x0, 0x1);
        gbc.writeMem(0x70c5, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0xbb62, gbc.sp());
        EXPECT(0x70c7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D9 02B2
        gbc.setState(0xbf71, 0x5484, 0xc1e0, 0x4ad8, 0xa3f1, 0x9b13, 0x0, 0x1);
        gbc.writeMem(0xbf71, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x5484, gbc.sp());
        EXPECT(0xbf73, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbf71));
        EXPECT(0xd9, gbc.readMem(0xbf72));
        // CB D9 02B4
        gbc.setState(0x204f, 0x429c, 0x2880, 0xa662, 0xef8f, 0x7087, 0x1, 0x1);
        gbc.writeMem(0x204f, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x429c, gbc.sp());
        EXPECT(0x2051, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D9 02B5
        gbc.setState(0x6dd2, 0x9cbd, 0x4ab0, 0x5003, 0x496b, 0x6bde, 0x0, 0x0);
        gbc.writeMem(0x6dd2, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x9cbd, gbc.sp());
        EXPECT(0x6dd4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D9 02B6
        gbc.setState(0x203b, 0xdbe5, 0x2220, 0x6f, 0xeef8, 0xad5b, 0x0, 0x0);
        gbc.writeMem(0x203b, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0xdbe5, gbc.sp());
        EXPECT(0x203d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D9 02B7
        gbc.setState(0x9430, 0x47ec, 0xf520, 0xeaf9, 0xf2c6, 0x1322, 0x0, 0x0);
        gbc.writeMem(0x9430, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x47ec, gbc.sp());
        EXPECT(0x9432, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9430));
        EXPECT(0xd9, gbc.readMem(0x9431));
        // CB D9 02B9
        gbc.setState(0xeb1d, 0xa288, 0x2c50, 0xee95, 0xed2e, 0x60d2, 0x1, 0x1);
        gbc.writeMem(0xeb1d, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0xa288, gbc.sp());
        EXPECT(0xeb1f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeb1d));
        EXPECT(0xd9, gbc.readMem(0xeb1e));
        // CB D9 02BA
        gbc.setState(0xb7d8, 0x17b5, 0xfe40, 0xe74a, 0xf96d, 0xa891, 0x1, 0x1);
        gbc.writeMem(0xb7d8, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x17b5, gbc.sp());
        EXPECT(0xb7da, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb7d8));
        EXPECT(0xd9, gbc.readMem(0xb7d9));
        // CB D9 02BB
        gbc.setState(0x63cc, 0x5db3, 0xc620, 0x69f6, 0x73a4, 0x20bf, 0x0, 0x0);
        gbc.writeMem(0x63cc, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x5db3, gbc.sp());
        EXPECT(0x63ce, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D9 02BC
        gbc.setState(0xc4c, 0x4557, 0xe470, 0x599, 0xafd9, 0x6419, 0x1, 0x0);
        gbc.writeMem(0xc4c, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x4557, gbc.sp());
        EXPECT(0xc4e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D9 02BE
        gbc.setState(0x9901, 0x437a, 0xc680, 0xb38, 0x4335, 0x4e6c, 0x1, 0x0);
        gbc.writeMem(0x9901, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x437a, gbc.sp());
        EXPECT(0x9903, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9901));
        EXPECT(0xd9, gbc.readMem(0x9902));
        // CB D9 02BF
        gbc.setState(0x968c, 0x5c5e, 0xe6c0, 0x6730, 0xf93f, 0x598f, 0x0, 0x0);
        gbc.writeMem(0x968c, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x5c5e, gbc.sp());
        EXPECT(0x968e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x968c));
        EXPECT(0xd9, gbc.readMem(0x968d));
        // CB D9 02C0
        gbc.setState(0x58d6, 0x83b8, 0x67f0, 0x6b79, 0x2bfc, 0xbbe8, 0x0, 0x0);
        gbc.writeMem(0x58d6, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x83b8, gbc.sp());
        EXPECT(0x58d8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D9 02C1
        gbc.setState(0x91b0, 0x7eb3, 0x7f10, 0x902, 0xd220, 0x71ec, 0x0, 0x0);
        gbc.writeMem(0x91b0, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x7eb3, gbc.sp());
        EXPECT(0x91b2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x91b0));
        EXPECT(0xd9, gbc.readMem(0x91b1));
        // CB D9 02C2
        gbc.setState(0x67be, 0xd891, 0x2ce0, 0x79d6, 0x376d, 0x72a9, 0x1, 0x0);
        gbc.writeMem(0x67be, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0xd891, gbc.sp());
        EXPECT(0x67c0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D9 02C3
        gbc.setState(0x2f7c, 0x7d71, 0xabb0, 0xace0, 0x88fb, 0xa12c, 0x0, 0x0);
        gbc.writeMem(0x2f7c, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x7d71, gbc.sp());
        EXPECT(0x2f7e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D9 02C4
        gbc.setState(0x5a35, 0xe741, 0xe510, 0x6868, 0x149c, 0x423b, 0x0, 0x1);
        gbc.writeMem(0x5a35, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0xe741, gbc.sp());
        EXPECT(0x5a37, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D9 02C5
        gbc.setState(0x1ee1, 0x7165, 0xb330, 0xbf8d, 0x4496, 0xe913, 0x1, 0x1);
        gbc.writeMem(0x1ee1, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x7165, gbc.sp());
        EXPECT(0x1ee3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D9 02C6
        gbc.setState(0xb3d1, 0xacb4, 0x2780, 0x9566, 0x8450, 0xb24b, 0x1, 0x1);
        gbc.writeMem(0xb3d1, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0xacb4, gbc.sp());
        EXPECT(0xb3d3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb3d1));
        EXPECT(0xd9, gbc.readMem(0xb3d2));
        // CB D9 02C7
        gbc.setState(0x9eae, 0xc2f0, 0xd600, 0x57e5, 0x8b85, 0x6216, 0x0, 0x1);
        gbc.writeMem(0x9eae, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0xc2f0, gbc.sp());
        EXPECT(0x9eb0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9eae));
        EXPECT(0xd9, gbc.readMem(0x9eaf));
        // CB D9 02C8
        gbc.setState(0xcca, 0x2ba, 0x5ea0, 0x30cc, 0x38f7, 0x6e71, 0x1, 0x0);
        gbc.writeMem(0xcca, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x2ba, gbc.sp());
        EXPECT(0xccc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D9 02C9
        gbc.setState(0x7e45, 0x54ce, 0xe000, 0x57a6, 0x6e5c, 0xb3d8, 0x0, 0x0);
        gbc.writeMem(0x7e45, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x54ce, gbc.sp());
        EXPECT(0x7e47, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D9 02CA
        gbc.setState(0x1805, 0xc2fd, 0x6e0, 0xdc13, 0x848b, 0xb42a, 0x0, 0x0);
        gbc.writeMem(0x1805, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0xc2fd, gbc.sp());
        EXPECT(0x1807, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D9 02CC
        gbc.setState(0xbd1, 0x3912, 0x1ba0, 0xd8c5, 0x60b1, 0x9d6, 0x1, 0x1);
        gbc.writeMem(0xbd1, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x3912, gbc.sp());
        EXPECT(0xbd3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D9 02CD
        gbc.setState(0x42c2, 0x2ec, 0xaff0, 0x68bd, 0xa68, 0x2944, 0x1, 0x0);
        gbc.writeMem(0x42c2, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x2ec, gbc.sp());
        EXPECT(0x42c4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D9 02CE
        gbc.setState(0x648, 0x1852, 0x3bc0, 0xe1b0, 0xaae4, 0xc08f, 0x1, 0x0);
        gbc.writeMem(0x648, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x1852, gbc.sp());
        EXPECT(0x64a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D9 02CF
        gbc.setState(0x747a, 0x70e9, 0x2940, 0x8d0e, 0x5b0a, 0xdf46, 0x1, 0x0);
        gbc.writeMem(0x747a, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x70e9, gbc.sp());
        EXPECT(0x747c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D9 02D0
        gbc.setState(0x50a5, 0x953f, 0xc50, 0x4552, 0xe71e, 0x7ce7, 0x0, 0x0);
        gbc.writeMem(0x50a5, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x953f, gbc.sp());
        EXPECT(0x50a7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D9 02D1
        gbc.setState(0x316d, 0x4de9, 0xa190, 0x9a03, 0xb7ed, 0x666f, 0x0, 0x1);
        gbc.writeMem(0x316d, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x4de9, gbc.sp());
        EXPECT(0x316f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D9 02D2
        gbc.setState(0xa16d, 0x9f38, 0x54d0, 0x63c, 0x778f, 0x3cbb, 0x0, 0x0);
        gbc.writeMem(0xa16d, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x9f38, gbc.sp());
        EXPECT(0xa16f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa16d));
        EXPECT(0xd9, gbc.readMem(0xa16e));
        // CB D9 02D3
        gbc.setState(0xde70, 0x5d38, 0x95b0, 0x79b6, 0xa26d, 0x6f50, 0x1, 0x1);
        gbc.writeMem(0xde70, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x5d38, gbc.sp());
        EXPECT(0xde72, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xde70));
        EXPECT(0xd9, gbc.readMem(0xde71));
        // CB D9 02D4
        gbc.setState(0x64b5, 0xcb9f, 0x8ab0, 0x5f1, 0xc90d, 0x66e9, 0x0, 0x0);
        gbc.writeMem(0x64b5, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0xcb9f, gbc.sp());
        EXPECT(0x64b7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D9 02D5
        gbc.setState(0xcea4, 0x1a0b, 0x6440, 0xd590, 0x4b10, 0x4aab, 0x0, 0x0);
        gbc.writeMem(0xcea4, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x1a0b, gbc.sp());
        EXPECT(0xcea6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcea4));
        EXPECT(0xd9, gbc.readMem(0xcea5));
        // CB D9 02D6
        gbc.setState(0x25a1, 0x941c, 0xc20, 0xcb21, 0xdfbb, 0xac16, 0x1, 0x0);
        gbc.writeMem(0x25a1, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x941c, gbc.sp());
        EXPECT(0x25a3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D9 02D7
        gbc.setState(0x5749, 0x3285, 0xd910, 0xe9d5, 0x9970, 0xa9a1, 0x1, 0x0);
        gbc.writeMem(0x5749, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x3285, gbc.sp());
        EXPECT(0x574b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D9 02D8
        gbc.setState(0xb85c, 0x1e6a, 0x2540, 0x2e49, 0xd111, 0x2bad, 0x0, 0x1);
        gbc.writeMem(0xb85c, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x1e6a, gbc.sp());
        EXPECT(0xb85e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb85c));
        EXPECT(0xd9, gbc.readMem(0xb85d));
        // CB D9 02D9
        gbc.setState(0x181e, 0xbfc8, 0xaf90, 0x5ac1, 0x4a47, 0xe6b2, 0x0, 0x1);
        gbc.writeMem(0x181e, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0xbfc8, gbc.sp());
        EXPECT(0x1820, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D9 02DA
        gbc.setState(0x815, 0x914f, 0x1520, 0xda5c, 0x2f14, 0x785d, 0x0, 0x1);
        gbc.writeMem(0x815, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x914f, gbc.sp());
        EXPECT(0x817, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D9 02DB
        gbc.setState(0x8b27, 0x4d0c, 0x8e10, 0x6ba6, 0x1389, 0x8e84, 0x1, 0x0);
        gbc.writeMem(0x8b27, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x4d0c, gbc.sp());
        EXPECT(0x8b29, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8b27));
        EXPECT(0xd9, gbc.readMem(0x8b28));
        // CB D9 02DC
        gbc.setState(0x7307, 0xb01a, 0xf870, 0x7a9c, 0xfc9f, 0x1edd, 0x0, 0x0);
        gbc.writeMem(0x7307, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0xb01a, gbc.sp());
        EXPECT(0x7309, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D9 02DD
        gbc.setState(0x2ddc, 0x5eff, 0xba80, 0x626d, 0xdc8f, 0xd87d, 0x0, 0x0);
        gbc.writeMem(0x2ddc, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x5eff, gbc.sp());
        EXPECT(0x2dde, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D9 02DE
        gbc.setState(0xb535, 0xd848, 0xe300, 0x5759, 0x232b, 0x99d1, 0x1, 0x0);
        gbc.writeMem(0xb535, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0xd848, gbc.sp());
        EXPECT(0xb537, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb535));
        EXPECT(0xd9, gbc.readMem(0xb536));
        // CB D9 02DF
        gbc.setState(0xb5f1, 0x8cdf, 0xe2e0, 0x4a38, 0xa32c, 0x481, 0x1, 0x1);
        gbc.writeMem(0xb5f1, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x8cdf, gbc.sp());
        EXPECT(0xb5f3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb5f1));
        EXPECT(0xd9, gbc.readMem(0xb5f2));
        // CB D9 02E0
        gbc.setState(0x89e0, 0xbc1a, 0x1ad0, 0x43c1, 0x2564, 0x7d78, 0x1, 0x1);
        gbc.writeMem(0x89e0, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0xbc1a, gbc.sp());
        EXPECT(0x89e2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x89e0));
        EXPECT(0xd9, gbc.readMem(0x89e1));
        // CB D9 02E1
        gbc.setState(0x3058, 0x21ea, 0x4c90, 0x14f7, 0xa9be, 0x7c74, 0x1, 0x0);
        gbc.writeMem(0x3058, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x21ea, gbc.sp());
        EXPECT(0x305a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D9 02E2
        gbc.setState(0xebd6, 0xaf09, 0xd840, 0x83f6, 0x4851, 0x373f, 0x1, 0x0);
        gbc.writeMem(0xebd6, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0xaf09, gbc.sp());
        EXPECT(0xebd8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xebd6));
        EXPECT(0xd9, gbc.readMem(0xebd7));
        // CB D9 02E3
        gbc.setState(0x20f6, 0xb87d, 0xce30, 0x89b6, 0x74d3, 0x1043, 0x0, 0x0);
        gbc.writeMem(0x20f6, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0xb87d, gbc.sp());
        EXPECT(0x20f8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D9 02E4
        gbc.setState(0x41d6, 0x9b11, 0xd4a0, 0x169a, 0xfda2, 0x3c6a, 0x1, 0x0);
        gbc.writeMem(0x41d6, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x9b11, gbc.sp());
        EXPECT(0x41d8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D9 02E5
        gbc.setState(0x8624, 0x2b8, 0x81f0, 0xc3c0, 0xbe36, 0xd1bd, 0x0, 0x1);
        gbc.writeMem(0x8624, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x2b8, gbc.sp());
        EXPECT(0x8626, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8624));
        EXPECT(0xd9, gbc.readMem(0x8625));
        // CB D9 02E6
        gbc.setState(0xda85, 0x920b, 0x3c70, 0x970f, 0x2d25, 0xf39e, 0x1, 0x0);
        gbc.writeMem(0xda85, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x920b, gbc.sp());
        EXPECT(0xda87, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xda85));
        EXPECT(0xd9, gbc.readMem(0xda86));
        // CB D9 02E7
        gbc.setState(0x22ad, 0x7120, 0x4810, 0x1e9b, 0xfc6e, 0xeabe, 0x1, 0x0);
        gbc.writeMem(0x22ad, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0x7120, gbc.sp());
        EXPECT(0x22af, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D9 02E8
        gbc.setState(0x41bd, 0x9f86, 0xfe10, 0x1138, 0xabfb, 0x887c, 0x0, 0x0);
        gbc.writeMem(0x41bd, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x9f86, gbc.sp());
        EXPECT(0x41bf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D9 02EA
        gbc.setState(0x8d43, 0xe257, 0xa7f0, 0x7455, 0xa01b, 0x9b4a, 0x1, 0x0);
        gbc.writeMem(0x8d43, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0xe257, gbc.sp());
        EXPECT(0x8d45, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8d43));
        EXPECT(0xd9, gbc.readMem(0x8d44));
        // CB D9 02EB
        gbc.setState(0x6df, 0x4173, 0x4480, 0x94e6, 0x5cb8, 0x7c7a, 0x1, 0x0);
        gbc.writeMem(0x6df, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x4173, gbc.sp());
        EXPECT(0x6e1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D9 02EC
        gbc.setState(0x68e9, 0xb859, 0xe880, 0x2454, 0x7f68, 0x5a07, 0x0, 0x1);
        gbc.writeMem(0x68e9, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0xb859, gbc.sp());
        EXPECT(0x68eb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D9 02ED
        gbc.setState(0x276c, 0xf716, 0x90f0, 0x6830, 0x3b06, 0x202e, 0x0, 0x0);
        gbc.writeMem(0x276c, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0xf716, gbc.sp());
        EXPECT(0x276e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D9 02EE
        gbc.setState(0x1edf, 0x9b87, 0x8030, 0xc157, 0x1797, 0x7c40, 0x0, 0x1);
        gbc.writeMem(0x1edf, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x9b87, gbc.sp());
        EXPECT(0x1ee1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D9 02EF
        gbc.setState(0xb526, 0xc36, 0xa0b0, 0x8fac, 0x65f1, 0x8ab2, 0x1, 0x0);
        gbc.writeMem(0xb526, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0xc36, gbc.sp());
        EXPECT(0xb528, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb526));
        EXPECT(0xd9, gbc.readMem(0xb527));
        // CB D9 02F0
        gbc.setState(0x5b5e, 0x4290, 0xe1d0, 0x9f08, 0x3257, 0x4a75, 0x0, 0x0);
        gbc.writeMem(0x5b5e, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x4290, gbc.sp());
        EXPECT(0x5b60, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D9 02F1
        gbc.setState(0xe0a9, 0xf758, 0xf860, 0x8d1f, 0x8b5b, 0xf071, 0x0, 0x1);
        gbc.writeMem(0xe0a9, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0xf758, gbc.sp());
        EXPECT(0xe0ab, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe0a9));
        EXPECT(0xd9, gbc.readMem(0xe0aa));
        // CB D9 02F2
        gbc.setState(0x259a, 0xd7ba, 0x76c0, 0x45f7, 0x60d8, 0x5aa2, 0x1, 0x0);
        gbc.writeMem(0x259a, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0xd7ba, gbc.sp());
        EXPECT(0x259c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D9 02F3
        gbc.setState(0xa7e5, 0x7d2b, 0x2260, 0x2ea4, 0x83b0, 0x706b, 0x1, 0x0);
        gbc.writeMem(0xa7e5, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x7d2b, gbc.sp());
        EXPECT(0xa7e7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa7e5));
        EXPECT(0xd9, gbc.readMem(0xa7e6));
        // CB D9 02F4
        gbc.setState(0x2194, 0xa1c9, 0xb740, 0x14c5, 0x20d8, 0xa7e5, 0x0, 0x0);
        gbc.writeMem(0x2194, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0xa1c9, gbc.sp());
        EXPECT(0x2196, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D9 02F5
        gbc.setState(0x8d58, 0x7a4b, 0x26e0, 0xa9b9, 0x8089, 0x98d4, 0x1, 0x1);
        gbc.writeMem(0x8d58, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x7a4b, gbc.sp());
        EXPECT(0x8d5a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8d58));
        EXPECT(0xd9, gbc.readMem(0x8d59));
        // CB D9 02F6
        gbc.setState(0x4abe, 0x4388, 0x5da0, 0x557a, 0xdf56, 0x1a27, 0x0, 0x1);
        gbc.writeMem(0x4abe, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x4388, gbc.sp());
        EXPECT(0x4ac0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D9 02F7
        gbc.setState(0xe0e2, 0x2417, 0xd910, 0xe8dc, 0x7407, 0x36a, 0x1, 0x0);
        gbc.writeMem(0xe0e2, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x2417, gbc.sp());
        EXPECT(0xe0e4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe0e2));
        EXPECT(0xd9, gbc.readMem(0xe0e3));
        // CB D9 02F8
        gbc.setState(0xe745, 0xe781, 0x4270, 0x9cb3, 0x5c36, 0x1cc6, 0x0, 0x0);
        gbc.writeMem(0xe745, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0xe781, gbc.sp());
        EXPECT(0xe747, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe745));
        EXPECT(0xd9, gbc.readMem(0xe746));
        // CB D9 02F9
        gbc.setState(0xe46e, 0x50b1, 0x27a0, 0xb6c2, 0x9dde, 0xed5e, 0x1, 0x0);
        gbc.writeMem(0xe46e, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x50b1, gbc.sp());
        EXPECT(0xe470, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe46e));
        EXPECT(0xd9, gbc.readMem(0xe46f));
        // CB D9 02FA
        gbc.setState(0xdd28, 0xbc2f, 0x1f70, 0xb7bf, 0x98ac, 0xff72, 0x1, 0x0);
        gbc.writeMem(0xdd28, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0xbc2f, gbc.sp());
        EXPECT(0xdd2a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdd28));
        EXPECT(0xd9, gbc.readMem(0xdd29));
        // CB D9 02FB
        gbc.setState(0xd607, 0x6aa9, 0xd570, 0xfcfb, 0x441, 0x1aac, 0x0, 0x0);
        gbc.writeMem(0xd607, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x6aa9, gbc.sp());
        EXPECT(0xd609, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd607));
        EXPECT(0xd9, gbc.readMem(0xd608));
        // CB D9 02FC
        gbc.setState(0x1b6, 0xcdb5, 0xc0a0, 0x729f, 0xcc05, 0xd4a8, 0x1, 0x0);
        gbc.writeMem(0x1b6, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0xcdb5, gbc.sp());
        EXPECT(0x1b8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D9 02FD
        gbc.setState(0x3fae, 0x2d1a, 0xe080, 0x708d, 0x9332, 0x9241, 0x1, 0x1);
        gbc.writeMem(0x3fae, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x2d1a, gbc.sp());
        EXPECT(0x3fb0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D9 02FE
        gbc.setState(0x5223, 0xb520, 0x2900, 0xfd53, 0x4325, 0xc02, 0x0, 0x0);
        gbc.writeMem(0x5223, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0xb520, gbc.sp());
        EXPECT(0x5225, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D9 02FF
        gbc.setState(0x9fa0, 0xc15, 0x920, 0xa493, 0xaaaa, 0xa674, 0x0, 0x1);
        gbc.writeMem(0x9fa0, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0xc15, gbc.sp());
        EXPECT(0x9fa2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9fa0));
        EXPECT(0xd9, gbc.readMem(0x9fa1));
        // CB D9 0300
        gbc.setState(0x23d3, 0x5187, 0x5970, 0x99ff, 0x5c6, 0x6619, 0x0, 0x0);
        gbc.writeMem(0x23d3, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x5187, gbc.sp());
        EXPECT(0x23d5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D9 0301
        gbc.setState(0xc7c2, 0x9e8, 0xe3a0, 0x3f0c, 0xa774, 0x351f, 0x1, 0x0);
        gbc.writeMem(0xc7c2, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x9e8, gbc.sp());
        EXPECT(0xc7c4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc7c2));
        EXPECT(0xd9, gbc.readMem(0xc7c3));
        // CB D9 0302
        gbc.setState(0x56ca, 0x9601, 0xe0c0, 0x2d42, 0x365a, 0x7025, 0x1, 0x1);
        gbc.writeMem(0x56ca, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x9601, gbc.sp());
        EXPECT(0x56cc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D9 0303
        gbc.setState(0xbf1c, 0x7d0f, 0x2dd0, 0x9d87, 0x887c, 0x9c93, 0x0, 0x0);
        gbc.writeMem(0xbf1c, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0x7d0f, gbc.sp());
        EXPECT(0xbf1e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbf1c));
        EXPECT(0xd9, gbc.readMem(0xbf1d));
        // CB D9 0304
        gbc.setState(0x60d0, 0x332c, 0xd230, 0x63a4, 0xa36b, 0xb0f, 0x0, 0x1);
        gbc.writeMem(0x60d0, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x332c, gbc.sp());
        EXPECT(0x60d2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D9 0305
        gbc.setState(0x45e7, 0xf427, 0x36b0, 0x1b84, 0xcd71, 0xf25f, 0x1, 0x0);
        gbc.writeMem(0x45e7, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0xf427, gbc.sp());
        EXPECT(0x45e9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D9 0306
        gbc.setState(0xa269, 0xa879, 0x1550, 0x7f3e, 0xf92e, 0xaa89, 0x1, 0x1);
        gbc.writeMem(0xa269, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0xa879, gbc.sp());
        EXPECT(0xa26b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa269));
        EXPECT(0xd9, gbc.readMem(0xa26a));
        // CB D9 0307
        gbc.setState(0xa043, 0xbe16, 0x58f0, 0x6a2e, 0xc1f0, 0xb808, 0x1, 0x0);
        gbc.writeMem(0xa043, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0xbe16, gbc.sp());
        EXPECT(0xa045, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa043));
        EXPECT(0xd9, gbc.readMem(0xa044));
        // CB D9 0308
        gbc.setState(0x5bd4, 0xcc22, 0x5f20, 0xa6c2, 0x4b8f, 0xe868, 0x0, 0x1);
        gbc.writeMem(0x5bd4, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0xcc22, gbc.sp());
        EXPECT(0x5bd6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D9 0309
        gbc.setState(0x642e, 0xb471, 0x700, 0xab4b, 0x993a, 0x3672, 0x1, 0x0);
        gbc.writeMem(0x642e, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0xb471, gbc.sp());
        EXPECT(0x6430, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D9 030A
        gbc.setState(0x62a5, 0x542e, 0xf820, 0xb62f, 0x306, 0xb84f, 0x1, 0x0);
        gbc.writeMem(0x62a5, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x542e, gbc.sp());
        EXPECT(0x62a7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D9 030B
        gbc.setState(0x6069, 0x2412, 0x41f0, 0x8149, 0xb1b5, 0x56a2, 0x0, 0x0);
        gbc.writeMem(0x6069, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x2412, gbc.sp());
        EXPECT(0x606b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D9 030C
        gbc.setState(0x8334, 0xd223, 0xa4e0, 0xbbe4, 0x5d7c, 0x87eb, 0x0, 0x0);
        gbc.writeMem(0x8334, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0xd223, gbc.sp());
        EXPECT(0x8336, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8334));
        EXPECT(0xd9, gbc.readMem(0x8335));
        // CB D9 030D
        gbc.setState(0x2876, 0x4343, 0x9280, 0xe555, 0x9360, 0x56cc, 0x0, 0x1);
        gbc.writeMem(0x2876, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x4343, gbc.sp());
        EXPECT(0x2878, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D9 030E
        gbc.setState(0x3b7f, 0xdd4c, 0xe7c0, 0x427, 0x5bc2, 0x1502, 0x1, 0x0);
        gbc.writeMem(0x3b7f, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0xdd4c, gbc.sp());
        EXPECT(0x3b81, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D9 030F
        gbc.setState(0x6059, 0x8373, 0x7cd0, 0xfeea, 0x8a70, 0xf04c, 0x1, 0x1);
        gbc.writeMem(0x6059, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x8373, gbc.sp());
        EXPECT(0x605b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D9 0310
        gbc.setState(0x19c, 0xc382, 0x8830, 0xb9aa, 0xf638, 0x2526, 0x1, 0x1);
        gbc.writeMem(0x19c, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0xc382, gbc.sp());
        EXPECT(0x19e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D9 0311
        gbc.setState(0xdab0, 0x5cce, 0xddc0, 0x60f1, 0xffba, 0xfa68, 0x1, 0x0);
        gbc.writeMem(0xdab0, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x5cce, gbc.sp());
        EXPECT(0xdab2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdab0));
        EXPECT(0xd9, gbc.readMem(0xdab1));
        // CB D9 0312
        gbc.setState(0x8ea8, 0x135, 0x7190, 0x36e4, 0xfdec, 0x9781, 0x1, 0x1);
        gbc.writeMem(0x8ea8, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x135, gbc.sp());
        EXPECT(0x8eaa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8ea8));
        EXPECT(0xd9, gbc.readMem(0x8ea9));
        // CB D9 0313
        gbc.setState(0x7d64, 0x2bfd, 0x3480, 0xc3ed, 0x6974, 0x69, 0x1, 0x0);
        gbc.writeMem(0x7d64, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0x2bfd, gbc.sp());
        EXPECT(0x7d66, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D9 0314
        gbc.setState(0x3e33, 0x1506, 0x73a0, 0x8160, 0x999f, 0x225b, 0x0, 0x1);
        gbc.writeMem(0x3e33, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x1506, gbc.sp());
        EXPECT(0x3e35, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D9 0315
        gbc.setState(0x4cba, 0xce24, 0x4270, 0x23c2, 0x5ebc, 0xb682, 0x0, 0x0);
        gbc.writeMem(0x4cba, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0xce24, gbc.sp());
        EXPECT(0x4cbc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D9 0316
        gbc.setState(0x96c2, 0x5707, 0xc4c0, 0xf350, 0xf920, 0xd1ed, 0x1, 0x1);
        gbc.writeMem(0x96c2, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x5707, gbc.sp());
        EXPECT(0x96c4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x96c2));
        EXPECT(0xd9, gbc.readMem(0x96c3));
        // CB D9 031A
        gbc.setState(0x258c, 0x4f2d, 0x4cc0, 0x2bca, 0x1a60, 0xd0e0, 0x0, 0x1);
        gbc.writeMem(0x258c, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x4f2d, gbc.sp());
        EXPECT(0x258e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D9 031B
        gbc.setState(0x8fdc, 0xd189, 0x7660, 0xfe60, 0x80a5, 0x71fa, 0x1, 0x0);
        gbc.writeMem(0x8fdc, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0xd189, gbc.sp());
        EXPECT(0x8fde, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8fdc));
        EXPECT(0xd9, gbc.readMem(0x8fdd));
        // CB D9 031C
        gbc.setState(0x9a45, 0xe7d9, 0xee0, 0x1c39, 0x6be, 0x8682, 0x0, 0x1);
        gbc.writeMem(0x9a45, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0xe7d9, gbc.sp());
        EXPECT(0x9a47, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9a45));
        EXPECT(0xd9, gbc.readMem(0x9a46));
        // CB D9 031E
        gbc.setState(0x4537, 0x7241, 0xf60, 0xd9bd, 0xdf74, 0x4c50, 0x0, 0x1);
        gbc.writeMem(0x4537, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x7241, gbc.sp());
        EXPECT(0x4539, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D9 031F
        gbc.setState(0xba34, 0x913d, 0x9c60, 0x72fb, 0x8ffe, 0x3804, 0x0, 0x1);
        gbc.writeMem(0xba34, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x913d, gbc.sp());
        EXPECT(0xba36, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xba34));
        EXPECT(0xd9, gbc.readMem(0xba35));
        // CB D9 0320
        gbc.setState(0x1250, 0x245, 0xa920, 0xcfb5, 0x8019, 0xbfed, 0x0, 0x1);
        gbc.writeMem(0x1250, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x245, gbc.sp());
        EXPECT(0x1252, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D9 0321
        gbc.setState(0xd230, 0x36a3, 0xc8e0, 0x584f, 0xf1a6, 0x12d0, 0x1, 0x1);
        gbc.writeMem(0xd230, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x36a3, gbc.sp());
        EXPECT(0xd232, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd230));
        EXPECT(0xd9, gbc.readMem(0xd231));
        // CB D9 0322
        gbc.setState(0x7419, 0x426, 0x930, 0xbc66, 0x9c89, 0xceac, 0x0, 0x0);
        gbc.writeMem(0x7419, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x426, gbc.sp());
        EXPECT(0x741b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D9 0323
        gbc.setState(0x67a, 0x6365, 0xc2d0, 0x229, 0x6e87, 0xb08d, 0x0, 0x1);
        gbc.writeMem(0x67a, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x6365, gbc.sp());
        EXPECT(0x67c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D9 0324
        gbc.setState(0x4516, 0x5a1c, 0x8880, 0x59b0, 0x9394, 0x1ec7, 0x0, 0x0);
        gbc.writeMem(0x4516, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x5a1c, gbc.sp());
        EXPECT(0x4518, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D9 0325
        gbc.setState(0x21e6, 0xdc9b, 0x28d0, 0xacfc, 0xfcc5, 0xc22, 0x1, 0x1);
        gbc.writeMem(0x21e6, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0xdc9b, gbc.sp());
        EXPECT(0x21e8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D9 0326
        gbc.setState(0x1076, 0x1b9, 0xbc90, 0xb2a1, 0xad02, 0xe00, 0x1, 0x1);
        gbc.writeMem(0x1076, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x1b9, gbc.sp());
        EXPECT(0x1078, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D9 0327
        gbc.setState(0x9977, 0xbe39, 0xa7a0, 0xad9e, 0xe8cc, 0xe95, 0x1, 0x1);
        gbc.writeMem(0x9977, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0xbe39, gbc.sp());
        EXPECT(0x9979, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9977));
        EXPECT(0xd9, gbc.readMem(0x9978));
        // CB D9 0328
        gbc.setState(0xad30, 0xd491, 0x6e60, 0x5590, 0x2885, 0x60d, 0x0, 0x0);
        gbc.writeMem(0xad30, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0xd491, gbc.sp());
        EXPECT(0xad32, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xad30));
        EXPECT(0xd9, gbc.readMem(0xad31));
        // CB D9 0329
        gbc.setState(0x5109, 0x80ec, 0xe4f0, 0x3146, 0x3f6f, 0xb8cb, 0x1, 0x0);
        gbc.writeMem(0x5109, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x80ec, gbc.sp());
        EXPECT(0x510b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D9 032A
        gbc.setState(0xc86, 0xaa19, 0x81d0, 0xc5ee, 0xf11a, 0xc63, 0x0, 0x1);
        gbc.writeMem(0xc86, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0xaa19, gbc.sp());
        EXPECT(0xc88, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D9 032B
        gbc.setState(0xae97, 0x9ca, 0x7ba0, 0xaffa, 0x4ac2, 0x2217, 0x1, 0x1);
        gbc.writeMem(0xae97, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x9ca, gbc.sp());
        EXPECT(0xae99, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xae97));
        EXPECT(0xd9, gbc.readMem(0xae98));
        // CB D9 032C
        gbc.setState(0xa2dd, 0xec50, 0xf3c0, 0x292e, 0xf6be, 0x32c4, 0x1, 0x0);
        gbc.writeMem(0xa2dd, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0xec50, gbc.sp());
        EXPECT(0xa2df, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa2dd));
        EXPECT(0xd9, gbc.readMem(0xa2de));
        // CB D9 032D
        gbc.setState(0x4fe4, 0x3f61, 0xf9f0, 0xd1b6, 0xd61f, 0x4b50, 0x0, 0x0);
        gbc.writeMem(0x4fe4, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x3f61, gbc.sp());
        EXPECT(0x4fe6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D9 032E
        gbc.setState(0x5d12, 0x7b1a, 0x28d0, 0x4d83, 0x2df, 0x4dd9, 0x0, 0x0);
        gbc.writeMem(0x5d12, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x7b1a, gbc.sp());
        EXPECT(0x5d14, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D9 0330
        gbc.setState(0xc4ee, 0xcade, 0xaab0, 0x7f3a, 0xfc4d, 0xe9b1, 0x0, 0x1);
        gbc.writeMem(0xc4ee, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0xcade, gbc.sp());
        EXPECT(0xc4f0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc4ee));
        EXPECT(0xd9, gbc.readMem(0xc4ef));
        // CB D9 0331
        gbc.setState(0x9710, 0xb81, 0xa090, 0xc433, 0x6683, 0xdb14, 0x1, 0x1);
        gbc.writeMem(0x9710, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0xb81, gbc.sp());
        EXPECT(0x9712, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9710));
        EXPECT(0xd9, gbc.readMem(0x9711));
        // CB D9 0332
        gbc.setState(0xdd31, 0x8cef, 0x2520, 0x5492, 0xaa0c, 0x7a5f, 0x1, 0x1);
        gbc.writeMem(0xdd31, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x8cef, gbc.sp());
        EXPECT(0xdd33, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdd31));
        EXPECT(0xd9, gbc.readMem(0xdd32));
        // CB D9 0333
        gbc.setState(0x2539, 0xd872, 0x7720, 0x8989, 0x240c, 0x8b61, 0x1, 0x0);
        gbc.writeMem(0x2539, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0xd872, gbc.sp());
        EXPECT(0x253b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D9 0334
        gbc.setState(0x7880, 0xec16, 0x8030, 0x4845, 0xfa75, 0x3966, 0x0, 0x1);
        gbc.writeMem(0x7880, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0xec16, gbc.sp());
        EXPECT(0x7882, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D9 0335
        gbc.setState(0x59bc, 0xdae3, 0x4ba0, 0x9b0f, 0x3fb2, 0x1c00, 0x0, 0x0);
        gbc.writeMem(0x59bc, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0xdae3, gbc.sp());
        EXPECT(0x59be, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D9 0336
        gbc.setState(0xa2ee, 0x9e18, 0x1380, 0x7ce3, 0xd633, 0xcb97, 0x1, 0x1);
        gbc.writeMem(0xa2ee, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0x9e18, gbc.sp());
        EXPECT(0xa2f0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa2ee));
        EXPECT(0xd9, gbc.readMem(0xa2ef));
        // CB D9 0337
        gbc.setState(0x1869, 0xde90, 0x60b0, 0xf042, 0x625b, 0xfeb8, 0x1, 0x1);
        gbc.writeMem(0x1869, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0xde90, gbc.sp());
        EXPECT(0x186b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D9 0338
        gbc.setState(0xd460, 0x5a42, 0x9830, 0xbbb1, 0xbfa3, 0x3277, 0x1, 0x1);
        gbc.writeMem(0xd460, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x5a42, gbc.sp());
        EXPECT(0xd462, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd460));
        EXPECT(0xd9, gbc.readMem(0xd461));
        // CB D9 0339
        gbc.setState(0x583e, 0x99bf, 0xaef0, 0xbf61, 0x6313, 0xbeab, 0x1, 0x1);
        gbc.writeMem(0x583e, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x99bf, gbc.sp());
        EXPECT(0x5840, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D9 033A
        gbc.setState(0x7910, 0xe699, 0x7e60, 0xfa8d, 0xec4, 0x4d64, 0x0, 0x1);
        gbc.writeMem(0x7910, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0xe699, gbc.sp());
        EXPECT(0x7912, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D9 033B
        gbc.setState(0x879b, 0x1796, 0xcd60, 0x67ec, 0xfc03, 0xef96, 0x0, 0x0);
        gbc.writeMem(0x879b, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x1796, gbc.sp());
        EXPECT(0x879d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x879b));
        EXPECT(0xd9, gbc.readMem(0x879c));
        // CB D9 033C
        gbc.setState(0xdf7b, 0x62ed, 0x1d0, 0x363, 0xbc89, 0x51f0, 0x1, 0x1);
        gbc.writeMem(0xdf7b, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x62ed, gbc.sp());
        EXPECT(0xdf7d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdf7b));
        EXPECT(0xd9, gbc.readMem(0xdf7c));
        // CB D9 033D
        gbc.setState(0x41a4, 0xc295, 0x4d10, 0xbfb, 0xcb61, 0xf651, 0x1, 0x1);
        gbc.writeMem(0x41a4, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0xc295, gbc.sp());
        EXPECT(0x41a6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D9 033E
        gbc.setState(0xb463, 0xa987, 0xf640, 0x2087, 0xaeae, 0x57eb, 0x1, 0x1);
        gbc.writeMem(0xb463, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0xa987, gbc.sp());
        EXPECT(0xb465, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb463));
        EXPECT(0xd9, gbc.readMem(0xb464));
        // CB D9 033F
        gbc.setState(0x5855, 0xa963, 0xfbb0, 0xe434, 0x6d59, 0xc2cb, 0x0, 0x1);
        gbc.writeMem(0x5855, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0xa963, gbc.sp());
        EXPECT(0x5857, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D9 0340
        gbc.setState(0x1847, 0x6270, 0x7c10, 0x88e3, 0xe7df, 0xee23, 0x1, 0x1);
        gbc.writeMem(0x1847, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x6270, gbc.sp());
        EXPECT(0x1849, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D9 0341
        gbc.setState(0x5964, 0xde04, 0xb10, 0xa373, 0xfcad, 0x3554, 0x0, 0x0);
        gbc.writeMem(0x5964, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0xde04, gbc.sp());
        EXPECT(0x5966, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D9 0342
        gbc.setState(0xeb48, 0x886a, 0xbb40, 0x931d, 0xd9be, 0x7a03, 0x0, 0x0);
        gbc.writeMem(0xeb48, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x886a, gbc.sp());
        EXPECT(0xeb4a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeb48));
        EXPECT(0xd9, gbc.readMem(0xeb49));
        // CB D9 0343
        gbc.setState(0xded3, 0x39b6, 0x12d0, 0xae7e, 0x2564, 0xf9e9, 0x1, 0x1);
        gbc.writeMem(0xded3, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x39b6, gbc.sp());
        EXPECT(0xded5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xded3));
        EXPECT(0xd9, gbc.readMem(0xded4));
        // CB D9 0344
        gbc.setState(0x654e, 0x6237, 0xf140, 0x433f, 0x3a5e, 0xe3d8, 0x0, 0x1);
        gbc.writeMem(0x654e, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x6237, gbc.sp());
        EXPECT(0x6550, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D9 0345
        gbc.setState(0x3b08, 0x2c24, 0xa640, 0x153f, 0xcf39, 0x3533, 0x1, 0x0);
        gbc.writeMem(0x3b08, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x2c24, gbc.sp());
        EXPECT(0x3b0a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D9 0346
        gbc.setState(0x2b22, 0x7b8, 0x93c0, 0xf9a0, 0x1f99, 0xaa02, 0x0, 0x0);
        gbc.writeMem(0x2b22, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x7b8, gbc.sp());
        EXPECT(0x2b24, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D9 0347
        gbc.setState(0x126d, 0x8506, 0x7cf0, 0xae3b, 0xb715, 0xe618, 0x1, 0x1);
        gbc.writeMem(0x126d, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x8506, gbc.sp());
        EXPECT(0x126f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D9 0348
        gbc.setState(0x733e, 0x9b3f, 0x2810, 0xf877, 0x904d, 0x8a32, 0x1, 0x1);
        gbc.writeMem(0x733e, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x9b3f, gbc.sp());
        EXPECT(0x7340, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D9 0349
        gbc.setState(0x7894, 0x584b, 0xb3d0, 0x1665, 0x3f79, 0xae55, 0x0, 0x1);
        gbc.writeMem(0x7894, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x584b, gbc.sp());
        EXPECT(0x7896, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D9 034A
        gbc.setState(0xd8ce, 0x4e90, 0xddd0, 0xd171, 0xd2ed, 0x9d2c, 0x1, 0x1);
        gbc.writeMem(0xd8ce, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x4e90, gbc.sp());
        EXPECT(0xd8d0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd8ce));
        EXPECT(0xd9, gbc.readMem(0xd8cf));
        // CB D9 034B
        gbc.setState(0x5635, 0x7f89, 0x1cf0, 0x783a, 0xc79b, 0x3de4, 0x1, 0x1);
        gbc.writeMem(0x5635, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x7f89, gbc.sp());
        EXPECT(0x5637, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D9 034C
        gbc.setState(0x48ed, 0x54ac, 0x6240, 0xbbfa, 0xeb0b, 0x717c, 0x1, 0x0);
        gbc.writeMem(0x48ed, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x54ac, gbc.sp());
        EXPECT(0x48ef, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D9 034D
        gbc.setState(0x3856, 0x5c6e, 0x2e50, 0x8d60, 0x116, 0x32b1, 0x0, 0x1);
        gbc.writeMem(0x3856, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x5c6e, gbc.sp());
        EXPECT(0x3858, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D9 034E
        gbc.setState(0x4a06, 0xc2d2, 0xc110, 0x8131, 0xd1ca, 0xb0ba, 0x1, 0x1);
        gbc.writeMem(0x4a06, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0xc2d2, gbc.sp());
        EXPECT(0x4a08, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D9 034F
        gbc.setState(0x6053, 0x8d7a, 0xc660, 0xcc6, 0x7e30, 0xcdda, 0x1, 0x0);
        gbc.writeMem(0x6053, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x8d7a, gbc.sp());
        EXPECT(0x6055, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D9 0350
        gbc.setState(0x5701, 0x4b71, 0x7d60, 0xc319, 0xe746, 0x99ad, 0x0, 0x0);
        gbc.writeMem(0x5701, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x4b71, gbc.sp());
        EXPECT(0x5703, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D9 0351
        gbc.setState(0x301a, 0x56d1, 0x7480, 0x7abc, 0xcac8, 0xc4af, 0x0, 0x1);
        gbc.writeMem(0x301a, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x56d1, gbc.sp());
        EXPECT(0x301c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D9 0352
        gbc.setState(0xce28, 0xbb21, 0xda90, 0x3e7e, 0x8aff, 0x7f55, 0x0, 0x0);
        gbc.writeMem(0xce28, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0xbb21, gbc.sp());
        EXPECT(0xce2a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xce28));
        EXPECT(0xd9, gbc.readMem(0xce29));
        // CB D9 0353
        gbc.setState(0x3325, 0x1136, 0x43f0, 0x5d1f, 0xff43, 0xaea6, 0x0, 0x0);
        gbc.writeMem(0x3325, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x1136, gbc.sp());
        EXPECT(0x3327, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D9 0354
        gbc.setState(0xd7f2, 0xbdea, 0xab80, 0x761d, 0x3806, 0xec53, 0x1, 0x1);
        gbc.writeMem(0xd7f2, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0xbdea, gbc.sp());
        EXPECT(0xd7f4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd7f2));
        EXPECT(0xd9, gbc.readMem(0xd7f3));
        // CB D9 0355
        gbc.setState(0xa35b, 0x1de3, 0xe7f0, 0xd500, 0x2f21, 0x1688, 0x0, 0x1);
        gbc.writeMem(0xa35b, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x1de3, gbc.sp());
        EXPECT(0xa35d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa35b));
        EXPECT(0xd9, gbc.readMem(0xa35c));
        // CB D9 0356
        gbc.setState(0x22c9, 0x8f78, 0x1e80, 0xb7f2, 0xfe0a, 0xaf83, 0x0, 0x0);
        gbc.writeMem(0x22c9, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x8f78, gbc.sp());
        EXPECT(0x22cb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D9 0357
        gbc.setState(0xc5c5, 0x207e, 0xcf70, 0xb64e, 0xec10, 0xc45a, 0x0, 0x1);
        gbc.writeMem(0xc5c5, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x207e, gbc.sp());
        EXPECT(0xc5c7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc5c5));
        EXPECT(0xd9, gbc.readMem(0xc5c6));
        // CB D9 0358
        gbc.setState(0x16c9, 0xbe99, 0x3380, 0x3a11, 0x3104, 0x7343, 0x0, 0x1);
        gbc.writeMem(0x16c9, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0xbe99, gbc.sp());
        EXPECT(0x16cb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D9 0359
        gbc.setState(0x16cd, 0x97ca, 0xc1e0, 0x7f3e, 0x715c, 0xeb6, 0x1, 0x0);
        gbc.writeMem(0x16cd, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x97ca, gbc.sp());
        EXPECT(0x16cf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D9 035A
        gbc.setState(0x22b3, 0x49ab, 0x4000, 0x66f8, 0x6e4d, 0xcbf3, 0x0, 0x1);
        gbc.writeMem(0x22b3, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x49ab, gbc.sp());
        EXPECT(0x22b5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D9 035B
        gbc.setState(0x715e, 0x7fe7, 0xd050, 0xda26, 0x55d5, 0xb36c, 0x0, 0x0);
        gbc.writeMem(0x715e, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x7fe7, gbc.sp());
        EXPECT(0x7160, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D9 035D
        gbc.setState(0x6467, 0x3623, 0x3760, 0xc4ca, 0xad8a, 0x1c0e, 0x0, 0x0);
        gbc.writeMem(0x6467, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x3623, gbc.sp());
        EXPECT(0x6469, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D9 035E
        gbc.setState(0x7d36, 0xa15c, 0x6de0, 0xac3e, 0xf473, 0x31c9, 0x0, 0x1);
        gbc.writeMem(0x7d36, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0xa15c, gbc.sp());
        EXPECT(0x7d38, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D9 035F
        gbc.setState(0x1615, 0x2112, 0xee90, 0xc8fa, 0x10fe, 0x5e8f, 0x0, 0x0);
        gbc.writeMem(0x1615, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x2112, gbc.sp());
        EXPECT(0x1617, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D9 0360
        gbc.setState(0x9791, 0x34bc, 0x9490, 0xb25e, 0x8b8, 0x37ec, 0x0, 0x1);
        gbc.writeMem(0x9791, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x34bc, gbc.sp());
        EXPECT(0x9793, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9791));
        EXPECT(0xd9, gbc.readMem(0x9792));
        // CB D9 0361
        gbc.setState(0xbd4, 0xa0bb, 0x1640, 0xb469, 0x5b11, 0xc3de, 0x1, 0x0);
        gbc.writeMem(0xbd4, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0xa0bb, gbc.sp());
        EXPECT(0xbd6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D9 0362
        gbc.setState(0x590a, 0xc776, 0x1320, 0xf8cf, 0x69b0, 0xcf71, 0x1, 0x1);
        gbc.writeMem(0x590a, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0xc776, gbc.sp());
        EXPECT(0x590c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D9 0363
        gbc.setState(0xdc71, 0xed59, 0x91f0, 0x24e9, 0x453a, 0x59d3, 0x1, 0x0);
        gbc.writeMem(0xdc71, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0xed59, gbc.sp());
        EXPECT(0xdc73, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdc71));
        EXPECT(0xd9, gbc.readMem(0xdc72));
        // CB D9 0364
        gbc.setState(0x229e, 0x577, 0x5690, 0x210a, 0x7b04, 0x9e7b, 0x0, 0x1);
        gbc.writeMem(0x229e, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x577, gbc.sp());
        EXPECT(0x22a0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D9 0365
        gbc.setState(0xa754, 0xa118, 0x7770, 0x2dd2, 0xb54e, 0x9111, 0x1, 0x1);
        gbc.writeMem(0xa754, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0xa118, gbc.sp());
        EXPECT(0xa756, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa754));
        EXPECT(0xd9, gbc.readMem(0xa755));
        // CB D9 0366
        gbc.setState(0xa57f, 0xb577, 0xb670, 0xb47, 0xac0b, 0xc4b3, 0x1, 0x1);
        gbc.writeMem(0xa57f, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0xb577, gbc.sp());
        EXPECT(0xa581, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa57f));
        EXPECT(0xd9, gbc.readMem(0xa580));
        // CB D9 0367
        gbc.setState(0x4ac4, 0x330e, 0xfcc0, 0xd401, 0xf28d, 0x83fe, 0x0, 0x1);
        gbc.writeMem(0x4ac4, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x330e, gbc.sp());
        EXPECT(0x4ac6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D9 0368
        gbc.setState(0xb039, 0x9658, 0x8980, 0x82b8, 0x84d9, 0x2396, 0x0, 0x0);
        gbc.writeMem(0xb039, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x9658, gbc.sp());
        EXPECT(0xb03b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb039));
        EXPECT(0xd9, gbc.readMem(0xb03a));
        // CB D9 0369
        gbc.setState(0xdbc1, 0x832e, 0xda0, 0x9049, 0x79dc, 0x9413, 0x1, 0x1);
        gbc.writeMem(0xdbc1, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x832e, gbc.sp());
        EXPECT(0xdbc3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdbc1));
        EXPECT(0xd9, gbc.readMem(0xdbc2));
        // CB D9 036A
        gbc.setState(0x1207, 0x405d, 0x4250, 0x66c8, 0xedfd, 0x2e1d, 0x0, 0x1);
        gbc.writeMem(0x1207, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x405d, gbc.sp());
        EXPECT(0x1209, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D9 036B
        gbc.setState(0x88b3, 0xc1b8, 0x30b0, 0x2b20, 0x82ff, 0x9659, 0x1, 0x0);
        gbc.writeMem(0x88b3, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0xc1b8, gbc.sp());
        EXPECT(0x88b5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x88b3));
        EXPECT(0xd9, gbc.readMem(0x88b4));
        // CB D9 036C
        gbc.setState(0xd671, 0x8e15, 0x8b10, 0xa2b4, 0x7309, 0x5fa2, 0x1, 0x1);
        gbc.writeMem(0xd671, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x8e15, gbc.sp());
        EXPECT(0xd673, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd671));
        EXPECT(0xd9, gbc.readMem(0xd672));
        // CB D9 036E
        gbc.setState(0x4d0e, 0x2198, 0xd2e0, 0x7353, 0x440, 0x40c0, 0x1, 0x0);
        gbc.writeMem(0x4d0e, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x2198, gbc.sp());
        EXPECT(0x4d10, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D9 036F
        gbc.setState(0x5f54, 0x6373, 0x3470, 0x9adc, 0x28cf, 0x8768, 0x0, 0x1);
        gbc.writeMem(0x5f54, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x6373, gbc.sp());
        EXPECT(0x5f56, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D9 0370
        gbc.setState(0xc25e, 0x5021, 0x2560, 0x1ba7, 0xa1f8, 0x327, 0x0, 0x0);
        gbc.writeMem(0xc25e, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x5021, gbc.sp());
        EXPECT(0xc260, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc25e));
        EXPECT(0xd9, gbc.readMem(0xc25f));
        // CB D9 0371
        gbc.setState(0xa93e, 0x4a62, 0x9960, 0xee19, 0x69a9, 0x4f89, 0x0, 0x1);
        gbc.writeMem(0xa93e, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x4a62, gbc.sp());
        EXPECT(0xa940, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa93e));
        EXPECT(0xd9, gbc.readMem(0xa93f));
        // CB D9 0372
        gbc.setState(0x980c, 0x3408, 0x60, 0x8a24, 0x6907, 0x6549, 0x1, 0x1);
        gbc.writeMem(0x980c, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x3408, gbc.sp());
        EXPECT(0x980e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x980c));
        EXPECT(0xd9, gbc.readMem(0x980d));
        // CB D9 0373
        gbc.setState(0x8bbb, 0x5eb0, 0xd50, 0x9270, 0x847a, 0x1bc2, 0x1, 0x0);
        gbc.writeMem(0x8bbb, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x5eb0, gbc.sp());
        EXPECT(0x8bbd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8bbb));
        EXPECT(0xd9, gbc.readMem(0x8bbc));
        // CB D9 0374
        gbc.setState(0xa5a3, 0xdaf, 0x51d0, 0x5c3a, 0xc71b, 0x7d7e, 0x1, 0x1);
        gbc.writeMem(0xa5a3, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0xdaf, gbc.sp());
        EXPECT(0xa5a5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa5a3));
        EXPECT(0xd9, gbc.readMem(0xa5a4));
        // CB D9 0375
        gbc.setState(0xa4b0, 0x176a, 0xf7b0, 0x44d7, 0xec0e, 0x7f, 0x1, 0x0);
        gbc.writeMem(0xa4b0, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x176a, gbc.sp());
        EXPECT(0xa4b2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa4b0));
        EXPECT(0xd9, gbc.readMem(0xa4b1));
        // CB D9 0376
        gbc.setState(0x7b6e, 0x6247, 0x19f0, 0x5914, 0xb5b1, 0x3cbf, 0x1, 0x0);
        gbc.writeMem(0x7b6e, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x6247, gbc.sp());
        EXPECT(0x7b70, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D9 0377
        gbc.setState(0x6100, 0xcf75, 0x1c70, 0xacaf, 0xa41d, 0xd84, 0x1, 0x1);
        gbc.writeMem(0x6100, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0xcf75, gbc.sp());
        EXPECT(0x6102, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D9 0378
        gbc.setState(0x6aa5, 0x466a, 0xbef0, 0x8b2, 0xa9da, 0xda4, 0x1, 0x0);
        gbc.writeMem(0x6aa5, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x466a, gbc.sp());
        EXPECT(0x6aa7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D9 0379
        gbc.setState(0x501, 0x9ba5, 0x6020, 0xc96c, 0x550d, 0xb0af, 0x1, 0x1);
        gbc.writeMem(0x501, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x9ba5, gbc.sp());
        EXPECT(0x503, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D9 037A
        gbc.setState(0x9691, 0x40af, 0x5b40, 0x9528, 0xe118, 0x2eab, 0x0, 0x0);
        gbc.writeMem(0x9691, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x40af, gbc.sp());
        EXPECT(0x9693, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9691));
        EXPECT(0xd9, gbc.readMem(0x9692));
        // CB D9 037B
        gbc.setState(0xe544, 0x64cd, 0xcc20, 0x45d3, 0xef9, 0xcf18, 0x1, 0x1);
        gbc.writeMem(0xe544, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x64cd, gbc.sp());
        EXPECT(0xe546, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe544));
        EXPECT(0xd9, gbc.readMem(0xe545));
        // CB D9 037C
        gbc.setState(0x5582, 0x88dc, 0x64f0, 0xc51f, 0x93ec, 0x1faa, 0x0, 0x0);
        gbc.writeMem(0x5582, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x88dc, gbc.sp());
        EXPECT(0x5584, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D9 037D
        gbc.setState(0x4f66, 0x832b, 0x5bd0, 0xb8be, 0xa20b, 0xe95f, 0x1, 0x1);
        gbc.writeMem(0x4f66, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x832b, gbc.sp());
        EXPECT(0x4f68, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D9 037E
        gbc.setState(0x5169, 0x70b3, 0xeb00, 0x29d5, 0xbd50, 0xc875, 0x1, 0x1);
        gbc.writeMem(0x5169, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x70b3, gbc.sp());
        EXPECT(0x516b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D9 037F
        gbc.setState(0x1e6f, 0xb469, 0x8840, 0xa8d, 0xc144, 0xeec8, 0x1, 0x0);
        gbc.writeMem(0x1e6f, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0xb469, gbc.sp());
        EXPECT(0x1e71, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D9 0380
        gbc.setState(0x97dc, 0x5823, 0x9090, 0xa163, 0x2d89, 0x8df, 0x1, 0x0);
        gbc.writeMem(0x97dc, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x5823, gbc.sp());
        EXPECT(0x97de, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x97dc));
        EXPECT(0xd9, gbc.readMem(0x97dd));
        // CB D9 0382
        gbc.setState(0x2683, 0xceaa, 0xd9c0, 0x70e7, 0x7317, 0xc0c1, 0x0, 0x0);
        gbc.writeMem(0x2683, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0xceaa, gbc.sp());
        EXPECT(0x2685, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D9 0383
        gbc.setState(0x206b, 0xbd80, 0x9520, 0xe174, 0x7a22, 0x6b, 0x1, 0x0);
        gbc.writeMem(0x206b, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0xbd80, gbc.sp());
        EXPECT(0x206d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D9 0384
        gbc.setState(0xcba0, 0x3285, 0x2a40, 0xa90c, 0xe65, 0x74ee, 0x1, 0x1);
        gbc.writeMem(0xcba0, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x3285, gbc.sp());
        EXPECT(0xcba2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcba0));
        EXPECT(0xd9, gbc.readMem(0xcba1));
        // CB D9 0385
        gbc.setState(0x54d, 0xda1e, 0x8970, 0x7304, 0x948f, 0x7455, 0x0, 0x0);
        gbc.writeMem(0x54d, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0xda1e, gbc.sp());
        EXPECT(0x54f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D9 0387
        gbc.setState(0xb73b, 0x7f69, 0xcf70, 0x4b83, 0x1a11, 0x17de, 0x0, 0x0);
        gbc.writeMem(0xb73b, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x7f69, gbc.sp());
        EXPECT(0xb73d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb73b));
        EXPECT(0xd9, gbc.readMem(0xb73c));
        // CB D9 0388
        gbc.setState(0x82d3, 0x5df9, 0x7510, 0xd3d4, 0x427a, 0xce17, 0x0, 0x0);
        gbc.writeMem(0x82d3, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x5df9, gbc.sp());
        EXPECT(0x82d5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x82d3));
        EXPECT(0xd9, gbc.readMem(0x82d4));
        // CB D9 0389
        gbc.setState(0x7f20, 0x3ad1, 0x1c80, 0xe319, 0x1cc7, 0x106b, 0x0, 0x0);
        gbc.writeMem(0x7f20, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x3ad1, gbc.sp());
        EXPECT(0x7f22, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D9 038B
        gbc.setState(0x7d85, 0xae3e, 0x8920, 0xc681, 0x2a6e, 0xd043, 0x0, 0x1);
        gbc.writeMem(0x7d85, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0xae3e, gbc.sp());
        EXPECT(0x7d87, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D9 038C
        gbc.setState(0x35c3, 0xa7d4, 0xb650, 0x3252, 0x4ef8, 0x4cc3, 0x0, 0x1);
        gbc.writeMem(0x35c3, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0xa7d4, gbc.sp());
        EXPECT(0x35c5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D9 038D
        gbc.setState(0x7eda, 0xa707, 0x4a90, 0x8f28, 0x7999, 0x747c, 0x0, 0x1);
        gbc.writeMem(0x7eda, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0xa707, gbc.sp());
        EXPECT(0x7edc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D9 038E
        gbc.setState(0xcac, 0xaf3e, 0x3b90, 0x9a24, 0x814a, 0x738, 0x1, 0x0);
        gbc.writeMem(0xcac, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0xaf3e, gbc.sp());
        EXPECT(0xcae, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D9 038F
        gbc.setState(0x351f, 0xf2d6, 0x6a40, 0x2e2b, 0x43ac, 0xad83, 0x0, 0x0);
        gbc.writeMem(0x351f, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0xf2d6, gbc.sp());
        EXPECT(0x3521, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D9 0390
        gbc.setState(0x48e5, 0xf094, 0x2c60, 0xc2d0, 0x82b9, 0xb422, 0x0, 0x1);
        gbc.writeMem(0x48e5, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0xf094, gbc.sp());
        EXPECT(0x48e7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D9 0391
        gbc.setState(0x47c6, 0x99bf, 0x9e70, 0xd449, 0xbbc2, 0x336, 0x0, 0x0);
        gbc.writeMem(0x47c6, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x99bf, gbc.sp());
        EXPECT(0x47c8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D9 0392
        gbc.setState(0x8818, 0x50a3, 0x8710, 0x58e8, 0xe685, 0x3e0f, 0x1, 0x0);
        gbc.writeMem(0x8818, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x50a3, gbc.sp());
        EXPECT(0x881a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8818));
        EXPECT(0xd9, gbc.readMem(0x8819));
        // CB D9 0393
        gbc.setState(0xc835, 0xe72a, 0x56e0, 0x8e03, 0xee67, 0x78b0, 0x1, 0x0);
        gbc.writeMem(0xc835, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0xe72a, gbc.sp());
        EXPECT(0xc837, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc835));
        EXPECT(0xd9, gbc.readMem(0xc836));
        // CB D9 0395
        gbc.setState(0x6e5, 0x6dd1, 0x7bf0, 0x5980, 0x9f38, 0x929a, 0x1, 0x0);
        gbc.writeMem(0x6e5, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x6dd1, gbc.sp());
        EXPECT(0x6e7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D9 0396
        gbc.setState(0x9b34, 0x9459, 0x9c80, 0xf85f, 0x2fb2, 0xb3f4, 0x1, 0x0);
        gbc.writeMem(0x9b34, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x9459, gbc.sp());
        EXPECT(0x9b36, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9b34));
        EXPECT(0xd9, gbc.readMem(0x9b35));
        // CB D9 0397
        gbc.setState(0xeeae, 0xe169, 0x5fe0, 0xe254, 0xc68b, 0xcbda, 0x0, 0x1);
        gbc.writeMem(0xeeae, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0xe169, gbc.sp());
        EXPECT(0xeeb0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeeae));
        EXPECT(0xd9, gbc.readMem(0xeeaf));
        // CB D9 0399
        gbc.setState(0xcae5, 0x6f5b, 0x58f0, 0x9d62, 0x429f, 0x2a3b, 0x0, 0x1);
        gbc.writeMem(0xcae5, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x6f5b, gbc.sp());
        EXPECT(0xcae7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcae5));
        EXPECT(0xd9, gbc.readMem(0xcae6));
        // CB D9 039A
        gbc.setState(0xbe49, 0xfe13, 0x4c0, 0xe6bf, 0xf8c1, 0x5c02, 0x1, 0x0);
        gbc.writeMem(0xbe49, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0xfe13, gbc.sp());
        EXPECT(0xbe4b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbe49));
        EXPECT(0xd9, gbc.readMem(0xbe4a));
        // CB D9 039B
        gbc.setState(0x46fb, 0xa8e6, 0x6470, 0x75e, 0x49c1, 0xa8fa, 0x0, 0x0);
        gbc.writeMem(0x46fb, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0xa8e6, gbc.sp());
        EXPECT(0x46fd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D9 039C
        gbc.setState(0x342c, 0xae54, 0x6c20, 0x23e2, 0x77a9, 0xe886, 0x0, 0x1);
        gbc.writeMem(0x342c, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0xae54, gbc.sp());
        EXPECT(0x342e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D9 039D
        gbc.setState(0x6038, 0x18a, 0x27b0, 0xb769, 0x99f6, 0xc77, 0x0, 0x0);
        gbc.writeMem(0x6038, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x18a, gbc.sp());
        EXPECT(0x603a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D9 039E
        gbc.setState(0x75a9, 0xaa9f, 0xe550, 0xac6c, 0x3134, 0xb50c, 0x1, 0x1);
        gbc.writeMem(0x75a9, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0xaa9f, gbc.sp());
        EXPECT(0x75ab, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D9 039F
        gbc.setState(0xeb72, 0x804b, 0xff00, 0xffee, 0x1899, 0x11f6, 0x0, 0x0);
        gbc.writeMem(0xeb72, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x804b, gbc.sp());
        EXPECT(0xeb74, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeb72));
        EXPECT(0xd9, gbc.readMem(0xeb73));
        // CB D9 03A0
        gbc.setState(0x9703, 0xa92e, 0x4730, 0x3383, 0xd9fc, 0xf6df, 0x1, 0x0);
        gbc.writeMem(0x9703, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0xa92e, gbc.sp());
        EXPECT(0x9705, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9703));
        EXPECT(0xd9, gbc.readMem(0x9704));
        // CB D9 03A1
        gbc.setState(0xa3ab, 0xc067, 0x5840, 0xfdef, 0xe988, 0x112f, 0x0, 0x1);
        gbc.writeMem(0xa3ab, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0xc067, gbc.sp());
        EXPECT(0xa3ad, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa3ab));
        EXPECT(0xd9, gbc.readMem(0xa3ac));
        // CB D9 03A2
        gbc.setState(0xad51, 0x7c9c, 0xcc80, 0xdebb, 0xce59, 0x17a8, 0x0, 0x1);
        gbc.writeMem(0xad51, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x7c9c, gbc.sp());
        EXPECT(0xad53, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xad51));
        EXPECT(0xd9, gbc.readMem(0xad52));
        // CB D9 03A3
        gbc.setState(0xdd70, 0x6a63, 0x2af0, 0x529d, 0x92bd, 0xeea8, 0x0, 0x0);
        gbc.writeMem(0xdd70, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x6a63, gbc.sp());
        EXPECT(0xdd72, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdd70));
        EXPECT(0xd9, gbc.readMem(0xdd71));
        // CB D9 03A4
        gbc.setState(0xce4b, 0x8f4e, 0x5070, 0xb998, 0x32a5, 0xfb3, 0x0, 0x0);
        gbc.writeMem(0xce4b, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x8f4e, gbc.sp());
        EXPECT(0xce4d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xce4b));
        EXPECT(0xd9, gbc.readMem(0xce4c));
        // CB D9 03A5
        gbc.setState(0xe3b, 0x3f00, 0xb890, 0x5ffa, 0x8339, 0x47fa, 0x0, 0x0);
        gbc.writeMem(0xe3b, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0x3f00, gbc.sp());
        EXPECT(0xe3d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D9 03A6
        gbc.setState(0x678f, 0x4468, 0x8060, 0xa70e, 0x4400, 0x947a, 0x0, 0x0);
        gbc.writeMem(0x678f, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x4468, gbc.sp());
        EXPECT(0x6791, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D9 03A8
        gbc.setState(0xa431, 0xdd7b, 0xd780, 0xa47, 0xcd79, 0xd6, 0x0, 0x0);
        gbc.writeMem(0xa431, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0xdd7b, gbc.sp());
        EXPECT(0xa433, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa431));
        EXPECT(0xd9, gbc.readMem(0xa432));
        // CB D9 03A9
        gbc.setState(0x7fcd, 0xca45, 0xf800, 0x40ad, 0x2d37, 0x3e17, 0x0, 0x0);
        gbc.writeMem(0x7fcd, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0xca45, gbc.sp());
        EXPECT(0x7fcf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D9 03AA
        gbc.setState(0x563, 0xcb17, 0x8890, 0xe729, 0xd8f1, 0x595, 0x1, 0x0);
        gbc.writeMem(0x563, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0xcb17, gbc.sp());
        EXPECT(0x565, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D9 03AB
        gbc.setState(0x920d, 0x7418, 0xc240, 0x9d69, 0xaf25, 0xb222, 0x0, 0x0);
        gbc.writeMem(0x920d, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x7418, gbc.sp());
        EXPECT(0x920f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x920d));
        EXPECT(0xd9, gbc.readMem(0x920e));
        // CB D9 03AC
        gbc.setState(0xea7c, 0xf06f, 0xe90, 0x6462, 0x25bb, 0xc917, 0x0, 0x0);
        gbc.writeMem(0xea7c, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0xf06f, gbc.sp());
        EXPECT(0xea7e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xea7c));
        EXPECT(0xd9, gbc.readMem(0xea7d));
        // CB D9 03AE
        gbc.setState(0xb020, 0x8ada, 0xc840, 0x4dd1, 0x4399, 0xc77c, 0x1, 0x0);
        gbc.writeMem(0xb020, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x8ada, gbc.sp());
        EXPECT(0xb022, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb020));
        EXPECT(0xd9, gbc.readMem(0xb021));
        // CB D9 03B0
        gbc.setState(0xdb61, 0xc7f2, 0xf950, 0xa694, 0x8c21, 0x844, 0x0, 0x1);
        gbc.writeMem(0xdb61, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0xc7f2, gbc.sp());
        EXPECT(0xdb63, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdb61));
        EXPECT(0xd9, gbc.readMem(0xdb62));
        // CB D9 03B1
        gbc.setState(0x39c6, 0xbae6, 0x5b90, 0x6d54, 0xa26d, 0xec18, 0x0, 0x1);
        gbc.writeMem(0x39c6, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0xbae6, gbc.sp());
        EXPECT(0x39c8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D9 03B2
        gbc.setState(0xd292, 0x418f, 0x9750, 0x9c90, 0xc1d4, 0xf657, 0x0, 0x0);
        gbc.writeMem(0xd292, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x418f, gbc.sp());
        EXPECT(0xd294, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd292));
        EXPECT(0xd9, gbc.readMem(0xd293));
        // CB D9 03B3
        gbc.setState(0x8652, 0x410f, 0xacc0, 0xc1c0, 0x2aeb, 0x8b62, 0x0, 0x0);
        gbc.writeMem(0x8652, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x410f, gbc.sp());
        EXPECT(0x8654, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8652));
        EXPECT(0xd9, gbc.readMem(0x8653));
        // CB D9 03B4
        gbc.setState(0xe580, 0x8238, 0x2c30, 0x1a9c, 0x7722, 0xb45d, 0x1, 0x1);
        gbc.writeMem(0xe580, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x8238, gbc.sp());
        EXPECT(0xe582, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe580));
        EXPECT(0xd9, gbc.readMem(0xe581));
        // CB D9 03B5
        gbc.setState(0x34e6, 0xe249, 0x56b0, 0x5282, 0x1c4d, 0x888b, 0x1, 0x1);
        gbc.writeMem(0x34e6, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0xe249, gbc.sp());
        EXPECT(0x34e8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D9 03B6
        gbc.setState(0x555f, 0x6cd3, 0x99e0, 0x1f0c, 0x9cc3, 0xd37c, 0x0, 0x0);
        gbc.writeMem(0x555f, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x6cd3, gbc.sp());
        EXPECT(0x5561, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D9 03B7
        gbc.setState(0x6f62, 0x73b4, 0x5550, 0x8b9b, 0x21ec, 0x4a0d, 0x0, 0x0);
        gbc.writeMem(0x6f62, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x73b4, gbc.sp());
        EXPECT(0x6f64, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D9 03B8
        gbc.setState(0x1899, 0x40f1, 0x6040, 0x8771, 0xd7e0, 0x95aa, 0x1, 0x0);
        gbc.writeMem(0x1899, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x40f1, gbc.sp());
        EXPECT(0x189b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D9 03B9
        gbc.setState(0x9895, 0xc0da, 0x71f0, 0x59c3, 0x2cbd, 0x7eb0, 0x1, 0x0);
        gbc.writeMem(0x9895, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0xc0da, gbc.sp());
        EXPECT(0x9897, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9895));
        EXPECT(0xd9, gbc.readMem(0x9896));
        // CB D9 03BA
        gbc.setState(0xc0e9, 0x9d5a, 0x4110, 0xa9c0, 0x9b3b, 0xf1d4, 0x0, 0x1);
        gbc.writeMem(0xc0e9, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x9d5a, gbc.sp());
        EXPECT(0xc0eb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc0e9));
        EXPECT(0xd9, gbc.readMem(0xc0ea));
        // CB D9 03BB
        gbc.setState(0xadba, 0x43ed, 0x7cd0, 0xed71, 0xf4a3, 0xaa2c, 0x1, 0x0);
        gbc.writeMem(0xadba, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x43ed, gbc.sp());
        EXPECT(0xadbc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xadba));
        EXPECT(0xd9, gbc.readMem(0xadbb));
        // CB D9 03BC
        gbc.setState(0x51, 0x973e, 0xf10, 0x6394, 0x9354, 0xeb82, 0x0, 0x0);
        gbc.writeMem(0x51, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x973e, gbc.sp());
        EXPECT(0x53, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D9 03BD
        gbc.setState(0xd9e6, 0x164b, 0x1be0, 0xe2e3, 0x2e2b, 0x57f8, 0x0, 0x1);
        gbc.writeMem(0xd9e6, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x164b, gbc.sp());
        EXPECT(0xd9e8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd9e6));
        EXPECT(0xd9, gbc.readMem(0xd9e7));
        // CB D9 03BE
        gbc.setState(0x52cc, 0xab10, 0x4d10, 0xaab7, 0xa151, 0x779f, 0x0, 0x1);
        gbc.writeMem(0x52cc, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0xab10, gbc.sp());
        EXPECT(0x52ce, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D9 03BF
        gbc.setState(0xa515, 0xc17f, 0x4cd0, 0x674, 0x496f, 0xc025, 0x1, 0x0);
        gbc.writeMem(0xa515, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0xc17f, gbc.sp());
        EXPECT(0xa517, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa515));
        EXPECT(0xd9, gbc.readMem(0xa516));
        // CB D9 03C0
        gbc.setState(0x1d3e, 0xb7d5, 0xbc60, 0xa06e, 0x6139, 0x1e11, 0x0, 0x1);
        gbc.writeMem(0x1d3e, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0xb7d5, gbc.sp());
        EXPECT(0x1d40, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D9 03C1
        gbc.setState(0x368b, 0x531e, 0xb820, 0x2ad9, 0x7115, 0xad3d, 0x1, 0x1);
        gbc.writeMem(0x368b, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x531e, gbc.sp());
        EXPECT(0x368d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D9 03C3
        gbc.setState(0xeb35, 0x9f1b, 0x4970, 0xef08, 0xb1f6, 0x60ce, 0x1, 0x1);
        gbc.writeMem(0xeb35, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x9f1b, gbc.sp());
        EXPECT(0xeb37, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeb35));
        EXPECT(0xd9, gbc.readMem(0xeb36));
        // CB D9 03C4
        gbc.setState(0x37d6, 0xab0d, 0xd700, 0xaafc, 0x96de, 0x3cd8, 0x0, 0x1);
        gbc.writeMem(0x37d6, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0xab0d, gbc.sp());
        EXPECT(0x37d8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D9 03C5
        gbc.setState(0x6e10, 0x3bd7, 0x53c0, 0x2ec, 0x809d, 0x66e2, 0x1, 0x0);
        gbc.writeMem(0x6e10, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x3bd7, gbc.sp());
        EXPECT(0x6e12, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D9 03C6
        gbc.setState(0x1a1a, 0x973d, 0xc8c0, 0xd29c, 0x95b, 0x96aa, 0x1, 0x0);
        gbc.writeMem(0x1a1a, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x973d, gbc.sp());
        EXPECT(0x1a1c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D9 03C7
        gbc.setState(0x7fc0, 0xb4cc, 0x3da0, 0x62b8, 0x111d, 0x8255, 0x0, 0x1);
        gbc.writeMem(0x7fc0, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0xb4cc, gbc.sp());
        EXPECT(0x7fc2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D9 03C8
        gbc.setState(0x1849, 0xa81, 0x22c0, 0x3b44, 0xf732, 0x59ee, 0x1, 0x0);
        gbc.writeMem(0x1849, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0xa81, gbc.sp());
        EXPECT(0x184b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D9 03CB
        gbc.setState(0xa9a, 0xab82, 0x9210, 0x4ac7, 0x3a09, 0x4154, 0x0, 0x0);
        gbc.writeMem(0xa9a, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0xab82, gbc.sp());
        EXPECT(0xa9c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D9 03CC
        gbc.setState(0x9988, 0x6fd1, 0x8420, 0x4000, 0x8ad5, 0x150, 0x0, 0x0);
        gbc.writeMem(0x9988, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x6fd1, gbc.sp());
        EXPECT(0x998a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9988));
        EXPECT(0xd9, gbc.readMem(0x9989));
        // CB D9 03CD
        gbc.setState(0x3f7a, 0xc056, 0x3fb0, 0xf27b, 0x2311, 0x9597, 0x0, 0x1);
        gbc.writeMem(0x3f7a, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0xc056, gbc.sp());
        EXPECT(0x3f7c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D9 03CE
        gbc.setState(0xb69e, 0xd10f, 0x4d90, 0x8d19, 0xdef4, 0xa46f, 0x0, 0x0);
        gbc.writeMem(0xb69e, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0xd10f, gbc.sp());
        EXPECT(0xb6a0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb69e));
        EXPECT(0xd9, gbc.readMem(0xb69f));
        // CB D9 03CF
        gbc.setState(0x41e2, 0x782d, 0x5100, 0x5633, 0x18fe, 0xa69e, 0x0, 0x0);
        gbc.writeMem(0x41e2, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x782d, gbc.sp());
        EXPECT(0x41e4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D9 03D0
        gbc.setState(0xe2fc, 0xd06, 0x7d20, 0x9dc6, 0x63fc, 0xd3c9, 0x1, 0x0);
        gbc.writeMem(0xe2fc, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0xd06, gbc.sp());
        EXPECT(0xe2fe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe2fc));
        EXPECT(0xd9, gbc.readMem(0xe2fd));
        // CB D9 03D1
        gbc.setState(0x528c, 0x67f, 0x9810, 0x5375, 0xa2cb, 0xf159, 0x0, 0x0);
        gbc.writeMem(0x528c, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x67f, gbc.sp());
        EXPECT(0x528e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D9 03D2
        gbc.setState(0xcdda, 0x1bef, 0x6270, 0x2014, 0xbb7f, 0xe71d, 0x0, 0x0);
        gbc.writeMem(0xcdda, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x1bef, gbc.sp());
        EXPECT(0xcddc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcdda));
        EXPECT(0xd9, gbc.readMem(0xcddb));
        // CB D9 03D3
        gbc.setState(0xb766, 0x1c97, 0x9f20, 0xff41, 0xd20d, 0x100e, 0x0, 0x0);
        gbc.writeMem(0xb766, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x1c97, gbc.sp());
        EXPECT(0xb768, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb766));
        EXPECT(0xd9, gbc.readMem(0xb767));
        // CB D9 03D4
        gbc.setState(0x827a, 0xf15, 0xbc00, 0xfb94, 0xd479, 0x66cc, 0x0, 0x1);
        gbc.writeMem(0x827a, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0xf15, gbc.sp());
        EXPECT(0x827c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x827a));
        EXPECT(0xd9, gbc.readMem(0x827b));
        // CB D9 03D5
        gbc.setState(0x7990, 0xb071, 0x2590, 0xf895, 0xdfc7, 0xfda1, 0x1, 0x0);
        gbc.writeMem(0x7990, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0xb071, gbc.sp());
        EXPECT(0x7992, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D9 03D6
        gbc.setState(0xd67b, 0x31af, 0x9f40, 0x2efb, 0xf2b8, 0x4141, 0x1, 0x1);
        gbc.writeMem(0xd67b, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x31af, gbc.sp());
        EXPECT(0xd67d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd67b));
        EXPECT(0xd9, gbc.readMem(0xd67c));
        // CB D9 03D7
        gbc.setState(0x258e, 0xabd, 0x23e0, 0xd120, 0xdaf2, 0xa36b, 0x0, 0x1);
        gbc.writeMem(0x258e, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0xabd, gbc.sp());
        EXPECT(0x2590, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D9 03D8
        gbc.setState(0xa13b, 0xa556, 0xf050, 0xfeb5, 0x4638, 0x8fd7, 0x1, 0x0);
        gbc.writeMem(0xa13b, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0xa556, gbc.sp());
        EXPECT(0xa13d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa13b));
        EXPECT(0xd9, gbc.readMem(0xa13c));
        // CB D9 03D9
        gbc.setState(0x57c2, 0xa67f, 0x86b0, 0x7f76, 0x496f, 0x3d78, 0x1, 0x1);
        gbc.writeMem(0x57c2, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0xa67f, gbc.sp());
        EXPECT(0x57c4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D9 03DA
        gbc.setState(0xc9f, 0x96b7, 0x4370, 0xa7d2, 0x5c7e, 0xab4e, 0x1, 0x0);
        gbc.writeMem(0xc9f, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x96b7, gbc.sp());
        EXPECT(0xca1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D9 03DB
        gbc.setState(0x3cc1, 0x477, 0x95a0, 0x8a4e, 0xb306, 0xde1a, 0x0, 0x1);
        gbc.writeMem(0x3cc1, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x477, gbc.sp());
        EXPECT(0x3cc3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D9 03DC
        gbc.setState(0x777c, 0x91e1, 0x65b0, 0x6a33, 0xc2df, 0x652a, 0x1, 0x1);
        gbc.writeMem(0x777c, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x91e1, gbc.sp());
        EXPECT(0x777e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D9 03DD
        gbc.setState(0x260, 0x94cf, 0x6ca0, 0x8ed, 0x469, 0xdfd5, 0x0, 0x1);
        gbc.writeMem(0x260, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x94cf, gbc.sp());
        EXPECT(0x262, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D9 03DE
        gbc.setState(0x8e15, 0x49dd, 0xa670, 0x852c, 0x87d, 0x141a, 0x1, 0x0);
        gbc.writeMem(0x8e15, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x49dd, gbc.sp());
        EXPECT(0x8e17, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8e15));
        EXPECT(0xd9, gbc.readMem(0x8e16));
        // CB D9 03DF
        gbc.setState(0xc442, 0xd681, 0x72c0, 0x4ee4, 0x8365, 0x9f9a, 0x1, 0x1);
        gbc.writeMem(0xc442, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0xd681, gbc.sp());
        EXPECT(0xc444, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc442));
        EXPECT(0xd9, gbc.readMem(0xc443));
        // CB D9 03E0
        gbc.setState(0x746f, 0x7c09, 0x55e0, 0xe84, 0xd582, 0xa862, 0x1, 0x1);
        gbc.writeMem(0x746f, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x7c09, gbc.sp());
        EXPECT(0x7471, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D9 03E1
        gbc.setState(0x13f2, 0xb445, 0xdc70, 0xcc2e, 0x81fe, 0x44f2, 0x1, 0x1);
        gbc.writeMem(0x13f2, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0xb445, gbc.sp());
        EXPECT(0x13f4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D9 03E2
        gbc.setState(0x2621, 0x9312, 0x3110, 0xa42e, 0x66e6, 0x121, 0x1, 0x0);
        gbc.writeMem(0x2621, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x9312, gbc.sp());
        EXPECT(0x2623, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D9 03E3
        gbc.setState(0x4c26, 0x4adb, 0xe9b0, 0xa3bf, 0xfbaa, 0x69e2, 0x1, 0x0);
        gbc.writeMem(0x4c26, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x4adb, gbc.sp());
        EXPECT(0x4c28, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D9 03E4
        gbc.setState(0x275, 0x74c8, 0x2b70, 0xbfb1, 0xe130, 0x7e10, 0x0, 0x0);
        gbc.writeMem(0x275, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x74c8, gbc.sp());
        EXPECT(0x277, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D9 03E5
        gbc.setState(0x8197, 0xefea, 0x5830, 0xa3ff, 0x4d58, 0x53e3, 0x1, 0x0);
        gbc.writeMem(0x8197, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0xefea, gbc.sp());
        EXPECT(0x8199, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8197));
        EXPECT(0xd9, gbc.readMem(0x8198));
        // CB D9 03E6
        gbc.setState(0x67c6, 0x90c1, 0x9b10, 0x1cae, 0x86ff, 0xfbec, 0x1, 0x1);
        gbc.writeMem(0x67c6, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x90c1, gbc.sp());
        EXPECT(0x67c8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D9 03E7
        gbc.setState(0xebb1, 0x68bd, 0xc080, 0xefb, 0xcfa2, 0x9a94, 0x1, 0x1);
        gbc.writeMem(0xebb1, { 0xcb, 0xd9 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x68bd, gbc.sp());
        EXPECT(0xebb3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xebb1));
        EXPECT(0xd9, gbc.readMem(0xebb2));
    }
