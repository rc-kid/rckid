    TEST(gbcemu, opcode_05) {
        GBCEmu gbc{"", nullptr};
        uint8_t cartridge[0x8000];
        cartridge[0x149] = 0x02; // 8kb external RAM
        gbc.loadCartridge(new FlashGamePak(cartridge));
        // 05 0000
        gbc.setState(0x3c94, 0xdd90, 0x95b0, 0xb363, 0x3c86, 0x8174, 0x0, 0x1);
        gbc.writeMem(0x3c94, { 0x5 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0xdd90, gbc.sp());
        EXPECT(0x3c95, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 05 0001
        gbc.setState(0x9c83, 0x5fb4, 0x2120, 0xee8d, 0x6e24, 0x1c96, 0x1, 0x1);
        gbc.writeMem(0x9c83, { 0x5 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x5fb4, gbc.sp());
        EXPECT(0x9c84, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5, gbc.readMem(0x9c83));
        // 05 0003
        gbc.setState(0x8cad, 0xec41, 0xbde0, 0xd809, 0x2bce, 0xb836, 0x0, 0x1);
        gbc.writeMem(0x8cad, { 0x5 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0xec41, gbc.sp());
        EXPECT(0x8cae, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5, gbc.readMem(0x8cad));
        // 05 0004
        gbc.setState(0x740a, 0x458b, 0xa960, 0xad94, 0x92e7, 0xc585, 0x0, 0x0);
        gbc.writeMem(0x740a, { 0x5 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x458b, gbc.sp());
        EXPECT(0x740b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 05 0005
        gbc.setState(0x69b, 0xe538, 0xd120, 0xd743, 0xed96, 0x6006, 0x0, 0x0);
        gbc.writeMem(0x69b, { 0x5 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0xe538, gbc.sp());
        EXPECT(0x69c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 05 0006
        gbc.setState(0xe253, 0x2e90, 0x59a0, 0x1f62, 0x5d98, 0x7a0e, 0x0, 0x0);
        gbc.writeMem(0xe253, { 0x5 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x2e90, gbc.sp());
        EXPECT(0xe254, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5, gbc.readMem(0xe253));
        // 05 0007
        gbc.setState(0x5386, 0x7574, 0xa9b0, 0xcd8f, 0xe5e6, 0x7875, 0x0, 0x1);
        gbc.writeMem(0x5386, { 0x5 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x7574, gbc.sp());
        EXPECT(0x5387, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 05 0008
        gbc.setState(0xe025, 0x629c, 0xe030, 0xb1d1, 0x77c7, 0x7480, 0x1, 0x0);
        gbc.writeMem(0xe025, { 0x5 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x629c, gbc.sp());
        EXPECT(0xe026, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5, gbc.readMem(0xe025));
        // 05 0009
        gbc.setState(0xc71e, 0x2b6f, 0xf7b0, 0xf6a0, 0x91c9, 0x8a6a, 0x0, 0x1);
        gbc.writeMem(0xc71e, { 0x5 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x2b6f, gbc.sp());
        EXPECT(0xc71f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5, gbc.readMem(0xc71e));
        // 05 000C
        gbc.setState(0xf04, 0x1298, 0x5b20, 0x3726, 0x87a4, 0xf942, 0x1, 0x0);
        gbc.writeMem(0xf04, { 0x5 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x1298, gbc.sp());
        EXPECT(0xf05, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 05 000D
        gbc.setState(0x4781, 0x1ae2, 0xb1d0, 0x45d5, 0x6aed, 0x7155, 0x1, 0x0);
        gbc.writeMem(0x4781, { 0x5 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x1ae2, gbc.sp());
        EXPECT(0x4782, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 05 000E
        gbc.setState(0x9a23, 0xe028, 0x10d0, 0xd913, 0x1d58, 0x57a6, 0x0, 0x1);
        gbc.writeMem(0x9a23, { 0x5 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0xe028, gbc.sp());
        EXPECT(0x9a24, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5, gbc.readMem(0x9a23));
        // 05 000F
        gbc.setState(0x7d51, 0x2475, 0x3520, 0xe1cd, 0x53fc, 0x9e08, 0x1, 0x0);
        gbc.writeMem(0x7d51, { 0x5 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x2475, gbc.sp());
        EXPECT(0x7d52, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 05 0010
        gbc.setState(0x87d3, 0xa1ec, 0x4b50, 0x194f, 0xc1d3, 0xf1a6, 0x1, 0x0);
        gbc.writeMem(0x87d3, { 0x5 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0xa1ec, gbc.sp());
        EXPECT(0x87d4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5, gbc.readMem(0x87d3));
        // 05 0011
        gbc.setState(0xd569, 0x2bec, 0x6930, 0x226, 0xa340, 0x3443, 0x1, 0x0);
        gbc.writeMem(0xd569, { 0x5 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x2bec, gbc.sp());
        EXPECT(0xd56a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5, gbc.readMem(0xd569));
        // 05 0012
        gbc.setState(0xec85, 0x6d0f, 0x7d50, 0x2a2, 0xffc5, 0xce35, 0x1, 0x0);
        gbc.writeMem(0xec85, { 0x5 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x6d0f, gbc.sp());
        EXPECT(0xec86, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5, gbc.readMem(0xec85));
        // 05 0013
        gbc.setState(0x34a9, 0x6ec4, 0x4d10, 0x212d, 0xd889, 0x21f1, 0x0, 0x1);
        gbc.writeMem(0x34a9, { 0x5 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x6ec4, gbc.sp());
        EXPECT(0x34aa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 05 0014
        gbc.setState(0x99d3, 0x10de, 0x5f90, 0xde5c, 0xd47, 0x8d4d, 0x1, 0x1);
        gbc.writeMem(0x99d3, { 0x5 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x10de, gbc.sp());
        EXPECT(0x99d4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5, gbc.readMem(0x99d3));
        // 05 0015
        gbc.setState(0x25b7, 0x1d11, 0xef80, 0x1620, 0x538a, 0x43a0, 0x0, 0x1);
        gbc.writeMem(0x25b7, { 0x5 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x1d11, gbc.sp());
        EXPECT(0x25b8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 05 0017
        gbc.setState(0x2bbe, 0xe4dd, 0x25f0, 0xd8a5, 0x3718, 0x72b7, 0x1, 0x1);
        gbc.writeMem(0x2bbe, { 0x5 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0xe4dd, gbc.sp());
        EXPECT(0x2bbf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 05 0018
        gbc.setState(0x60e9, 0x3023, 0x8270, 0x6711, 0x4ae2, 0x5033, 0x0, 0x0);
        gbc.writeMem(0x60e9, { 0x5 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x3023, gbc.sp());
        EXPECT(0x60ea, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 05 0019
        gbc.setState(0x73d7, 0xe148, 0x4120, 0xd163, 0x62dc, 0x37ae, 0x1, 0x1);
        gbc.writeMem(0x73d7, { 0x5 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0xe148, gbc.sp());
        EXPECT(0x73d8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 05 001A
        gbc.setState(0xe6ef, 0xc2a8, 0x6540, 0xd56d, 0x4ea3, 0x689, 0x1, 0x0);
        gbc.writeMem(0xe6ef, { 0x5 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0xc2a8, gbc.sp());
        EXPECT(0xe6f0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5, gbc.readMem(0xe6ef));
        // 05 001B
        gbc.setState(0xd5bb, 0x4738, 0xc070, 0x33b2, 0x4b16, 0x40d, 0x1, 0x0);
        gbc.writeMem(0xd5bb, { 0x5 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x4738, gbc.sp());
        EXPECT(0xd5bc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5, gbc.readMem(0xd5bb));
        // 05 001C
        gbc.setState(0x42, 0x4694, 0xe880, 0x4e21, 0x5b4c, 0xc94a, 0x1, 0x1);
        gbc.writeMem(0x42, { 0x5 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x4694, gbc.sp());
        EXPECT(0x43, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 05 001D
        gbc.setState(0xa29a, 0x6f3e, 0x5d90, 0x9d73, 0x2a53, 0x1e6b, 0x0, 0x1);
        gbc.writeMem(0xa29a, { 0x5 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x6f3e, gbc.sp());
        EXPECT(0xa29b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5, gbc.readMem(0xa29a));
        // 05 001E
        gbc.setState(0x1112, 0xc502, 0x90e0, 0xf44e, 0xe551, 0xb06c, 0x1, 0x0);
        gbc.writeMem(0x1112, { 0x5 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0xc502, gbc.sp());
        EXPECT(0x1113, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 05 001F
        gbc.setState(0x651e, 0x4f1c, 0x5fd0, 0x8cb0, 0xbbc2, 0x3289, 0x0, 0x0);
        gbc.writeMem(0x651e, { 0x5 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x4f1c, gbc.sp());
        EXPECT(0x651f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 05 0020
        gbc.setState(0xe8e5, 0xaf80, 0xb270, 0xbe3d, 0xf687, 0x8caf, 0x0, 0x0);
        gbc.writeMem(0xe8e5, { 0x5 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0xaf80, gbc.sp());
        EXPECT(0xe8e6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5, gbc.readMem(0xe8e5));
        // 05 0021
        gbc.setState(0x5038, 0xbc37, 0xa0d0, 0x7dae, 0xf2c5, 0x24e4, 0x1, 0x0);
        gbc.writeMem(0x5038, { 0x5 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0xbc37, gbc.sp());
        EXPECT(0x5039, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 05 0022
        gbc.setState(0xd202, 0x8b6e, 0xcd70, 0x8b6, 0x423f, 0xf7c7, 0x1, 0x0);
        gbc.writeMem(0xd202, { 0x5 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x8b6e, gbc.sp());
        EXPECT(0xd203, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5, gbc.readMem(0xd202));
        // 05 0024
        gbc.setState(0x1127, 0xec29, 0x4990, 0xe9a0, 0x3910, 0x9ffa, 0x0, 0x0);
        gbc.writeMem(0x1127, { 0x5 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0xec29, gbc.sp());
        EXPECT(0x1128, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 05 0025
        gbc.setState(0x2c46, 0xa3f6, 0x2c10, 0x8a5e, 0x62c4, 0x4145, 0x1, 0x1);
        gbc.writeMem(0x2c46, { 0x5 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0xa3f6, gbc.sp());
        EXPECT(0x2c47, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 05 0027
        gbc.setState(0xa652, 0x2886, 0x7b0, 0x9e73, 0xcb06, 0x77bd, 0x1, 0x0);
        gbc.writeMem(0xa652, { 0x5 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x2886, gbc.sp());
        EXPECT(0xa653, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5, gbc.readMem(0xa652));
        // 05 0028
        gbc.setState(0xa53c, 0xd3e7, 0x41c0, 0x8365, 0x49ec, 0x4ba5, 0x0, 0x1);
        gbc.writeMem(0xa53c, { 0x5 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0xd3e7, gbc.sp());
        EXPECT(0xa53d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5, gbc.readMem(0xa53c));
        // 05 0029
        gbc.setState(0xfcf, 0x5ed8, 0x9780, 0xe07e, 0x9863, 0x1566, 0x1, 0x0);
        gbc.writeMem(0xfcf, { 0x5 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x5ed8, gbc.sp());
        EXPECT(0xfd0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 05 002A
        gbc.setState(0xa94b, 0x3d67, 0x1f50, 0x2325, 0x30ef, 0x82ba, 0x1, 0x1);
        gbc.writeMem(0xa94b, { 0x5 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0x3d67, gbc.sp());
        EXPECT(0xa94c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5, gbc.readMem(0xa94b));
        // 05 002B
        gbc.setState(0x1a8c, 0x1afc, 0x1a70, 0x8687, 0x4fdb, 0xdb9b, 0x1, 0x1);
        gbc.writeMem(0x1a8c, { 0x5 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x1afc, gbc.sp());
        EXPECT(0x1a8d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 05 002C
        gbc.setState(0x4d4f, 0xab85, 0x8a90, 0xdb17, 0xa579, 0xc468, 0x1, 0x0);
        gbc.writeMem(0x4d4f, { 0x5 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0xab85, gbc.sp());
        EXPECT(0x4d50, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 05 002D
        gbc.setState(0x7edc, 0x4bf6, 0x1ab0, 0xb4c6, 0xc8ab, 0xc2cf, 0x1, 0x1);
        gbc.writeMem(0x7edc, { 0x5 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x4bf6, gbc.sp());
        EXPECT(0x7edd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 05 002E
        gbc.setState(0x7e30, 0x5517, 0xb80, 0xb91c, 0x5c39, 0xed09, 0x0, 0x0);
        gbc.writeMem(0x7e30, { 0x5 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x5517, gbc.sp());
        EXPECT(0x7e31, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 05 002F
        gbc.setState(0x4023, 0xa316, 0xae90, 0x7628, 0x48ee, 0x19b7, 0x1, 0x1);
        gbc.writeMem(0x4023, { 0x5 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0xa316, gbc.sp());
        EXPECT(0x4024, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 05 0030
        gbc.setState(0xdf5a, 0x7979, 0xa8d0, 0x8105, 0x7e5c, 0x8ab9, 0x0, 0x0);
        gbc.writeMem(0xdf5a, { 0x5 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x7979, gbc.sp());
        EXPECT(0xdf5b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5, gbc.readMem(0xdf5a));
        // 05 0031
        gbc.setState(0x5583, 0x8a13, 0x5a60, 0x3f78, 0x4891, 0x55aa, 0x1, 0x1);
        gbc.writeMem(0x5583, { 0x5 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x8a13, gbc.sp());
        EXPECT(0x5584, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 05 0032
        gbc.setState(0xee9f, 0x5694, 0xcaa0, 0x2941, 0x9031, 0xdc1f, 0x0, 0x1);
        gbc.writeMem(0xee9f, { 0x5 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x5694, gbc.sp());
        EXPECT(0xeea0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5, gbc.readMem(0xee9f));
        // 05 0034
        gbc.setState(0xe815, 0x1bd1, 0xa2a0, 0x5cda, 0x6831, 0xf164, 0x0, 0x1);
        gbc.writeMem(0xe815, { 0x5 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x1bd1, gbc.sp());
        EXPECT(0xe816, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5, gbc.readMem(0xe815));
        // 05 0035
        gbc.setState(0x5409, 0x9c40, 0xb50, 0x89db, 0xbd13, 0xb20f, 0x0, 0x0);
        gbc.writeMem(0x5409, { 0x5 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x9c40, gbc.sp());
        EXPECT(0x540a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 05 0036
        gbc.setState(0x5800, 0xeda0, 0x8410, 0x769c, 0xba37, 0xe82b, 0x0, 0x1);
        gbc.writeMem(0x5800, { 0x5 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0xeda0, gbc.sp());
        EXPECT(0x5801, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 05 0037
        gbc.setState(0x9def, 0x6e80, 0x9730, 0x8c0f, 0xcaf2, 0x238e, 0x0, 0x0);
        gbc.writeMem(0x9def, { 0x5 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x6e80, gbc.sp());
        EXPECT(0x9df0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5, gbc.readMem(0x9def));
        // 05 0038
        gbc.setState(0x2d70, 0xa529, 0xc850, 0x499e, 0x4ae9, 0x5dd6, 0x1, 0x1);
        gbc.writeMem(0x2d70, { 0x5 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0xa529, gbc.sp());
        EXPECT(0x2d71, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 05 0039
        gbc.setState(0x79db, 0xa926, 0x4050, 0x4bca, 0x72e2, 0x60bb, 0x1, 0x1);
        gbc.writeMem(0x79db, { 0x5 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0xa926, gbc.sp());
        EXPECT(0x79dc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 05 003A
        gbc.setState(0x8364, 0x22e, 0xe560, 0x9d0e, 0xbfe6, 0xe550, 0x0, 0x1);
        gbc.writeMem(0x8364, { 0x5 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x22e, gbc.sp());
        EXPECT(0x8365, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5, gbc.readMem(0x8364));
        // 05 003B
        gbc.setState(0x2f7e, 0xeb13, 0x2b40, 0xeb3f, 0xe892, 0x47a2, 0x0, 0x0);
        gbc.writeMem(0x2f7e, { 0x5 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0xeb13, gbc.sp());
        EXPECT(0x2f7f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 05 003C
        gbc.setState(0x4997, 0xc891, 0x9380, 0xbc15, 0xe331, 0x185e, 0x0, 0x1);
        gbc.writeMem(0x4997, { 0x5 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0xc891, gbc.sp());
        EXPECT(0x4998, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 05 003D
        gbc.setState(0xcc15, 0x125, 0xbb10, 0xb144, 0x86ac, 0x4d13, 0x1, 0x1);
        gbc.writeMem(0xcc15, { 0x5 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x125, gbc.sp());
        EXPECT(0xcc16, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5, gbc.readMem(0xcc15));
        // 05 003E
        gbc.setState(0xee4f, 0xd597, 0xbfc0, 0x516e, 0x900a, 0x26e9, 0x0, 0x0);
        gbc.writeMem(0xee4f, { 0x5 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0xd597, gbc.sp());
        EXPECT(0xee50, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5, gbc.readMem(0xee4f));
        // 05 003F
        gbc.setState(0x530b, 0xd2da, 0x6050, 0xae33, 0x4ca1, 0x274, 0x1, 0x1);
        gbc.writeMem(0x530b, { 0x5 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0xd2da, gbc.sp());
        EXPECT(0x530c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 05 0040
        gbc.setState(0x4027, 0xce2f, 0xc380, 0x2bdc, 0xb32, 0x4d04, 0x0, 0x0);
        gbc.writeMem(0x4027, { 0x5 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0xce2f, gbc.sp());
        EXPECT(0x4028, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 05 0041
        gbc.setState(0xb121, 0x3f4a, 0x13f0, 0x64be, 0xafb7, 0x120a, 0x1, 0x1);
        gbc.writeMem(0xb121, { 0x5 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x3f4a, gbc.sp());
        EXPECT(0xb122, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5, gbc.readMem(0xb121));
        // 05 0042
        gbc.setState(0xe730, 0x8198, 0x6450, 0x1023, 0x5aaa, 0xed41, 0x0, 0x0);
        gbc.writeMem(0xe730, { 0x5 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x8198, gbc.sp());
        EXPECT(0xe731, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5, gbc.readMem(0xe730));
        // 05 0043
        gbc.setState(0xe5d9, 0x3c4e, 0xde90, 0x991d, 0x174e, 0xb18, 0x0, 0x1);
        gbc.writeMem(0xe5d9, { 0x5 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x3c4e, gbc.sp());
        EXPECT(0xe5da, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5, gbc.readMem(0xe5d9));
        // 05 0044
        gbc.setState(0x59cc, 0xacfa, 0x4620, 0x331, 0xec9b, 0xf939, 0x0, 0x1);
        gbc.writeMem(0x59cc, { 0x5 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0xacfa, gbc.sp());
        EXPECT(0x59cd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 05 0045
        gbc.setState(0x67cb, 0xf0ec, 0xb90, 0xc8a6, 0xb88, 0x81be, 0x0, 0x0);
        gbc.writeMem(0x67cb, { 0x5 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0xf0ec, gbc.sp());
        EXPECT(0x67cc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 05 0046
        gbc.setState(0x2ec9, 0x5ba0, 0xddd0, 0x288, 0x6c56, 0xf108, 0x1, 0x1);
        gbc.writeMem(0x2ec9, { 0x5 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x5ba0, gbc.sp());
        EXPECT(0x2eca, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 05 0047
        gbc.setState(0x93e3, 0x7c54, 0xdbb0, 0x5637, 0xfac3, 0x4fdc, 0x0, 0x0);
        gbc.writeMem(0x93e3, { 0x5 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x7c54, gbc.sp());
        EXPECT(0x93e4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5, gbc.readMem(0x93e3));
        // 05 0048
        gbc.setState(0xbb1, 0xfd5b, 0x65e0, 0x91dd, 0x3bbb, 0x178c, 0x0, 0x1);
        gbc.writeMem(0xbb1, { 0x5 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0xfd5b, gbc.sp());
        EXPECT(0xbb2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 05 0049
        gbc.setState(0x1c52, 0x638c, 0xac80, 0x354d, 0xa4a8, 0xb1ec, 0x0, 0x0);
        gbc.writeMem(0x1c52, { 0x5 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x638c, gbc.sp());
        EXPECT(0x1c53, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 05 004A
        gbc.setState(0x9d3e, 0x8abb, 0x5ba0, 0x5b29, 0x2de1, 0x6fc, 0x0, 0x1);
        gbc.writeMem(0x9d3e, { 0x5 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x8abb, gbc.sp());
        EXPECT(0x9d3f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5, gbc.readMem(0x9d3e));
        // 05 004B
        gbc.setState(0xb735, 0x33f7, 0x2e10, 0xd261, 0x92a9, 0xfe42, 0x1, 0x0);
        gbc.writeMem(0xb735, { 0x5 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x33f7, gbc.sp());
        EXPECT(0xb736, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5, gbc.readMem(0xb735));
        // 05 004C
        gbc.setState(0x1347, 0x916c, 0xd020, 0xe5a6, 0xa49, 0x197b, 0x1, 0x1);
        gbc.writeMem(0x1347, { 0x5 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x916c, gbc.sp());
        EXPECT(0x1348, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 05 004D
        gbc.setState(0xd7c4, 0xa77d, 0xc700, 0x9d8b, 0xaf63, 0xe258, 0x0, 0x1);
        gbc.writeMem(0xd7c4, { 0x5 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0xa77d, gbc.sp());
        EXPECT(0xd7c5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5, gbc.readMem(0xd7c4));
        // 05 004E
        gbc.setState(0x9e4c, 0x114d, 0x4830, 0x3186, 0x6051, 0x335f, 0x0, 0x0);
        gbc.writeMem(0x9e4c, { 0x5 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x114d, gbc.sp());
        EXPECT(0x9e4d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5, gbc.readMem(0x9e4c));
        // 05 004F
        gbc.setState(0x2b0c, 0x1ccf, 0x3cf0, 0x2981, 0x15ee, 0x1b, 0x0, 0x1);
        gbc.writeMem(0x2b0c, { 0x5 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x1ccf, gbc.sp());
        EXPECT(0x2b0d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 05 0050
        gbc.setState(0x23a9, 0x1f32, 0x17c0, 0x5ec5, 0x2244, 0x3ec6, 0x0, 0x0);
        gbc.writeMem(0x23a9, { 0x5 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x1f32, gbc.sp());
        EXPECT(0x23aa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 05 0051
        gbc.setState(0xe706, 0xca25, 0xecc0, 0xae09, 0x5492, 0xcb29, 0x0, 0x0);
        gbc.writeMem(0xe706, { 0x5 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0xca25, gbc.sp());
        EXPECT(0xe707, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5, gbc.readMem(0xe706));
        // 05 0052
        gbc.setState(0x4713, 0x5786, 0x4a00, 0xc496, 0x31da, 0xeef, 0x0, 0x0);
        gbc.writeMem(0x4713, { 0x5 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x5786, gbc.sp());
        EXPECT(0x4714, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 05 0053
        gbc.setState(0xb36c, 0x5751, 0xd80, 0x1cc9, 0xeb35, 0x3c06, 0x0, 0x1);
        gbc.writeMem(0xb36c, { 0x5 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x5751, gbc.sp());
        EXPECT(0xb36d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5, gbc.readMem(0xb36c));
        // 05 0054
        gbc.setState(0x844e, 0xe1b1, 0x73b0, 0x8a68, 0x231d, 0x9e4e, 0x0, 0x1);
        gbc.writeMem(0x844e, { 0x5 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0xe1b1, gbc.sp());
        EXPECT(0x844f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5, gbc.readMem(0x844e));
        // 05 0055
        gbc.setState(0x9d3d, 0x7232, 0xd7f0, 0xb1e5, 0x2801, 0x78d6, 0x1, 0x1);
        gbc.writeMem(0x9d3d, { 0x5 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x7232, gbc.sp());
        EXPECT(0x9d3e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5, gbc.readMem(0x9d3d));
        // 05 0056
        gbc.setState(0x4c71, 0x7c89, 0x3b60, 0xcd36, 0x89d9, 0x70d6, 0x0, 0x0);
        gbc.writeMem(0x4c71, { 0x5 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x7c89, gbc.sp());
        EXPECT(0x4c72, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 05 0057
        gbc.setState(0x595f, 0xe2ef, 0x3db0, 0x5c30, 0x91ec, 0xba6a, 0x0, 0x0);
        gbc.writeMem(0x595f, { 0x5 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0xe2ef, gbc.sp());
        EXPECT(0x5960, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 05 0058
        gbc.setState(0xaa67, 0x7fca, 0x3070, 0x46ab, 0xa479, 0xae33, 0x0, 0x0);
        gbc.writeMem(0xaa67, { 0x5 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x7fca, gbc.sp());
        EXPECT(0xaa68, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5, gbc.readMem(0xaa67));
        // 05 0059
        gbc.setState(0x2f45, 0x49c2, 0x770, 0xbb53, 0x9424, 0x9220, 0x1, 0x1);
        gbc.writeMem(0x2f45, { 0x5 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x49c2, gbc.sp());
        EXPECT(0x2f46, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 05 005A
        gbc.setState(0xebc3, 0x9a7, 0xf480, 0xb7be, 0xc0f7, 0x8e8c, 0x0, 0x0);
        gbc.writeMem(0xebc3, { 0x5 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x9a7, gbc.sp());
        EXPECT(0xebc4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5, gbc.readMem(0xebc3));
        // 05 005B
        gbc.setState(0x6f5f, 0x8291, 0x96e0, 0x2237, 0x585b, 0x7d2b, 0x1, 0x1);
        gbc.writeMem(0x6f5f, { 0x5 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x8291, gbc.sp());
        EXPECT(0x6f60, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 05 005C
        gbc.setState(0x682c, 0xdc6b, 0xe1f0, 0xda0d, 0x1c01, 0x220e, 0x1, 0x1);
        gbc.writeMem(0x682c, { 0x5 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0xdc6b, gbc.sp());
        EXPECT(0x682d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 05 005D
        gbc.setState(0x67b3, 0xf007, 0x2570, 0xee08, 0x965, 0xb039, 0x1, 0x0);
        gbc.writeMem(0x67b3, { 0x5 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0xf007, gbc.sp());
        EXPECT(0x67b4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 05 005E
        gbc.setState(0x48a6, 0xd130, 0xcc00, 0x6c23, 0xcafc, 0x32e6, 0x1, 0x0);
        gbc.writeMem(0x48a6, { 0x5 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0xd130, gbc.sp());
        EXPECT(0x48a7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 05 005F
        gbc.setState(0x5fec, 0x254, 0x3e50, 0xeb25, 0x20d0, 0x574b, 0x1, 0x1);
        gbc.writeMem(0x5fec, { 0x5 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x254, gbc.sp());
        EXPECT(0x5fed, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 05 0060
        gbc.setState(0x9cdc, 0x7026, 0xc2d0, 0x8481, 0x6163, 0xa233, 0x1, 0x0);
        gbc.writeMem(0x9cdc, { 0x5 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x7026, gbc.sp());
        EXPECT(0x9cdd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5, gbc.readMem(0x9cdc));
        // 05 0061
        gbc.setState(0x5822, 0xdc0c, 0x5f30, 0x8fef, 0x6ca5, 0xac4b, 0x0, 0x1);
        gbc.writeMem(0x5822, { 0x5 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0xdc0c, gbc.sp());
        EXPECT(0x5823, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 05 0062
        gbc.setState(0x9c5c, 0x5435, 0x9cb0, 0x89c8, 0x604, 0x4c68, 0x0, 0x1);
        gbc.writeMem(0x9c5c, { 0x5 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x5435, gbc.sp());
        EXPECT(0x9c5d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5, gbc.readMem(0x9c5c));
        // 05 0064
        gbc.setState(0xeee, 0xa567, 0xd220, 0x2128, 0xe931, 0xd5f5, 0x1, 0x1);
        gbc.writeMem(0xeee, { 0x5 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0xa567, gbc.sp());
        EXPECT(0xeef, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 05 0065
        gbc.setState(0x6ad8, 0x766c, 0xfd90, 0xc3f6, 0x15ba, 0xa8c4, 0x0, 0x0);
        gbc.writeMem(0x6ad8, { 0x5 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x766c, gbc.sp());
        EXPECT(0x6ad9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 05 0066
        gbc.setState(0x3fee, 0x966, 0x8ac0, 0xc99, 0xc30a, 0xc699, 0x0, 0x1);
        gbc.writeMem(0x3fee, { 0x5 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x966, gbc.sp());
        EXPECT(0x3fef, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 05 0067
        gbc.setState(0xa7ec, 0x2e4, 0xc170, 0xb7bd, 0xf1ba, 0x2b1b, 0x0, 0x1);
        gbc.writeMem(0xa7ec, { 0x5 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x2e4, gbc.sp());
        EXPECT(0xa7ed, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5, gbc.readMem(0xa7ec));
        // 05 0069
        gbc.setState(0xebc1, 0x16cf, 0xd850, 0x91e, 0x4d47, 0x4656, 0x0, 0x1);
        gbc.writeMem(0xebc1, { 0x5 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0x16cf, gbc.sp());
        EXPECT(0xebc2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5, gbc.readMem(0xebc1));
        // 05 006A
        gbc.setState(0x3214, 0xd8fc, 0x4e20, 0xa242, 0x40b0, 0xb377, 0x0, 0x1);
        gbc.writeMem(0x3214, { 0x5 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0xd8fc, gbc.sp());
        EXPECT(0x3215, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 05 006B
        gbc.setState(0x4d1e, 0xfb8d, 0x6af0, 0xf75a, 0xc157, 0x9fe5, 0x0, 0x0);
        gbc.writeMem(0x4d1e, { 0x5 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0xfb8d, gbc.sp());
        EXPECT(0x4d1f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 05 006C
        gbc.setState(0x765d, 0xbbb4, 0x3120, 0x738d, 0x314a, 0xc417, 0x0, 0x0);
        gbc.writeMem(0x765d, { 0x5 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0xbbb4, gbc.sp());
        EXPECT(0x765e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 05 006D
        gbc.setState(0x63fa, 0x33aa, 0x94f0, 0xd549, 0x7af4, 0xece, 0x1, 0x0);
        gbc.writeMem(0x63fa, { 0x5 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x33aa, gbc.sp());
        EXPECT(0x63fb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 05 006E
        gbc.setState(0x70bd, 0xfb06, 0x3890, 0xe039, 0x9cb7, 0x119b, 0x1, 0x0);
        gbc.writeMem(0x70bd, { 0x5 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0xfb06, gbc.sp());
        EXPECT(0x70be, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 05 006F
        gbc.setState(0x4431, 0x71e7, 0x48e0, 0xb749, 0xa524, 0xb5a, 0x0, 0x0);
        gbc.writeMem(0x4431, { 0x5 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x71e7, gbc.sp());
        EXPECT(0x4432, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 05 0070
        gbc.setState(0xba9a, 0x2bed, 0x9930, 0xd64a, 0xf457, 0xd989, 0x0, 0x1);
        gbc.writeMem(0xba9a, { 0x5 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x2bed, gbc.sp());
        EXPECT(0xba9b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5, gbc.readMem(0xba9a));
        // 05 0071
        gbc.setState(0x343a, 0x1d40, 0x2d20, 0x705f, 0xc1f2, 0xad0b, 0x0, 0x1);
        gbc.writeMem(0x343a, { 0x5 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x1d40, gbc.sp());
        EXPECT(0x343b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 05 0072
        gbc.setState(0x7bca, 0x7c8b, 0x6830, 0xbf65, 0x7266, 0x2317, 0x0, 0x1);
        gbc.writeMem(0x7bca, { 0x5 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x7c8b, gbc.sp());
        EXPECT(0x7bcb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 05 0073
        gbc.setState(0x6772, 0x9d28, 0x8580, 0xcf7c, 0x92b2, 0xc9f3, 0x0, 0x1);
        gbc.writeMem(0x6772, { 0x5 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x9d28, gbc.sp());
        EXPECT(0x6773, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 05 0074
        gbc.setState(0xdd02, 0xdc97, 0x21b0, 0x6e8f, 0x43b, 0x3eb7, 0x1, 0x0);
        gbc.writeMem(0xdd02, { 0x5 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0xdc97, gbc.sp());
        EXPECT(0xdd03, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5, gbc.readMem(0xdd02));
        // 05 0075
        gbc.setState(0x74d1, 0xbd5e, 0xd0, 0xdf6f, 0x38a9, 0x11, 0x0, 0x0);
        gbc.writeMem(0x74d1, { 0x5 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0xbd5e, gbc.sp());
        EXPECT(0x74d2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 05 0076
        gbc.setState(0x8183, 0xe0f, 0x5280, 0x7269, 0x71b8, 0xfb41, 0x0, 0x0);
        gbc.writeMem(0x8183, { 0x5 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0xe0f, gbc.sp());
        EXPECT(0x8184, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5, gbc.readMem(0x8183));
        // 05 0077
        gbc.setState(0xe107, 0xdcfb, 0xf800, 0x80e2, 0xd7cc, 0xa87a, 0x0, 0x1);
        gbc.writeMem(0xe107, { 0x5 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0xdcfb, gbc.sp());
        EXPECT(0xe108, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5, gbc.readMem(0xe107));
        // 05 0078
        gbc.setState(0x4f79, 0x4ebe, 0x3c10, 0xa1fe, 0xff26, 0xa0a1, 0x1, 0x1);
        gbc.writeMem(0x4f79, { 0x5 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x4ebe, gbc.sp());
        EXPECT(0x4f7a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 05 0079
        gbc.setState(0x7, 0x4e04, 0x87d0, 0xeae, 0x10ae, 0x82e, 0x0, 0x0);
        gbc.writeMem(0x7, { 0x5 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x4e04, gbc.sp());
        EXPECT(0x8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 05 007A
        gbc.setState(0xb16e, 0x9297, 0x5f90, 0xb609, 0xc5c3, 0xc4dd, 0x1, 0x0);
        gbc.writeMem(0xb16e, { 0x5 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x9297, gbc.sp());
        EXPECT(0xb16f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5, gbc.readMem(0xb16e));
        // 05 007B
        gbc.setState(0x873d, 0x86e4, 0xd790, 0x1af, 0x820d, 0x275c, 0x1, 0x1);
        gbc.writeMem(0x873d, { 0x5 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x86e4, gbc.sp());
        EXPECT(0x873e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5, gbc.readMem(0x873d));
        // 05 007C
        gbc.setState(0x7c07, 0x8665, 0x4450, 0xef97, 0x4cda, 0xb5, 0x0, 0x1);
        gbc.writeMem(0x7c07, { 0x5 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x8665, gbc.sp());
        EXPECT(0x7c08, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 05 007D
        gbc.setState(0x2e6a, 0xc473, 0xa8d0, 0x2c49, 0x1821, 0xb8ad, 0x0, 0x0);
        gbc.writeMem(0x2e6a, { 0x5 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0xc473, gbc.sp());
        EXPECT(0x2e6b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 05 007E
        gbc.setState(0x605d, 0x7c02, 0x54d0, 0xc3fb, 0xa42e, 0x3932, 0x0, 0x0);
        gbc.writeMem(0x605d, { 0x5 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x7c02, gbc.sp());
        EXPECT(0x605e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 05 007F
        gbc.setState(0x95e, 0x7dea, 0x1750, 0xc9b2, 0xef2c, 0xe7e0, 0x0, 0x0);
        gbc.writeMem(0x95e, { 0x5 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x7dea, gbc.sp());
        EXPECT(0x95f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 05 0080
        gbc.setState(0x3f5e, 0xe078, 0x2f0, 0xcf7f, 0xee63, 0x1ac5, 0x1, 0x0);
        gbc.writeMem(0x3f5e, { 0x5 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0xe078, gbc.sp());
        EXPECT(0x3f5f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 05 0081
        gbc.setState(0x663f, 0xea6b, 0xdde0, 0x9696, 0xa391, 0x6525, 0x1, 0x0);
        gbc.writeMem(0x663f, { 0x5 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0xea6b, gbc.sp());
        EXPECT(0x6640, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 05 0082
        gbc.setState(0xa5ab, 0x1eea, 0xea00, 0xa524, 0x8aa8, 0xebcf, 0x0, 0x0);
        gbc.writeMem(0xa5ab, { 0x5 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x1eea, gbc.sp());
        EXPECT(0xa5ac, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5, gbc.readMem(0xa5ab));
        // 05 0084
        gbc.setState(0x8e43, 0x48f7, 0xc570, 0xb477, 0x7e18, 0xf6d9, 0x1, 0x0);
        gbc.writeMem(0x8e43, { 0x5 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x48f7, gbc.sp());
        EXPECT(0x8e44, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5, gbc.readMem(0x8e43));
        // 05 0085
        gbc.setState(0x59b9, 0xe075, 0xfe60, 0x476a, 0xf36c, 0x93b5, 0x0, 0x1);
        gbc.writeMem(0x59b9, { 0x5 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0xe075, gbc.sp());
        EXPECT(0x59ba, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 05 0086
        gbc.setState(0xabc2, 0x1d2b, 0xecb0, 0x148f, 0xc151, 0x2c5c, 0x1, 0x1);
        gbc.writeMem(0xabc2, { 0x5 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x1d2b, gbc.sp());
        EXPECT(0xabc3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5, gbc.readMem(0xabc2));
        // 05 0087
        gbc.setState(0xa929, 0x64be, 0xea50, 0x7bb8, 0xbd12, 0x6f74, 0x1, 0x0);
        gbc.writeMem(0xa929, { 0x5 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x64be, gbc.sp());
        EXPECT(0xa92a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5, gbc.readMem(0xa929));
        // 05 0088
        gbc.setState(0x29ea, 0x6bd, 0x70b0, 0x59fd, 0xdc6c, 0xc48a, 0x1, 0x1);
        gbc.writeMem(0x29ea, { 0x5 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x6bd, gbc.sp());
        EXPECT(0x29eb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 05 0089
        gbc.setState(0xda38, 0xd5e0, 0x1c30, 0x27ef, 0x7f29, 0x23d3, 0x1, 0x1);
        gbc.writeMem(0xda38, { 0x5 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0xd5e0, gbc.sp());
        EXPECT(0xda39, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5, gbc.readMem(0xda38));
        // 05 008A
        gbc.setState(0x657c, 0x5292, 0xb540, 0x42ea, 0xf34c, 0x10d3, 0x1, 0x0);
        gbc.writeMem(0x657c, { 0x5 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x5292, gbc.sp());
        EXPECT(0x657d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 05 008B
        gbc.setState(0xef1c, 0x1b6f, 0x9c20, 0x73e0, 0x6dee, 0xfed7, 0x1, 0x0);
        gbc.writeMem(0xef1c, { 0x5 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0x1b6f, gbc.sp());
        EXPECT(0xef1d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5, gbc.readMem(0xef1c));
        // 05 008C
        gbc.setState(0x8cfc, 0xd353, 0x1100, 0x1f25, 0xc571, 0xe1d1, 0x0, 0x1);
        gbc.writeMem(0x8cfc, { 0x5 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0xd353, gbc.sp());
        EXPECT(0x8cfd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5, gbc.readMem(0x8cfc));
        // 05 008D
        gbc.setState(0xc4b9, 0x9294, 0x7e20, 0x27cf, 0x9638, 0x9400, 0x0, 0x1);
        gbc.writeMem(0xc4b9, { 0x5 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x9294, gbc.sp());
        EXPECT(0xc4ba, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5, gbc.readMem(0xc4b9));
        // 05 008E
        gbc.setState(0x4d5a, 0x37b, 0x9f0, 0xfff6, 0x2b7c, 0x54fc, 0x0, 0x1);
        gbc.writeMem(0x4d5a, { 0x5 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x37b, gbc.sp());
        EXPECT(0x4d5b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 05 008F
        gbc.setState(0x5e04, 0xca99, 0x74c0, 0xdc2, 0x8edd, 0xb975, 0x0, 0x1);
        gbc.writeMem(0x5e04, { 0x5 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0xca99, gbc.sp());
        EXPECT(0x5e05, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 05 0090
        gbc.setState(0x7190, 0xa299, 0x8f70, 0xddf4, 0x323b, 0x6b18, 0x0, 0x0);
        gbc.writeMem(0x7190, { 0x5 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0xa299, gbc.sp());
        EXPECT(0x7191, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 05 0092
        gbc.setState(0x8e8d, 0x6d1e, 0xbdc0, 0x5489, 0x426c, 0xa9ad, 0x1, 0x0);
        gbc.writeMem(0x8e8d, { 0x5 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x6d1e, gbc.sp());
        EXPECT(0x8e8e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5, gbc.readMem(0x8e8d));
        // 05 0093
        gbc.setState(0xdfc5, 0xaeaa, 0x7720, 0xd1e, 0x3dd4, 0x8c6b, 0x1, 0x1);
        gbc.writeMem(0xdfc5, { 0x5 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0xaeaa, gbc.sp());
        EXPECT(0xdfc6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5, gbc.readMem(0xdfc5));
        // 05 0094
        gbc.setState(0xd8f4, 0x785a, 0xea60, 0x5fcc, 0x2f40, 0x676c, 0x0, 0x0);
        gbc.writeMem(0xd8f4, { 0x5 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x785a, gbc.sp());
        EXPECT(0xd8f5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5, gbc.readMem(0xd8f4));
        // 05 0095
        gbc.setState(0x9c54, 0xd30e, 0xea40, 0xa6cd, 0x7f8c, 0x8b28, 0x1, 0x1);
        gbc.writeMem(0x9c54, { 0x5 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0xd30e, gbc.sp());
        EXPECT(0x9c55, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5, gbc.readMem(0x9c54));
        // 05 0096
        gbc.setState(0xb164, 0xab9d, 0xaf50, 0xc4a9, 0xbe94, 0x1240, 0x0, 0x1);
        gbc.writeMem(0xb164, { 0x5 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0xab9d, gbc.sp());
        EXPECT(0xb165, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5, gbc.readMem(0xb164));
        // 05 0097
        gbc.setState(0x6818, 0xbde7, 0xa820, 0xb81f, 0x293, 0x394d, 0x1, 0x1);
        gbc.writeMem(0x6818, { 0x5 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0xbde7, gbc.sp());
        EXPECT(0x6819, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 05 0098
        gbc.setState(0x4bf8, 0x6303, 0xde20, 0x7919, 0x9188, 0x8826, 0x1, 0x1);
        gbc.writeMem(0x4bf8, { 0x5 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x6303, gbc.sp());
        EXPECT(0x4bf9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 05 0099
        gbc.setState(0x8ed, 0xafef, 0x77f0, 0xe0c8, 0x8f30, 0x92a9, 0x0, 0x0);
        gbc.writeMem(0x8ed, { 0x5 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0xafef, gbc.sp());
        EXPECT(0x8ee, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 05 009A
        gbc.setState(0xd384, 0x18bf, 0xbb50, 0xab20, 0x703a, 0xd7c5, 0x1, 0x0);
        gbc.writeMem(0xd384, { 0x5 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x18bf, gbc.sp());
        EXPECT(0xd385, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5, gbc.readMem(0xd384));
        // 05 009B
        gbc.setState(0xd689, 0xdec3, 0x7c20, 0x8505, 0x503f, 0x95ca, 0x0, 0x1);
        gbc.writeMem(0xd689, { 0x5 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0xdec3, gbc.sp());
        EXPECT(0xd68a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5, gbc.readMem(0xd689));
        // 05 009C
        gbc.setState(0x22ba, 0x5d7c, 0x12b0, 0x41bf, 0x117e, 0x2761, 0x1, 0x0);
        gbc.writeMem(0x22ba, { 0x5 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x5d7c, gbc.sp());
        EXPECT(0x22bb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 05 009D
        gbc.setState(0xbd63, 0x9412, 0x3540, 0x7351, 0x1064, 0x31b7, 0x1, 0x0);
        gbc.writeMem(0xbd63, { 0x5 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x9412, gbc.sp());
        EXPECT(0xbd64, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5, gbc.readMem(0xbd63));
        // 05 009E
        gbc.setState(0x1000, 0xbfd9, 0x1a80, 0x1007, 0x537, 0x3814, 0x1, 0x1);
        gbc.writeMem(0x1000, { 0x5 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0xbfd9, gbc.sp());
        EXPECT(0x1001, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 05 009F
        gbc.setState(0x532d, 0xf90f, 0x9610, 0x775, 0x8360, 0x7ee7, 0x1, 0x1);
        gbc.writeMem(0x532d, { 0x5 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0xf90f, gbc.sp());
        EXPECT(0x532e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 05 00A0
        gbc.setState(0xd197, 0x51, 0xc40, 0x9187, 0xf97d, 0x6125, 0x1, 0x1);
        gbc.writeMem(0xd197, { 0x5 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x51, gbc.sp());
        EXPECT(0xd198, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5, gbc.readMem(0xd197));
        // 05 00A1
        gbc.setState(0x3e72, 0xb76b, 0xc1c0, 0x9e45, 0xb467, 0xaeff, 0x1, 0x1);
        gbc.writeMem(0x3e72, { 0x5 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0xb76b, gbc.sp());
        EXPECT(0x3e73, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 05 00A2
        gbc.setState(0xce0e, 0x834b, 0x3b10, 0x3698, 0x7301, 0x19df, 0x0, 0x1);
        gbc.writeMem(0xce0e, { 0x5 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x834b, gbc.sp());
        EXPECT(0xce0f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5, gbc.readMem(0xce0e));
        // 05 00A3
        gbc.setState(0xe15, 0x681e, 0xf710, 0x9a3a, 0x176c, 0xd7f1, 0x0, 0x1);
        gbc.writeMem(0xe15, { 0x5 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x681e, gbc.sp());
        EXPECT(0xe16, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 05 00A4
        gbc.setState(0xa77e, 0x2592, 0xf750, 0x9699, 0x1ca6, 0x411, 0x1, 0x1);
        gbc.writeMem(0xa77e, { 0x5 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x2592, gbc.sp());
        EXPECT(0xa77f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5, gbc.readMem(0xa77e));
        // 05 00A5
        gbc.setState(0x64cc, 0x86d3, 0x8b10, 0x68bb, 0xfb2f, 0x59d7, 0x1, 0x1);
        gbc.writeMem(0x64cc, { 0x5 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0x86d3, gbc.sp());
        EXPECT(0x64cd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 05 00A6
        gbc.setState(0xdc25, 0xe524, 0x45d0, 0x5008, 0x4264, 0xdce, 0x0, 0x0);
        gbc.writeMem(0xdc25, { 0x5 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0xe524, gbc.sp());
        EXPECT(0xdc26, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5, gbc.readMem(0xdc25));
        // 05 00A7
        gbc.setState(0xa9fa, 0x275b, 0xfc20, 0x9276, 0x2c83, 0x7b63, 0x0, 0x1);
        gbc.writeMem(0xa9fa, { 0x5 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x275b, gbc.sp());
        EXPECT(0xa9fb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5, gbc.readMem(0xa9fa));
        // 05 00A8
        gbc.setState(0x12bf, 0x6d8d, 0xb330, 0xb8d3, 0x2b6b, 0xbc15, 0x0, 0x1);
        gbc.writeMem(0x12bf, { 0x5 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x6d8d, gbc.sp());
        EXPECT(0x12c0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 05 00A9
        gbc.setState(0x636, 0x97bd, 0x35a0, 0xcb56, 0xee87, 0x9df2, 0x0, 0x1);
        gbc.writeMem(0x636, { 0x5 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x97bd, gbc.sp());
        EXPECT(0x637, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 05 00AA
        gbc.setState(0xa3b9, 0xdf14, 0x2890, 0xb44, 0xc2b6, 0x9673, 0x1, 0x1);
        gbc.writeMem(0xa3b9, { 0x5 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0xdf14, gbc.sp());
        EXPECT(0xa3ba, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5, gbc.readMem(0xa3b9));
        // 05 00AB
        gbc.setState(0x5012, 0x44a2, 0x370, 0x430d, 0x5926, 0xf392, 0x1, 0x1);
        gbc.writeMem(0x5012, { 0x5 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x44a2, gbc.sp());
        EXPECT(0x5013, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 05 00AC
        gbc.setState(0xc147, 0x9a52, 0xea70, 0xdfba, 0xa6ac, 0xa4a6, 0x0, 0x1);
        gbc.writeMem(0xc147, { 0x5 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x9a52, gbc.sp());
        EXPECT(0xc148, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5, gbc.readMem(0xc147));
        // 05 00AD
        gbc.setState(0xb57a, 0x26d3, 0x9220, 0x2167, 0x3cc0, 0xfc10, 0x1, 0x1);
        gbc.writeMem(0xb57a, { 0x5 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x26d3, gbc.sp());
        EXPECT(0xb57b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5, gbc.readMem(0xb57a));
        // 05 00AE
        gbc.setState(0x9278, 0x4887, 0xf80, 0x30d6, 0xdb80, 0x5c54, 0x0, 0x1);
        gbc.writeMem(0x9278, { 0x5 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x4887, gbc.sp());
        EXPECT(0x9279, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5, gbc.readMem(0x9278));
        // 05 00AF
        gbc.setState(0x847c, 0x2be5, 0xf040, 0x364, 0x9da9, 0xd58d, 0x1, 0x1);
        gbc.writeMem(0x847c, { 0x5 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x2be5, gbc.sp());
        EXPECT(0x847d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5, gbc.readMem(0x847c));
        // 05 00B0
        gbc.setState(0x2573, 0xe938, 0xcd20, 0xaff6, 0x109e, 0x40bd, 0x0, 0x1);
        gbc.writeMem(0x2573, { 0x5 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0xe938, gbc.sp());
        EXPECT(0x2574, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 05 00B1
        gbc.setState(0x9722, 0xf499, 0x46d0, 0xfa41, 0xfc0e, 0xeddb, 0x0, 0x1);
        gbc.writeMem(0x9722, { 0x5 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0xf499, gbc.sp());
        EXPECT(0x9723, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5, gbc.readMem(0x9722));
        // 05 00B2
        gbc.setState(0x7a8f, 0xbcdb, 0xa6c0, 0x6f54, 0x95df, 0x9982, 0x0, 0x0);
        gbc.writeMem(0x7a8f, { 0x5 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0xbcdb, gbc.sp());
        EXPECT(0x7a90, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 05 00B3
        gbc.setState(0xa73a, 0x3f9d, 0x7690, 0xb878, 0x9fcd, 0xe4d9, 0x0, 0x0);
        gbc.writeMem(0xa73a, { 0x5 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x3f9d, gbc.sp());
        EXPECT(0xa73b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5, gbc.readMem(0xa73a));
        // 05 00B4
        gbc.setState(0xb20b, 0x6909, 0x2c70, 0x7ebb, 0x611c, 0xf09e, 0x1, 0x0);
        gbc.writeMem(0xb20b, { 0x5 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x6909, gbc.sp());
        EXPECT(0xb20c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5, gbc.readMem(0xb20b));
        // 05 00B5
        gbc.setState(0x9a7, 0xeeb4, 0xb2c0, 0xc11a, 0xbf98, 0x77f4, 0x1, 0x0);
        gbc.writeMem(0x9a7, { 0x5 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0xeeb4, gbc.sp());
        EXPECT(0x9a8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 05 00B6
        gbc.setState(0x68ab, 0xfe51, 0xfb50, 0xefed, 0xcec9, 0x7660, 0x0, 0x0);
        gbc.writeMem(0x68ab, { 0x5 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0xfe51, gbc.sp());
        EXPECT(0x68ac, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 05 00B7
        gbc.setState(0x4c00, 0xecc, 0xb5e0, 0x59f0, 0xd16c, 0x697c, 0x1, 0x1);
        gbc.writeMem(0x4c00, { 0x5 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0xecc, gbc.sp());
        EXPECT(0x4c01, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 05 00B8
        gbc.setState(0x4f9e, 0x2d86, 0xdef0, 0xbad3, 0x7eb1, 0xe2da, 0x0, 0x1);
        gbc.writeMem(0x4f9e, { 0x5 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x2d86, gbc.sp());
        EXPECT(0x4f9f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 05 00B9
        gbc.setState(0x61db, 0x2bc5, 0xc4a0, 0xd98c, 0x7866, 0x2031, 0x0, 0x0);
        gbc.writeMem(0x61db, { 0x5 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x2bc5, gbc.sp());
        EXPECT(0x61dc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 05 00BA
        gbc.setState(0xb1c1, 0x6951, 0x4c20, 0x8111, 0xbecb, 0xace, 0x1, 0x1);
        gbc.writeMem(0xb1c1, { 0x5 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x6951, gbc.sp());
        EXPECT(0xb1c2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5, gbc.readMem(0xb1c1));
        // 05 00BB
        gbc.setState(0xac43, 0x997b, 0x8d00, 0x41dc, 0x52bb, 0xb859, 0x0, 0x1);
        gbc.writeMem(0xac43, { 0x5 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x997b, gbc.sp());
        EXPECT(0xac44, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5, gbc.readMem(0xac43));
        // 05 00BC
        gbc.setState(0xc00c, 0x292a, 0xf000, 0xfdbb, 0xc332, 0x5f17, 0x1, 0x0);
        gbc.writeMem(0xc00c, { 0x5 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x292a, gbc.sp());
        EXPECT(0xc00d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5, gbc.readMem(0xc00c));
        // 05 00BD
        gbc.setState(0x4cbb, 0xff9d, 0x9530, 0x849, 0x33eb, 0x1601, 0x0, 0x1);
        gbc.writeMem(0x4cbb, { 0x5 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0xff9d, gbc.sp());
        EXPECT(0x4cbc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 05 00BE
        gbc.setState(0x40b7, 0xb0db, 0xed30, 0x315, 0xdff0, 0x3fcc, 0x1, 0x1);
        gbc.writeMem(0x40b7, { 0x5 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0xb0db, gbc.sp());
        EXPECT(0x40b8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 05 00BF
        gbc.setState(0x4a7, 0xf64d, 0x9cd0, 0xe7ac, 0x2814, 0xad07, 0x0, 0x1);
        gbc.writeMem(0x4a7, { 0x5 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0xf64d, gbc.sp());
        EXPECT(0x4a8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 05 00C0
        gbc.setState(0x6f27, 0xb38f, 0x9cf0, 0xd212, 0xa697, 0xfee3, 0x0, 0x1);
        gbc.writeMem(0x6f27, { 0x5 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0xb38f, gbc.sp());
        EXPECT(0x6f28, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 05 00C1
        gbc.setState(0xb0fd, 0x74e8, 0x94e0, 0x49d, 0xbe4d, 0xb9c7, 0x0, 0x1);
        gbc.writeMem(0xb0fd, { 0x5 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x74e8, gbc.sp());
        EXPECT(0xb0fe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5, gbc.readMem(0xb0fd));
        // 05 00C2
        gbc.setState(0x5369, 0xc2a, 0x9ed0, 0x443c, 0xf74d, 0x2d53, 0x1, 0x0);
        gbc.writeMem(0x5369, { 0x5 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0xc2a, gbc.sp());
        EXPECT(0x536a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 05 00C3
        gbc.setState(0x7f2e, 0xd61, 0xff60, 0xddfe, 0x47af, 0x8191, 0x0, 0x0);
        gbc.writeMem(0x7f2e, { 0x5 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0xd61, gbc.sp());
        EXPECT(0x7f2f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 05 00C4
        gbc.setState(0x4ea6, 0x6d42, 0xd7e0, 0xa91d, 0xd3d4, 0xdf36, 0x0, 0x1);
        gbc.writeMem(0x4ea6, { 0x5 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x6d42, gbc.sp());
        EXPECT(0x4ea7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 05 00C5
        gbc.setState(0xc075, 0x7808, 0xeaa0, 0xca42, 0x18f0, 0xf7d9, 0x0, 0x0);
        gbc.writeMem(0xc075, { 0x5 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x7808, gbc.sp());
        EXPECT(0xc076, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5, gbc.readMem(0xc075));
        // 05 00C6
        gbc.setState(0xccc7, 0xcb7e, 0x5270, 0x84ef, 0x93ae, 0xd19b, 0x1, 0x1);
        gbc.writeMem(0xccc7, { 0x5 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0xcb7e, gbc.sp());
        EXPECT(0xccc8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5, gbc.readMem(0xccc7));
        // 05 00C7
        gbc.setState(0xaa36, 0xc534, 0xc860, 0x79c9, 0xe58e, 0x4d85, 0x1, 0x0);
        gbc.writeMem(0xaa36, { 0x5 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0xc534, gbc.sp());
        EXPECT(0xaa37, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5, gbc.readMem(0xaa36));
        // 05 00C8
        gbc.setState(0xdc19, 0x8df, 0xcce0, 0x31e9, 0x1025, 0xdd71, 0x1, 0x1);
        gbc.writeMem(0xdc19, { 0x5 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x8df, gbc.sp());
        EXPECT(0xdc1a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5, gbc.readMem(0xdc19));
        // 05 00C9
        gbc.setState(0x5dce, 0x6858, 0x6df0, 0x21ec, 0x3f5d, 0xc4bd, 0x0, 0x0);
        gbc.writeMem(0x5dce, { 0x5 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x6858, gbc.sp());
        EXPECT(0x5dcf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 05 00CA
        gbc.setState(0x20bd, 0xdbb9, 0x9550, 0x6d7d, 0x780d, 0x6622, 0x0, 0x0);
        gbc.writeMem(0x20bd, { 0x5 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0xdbb9, gbc.sp());
        EXPECT(0x20be, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 05 00CC
        gbc.setState(0x2cfb, 0xe3f7, 0xab30, 0x54c6, 0x1ef, 0x1b6b, 0x1, 0x0);
        gbc.writeMem(0x2cfb, { 0x5 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0xe3f7, gbc.sp());
        EXPECT(0x2cfc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 05 00CE
        gbc.setState(0xb3a4, 0x4eb2, 0x3450, 0x4a72, 0xa380, 0xbfce, 0x1, 0x1);
        gbc.writeMem(0xb3a4, { 0x5 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x4eb2, gbc.sp());
        EXPECT(0xb3a5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5, gbc.readMem(0xb3a4));
        // 05 00CF
        gbc.setState(0x9fe2, 0x3727, 0x2720, 0xae2c, 0xfdbf, 0x8751, 0x0, 0x0);
        gbc.writeMem(0x9fe2, { 0x5 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x3727, gbc.sp());
        EXPECT(0x9fe3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5, gbc.readMem(0x9fe2));
        // 05 00D0
        gbc.setState(0x3b39, 0x2f0d, 0x4410, 0xff62, 0xcac0, 0x6af5, 0x0, 0x1);
        gbc.writeMem(0x3b39, { 0x5 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x2f0d, gbc.sp());
        EXPECT(0x3b3a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 05 00D1
        gbc.setState(0x83fd, 0x2a10, 0xae70, 0x4929, 0xa6e1, 0x3dc0, 0x0, 0x1);
        gbc.writeMem(0x83fd, { 0x5 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x2a10, gbc.sp());
        EXPECT(0x83fe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5, gbc.readMem(0x83fd));
        // 05 00D2
        gbc.setState(0x2d14, 0x5c29, 0xaf20, 0xfff4, 0x7834, 0x3633, 0x1, 0x1);
        gbc.writeMem(0x2d14, { 0x5 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x5c29, gbc.sp());
        EXPECT(0x2d15, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 05 00D3
        gbc.setState(0xaae6, 0x245c, 0x9d20, 0xb89f, 0x9669, 0xfbd6, 0x1, 0x0);
        gbc.writeMem(0xaae6, { 0x5 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x245c, gbc.sp());
        EXPECT(0xaae7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5, gbc.readMem(0xaae6));
        // 05 00D4
        gbc.setState(0xda68, 0xaf88, 0x1d60, 0xf575, 0xb665, 0x9052, 0x1, 0x0);
        gbc.writeMem(0xda68, { 0x5 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0xaf88, gbc.sp());
        EXPECT(0xda69, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5, gbc.readMem(0xda68));
        // 05 00D6
        gbc.setState(0x14ad, 0xc7de, 0x1070, 0xb603, 0x7cf2, 0x69f4, 0x1, 0x0);
        gbc.writeMem(0x14ad, { 0x5 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0xc7de, gbc.sp());
        EXPECT(0x14ae, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 05 00D7
        gbc.setState(0x30fe, 0x8933, 0xe590, 0x21b3, 0x8f5d, 0x466, 0x0, 0x1);
        gbc.writeMem(0x30fe, { 0x5 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x8933, gbc.sp());
        EXPECT(0x30ff, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 05 00D8
        gbc.setState(0xb6c2, 0x7dd8, 0xa10, 0x49ce, 0xc242, 0x97e8, 0x0, 0x1);
        gbc.writeMem(0xb6c2, { 0x5 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x7dd8, gbc.sp());
        EXPECT(0xb6c3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5, gbc.readMem(0xb6c2));
        // 05 00D9
        gbc.setState(0xb549, 0xedd7, 0x5910, 0x74b, 0x40fa, 0xfb09, 0x0, 0x0);
        gbc.writeMem(0xb549, { 0x5 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0xedd7, gbc.sp());
        EXPECT(0xb54a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5, gbc.readMem(0xb549));
        // 05 00DA
        gbc.setState(0x5b23, 0x453e, 0x6cc0, 0x26d0, 0x100e, 0x6657, 0x0, 0x0);
        gbc.writeMem(0x5b23, { 0x5 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x453e, gbc.sp());
        EXPECT(0x5b24, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 05 00DB
        gbc.setState(0xc720, 0x9c7e, 0xf920, 0x2b5d, 0xa6ba, 0x4a39, 0x1, 0x1);
        gbc.writeMem(0xc720, { 0x5 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x9c7e, gbc.sp());
        EXPECT(0xc721, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5, gbc.readMem(0xc720));
        // 05 00DC
        gbc.setState(0x3d51, 0x9dd7, 0xb8c0, 0x88aa, 0x23ed, 0x3f94, 0x1, 0x0);
        gbc.writeMem(0x3d51, { 0x5 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x9dd7, gbc.sp());
        EXPECT(0x3d52, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 05 00DD
        gbc.setState(0x3824, 0x1716, 0x5350, 0x7a8e, 0xd95d, 0x6b22, 0x0, 0x0);
        gbc.writeMem(0x3824, { 0x5 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x1716, gbc.sp());
        EXPECT(0x3825, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 05 00DE
        gbc.setState(0x9c4f, 0x2bb4, 0x5f30, 0x4ccb, 0x693a, 0x7211, 0x1, 0x1);
        gbc.writeMem(0x9c4f, { 0x5 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x2bb4, gbc.sp());
        EXPECT(0x9c50, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5, gbc.readMem(0x9c4f));
        // 05 00DF
        gbc.setState(0xa564, 0xeed8, 0x19c0, 0xe5c3, 0x4655, 0x53b9, 0x1, 0x0);
        gbc.writeMem(0xa564, { 0x5 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0xeed8, gbc.sp());
        EXPECT(0xa565, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5, gbc.readMem(0xa564));
        // 05 00E0
        gbc.setState(0x2dc1, 0x77ac, 0x5270, 0xef42, 0x155d, 0x4eb6, 0x1, 0x1);
        gbc.writeMem(0x2dc1, { 0x5 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x77ac, gbc.sp());
        EXPECT(0x2dc2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 05 00E1
        gbc.setState(0xbf70, 0x6e93, 0x6c50, 0xbc48, 0xd65e, 0xa44, 0x0, 0x1);
        gbc.writeMem(0xbf70, { 0x5 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x6e93, gbc.sp());
        EXPECT(0xbf71, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5, gbc.readMem(0xbf70));
        // 05 00E2
        gbc.setState(0x8735, 0xc5e5, 0xf870, 0x7892, 0x1da8, 0x3f6f, 0x0, 0x0);
        gbc.writeMem(0x8735, { 0x5 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0xc5e5, gbc.sp());
        EXPECT(0x8736, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5, gbc.readMem(0x8735));
        // 05 00E4
        gbc.setState(0x26f4, 0xdf89, 0xdc90, 0x4829, 0x94ba, 0xaeb2, 0x1, 0x1);
        gbc.writeMem(0x26f4, { 0x5 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0xdf89, gbc.sp());
        EXPECT(0x26f5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 05 00E5
        gbc.setState(0xe01d, 0xfa35, 0xc2c0, 0xc715, 0xe27e, 0x80c3, 0x0, 0x1);
        gbc.writeMem(0xe01d, { 0x5 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0xfa35, gbc.sp());
        EXPECT(0xe01e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5, gbc.readMem(0xe01d));
        // 05 00E6
        gbc.setState(0xefba, 0xb3a1, 0x8ba0, 0xb7d3, 0xb2fd, 0xf5df, 0x1, 0x1);
        gbc.writeMem(0xefba, { 0x5 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0xb3a1, gbc.sp());
        EXPECT(0xefbb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5, gbc.readMem(0xefba));
        // 05 00E7
        gbc.setState(0x4447, 0xcb6e, 0xf050, 0x8a6b, 0x4e9f, 0x93d5, 0x0, 0x1);
        gbc.writeMem(0x4447, { 0x5 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0xcb6e, gbc.sp());
        EXPECT(0x4448, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 05 00E8
        gbc.setState(0x6135, 0xb6f1, 0xc90, 0x47f1, 0x6d1, 0x8f7, 0x0, 0x0);
        gbc.writeMem(0x6135, { 0x5 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0xb6f1, gbc.sp());
        EXPECT(0x6136, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 05 00E9
        gbc.setState(0xcfa8, 0xf93d, 0x90c0, 0x568f, 0x9616, 0x2adf, 0x1, 0x0);
        gbc.writeMem(0xcfa8, { 0x5 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0xf93d, gbc.sp());
        EXPECT(0xcfa9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5, gbc.readMem(0xcfa8));
        // 05 00EA
        gbc.setState(0x23cf, 0xef35, 0x4e20, 0xe73e, 0x5e11, 0x1339, 0x0, 0x0);
        gbc.writeMem(0x23cf, { 0x5 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0xef35, gbc.sp());
        EXPECT(0x23d0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 05 00EB
        gbc.setState(0x7ff5, 0xa2d0, 0xfda0, 0x2bcc, 0x7cab, 0x7b7f, 0x1, 0x0);
        gbc.writeMem(0x7ff5, { 0x5 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0xa2d0, gbc.sp());
        EXPECT(0x7ff6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 05 00EC
        gbc.setState(0x166b, 0x5a2f, 0xf120, 0x1489, 0xe91c, 0xa8ca, 0x1, 0x1);
        gbc.writeMem(0x166b, { 0x5 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x5a2f, gbc.sp());
        EXPECT(0x166c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 05 00ED
        gbc.setState(0x1a50, 0xb67f, 0x99a0, 0xb5cd, 0xde5, 0x71b2, 0x0, 0x1);
        gbc.writeMem(0x1a50, { 0x5 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0xb67f, gbc.sp());
        EXPECT(0x1a51, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 05 00EE
        gbc.setState(0xaf5a, 0x967e, 0xd6e0, 0x35fb, 0x3d16, 0x8197, 0x0, 0x1);
        gbc.writeMem(0xaf5a, { 0x5 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0x967e, gbc.sp());
        EXPECT(0xaf5b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5, gbc.readMem(0xaf5a));
        // 05 00EF
        gbc.setState(0x2e56, 0x98a4, 0xc880, 0x8c95, 0xa9d7, 0xdea9, 0x0, 0x1);
        gbc.writeMem(0x2e56, { 0x5 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x98a4, gbc.sp());
        EXPECT(0x2e57, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 05 00F0
        gbc.setState(0xc49e, 0xc2cb, 0xfdd0, 0x31a9, 0x6b4, 0xefb5, 0x1, 0x0);
        gbc.writeMem(0xc49e, { 0x5 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0xc2cb, gbc.sp());
        EXPECT(0xc49f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5, gbc.readMem(0xc49e));
        // 05 00F1
        gbc.setState(0xe038, 0xa213, 0xc8d0, 0x4daf, 0x5b1d, 0x70f7, 0x0, 0x1);
        gbc.writeMem(0xe038, { 0x5 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0xa213, gbc.sp());
        EXPECT(0xe039, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5, gbc.readMem(0xe038));
        // 05 00F2
        gbc.setState(0xeb45, 0x5c88, 0x20a0, 0x5415, 0xaf0b, 0x1501, 0x1, 0x0);
        gbc.writeMem(0xeb45, { 0x5 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x5c88, gbc.sp());
        EXPECT(0xeb46, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5, gbc.readMem(0xeb45));
        // 05 00F3
        gbc.setState(0x3ed2, 0x5fa0, 0x2870, 0xa967, 0x9ef, 0xe8b8, 0x1, 0x1);
        gbc.writeMem(0x3ed2, { 0x5 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x5fa0, gbc.sp());
        EXPECT(0x3ed3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 05 00F4
        gbc.setState(0x4e0a, 0xc3dc, 0xf650, 0xafb2, 0x5ff1, 0x6f45, 0x0, 0x1);
        gbc.writeMem(0x4e0a, { 0x5 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0xc3dc, gbc.sp());
        EXPECT(0x4e0b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 05 00F6
        gbc.setState(0x5ef5, 0xe971, 0xe6f0, 0x5c16, 0x7729, 0x967a, 0x1, 0x0);
        gbc.writeMem(0x5ef5, { 0x5 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0xe971, gbc.sp());
        EXPECT(0x5ef6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 05 00F7
        gbc.setState(0x5787, 0x7d68, 0x1820, 0x8fb, 0x3798, 0x2e5b, 0x0, 0x1);
        gbc.writeMem(0x5787, { 0x5 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x7d68, gbc.sp());
        EXPECT(0x5788, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 05 00F9
        gbc.setState(0xc88f, 0x2be9, 0x6b30, 0x1ed7, 0xc433, 0x25cc, 0x1, 0x0);
        gbc.writeMem(0xc88f, { 0x5 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x2be9, gbc.sp());
        EXPECT(0xc890, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5, gbc.readMem(0xc88f));
        // 05 00FA
        gbc.setState(0x407a, 0x837c, 0x73a0, 0x8de, 0x4da7, 0xf523, 0x1, 0x1);
        gbc.writeMem(0x407a, { 0x5 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x837c, gbc.sp());
        EXPECT(0x407b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 05 00FB
        gbc.setState(0x5fd2, 0x7e52, 0xd500, 0x5655, 0xe23b, 0xc1ca, 0x1, 0x0);
        gbc.writeMem(0x5fd2, { 0x5 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x7e52, gbc.sp());
        EXPECT(0x5fd3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 05 00FC
        gbc.setState(0x1f1b, 0x491c, 0x3c00, 0x5ab8, 0xcc61, 0xdcbd, 0x1, 0x0);
        gbc.writeMem(0x1f1b, { 0x5 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x491c, gbc.sp());
        EXPECT(0x1f1c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 05 00FD
        gbc.setState(0x71e3, 0x151f, 0x1fc0, 0x1c75, 0x69ae, 0x3127, 0x0, 0x1);
        gbc.writeMem(0x71e3, { 0x5 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x151f, gbc.sp());
        EXPECT(0x71e4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 05 00FE
        gbc.setState(0x42ec, 0x331e, 0x2420, 0x6502, 0xad6, 0xb385, 0x1, 0x1);
        gbc.writeMem(0x42ec, { 0x5 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x331e, gbc.sp());
        EXPECT(0x42ed, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 05 00FF
        gbc.setState(0x29ef, 0xbb63, 0x7f10, 0x1466, 0xf47e, 0xeda, 0x0, 0x0);
        gbc.writeMem(0x29ef, { 0x5 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0xbb63, gbc.sp());
        EXPECT(0x29f0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 05 0100
        gbc.setState(0x658e, 0x4ca7, 0x78e0, 0x80ea, 0xfa9f, 0xd427, 0x1, 0x0);
        gbc.writeMem(0x658e, { 0x5 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x4ca7, gbc.sp());
        EXPECT(0x658f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 05 0101
        gbc.setState(0xdb06, 0xace3, 0x4ba0, 0x11a9, 0x4110, 0xc466, 0x1, 0x0);
        gbc.writeMem(0xdb06, { 0x5 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0xace3, gbc.sp());
        EXPECT(0xdb07, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5, gbc.readMem(0xdb06));
        // 05 0103
        gbc.setState(0x3548, 0x7cc6, 0x3900, 0x9ad, 0xfac3, 0x40b3, 0x1, 0x0);
        gbc.writeMem(0x3548, { 0x5 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x7cc6, gbc.sp());
        EXPECT(0x3549, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 05 0104
        gbc.setState(0x89cc, 0xfbc8, 0x9df0, 0x9712, 0x6d07, 0xe27c, 0x1, 0x1);
        gbc.writeMem(0x89cc, { 0x5 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0xfbc8, gbc.sp());
        EXPECT(0x89cd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5, gbc.readMem(0x89cc));
        // 05 0105
        gbc.setState(0x988f, 0x185a, 0x28b0, 0x4ff7, 0xf5de, 0x6b7a, 0x1, 0x0);
        gbc.writeMem(0x988f, { 0x5 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x185a, gbc.sp());
        EXPECT(0x9890, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5, gbc.readMem(0x988f));
        // 05 0106
        gbc.setState(0xbd1c, 0x6910, 0xe080, 0xdf4b, 0x146d, 0x7879, 0x1, 0x1);
        gbc.writeMem(0xbd1c, { 0x5 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x6910, gbc.sp());
        EXPECT(0xbd1d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5, gbc.readMem(0xbd1c));
        // 05 0107
        gbc.setState(0x5d76, 0xe03b, 0x8910, 0x320e, 0xd4a3, 0x44ef, 0x1, 0x0);
        gbc.writeMem(0x5d76, { 0x5 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0xe03b, gbc.sp());
        EXPECT(0x5d77, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 05 0108
        gbc.setState(0x4ebe, 0xff4, 0x75a0, 0x3950, 0xd0d0, 0xc9d7, 0x0, 0x1);
        gbc.writeMem(0x4ebe, { 0x5 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0xff4, gbc.sp());
        EXPECT(0x4ebf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 05 0109
        gbc.setState(0x9436, 0x2179, 0xa170, 0xe6e1, 0x8831, 0xeefb, 0x0, 0x1);
        gbc.writeMem(0x9436, { 0x5 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x2179, gbc.sp());
        EXPECT(0x9437, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5, gbc.readMem(0x9436));
        // 05 010A
        gbc.setState(0xd45b, 0x181e, 0x3770, 0x7844, 0x83b9, 0x9da1, 0x1, 0x0);
        gbc.writeMem(0xd45b, { 0x5 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x181e, gbc.sp());
        EXPECT(0xd45c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5, gbc.readMem(0xd45b));
        // 05 010B
        gbc.setState(0x9d69, 0x6ce2, 0x4af0, 0xaabd, 0x2f5f, 0xb334, 0x0, 0x1);
        gbc.writeMem(0x9d69, { 0x5 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x6ce2, gbc.sp());
        EXPECT(0x9d6a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5, gbc.readMem(0x9d69));
        // 05 010C
        gbc.setState(0x9d, 0xe732, 0x9d00, 0xfbe6, 0x94b8, 0x734e, 0x1, 0x0);
        gbc.writeMem(0x9d, { 0x5 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0xe732, gbc.sp());
        EXPECT(0x9e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 05 010D
        gbc.setState(0xdb15, 0x5194, 0x9b20, 0x13d8, 0xa03e, 0x356c, 0x0, 0x0);
        gbc.writeMem(0xdb15, { 0x5 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x5194, gbc.sp());
        EXPECT(0xdb16, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5, gbc.readMem(0xdb15));
        // 05 010E
        gbc.setState(0x1892, 0xdde7, 0x6380, 0x2c77, 0xa134, 0x897b, 0x1, 0x0);
        gbc.writeMem(0x1892, { 0x5 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0xdde7, gbc.sp());
        EXPECT(0x1893, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 05 010F
        gbc.setState(0x56e1, 0x37d5, 0x4be0, 0xf6cc, 0x4298, 0x3de2, 0x0, 0x1);
        gbc.writeMem(0x56e1, { 0x5 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x37d5, gbc.sp());
        EXPECT(0x56e2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 05 0110
        gbc.setState(0x4df9, 0xa609, 0x81e0, 0x3271, 0xf00a, 0x95d9, 0x1, 0x0);
        gbc.writeMem(0x4df9, { 0x5 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0xa609, gbc.sp());
        EXPECT(0x4dfa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 05 0111
        gbc.setState(0x3997, 0x7736, 0x3270, 0x7576, 0x1881, 0xa083, 0x1, 0x0);
        gbc.writeMem(0x3997, { 0x5 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x7736, gbc.sp());
        EXPECT(0x3998, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 05 0112
        gbc.setState(0x3344, 0x4471, 0x46d0, 0xa947, 0x1c2e, 0x3eb5, 0x0, 0x1);
        gbc.writeMem(0x3344, { 0x5 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x4471, gbc.sp());
        EXPECT(0x3345, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 05 0113
        gbc.setState(0x11d7, 0xe095, 0x240, 0xe325, 0xc09e, 0x5ac8, 0x1, 0x1);
        gbc.writeMem(0x11d7, { 0x5 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0xe095, gbc.sp());
        EXPECT(0x11d8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 05 0114
        gbc.setState(0x6a9e, 0xcfa2, 0x6420, 0x3583, 0xc334, 0xf0fb, 0x1, 0x1);
        gbc.writeMem(0x6a9e, { 0x5 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0xcfa2, gbc.sp());
        EXPECT(0x6a9f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 05 0115
        gbc.setState(0x3105, 0x4dcc, 0xc200, 0xf038, 0xa8fa, 0x4c6b, 0x1, 0x0);
        gbc.writeMem(0x3105, { 0x5 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x4dcc, gbc.sp());
        EXPECT(0x3106, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 05 0116
        gbc.setState(0xae99, 0xc169, 0x1d10, 0x1f71, 0x5b4a, 0xf89b, 0x1, 0x0);
        gbc.writeMem(0xae99, { 0x5 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0xc169, gbc.sp());
        EXPECT(0xae9a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5, gbc.readMem(0xae99));
        // 05 0117
        gbc.setState(0x38bf, 0xc39e, 0x4ae0, 0x6f41, 0xce8a, 0x826a, 0x0, 0x1);
        gbc.writeMem(0x38bf, { 0x5 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0xc39e, gbc.sp());
        EXPECT(0x38c0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 05 0119
        gbc.setState(0x2e57, 0x6309, 0x4f60, 0x2bb3, 0x9aac, 0x4df8, 0x0, 0x0);
        gbc.writeMem(0x2e57, { 0x5 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x6309, gbc.sp());
        EXPECT(0x2e58, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 05 011A
        gbc.setState(0x8671, 0xa503, 0x42b0, 0x9c9c, 0x9a67, 0xb745, 0x1, 0x0);
        gbc.writeMem(0x8671, { 0x5 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0xa503, gbc.sp());
        EXPECT(0x8672, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5, gbc.readMem(0x8671));
        // 05 011B
        gbc.setState(0xcbda, 0xc5e5, 0xd080, 0x4dd8, 0xa0f5, 0x6507, 0x1, 0x0);
        gbc.writeMem(0xcbda, { 0x5 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0xc5e5, gbc.sp());
        EXPECT(0xcbdb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5, gbc.readMem(0xcbda));
        // 05 011C
        gbc.setState(0x1e44, 0x3e00, 0x6a80, 0xbe35, 0xd73c, 0x1bc4, 0x1, 0x0);
        gbc.writeMem(0x1e44, { 0x5 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x3e00, gbc.sp());
        EXPECT(0x1e45, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 05 011D
        gbc.setState(0xef4f, 0x11bf, 0xdac0, 0xd25b, 0x4ffd, 0x21f6, 0x1, 0x1);
        gbc.writeMem(0xef4f, { 0x5 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x11bf, gbc.sp());
        EXPECT(0xef50, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5, gbc.readMem(0xef4f));
        // 05 011E
        gbc.setState(0xca03, 0x1c04, 0x1a80, 0x52bc, 0xbc69, 0xa136, 0x1, 0x1);
        gbc.writeMem(0xca03, { 0x5 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x1c04, gbc.sp());
        EXPECT(0xca04, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5, gbc.readMem(0xca03));
        // 05 011F
        gbc.setState(0x757d, 0xb95e, 0x1e00, 0x5934, 0xf4f9, 0xcc36, 0x0, 0x0);
        gbc.writeMem(0x757d, { 0x5 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0xb95e, gbc.sp());
        EXPECT(0x757e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 05 0120
        gbc.setState(0xb38e, 0x2ab, 0x3f00, 0x29d8, 0x4f30, 0x777f, 0x0, 0x0);
        gbc.writeMem(0xb38e, { 0x5 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x2ab, gbc.sp());
        EXPECT(0xb38f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5, gbc.readMem(0xb38e));
        // 05 0121
        gbc.setState(0x9435, 0xfcac, 0x80a0, 0xb5b4, 0x999a, 0x1729, 0x0, 0x1);
        gbc.writeMem(0x9435, { 0x5 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0xfcac, gbc.sp());
        EXPECT(0x9436, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5, gbc.readMem(0x9435));
        // 05 0122
        gbc.setState(0x207b, 0xaeca, 0x9de0, 0x50d9, 0xf793, 0x1cd2, 0x1, 0x1);
        gbc.writeMem(0x207b, { 0x5 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0xaeca, gbc.sp());
        EXPECT(0x207c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 05 0123
        gbc.setState(0x7317, 0x9c55, 0xe910, 0xd348, 0x4482, 0x68f3, 0x1, 0x0);
        gbc.writeMem(0x7317, { 0x5 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x9c55, gbc.sp());
        EXPECT(0x7318, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 05 0124
        gbc.setState(0x5686, 0xe03e, 0xeb80, 0xee34, 0xf985, 0x5a3c, 0x0, 0x1);
        gbc.writeMem(0x5686, { 0x5 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0xe03e, gbc.sp());
        EXPECT(0x5687, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 05 0126
        gbc.setState(0xbc32, 0x5055, 0x9d30, 0x83a5, 0xce17, 0x6d1, 0x0, 0x1);
        gbc.writeMem(0xbc32, { 0x5 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x5055, gbc.sp());
        EXPECT(0xbc33, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5, gbc.readMem(0xbc32));
        // 05 0127
        gbc.setState(0x1b73, 0xf340, 0xd800, 0xca8c, 0xfc69, 0x648f, 0x0, 0x0);
        gbc.writeMem(0x1b73, { 0x5 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0xf340, gbc.sp());
        EXPECT(0x1b74, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 05 0128
        gbc.setState(0x6ba8, 0xd5c, 0x610, 0x1dad, 0xe45d, 0xf7e, 0x0, 0x0);
        gbc.writeMem(0x6ba8, { 0x5 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0xd5c, gbc.sp());
        EXPECT(0x6ba9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 05 0129
        gbc.setState(0xccd4, 0x214f, 0x9530, 0x66b3, 0x9fa1, 0x8955, 0x1, 0x0);
        gbc.writeMem(0xccd4, { 0x5 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x214f, gbc.sp());
        EXPECT(0xccd5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5, gbc.readMem(0xccd4));
        // 05 012A
        gbc.setState(0x2f1f, 0x6e13, 0x5fa0, 0xe700, 0xbf70, 0x8a74, 0x1, 0x1);
        gbc.writeMem(0x2f1f, { 0x5 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x6e13, gbc.sp());
        EXPECT(0x2f20, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 05 012B
        gbc.setState(0xae2f, 0x682a, 0x6880, 0x8aa2, 0x2d52, 0xe1d7, 0x1, 0x0);
        gbc.writeMem(0xae2f, { 0x5 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0x682a, gbc.sp());
        EXPECT(0xae30, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5, gbc.readMem(0xae2f));
        // 05 012C
        gbc.setState(0xa98a, 0xec5f, 0xce0, 0x1cba, 0xb699, 0xf019, 0x1, 0x0);
        gbc.writeMem(0xa98a, { 0x5 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0xec5f, gbc.sp());
        EXPECT(0xa98b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5, gbc.readMem(0xa98a));
        // 05 012D
        gbc.setState(0xd04b, 0xd9c0, 0xf5c0, 0x8482, 0x8956, 0xd9fc, 0x0, 0x0);
        gbc.writeMem(0xd04b, { 0x5 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0xd9c0, gbc.sp());
        EXPECT(0xd04c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5, gbc.readMem(0xd04b));
        // 05 012E
        gbc.setState(0xc995, 0xff78, 0xf670, 0x8b78, 0xec59, 0x6e96, 0x1, 0x0);
        gbc.writeMem(0xc995, { 0x5 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0xff78, gbc.sp());
        EXPECT(0xc996, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5, gbc.readMem(0xc995));
        // 05 012F
        gbc.setState(0xaaff, 0xea60, 0x4ee0, 0xdc31, 0x47ce, 0x520b, 0x0, 0x0);
        gbc.writeMem(0xaaff, { 0x5 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0xea60, gbc.sp());
        EXPECT(0xab00, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5, gbc.readMem(0xaaff));
        // 05 0131
        gbc.setState(0xd54e, 0x3696, 0x3e90, 0xa704, 0xd577, 0x58cc, 0x0, 0x1);
        gbc.writeMem(0xd54e, { 0x5 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x3696, gbc.sp());
        EXPECT(0xd54f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5, gbc.readMem(0xd54e));
        // 05 0132
        gbc.setState(0xd978, 0x32b6, 0x8510, 0xd10b, 0x94cb, 0xba3c, 0x0, 0x1);
        gbc.writeMem(0xd978, { 0x5 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x32b6, gbc.sp());
        EXPECT(0xd979, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5, gbc.readMem(0xd978));
        // 05 0133
        gbc.setState(0x3015, 0x5675, 0xfac0, 0x2add, 0x1ea4, 0xd541, 0x1, 0x0);
        gbc.writeMem(0x3015, { 0x5 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x5675, gbc.sp());
        EXPECT(0x3016, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 05 0134
        gbc.setState(0x5b4, 0x3d82, 0xc980, 0xa3f1, 0x5b2b, 0x38f2, 0x1, 0x0);
        gbc.writeMem(0x5b4, { 0x5 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x3d82, gbc.sp());
        EXPECT(0x5b5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 05 0135
        gbc.setState(0x6d99, 0x445c, 0x50b0, 0xa69e, 0x763d, 0xb168, 0x0, 0x1);
        gbc.writeMem(0x6d99, { 0x5 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x445c, gbc.sp());
        EXPECT(0x6d9a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 05 0136
        gbc.setState(0x1c5c, 0x8884, 0xabf0, 0xf835, 0x7813, 0x97a6, 0x1, 0x1);
        gbc.writeMem(0x1c5c, { 0x5 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x8884, gbc.sp());
        EXPECT(0x1c5d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 05 0137
        gbc.setState(0x5d78, 0x5d28, 0x1750, 0x36ca, 0xdb53, 0xb170, 0x0, 0x1);
        gbc.writeMem(0x5d78, { 0x5 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x5d28, gbc.sp());
        EXPECT(0x5d79, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 05 0139
        gbc.setState(0x24fe, 0x2957, 0x5df0, 0x2087, 0xb38c, 0x3159, 0x1, 0x0);
        gbc.writeMem(0x24fe, { 0x5 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x2957, gbc.sp());
        EXPECT(0x24ff, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 05 013A
        gbc.setState(0x6272, 0x152b, 0x9310, 0xebea, 0x86ab, 0xf274, 0x0, 0x0);
        gbc.writeMem(0x6272, { 0x5 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x152b, gbc.sp());
        EXPECT(0x6273, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 05 013B
        gbc.setState(0x5dba, 0xd20d, 0x8350, 0xefb9, 0xd0cf, 0x1e73, 0x1, 0x1);
        gbc.writeMem(0x5dba, { 0x5 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0xd20d, gbc.sp());
        EXPECT(0x5dbb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 05 013C
        gbc.setState(0xd5a4, 0x324a, 0x4680, 0xc76b, 0xc13a, 0x8ba5, 0x0, 0x1);
        gbc.writeMem(0xd5a4, { 0x5 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x324a, gbc.sp());
        EXPECT(0xd5a5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5, gbc.readMem(0xd5a4));
        // 05 013D
        gbc.setState(0x10a7, 0x6ec9, 0x9050, 0xf058, 0xc191, 0x7e96, 0x0, 0x0);
        gbc.writeMem(0x10a7, { 0x5 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x6ec9, gbc.sp());
        EXPECT(0x10a8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 05 013E
        gbc.setState(0x6e7, 0x9df, 0x3980, 0xd0b0, 0x7b45, 0xe50d, 0x1, 0x0);
        gbc.writeMem(0x6e7, { 0x5 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x9df, gbc.sp());
        EXPECT(0x6e8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 05 0140
        gbc.setState(0xdbb8, 0x9690, 0x4e80, 0xe36a, 0xceba, 0x2cb8, 0x0, 0x0);
        gbc.writeMem(0xdbb8, { 0x5 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x9690, gbc.sp());
        EXPECT(0xdbb9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5, gbc.readMem(0xdbb8));
        // 05 0141
        gbc.setState(0xc33a, 0x71f7, 0x8620, 0xd40a, 0x9e64, 0x53a5, 0x1, 0x1);
        gbc.writeMem(0xc33a, { 0x5 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x71f7, gbc.sp());
        EXPECT(0xc33b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5, gbc.readMem(0xc33a));
        // 05 0142
        gbc.setState(0xefc2, 0x3516, 0x87e0, 0xecdb, 0x33a2, 0x4f65, 0x0, 0x0);
        gbc.writeMem(0xefc2, { 0x5 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x3516, gbc.sp());
        EXPECT(0xefc3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5, gbc.readMem(0xefc2));
        // 05 0143
        gbc.setState(0x2454, 0x29bf, 0x3920, 0x3b4c, 0x85, 0xc33a, 0x0, 0x0);
        gbc.writeMem(0x2454, { 0x5 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x29bf, gbc.sp());
        EXPECT(0x2455, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 05 0144
        gbc.setState(0x4d41, 0x3c34, 0x48b0, 0x6879, 0xd3da, 0xbd31, 0x0, 0x1);
        gbc.writeMem(0x4d41, { 0x5 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x3c34, gbc.sp());
        EXPECT(0x4d42, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 05 0145
        gbc.setState(0xa3a8, 0x5c9e, 0xa960, 0xeab0, 0xb2d7, 0x577, 0x0, 0x1);
        gbc.writeMem(0xa3a8, { 0x5 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x5c9e, gbc.sp());
        EXPECT(0xa3a9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5, gbc.readMem(0xa3a8));
        // 05 0146
        gbc.setState(0x2c89, 0x3c35, 0x9a80, 0xb6c3, 0xdb13, 0x7f34, 0x0, 0x0);
        gbc.writeMem(0x2c89, { 0x5 });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x3c35, gbc.sp());
        EXPECT(0x2c8a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 05 0147
        gbc.setState(0xd288, 0x13, 0x6980, 0x3a73, 0x5069, 0x7e23, 0x0, 0x1);
        gbc.writeMem(0xd288, { 0x5 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x13, gbc.sp());
        EXPECT(0xd289, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5, gbc.readMem(0xd288));
        // 05 0148
        gbc.setState(0x7ee3, 0x5754, 0x9810, 0xd64, 0xdb8e, 0xb2ae, 0x0, 0x0);
        gbc.writeMem(0x7ee3, { 0x5 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0x5754, gbc.sp());
        EXPECT(0x7ee4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 05 0149
        gbc.setState(0x47a2, 0x205d, 0x6150, 0x4282, 0xd884, 0x5b6b, 0x1, 0x1);
        gbc.writeMem(0x47a2, { 0x5 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x205d, gbc.sp());
        EXPECT(0x47a3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 05 014A
        gbc.setState(0xcfaa, 0xcaa7, 0xb000, 0x58f2, 0xec8d, 0x3f6, 0x1, 0x1);
        gbc.writeMem(0xcfaa, { 0x5 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0xcaa7, gbc.sp());
        EXPECT(0xcfab, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5, gbc.readMem(0xcfaa));
        // 05 014B
        gbc.setState(0xd395, 0x33fb, 0x5fe0, 0xc0ec, 0xb475, 0xdcf2, 0x1, 0x0);
        gbc.writeMem(0xd395, { 0x5 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x33fb, gbc.sp());
        EXPECT(0xd396, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5, gbc.readMem(0xd395));
        // 05 014C
        gbc.setState(0x8d5b, 0x2636, 0x74a0, 0x89d5, 0x7022, 0x26bb, 0x1, 0x1);
        gbc.writeMem(0x8d5b, { 0x5 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x2636, gbc.sp());
        EXPECT(0x8d5c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5, gbc.readMem(0x8d5b));
        // 05 014D
        gbc.setState(0x3875, 0x924d, 0x14c0, 0x258, 0xb8f6, 0xce01, 0x1, 0x0);
        gbc.writeMem(0x3875, { 0x5 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x924d, gbc.sp());
        EXPECT(0x3876, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 05 014E
        gbc.setState(0x2721, 0x6ba3, 0xd30, 0xc76c, 0x2d71, 0xc0cc, 0x0, 0x0);
        gbc.writeMem(0x2721, { 0x5 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x6ba3, gbc.sp());
        EXPECT(0x2722, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 05 014F
        gbc.setState(0x9c16, 0xfd9a, 0x60e0, 0x3f6d, 0x1c1c, 0xdd4e, 0x0, 0x0);
        gbc.writeMem(0x9c16, { 0x5 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0xfd9a, gbc.sp());
        EXPECT(0x9c17, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5, gbc.readMem(0x9c16));
        // 05 0150
        gbc.setState(0xd9a, 0x11e3, 0x78d0, 0xa794, 0x2818, 0xa82d, 0x0, 0x1);
        gbc.writeMem(0xd9a, { 0x5 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x11e3, gbc.sp());
        EXPECT(0xd9b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 05 0151
        gbc.setState(0x3400, 0x2be8, 0x9740, 0xa934, 0xd0c7, 0x7ea7, 0x1, 0x0);
        gbc.writeMem(0x3400, { 0x5 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x2be8, gbc.sp());
        EXPECT(0x3401, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 05 0152
        gbc.setState(0x8d88, 0x10d5, 0x32f0, 0xf9a0, 0x3a04, 0x59c3, 0x1, 0x0);
        gbc.writeMem(0x8d88, { 0x5 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x10d5, gbc.sp());
        EXPECT(0x8d89, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5, gbc.readMem(0x8d88));
        // 05 0153
        gbc.setState(0x899d, 0xbedd, 0x4690, 0x1c17, 0x7b51, 0x6a66, 0x0, 0x1);
        gbc.writeMem(0x899d, { 0x5 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0xbedd, gbc.sp());
        EXPECT(0x899e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5, gbc.readMem(0x899d));
        // 05 0154
        gbc.setState(0x22d0, 0x8354, 0xd2f0, 0x9c4a, 0x537, 0x97f9, 0x0, 0x1);
        gbc.writeMem(0x22d0, { 0x5 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x8354, gbc.sp());
        EXPECT(0x22d1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 05 0155
        gbc.setState(0x6bcb, 0xd349, 0x2630, 0x7dc4, 0xf7da, 0x64e6, 0x1, 0x1);
        gbc.writeMem(0x6bcb, { 0x5 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0xd349, gbc.sp());
        EXPECT(0x6bcc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 05 0156
        gbc.setState(0x3f66, 0x7194, 0x82a0, 0xc5cc, 0x4c6d, 0x3f7c, 0x1, 0x1);
        gbc.writeMem(0x3f66, { 0x5 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x7194, gbc.sp());
        EXPECT(0x3f67, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 05 0157
        gbc.setState(0x362b, 0x775, 0x3b0, 0x9f0f, 0xac8, 0x9e9a, 0x0, 0x1);
        gbc.writeMem(0x362b, { 0x5 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x775, gbc.sp());
        EXPECT(0x362c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 05 0158
        gbc.setState(0x753, 0xb42a, 0x3d80, 0x40ff, 0x81c9, 0x4275, 0x1, 0x0);
        gbc.writeMem(0x753, { 0x5 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0xb42a, gbc.sp());
        EXPECT(0x754, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 05 0159
        gbc.setState(0x32d0, 0xcd07, 0x37b0, 0x143c, 0x7ff7, 0xb789, 0x1, 0x1);
        gbc.writeMem(0x32d0, { 0x5 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0xcd07, gbc.sp());
        EXPECT(0x32d1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 05 015A
        gbc.setState(0x803a, 0x9fc0, 0xf4f0, 0x2203, 0x79a6, 0xe549, 0x1, 0x1);
        gbc.writeMem(0x803a, { 0x5 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x9fc0, gbc.sp());
        EXPECT(0x803b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5, gbc.readMem(0x803a));
        // 05 015B
        gbc.setState(0x8be2, 0x3890, 0x2700, 0xc292, 0x76f7, 0x6100, 0x1, 0x1);
        gbc.writeMem(0x8be2, { 0x5 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x3890, gbc.sp());
        EXPECT(0x8be3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5, gbc.readMem(0x8be2));
        // 05 015C
        gbc.setState(0x9e04, 0x2c1c, 0x1c40, 0x587f, 0x258d, 0xfc6c, 0x1, 0x0);
        gbc.writeMem(0x9e04, { 0x5 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x2c1c, gbc.sp());
        EXPECT(0x9e05, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5, gbc.readMem(0x9e04));
        // 05 015D
        gbc.setState(0x26b, 0x43c2, 0xf150, 0x3348, 0x6882, 0xf3bc, 0x0, 0x1);
        gbc.writeMem(0x26b, { 0x5 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x43c2, gbc.sp());
        EXPECT(0x26c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 05 015E
        gbc.setState(0xed99, 0xc602, 0xd510, 0x50e6, 0x4e80, 0x5f67, 0x0, 0x1);
        gbc.writeMem(0xed99, { 0x5 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0xc602, gbc.sp());
        EXPECT(0xed9a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5, gbc.readMem(0xed99));
        // 05 015F
        gbc.setState(0x5885, 0x8604, 0x4100, 0x2853, 0x7fc1, 0xd190, 0x1, 0x1);
        gbc.writeMem(0x5885, { 0x5 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x8604, gbc.sp());
        EXPECT(0x5886, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 05 0160
        gbc.setState(0x7af8, 0xa504, 0x5540, 0x1078, 0x261b, 0xd0f0, 0x1, 0x0);
        gbc.writeMem(0x7af8, { 0x5 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0xa504, gbc.sp());
        EXPECT(0x7af9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 05 0161
        gbc.setState(0x5993, 0x7258, 0xffc0, 0xeb6e, 0xb6c7, 0x510b, 0x0, 0x0);
        gbc.writeMem(0x5993, { 0x5 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x7258, gbc.sp());
        EXPECT(0x5994, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 05 0162
        gbc.setState(0x233, 0xd5a2, 0xdd90, 0x7e2e, 0xabbc, 0xb7d9, 0x0, 0x0);
        gbc.writeMem(0x233, { 0x5 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0xd5a2, gbc.sp());
        EXPECT(0x234, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 05 0163
        gbc.setState(0xd127, 0x5c8a, 0x260, 0x50e, 0xe501, 0xfed8, 0x1, 0x0);
        gbc.writeMem(0xd127, { 0x5 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x5c8a, gbc.sp());
        EXPECT(0xd128, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5, gbc.readMem(0xd127));
        // 05 0164
        gbc.setState(0x98cb, 0x406b, 0xd130, 0xf1a9, 0xd628, 0xd88f, 0x1, 0x0);
        gbc.writeMem(0x98cb, { 0x5 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x406b, gbc.sp());
        EXPECT(0x98cc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5, gbc.readMem(0x98cb));
        // 05 0165
        gbc.setState(0xcdca, 0xf5c5, 0xeae0, 0xf6c7, 0x91c1, 0x520a, 0x0, 0x0);
        gbc.writeMem(0xcdca, { 0x5 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0xf5c5, gbc.sp());
        EXPECT(0xcdcb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5, gbc.readMem(0xcdca));
        // 05 0166
        gbc.setState(0x46fc, 0xf9ab, 0xf240, 0x145d, 0xca35, 0xfc9d, 0x0, 0x1);
        gbc.writeMem(0x46fc, { 0x5 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0xf9ab, gbc.sp());
        EXPECT(0x46fd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 05 0167
        gbc.setState(0x3a04, 0x351f, 0x9650, 0xf7a6, 0xe9fb, 0xd5f4, 0x1, 0x0);
        gbc.writeMem(0x3a04, { 0x5 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x351f, gbc.sp());
        EXPECT(0x3a05, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 05 0168
        gbc.setState(0x1d65, 0x37d3, 0x200, 0xd494, 0xa136, 0x6e03, 0x1, 0x1);
        gbc.writeMem(0x1d65, { 0x5 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x37d3, gbc.sp());
        EXPECT(0x1d66, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 05 0169
        gbc.setState(0xe9da, 0x682e, 0x2030, 0x1bb0, 0x7e63, 0x2677, 0x0, 0x0);
        gbc.writeMem(0xe9da, { 0x5 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x682e, gbc.sp());
        EXPECT(0xe9db, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5, gbc.readMem(0xe9da));
        // 05 016A
        gbc.setState(0xefe7, 0xcf1b, 0x9ee0, 0x7a76, 0x4132, 0x1492, 0x1, 0x1);
        gbc.writeMem(0xefe7, { 0x5 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0xcf1b, gbc.sp());
        EXPECT(0xefe8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5, gbc.readMem(0xefe7));
        // 05 016B
        gbc.setState(0x9625, 0xe52f, 0xaab0, 0xf19d, 0xbd55, 0x42d2, 0x0, 0x0);
        gbc.writeMem(0x9625, { 0x5 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0xe52f, gbc.sp());
        EXPECT(0x9626, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5, gbc.readMem(0x9625));
        // 05 016C
        gbc.setState(0x365, 0xfec2, 0x9a00, 0x73ee, 0x48c7, 0xddeb, 0x0, 0x0);
        gbc.writeMem(0x365, { 0x5 });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0xfec2, gbc.sp());
        EXPECT(0x366, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 05 016D
        gbc.setState(0x5425, 0xf824, 0x190, 0xcba5, 0xed74, 0x79f6, 0x0, 0x0);
        gbc.writeMem(0x5425, { 0x5 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0xf824, gbc.sp());
        EXPECT(0x5426, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 05 016E
        gbc.setState(0xc9a5, 0x124, 0xf4a0, 0x896, 0xbf4b, 0xe992, 0x0, 0x0);
        gbc.writeMem(0xc9a5, { 0x5 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x124, gbc.sp());
        EXPECT(0xc9a6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5, gbc.readMem(0xc9a5));
        // 05 016F
        gbc.setState(0x3549, 0x623, 0x3af0, 0x4707, 0x603c, 0x7d31, 0x1, 0x0);
        gbc.writeMem(0x3549, { 0x5 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x623, gbc.sp());
        EXPECT(0x354a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 05 0170
        gbc.setState(0x3732, 0x88ce, 0xa890, 0xf0c4, 0x1a8e, 0x822a, 0x1, 0x1);
        gbc.writeMem(0x3732, { 0x5 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x88ce, gbc.sp());
        EXPECT(0x3733, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 05 0171
        gbc.setState(0x7d22, 0xe15b, 0xef40, 0xbe13, 0x72c2, 0xcca9, 0x0, 0x1);
        gbc.writeMem(0x7d22, { 0x5 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0xe15b, gbc.sp());
        EXPECT(0x7d23, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 05 0172
        gbc.setState(0xba2e, 0xd960, 0x3660, 0xc352, 0x64e2, 0xab7d, 0x1, 0x0);
        gbc.writeMem(0xba2e, { 0x5 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0xd960, gbc.sp());
        EXPECT(0xba2f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5, gbc.readMem(0xba2e));
        // 05 0173
        gbc.setState(0x2966, 0xba96, 0xc5e0, 0x56fa, 0x4646, 0xa6cc, 0x0, 0x1);
        gbc.writeMem(0x2966, { 0x5 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0xba96, gbc.sp());
        EXPECT(0x2967, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 05 0175
        gbc.setState(0x8710, 0xb9e1, 0x6320, 0xfc4f, 0x5d29, 0x5d20, 0x1, 0x0);
        gbc.writeMem(0x8710, { 0x5 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0xb9e1, gbc.sp());
        EXPECT(0x8711, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5, gbc.readMem(0x8710));
        // 05 0176
        gbc.setState(0xe1f2, 0xae7f, 0x80c0, 0xe9b6, 0x800, 0x494a, 0x0, 0x0);
        gbc.writeMem(0xe1f2, { 0x5 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0xae7f, gbc.sp());
        EXPECT(0xe1f3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5, gbc.readMem(0xe1f2));
        // 05 0177
        gbc.setState(0x983a, 0x5dd8, 0xcb40, 0x499f, 0x375b, 0x407e, 0x0, 0x1);
        gbc.writeMem(0x983a, { 0x5 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0x5dd8, gbc.sp());
        EXPECT(0x983b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5, gbc.readMem(0x983a));
        // 05 0178
        gbc.setState(0x4809, 0xb441, 0xd7f0, 0x9195, 0xf5bb, 0x9088, 0x0, 0x0);
        gbc.writeMem(0x4809, { 0x5 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0xb441, gbc.sp());
        EXPECT(0x480a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 05 0179
        gbc.setState(0xc830, 0x3fb1, 0x9f90, 0xca0, 0x974f, 0x4314, 0x1, 0x1);
        gbc.writeMem(0xc830, { 0x5 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x3fb1, gbc.sp());
        EXPECT(0xc831, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5, gbc.readMem(0xc830));
        // 05 017B
        gbc.setState(0x7f1a, 0x8206, 0x27f0, 0x1c17, 0x77fb, 0x44ce, 0x1, 0x1);
        gbc.writeMem(0x7f1a, { 0x5 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x8206, gbc.sp());
        EXPECT(0x7f1b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 05 017C
        gbc.setState(0xade2, 0x27c0, 0x29b0, 0xda52, 0x8f67, 0x96f6, 0x0, 0x0);
        gbc.writeMem(0xade2, { 0x5 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x27c0, gbc.sp());
        EXPECT(0xade3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5, gbc.readMem(0xade2));
        // 05 017D
        gbc.setState(0xe098, 0xe97, 0x2dc0, 0x45d7, 0x6ba0, 0xfe60, 0x1, 0x0);
        gbc.writeMem(0xe098, { 0x5 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0xe97, gbc.sp());
        EXPECT(0xe099, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5, gbc.readMem(0xe098));
        // 05 017F
        gbc.setState(0x1cf0, 0x4897, 0x21f0, 0x353e, 0x42f4, 0xad84, 0x1, 0x1);
        gbc.writeMem(0x1cf0, { 0x5 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x4897, gbc.sp());
        EXPECT(0x1cf1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 05 0180
        gbc.setState(0xa8c6, 0x7b88, 0x1430, 0x32e5, 0x3ebf, 0xe52c, 0x0, 0x1);
        gbc.writeMem(0xa8c6, { 0x5 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x7b88, gbc.sp());
        EXPECT(0xa8c7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5, gbc.readMem(0xa8c6));
        // 05 0181
        gbc.setState(0x7300, 0xb23e, 0x5c10, 0x9bf3, 0xb8dc, 0xa9d5, 0x1, 0x0);
        gbc.writeMem(0x7300, { 0x5 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0xb23e, gbc.sp());
        EXPECT(0x7301, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 05 0182
        gbc.setState(0xb63d, 0x890f, 0x4890, 0x1c20, 0x4c74, 0xb3d2, 0x0, 0x0);
        gbc.writeMem(0xb63d, { 0x5 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x890f, gbc.sp());
        EXPECT(0xb63e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5, gbc.readMem(0xb63d));
        // 05 0183
        gbc.setState(0x728d, 0x2577, 0x3b60, 0x4abc, 0xfaa0, 0xa29b, 0x0, 0x1);
        gbc.writeMem(0x728d, { 0x5 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x2577, gbc.sp());
        EXPECT(0x728e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 05 0184
        gbc.setState(0xd86, 0x993f, 0x2d80, 0x5886, 0xa13a, 0xafce, 0x1, 0x1);
        gbc.writeMem(0xd86, { 0x5 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x993f, gbc.sp());
        EXPECT(0xd87, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 05 0185
        gbc.setState(0x7c4, 0xb965, 0xcc50, 0xdcad, 0x72bc, 0xa929, 0x1, 0x1);
        gbc.writeMem(0x7c4, { 0x5 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0xb965, gbc.sp());
        EXPECT(0x7c5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 05 0186
        gbc.setState(0xe6fa, 0xf6e6, 0xe110, 0xc41f, 0x2156, 0x38a6, 0x0, 0x1);
        gbc.writeMem(0xe6fa, { 0x5 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0xf6e6, gbc.sp());
        EXPECT(0xe6fb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5, gbc.readMem(0xe6fa));
        // 05 0187
        gbc.setState(0x1c82, 0xc508, 0xd8c0, 0xf987, 0x9817, 0xc675, 0x0, 0x1);
        gbc.writeMem(0x1c82, { 0x5 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0xc508, gbc.sp());
        EXPECT(0x1c83, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 05 018A
        gbc.setState(0xb569, 0xe739, 0xc4c0, 0x85ac, 0x46b7, 0x92fa, 0x1, 0x0);
        gbc.writeMem(0xb569, { 0x5 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0xe739, gbc.sp());
        EXPECT(0xb56a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5, gbc.readMem(0xb569));
        // 05 018B
        gbc.setState(0xd000, 0x8d08, 0x4910, 0x7b3c, 0x1786, 0xce06, 0x0, 0x0);
        gbc.writeMem(0xd000, { 0x5 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x8d08, gbc.sp());
        EXPECT(0xd001, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5, gbc.readMem(0xd000));
        // 05 018C
        gbc.setState(0x4dcb, 0xb0ba, 0xdd30, 0xd1a3, 0x2315, 0xfafc, 0x1, 0x0);
        gbc.writeMem(0x4dcb, { 0x5 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0xb0ba, gbc.sp());
        EXPECT(0x4dcc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 05 018D
        gbc.setState(0xd45b, 0xb53d, 0x6820, 0x3880, 0xbe84, 0xe00d, 0x1, 0x1);
        gbc.writeMem(0xd45b, { 0x5 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0xb53d, gbc.sp());
        EXPECT(0xd45c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5, gbc.readMem(0xd45b));
        // 05 018F
        gbc.setState(0x96ee, 0xfe56, 0x20d0, 0x9d11, 0xe331, 0x7b2d, 0x1, 0x0);
        gbc.writeMem(0x96ee, { 0x5 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0xfe56, gbc.sp());
        EXPECT(0x96ef, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5, gbc.readMem(0x96ee));
        // 05 0190
        gbc.setState(0x4f1, 0x977a, 0x4610, 0x959b, 0x56e5, 0xc4d7, 0x1, 0x1);
        gbc.writeMem(0x4f1, { 0x5 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0x977a, gbc.sp());
        EXPECT(0x4f2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 05 0191
        gbc.setState(0xe85e, 0xcb5f, 0x290, 0xe94e, 0xc1ec, 0xf39b, 0x0, 0x1);
        gbc.writeMem(0xe85e, { 0x5 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0xcb5f, gbc.sp());
        EXPECT(0xe85f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5, gbc.readMem(0xe85e));
        // 05 0192
        gbc.setState(0x3b34, 0x8a81, 0x3640, 0xf971, 0xc11d, 0xfe59, 0x0, 0x1);
        gbc.writeMem(0x3b34, { 0x5 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x8a81, gbc.sp());
        EXPECT(0x3b35, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 05 0193
        gbc.setState(0x1ad8, 0xe999, 0x1370, 0x5e30, 0x1f84, 0x8395, 0x0, 0x0);
        gbc.writeMem(0x1ad8, { 0x5 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0xe999, gbc.sp());
        EXPECT(0x1ad9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 05 0194
        gbc.setState(0x4a06, 0x2ae2, 0xc890, 0xad25, 0x2cba, 0x83a3, 0x1, 0x0);
        gbc.writeMem(0x4a06, { 0x5 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0x2ae2, gbc.sp());
        EXPECT(0x4a07, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 05 0195
        gbc.setState(0xc02b, 0xd760, 0xed00, 0x7a4e, 0x31a3, 0x4e1a, 0x1, 0x1);
        gbc.writeMem(0xc02b, { 0x5 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0xd760, gbc.sp());
        EXPECT(0xc02c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5, gbc.readMem(0xc02b));
        // 05 0197
        gbc.setState(0x7ff5, 0x3ba2, 0x2a40, 0xe9eb, 0x1ba8, 0x4449, 0x0, 0x0);
        gbc.writeMem(0x7ff5, { 0x5 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x3ba2, gbc.sp());
        EXPECT(0x7ff6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 05 0198
        gbc.setState(0xed5a, 0x5920, 0x360, 0xb938, 0xc990, 0x5ca2, 0x0, 0x0);
        gbc.writeMem(0xed5a, { 0x5 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x5920, gbc.sp());
        EXPECT(0xed5b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5, gbc.readMem(0xed5a));
        // 05 0199
        gbc.setState(0x98c4, 0xa407, 0xe680, 0x1c1f, 0x99bf, 0x999e, 0x0, 0x1);
        gbc.writeMem(0x98c4, { 0x5 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0xa407, gbc.sp());
        EXPECT(0x98c5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5, gbc.readMem(0x98c4));
        // 05 019A
        gbc.setState(0xdec1, 0x493f, 0x8c60, 0xd7fa, 0x913b, 0x6403, 0x1, 0x0);
        gbc.writeMem(0xdec1, { 0x5 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x493f, gbc.sp());
        EXPECT(0xdec2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5, gbc.readMem(0xdec1));
        // 05 019B
        gbc.setState(0x62e7, 0x28a4, 0x4750, 0xf6ee, 0xc656, 0x693d, 0x1, 0x0);
        gbc.writeMem(0x62e7, { 0x5 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x28a4, gbc.sp());
        EXPECT(0x62e8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 05 019C
        gbc.setState(0x534b, 0xf185, 0xeba0, 0x1298, 0xfd3c, 0xd17a, 0x1, 0x0);
        gbc.writeMem(0x534b, { 0x5 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0xf185, gbc.sp());
        EXPECT(0x534c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 05 019D
        gbc.setState(0x91cc, 0xfcd2, 0xb360, 0x86ec, 0x9325, 0xf23, 0x0, 0x0);
        gbc.writeMem(0x91cc, { 0x5 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0xfcd2, gbc.sp());
        EXPECT(0x91cd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5, gbc.readMem(0x91cc));
        // 05 019E
        gbc.setState(0x1dd2, 0x8a07, 0x5c70, 0x69d7, 0xf082, 0xa7ed, 0x1, 0x1);
        gbc.writeMem(0x1dd2, { 0x5 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x8a07, gbc.sp());
        EXPECT(0x1dd3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 05 019F
        gbc.setState(0x3ecc, 0xdf6c, 0x6b60, 0xaf40, 0xeee5, 0xdc4c, 0x0, 0x0);
        gbc.writeMem(0x3ecc, { 0x5 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0xdf6c, gbc.sp());
        EXPECT(0x3ecd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 05 01A3
        gbc.setState(0x7b58, 0xb96, 0x400, 0xaacf, 0xd1ee, 0xcb79, 0x0, 0x1);
        gbc.writeMem(0x7b58, { 0x5 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0xb96, gbc.sp());
        EXPECT(0x7b59, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 05 01A4
        gbc.setState(0xbfa4, 0x5c1, 0x4900, 0x963, 0x932c, 0x2247, 0x0, 0x1);
        gbc.writeMem(0xbfa4, { 0x5 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x5c1, gbc.sp());
        EXPECT(0xbfa5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5, gbc.readMem(0xbfa4));
        // 05 01A5
        gbc.setState(0xe37a, 0x814e, 0xccf0, 0x8852, 0xaa0e, 0x26ef, 0x1, 0x1);
        gbc.writeMem(0xe37a, { 0x5 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x814e, gbc.sp());
        EXPECT(0xe37b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5, gbc.readMem(0xe37a));
        // 05 01A7
        gbc.setState(0x8b6b, 0x88db, 0xf9e0, 0xa56c, 0x8917, 0x1c56, 0x1, 0x1);
        gbc.writeMem(0x8b6b, { 0x5 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0x88db, gbc.sp());
        EXPECT(0x8b6c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5, gbc.readMem(0x8b6b));
        // 05 01A8
        gbc.setState(0xb48, 0x83fa, 0xaa30, 0x9f3c, 0x1cbb, 0xe519, 0x0, 0x0);
        gbc.writeMem(0xb48, { 0x5 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x83fa, gbc.sp());
        EXPECT(0xb49, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 05 01A9
        gbc.setState(0xa26, 0x617f, 0xa1f0, 0x5287, 0x2c80, 0xe47e, 0x1, 0x0);
        gbc.writeMem(0xa26, { 0x5 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0x617f, gbc.sp());
        EXPECT(0xa27, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 05 01AA
        gbc.setState(0xdc30, 0xcb8c, 0xdce0, 0xd48c, 0x7727, 0x6813, 0x0, 0x1);
        gbc.writeMem(0xdc30, { 0x5 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0xcb8c, gbc.sp());
        EXPECT(0xdc31, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5, gbc.readMem(0xdc30));
        // 05 01AB
        gbc.setState(0xafdb, 0xd67d, 0xe430, 0x1169, 0xaf83, 0x8510, 0x0, 0x0);
        gbc.writeMem(0xafdb, { 0x5 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0xd67d, gbc.sp());
        EXPECT(0xafdc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5, gbc.readMem(0xafdb));
        // 05 01AD
        gbc.setState(0xe0e6, 0xffdc, 0x4f70, 0x276d, 0x9fdd, 0xf91d, 0x0, 0x1);
        gbc.writeMem(0xe0e6, { 0x5 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0xffdc, gbc.sp());
        EXPECT(0xe0e7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5, gbc.readMem(0xe0e6));
        // 05 01AE
        gbc.setState(0xec62, 0x257f, 0xd9b0, 0xf238, 0x131a, 0x924a, 0x1, 0x1);
        gbc.writeMem(0xec62, { 0x5 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x257f, gbc.sp());
        EXPECT(0xec63, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5, gbc.readMem(0xec62));
        // 05 01AF
        gbc.setState(0xa7c4, 0x5c19, 0xf720, 0x9932, 0xee4c, 0x3b45, 0x0, 0x0);
        gbc.writeMem(0xa7c4, { 0x5 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x5c19, gbc.sp());
        EXPECT(0xa7c5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5, gbc.readMem(0xa7c4));
        // 05 01B0
        gbc.setState(0xe27f, 0xa554, 0x4440, 0xe97a, 0xf423, 0xfc3f, 0x0, 0x0);
        gbc.writeMem(0xe27f, { 0x5 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0xa554, gbc.sp());
        EXPECT(0xe280, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5, gbc.readMem(0xe27f));
        // 05 01B1
        gbc.setState(0xe649, 0x7041, 0x9620, 0x8e6, 0xc747, 0xd60d, 0x1, 0x0);
        gbc.writeMem(0xe649, { 0x5 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x7041, gbc.sp());
        EXPECT(0xe64a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5, gbc.readMem(0xe649));
        // 05 01B3
        gbc.setState(0x8446, 0x7c39, 0x95b0, 0x4fc6, 0xe97c, 0xd798, 0x1, 0x1);
        gbc.writeMem(0x8446, { 0x5 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x7c39, gbc.sp());
        EXPECT(0x8447, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5, gbc.readMem(0x8446));
        // 05 01B4
        gbc.setState(0x8f14, 0x310f, 0x5320, 0x9049, 0xf0f1, 0x2f37, 0x0, 0x0);
        gbc.writeMem(0x8f14, { 0x5 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x310f, gbc.sp());
        EXPECT(0x8f15, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5, gbc.readMem(0x8f14));
        // 05 01B5
        gbc.setState(0xc76e, 0xbfa8, 0xc6d0, 0xd276, 0xed10, 0xf7b, 0x1, 0x0);
        gbc.writeMem(0xc76e, { 0x5 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0xbfa8, gbc.sp());
        EXPECT(0xc76f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5, gbc.readMem(0xc76e));
        // 05 01B6
        gbc.setState(0x494c, 0x30f3, 0xedd0, 0x43a6, 0xcfc9, 0xcea1, 0x0, 0x1);
        gbc.writeMem(0x494c, { 0x5 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x30f3, gbc.sp());
        EXPECT(0x494d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 05 01B7
        gbc.setState(0xd055, 0x3ace, 0x540, 0x908c, 0x8a2e, 0xbb39, 0x1, 0x0);
        gbc.writeMem(0xd055, { 0x5 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x3ace, gbc.sp());
        EXPECT(0xd056, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5, gbc.readMem(0xd055));
        // 05 01B8
        gbc.setState(0x98ca, 0x6c5, 0x5110, 0x75d4, 0x9e73, 0x4544, 0x1, 0x1);
        gbc.writeMem(0x98ca, { 0x5 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x6c5, gbc.sp());
        EXPECT(0x98cb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5, gbc.readMem(0x98ca));
        // 05 01B9
        gbc.setState(0xa8ce, 0xeaba, 0xfb30, 0x27ce, 0x5a0a, 0x3678, 0x1, 0x0);
        gbc.writeMem(0xa8ce, { 0x5 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0xeaba, gbc.sp());
        EXPECT(0xa8cf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5, gbc.readMem(0xa8ce));
        // 05 01BA
        gbc.setState(0x58d7, 0xcbe, 0x2320, 0xcf77, 0x9b3c, 0x998f, 0x0, 0x1);
        gbc.writeMem(0x58d7, { 0x5 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0xcbe, gbc.sp());
        EXPECT(0x58d8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 05 01BB
        gbc.setState(0x2e, 0xaa8f, 0x6960, 0x37a0, 0x7bb2, 0x25ab, 0x1, 0x1);
        gbc.writeMem(0x2e, { 0x5 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0xaa8f, gbc.sp());
        EXPECT(0x2f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 05 01BD
        gbc.setState(0x4bca, 0xd127, 0xc0d0, 0x7fe9, 0x2dda, 0xf130, 0x0, 0x0);
        gbc.writeMem(0x4bca, { 0x5 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0xd127, gbc.sp());
        EXPECT(0x4bcb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 05 01BE
        gbc.setState(0x7606, 0x36d4, 0x8000, 0xc32b, 0xf87d, 0x2398, 0x0, 0x1);
        gbc.writeMem(0x7606, { 0x5 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x36d4, gbc.sp());
        EXPECT(0x7607, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 05 01BF
        gbc.setState(0x5d21, 0xee62, 0xbe10, 0xa0a5, 0x1d65, 0xae4e, 0x1, 0x1);
        gbc.writeMem(0x5d21, { 0x5 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0xee62, gbc.sp());
        EXPECT(0x5d22, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 05 01C0
        gbc.setState(0x2dda, 0xd48b, 0x16a0, 0xbf69, 0x9f7f, 0xdcbf, 0x1, 0x0);
        gbc.writeMem(0x2dda, { 0x5 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0xd48b, gbc.sp());
        EXPECT(0x2ddb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 05 01C1
        gbc.setState(0x4b76, 0x25e1, 0x1940, 0x76e5, 0x1645, 0x67e9, 0x0, 0x1);
        gbc.writeMem(0x4b76, { 0x5 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x25e1, gbc.sp());
        EXPECT(0x4b77, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 05 01C3
        gbc.setState(0x322b, 0xa512, 0xef30, 0x440f, 0x4849, 0x2be4, 0x1, 0x1);
        gbc.writeMem(0x322b, { 0x5 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0xa512, gbc.sp());
        EXPECT(0x322c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 05 01C4
        gbc.setState(0xd17f, 0xdbec, 0xc640, 0x67ea, 0xed02, 0xc45e, 0x1, 0x0);
        gbc.writeMem(0xd17f, { 0x5 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0xdbec, gbc.sp());
        EXPECT(0xd180, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5, gbc.readMem(0xd17f));
        // 05 01C5
        gbc.setState(0xca8e, 0x28b0, 0x2800, 0x8863, 0x72d8, 0xa075, 0x0, 0x1);
        gbc.writeMem(0xca8e, { 0x5 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x28b0, gbc.sp());
        EXPECT(0xca8f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5, gbc.readMem(0xca8e));
        // 05 01C6
        gbc.setState(0x3e0e, 0x34d3, 0xacc0, 0x1cc2, 0xe236, 0xdc2a, 0x1, 0x1);
        gbc.writeMem(0x3e0e, { 0x5 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x34d3, gbc.sp());
        EXPECT(0x3e0f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 05 01C7
        gbc.setState(0x706d, 0x5faf, 0x36a0, 0xa4f, 0xbe7a, 0x66f7, 0x1, 0x1);
        gbc.writeMem(0x706d, { 0x5 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x5faf, gbc.sp());
        EXPECT(0x706e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 05 01C8
        gbc.setState(0xe077, 0x8931, 0xf400, 0xf45e, 0xfd92, 0x4ad9, 0x0, 0x0);
        gbc.writeMem(0xe077, { 0x5 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x8931, gbc.sp());
        EXPECT(0xe078, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5, gbc.readMem(0xe077));
        // 05 01C9
        gbc.setState(0xd595, 0x433, 0x760, 0x51cb, 0x10d5, 0x3bfd, 0x0, 0x1);
        gbc.writeMem(0xd595, { 0x5 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x433, gbc.sp());
        EXPECT(0xd596, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5, gbc.readMem(0xd595));
        // 05 01CA
        gbc.setState(0xdd8e, 0x96e4, 0xb6f0, 0xf394, 0x464c, 0xc991, 0x0, 0x0);
        gbc.writeMem(0xdd8e, { 0x5 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x96e4, gbc.sp());
        EXPECT(0xdd8f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5, gbc.readMem(0xdd8e));
        // 05 01CB
        gbc.setState(0x61b5, 0xef87, 0x2060, 0x4079, 0xc116, 0x7944, 0x0, 0x1);
        gbc.writeMem(0x61b5, { 0x5 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0xef87, gbc.sp());
        EXPECT(0x61b6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 05 01CC
        gbc.setState(0xec67, 0x8985, 0xe7f0, 0xfbf3, 0x6c67, 0x7b95, 0x1, 0x1);
        gbc.writeMem(0xec67, { 0x5 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x8985, gbc.sp());
        EXPECT(0xec68, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5, gbc.readMem(0xec67));
        // 05 01CE
        gbc.setState(0xc3b4, 0xefd2, 0x80, 0x653a, 0x960d, 0xbfa9, 0x0, 0x1);
        gbc.writeMem(0xc3b4, { 0x5 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0xefd2, gbc.sp());
        EXPECT(0xc3b5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5, gbc.readMem(0xc3b4));
        // 05 01CF
        gbc.setState(0xebc8, 0x86bf, 0xfb50, 0xd6e1, 0xce7d, 0x3202, 0x0, 0x1);
        gbc.writeMem(0xebc8, { 0x5 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x86bf, gbc.sp());
        EXPECT(0xebc9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5, gbc.readMem(0xebc8));
        // 05 01D0
        gbc.setState(0xf22, 0x23b4, 0xee40, 0xfe7c, 0xa566, 0x7792, 0x1, 0x1);
        gbc.writeMem(0xf22, { 0x5 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x23b4, gbc.sp());
        EXPECT(0xf23, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 05 01D1
        gbc.setState(0x5c67, 0xae8c, 0xc5e0, 0x1629, 0x1291, 0x8b7b, 0x0, 0x1);
        gbc.writeMem(0x5c67, { 0x5 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0xae8c, gbc.sp());
        EXPECT(0x5c68, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 05 01D2
        gbc.setState(0xb103, 0x9249, 0x2910, 0x10b9, 0xd924, 0x6867, 0x0, 0x1);
        gbc.writeMem(0xb103, { 0x5 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x9249, gbc.sp());
        EXPECT(0xb104, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5, gbc.readMem(0xb103));
        // 05 01D3
        gbc.setState(0x8078, 0x424b, 0x5860, 0x2f65, 0x12f9, 0x3fcc, 0x1, 0x1);
        gbc.writeMem(0x8078, { 0x5 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x424b, gbc.sp());
        EXPECT(0x8079, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5, gbc.readMem(0x8078));
        // 05 01D4
        gbc.setState(0xc2c6, 0x1ab, 0x11e0, 0x45c1, 0x337d, 0xc22a, 0x0, 0x1);
        gbc.writeMem(0xc2c6, { 0x5 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x1ab, gbc.sp());
        EXPECT(0xc2c7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5, gbc.readMem(0xc2c6));
        // 05 01D5
        gbc.setState(0xa83a, 0xec59, 0x9c40, 0x4a30, 0x33a5, 0xb53b, 0x1, 0x1);
        gbc.writeMem(0xa83a, { 0x5 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0xec59, gbc.sp());
        EXPECT(0xa83b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5, gbc.readMem(0xa83a));
        // 05 01D6
        gbc.setState(0xb281, 0xd7fc, 0xae20, 0xa127, 0x70e4, 0xcbab, 0x1, 0x1);
        gbc.writeMem(0xb281, { 0x5 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0xd7fc, gbc.sp());
        EXPECT(0xb282, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5, gbc.readMem(0xb281));
        // 05 01D7
        gbc.setState(0x22c1, 0x1d04, 0xf940, 0x72b9, 0x9b09, 0xa55a, 0x0, 0x1);
        gbc.writeMem(0x22c1, { 0x5 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x1d04, gbc.sp());
        EXPECT(0x22c2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 05 01D8
        gbc.setState(0x749e, 0xcbe0, 0xda00, 0xd31f, 0x9235, 0x14a8, 0x0, 0x1);
        gbc.writeMem(0x749e, { 0x5 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0xcbe0, gbc.sp());
        EXPECT(0x749f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 05 01D9
        gbc.setState(0x5dd, 0x72cf, 0x3de0, 0x975c, 0xb97, 0x8b1, 0x1, 0x1);
        gbc.writeMem(0x5dd, { 0x5 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x72cf, gbc.sp());
        EXPECT(0x5de, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 05 01DA
        gbc.setState(0x5b2b, 0x567e, 0xd1f0, 0x5236, 0x43c8, 0xfa05, 0x0, 0x0);
        gbc.writeMem(0x5b2b, { 0x5 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x567e, gbc.sp());
        EXPECT(0x5b2c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 05 01DB
        gbc.setState(0x1007, 0x6fa2, 0x5560, 0xd764, 0x3b6, 0x5ed4, 0x1, 0x1);
        gbc.writeMem(0x1007, { 0x5 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x6fa2, gbc.sp());
        EXPECT(0x1008, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 05 01DC
        gbc.setState(0xe177, 0x16e6, 0x33d0, 0xa483, 0xe8df, 0xae0c, 0x1, 0x1);
        gbc.writeMem(0xe177, { 0x5 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x16e6, gbc.sp());
        EXPECT(0xe178, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5, gbc.readMem(0xe177));
        // 05 01DD
        gbc.setState(0x1dd9, 0x8fad, 0xbbc0, 0xd9d1, 0x53d8, 0xd5c9, 0x1, 0x1);
        gbc.writeMem(0x1dd9, { 0x5 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x8fad, gbc.sp());
        EXPECT(0x1dda, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 05 01DE
        gbc.setState(0x15c9, 0x499, 0x6a00, 0xe6fc, 0x1d76, 0xa044, 0x1, 0x1);
        gbc.writeMem(0x15c9, { 0x5 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x499, gbc.sp());
        EXPECT(0x15ca, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 05 01DF
        gbc.setState(0xb1ea, 0x7dba, 0xd600, 0xc7d7, 0xf8af, 0x64b7, 0x1, 0x0);
        gbc.writeMem(0xb1ea, { 0x5 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x7dba, gbc.sp());
        EXPECT(0xb1eb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5, gbc.readMem(0xb1ea));
        // 05 01E0
        gbc.setState(0x8f0a, 0xb1a5, 0xa420, 0x51c5, 0x8a51, 0x8ebc, 0x1, 0x1);
        gbc.writeMem(0x8f0a, { 0x5 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0xb1a5, gbc.sp());
        EXPECT(0x8f0b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5, gbc.readMem(0x8f0a));
        // 05 01E1
        gbc.setState(0x461b, 0xd28b, 0x7a00, 0x5576, 0xf488, 0xd4a5, 0x0, 0x1);
        gbc.writeMem(0x461b, { 0x5 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0xd28b, gbc.sp());
        EXPECT(0x461c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 05 01E2
        gbc.setState(0x20db, 0x99c9, 0x4ce0, 0x77ef, 0x940a, 0xcb43, 0x1, 0x1);
        gbc.writeMem(0x20db, { 0x5 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x99c9, gbc.sp());
        EXPECT(0x20dc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 05 01E3
        gbc.setState(0x6916, 0x7bcb, 0xc360, 0xd121, 0x80c6, 0x7e08, 0x0, 0x0);
        gbc.writeMem(0x6916, { 0x5 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x7bcb, gbc.sp());
        EXPECT(0x6917, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 05 01E4
        gbc.setState(0xe1e, 0x7c6c, 0xddd0, 0xda, 0xb97e, 0xfaea, 0x1, 0x0);
        gbc.writeMem(0xe1e, { 0x5 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x7c6c, gbc.sp());
        EXPECT(0xe1f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 05 01E5
        gbc.setState(0xa6ef, 0x4506, 0xe800, 0xa106, 0x2187, 0xaf0c, 0x1, 0x0);
        gbc.writeMem(0xa6ef, { 0x5 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x4506, gbc.sp());
        EXPECT(0xa6f0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5, gbc.readMem(0xa6ef));
        // 05 01E6
        gbc.setState(0x2c2b, 0x88eb, 0xbdd0, 0xa65e, 0x510a, 0x845d, 0x1, 0x0);
        gbc.writeMem(0x2c2b, { 0x5 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x88eb, gbc.sp());
        EXPECT(0x2c2c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 05 01E7
        gbc.setState(0x16fb, 0xf221, 0x31e0, 0xe1be, 0xb02b, 0x7fee, 0x0, 0x1);
        gbc.writeMem(0x16fb, { 0x5 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0xf221, gbc.sp());
        EXPECT(0x16fc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 05 01E8
        gbc.setState(0x6b3d, 0x3958, 0xeb20, 0xa991, 0x7f74, 0xc4d, 0x0, 0x0);
        gbc.writeMem(0x6b3d, { 0x5 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x3958, gbc.sp());
        EXPECT(0x6b3e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 05 01E9
        gbc.setState(0xb01a, 0x599f, 0xf4b0, 0x7483, 0x42e4, 0xde24, 0x1, 0x0);
        gbc.writeMem(0xb01a, { 0x5 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x599f, gbc.sp());
        EXPECT(0xb01b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5, gbc.readMem(0xb01a));
        // 05 01EB
        gbc.setState(0xb9e7, 0xefee, 0xb7d0, 0x5540, 0x4bab, 0x55fb, 0x1, 0x1);
        gbc.writeMem(0xb9e7, { 0x5 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0xefee, gbc.sp());
        EXPECT(0xb9e8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5, gbc.readMem(0xb9e7));
        // 05 01EC
        gbc.setState(0x45cc, 0x6298, 0xdb30, 0xc07a, 0x4356, 0xeb6c, 0x1, 0x0);
        gbc.writeMem(0x45cc, { 0x5 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x6298, gbc.sp());
        EXPECT(0x45cd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 05 01ED
        gbc.setState(0x78b0, 0xc97, 0x3c70, 0x4df4, 0x1503, 0x952b, 0x1, 0x0);
        gbc.writeMem(0x78b0, { 0x5 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0xc97, gbc.sp());
        EXPECT(0x78b1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 05 01EE
        gbc.setState(0x882c, 0xcb31, 0xa2c0, 0x1f00, 0xf78f, 0xf321, 0x0, 0x0);
        gbc.writeMem(0x882c, { 0x5 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0xcb31, gbc.sp());
        EXPECT(0x882d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5, gbc.readMem(0x882c));
        // 05 01EF
        gbc.setState(0x74e0, 0xb439, 0x8d80, 0x908a, 0x94c8, 0xb175, 0x0, 0x1);
        gbc.writeMem(0x74e0, { 0x5 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0xb439, gbc.sp());
        EXPECT(0x74e1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 05 01F0
        gbc.setState(0x892d, 0xac7d, 0xc660, 0x31b6, 0x58e0, 0x83a4, 0x0, 0x1);
        gbc.writeMem(0x892d, { 0x5 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0xac7d, gbc.sp());
        EXPECT(0x892e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5, gbc.readMem(0x892d));
        // 05 01F1
        gbc.setState(0x2e0c, 0x229e, 0x1840, 0x8a62, 0x7f87, 0xa5bd, 0x1, 0x0);
        gbc.writeMem(0x2e0c, { 0x5 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x229e, gbc.sp());
        EXPECT(0x2e0d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 05 01F2
        gbc.setState(0x3385, 0xe0a1, 0xf000, 0x4232, 0xd988, 0xc17f, 0x0, 0x1);
        gbc.writeMem(0x3385, { 0x5 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0xe0a1, gbc.sp());
        EXPECT(0x3386, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 05 01F3
        gbc.setState(0x1607, 0xcda2, 0x7b60, 0xf2af, 0x3fd0, 0x45b6, 0x1, 0x0);
        gbc.writeMem(0x1607, { 0x5 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0xcda2, gbc.sp());
        EXPECT(0x1608, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 05 01F4
        gbc.setState(0xc8f6, 0x8a15, 0xef0, 0xa164, 0x7258, 0x97b2, 0x0, 0x1);
        gbc.writeMem(0xc8f6, { 0x5 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x8a15, gbc.sp());
        EXPECT(0xc8f7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5, gbc.readMem(0xc8f6));
        // 05 01F5
        gbc.setState(0x2f0d, 0xcb0e, 0xf9e0, 0xf14b, 0x70cb, 0x222a, 0x0, 0x1);
        gbc.writeMem(0x2f0d, { 0x5 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0xcb0e, gbc.sp());
        EXPECT(0x2f0e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 05 01F6
        gbc.setState(0x7822, 0x7064, 0x9030, 0xdd59, 0xadb8, 0x4e4e, 0x0, 0x0);
        gbc.writeMem(0x7822, { 0x5 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x7064, gbc.sp());
        EXPECT(0x7823, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 05 01F7
        gbc.setState(0xc77f, 0xb4db, 0xb270, 0xaf48, 0x102f, 0xfbd8, 0x0, 0x1);
        gbc.writeMem(0xc77f, { 0x5 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0xb4db, gbc.sp());
        EXPECT(0xc780, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5, gbc.readMem(0xc77f));
        // 05 01F8
        gbc.setState(0x9684, 0xe098, 0xfca0, 0x973e, 0x5a57, 0xc0fe, 0x0, 0x1);
        gbc.writeMem(0x9684, { 0x5 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0xe098, gbc.sp());
        EXPECT(0x9685, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5, gbc.readMem(0x9684));
        // 05 01F9
        gbc.setState(0x2fa9, 0x9b47, 0x36c0, 0x9c9d, 0x8ab4, 0xb305, 0x1, 0x0);
        gbc.writeMem(0x2fa9, { 0x5 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x9b47, gbc.sp());
        EXPECT(0x2faa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 05 01FA
        gbc.setState(0x9c09, 0x5b97, 0x3a0, 0xad95, 0x3b6b, 0x3e17, 0x0, 0x1);
        gbc.writeMem(0x9c09, { 0x5 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x5b97, gbc.sp());
        EXPECT(0x9c0a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5, gbc.readMem(0x9c09));
        // 05 01FB
        gbc.setState(0x40aa, 0xcaf3, 0xc6a0, 0x1d7f, 0xf673, 0xd54c, 0x0, 0x0);
        gbc.writeMem(0x40aa, { 0x5 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0xcaf3, gbc.sp());
        EXPECT(0x40ab, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 05 01FC
        gbc.setState(0x7822, 0x30a, 0x9640, 0x98a9, 0x3fe9, 0xd4c9, 0x1, 0x1);
        gbc.writeMem(0x7822, { 0x5 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x30a, gbc.sp());
        EXPECT(0x7823, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 05 01FD
        gbc.setState(0x2d8c, 0x4f4, 0x5100, 0x2406, 0x5af5, 0xe74e, 0x0, 0x1);
        gbc.writeMem(0x2d8c, { 0x5 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x4f4, gbc.sp());
        EXPECT(0x2d8d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 05 01FF
        gbc.setState(0x8622, 0x8b58, 0x75a0, 0xca53, 0x9d1a, 0xd476, 0x0, 0x1);
        gbc.writeMem(0x8622, { 0x5 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x8b58, gbc.sp());
        EXPECT(0x8623, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5, gbc.readMem(0x8622));
        // 05 0200
        gbc.setState(0xcd32, 0x45ef, 0xa0d0, 0x9849, 0xa26e, 0x65b2, 0x1, 0x0);
        gbc.writeMem(0xcd32, { 0x5 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x45ef, gbc.sp());
        EXPECT(0xcd33, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5, gbc.readMem(0xcd32));
        // 05 0201
        gbc.setState(0xc625, 0x79f9, 0xa5c0, 0xae13, 0xae59, 0xb136, 0x1, 0x0);
        gbc.writeMem(0xc625, { 0x5 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x79f9, gbc.sp());
        EXPECT(0xc626, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5, gbc.readMem(0xc625));
        // 05 0202
        gbc.setState(0x375b, 0x83fc, 0xc370, 0x6e98, 0xd4de, 0x1c6e, 0x0, 0x1);
        gbc.writeMem(0x375b, { 0x5 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x83fc, gbc.sp());
        EXPECT(0x375c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 05 0203
        gbc.setState(0x1f34, 0x526a, 0xb090, 0xdb30, 0x7ab6, 0x971, 0x0, 0x1);
        gbc.writeMem(0x1f34, { 0x5 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x526a, gbc.sp());
        EXPECT(0x1f35, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 05 0204
        gbc.setState(0xa2cd, 0xebc6, 0x86a0, 0x6adc, 0x3ec5, 0x4d2d, 0x0, 0x0);
        gbc.writeMem(0xa2cd, { 0x5 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0xebc6, gbc.sp());
        EXPECT(0xa2ce, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5, gbc.readMem(0xa2cd));
        // 05 0205
        gbc.setState(0x456c, 0xdbfb, 0x1a60, 0xa33d, 0xbd2a, 0xb514, 0x0, 0x1);
        gbc.writeMem(0x456c, { 0x5 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0xdbfb, gbc.sp());
        EXPECT(0x456d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 05 0206
        gbc.setState(0xe03f, 0xd4de, 0xbdf0, 0x54a1, 0x23a1, 0x3e23, 0x1, 0x1);
        gbc.writeMem(0xe03f, { 0x5 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0xd4de, gbc.sp());
        EXPECT(0xe040, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5, gbc.readMem(0xe03f));
        // 05 0207
        gbc.setState(0x8444, 0x292b, 0xc6f0, 0xa0b5, 0x74d5, 0x7038, 0x0, 0x0);
        gbc.writeMem(0x8444, { 0x5 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x292b, gbc.sp());
        EXPECT(0x8445, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5, gbc.readMem(0x8444));
        // 05 0208
        gbc.setState(0x9f8c, 0x5465, 0x5190, 0x6355, 0x8dbf, 0x4217, 0x0, 0x1);
        gbc.writeMem(0x9f8c, { 0x5 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x5465, gbc.sp());
        EXPECT(0x9f8d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5, gbc.readMem(0x9f8c));
        // 05 0209
        gbc.setState(0xb3db, 0xa12d, 0x6b40, 0xa718, 0x97c5, 0xd372, 0x1, 0x0);
        gbc.writeMem(0xb3db, { 0x5 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0xa12d, gbc.sp());
        EXPECT(0xb3dc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5, gbc.readMem(0xb3db));
        // 05 020A
        gbc.setState(0x2a66, 0x329b, 0x4a0, 0x3c8, 0x6e70, 0x7761, 0x0, 0x0);
        gbc.writeMem(0x2a66, { 0x5 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x329b, gbc.sp());
        EXPECT(0x2a67, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 05 020B
        gbc.setState(0x5028, 0x376d, 0x3690, 0xe3f6, 0xfd29, 0x3093, 0x1, 0x0);
        gbc.writeMem(0x5028, { 0x5 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0x376d, gbc.sp());
        EXPECT(0x5029, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 05 020C
        gbc.setState(0x3b42, 0x95f6, 0x1540, 0x64d3, 0xcb49, 0x13ac, 0x0, 0x0);
        gbc.writeMem(0x3b42, { 0x5 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x95f6, gbc.sp());
        EXPECT(0x3b43, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 05 020D
        gbc.setState(0x5c4a, 0x466b, 0x98e0, 0x1686, 0x1b60, 0xadb1, 0x1, 0x1);
        gbc.writeMem(0x5c4a, { 0x5 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x466b, gbc.sp());
        EXPECT(0x5c4b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 05 020E
        gbc.setState(0xc16, 0x2e19, 0x2040, 0x966a, 0x72c6, 0xa26, 0x1, 0x0);
        gbc.writeMem(0xc16, { 0x5 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x2e19, gbc.sp());
        EXPECT(0xc17, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 05 020F
        gbc.setState(0x3462, 0x430b, 0xf6f0, 0xdaf5, 0xbc40, 0x4380, 0x1, 0x0);
        gbc.writeMem(0x3462, { 0x5 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x430b, gbc.sp());
        EXPECT(0x3463, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 05 0210
        gbc.setState(0x2e25, 0x8a34, 0x92f0, 0xf7db, 0x57be, 0x3d95, 0x0, 0x1);
        gbc.writeMem(0x2e25, { 0x5 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x8a34, gbc.sp());
        EXPECT(0x2e26, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 05 0211
        gbc.setState(0xd0aa, 0x4cd6, 0xb460, 0xb5a, 0xbbc4, 0x8bf4, 0x0, 0x0);
        gbc.writeMem(0xd0aa, { 0x5 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x4cd6, gbc.sp());
        EXPECT(0xd0ab, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5, gbc.readMem(0xd0aa));
        // 05 0212
        gbc.setState(0x8c9b, 0xadb2, 0x7cc0, 0xef40, 0x7f5f, 0x8698, 0x0, 0x1);
        gbc.writeMem(0x8c9b, { 0x5 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0xadb2, gbc.sp());
        EXPECT(0x8c9c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5, gbc.readMem(0x8c9b));
        // 05 0213
        gbc.setState(0xdd87, 0x2275, 0x1a70, 0x2d70, 0xed48, 0x2e6a, 0x1, 0x1);
        gbc.writeMem(0xdd87, { 0x5 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x2275, gbc.sp());
        EXPECT(0xdd88, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5, gbc.readMem(0xdd87));
        // 05 0214
        gbc.setState(0xe921, 0x9558, 0x6da0, 0x283b, 0xed3, 0xb2b, 0x0, 0x0);
        gbc.writeMem(0xe921, { 0x5 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x9558, gbc.sp());
        EXPECT(0xe922, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5, gbc.readMem(0xe921));
        // 05 0215
        gbc.setState(0xccac, 0xb2eb, 0x99f0, 0x7980, 0x5614, 0xe6b9, 0x1, 0x1);
        gbc.writeMem(0xccac, { 0x5 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0xb2eb, gbc.sp());
        EXPECT(0xccad, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5, gbc.readMem(0xccac));
        // 05 0216
        gbc.setState(0x862d, 0xb2f1, 0xda0, 0x3db1, 0xd410, 0x8dca, 0x0, 0x1);
        gbc.writeMem(0x862d, { 0x5 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0xb2f1, gbc.sp());
        EXPECT(0x862e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5, gbc.readMem(0x862d));
        // 05 0217
        gbc.setState(0x2a2, 0x2d25, 0x9220, 0x43a9, 0xc5f1, 0x4023, 0x1, 0x0);
        gbc.writeMem(0x2a2, { 0x5 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x2d25, gbc.sp());
        EXPECT(0x2a3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 05 0218
        gbc.setState(0xe205, 0xc8d9, 0xc070, 0xa45a, 0x8fa1, 0xea1, 0x1, 0x1);
        gbc.writeMem(0xe205, { 0x5 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0xc8d9, gbc.sp());
        EXPECT(0xe206, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5, gbc.readMem(0xe205));
        // 05 0219
        gbc.setState(0x68b, 0x6d3a, 0x7690, 0xe924, 0x1ebf, 0x604d, 0x0, 0x1);
        gbc.writeMem(0x68b, { 0x5 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x6d3a, gbc.sp());
        EXPECT(0x68c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 05 021A
        gbc.setState(0x6298, 0x87a, 0xc330, 0xcc05, 0x4ad1, 0xbbe6, 0x1, 0x0);
        gbc.writeMem(0x6298, { 0x5 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x87a, gbc.sp());
        EXPECT(0x6299, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 05 021B
        gbc.setState(0xebcc, 0x8b3d, 0xf400, 0x9d1e, 0x9ba1, 0x3f31, 0x1, 0x0);
        gbc.writeMem(0xebcc, { 0x5 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x8b3d, gbc.sp());
        EXPECT(0xebcd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5, gbc.readMem(0xebcc));
        // 05 021C
        gbc.setState(0x12e9, 0x743d, 0xc230, 0xa26f, 0x4425, 0x5b9a, 0x0, 0x1);
        gbc.writeMem(0x12e9, { 0x5 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x743d, gbc.sp());
        EXPECT(0x12ea, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 05 021D
        gbc.setState(0x2213, 0x6a19, 0xfd20, 0xf5d1, 0xfe5, 0x5402, 0x1, 0x0);
        gbc.writeMem(0x2213, { 0x5 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x6a19, gbc.sp());
        EXPECT(0x2214, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 05 021E
        gbc.setState(0x40b6, 0xdc22, 0x1650, 0xb28c, 0x97da, 0x1603, 0x1, 0x0);
        gbc.writeMem(0x40b6, { 0x5 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0xdc22, gbc.sp());
        EXPECT(0x40b7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 05 021F
        gbc.setState(0xd6c, 0x97f0, 0xccf0, 0x2e1b, 0x93b0, 0x2f27, 0x1, 0x0);
        gbc.writeMem(0xd6c, { 0x5 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x97f0, gbc.sp());
        EXPECT(0xd6d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 05 0220
        gbc.setState(0x4b66, 0x925d, 0xc7d0, 0x41e3, 0x4045, 0xc726, 0x0, 0x1);
        gbc.writeMem(0x4b66, { 0x5 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x925d, gbc.sp());
        EXPECT(0x4b67, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 05 0221
        gbc.setState(0x150b, 0x815b, 0xf840, 0xfc0b, 0xcb2d, 0x7bd0, 0x1, 0x1);
        gbc.writeMem(0x150b, { 0x5 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x815b, gbc.sp());
        EXPECT(0x150c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 05 0222
        gbc.setState(0xaf88, 0x2662, 0x7fd0, 0x2a69, 0xe0be, 0xb2fe, 0x0, 0x1);
        gbc.writeMem(0xaf88, { 0x5 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x2662, gbc.sp());
        EXPECT(0xaf89, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5, gbc.readMem(0xaf88));
        // 05 0223
        gbc.setState(0xbe3e, 0x3c79, 0xaae0, 0x4b40, 0xe7ed, 0x5b09, 0x0, 0x1);
        gbc.writeMem(0xbe3e, { 0x5 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x3c79, gbc.sp());
        EXPECT(0xbe3f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5, gbc.readMem(0xbe3e));
        // 05 0224
        gbc.setState(0xa546, 0xbff0, 0xcb70, 0x362a, 0xee4b, 0x8dfc, 0x1, 0x1);
        gbc.writeMem(0xa546, { 0x5 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0xbff0, gbc.sp());
        EXPECT(0xa547, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5, gbc.readMem(0xa546));
        // 05 0225
        gbc.setState(0x1684, 0x3ff4, 0x8670, 0x8ca6, 0x75c2, 0xe709, 0x1, 0x0);
        gbc.writeMem(0x1684, { 0x5 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x3ff4, gbc.sp());
        EXPECT(0x1685, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 05 0226
        gbc.setState(0x2c16, 0xb7e7, 0x3b90, 0x34cb, 0xde01, 0x56b6, 0x0, 0x1);
        gbc.writeMem(0x2c16, { 0x5 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0xb7e7, gbc.sp());
        EXPECT(0x2c17, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 05 0227
        gbc.setState(0x7ce0, 0x47de, 0x2140, 0xab39, 0x4b5f, 0x1036, 0x1, 0x1);
        gbc.writeMem(0x7ce0, { 0x5 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x47de, gbc.sp());
        EXPECT(0x7ce1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 05 0228
        gbc.setState(0x8a5c, 0x77f4, 0x5cb0, 0xfa22, 0x49c9, 0xd394, 0x1, 0x0);
        gbc.writeMem(0x8a5c, { 0x5 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x77f4, gbc.sp());
        EXPECT(0x8a5d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5, gbc.readMem(0x8a5c));
        // 05 0229
        gbc.setState(0x4674, 0x8f9e, 0x8f0, 0x9b95, 0x2c62, 0x10d7, 0x1, 0x1);
        gbc.writeMem(0x4674, { 0x5 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0x8f9e, gbc.sp());
        EXPECT(0x4675, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 05 022A
        gbc.setState(0x21a, 0x176d, 0x8ff0, 0xdd7c, 0xc17f, 0x10bb, 0x0, 0x1);
        gbc.writeMem(0x21a, { 0x5 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x176d, gbc.sp());
        EXPECT(0x21b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 05 022B
        gbc.setState(0x571a, 0x31b5, 0xf2a0, 0xe1c4, 0xea2e, 0x3b6, 0x1, 0x0);
        gbc.writeMem(0x571a, { 0x5 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x31b5, gbc.sp());
        EXPECT(0x571b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 05 022C
        gbc.setState(0xc726, 0x8274, 0xa960, 0x9814, 0x7e48, 0x2d43, 0x0, 0x0);
        gbc.writeMem(0xc726, { 0x5 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x8274, gbc.sp());
        EXPECT(0xc727, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5, gbc.readMem(0xc726));
        // 05 022D
        gbc.setState(0x49d8, 0x2c40, 0x8d80, 0x329b, 0xf0ba, 0x115d, 0x0, 0x0);
        gbc.writeMem(0x49d8, { 0x5 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x2c40, gbc.sp());
        EXPECT(0x49d9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 05 022E
        gbc.setState(0x809a, 0x4c1c, 0xf440, 0x2712, 0xe9f, 0xb23c, 0x0, 0x0);
        gbc.writeMem(0x809a, { 0x5 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x4c1c, gbc.sp());
        EXPECT(0x809b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5, gbc.readMem(0x809a));
        // 05 022F
        gbc.setState(0x9a97, 0x1186, 0x5c00, 0xa70d, 0xe600, 0xdfa3, 0x1, 0x0);
        gbc.writeMem(0x9a97, { 0x5 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0x1186, gbc.sp());
        EXPECT(0x9a98, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5, gbc.readMem(0x9a97));
        // 05 0230
        gbc.setState(0xbb2f, 0x4eb2, 0xc210, 0x2114, 0x3fa4, 0x1ff2, 0x1, 0x1);
        gbc.writeMem(0xbb2f, { 0x5 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x4eb2, gbc.sp());
        EXPECT(0xbb30, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5, gbc.readMem(0xbb2f));
        // 05 0231
        gbc.setState(0x4b0b, 0x9836, 0xe700, 0x3af9, 0xaf03, 0xfe79, 0x0, 0x1);
        gbc.writeMem(0x4b0b, { 0x5 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x9836, gbc.sp());
        EXPECT(0x4b0c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 05 0232
        gbc.setState(0x1e6a, 0xf370, 0xed50, 0x9d1c, 0xc297, 0x15cf, 0x0, 0x1);
        gbc.writeMem(0x1e6a, { 0x5 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0xf370, gbc.sp());
        EXPECT(0x1e6b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 05 0233
        gbc.setState(0x465d, 0x6426, 0x4f80, 0x2c32, 0x4cc8, 0x9416, 0x1, 0x0);
        gbc.writeMem(0x465d, { 0x5 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x6426, gbc.sp());
        EXPECT(0x465e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 05 0234
        gbc.setState(0x2bd5, 0xf6a6, 0xfd10, 0x9890, 0x5534, 0x4d82, 0x0, 0x1);
        gbc.writeMem(0x2bd5, { 0x5 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0xf6a6, gbc.sp());
        EXPECT(0x2bd6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 05 0235
        gbc.setState(0x60f8, 0x3e63, 0x3af0, 0x4056, 0xfde4, 0x4857, 0x0, 0x1);
        gbc.writeMem(0x60f8, { 0x5 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x3e63, gbc.sp());
        EXPECT(0x60f9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 05 0236
        gbc.setState(0xeb6f, 0xfab7, 0x34b0, 0x35ae, 0x219a, 0x2932, 0x0, 0x1);
        gbc.writeMem(0xeb6f, { 0x5 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0xfab7, gbc.sp());
        EXPECT(0xeb70, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5, gbc.readMem(0xeb6f));
        // 05 0237
        gbc.setState(0xda64, 0xce65, 0xbd20, 0x19ce, 0x5ae, 0x127a, 0x1, 0x0);
        gbc.writeMem(0xda64, { 0x5 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0xce65, gbc.sp());
        EXPECT(0xda65, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5, gbc.readMem(0xda64));
        // 05 0238
        gbc.setState(0xedf3, 0x45cb, 0xa7f0, 0x4e9f, 0x1215, 0xefab, 0x0, 0x0);
        gbc.writeMem(0xedf3, { 0x5 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x45cb, gbc.sp());
        EXPECT(0xedf4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5, gbc.readMem(0xedf3));
        // 05 0239
        gbc.setState(0x7ce6, 0x831b, 0x38f0, 0xed19, 0x3540, 0xe90b, 0x1, 0x1);
        gbc.writeMem(0x7ce6, { 0x5 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x831b, gbc.sp());
        EXPECT(0x7ce7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 05 023A
        gbc.setState(0x8e3, 0x239b, 0x4a70, 0x85b2, 0xa0db, 0xc5ac, 0x1, 0x1);
        gbc.writeMem(0x8e3, { 0x5 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x239b, gbc.sp());
        EXPECT(0x8e4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 05 023B
        gbc.setState(0xc5c1, 0xf7c1, 0xec60, 0x59a6, 0x9c9e, 0x5498, 0x0, 0x0);
        gbc.writeMem(0xc5c1, { 0x5 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0xf7c1, gbc.sp());
        EXPECT(0xc5c2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5, gbc.readMem(0xc5c1));
        // 05 023C
        gbc.setState(0xbabf, 0x40a4, 0x35b0, 0x4cba, 0xa9d4, 0xf1a, 0x0, 0x1);
        gbc.writeMem(0xbabf, { 0x5 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x40a4, gbc.sp());
        EXPECT(0xbac0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5, gbc.readMem(0xbabf));
        // 05 023D
        gbc.setState(0x1a55, 0xe07b, 0xbf60, 0xf11b, 0xf4a9, 0xe576, 0x1, 0x0);
        gbc.writeMem(0x1a55, { 0x5 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0xe07b, gbc.sp());
        EXPECT(0x1a56, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 05 023E
        gbc.setState(0x293e, 0x5a64, 0x9560, 0xf68e, 0xd23f, 0xd9f1, 0x1, 0x0);
        gbc.writeMem(0x293e, { 0x5 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x5a64, gbc.sp());
        EXPECT(0x293f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 05 023F
        gbc.setState(0x416f, 0x5768, 0xfe20, 0x9c8d, 0x23fc, 0x3e26, 0x1, 0x0);
        gbc.writeMem(0x416f, { 0x5 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x5768, gbc.sp());
        EXPECT(0x4170, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 05 0240
        gbc.setState(0x8929, 0x20b1, 0x440, 0x312, 0x6cfb, 0xd0d4, 0x1, 0x1);
        gbc.writeMem(0x8929, { 0x5 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x20b1, gbc.sp());
        EXPECT(0x892a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5, gbc.readMem(0x8929));
        // 05 0241
        gbc.setState(0xe9ea, 0x7f8f, 0x5d70, 0x901f, 0xaefe, 0x3a55, 0x1, 0x0);
        gbc.writeMem(0xe9ea, { 0x5 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x7f8f, gbc.sp());
        EXPECT(0xe9eb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5, gbc.readMem(0xe9ea));
        // 05 0242
        gbc.setState(0xdf11, 0x95d8, 0x92b0, 0xb3d, 0xfb5a, 0x9911, 0x1, 0x0);
        gbc.writeMem(0xdf11, { 0x5 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x95d8, gbc.sp());
        EXPECT(0xdf12, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5, gbc.readMem(0xdf11));
        // 05 0244
        gbc.setState(0xd03a, 0xdc0c, 0xb100, 0x8f91, 0xfd0f, 0xbc3, 0x1, 0x1);
        gbc.writeMem(0xd03a, { 0x5 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0xdc0c, gbc.sp());
        EXPECT(0xd03b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5, gbc.readMem(0xd03a));
        // 05 0245
        gbc.setState(0xeef6, 0xe06c, 0xc8c0, 0x5aa6, 0xf0dc, 0x308f, 0x0, 0x1);
        gbc.writeMem(0xeef6, { 0x5 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0xe06c, gbc.sp());
        EXPECT(0xeef7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5, gbc.readMem(0xeef6));
        // 05 0246
        gbc.setState(0x6923, 0xb97a, 0xee0, 0x4456, 0x6595, 0xa905, 0x0, 0x1);
        gbc.writeMem(0x6923, { 0x5 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0xb97a, gbc.sp());
        EXPECT(0x6924, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 05 0247
        gbc.setState(0x5a88, 0xcd11, 0xca50, 0x67e3, 0x4668, 0x9fd5, 0x0, 0x1);
        gbc.writeMem(0x5a88, { 0x5 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0xcd11, gbc.sp());
        EXPECT(0x5a89, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 05 0248
        gbc.setState(0xec37, 0xe348, 0x2f10, 0x8765, 0x6f21, 0xedb1, 0x1, 0x0);
        gbc.writeMem(0xec37, { 0x5 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0xe348, gbc.sp());
        EXPECT(0xec38, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5, gbc.readMem(0xec37));
        // 05 0249
        gbc.setState(0x4801, 0xefb5, 0x15e0, 0x11f3, 0xb52a, 0x1538, 0x0, 0x0);
        gbc.writeMem(0x4801, { 0x5 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0xefb5, gbc.sp());
        EXPECT(0x4802, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 05 024A
        gbc.setState(0x6634, 0xb1a, 0x8340, 0x9337, 0x2df5, 0x7a25, 0x0, 0x0);
        gbc.writeMem(0x6634, { 0x5 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0xb1a, gbc.sp());
        EXPECT(0x6635, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 05 024B
        gbc.setState(0x86a0, 0xe559, 0x69e0, 0x243e, 0xba0e, 0xfb2e, 0x0, 0x1);
        gbc.writeMem(0x86a0, { 0x5 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0xe559, gbc.sp());
        EXPECT(0x86a1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5, gbc.readMem(0x86a0));
        // 05 024C
        gbc.setState(0x606b, 0x1ffe, 0xd50, 0xf7bb, 0xf150, 0x6d81, 0x1, 0x1);
        gbc.writeMem(0x606b, { 0x5 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x1ffe, gbc.sp());
        EXPECT(0x606c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 05 024D
        gbc.setState(0xa3d7, 0x1182, 0xf6b0, 0x17c7, 0x580b, 0x9a47, 0x0, 0x1);
        gbc.writeMem(0xa3d7, { 0x5 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x1182, gbc.sp());
        EXPECT(0xa3d8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5, gbc.readMem(0xa3d7));
        // 05 024E
        gbc.setState(0x28dd, 0xe147, 0x9f30, 0x118d, 0x15d9, 0x1de0, 0x1, 0x1);
        gbc.writeMem(0x28dd, { 0x5 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0xe147, gbc.sp());
        EXPECT(0x28de, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 05 024F
        gbc.setState(0xb362, 0xa37b, 0xa470, 0xc22c, 0x9132, 0x6c51, 0x1, 0x0);
        gbc.writeMem(0xb362, { 0x5 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0xa37b, gbc.sp());
        EXPECT(0xb363, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5, gbc.readMem(0xb362));
        // 05 0250
        gbc.setState(0xbdb5, 0xe35c, 0xaef0, 0x20c7, 0x527b, 0x6415, 0x1, 0x1);
        gbc.writeMem(0xbdb5, { 0x5 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0xe35c, gbc.sp());
        EXPECT(0xbdb6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5, gbc.readMem(0xbdb5));
        // 05 0251
        gbc.setState(0x6295, 0xecd, 0xe2d0, 0x59f5, 0xeb3, 0xd254, 0x1, 0x1);
        gbc.writeMem(0x6295, { 0x5 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0xecd, gbc.sp());
        EXPECT(0x6296, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 05 0252
        gbc.setState(0x7940, 0xe6fa, 0xaf40, 0xc983, 0x2b6, 0x52d7, 0x1, 0x1);
        gbc.writeMem(0x7940, { 0x5 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0xe6fa, gbc.sp());
        EXPECT(0x7941, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 05 0253
        gbc.setState(0x341a, 0x41ad, 0x13d0, 0x780, 0x834a, 0xe8e4, 0x0, 0x1);
        gbc.writeMem(0x341a, { 0x5 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x41ad, gbc.sp());
        EXPECT(0x341b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 05 0254
        gbc.setState(0x2d76, 0xa795, 0xc6f0, 0xa550, 0x47d0, 0x126b, 0x0, 0x1);
        gbc.writeMem(0x2d76, { 0x5 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0xa795, gbc.sp());
        EXPECT(0x2d77, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 05 0255
        gbc.setState(0xe6de, 0xfb13, 0x9d80, 0x6e30, 0xdb17, 0x5821, 0x1, 0x0);
        gbc.writeMem(0xe6de, { 0x5 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0xfb13, gbc.sp());
        EXPECT(0xe6df, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5, gbc.readMem(0xe6de));
        // 05 0256
        gbc.setState(0x217, 0xa033, 0x1f60, 0x7353, 0x3ca6, 0x1b17, 0x0, 0x1);
        gbc.writeMem(0x217, { 0x5 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0xa033, gbc.sp());
        EXPECT(0x218, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 05 0257
        gbc.setState(0x433e, 0xfe06, 0xa590, 0x2a8d, 0x83db, 0x688f, 0x0, 0x0);
        gbc.writeMem(0x433e, { 0x5 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0xfe06, gbc.sp());
        EXPECT(0x433f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 05 0258
        gbc.setState(0x85a3, 0xd16d, 0x2bb0, 0xa452, 0xd358, 0x59ef, 0x1, 0x0);
        gbc.writeMem(0x85a3, { 0x5 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0xd16d, gbc.sp());
        EXPECT(0x85a4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5, gbc.readMem(0x85a3));
        // 05 025A
        gbc.setState(0x3533, 0x4fbc, 0xcfe0, 0x98c0, 0x16a5, 0x224b, 0x0, 0x1);
        gbc.writeMem(0x3533, { 0x5 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x4fbc, gbc.sp());
        EXPECT(0x3534, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 05 025B
        gbc.setState(0xc5db, 0x56f9, 0x3c40, 0x423e, 0xbd77, 0xbf1d, 0x1, 0x0);
        gbc.writeMem(0xc5db, { 0x5 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x56f9, gbc.sp());
        EXPECT(0xc5dc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5, gbc.readMem(0xc5db));
        // 05 025C
        gbc.setState(0xce4d, 0xde81, 0x86d0, 0x5220, 0x94d9, 0x5e7e, 0x1, 0x1);
        gbc.writeMem(0xce4d, { 0x5 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0xde81, gbc.sp());
        EXPECT(0xce4e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5, gbc.readMem(0xce4d));
        // 05 025D
        gbc.setState(0x59a4, 0xba53, 0xb90, 0xa4f2, 0x564b, 0xaec6, 0x0, 0x0);
        gbc.writeMem(0x59a4, { 0x5 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0xba53, gbc.sp());
        EXPECT(0x59a5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 05 025E
        gbc.setState(0x4dd2, 0xdb2b, 0x42b0, 0xe3c8, 0xe45d, 0xd296, 0x1, 0x1);
        gbc.writeMem(0x4dd2, { 0x5 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0xdb2b, gbc.sp());
        EXPECT(0x4dd3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 05 025F
        gbc.setState(0x5430, 0xb30, 0xb820, 0x693e, 0x30c8, 0xc0c9, 0x1, 0x1);
        gbc.writeMem(0x5430, { 0x5 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0xb30, gbc.sp());
        EXPECT(0x5431, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 05 0260
        gbc.setState(0xe12c, 0x5078, 0x3050, 0xd056, 0xec7d, 0x108e, 0x0, 0x0);
        gbc.writeMem(0xe12c, { 0x5 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x5078, gbc.sp());
        EXPECT(0xe12d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5, gbc.readMem(0xe12c));
        // 05 0261
        gbc.setState(0x1472, 0x9511, 0x3e80, 0x53e9, 0xb174, 0xa084, 0x0, 0x1);
        gbc.writeMem(0x1472, { 0x5 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x9511, gbc.sp());
        EXPECT(0x1473, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 05 0262
        gbc.setState(0x4653, 0x259e, 0x4720, 0x97d0, 0x5ecd, 0x4d28, 0x1, 0x1);
        gbc.writeMem(0x4653, { 0x5 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x259e, gbc.sp());
        EXPECT(0x4654, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 05 0263
        gbc.setState(0x601, 0x52a0, 0x4130, 0x47ee, 0x6805, 0xa57, 0x1, 0x1);
        gbc.writeMem(0x601, { 0x5 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x52a0, gbc.sp());
        EXPECT(0x602, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 05 0264
        gbc.setState(0x5163, 0x8ef4, 0xd730, 0x1fff, 0x6995, 0x4c8e, 0x1, 0x1);
        gbc.writeMem(0x5163, { 0x5 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x8ef4, gbc.sp());
        EXPECT(0x5164, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 05 0265
        gbc.setState(0x7af4, 0xb3cb, 0x7e80, 0x39b1, 0x75c2, 0x7bf4, 0x1, 0x0);
        gbc.writeMem(0x7af4, { 0x5 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0xb3cb, gbc.sp());
        EXPECT(0x7af5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 05 0266
        gbc.setState(0x6ed1, 0x249d, 0xda10, 0x3d88, 0xd874, 0xf21d, 0x1, 0x0);
        gbc.writeMem(0x6ed1, { 0x5 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x249d, gbc.sp());
        EXPECT(0x6ed2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 05 0267
        gbc.setState(0xaebb, 0xee1e, 0x1560, 0xa301, 0x7ecd, 0xcc82, 0x1, 0x0);
        gbc.writeMem(0xaebb, { 0x5 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0xee1e, gbc.sp());
        EXPECT(0xaebc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5, gbc.readMem(0xaebb));
        // 05 0268
        gbc.setState(0x86c1, 0xac84, 0x9000, 0xdd45, 0xeb01, 0x731, 0x0, 0x0);
        gbc.writeMem(0x86c1, { 0x5 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0xac84, gbc.sp());
        EXPECT(0x86c2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5, gbc.readMem(0x86c1));
        // 05 026B
        gbc.setState(0x587b, 0x5fac, 0x84c0, 0x2754, 0x4656, 0x66bf, 0x1, 0x0);
        gbc.writeMem(0x587b, { 0x5 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x5fac, gbc.sp());
        EXPECT(0x587c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 05 026D
        gbc.setState(0x6375, 0xce76, 0xd270, 0x570d, 0xf50f, 0x7e7f, 0x0, 0x0);
        gbc.writeMem(0x6375, { 0x5 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0xce76, gbc.sp());
        EXPECT(0x6376, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 05 026E
        gbc.setState(0x7225, 0x8e01, 0xd9f0, 0xdb24, 0x9064, 0xa58c, 0x0, 0x1);
        gbc.writeMem(0x7225, { 0x5 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x8e01, gbc.sp());
        EXPECT(0x7226, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 05 026F
        gbc.setState(0x1778, 0x657d, 0x6070, 0xbb8d, 0x917c, 0xf0c2, 0x0, 0x0);
        gbc.writeMem(0x1778, { 0x5 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x657d, gbc.sp());
        EXPECT(0x1779, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 05 0270
        gbc.setState(0x9cb3, 0x63b7, 0x8610, 0x8118, 0xf54e, 0xee2a, 0x0, 0x1);
        gbc.writeMem(0x9cb3, { 0x5 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x63b7, gbc.sp());
        EXPECT(0x9cb4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5, gbc.readMem(0x9cb3));
        // 05 0271
        gbc.setState(0x3306, 0x15bf, 0x59e0, 0x7b7f, 0xe5a5, 0x41c3, 0x1, 0x0);
        gbc.writeMem(0x3306, { 0x5 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x15bf, gbc.sp());
        EXPECT(0x3307, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 05 0272
        gbc.setState(0xcff0, 0x8999, 0xca40, 0x1855, 0x3fa8, 0x31c7, 0x1, 0x0);
        gbc.writeMem(0xcff0, { 0x5 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x8999, gbc.sp());
        EXPECT(0xcff1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5, gbc.readMem(0xcff0));
        // 05 0273
        gbc.setState(0x6dcc, 0xf155, 0xa0d0, 0x1dfe, 0x5c4, 0x36de, 0x0, 0x1);
        gbc.writeMem(0x6dcc, { 0x5 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0xf155, gbc.sp());
        EXPECT(0x6dcd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 05 0274
        gbc.setState(0x8c5f, 0x8e2f, 0xd570, 0xc43e, 0x59f5, 0xeb10, 0x0, 0x1);
        gbc.writeMem(0x8c5f, { 0x5 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x8e2f, gbc.sp());
        EXPECT(0x8c60, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5, gbc.readMem(0x8c5f));
        // 05 0275
        gbc.setState(0x5e94, 0x32ac, 0x8be0, 0xc385, 0x95a3, 0x6cab, 0x1, 0x0);
        gbc.writeMem(0x5e94, { 0x5 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x32ac, gbc.sp());
        EXPECT(0x5e95, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 05 0277
        gbc.setState(0x457a, 0x427, 0x7e70, 0xc0b7, 0xfc7d, 0x488e, 0x1, 0x0);
        gbc.writeMem(0x457a, { 0x5 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x427, gbc.sp());
        EXPECT(0x457b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 05 0279
        gbc.setState(0xe82a, 0x2427, 0x9300, 0xb6fe, 0x7e48, 0xd1f1, 0x0, 0x1);
        gbc.writeMem(0xe82a, { 0x5 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x2427, gbc.sp());
        EXPECT(0xe82b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5, gbc.readMem(0xe82a));
        // 05 027A
        gbc.setState(0x9a44, 0x6b05, 0xc7c0, 0xb0f1, 0x9396, 0x6ee, 0x0, 0x1);
        gbc.writeMem(0x9a44, { 0x5 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x6b05, gbc.sp());
        EXPECT(0x9a45, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5, gbc.readMem(0x9a44));
        // 05 027B
        gbc.setState(0x68a5, 0x9f1c, 0xc100, 0xf33c, 0xbd2b, 0x26e, 0x0, 0x0);
        gbc.writeMem(0x68a5, { 0x5 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x9f1c, gbc.sp());
        EXPECT(0x68a6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 05 027C
        gbc.setState(0xc0cc, 0xb3ed, 0x1a30, 0xa59f, 0xe850, 0x35f8, 0x1, 0x1);
        gbc.writeMem(0xc0cc, { 0x5 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0xb3ed, gbc.sp());
        EXPECT(0xc0cd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5, gbc.readMem(0xc0cc));
        // 05 027D
        gbc.setState(0xa8e3, 0x9d09, 0x9720, 0x3766, 0x228, 0xe1ac, 0x0, 0x1);
        gbc.writeMem(0xa8e3, { 0x5 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x9d09, gbc.sp());
        EXPECT(0xa8e4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5, gbc.readMem(0xa8e3));
        // 05 027E
        gbc.setState(0x8a6e, 0xb768, 0x3c40, 0xfc90, 0x80e7, 0xfe0f, 0x1, 0x0);
        gbc.writeMem(0x8a6e, { 0x5 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0xb768, gbc.sp());
        EXPECT(0x8a6f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5, gbc.readMem(0x8a6e));
        // 05 027F
        gbc.setState(0x49de, 0xbd31, 0x9710, 0x6623, 0x6b82, 0xc675, 0x0, 0x1);
        gbc.writeMem(0x49de, { 0x5 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0xbd31, gbc.sp());
        EXPECT(0x49df, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 05 0280
        gbc.setState(0x9b91, 0x35a2, 0x3fb0, 0xdec9, 0xe30, 0xed0f, 0x0, 0x1);
        gbc.writeMem(0x9b91, { 0x5 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x35a2, gbc.sp());
        EXPECT(0x9b92, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5, gbc.readMem(0x9b91));
        // 05 0281
        gbc.setState(0x551c, 0x7dfd, 0x9710, 0xf556, 0x4ffc, 0xabc8, 0x0, 0x0);
        gbc.writeMem(0x551c, { 0x5 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x7dfd, gbc.sp());
        EXPECT(0x551d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 05 0282
        gbc.setState(0x71bf, 0x1a83, 0x6450, 0x92b5, 0x9ee8, 0x73aa, 0x0, 0x0);
        gbc.writeMem(0x71bf, { 0x5 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x1a83, gbc.sp());
        EXPECT(0x71c0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 05 0283
        gbc.setState(0xe23d, 0xfa53, 0xbac0, 0xb10f, 0x3b54, 0x4ee8, 0x1, 0x0);
        gbc.writeMem(0xe23d, { 0x5 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0xfa53, gbc.sp());
        EXPECT(0xe23e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5, gbc.readMem(0xe23d));
        // 05 0284
        gbc.setState(0x51e3, 0x1a8, 0x80f0, 0xade7, 0xa111, 0xe549, 0x0, 0x1);
        gbc.writeMem(0x51e3, { 0x5 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x1a8, gbc.sp());
        EXPECT(0x51e4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 05 0285
        gbc.setState(0x5112, 0xbbc8, 0x6060, 0x13f9, 0xbefd, 0xa19b, 0x0, 0x1);
        gbc.writeMem(0x5112, { 0x5 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0xbbc8, gbc.sp());
        EXPECT(0x5113, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 05 0286
        gbc.setState(0x8b80, 0x953b, 0x7800, 0x33f7, 0x6d21, 0xc84d, 0x0, 0x1);
        gbc.writeMem(0x8b80, { 0x5 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x953b, gbc.sp());
        EXPECT(0x8b81, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5, gbc.readMem(0x8b80));
        // 05 0287
        gbc.setState(0x4d21, 0xa8cb, 0x7490, 0x5ff5, 0xc239, 0x7b0b, 0x0, 0x0);
        gbc.writeMem(0x4d21, { 0x5 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0xa8cb, gbc.sp());
        EXPECT(0x4d22, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 05 0288
        gbc.setState(0x6cb9, 0x4ed9, 0x1310, 0x6c1e, 0x23f, 0x4c5, 0x1, 0x1);
        gbc.writeMem(0x6cb9, { 0x5 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x4ed9, gbc.sp());
        EXPECT(0x6cba, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 05 0289
        gbc.setState(0xde5f, 0x40a3, 0x3b0, 0x5678, 0x9f6c, 0x642b, 0x0, 0x1);
        gbc.writeMem(0xde5f, { 0x5 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x40a3, gbc.sp());
        EXPECT(0xde60, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5, gbc.readMem(0xde5f));
        // 05 028A
        gbc.setState(0x3da9, 0xd62a, 0x3240, 0xec8f, 0xfbd, 0x473b, 0x1, 0x1);
        gbc.writeMem(0x3da9, { 0x5 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0xd62a, gbc.sp());
        EXPECT(0x3daa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 05 028B
        gbc.setState(0xbcd7, 0xb546, 0x5040, 0xb5d9, 0x8a3a, 0x9a60, 0x0, 0x1);
        gbc.writeMem(0xbcd7, { 0x5 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0xb546, gbc.sp());
        EXPECT(0xbcd8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5, gbc.readMem(0xbcd7));
        // 05 028D
        gbc.setState(0x7be4, 0xb7a0, 0xc890, 0x4c2e, 0xc7ad, 0x68e7, 0x1, 0x0);
        gbc.writeMem(0x7be4, { 0x5 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0xb7a0, gbc.sp());
        EXPECT(0x7be5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 05 028E
        gbc.setState(0x884e, 0x521d, 0xf3c0, 0x34d1, 0x3b5e, 0xca68, 0x1, 0x0);
        gbc.writeMem(0x884e, { 0x5 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x521d, gbc.sp());
        EXPECT(0x884f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5, gbc.readMem(0x884e));
        // 05 028F
        gbc.setState(0x8da, 0x6743, 0xd6c0, 0xb9a0, 0xdce0, 0xe671, 0x0, 0x0);
        gbc.writeMem(0x8da, { 0x5 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x6743, gbc.sp());
        EXPECT(0x8db, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 05 0290
        gbc.setState(0x1f35, 0x919a, 0x1760, 0xa9a0, 0xf8d4, 0xa7e2, 0x1, 0x1);
        gbc.writeMem(0x1f35, { 0x5 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x919a, gbc.sp());
        EXPECT(0x1f36, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 05 0291
        gbc.setState(0xdf83, 0x42a1, 0x6d70, 0x8a5d, 0x1fe9, 0xc554, 0x1, 0x1);
        gbc.writeMem(0xdf83, { 0x5 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x42a1, gbc.sp());
        EXPECT(0xdf84, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5, gbc.readMem(0xdf83));
        // 05 0292
        gbc.setState(0x93e4, 0x6e0d, 0xb600, 0xbadf, 0x49db, 0x97bc, 0x0, 0x1);
        gbc.writeMem(0x93e4, { 0x5 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x6e0d, gbc.sp());
        EXPECT(0x93e5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5, gbc.readMem(0x93e4));
        // 05 0293
        gbc.setState(0xe9de, 0x220, 0xc20, 0xbed1, 0x2169, 0x47a6, 0x0, 0x1);
        gbc.writeMem(0xe9de, { 0x5 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x220, gbc.sp());
        EXPECT(0xe9df, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5, gbc.readMem(0xe9de));
        // 05 0295
        gbc.setState(0x7045, 0x1fdf, 0x3b00, 0xfd54, 0x853a, 0x9a25, 0x0, 0x0);
        gbc.writeMem(0x7045, { 0x5 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x1fdf, gbc.sp());
        EXPECT(0x7046, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 05 0296
        gbc.setState(0x1f68, 0x9426, 0x6a50, 0xfd04, 0x726, 0x236b, 0x0, 0x0);
        gbc.writeMem(0x1f68, { 0x5 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x9426, gbc.sp());
        EXPECT(0x1f69, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 05 0297
        gbc.setState(0x1be6, 0xf73b, 0x6d00, 0xe3cf, 0xfac9, 0xa19b, 0x0, 0x1);
        gbc.writeMem(0x1be6, { 0x5 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0xf73b, gbc.sp());
        EXPECT(0x1be7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 05 0298
        gbc.setState(0x41d8, 0xeea0, 0x1810, 0xb50e, 0x9e54, 0x6cd7, 0x0, 0x0);
        gbc.writeMem(0x41d8, { 0x5 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0xeea0, gbc.sp());
        EXPECT(0x41d9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 05 0299
        gbc.setState(0x65a6, 0x49b8, 0x58b0, 0x8633, 0x3b1a, 0xab63, 0x1, 0x0);
        gbc.writeMem(0x65a6, { 0x5 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x49b8, gbc.sp());
        EXPECT(0x65a7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 05 029A
        gbc.setState(0x19fe, 0xb28a, 0x7200, 0x2ed2, 0xf0a3, 0xe1be, 0x0, 0x0);
        gbc.writeMem(0x19fe, { 0x5 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0xb28a, gbc.sp());
        EXPECT(0x19ff, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 05 029C
        gbc.setState(0x78fd, 0x9849, 0xdb40, 0x56ea, 0xbbc6, 0x9055, 0x1, 0x0);
        gbc.writeMem(0x78fd, { 0x5 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x9849, gbc.sp());
        EXPECT(0x78fe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 05 029D
        gbc.setState(0x6073, 0xf1ec, 0xa120, 0xa0e7, 0xbf3e, 0x98f2, 0x0, 0x0);
        gbc.writeMem(0x6073, { 0x5 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0xf1ec, gbc.sp());
        EXPECT(0x6074, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 05 029E
        gbc.setState(0xd55b, 0x47c8, 0xc20, 0xf1d8, 0xebe1, 0x3bff, 0x0, 0x0);
        gbc.writeMem(0xd55b, { 0x5 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x47c8, gbc.sp());
        EXPECT(0xd55c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5, gbc.readMem(0xd55b));
        // 05 029F
        gbc.setState(0x34a9, 0x4e25, 0x1b90, 0x8306, 0x14d8, 0xb8f7, 0x0, 0x1);
        gbc.writeMem(0x34a9, { 0x5 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x4e25, gbc.sp());
        EXPECT(0x34aa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 05 02A0
        gbc.setState(0xb86, 0x6e4c, 0x7150, 0xa8ac, 0x97b5, 0x1c57, 0x1, 0x1);
        gbc.writeMem(0xb86, { 0x5 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x6e4c, gbc.sp());
        EXPECT(0xb87, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 05 02A1
        gbc.setState(0xc747, 0x4f54, 0x4f30, 0x11e7, 0x9f88, 0x1f00, 0x1, 0x0);
        gbc.writeMem(0xc747, { 0x5 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x4f54, gbc.sp());
        EXPECT(0xc748, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5, gbc.readMem(0xc747));
        // 05 02A2
        gbc.setState(0xda56, 0x72c3, 0xe090, 0x7403, 0x2c67, 0x2ff3, 0x0, 0x1);
        gbc.writeMem(0xda56, { 0x5 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x72c3, gbc.sp());
        EXPECT(0xda57, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5, gbc.readMem(0xda56));
        // 05 02A3
        gbc.setState(0xc3c5, 0x8cc3, 0xea80, 0x5b47, 0x215a, 0xf40c, 0x0, 0x1);
        gbc.writeMem(0xc3c5, { 0x5 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x8cc3, gbc.sp());
        EXPECT(0xc3c6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5, gbc.readMem(0xc3c5));
        // 05 02A4
        gbc.setState(0x2287, 0x1dbc, 0x3ba0, 0xf169, 0x199a, 0xb48f, 0x0, 0x1);
        gbc.writeMem(0x2287, { 0x5 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x1dbc, gbc.sp());
        EXPECT(0x2288, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 05 02A5
        gbc.setState(0xd9c1, 0xe818, 0xc1a0, 0xe4d1, 0xa7be, 0xedb2, 0x1, 0x0);
        gbc.writeMem(0xd9c1, { 0x5 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0xe818, gbc.sp());
        EXPECT(0xd9c2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5, gbc.readMem(0xd9c1));
        // 05 02A6
        gbc.setState(0xd185, 0x8593, 0xce00, 0xdad4, 0xae2, 0x1cdc, 0x1, 0x0);
        gbc.writeMem(0xd185, { 0x5 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x8593, gbc.sp());
        EXPECT(0xd186, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5, gbc.readMem(0xd185));
        // 05 02A7
        gbc.setState(0xae00, 0xe1b3, 0xe470, 0xd9e2, 0x3de9, 0x74a8, 0x1, 0x0);
        gbc.writeMem(0xae00, { 0x5 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0xe1b3, gbc.sp());
        EXPECT(0xae01, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5, gbc.readMem(0xae00));
        // 05 02A8
        gbc.setState(0x9eb5, 0xecc9, 0x1fc0, 0xec24, 0xd327, 0x3fe8, 0x1, 0x0);
        gbc.writeMem(0x9eb5, { 0x5 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0xecc9, gbc.sp());
        EXPECT(0x9eb6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5, gbc.readMem(0x9eb5));
        // 05 02A9
        gbc.setState(0x16e6, 0x6279, 0x6090, 0xa0d9, 0x7277, 0x47a, 0x1, 0x0);
        gbc.writeMem(0x16e6, { 0x5 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x6279, gbc.sp());
        EXPECT(0x16e7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 05 02AA
        gbc.setState(0x3736, 0x9c3b, 0x32a0, 0x3ac8, 0xae9b, 0x280e, 0x1, 0x1);
        gbc.writeMem(0x3736, { 0x5 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x9c3b, gbc.sp());
        EXPECT(0x3737, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 05 02AB
        gbc.setState(0xdb3e, 0xb747, 0x19a0, 0xb1ac, 0x8ce1, 0x37f2, 0x1, 0x1);
        gbc.writeMem(0xdb3e, { 0x5 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0xb747, gbc.sp());
        EXPECT(0xdb3f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5, gbc.readMem(0xdb3e));
        // 05 02AC
        gbc.setState(0xc20a, 0x466e, 0x460, 0x2468, 0x1a9d, 0x4d0, 0x0, 0x0);
        gbc.writeMem(0xc20a, { 0x5 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x466e, gbc.sp());
        EXPECT(0xc20b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5, gbc.readMem(0xc20a));
        // 05 02AE
        gbc.setState(0xaaea, 0x715e, 0x1760, 0xd8ab, 0xef36, 0x1798, 0x0, 0x0);
        gbc.writeMem(0xaaea, { 0x5 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x715e, gbc.sp());
        EXPECT(0xaaeb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5, gbc.readMem(0xaaea));
        // 05 02AF
        gbc.setState(0xc693, 0x2025, 0xd5f0, 0xca0b, 0x1772, 0x4ab7, 0x0, 0x1);
        gbc.writeMem(0xc693, { 0x5 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x2025, gbc.sp());
        EXPECT(0xc694, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5, gbc.readMem(0xc693));
        // 05 02B0
        gbc.setState(0xae8e, 0xee45, 0x4f70, 0x4c3d, 0xfbe0, 0x4503, 0x0, 0x0);
        gbc.writeMem(0xae8e, { 0x5 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0xee45, gbc.sp());
        EXPECT(0xae8f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5, gbc.readMem(0xae8e));
        // 05 02B1
        gbc.setState(0x69f3, 0xfa51, 0x800, 0xf9a9, 0x8ef4, 0xa3ae, 0x1, 0x0);
        gbc.writeMem(0x69f3, { 0x5 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0xfa51, gbc.sp());
        EXPECT(0x69f4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 05 02B2
        gbc.setState(0x6403, 0xc54e, 0xa70, 0x3511, 0xc49b, 0x5be1, 0x1, 0x0);
        gbc.writeMem(0x6403, { 0x5 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0xc54e, gbc.sp());
        EXPECT(0x6404, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 05 02B3
        gbc.setState(0xb700, 0xb9f3, 0x2630, 0x558c, 0x3b5c, 0x218e, 0x0, 0x1);
        gbc.writeMem(0xb700, { 0x5 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0xb9f3, gbc.sp());
        EXPECT(0xb701, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5, gbc.readMem(0xb700));
        // 05 02B4
        gbc.setState(0xb0a5, 0x1b0c, 0xda20, 0x738a, 0x2f2c, 0x5a31, 0x1, 0x0);
        gbc.writeMem(0xb0a5, { 0x5 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x1b0c, gbc.sp());
        EXPECT(0xb0a6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5, gbc.readMem(0xb0a5));
        // 05 02B5
        gbc.setState(0xb740, 0x131d, 0x49b0, 0xc226, 0xf957, 0x1b37, 0x0, 0x1);
        gbc.writeMem(0xb740, { 0x5 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x131d, gbc.sp());
        EXPECT(0xb741, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5, gbc.readMem(0xb740));
        // 05 02B6
        gbc.setState(0xf50, 0xa8d6, 0xd3b0, 0x1e47, 0xc172, 0xf939, 0x1, 0x0);
        gbc.writeMem(0xf50, { 0x5 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0xa8d6, gbc.sp());
        EXPECT(0xf51, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 05 02B7
        gbc.setState(0xa6bf, 0x23de, 0x3220, 0xd63d, 0x96e8, 0x48dc, 0x1, 0x1);
        gbc.writeMem(0xa6bf, { 0x5 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x23de, gbc.sp());
        EXPECT(0xa6c0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5, gbc.readMem(0xa6bf));
        // 05 02B8
        gbc.setState(0x8bd, 0x8184, 0x2f50, 0x22da, 0x982a, 0xe2dc, 0x0, 0x1);
        gbc.writeMem(0x8bd, { 0x5 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x8184, gbc.sp());
        EXPECT(0x8be, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 05 02B9
        gbc.setState(0xba13, 0xbf8d, 0x7a30, 0xd516, 0xb35, 0x55cd, 0x1, 0x1);
        gbc.writeMem(0xba13, { 0x5 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0xbf8d, gbc.sp());
        EXPECT(0xba14, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5, gbc.readMem(0xba13));
        // 05 02BA
        gbc.setState(0x1e43, 0x92a1, 0xf0d0, 0x86d5, 0x6257, 0x4160, 0x1, 0x0);
        gbc.writeMem(0x1e43, { 0x5 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x92a1, gbc.sp());
        EXPECT(0x1e44, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 05 02BB
        gbc.setState(0x1c8, 0x31a1, 0xa8e0, 0x994, 0xccee, 0xd4d3, 0x1, 0x0);
        gbc.writeMem(0x1c8, { 0x5 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x31a1, gbc.sp());
        EXPECT(0x1c9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 05 02BC
        gbc.setState(0xbf23, 0x74ea, 0x59e0, 0x582b, 0x78f2, 0x984c, 0x0, 0x1);
        gbc.writeMem(0xbf23, { 0x5 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x74ea, gbc.sp());
        EXPECT(0xbf24, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5, gbc.readMem(0xbf23));
        // 05 02BD
        gbc.setState(0x61b5, 0x8c7e, 0x3c40, 0x323, 0xb69, 0x502c, 0x1, 0x0);
        gbc.writeMem(0x61b5, { 0x5 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x8c7e, gbc.sp());
        EXPECT(0x61b6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 05 02BE
        gbc.setState(0xdb8e, 0x6120, 0x42f0, 0xfbe0, 0xfd8c, 0x6f54, 0x1, 0x1);
        gbc.writeMem(0xdb8e, { 0x5 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x6120, gbc.sp());
        EXPECT(0xdb8f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5, gbc.readMem(0xdb8e));
        // 05 02BF
        gbc.setState(0xc7b3, 0x5812, 0xc1e0, 0xe347, 0x5ed3, 0x63e8, 0x0, 0x1);
        gbc.writeMem(0xc7b3, { 0x5 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x5812, gbc.sp());
        EXPECT(0xc7b4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5, gbc.readMem(0xc7b3));
        // 05 02C0
        gbc.setState(0x55ab, 0xcaab, 0xe800, 0xd98e, 0x183f, 0x206, 0x0, 0x1);
        gbc.writeMem(0x55ab, { 0x5 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0xcaab, gbc.sp());
        EXPECT(0x55ac, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 05 02C1
        gbc.setState(0x62ad, 0xa59a, 0xa880, 0x5677, 0xac8a, 0x360f, 0x0, 0x0);
        gbc.writeMem(0x62ad, { 0x5 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0xa59a, gbc.sp());
        EXPECT(0x62ae, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 05 02C2
        gbc.setState(0xa0c2, 0x183f, 0xaf80, 0xf8e1, 0xdd49, 0x6316, 0x0, 0x0);
        gbc.writeMem(0xa0c2, { 0x5 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x183f, gbc.sp());
        EXPECT(0xa0c3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5, gbc.readMem(0xa0c2));
        // 05 02C3
        gbc.setState(0x14ac, 0xd422, 0x4100, 0x3d8e, 0x51d1, 0x654, 0x0, 0x0);
        gbc.writeMem(0x14ac, { 0x5 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0xd422, gbc.sp());
        EXPECT(0x14ad, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 05 02C4
        gbc.setState(0xfe5, 0x5836, 0xb360, 0xc1ad, 0x1b4d, 0xa8df, 0x1, 0x1);
        gbc.writeMem(0xfe5, { 0x5 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x5836, gbc.sp());
        EXPECT(0xfe6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 05 02C5
        gbc.setState(0x91f1, 0x2ba2, 0xf010, 0xc667, 0xf280, 0x340, 0x1, 0x0);
        gbc.writeMem(0x91f1, { 0x5 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x2ba2, gbc.sp());
        EXPECT(0x91f2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5, gbc.readMem(0x91f1));
        // 05 02C6
        gbc.setState(0x494d, 0x1d54, 0xae10, 0x75af, 0x152b, 0xaa51, 0x0, 0x0);
        gbc.writeMem(0x494d, { 0x5 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x1d54, gbc.sp());
        EXPECT(0x494e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 05 02C7
        gbc.setState(0xe4e, 0x5752, 0x51b0, 0xfc49, 0xb947, 0x6895, 0x0, 0x1);
        gbc.writeMem(0xe4e, { 0x5 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x5752, gbc.sp());
        EXPECT(0xe4f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 05 02C8
        gbc.setState(0x905, 0xbd2b, 0x4910, 0x1152, 0x77de, 0x11b, 0x1, 0x0);
        gbc.writeMem(0x905, { 0x5 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0xbd2b, gbc.sp());
        EXPECT(0x906, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 05 02C9
        gbc.setState(0x8828, 0xd9be, 0x8990, 0x4a5f, 0xd322, 0xe14, 0x1, 0x0);
        gbc.writeMem(0x8828, { 0x5 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0xd9be, gbc.sp());
        EXPECT(0x8829, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5, gbc.readMem(0x8828));
        // 05 02CA
        gbc.setState(0x66e9, 0x3c6d, 0xb390, 0x5c75, 0x2897, 0x40f0, 0x0, 0x1);
        gbc.writeMem(0x66e9, { 0x5 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x3c6d, gbc.sp());
        EXPECT(0x66ea, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 05 02CB
        gbc.setState(0x5420, 0xffc7, 0xac00, 0x4c89, 0x8c42, 0x7640, 0x0, 0x0);
        gbc.writeMem(0x5420, { 0x5 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0xffc7, gbc.sp());
        EXPECT(0x5421, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 05 02CC
        gbc.setState(0x709a, 0xfa8b, 0xf960, 0xbe09, 0xc42c, 0x41fc, 0x0, 0x0);
        gbc.writeMem(0x709a, { 0x5 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0xfa8b, gbc.sp());
        EXPECT(0x709b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 05 02CD
        gbc.setState(0x5481, 0x6073, 0x71f0, 0x4a2e, 0x57fc, 0x963a, 0x1, 0x0);
        gbc.writeMem(0x5481, { 0x5 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x6073, gbc.sp());
        EXPECT(0x5482, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 05 02CE
        gbc.setState(0x5842, 0x4482, 0xf30, 0xb0d0, 0x6b53, 0x1567, 0x0, 0x1);
        gbc.writeMem(0x5842, { 0x5 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x4482, gbc.sp());
        EXPECT(0x5843, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 05 02CF
        gbc.setState(0x2580, 0x8a8d, 0xe3a0, 0xbfb8, 0x50ac, 0x1dab, 0x1, 0x1);
        gbc.writeMem(0x2580, { 0x5 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x8a8d, gbc.sp());
        EXPECT(0x2581, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 05 02D1
        gbc.setState(0x60f5, 0x5ba6, 0xe3c0, 0x24c9, 0x5ac2, 0x8e4d, 0x0, 0x1);
        gbc.writeMem(0x60f5, { 0x5 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x5ba6, gbc.sp());
        EXPECT(0x60f6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 05 02D2
        gbc.setState(0xcfb, 0xad50, 0xce50, 0x8e1c, 0xaba3, 0xe269, 0x0, 0x1);
        gbc.writeMem(0xcfb, { 0x5 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0xad50, gbc.sp());
        EXPECT(0xcfc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 05 02D3
        gbc.setState(0xdc8d, 0x8e0c, 0xd690, 0x9a02, 0x6fe5, 0x85ae, 0x0, 0x0);
        gbc.writeMem(0xdc8d, { 0x5 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0x8e0c, gbc.sp());
        EXPECT(0xdc8e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5, gbc.readMem(0xdc8d));
        // 05 02D4
        gbc.setState(0x4114, 0xf054, 0x8e20, 0x448, 0xb0e3, 0xd55, 0x0, 0x0);
        gbc.writeMem(0x4114, { 0x5 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0xf054, gbc.sp());
        EXPECT(0x4115, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 05 02D5
        gbc.setState(0xd9b3, 0x270f, 0x6c70, 0x8bba, 0xcf1e, 0xb93b, 0x1, 0x1);
        gbc.writeMem(0xd9b3, { 0x5 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x270f, gbc.sp());
        EXPECT(0xd9b4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5, gbc.readMem(0xd9b3));
        // 05 02D6
        gbc.setState(0x83b3, 0x12d6, 0x1410, 0xb585, 0x6393, 0x2376, 0x1, 0x0);
        gbc.writeMem(0x83b3, { 0x5 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x12d6, gbc.sp());
        EXPECT(0x83b4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5, gbc.readMem(0x83b3));
        // 05 02D7
        gbc.setState(0x19b5, 0x6681, 0x8210, 0x2696, 0x631f, 0xccef, 0x0, 0x1);
        gbc.writeMem(0x19b5, { 0x5 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x6681, gbc.sp());
        EXPECT(0x19b6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 05 02D8
        gbc.setState(0x75a0, 0x8143, 0x1290, 0x8d71, 0x8766, 0xa92, 0x1, 0x0);
        gbc.writeMem(0x75a0, { 0x5 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x8143, gbc.sp());
        EXPECT(0x75a1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 05 02D9
        gbc.setState(0xd6c9, 0x49cf, 0xcfc0, 0x677, 0xf4d5, 0x3104, 0x1, 0x0);
        gbc.writeMem(0xd6c9, { 0x5 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x49cf, gbc.sp());
        EXPECT(0xd6ca, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5, gbc.readMem(0xd6c9));
        // 05 02DA
        gbc.setState(0xaaaa, 0x582e, 0x88b0, 0xaf38, 0xdaab, 0x2d68, 0x1, 0x0);
        gbc.writeMem(0xaaaa, { 0x5 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x582e, gbc.sp());
        EXPECT(0xaaab, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5, gbc.readMem(0xaaaa));
        // 05 02DB
        gbc.setState(0xeefa, 0xdaea, 0xba60, 0xfb51, 0x8c1a, 0x1144, 0x0, 0x1);
        gbc.writeMem(0xeefa, { 0x5 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0xdaea, gbc.sp());
        EXPECT(0xeefb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5, gbc.readMem(0xeefa));
        // 05 02DC
        gbc.setState(0x1907, 0xbdf3, 0x85c0, 0x8221, 0x6a9d, 0xf02, 0x1, 0x0);
        gbc.writeMem(0x1907, { 0x5 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0xbdf3, gbc.sp());
        EXPECT(0x1908, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 05 02DD
        gbc.setState(0xf65, 0x4801, 0xb140, 0xbe0a, 0xab39, 0xe4b4, 0x1, 0x1);
        gbc.writeMem(0xf65, { 0x5 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x4801, gbc.sp());
        EXPECT(0xf66, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 05 02DE
        gbc.setState(0x28f5, 0x4643, 0xd780, 0x964d, 0x4048, 0x5046, 0x0, 0x0);
        gbc.writeMem(0x28f5, { 0x5 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x4643, gbc.sp());
        EXPECT(0x28f6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 05 02DF
        gbc.setState(0xec22, 0xdb4c, 0xe3e0, 0xdd18, 0xf748, 0x375f, 0x0, 0x1);
        gbc.writeMem(0xec22, { 0x5 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0xdb4c, gbc.sp());
        EXPECT(0xec23, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5, gbc.readMem(0xec22));
        // 05 02E0
        gbc.setState(0x66bd, 0xade9, 0x2760, 0xfdde, 0x4e1b, 0x3d92, 0x0, 0x1);
        gbc.writeMem(0x66bd, { 0x5 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0xade9, gbc.sp());
        EXPECT(0x66be, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 05 02E1
        gbc.setState(0x4729, 0xe863, 0xc270, 0xaae0, 0xbb75, 0xc08d, 0x0, 0x0);
        gbc.writeMem(0x4729, { 0x5 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0xe863, gbc.sp());
        EXPECT(0x472a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 05 02E2
        gbc.setState(0xfe9, 0xd96a, 0xf210, 0x4548, 0x1797, 0xeef9, 0x0, 0x0);
        gbc.writeMem(0xfe9, { 0x5 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0xd96a, gbc.sp());
        EXPECT(0xfea, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 05 02E3
        gbc.setState(0x94e, 0xebc7, 0x1b10, 0x5240, 0xb84c, 0xf225, 0x1, 0x0);
        gbc.writeMem(0x94e, { 0x5 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0xebc7, gbc.sp());
        EXPECT(0x94f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 05 02E4
        gbc.setState(0xa1ee, 0xd24a, 0x3cd0, 0x87c2, 0x80bf, 0x67a7, 0x0, 0x0);
        gbc.writeMem(0xa1ee, { 0x5 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0xd24a, gbc.sp());
        EXPECT(0xa1ef, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5, gbc.readMem(0xa1ee));
        // 05 02E5
        gbc.setState(0xd6b6, 0x5236, 0xefb0, 0x435b, 0x40cb, 0x4217, 0x1, 0x0);
        gbc.writeMem(0xd6b6, { 0x5 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x5236, gbc.sp());
        EXPECT(0xd6b7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5, gbc.readMem(0xd6b6));
        // 05 02E6
        gbc.setState(0x1b1a, 0x7c11, 0x7880, 0xbd30, 0xaa75, 0xe297, 0x1, 0x0);
        gbc.writeMem(0x1b1a, { 0x5 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0x7c11, gbc.sp());
        EXPECT(0x1b1b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 05 02E7
        gbc.setState(0x9b4d, 0x3ee2, 0x5e80, 0x9ec3, 0xa726, 0xa4c5, 0x0, 0x1);
        gbc.writeMem(0x9b4d, { 0x5 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x3ee2, gbc.sp());
        EXPECT(0x9b4e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5, gbc.readMem(0x9b4d));
        // 05 02E9
        gbc.setState(0x21dd, 0x421b, 0xee90, 0x5ae2, 0x7cd1, 0xaa57, 0x1, 0x0);
        gbc.writeMem(0x21dd, { 0x5 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x421b, gbc.sp());
        EXPECT(0x21de, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 05 02EA
        gbc.setState(0xd263, 0x6ba8, 0xcea0, 0x9963, 0x4d55, 0x92, 0x1, 0x0);
        gbc.writeMem(0xd263, { 0x5 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x6ba8, gbc.sp());
        EXPECT(0xd264, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5, gbc.readMem(0xd263));
        // 05 02EB
        gbc.setState(0xb19c, 0xbdd5, 0x6fc0, 0x5672, 0x3543, 0x3541, 0x0, 0x1);
        gbc.writeMem(0xb19c, { 0x5 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0xbdd5, gbc.sp());
        EXPECT(0xb19d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5, gbc.readMem(0xb19c));
        // 05 02EC
        gbc.setState(0x39ea, 0x34c9, 0x1d50, 0x8037, 0x7f33, 0xab42, 0x0, 0x0);
        gbc.writeMem(0x39ea, { 0x5 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x34c9, gbc.sp());
        EXPECT(0x39eb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 05 02ED
        gbc.setState(0x8f0c, 0xe961, 0x70d0, 0xf7dc, 0x1abe, 0x2ae0, 0x0, 0x1);
        gbc.writeMem(0x8f0c, { 0x5 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0xe961, gbc.sp());
        EXPECT(0x8f0d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5, gbc.readMem(0x8f0c));
        // 05 02EE
        gbc.setState(0x815f, 0x511d, 0xef40, 0x7b2a, 0x66f7, 0x8398, 0x1, 0x1);
        gbc.writeMem(0x815f, { 0x5 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x511d, gbc.sp());
        EXPECT(0x8160, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5, gbc.readMem(0x815f));
        // 05 02EF
        gbc.setState(0x756a, 0x250d, 0xc9b0, 0xbff6, 0x589e, 0x76c8, 0x1, 0x1);
        gbc.writeMem(0x756a, { 0x5 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x250d, gbc.sp());
        EXPECT(0x756b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 05 02F0
        gbc.setState(0xa86, 0xc0d8, 0x4c40, 0xe4c1, 0x52d2, 0x7055, 0x0, 0x1);
        gbc.writeMem(0xa86, { 0x5 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0xc0d8, gbc.sp());
        EXPECT(0xa87, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 05 02F1
        gbc.setState(0x9603, 0x52ae, 0xb260, 0xe5b5, 0xa88f, 0xf1a8, 0x0, 0x0);
        gbc.writeMem(0x9603, { 0x5 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x52ae, gbc.sp());
        EXPECT(0x9604, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5, gbc.readMem(0x9603));
        // 05 02F3
        gbc.setState(0x4b89, 0x5f9d, 0x6840, 0xb5bb, 0x1b31, 0x7937, 0x0, 0x0);
        gbc.writeMem(0x4b89, { 0x5 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x5f9d, gbc.sp());
        EXPECT(0x4b8a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 05 02F4
        gbc.setState(0x4535, 0xe9ce, 0x3d70, 0x474a, 0x88d8, 0xf99d, 0x0, 0x0);
        gbc.writeMem(0x4535, { 0x5 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0xe9ce, gbc.sp());
        EXPECT(0x4536, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 05 02F6
        gbc.setState(0x9b4, 0xd6dc, 0x6220, 0x8290, 0x800e, 0x306d, 0x0, 0x1);
        gbc.writeMem(0x9b4, { 0x5 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0xd6dc, gbc.sp());
        EXPECT(0x9b5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 05 02F7
        gbc.setState(0x3ee9, 0x824f, 0x5700, 0x5fff, 0xbda3, 0xf4f6, 0x0, 0x1);
        gbc.writeMem(0x3ee9, { 0x5 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x824f, gbc.sp());
        EXPECT(0x3eea, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 05 02F8
        gbc.setState(0x97f5, 0x76ae, 0xad30, 0xc514, 0x6f3d, 0x3f81, 0x1, 0x1);
        gbc.writeMem(0x97f5, { 0x5 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x76ae, gbc.sp());
        EXPECT(0x97f6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5, gbc.readMem(0x97f5));
        // 05 02F9
        gbc.setState(0xc101, 0xa2c6, 0x9710, 0xc99d, 0x76d9, 0x29c8, 0x0, 0x1);
        gbc.writeMem(0xc101, { 0x5 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0xa2c6, gbc.sp());
        EXPECT(0xc102, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5, gbc.readMem(0xc101));
        // 05 02FA
        gbc.setState(0x9784, 0xd95c, 0x5fd0, 0xb928, 0x8e3e, 0x8a4f, 0x1, 0x0);
        gbc.writeMem(0x9784, { 0x5 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0xd95c, gbc.sp());
        EXPECT(0x9785, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5, gbc.readMem(0x9784));
        // 05 02FB
        gbc.setState(0xd35b, 0xe41e, 0xda20, 0xeb7f, 0x810d, 0x4d36, 0x1, 0x1);
        gbc.writeMem(0xd35b, { 0x5 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0xe41e, gbc.sp());
        EXPECT(0xd35c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5, gbc.readMem(0xd35b));
        // 05 02FC
        gbc.setState(0x4860, 0x6ea1, 0x9c0, 0xfa79, 0x3a1e, 0x1283, 0x0, 0x0);
        gbc.writeMem(0x4860, { 0x5 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x6ea1, gbc.sp());
        EXPECT(0x4861, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 05 02FD
        gbc.setState(0x4952, 0x1698, 0x2840, 0x25c1, 0xcde8, 0x68e2, 0x0, 0x0);
        gbc.writeMem(0x4952, { 0x5 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x1698, gbc.sp());
        EXPECT(0x4953, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 05 02FE
        gbc.setState(0xc859, 0x2675, 0xb5f0, 0xa2ad, 0xc3e4, 0x52bf, 0x0, 0x0);
        gbc.writeMem(0xc859, { 0x5 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x2675, gbc.sp());
        EXPECT(0xc85a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5, gbc.readMem(0xc859));
        // 05 02FF
        gbc.setState(0xab41, 0x4a1b, 0x3710, 0xc75c, 0x69d8, 0xa728, 0x0, 0x0);
        gbc.writeMem(0xab41, { 0x5 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x4a1b, gbc.sp());
        EXPECT(0xab42, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5, gbc.readMem(0xab41));
        // 05 0300
        gbc.setState(0xd42d, 0xab5e, 0x1940, 0x25ca, 0xa0d7, 0x3e87, 0x1, 0x1);
        gbc.writeMem(0xd42d, { 0x5 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0xab5e, gbc.sp());
        EXPECT(0xd42e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5, gbc.readMem(0xd42d));
        // 05 0301
        gbc.setState(0xcca5, 0xcc55, 0x6600, 0x469b, 0x5d85, 0xae57, 0x0, 0x0);
        gbc.writeMem(0xcca5, { 0x5 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0xcc55, gbc.sp());
        EXPECT(0xcca6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5, gbc.readMem(0xcca5));
        // 05 0302
        gbc.setState(0x70a2, 0x785a, 0x9770, 0xa96a, 0x9655, 0xc352, 0x1, 0x1);
        gbc.writeMem(0x70a2, { 0x5 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x785a, gbc.sp());
        EXPECT(0x70a3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 05 0304
        gbc.setState(0xc068, 0xd81b, 0xb080, 0x98a8, 0x2488, 0x3c31, 0x0, 0x0);
        gbc.writeMem(0xc068, { 0x5 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0xd81b, gbc.sp());
        EXPECT(0xc069, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5, gbc.readMem(0xc068));
        // 05 0305
        gbc.setState(0x3697, 0x721d, 0x2340, 0xa9e2, 0x28fb, 0x59d3, 0x0, 0x0);
        gbc.writeMem(0x3697, { 0x5 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x721d, gbc.sp());
        EXPECT(0x3698, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 05 0307
        gbc.setState(0xc0c9, 0xbc6e, 0x7590, 0x3a92, 0x9c38, 0xdf7e, 0x1, 0x1);
        gbc.writeMem(0xc0c9, { 0x5 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0xbc6e, gbc.sp());
        EXPECT(0xc0ca, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5, gbc.readMem(0xc0c9));
        // 05 0308
        gbc.setState(0x5624, 0xb31d, 0xa8c0, 0x5e60, 0xac2c, 0x1bdd, 0x1, 0x0);
        gbc.writeMem(0x5624, { 0x5 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0xb31d, gbc.sp());
        EXPECT(0x5625, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 05 0309
        gbc.setState(0xd410, 0x468a, 0xfc50, 0xe1e9, 0xec40, 0xd246, 0x1, 0x0);
        gbc.writeMem(0xd410, { 0x5 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x468a, gbc.sp());
        EXPECT(0xd411, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5, gbc.readMem(0xd410));
        // 05 030A
        gbc.setState(0x3ce5, 0xe049, 0x7350, 0x3e7a, 0x1069, 0x3453, 0x0, 0x1);
        gbc.writeMem(0x3ce5, { 0x5 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0xe049, gbc.sp());
        EXPECT(0x3ce6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 05 030B
        gbc.setState(0x7ad0, 0xb431, 0xe490, 0x1a48, 0xd9e3, 0x4060, 0x0, 0x1);
        gbc.writeMem(0x7ad0, { 0x5 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0xb431, gbc.sp());
        EXPECT(0x7ad1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 05 030C
        gbc.setState(0x4eec, 0x9128, 0x1fd0, 0x49f2, 0x42c4, 0x810a, 0x0, 0x1);
        gbc.writeMem(0x4eec, { 0x5 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x9128, gbc.sp());
        EXPECT(0x4eed, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 05 030E
        gbc.setState(0xb2c2, 0xaafa, 0xf1a0, 0x4078, 0x137f, 0xefbc, 0x1, 0x0);
        gbc.writeMem(0xb2c2, { 0x5 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0xaafa, gbc.sp());
        EXPECT(0xb2c3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5, gbc.readMem(0xb2c2));
        // 05 030F
        gbc.setState(0x8e9d, 0x7400, 0x1a00, 0xd8a6, 0xaf1d, 0x31d, 0x0, 0x0);
        gbc.writeMem(0x8e9d, { 0x5 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x7400, gbc.sp());
        EXPECT(0x8e9e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5, gbc.readMem(0x8e9d));
        // 05 0311
        gbc.setState(0x4d4, 0x91a1, 0x8930, 0x4919, 0xbc96, 0x1f8f, 0x1, 0x1);
        gbc.writeMem(0x4d4, { 0x5 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x91a1, gbc.sp());
        EXPECT(0x4d5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 05 0312
        gbc.setState(0x1684, 0x9ab0, 0xd770, 0x62be, 0xc1db, 0xefc3, 0x0, 0x1);
        gbc.writeMem(0x1684, { 0x5 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x9ab0, gbc.sp());
        EXPECT(0x1685, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 05 0313
        gbc.setState(0xb11e, 0xf3b9, 0x2320, 0x7d51, 0xe7ee, 0x37b5, 0x1, 0x0);
        gbc.writeMem(0xb11e, { 0x5 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0xf3b9, gbc.sp());
        EXPECT(0xb11f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5, gbc.readMem(0xb11e));
        // 05 0314
        gbc.setState(0xe7a2, 0xe43e, 0x4360, 0xf106, 0x4080, 0xa159, 0x0, 0x1);
        gbc.writeMem(0xe7a2, { 0x5 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0xe43e, gbc.sp());
        EXPECT(0xe7a3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5, gbc.readMem(0xe7a2));
        // 05 0315
        gbc.setState(0x41e8, 0xf706, 0xc630, 0x7ba6, 0xc189, 0xd5bb, 0x1, 0x0);
        gbc.writeMem(0x41e8, { 0x5 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0xf706, gbc.sp());
        EXPECT(0x41e9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 05 0316
        gbc.setState(0x709d, 0x243d, 0xf9f0, 0x9d27, 0x88a5, 0x323a, 0x0, 0x0);
        gbc.writeMem(0x709d, { 0x5 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x243d, gbc.sp());
        EXPECT(0x709e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 05 0317
        gbc.setState(0xcfbb, 0x386f, 0xd300, 0x261d, 0xf27c, 0xe622, 0x1, 0x1);
        gbc.writeMem(0xcfbb, { 0x5 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x386f, gbc.sp());
        EXPECT(0xcfbc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5, gbc.readMem(0xcfbb));
        // 05 0318
        gbc.setState(0xa453, 0xcb14, 0x5c0, 0xead9, 0xb3f, 0x391f, 0x0, 0x1);
        gbc.writeMem(0xa453, { 0x5 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0xcb14, gbc.sp());
        EXPECT(0xa454, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5, gbc.readMem(0xa453));
        // 05 0319
        gbc.setState(0x81d, 0xbdd4, 0x2700, 0x2925, 0xb722, 0x1cea, 0x1, 0x0);
        gbc.writeMem(0x81d, { 0x5 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0xbdd4, gbc.sp());
        EXPECT(0x81e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 05 031B
        gbc.setState(0xa011, 0x14c2, 0xb2c0, 0xcf0a, 0x8ad4, 0xa1c1, 0x0, 0x0);
        gbc.writeMem(0xa011, { 0x5 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x14c2, gbc.sp());
        EXPECT(0xa012, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5, gbc.readMem(0xa011));
        // 05 031C
        gbc.setState(0x5410, 0xda7f, 0xd6c0, 0xba4f, 0x52ec, 0xd446, 0x0, 0x0);
        gbc.writeMem(0x5410, { 0x5 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0xda7f, gbc.sp());
        EXPECT(0x5411, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 05 031E
        gbc.setState(0x5f4b, 0x77e2, 0x2a90, 0xe883, 0x3f7b, 0x252c, 0x0, 0x0);
        gbc.writeMem(0x5f4b, { 0x5 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x77e2, gbc.sp());
        EXPECT(0x5f4c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 05 031F
        gbc.setState(0x728d, 0xfa14, 0x4020, 0xb297, 0xd22d, 0xa037, 0x0, 0x0);
        gbc.writeMem(0x728d, { 0x5 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0xfa14, gbc.sp());
        EXPECT(0x728e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 05 0321
        gbc.setState(0x1154, 0x70d7, 0x9a0, 0xa5f2, 0x58f7, 0x71fa, 0x1, 0x0);
        gbc.writeMem(0x1154, { 0x5 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0x70d7, gbc.sp());
        EXPECT(0x1155, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 05 0323
        gbc.setState(0x654c, 0x9ab6, 0x7280, 0xe03a, 0x7c11, 0x8556, 0x1, 0x1);
        gbc.writeMem(0x654c, { 0x5 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0x9ab6, gbc.sp());
        EXPECT(0x654d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 05 0324
        gbc.setState(0xe2f7, 0x92ea, 0x7420, 0x483e, 0xa4d6, 0xbcb9, 0x0, 0x0);
        gbc.writeMem(0xe2f7, { 0x5 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x92ea, gbc.sp());
        EXPECT(0xe2f8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5, gbc.readMem(0xe2f7));
        // 05 0325
        gbc.setState(0x538, 0x4741, 0x4a90, 0x657d, 0x3d0, 0x4d4c, 0x0, 0x0);
        gbc.writeMem(0x538, { 0x5 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x4741, gbc.sp());
        EXPECT(0x539, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 05 0326
        gbc.setState(0x10af, 0x23e9, 0x9200, 0xc343, 0x5227, 0x5763, 0x1, 0x0);
        gbc.writeMem(0x10af, { 0x5 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x23e9, gbc.sp());
        EXPECT(0x10b0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 05 0327
        gbc.setState(0x6d22, 0xfad4, 0xa9f0, 0xc020, 0xf84b, 0xe6d3, 0x1, 0x0);
        gbc.writeMem(0x6d22, { 0x5 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0xfad4, gbc.sp());
        EXPECT(0x6d23, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 05 0328
        gbc.setState(0x66b8, 0xc1f, 0xdcb0, 0x9a33, 0x82fd, 0xa3ff, 0x1, 0x0);
        gbc.writeMem(0x66b8, { 0x5 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0xc1f, gbc.sp());
        EXPECT(0x66b9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 05 0329
        gbc.setState(0x213f, 0xeb93, 0x8f40, 0x8eaa, 0x8212, 0xb4ef, 0x0, 0x1);
        gbc.writeMem(0x213f, { 0x5 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0xeb93, gbc.sp());
        EXPECT(0x2140, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 05 032A
        gbc.setState(0xc008, 0x3255, 0xdba0, 0xe57f, 0x22d8, 0x44f3, 0x1, 0x1);
        gbc.writeMem(0xc008, { 0x5 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x3255, gbc.sp());
        EXPECT(0xc009, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5, gbc.readMem(0xc008));
        // 05 032B
        gbc.setState(0xeb55, 0x2a23, 0x8fc0, 0xa05, 0x8f65, 0x7a08, 0x1, 0x1);
        gbc.writeMem(0xeb55, { 0x5 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x2a23, gbc.sp());
        EXPECT(0xeb56, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5, gbc.readMem(0xeb55));
        // 05 032C
        gbc.setState(0xaa9d, 0x8a31, 0x2580, 0x631c, 0xe681, 0x7552, 0x0, 0x1);
        gbc.writeMem(0xaa9d, { 0x5 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x8a31, gbc.sp());
        EXPECT(0xaa9e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5, gbc.readMem(0xaa9d));
        // 05 032D
        gbc.setState(0x8b97, 0xb01e, 0x3f50, 0xb315, 0x81e6, 0x41b3, 0x1, 0x0);
        gbc.writeMem(0x8b97, { 0x5 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0xb01e, gbc.sp());
        EXPECT(0x8b98, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5, gbc.readMem(0x8b97));
        // 05 032E
        gbc.setState(0x2273, 0x44af, 0x88b0, 0x5056, 0xb5f7, 0xdc0c, 0x0, 0x1);
        gbc.writeMem(0x2273, { 0x5 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x44af, gbc.sp());
        EXPECT(0x2274, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 05 032F
        gbc.setState(0xc506, 0x89b5, 0x3940, 0x63f0, 0xffa5, 0xb92f, 0x0, 0x1);
        gbc.writeMem(0xc506, { 0x5 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x89b5, gbc.sp());
        EXPECT(0xc507, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5, gbc.readMem(0xc506));
        // 05 0330
        gbc.setState(0xefcb, 0x7889, 0xd230, 0xd441, 0xba90, 0x3366, 0x1, 0x0);
        gbc.writeMem(0xefcb, { 0x5 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x7889, gbc.sp());
        EXPECT(0xefcc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5, gbc.readMem(0xefcb));
        // 05 0331
        gbc.setState(0xcdd6, 0x6775, 0x2bd0, 0x3f1c, 0xed32, 0x431e, 0x1, 0x1);
        gbc.writeMem(0xcdd6, { 0x5 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x6775, gbc.sp());
        EXPECT(0xcdd7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5, gbc.readMem(0xcdd6));
        // 05 0332
        gbc.setState(0x75d8, 0xe581, 0x9d30, 0xa71f, 0x6d3c, 0x71cf, 0x1, 0x0);
        gbc.writeMem(0x75d8, { 0x5 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0xe581, gbc.sp());
        EXPECT(0x75d9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 05 0333
        gbc.setState(0x2417, 0xb4de, 0x50e0, 0xaab2, 0x39d7, 0x246d, 0x1, 0x0);
        gbc.writeMem(0x2417, { 0x5 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0xb4de, gbc.sp());
        EXPECT(0x2418, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 05 0334
        gbc.setState(0x6a, 0xf8a9, 0x24b0, 0x6927, 0x3ba7, 0x6c77, 0x1, 0x1);
        gbc.writeMem(0x6a, { 0x5 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0xf8a9, gbc.sp());
        EXPECT(0x6b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 05 0335
        gbc.setState(0x458f, 0x475, 0xb90, 0xe362, 0x8a75, 0xd0d6, 0x1, 0x1);
        gbc.writeMem(0x458f, { 0x5 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x475, gbc.sp());
        EXPECT(0x4590, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 05 0336
        gbc.setState(0x96c3, 0xa9a1, 0x2570, 0xc748, 0xcf55, 0xce27, 0x0, 0x0);
        gbc.writeMem(0x96c3, { 0x5 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0xa9a1, gbc.sp());
        EXPECT(0x96c4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5, gbc.readMem(0x96c3));
        // 05 0337
        gbc.setState(0x7ba2, 0xcb9, 0xb2e0, 0xf31, 0x7afd, 0x40e5, 0x0, 0x0);
        gbc.writeMem(0x7ba2, { 0x5 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0xcb9, gbc.sp());
        EXPECT(0x7ba3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 05 0338
        gbc.setState(0x19e8, 0x5e76, 0xb710, 0x7f7b, 0x453c, 0xef0b, 0x1, 0x0);
        gbc.writeMem(0x19e8, { 0x5 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x5e76, gbc.sp());
        EXPECT(0x19e9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 05 0339
        gbc.setState(0x210, 0x286, 0xae30, 0xd929, 0xc2eb, 0x62b8, 0x1, 0x1);
        gbc.writeMem(0x210, { 0x5 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x286, gbc.sp());
        EXPECT(0x211, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 05 033B
        gbc.setState(0xf68, 0xc1b4, 0x4960, 0x506e, 0x5022, 0x4ff, 0x0, 0x1);
        gbc.writeMem(0xf68, { 0x5 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0xc1b4, gbc.sp());
        EXPECT(0xf69, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 05 033C
        gbc.setState(0x8281, 0xe56a, 0x7d10, 0x67cc, 0xf85a, 0xba9b, 0x0, 0x1);
        gbc.writeMem(0x8281, { 0x5 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0xe56a, gbc.sp());
        EXPECT(0x8282, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5, gbc.readMem(0x8281));
        // 05 033D
        gbc.setState(0xda4e, 0x4cda, 0xd330, 0x7f33, 0x6ffa, 0x43d7, 0x0, 0x0);
        gbc.writeMem(0xda4e, { 0x5 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0x4cda, gbc.sp());
        EXPECT(0xda4f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5, gbc.readMem(0xda4e));
        // 05 033E
        gbc.setState(0xb2a4, 0x6eeb, 0xfd0, 0xbf8a, 0x161d, 0x7356, 0x0, 0x0);
        gbc.writeMem(0xb2a4, { 0x5 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0x6eeb, gbc.sp());
        EXPECT(0xb2a5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5, gbc.readMem(0xb2a4));
        // 05 033F
        gbc.setState(0x4fcd, 0x2165, 0x7e10, 0xd626, 0x9d5e, 0x8d5a, 0x0, 0x0);
        gbc.writeMem(0x4fcd, { 0x5 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x2165, gbc.sp());
        EXPECT(0x4fce, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 05 0340
        gbc.setState(0x4e28, 0xa069, 0xe120, 0xe00f, 0xe30, 0x33e7, 0x1, 0x0);
        gbc.writeMem(0x4e28, { 0x5 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0xa069, gbc.sp());
        EXPECT(0x4e29, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 05 0341
        gbc.setState(0xa6fc, 0xb7ae, 0xa480, 0x95a6, 0x3fcc, 0x8d0, 0x1, 0x0);
        gbc.writeMem(0xa6fc, { 0x5 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0xb7ae, gbc.sp());
        EXPECT(0xa6fd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5, gbc.readMem(0xa6fc));
        // 05 0343
        gbc.setState(0x5944, 0x2b7d, 0xc370, 0x249e, 0xf2da, 0x9157, 0x0, 0x0);
        gbc.writeMem(0x5944, { 0x5 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x2b7d, gbc.sp());
        EXPECT(0x5945, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 05 0344
        gbc.setState(0xefaa, 0x2247, 0xc0d0, 0xdca9, 0xafee, 0x4396, 0x1, 0x1);
        gbc.writeMem(0xefaa, { 0x5 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x2247, gbc.sp());
        EXPECT(0xefab, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5, gbc.readMem(0xefaa));
        // 05 0345
        gbc.setState(0x6668, 0x190b, 0xd0f0, 0xe563, 0x848a, 0x7931, 0x1, 0x0);
        gbc.writeMem(0x6668, { 0x5 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x190b, gbc.sp());
        EXPECT(0x6669, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 05 0346
        gbc.setState(0x78c9, 0x8026, 0x93a0, 0xad89, 0x3c28, 0x51ee, 0x0, 0x1);
        gbc.writeMem(0x78c9, { 0x5 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x8026, gbc.sp());
        EXPECT(0x78ca, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 05 0347
        gbc.setState(0xf84, 0x4cc9, 0x8c20, 0x82a8, 0x6982, 0x3c0f, 0x0, 0x1);
        gbc.writeMem(0xf84, { 0x5 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x4cc9, gbc.sp());
        EXPECT(0xf85, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 05 0348
        gbc.setState(0xad3f, 0xf87f, 0x6160, 0x879f, 0x8299, 0x428, 0x0, 0x1);
        gbc.writeMem(0xad3f, { 0x5 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0xf87f, gbc.sp());
        EXPECT(0xad40, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5, gbc.readMem(0xad3f));
        // 05 0349
        gbc.setState(0x6f84, 0xe82a, 0x34e0, 0xc465, 0xe2f1, 0xe7c4, 0x0, 0x0);
        gbc.writeMem(0x6f84, { 0x5 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0xe82a, gbc.sp());
        EXPECT(0x6f85, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 05 034A
        gbc.setState(0x7149, 0xb18a, 0x2a00, 0x428b, 0xa485, 0x6d9b, 0x1, 0x1);
        gbc.writeMem(0x7149, { 0x5 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0xb18a, gbc.sp());
        EXPECT(0x714a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 05 034B
        gbc.setState(0xead4, 0x2807, 0xe9e0, 0x6686, 0x606d, 0x70a9, 0x0, 0x0);
        gbc.writeMem(0xead4, { 0x5 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x2807, gbc.sp());
        EXPECT(0xead5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5, gbc.readMem(0xead4));
        // 05 034C
        gbc.setState(0x3578, 0x2111, 0x1150, 0xf10a, 0xfdf4, 0x5ecb, 0x1, 0x0);
        gbc.writeMem(0x3578, { 0x5 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x2111, gbc.sp());
        EXPECT(0x3579, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 05 034D
        gbc.setState(0x774f, 0x1807, 0x36f0, 0xc629, 0xd464, 0xd824, 0x1, 0x1);
        gbc.writeMem(0x774f, { 0x5 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x1807, gbc.sp());
        EXPECT(0x7750, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 05 034E
        gbc.setState(0xde9c, 0xf80c, 0x41a0, 0xa0f6, 0xe8e2, 0xcbfd, 0x0, 0x0);
        gbc.writeMem(0xde9c, { 0x5 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0xf80c, gbc.sp());
        EXPECT(0xde9d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5, gbc.readMem(0xde9c));
        // 05 034F
        gbc.setState(0xdc0, 0x6c9f, 0xc360, 0x5a53, 0xf89c, 0x2b47, 0x1, 0x0);
        gbc.writeMem(0xdc0, { 0x5 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x6c9f, gbc.sp());
        EXPECT(0xdc1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 05 0350
        gbc.setState(0xdf3e, 0x8f1e, 0x6820, 0xd98e, 0x33b, 0x265b, 0x0, 0x0);
        gbc.writeMem(0xdf3e, { 0x5 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x8f1e, gbc.sp());
        EXPECT(0xdf3f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5, gbc.readMem(0xdf3e));
        // 05 0351
        gbc.setState(0x89d3, 0xd305, 0x7e50, 0x4a4, 0xaa22, 0xede4, 0x0, 0x1);
        gbc.writeMem(0x89d3, { 0x5 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0xd305, gbc.sp());
        EXPECT(0x89d4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5, gbc.readMem(0x89d3));
        // 05 0352
        gbc.setState(0xede1, 0xedde, 0x8f30, 0x5fef, 0xef04, 0xb7c1, 0x1, 0x0);
        gbc.writeMem(0xede1, { 0x5 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0xedde, gbc.sp());
        EXPECT(0xede2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5, gbc.readMem(0xede1));
        // 05 0353
        gbc.setState(0x9719, 0x7afb, 0xd0a0, 0x517f, 0x1a55, 0xaef9, 0x1, 0x1);
        gbc.writeMem(0x9719, { 0x5 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x7afb, gbc.sp());
        EXPECT(0x971a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5, gbc.readMem(0x9719));
        // 05 0354
        gbc.setState(0xb73f, 0x6726, 0xf580, 0x2f78, 0x89a5, 0x101c, 0x0, 0x0);
        gbc.writeMem(0xb73f, { 0x5 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x6726, gbc.sp());
        EXPECT(0xb740, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5, gbc.readMem(0xb73f));
        // 05 0355
        gbc.setState(0xb01d, 0xae94, 0x1640, 0xc856, 0x38f3, 0xdde6, 0x0, 0x0);
        gbc.writeMem(0xb01d, { 0x5 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0xae94, gbc.sp());
        EXPECT(0xb01e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5, gbc.readMem(0xb01d));
        // 05 0356
        gbc.setState(0xb89a, 0xcff6, 0xae20, 0xdad8, 0x2a1e, 0x7f53, 0x1, 0x1);
        gbc.writeMem(0xb89a, { 0x5 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0xcff6, gbc.sp());
        EXPECT(0xb89b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5, gbc.readMem(0xb89a));
        // 05 0357
        gbc.setState(0x1af1, 0xfc54, 0x56a0, 0x689a, 0xbd28, 0x23d1, 0x1, 0x1);
        gbc.writeMem(0x1af1, { 0x5 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0xfc54, gbc.sp());
        EXPECT(0x1af2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 05 0358
        gbc.setState(0x80b4, 0x3d97, 0x3c30, 0xe002, 0xc218, 0xbe77, 0x1, 0x1);
        gbc.writeMem(0x80b4, { 0x5 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x3d97, gbc.sp());
        EXPECT(0x80b5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5, gbc.readMem(0x80b4));
        // 05 0359
        gbc.setState(0x280d, 0xb0e9, 0x6150, 0x9dab, 0xbc1a, 0x803, 0x0, 0x0);
        gbc.writeMem(0x280d, { 0x5 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0xb0e9, gbc.sp());
        EXPECT(0x280e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 05 035A
        gbc.setState(0x71b5, 0x5742, 0xf770, 0x2bf2, 0xe4ab, 0x69be, 0x1, 0x1);
        gbc.writeMem(0x71b5, { 0x5 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0x5742, gbc.sp());
        EXPECT(0x71b6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 05 035B
        gbc.setState(0x4792, 0x1198, 0x8130, 0x1af6, 0x7bc3, 0xb1ac, 0x1, 0x0);
        gbc.writeMem(0x4792, { 0x5 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x1198, gbc.sp());
        EXPECT(0x4793, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 05 035C
        gbc.setState(0x700e, 0xb9f4, 0x58d0, 0x11d4, 0xc61, 0x4af8, 0x1, 0x1);
        gbc.writeMem(0x700e, { 0x5 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0xb9f4, gbc.sp());
        EXPECT(0x700f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 05 035D
        gbc.setState(0x1c2b, 0x76cb, 0x4f00, 0xce5e, 0xfbd1, 0xb529, 0x1, 0x1);
        gbc.writeMem(0x1c2b, { 0x5 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x76cb, gbc.sp());
        EXPECT(0x1c2c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 05 035E
        gbc.setState(0x8d08, 0xa7c8, 0x2260, 0x544e, 0x4ed1, 0x180c, 0x1, 0x0);
        gbc.writeMem(0x8d08, { 0x5 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0xa7c8, gbc.sp());
        EXPECT(0x8d09, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5, gbc.readMem(0x8d08));
        // 05 035F
        gbc.setState(0xcab1, 0x67b9, 0x7f20, 0xc43, 0x5451, 0xfbb1, 0x1, 0x0);
        gbc.writeMem(0xcab1, { 0x5 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x67b9, gbc.sp());
        EXPECT(0xcab2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5, gbc.readMem(0xcab1));
        // 05 0360
        gbc.setState(0x9ee5, 0xa0cb, 0x9fa0, 0xbf44, 0xcbe0, 0x6061, 0x1, 0x0);
        gbc.writeMem(0x9ee5, { 0x5 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0xa0cb, gbc.sp());
        EXPECT(0x9ee6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5, gbc.readMem(0x9ee5));
        // 05 0362
        gbc.setState(0x4481, 0x92c9, 0x6300, 0xc127, 0x7bd2, 0x1bc5, 0x1, 0x0);
        gbc.writeMem(0x4481, { 0x5 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x92c9, gbc.sp());
        EXPECT(0x4482, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 05 0363
        gbc.setState(0xc014, 0x917d, 0x40b0, 0x9a9e, 0x2d73, 0xe7c2, 0x0, 0x1);
        gbc.writeMem(0xc014, { 0x5 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x917d, gbc.sp());
        EXPECT(0xc015, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5, gbc.readMem(0xc014));
        // 05 0364
        gbc.setState(0x30eb, 0x9e84, 0xb540, 0xfdd, 0x4abc, 0x51e2, 0x1, 0x1);
        gbc.writeMem(0x30eb, { 0x5 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x9e84, gbc.sp());
        EXPECT(0x30ec, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 05 0365
        gbc.setState(0x9887, 0xe31b, 0xce90, 0xe4da, 0x38be, 0x4426, 0x0, 0x0);
        gbc.writeMem(0x9887, { 0x5 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0xe31b, gbc.sp());
        EXPECT(0x9888, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5, gbc.readMem(0x9887));
        // 05 0366
        gbc.setState(0x885b, 0x6999, 0x2e70, 0xc0fb, 0x19e4, 0xef94, 0x1, 0x1);
        gbc.writeMem(0x885b, { 0x5 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x6999, gbc.sp());
        EXPECT(0x885c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5, gbc.readMem(0x885b));
        // 05 0367
        gbc.setState(0xdf81, 0x6a6, 0xd730, 0x28f1, 0xf819, 0xc99, 0x1, 0x0);
        gbc.writeMem(0xdf81, { 0x5 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x6a6, gbc.sp());
        EXPECT(0xdf82, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5, gbc.readMem(0xdf81));
        // 05 0368
        gbc.setState(0x41f2, 0x5e5e, 0x2ac0, 0x8999, 0x1428, 0x1ab8, 0x1, 0x1);
        gbc.writeMem(0x41f2, { 0x5 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x5e5e, gbc.sp());
        EXPECT(0x41f3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 05 0369
        gbc.setState(0x36e0, 0xbd6d, 0xa860, 0x7449, 0x396c, 0x18d4, 0x1, 0x1);
        gbc.writeMem(0x36e0, { 0x5 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0xbd6d, gbc.sp());
        EXPECT(0x36e1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 05 036A
        gbc.setState(0xcd5b, 0x78f1, 0x7200, 0xc387, 0x6785, 0x2e51, 0x0, 0x1);
        gbc.writeMem(0xcd5b, { 0x5 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x78f1, gbc.sp());
        EXPECT(0xcd5c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5, gbc.readMem(0xcd5b));
        // 05 036B
        gbc.setState(0x9702, 0x54ed, 0x11f0, 0x7d0d, 0x6893, 0x309d, 0x1, 0x1);
        gbc.writeMem(0x9702, { 0x5 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x54ed, gbc.sp());
        EXPECT(0x9703, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5, gbc.readMem(0x9702));
        // 05 036E
        gbc.setState(0xbff8, 0xcecb, 0xef20, 0xa0df, 0x3333, 0xef64, 0x0, 0x1);
        gbc.writeMem(0xbff8, { 0x5 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0xcecb, gbc.sp());
        EXPECT(0xbff9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5, gbc.readMem(0xbff8));
        // 05 036F
        gbc.setState(0xc5f0, 0xdac9, 0x8c60, 0x188b, 0xa35c, 0xf97f, 0x0, 0x1);
        gbc.writeMem(0xc5f0, { 0x5 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0xdac9, gbc.sp());
        EXPECT(0xc5f1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5, gbc.readMem(0xc5f0));
        // 05 0370
        gbc.setState(0xba, 0x27e2, 0x9dd0, 0x42b0, 0x4570, 0x3bd7, 0x1, 0x1);
        gbc.writeMem(0xba, { 0x5 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0x27e2, gbc.sp());
        EXPECT(0xbb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 05 0371
        gbc.setState(0xb5d9, 0xd571, 0xbf10, 0x8afc, 0x9c15, 0x6161, 0x0, 0x1);
        gbc.writeMem(0xb5d9, { 0x5 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0xd571, gbc.sp());
        EXPECT(0xb5da, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5, gbc.readMem(0xb5d9));
        // 05 0372
        gbc.setState(0xc06e, 0x37c5, 0xc9c0, 0x4b64, 0xc10d, 0x5488, 0x0, 0x1);
        gbc.writeMem(0xc06e, { 0x5 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x37c5, gbc.sp());
        EXPECT(0xc06f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5, gbc.readMem(0xc06e));
        // 05 0373
        gbc.setState(0xe2cd, 0xdaf7, 0x4de0, 0x9db, 0x775a, 0xdeda, 0x1, 0x0);
        gbc.writeMem(0xe2cd, { 0x5 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0xdaf7, gbc.sp());
        EXPECT(0xe2ce, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5, gbc.readMem(0xe2cd));
        // 05 0374
        gbc.setState(0xb0ec, 0x3953, 0xef90, 0xbdb2, 0xc927, 0x8155, 0x1, 0x1);
        gbc.writeMem(0xb0ec, { 0x5 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x3953, gbc.sp());
        EXPECT(0xb0ed, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5, gbc.readMem(0xb0ec));
        // 05 0375
        gbc.setState(0x9e01, 0xab0f, 0x5630, 0xe116, 0x7638, 0xcbd0, 0x1, 0x0);
        gbc.writeMem(0x9e01, { 0x5 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0xab0f, gbc.sp());
        EXPECT(0x9e02, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5, gbc.readMem(0x9e01));
        // 05 0376
        gbc.setState(0xc8b2, 0x2fcd, 0x2000, 0x72e5, 0xc8dc, 0x4a37, 0x0, 0x0);
        gbc.writeMem(0xc8b2, { 0x5 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x2fcd, gbc.sp());
        EXPECT(0xc8b3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5, gbc.readMem(0xc8b2));
        // 05 0377
        gbc.setState(0xbfcf, 0xde98, 0xe870, 0xde61, 0xad00, 0x2e9f, 0x0, 0x1);
        gbc.writeMem(0xbfcf, { 0x5 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0xde98, gbc.sp());
        EXPECT(0xbfd0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5, gbc.readMem(0xbfcf));
        // 05 0378
        gbc.setState(0x6a96, 0x4082, 0xc970, 0xaaa9, 0xf3f2, 0x921f, 0x1, 0x0);
        gbc.writeMem(0x6a96, { 0x5 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x4082, gbc.sp());
        EXPECT(0x6a97, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 05 0379
        gbc.setState(0xdbb2, 0x5488, 0x3e80, 0xc56f, 0x1fd3, 0x295c, 0x1, 0x1);
        gbc.writeMem(0xdbb2, { 0x5 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x5488, gbc.sp());
        EXPECT(0xdbb3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5, gbc.readMem(0xdbb2));
        // 05 037B
        gbc.setState(0xb6a9, 0xb64d, 0x37c0, 0x2e26, 0x4ff0, 0x257c, 0x1, 0x0);
        gbc.writeMem(0xb6a9, { 0x5 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0xb64d, gbc.sp());
        EXPECT(0xb6aa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5, gbc.readMem(0xb6a9));
        // 05 037C
        gbc.setState(0xd2f0, 0x5d8, 0x15e0, 0x24d6, 0x5b23, 0xb02d, 0x0, 0x1);
        gbc.writeMem(0xd2f0, { 0x5 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x5d8, gbc.sp());
        EXPECT(0xd2f1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5, gbc.readMem(0xd2f0));
        // 05 037D
        gbc.setState(0x376f, 0xad64, 0x9380, 0xd42e, 0x6b60, 0xca79, 0x0, 0x1);
        gbc.writeMem(0x376f, { 0x5 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0xad64, gbc.sp());
        EXPECT(0x3770, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 05 037F
        gbc.setState(0xd72e, 0xa44c, 0x40f0, 0x1b05, 0x7a27, 0x8a58, 0x1, 0x0);
        gbc.writeMem(0xd72e, { 0x5 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0xa44c, gbc.sp());
        EXPECT(0xd72f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5, gbc.readMem(0xd72e));
        // 05 0380
        gbc.setState(0x61de, 0xc82b, 0xfce0, 0x54cd, 0x32ae, 0xd744, 0x1, 0x0);
        gbc.writeMem(0x61de, { 0x5 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0xc82b, gbc.sp());
        EXPECT(0x61df, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 05 0381
        gbc.setState(0xf000, 0xe0e4, 0xd6c0, 0xb7dc, 0xaeaa, 0xee23, 0x1, 0x1);
        gbc.writeMem(0xf000, { 0x5 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0xe0e4, gbc.sp());
        EXPECT(0xf001, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5, gbc.readMem(0xf000));
        // 05 0382
        gbc.setState(0x4b4, 0x8eec, 0xf150, 0xaf04, 0xf309, 0x3cac, 0x0, 0x1);
        gbc.writeMem(0x4b4, { 0x5 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x8eec, gbc.sp());
        EXPECT(0x4b5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 05 0383
        gbc.setState(0xd697, 0x7534, 0x55c0, 0x5460, 0xb318, 0x7981, 0x0, 0x0);
        gbc.writeMem(0xd697, { 0x5 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x7534, gbc.sp());
        EXPECT(0xd698, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5, gbc.readMem(0xd697));
        // 05 0384
        gbc.setState(0xd517, 0x9f79, 0x7370, 0xc6f4, 0x8111, 0xf83, 0x0, 0x0);
        gbc.writeMem(0xd517, { 0x5 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x9f79, gbc.sp());
        EXPECT(0xd518, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5, gbc.readMem(0xd517));
        // 05 0385
        gbc.setState(0xcdd1, 0x9e51, 0x6e60, 0xd4f, 0xa31f, 0xf987, 0x0, 0x0);
        gbc.writeMem(0xcdd1, { 0x5 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x9e51, gbc.sp());
        EXPECT(0xcdd2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5, gbc.readMem(0xcdd1));
        // 05 0386
        gbc.setState(0x71cb, 0x473d, 0x44b0, 0xa62f, 0xfc2e, 0xab1, 0x0, 0x1);
        gbc.writeMem(0x71cb, { 0x5 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x473d, gbc.sp());
        EXPECT(0x71cc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 05 0387
        gbc.setState(0xdecf, 0x9044, 0x7110, 0x71aa, 0x996c, 0x103e, 0x1, 0x1);
        gbc.writeMem(0xdecf, { 0x5 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x9044, gbc.sp());
        EXPECT(0xded0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5, gbc.readMem(0xdecf));
        // 05 0388
        gbc.setState(0x5097, 0xd213, 0x3530, 0x247c, 0x3d8d, 0xcf07, 0x0, 0x1);
        gbc.writeMem(0x5097, { 0x5 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0xd213, gbc.sp());
        EXPECT(0x5098, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 05 0389
        gbc.setState(0xb37d, 0xd539, 0xd730, 0x8dde, 0x786f, 0xb661, 0x1, 0x1);
        gbc.writeMem(0xb37d, { 0x5 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0xd539, gbc.sp());
        EXPECT(0xb37e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5, gbc.readMem(0xb37d));
        // 05 038A
        gbc.setState(0xb4ab, 0x5eb8, 0xb670, 0x93e0, 0x247a, 0x8609, 0x1, 0x0);
        gbc.writeMem(0xb4ab, { 0x5 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x5eb8, gbc.sp());
        EXPECT(0xb4ac, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5, gbc.readMem(0xb4ab));
        // 05 038B
        gbc.setState(0x58e1, 0x66a, 0x7080, 0xda70, 0x1ef4, 0x1af1, 0x1, 0x0);
        gbc.writeMem(0x58e1, { 0x5 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x66a, gbc.sp());
        EXPECT(0x58e2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 05 038C
        gbc.setState(0x3bed, 0xb8da, 0x4c10, 0x3d7d, 0x265, 0xb435, 0x1, 0x1);
        gbc.writeMem(0x3bed, { 0x5 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0xb8da, gbc.sp());
        EXPECT(0x3bee, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 05 038D
        gbc.setState(0x3685, 0x92b4, 0x4a30, 0x3763, 0x273f, 0x1215, 0x0, 0x0);
        gbc.writeMem(0x3685, { 0x5 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x92b4, gbc.sp());
        EXPECT(0x3686, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 05 038E
        gbc.setState(0x15e7, 0x8109, 0x2410, 0x153f, 0x34, 0x7fc, 0x0, 0x1);
        gbc.writeMem(0x15e7, { 0x5 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x8109, gbc.sp());
        EXPECT(0x15e8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 05 038F
        gbc.setState(0x7073, 0x3663, 0x3a60, 0xf4ab, 0x12ed, 0xa110, 0x0, 0x1);
        gbc.writeMem(0x7073, { 0x5 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x3663, gbc.sp());
        EXPECT(0x7074, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 05 0390
        gbc.setState(0x8e96, 0xed31, 0x5cc0, 0xd185, 0xf2f1, 0xf24, 0x0, 0x0);
        gbc.writeMem(0x8e96, { 0x5 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0xed31, gbc.sp());
        EXPECT(0x8e97, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5, gbc.readMem(0x8e96));
        // 05 0391
        gbc.setState(0x3d1e, 0x276b, 0x5620, 0x43fa, 0xccb1, 0xe04e, 0x0, 0x0);
        gbc.writeMem(0x3d1e, { 0x5 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x276b, gbc.sp());
        EXPECT(0x3d1f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 05 0392
        gbc.setState(0xba17, 0x8111, 0xd510, 0xe0b9, 0x76ce, 0xbf89, 0x0, 0x1);
        gbc.writeMem(0xba17, { 0x5 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x8111, gbc.sp());
        EXPECT(0xba18, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5, gbc.readMem(0xba17));
        // 05 0393
        gbc.setState(0x5a65, 0x6946, 0xf5f0, 0x2674, 0x77ae, 0x4be0, 0x1, 0x1);
        gbc.writeMem(0x5a65, { 0x5 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x6946, gbc.sp());
        EXPECT(0x5a66, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 05 0394
        gbc.setState(0x1962, 0xe511, 0xf990, 0xd8e4, 0x3ff4, 0xfbb3, 0x1, 0x1);
        gbc.writeMem(0x1962, { 0x5 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0xe511, gbc.sp());
        EXPECT(0x1963, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 05 0395
        gbc.setState(0x3d69, 0x6683, 0x8040, 0xa0c5, 0xefe6, 0x9620, 0x0, 0x1);
        gbc.writeMem(0x3d69, { 0x5 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x6683, gbc.sp());
        EXPECT(0x3d6a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 05 0396
        gbc.setState(0xced8, 0x94c4, 0xee00, 0x7a18, 0xf04, 0x8561, 0x0, 0x1);
        gbc.writeMem(0xced8, { 0x5 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x94c4, gbc.sp());
        EXPECT(0xced9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5, gbc.readMem(0xced8));
        // 05 0397
        gbc.setState(0x33c5, 0x5dcb, 0x4430, 0x1af0, 0x1998, 0x496a, 0x0, 0x1);
        gbc.writeMem(0x33c5, { 0x5 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x5dcb, gbc.sp());
        EXPECT(0x33c6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 05 0398
        gbc.setState(0xe328, 0xe801, 0x3c70, 0x7ff7, 0xc5db, 0xb1e0, 0x1, 0x1);
        gbc.writeMem(0xe328, { 0x5 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0xe801, gbc.sp());
        EXPECT(0xe329, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5, gbc.readMem(0xe328));
        // 05 0399
        gbc.setState(0xeab2, 0x2eb3, 0x8e0, 0x2fc4, 0x9ab8, 0x9541, 0x0, 0x1);
        gbc.writeMem(0xeab2, { 0x5 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x2eb3, gbc.sp());
        EXPECT(0xeab3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5, gbc.readMem(0xeab2));
        // 05 039A
        gbc.setState(0x6d18, 0xc795, 0x68b0, 0x2051, 0xf752, 0x4b57, 0x1, 0x1);
        gbc.writeMem(0x6d18, { 0x5 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0xc795, gbc.sp());
        EXPECT(0x6d19, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 05 039B
        gbc.setState(0xafb5, 0xc1fd, 0x7ec0, 0xd56d, 0x20a9, 0x5c6b, 0x1, 0x1);
        gbc.writeMem(0xafb5, { 0x5 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0xc1fd, gbc.sp());
        EXPECT(0xafb6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5, gbc.readMem(0xafb5));
        // 05 039C
        gbc.setState(0x6892, 0xe0ad, 0xa9c0, 0xd1b5, 0x6fd4, 0x2847, 0x0, 0x0);
        gbc.writeMem(0x6892, { 0x5 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0xe0ad, gbc.sp());
        EXPECT(0x6893, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 05 039D
        gbc.setState(0x4d16, 0xd3d7, 0x52e0, 0x8cf7, 0xb8c7, 0xcd51, 0x0, 0x0);
        gbc.writeMem(0x4d16, { 0x5 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0xd3d7, gbc.sp());
        EXPECT(0x4d17, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 05 039E
        gbc.setState(0x3568, 0xc077, 0x6a0, 0xc030, 0xfe28, 0x3aea, 0x1, 0x0);
        gbc.writeMem(0x3568, { 0x5 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0xc077, gbc.sp());
        EXPECT(0x3569, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 05 03A0
        gbc.setState(0x90e4, 0xc785, 0xd670, 0x463b, 0x4f50, 0xd43e, 0x0, 0x0);
        gbc.writeMem(0x90e4, { 0x5 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0xc785, gbc.sp());
        EXPECT(0x90e5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5, gbc.readMem(0x90e4));
        // 05 03A1
        gbc.setState(0x3ce0, 0x5f79, 0x8680, 0xe998, 0x27f8, 0x6cd5, 0x1, 0x0);
        gbc.writeMem(0x3ce0, { 0x5 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x5f79, gbc.sp());
        EXPECT(0x3ce1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 05 03A2
        gbc.setState(0x8fc6, 0x5751, 0x87c0, 0x5b9d, 0x8c0d, 0x157d, 0x1, 0x0);
        gbc.writeMem(0x8fc6, { 0x5 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x5751, gbc.sp());
        EXPECT(0x8fc7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5, gbc.readMem(0x8fc6));
        // 05 03A3
        gbc.setState(0xe966, 0x37e9, 0x64b0, 0x831c, 0xa83b, 0xf66d, 0x1, 0x1);
        gbc.writeMem(0xe966, { 0x5 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x37e9, gbc.sp());
        EXPECT(0xe967, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5, gbc.readMem(0xe966));
        // 05 03A5
        gbc.setState(0xa7a7, 0xc09d, 0xf860, 0xf850, 0xbab, 0x20af, 0x1, 0x1);
        gbc.writeMem(0xa7a7, { 0x5 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0xc09d, gbc.sp());
        EXPECT(0xa7a8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5, gbc.readMem(0xa7a7));
        // 05 03A6
        gbc.setState(0x1f25, 0xff6, 0xf460, 0x64a1, 0x8e7b, 0xdd3a, 0x1, 0x0);
        gbc.writeMem(0x1f25, { 0x5 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0xff6, gbc.sp());
        EXPECT(0x1f26, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 05 03A7
        gbc.setState(0x462a, 0x974f, 0xa660, 0x6c, 0x1db0, 0x2b8, 0x1, 0x0);
        gbc.writeMem(0x462a, { 0x5 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x974f, gbc.sp());
        EXPECT(0x462b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 05 03A8
        gbc.setState(0xd40d, 0xa2e2, 0xc4c0, 0x8ac7, 0xa8f5, 0xcce9, 0x1, 0x0);
        gbc.writeMem(0xd40d, { 0x5 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0xa2e2, gbc.sp());
        EXPECT(0xd40e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5, gbc.readMem(0xd40d));
        // 05 03A9
        gbc.setState(0x7a23, 0x90cc, 0xe910, 0x1d94, 0x9c43, 0x6d98, 0x0, 0x0);
        gbc.writeMem(0x7a23, { 0x5 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x90cc, gbc.sp());
        EXPECT(0x7a24, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 05 03AA
        gbc.setState(0x554e, 0xe2ea, 0xc7c0, 0x6c03, 0x5076, 0x5601, 0x0, 0x0);
        gbc.writeMem(0x554e, { 0x5 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0xe2ea, gbc.sp());
        EXPECT(0x554f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 05 03AB
        gbc.setState(0x33fc, 0xf762, 0xfcb0, 0xfb5a, 0xaab0, 0x589c, 0x1, 0x1);
        gbc.writeMem(0x33fc, { 0x5 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0xf762, gbc.sp());
        EXPECT(0x33fd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 05 03AC
        gbc.setState(0x4110, 0xcfea, 0xc8b0, 0xa712, 0xef49, 0x8921, 0x1, 0x1);
        gbc.writeMem(0x4110, { 0x5 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0xcfea, gbc.sp());
        EXPECT(0x4111, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 05 03AE
        gbc.setState(0x43ab, 0x8169, 0xc760, 0xb913, 0x9b16, 0xe441, 0x0, 0x1);
        gbc.writeMem(0x43ab, { 0x5 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x8169, gbc.sp());
        EXPECT(0x43ac, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 05 03AF
        gbc.setState(0xa666, 0x7c98, 0x61b0, 0xc42e, 0x1dc4, 0xa4be, 0x1, 0x0);
        gbc.writeMem(0xa666, { 0x5 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0x7c98, gbc.sp());
        EXPECT(0xa667, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5, gbc.readMem(0xa666));
        // 05 03B0
        gbc.setState(0x637e, 0xaab2, 0x870, 0xf88e, 0x9976, 0xd765, 0x0, 0x1);
        gbc.writeMem(0x637e, { 0x5 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0xaab2, gbc.sp());
        EXPECT(0x637f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 05 03B1
        gbc.setState(0x8175, 0x8333, 0x9550, 0xaa3d, 0xfe7c, 0xe14e, 0x1, 0x0);
        gbc.writeMem(0x8175, { 0x5 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x8333, gbc.sp());
        EXPECT(0x8176, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5, gbc.readMem(0x8175));
        // 05 03B2
        gbc.setState(0x808, 0xb348, 0xcd0, 0x24ec, 0xb674, 0xdf01, 0x1, 0x0);
        gbc.writeMem(0x808, { 0x5 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0xb348, gbc.sp());
        EXPECT(0x809, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 05 03B3
        gbc.setState(0x5afc, 0x88fd, 0x3b50, 0xd2a1, 0x7eac, 0x1983, 0x0, 0x0);
        gbc.writeMem(0x5afc, { 0x5 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x88fd, gbc.sp());
        EXPECT(0x5afd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 05 03B4
        gbc.setState(0x1eca, 0x34c9, 0xf8b0, 0x7523, 0xb470, 0x2ed2, 0x1, 0x0);
        gbc.writeMem(0x1eca, { 0x5 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x34c9, gbc.sp());
        EXPECT(0x1ecb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 05 03B5
        gbc.setState(0x45b6, 0x2d72, 0x8f10, 0xefd4, 0xec33, 0xe7dd, 0x0, 0x0);
        gbc.writeMem(0x45b6, { 0x5 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x2d72, gbc.sp());
        EXPECT(0x45b7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 05 03B6
        gbc.setState(0xb769, 0xb91d, 0xadb0, 0xf89f, 0x70f5, 0x5bb1, 0x1, 0x0);
        gbc.writeMem(0xb769, { 0x5 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0xb91d, gbc.sp());
        EXPECT(0xb76a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5, gbc.readMem(0xb769));
        // 05 03B7
        gbc.setState(0x7f33, 0xabc2, 0x41e0, 0xd7d9, 0xc8a5, 0xbd0f, 0x1, 0x0);
        gbc.writeMem(0x7f33, { 0x5 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0xabc2, gbc.sp());
        EXPECT(0x7f34, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 05 03B8
        gbc.setState(0x5ec4, 0x6e4c, 0xa5f0, 0xe9bc, 0x7b20, 0xc5ba, 0x1, 0x0);
        gbc.writeMem(0x5ec4, { 0x5 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0x6e4c, gbc.sp());
        EXPECT(0x5ec5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 05 03B9
        gbc.setState(0x3793, 0x8242, 0xda70, 0x8fd6, 0x65de, 0x9343, 0x0, 0x1);
        gbc.writeMem(0x3793, { 0x5 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x8242, gbc.sp());
        EXPECT(0x3794, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 05 03BA
        gbc.setState(0xeabb, 0x599a, 0xaeb0, 0x9cc, 0x320b, 0x8d37, 0x1, 0x0);
        gbc.writeMem(0xeabb, { 0x5 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x599a, gbc.sp());
        EXPECT(0xeabc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5, gbc.readMem(0xeabb));
        // 05 03BB
        gbc.setState(0xd5ae, 0xbeff, 0xc760, 0xc229, 0xf104, 0x9a97, 0x0, 0x1);
        gbc.writeMem(0xd5ae, { 0x5 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0xbeff, gbc.sp());
        EXPECT(0xd5af, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5, gbc.readMem(0xd5ae));
        // 05 03BC
        gbc.setState(0xc16c, 0x7797, 0x9d40, 0xabac, 0x2991, 0x4bdb, 0x1, 0x0);
        gbc.writeMem(0xc16c, { 0x5 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x7797, gbc.sp());
        EXPECT(0xc16d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5, gbc.readMem(0xc16c));
        // 05 03BD
        gbc.setState(0xa822, 0xf827, 0x3780, 0x14c6, 0x9364, 0x8404, 0x0, 0x1);
        gbc.writeMem(0xa822, { 0x5 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0xf827, gbc.sp());
        EXPECT(0xa823, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5, gbc.readMem(0xa822));
        // 05 03BE
        gbc.setState(0xc46c, 0x9359, 0x4b0, 0x4af7, 0xf46d, 0x758d, 0x1, 0x1);
        gbc.writeMem(0xc46c, { 0x5 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x9359, gbc.sp());
        EXPECT(0xc46d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5, gbc.readMem(0xc46c));
        // 05 03BF
        gbc.setState(0x2cec, 0xd1e4, 0x68d0, 0x73d4, 0xa2bf, 0xe6f6, 0x1, 0x1);
        gbc.writeMem(0x2cec, { 0x5 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0xd1e4, gbc.sp());
        EXPECT(0x2ced, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 05 03C0
        gbc.setState(0xbe1f, 0xf254, 0x75d0, 0xe46d, 0x7f79, 0xc793, 0x1, 0x1);
        gbc.writeMem(0xbe1f, { 0x5 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0xf254, gbc.sp());
        EXPECT(0xbe20, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5, gbc.readMem(0xbe1f));
        // 05 03C1
        gbc.setState(0xa948, 0xaab4, 0xf1f0, 0xffeb, 0x1cc4, 0x3d51, 0x0, 0x1);
        gbc.writeMem(0xa948, { 0x5 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0xaab4, gbc.sp());
        EXPECT(0xa949, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5, gbc.readMem(0xa948));
        // 05 03C2
        gbc.setState(0x12be, 0x71b0, 0x1820, 0xd2f3, 0xef04, 0x719b, 0x0, 0x1);
        gbc.writeMem(0x12be, { 0x5 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x71b0, gbc.sp());
        EXPECT(0x12bf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 05 03C3
        gbc.setState(0xc60, 0xec73, 0x7940, 0x1f4b, 0xc049, 0xb7d, 0x1, 0x1);
        gbc.writeMem(0xc60, { 0x5 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0xec73, gbc.sp());
        EXPECT(0xc61, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 05 03C4
        gbc.setState(0x780c, 0xd899, 0x5280, 0xb9c5, 0x87a2, 0x2437, 0x1, 0x1);
        gbc.writeMem(0x780c, { 0x5 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0xd899, gbc.sp());
        EXPECT(0x780d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 05 03C5
        gbc.setState(0x6578, 0xf0da, 0x7fb0, 0x5bb5, 0xe8ed, 0x7834, 0x0, 0x0);
        gbc.writeMem(0x6578, { 0x5 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0xf0da, gbc.sp());
        EXPECT(0x6579, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 05 03C6
        gbc.setState(0x2c7f, 0xaf06, 0xaa20, 0xcbd6, 0x225f, 0x9809, 0x0, 0x1);
        gbc.writeMem(0x2c7f, { 0x5 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0xaf06, gbc.sp());
        EXPECT(0x2c80, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 05 03C8
        gbc.setState(0x22f1, 0xa165, 0xd6e0, 0x6839, 0x343c, 0xf44e, 0x0, 0x0);
        gbc.writeMem(0x22f1, { 0x5 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0xa165, gbc.sp());
        EXPECT(0x22f2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 05 03C9
        gbc.setState(0xaa77, 0xc041, 0xcb50, 0xc8c0, 0xedc8, 0x4f1a, 0x1, 0x1);
        gbc.writeMem(0xaa77, { 0x5 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0xc041, gbc.sp());
        EXPECT(0xaa78, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5, gbc.readMem(0xaa77));
        // 05 03CA
        gbc.setState(0x8a22, 0xaa18, 0x1130, 0x776e, 0xa87c, 0xa876, 0x0, 0x1);
        gbc.writeMem(0x8a22, { 0x5 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0xaa18, gbc.sp());
        EXPECT(0x8a23, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5, gbc.readMem(0x8a22));
        // 05 03CB
        gbc.setState(0x81b6, 0xee7e, 0x7f80, 0xa8c1, 0xb078, 0xf26d, 0x0, 0x1);
        gbc.writeMem(0x81b6, { 0x5 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0xee7e, gbc.sp());
        EXPECT(0x81b7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5, gbc.readMem(0x81b6));
        // 05 03CC
        gbc.setState(0x86c9, 0x5bad, 0xfb30, 0x528c, 0x6cd2, 0xbb47, 0x0, 0x1);
        gbc.writeMem(0x86c9, { 0x5 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x5bad, gbc.sp());
        EXPECT(0x86ca, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5, gbc.readMem(0x86c9));
        // 05 03CD
        gbc.setState(0x4239, 0x5dd0, 0xf8f0, 0x5e74, 0xb105, 0x9f8b, 0x1, 0x0);
        gbc.writeMem(0x4239, { 0x5 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x5dd0, gbc.sp());
        EXPECT(0x423a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 05 03CE
        gbc.setState(0x27f8, 0x65f2, 0xa600, 0xc4b7, 0x760, 0xa1a8, 0x1, 0x1);
        gbc.writeMem(0x27f8, { 0x5 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x65f2, gbc.sp());
        EXPECT(0x27f9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 05 03CF
        gbc.setState(0x8304, 0x5ad1, 0xcfc0, 0xf75, 0x2044, 0x590a, 0x0, 0x1);
        gbc.writeMem(0x8304, { 0x5 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x5ad1, gbc.sp());
        EXPECT(0x8305, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5, gbc.readMem(0x8304));
        // 05 03D0
        gbc.setState(0x2912, 0x9b72, 0xe4d0, 0x798f, 0x3ea, 0xe318, 0x1, 0x1);
        gbc.writeMem(0x2912, { 0x5 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x9b72, gbc.sp());
        EXPECT(0x2913, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 05 03D1
        gbc.setState(0xa620, 0xc3ac, 0x7440, 0x4cdf, 0x5b78, 0x38b, 0x1, 0x1);
        gbc.writeMem(0xa620, { 0x5 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0xc3ac, gbc.sp());
        EXPECT(0xa621, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5, gbc.readMem(0xa620));
        // 05 03D2
        gbc.setState(0x87cd, 0xa918, 0xb100, 0x6c8d, 0xb809, 0x515d, 0x1, 0x1);
        gbc.writeMem(0x87cd, { 0x5 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0xa918, gbc.sp());
        EXPECT(0x87ce, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5, gbc.readMem(0x87cd));
        // 05 03D3
        gbc.setState(0x98e, 0x5ff1, 0x1100, 0xa748, 0xc5d1, 0xbfb5, 0x1, 0x0);
        gbc.writeMem(0x98e, { 0x5 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x5ff1, gbc.sp());
        EXPECT(0x98f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 05 03D4
        gbc.setState(0x2e05, 0x6653, 0xd350, 0x4358, 0xf7f1, 0x3fd7, 0x1, 0x0);
        gbc.writeMem(0x2e05, { 0x5 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0x6653, gbc.sp());
        EXPECT(0x2e06, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 05 03D5
        gbc.setState(0xcdbb, 0x1b51, 0x2850, 0x657, 0x3b16, 0x87b1, 0x0, 0x0);
        gbc.writeMem(0xcdbb, { 0x5 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x1b51, gbc.sp());
        EXPECT(0xcdbc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5, gbc.readMem(0xcdbb));
        // 05 03D6
        gbc.setState(0xc48d, 0xedd2, 0x3670, 0xd44a, 0x75c5, 0x6670, 0x0, 0x0);
        gbc.writeMem(0xc48d, { 0x5 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0xedd2, gbc.sp());
        EXPECT(0xc48e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5, gbc.readMem(0xc48d));
        // 05 03D7
        gbc.setState(0xb302, 0x421f, 0xa8e0, 0x81c2, 0x98b2, 0xa1ee, 0x0, 0x0);
        gbc.writeMem(0xb302, { 0x5 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x421f, gbc.sp());
        EXPECT(0xb303, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5, gbc.readMem(0xb302));
        // 05 03D8
        gbc.setState(0x5efe, 0xf936, 0x59c0, 0xb9cc, 0xa8d0, 0x7b81, 0x1, 0x1);
        gbc.writeMem(0x5efe, { 0x5 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0xf936, gbc.sp());
        EXPECT(0x5eff, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 05 03D9
        gbc.setState(0x329c, 0x2d6e, 0x9c70, 0x985f, 0xd9f9, 0xfff6, 0x1, 0x1);
        gbc.writeMem(0x329c, { 0x5 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x2d6e, gbc.sp());
        EXPECT(0x329d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 05 03DA
        gbc.setState(0xe56e, 0xf5b4, 0x90c0, 0x7a33, 0x4e23, 0x6a08, 0x0, 0x0);
        gbc.writeMem(0xe56e, { 0x5 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0xf5b4, gbc.sp());
        EXPECT(0xe56f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5, gbc.readMem(0xe56e));
        // 05 03DB
        gbc.setState(0xd39, 0x14e5, 0x9f60, 0x4780, 0xea79, 0x8860, 0x1, 0x0);
        gbc.writeMem(0xd39, { 0x5 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x14e5, gbc.sp());
        EXPECT(0xd3a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 05 03DC
        gbc.setState(0x4c22, 0xa5df, 0x9f20, 0x6809, 0xae24, 0x9c48, 0x1, 0x0);
        gbc.writeMem(0x4c22, { 0x5 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0xa5df, gbc.sp());
        EXPECT(0x4c23, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 05 03DD
        gbc.setState(0x1d1d, 0x1b6a, 0x6c50, 0xc912, 0x4046, 0x342c, 0x1, 0x0);
        gbc.writeMem(0x1d1d, { 0x5 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x1b6a, gbc.sp());
        EXPECT(0x1d1e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 05 03DE
        gbc.setState(0x28be, 0xea15, 0x6940, 0x6c27, 0x43ca, 0xd7ac, 0x1, 0x1);
        gbc.writeMem(0x28be, { 0x5 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0xea15, gbc.sp());
        EXPECT(0x28bf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 05 03DF
        gbc.setState(0x5e8, 0xd7a8, 0xc10, 0x8258, 0xbe0d, 0x6c1e, 0x0, 0x1);
        gbc.writeMem(0x5e8, { 0x5 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0xd7a8, gbc.sp());
        EXPECT(0x5e9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 05 03E0
        gbc.setState(0x7bc7, 0x6de2, 0xad00, 0xd013, 0x10f9, 0xf90e, 0x1, 0x1);
        gbc.writeMem(0x7bc7, { 0x5 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x6de2, gbc.sp());
        EXPECT(0x7bc8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 05 03E1
        gbc.setState(0x66d3, 0x1a11, 0x6b60, 0x66b9, 0x50f, 0xe8f1, 0x0, 0x0);
        gbc.writeMem(0x66d3, { 0x5 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x1a11, gbc.sp());
        EXPECT(0x66d4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 05 03E2
        gbc.setState(0x5f92, 0x7337, 0xf170, 0x8b94, 0xad09, 0xba3d, 0x0, 0x1);
        gbc.writeMem(0x5f92, { 0x5 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x7337, gbc.sp());
        EXPECT(0x5f93, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 05 03E3
        gbc.setState(0x4c65, 0x9b39, 0xe640, 0xc6bc, 0xb92e, 0x8315, 0x1, 0x0);
        gbc.writeMem(0x4c65, { 0x5 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x9b39, gbc.sp());
        EXPECT(0x4c66, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 05 03E4
        gbc.setState(0x6ece, 0x30a2, 0x39a0, 0x8106, 0x91f6, 0xd1a9, 0x1, 0x1);
        gbc.writeMem(0x6ece, { 0x5 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x30a2, gbc.sp());
        EXPECT(0x6ecf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 05 03E5
        gbc.setState(0x1350, 0x7284, 0x5fe0, 0xade0, 0xa28d, 0x19c3, 0x1, 0x1);
        gbc.writeMem(0x1350, { 0x5 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x7284, gbc.sp());
        EXPECT(0x1351, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 05 03E6
        gbc.setState(0x3d7b, 0xbaa5, 0xbed0, 0xb086, 0x34f9, 0xc788, 0x1, 0x0);
        gbc.writeMem(0x3d7b, { 0x5 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0xbaa5, gbc.sp());
        EXPECT(0x3d7c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 05 03E7
        gbc.setState(0xc3b7, 0x4c5d, 0xac10, 0xd158, 0x4895, 0x5b25, 0x0, 0x1);
        gbc.writeMem(0xc3b7, { 0x5 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x4c5d, gbc.sp());
        EXPECT(0xc3b8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5, gbc.readMem(0xc3b7));
    }
