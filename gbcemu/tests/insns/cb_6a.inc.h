    TEST(gbcemu, opcode_cb_6a) {
        GBCEmu gbc{"", nullptr};
        uint8_t cartridge[0x8000];
        cartridge[0x149] = 0x02; // 8kb external RAM
        gbc.loadCartridge(new FlashGamePak(cartridge));
        // CB 6A 0000
        gbc.setState(0x4959, 0xe972, 0x8da0, 0xbc26, 0x4c27, 0xa937, 0x0, 0x0);
        gbc.writeMem(0x4959, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0xe972, gbc.sp());
        EXPECT(0x495b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 6A 0001
        gbc.setState(0x8ed5, 0x2da7, 0x4980, 0x300c, 0x564a, 0x40fc, 0x0, 0x0);
        gbc.writeMem(0x8ed5, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x2da7, gbc.sp());
        EXPECT(0x8ed7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8ed5));
        EXPECT(0x6a, gbc.readMem(0x8ed6));
        // CB 6A 0002
        gbc.setState(0xb6cb, 0x55f1, 0x98e0, 0xf097, 0xe731, 0x1e4f, 0x1, 0x1);
        gbc.writeMem(0xb6cb, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x55f1, gbc.sp());
        EXPECT(0xb6cd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb6cb));
        EXPECT(0x6a, gbc.readMem(0xb6cc));
        // CB 6A 0003
        gbc.setState(0x58fd, 0x27c1, 0x3e30, 0xa9ca, 0x9126, 0x2802, 0x1, 0x0);
        gbc.writeMem(0x58fd, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x27c1, gbc.sp());
        EXPECT(0x58ff, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6A 0004
        gbc.setState(0xa811, 0xa1b, 0x51e0, 0x9d9f, 0x65bb, 0x1071, 0x1, 0x1);
        gbc.writeMem(0xa811, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0xa1b, gbc.sp());
        EXPECT(0xa813, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa811));
        EXPECT(0x6a, gbc.readMem(0xa812));
        // CB 6A 0005
        gbc.setState(0x1225, 0x3366, 0x7f80, 0x85eb, 0x8892, 0xf8d2, 0x1, 0x1);
        gbc.writeMem(0x1225, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x3366, gbc.sp());
        EXPECT(0x1227, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 6A 0006
        gbc.setState(0x7b93, 0xd015, 0x3620, 0x49a8, 0xe819, 0x5083, 0x1, 0x1);
        gbc.writeMem(0x7b93, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0xd015, gbc.sp());
        EXPECT(0x7b95, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 6A 0007
        gbc.setState(0xb14f, 0x1fde, 0x1970, 0xc11, 0x2f6c, 0x56e1, 0x0, 0x1);
        gbc.writeMem(0xb14f, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0x1fde, gbc.sp());
        EXPECT(0xb151, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb14f));
        EXPECT(0x6a, gbc.readMem(0xb150));
        // CB 6A 0008
        gbc.setState(0xab95, 0xe48b, 0x4950, 0x7974, 0x6eb4, 0x4d0a, 0x1, 0x1);
        gbc.writeMem(0xab95, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0xe48b, gbc.sp());
        EXPECT(0xab97, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xab95));
        EXPECT(0x6a, gbc.readMem(0xab96));
        // CB 6A 0009
        gbc.setState(0x75c5, 0x479c, 0x5620, 0xf3c6, 0x72d9, 0xabab, 0x1, 0x1);
        gbc.writeMem(0x75c5, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x479c, gbc.sp());
        EXPECT(0x75c7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 6A 000A
        gbc.setState(0xa985, 0x2b16, 0x840, 0x3e84, 0xa5f6, 0x2395, 0x1, 0x1);
        gbc.writeMem(0xa985, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x2b16, gbc.sp());
        EXPECT(0xa987, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa985));
        EXPECT(0x6a, gbc.readMem(0xa986));
        // CB 6A 000B
        gbc.setState(0xdbff, 0xb87c, 0x9e90, 0x374c, 0x2d04, 0xe298, 0x1, 0x0);
        gbc.writeMem(0xdbff, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0xb87c, gbc.sp());
        EXPECT(0xdc01, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdbff));
        EXPECT(0x6a, gbc.readMem(0xdc00));
        // CB 6A 000C
        gbc.setState(0x8901, 0x23ab, 0x990, 0xd409, 0x7d95, 0x2e1b, 0x1, 0x0);
        gbc.writeMem(0x8901, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x23ab, gbc.sp());
        EXPECT(0x8903, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8901));
        EXPECT(0x6a, gbc.readMem(0x8902));
        // CB 6A 000D
        gbc.setState(0x26d1, 0x2cfd, 0x1fe0, 0x7b3d, 0x351f, 0x2ee3, 0x1, 0x0);
        gbc.writeMem(0x26d1, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x2cfd, gbc.sp());
        EXPECT(0x26d3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 6A 000E
        gbc.setState(0x1c97, 0x8bb0, 0xa400, 0x98d8, 0xc3b8, 0x6403, 0x0, 0x1);
        gbc.writeMem(0x1c97, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x8bb0, gbc.sp());
        EXPECT(0x1c99, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 6A 000F
        gbc.setState(0x372e, 0xd741, 0xcf40, 0x538c, 0x7e70, 0xca51, 0x0, 0x0);
        gbc.writeMem(0x372e, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0xd741, gbc.sp());
        EXPECT(0x3730, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 6A 0010
        gbc.setState(0x2e17, 0xbeb4, 0x940, 0x2c43, 0xf490, 0xbdf6, 0x1, 0x1);
        gbc.writeMem(0x2e17, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0xbeb4, gbc.sp());
        EXPECT(0x2e19, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 6A 0011
        gbc.setState(0x1ba8, 0xa15f, 0xb4c0, 0x5b8e, 0xab66, 0x4889, 0x0, 0x0);
        gbc.writeMem(0x1ba8, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0xa15f, gbc.sp());
        EXPECT(0x1baa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 6A 0012
        gbc.setState(0x5aa6, 0xbd3e, 0x26b0, 0x3f8b, 0x6f7f, 0xa550, 0x0, 0x0);
        gbc.writeMem(0x5aa6, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0xbd3e, gbc.sp());
        EXPECT(0x5aa8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6A 0013
        gbc.setState(0xb9b7, 0x2468, 0x67a0, 0xfa26, 0xd9bd, 0x22cb, 0x0, 0x1);
        gbc.writeMem(0xb9b7, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x2468, gbc.sp());
        EXPECT(0xb9b9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb9b7));
        EXPECT(0x6a, gbc.readMem(0xb9b8));
        // CB 6A 0014
        gbc.setState(0x8d5f, 0xc7db, 0x6810, 0x9d59, 0x4489, 0xe7e5, 0x1, 0x1);
        gbc.writeMem(0x8d5f, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0xc7db, gbc.sp());
        EXPECT(0x8d61, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8d5f));
        EXPECT(0x6a, gbc.readMem(0x8d60));
        // CB 6A 0015
        gbc.setState(0x94ec, 0xb651, 0xbac0, 0x5e0e, 0x42e, 0x25eb, 0x0, 0x0);
        gbc.writeMem(0x94ec, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0xb651, gbc.sp());
        EXPECT(0x94ee, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x94ec));
        EXPECT(0x6a, gbc.readMem(0x94ed));
        // CB 6A 0016
        gbc.setState(0x2b05, 0xe1e7, 0x69a0, 0x4089, 0x71fb, 0x585b, 0x0, 0x0);
        gbc.writeMem(0x2b05, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0xe1e7, gbc.sp());
        EXPECT(0x2b07, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 6A 0017
        gbc.setState(0x8f5, 0x74db, 0x6980, 0xf13c, 0x180b, 0xdbcc, 0x1, 0x0);
        gbc.writeMem(0x8f5, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x74db, gbc.sp());
        EXPECT(0x8f7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 6A 0018
        gbc.setState(0x85c9, 0xf552, 0x2570, 0x80ed, 0x19f9, 0xd98f, 0x1, 0x1);
        gbc.writeMem(0x85c9, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0xf552, gbc.sp());
        EXPECT(0x85cb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x85c9));
        EXPECT(0x6a, gbc.readMem(0x85ca));
        // CB 6A 0019
        gbc.setState(0xdb55, 0xa99f, 0x3540, 0xd787, 0x9203, 0xab3d, 0x0, 0x0);
        gbc.writeMem(0xdb55, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0xa99f, gbc.sp());
        EXPECT(0xdb57, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdb55));
        EXPECT(0x6a, gbc.readMem(0xdb56));
        // CB 6A 001A
        gbc.setState(0xe6ad, 0x4fa9, 0x3d20, 0x80a6, 0x7278, 0xa4fa, 0x1, 0x0);
        gbc.writeMem(0xe6ad, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0x4fa9, gbc.sp());
        EXPECT(0xe6af, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe6ad));
        EXPECT(0x6a, gbc.readMem(0xe6ae));
        // CB 6A 001B
        gbc.setState(0xef3e, 0x258a, 0x9010, 0xb886, 0x3656, 0xbf0e, 0x0, 0x1);
        gbc.writeMem(0xef3e, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x258a, gbc.sp());
        EXPECT(0xef40, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xef3e));
        EXPECT(0x6a, gbc.readMem(0xef3f));
        // CB 6A 001C
        gbc.setState(0xc491, 0x7914, 0xc700, 0x4c0f, 0x1b31, 0xe25c, 0x0, 0x0);
        gbc.writeMem(0xc491, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x7914, gbc.sp());
        EXPECT(0xc493, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc491));
        EXPECT(0x6a, gbc.readMem(0xc492));
        // CB 6A 001D
        gbc.setState(0x524e, 0xfe5e, 0x2c10, 0xd9b8, 0x873b, 0xe150, 0x1, 0x0);
        gbc.writeMem(0x524e, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0xfe5e, gbc.sp());
        EXPECT(0x5250, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6A 001E
        gbc.setState(0x259e, 0xf986, 0x3450, 0xdc55, 0x730, 0xc239, 0x1, 0x1);
        gbc.writeMem(0x259e, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0xf986, gbc.sp());
        EXPECT(0x25a0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6A 001F
        gbc.setState(0xb678, 0x49e9, 0xd860, 0xb3d4, 0x89e2, 0x6381, 0x0, 0x0);
        gbc.writeMem(0xb678, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x49e9, gbc.sp());
        EXPECT(0xb67a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb678));
        EXPECT(0x6a, gbc.readMem(0xb679));
        // CB 6A 0020
        gbc.setState(0x9591, 0x7815, 0xf260, 0x5710, 0x4260, 0x695a, 0x1, 0x1);
        gbc.writeMem(0x9591, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x7815, gbc.sp());
        EXPECT(0x9593, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9591));
        EXPECT(0x6a, gbc.readMem(0x9592));
        // CB 6A 0021
        gbc.setState(0x3137, 0xb8b5, 0xa7f0, 0x6f06, 0xd455, 0x56be, 0x0, 0x0);
        gbc.writeMem(0x3137, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0xb8b5, gbc.sp());
        EXPECT(0x3139, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6A 0022
        gbc.setState(0x6e17, 0xcdd7, 0xa1a0, 0x1bf5, 0x784d, 0xab0c, 0x1, 0x1);
        gbc.writeMem(0x6e17, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0xcdd7, gbc.sp());
        EXPECT(0x6e19, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 6A 0023
        gbc.setState(0x8def, 0x26f5, 0xfd60, 0xb1ef, 0xa67b, 0xb9a7, 0x1, 0x0);
        gbc.writeMem(0x8def, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x26f5, gbc.sp());
        EXPECT(0x8df1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8def));
        EXPECT(0x6a, gbc.readMem(0x8df0));
        // CB 6A 0024
        gbc.setState(0x78b3, 0xcca4, 0xeb80, 0xa371, 0x7e2b, 0xa45c, 0x1, 0x0);
        gbc.writeMem(0x78b3, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0xcca4, gbc.sp());
        EXPECT(0x78b5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 6A 0025
        gbc.setState(0x6446, 0x5067, 0x7ba0, 0x7ca3, 0xb3ed, 0x890, 0x0, 0x0);
        gbc.writeMem(0x6446, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x5067, gbc.sp());
        EXPECT(0x6448, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 6A 0026
        gbc.setState(0x3bf0, 0xed9a, 0xe8f0, 0x7ba0, 0x2472, 0x8057, 0x0, 0x0);
        gbc.writeMem(0x3bf0, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0xed9a, gbc.sp());
        EXPECT(0x3bf2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6A 0027
        gbc.setState(0xc12c, 0x2182, 0xf5c0, 0x6b36, 0x4df8, 0x2f2, 0x0, 0x1);
        gbc.writeMem(0xc12c, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x2182, gbc.sp());
        EXPECT(0xc12e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc12c));
        EXPECT(0x6a, gbc.readMem(0xc12d));
        // CB 6A 0028
        gbc.setState(0x3050, 0xcf8b, 0xd420, 0x6f06, 0x114c, 0x248e, 0x0, 0x0);
        gbc.writeMem(0x3050, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0xcf8b, gbc.sp());
        EXPECT(0x3052, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 6A 0029
        gbc.setState(0xcc73, 0x34aa, 0x2880, 0xf423, 0x5848, 0xbe98, 0x1, 0x1);
        gbc.writeMem(0xcc73, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x34aa, gbc.sp());
        EXPECT(0xcc75, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcc73));
        EXPECT(0x6a, gbc.readMem(0xcc74));
        // CB 6A 002A
        gbc.setState(0xb013, 0x26d, 0xe400, 0xfc54, 0x4201, 0xc567, 0x0, 0x1);
        gbc.writeMem(0xb013, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x26d, gbc.sp());
        EXPECT(0xb015, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb013));
        EXPECT(0x6a, gbc.readMem(0xb014));
        // CB 6A 002B
        gbc.setState(0x6a80, 0xae8c, 0x17c0, 0x32c5, 0xe1c8, 0xa5f9, 0x1, 0x1);
        gbc.writeMem(0x6a80, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0xae8c, gbc.sp());
        EXPECT(0x6a82, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 6A 002C
        gbc.setState(0x1d96, 0xd5ab, 0x76c0, 0x841f, 0xb67f, 0x195, 0x0, 0x1);
        gbc.writeMem(0x1d96, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0xd5ab, gbc.sp());
        EXPECT(0x1d98, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 6A 002D
        gbc.setState(0x1769, 0x8cfe, 0x1490, 0x740c, 0xf9e, 0x2f1b, 0x1, 0x0);
        gbc.writeMem(0x1769, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x8cfe, gbc.sp());
        EXPECT(0x176b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6A 002E
        gbc.setState(0xdd5, 0x4da5, 0xfef0, 0x9f8b, 0xb87f, 0x57e6, 0x1, 0x1);
        gbc.writeMem(0xdd5, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x4da5, gbc.sp());
        EXPECT(0xdd7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6A 002F
        gbc.setState(0x345f, 0xc66f, 0xd950, 0xef5d, 0xc375, 0x67ca, 0x0, 0x1);
        gbc.writeMem(0x345f, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0xc66f, gbc.sp());
        EXPECT(0x3461, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6A 0030
        gbc.setState(0x611d, 0x5c7b, 0xdae0, 0x5e60, 0x5768, 0xdd3d, 0x0, 0x0);
        gbc.writeMem(0x611d, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x5c7b, gbc.sp());
        EXPECT(0x611f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 6A 0031
        gbc.setState(0x945f, 0xe398, 0xaf40, 0x3a34, 0x6dbb, 0xee5f, 0x1, 0x1);
        gbc.writeMem(0x945f, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0xe398, gbc.sp());
        EXPECT(0x9461, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x945f));
        EXPECT(0x6a, gbc.readMem(0x9460));
        // CB 6A 0032
        gbc.setState(0xaeaa, 0x1e62, 0xb960, 0x3c3b, 0xd7b7, 0xa900, 0x1, 0x0);
        gbc.writeMem(0xaeaa, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x1e62, gbc.sp());
        EXPECT(0xaeac, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaeaa));
        EXPECT(0x6a, gbc.readMem(0xaeab));
        // CB 6A 0034
        gbc.setState(0xabe9, 0x7703, 0xe2c0, 0x9a53, 0x826b, 0xf158, 0x0, 0x0);
        gbc.writeMem(0xabe9, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x7703, gbc.sp());
        EXPECT(0xabeb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xabe9));
        EXPECT(0x6a, gbc.readMem(0xabea));
        // CB 6A 0035
        gbc.setState(0x2081, 0xa328, 0x32c0, 0xbbff, 0x85, 0x98c4, 0x0, 0x1);
        gbc.writeMem(0x2081, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0xa328, gbc.sp());
        EXPECT(0x2083, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 6A 0036
        gbc.setState(0x1c2a, 0x163b, 0x72f0, 0x7615, 0xc090, 0x16e5, 0x1, 0x0);
        gbc.writeMem(0x1c2a, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x163b, gbc.sp());
        EXPECT(0x1c2c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6A 0037
        gbc.setState(0x75d4, 0x8afb, 0x1380, 0xc2cd, 0xb3a4, 0x1817, 0x1, 0x1);
        gbc.writeMem(0x75d4, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x8afb, gbc.sp());
        EXPECT(0x75d6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 6A 0038
        gbc.setState(0x1585, 0xdfbc, 0xcd30, 0x749a, 0x989e, 0xfbe3, 0x0, 0x0);
        gbc.writeMem(0x1585, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0xdfbc, gbc.sp());
        EXPECT(0x1587, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6A 0039
        gbc.setState(0x20ac, 0x20ac, 0x44c0, 0x9730, 0x933a, 0x79bc, 0x0, 0x0);
        gbc.writeMem(0x20ac, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x20ac, gbc.sp());
        EXPECT(0x20ae, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 6A 003C
        gbc.setState(0x8ee2, 0xa681, 0x28d0, 0x131a, 0x4442, 0x1aef, 0x0, 0x0);
        gbc.writeMem(0x8ee2, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0xa681, gbc.sp());
        EXPECT(0x8ee4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8ee2));
        EXPECT(0x6a, gbc.readMem(0x8ee3));
        // CB 6A 003D
        gbc.setState(0x41d6, 0xf07a, 0x55e0, 0x92fb, 0xace5, 0xc5bc, 0x0, 0x1);
        gbc.writeMem(0x41d6, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0xf07a, gbc.sp());
        EXPECT(0x41d8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 6A 003E
        gbc.setState(0xc3c2, 0x30cd, 0x1580, 0x254f, 0xe6ec, 0x5659, 0x0, 0x1);
        gbc.writeMem(0xc3c2, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x30cd, gbc.sp());
        EXPECT(0xc3c4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc3c2));
        EXPECT(0x6a, gbc.readMem(0xc3c3));
        // CB 6A 003F
        gbc.setState(0xd155, 0x3be3, 0xde60, 0x9b82, 0x7c90, 0xd9ad, 0x0, 0x1);
        gbc.writeMem(0xd155, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x3be3, gbc.sp());
        EXPECT(0xd157, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd155));
        EXPECT(0x6a, gbc.readMem(0xd156));
        // CB 6A 0040
        gbc.setState(0x2c39, 0x9eba, 0x3b0, 0x87b3, 0x4734, 0xfbec, 0x1, 0x1);
        gbc.writeMem(0x2c39, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x9eba, gbc.sp());
        EXPECT(0x2c3b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6A 0042
        gbc.setState(0xa84f, 0xd92f, 0x1b20, 0xefe3, 0x3f26, 0xf58a, 0x0, 0x0);
        gbc.writeMem(0xa84f, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0xd92f, gbc.sp());
        EXPECT(0xa851, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa84f));
        EXPECT(0x6a, gbc.readMem(0xa850));
        // CB 6A 0043
        gbc.setState(0x6d69, 0xad73, 0xeda0, 0x735e, 0x7655, 0x82b0, 0x1, 0x1);
        gbc.writeMem(0x6d69, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0xad73, gbc.sp());
        EXPECT(0x6d6b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 6A 0044
        gbc.setState(0xb2e4, 0x1561, 0x9c20, 0x38c0, 0x41b6, 0xc65e, 0x1, 0x0);
        gbc.writeMem(0xb2e4, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x1561, gbc.sp());
        EXPECT(0xb2e6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb2e4));
        EXPECT(0x6a, gbc.readMem(0xb2e5));
        // CB 6A 0046
        gbc.setState(0x8184, 0x49af, 0x3360, 0x5763, 0xba84, 0x2f23, 0x0, 0x1);
        gbc.writeMem(0x8184, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x49af, gbc.sp());
        EXPECT(0x8186, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8184));
        EXPECT(0x6a, gbc.readMem(0x8185));
        // CB 6A 0047
        gbc.setState(0x79e, 0x6866, 0x5b00, 0x211c, 0xff29, 0x6db9, 0x1, 0x0);
        gbc.writeMem(0x79e, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x6866, gbc.sp());
        EXPECT(0x7a0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 6A 0048
        gbc.setState(0x81b1, 0x6311, 0xf570, 0x8191, 0xd36e, 0xcde3, 0x1, 0x1);
        gbc.writeMem(0x81b1, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x6311, gbc.sp());
        EXPECT(0x81b3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x81b1));
        EXPECT(0x6a, gbc.readMem(0x81b2));
        // CB 6A 0049
        gbc.setState(0x3c29, 0xb3bd, 0x9610, 0xdf28, 0x4fd, 0xfd4f, 0x1, 0x0);
        gbc.writeMem(0x3c29, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0xb3bd, gbc.sp());
        EXPECT(0x3c2b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6A 004A
        gbc.setState(0x6211, 0xcfff, 0xc930, 0x6e28, 0xbd91, 0xc044, 0x1, 0x1);
        gbc.writeMem(0x6211, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0xcfff, gbc.sp());
        EXPECT(0x6213, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6A 004B
        gbc.setState(0x1601, 0xc617, 0xc40, 0x7d64, 0xb8cc, 0xd9a, 0x0, 0x0);
        gbc.writeMem(0x1601, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0xc617, gbc.sp());
        EXPECT(0x1603, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 6A 004C
        gbc.setState(0x6509, 0x22ef, 0xb450, 0x1899, 0x9d4a, 0x2ccb, 0x1, 0x1);
        gbc.writeMem(0x6509, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x22ef, gbc.sp());
        EXPECT(0x650b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6A 004D
        gbc.setState(0x3bdb, 0x10a7, 0x1b40, 0x1e02, 0xd768, 0x7b7f, 0x0, 0x1);
        gbc.writeMem(0x3bdb, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x10a7, gbc.sp());
        EXPECT(0x3bdd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 6A 004E
        gbc.setState(0xc0ac, 0x6b09, 0xeaf0, 0x806d, 0xae77, 0x9186, 0x0, 0x0);
        gbc.writeMem(0xc0ac, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x6b09, gbc.sp());
        EXPECT(0xc0ae, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc0ac));
        EXPECT(0x6a, gbc.readMem(0xc0ad));
        // CB 6A 004F
        gbc.setState(0xd899, 0x6719, 0x4d0, 0x7da3, 0xc80, 0xcb20, 0x0, 0x1);
        gbc.writeMem(0xd899, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x6719, gbc.sp());
        EXPECT(0xd89b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd899));
        EXPECT(0x6a, gbc.readMem(0xd89a));
        // CB 6A 0050
        gbc.setState(0x4c8e, 0x46e7, 0x3400, 0x8d47, 0x7e85, 0x4163, 0x1, 0x0);
        gbc.writeMem(0x4c8e, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x46e7, gbc.sp());
        EXPECT(0x4c90, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 6A 0051
        gbc.setState(0x6dc8, 0x96e4, 0xf4a0, 0x60a9, 0x35c2, 0x2494, 0x1, 0x0);
        gbc.writeMem(0x6dc8, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x96e4, gbc.sp());
        EXPECT(0x6dca, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 6A 0052
        gbc.setState(0x92e6, 0x2143, 0x33d0, 0x4902, 0x9b54, 0x9ae9, 0x0, 0x1);
        gbc.writeMem(0x92e6, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x2143, gbc.sp());
        EXPECT(0x92e8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x92e6));
        EXPECT(0x6a, gbc.readMem(0x92e7));
        // CB 6A 0053
        gbc.setState(0x3624, 0xdaf0, 0x4710, 0x5370, 0xebc5, 0xb8c2, 0x0, 0x0);
        gbc.writeMem(0x3624, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0xdaf0, gbc.sp());
        EXPECT(0x3626, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6A 0054
        gbc.setState(0xc767, 0xa108, 0x2730, 0x69cb, 0x69b8, 0x60fc, 0x1, 0x1);
        gbc.writeMem(0xc767, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0xa108, gbc.sp());
        EXPECT(0xc769, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc767));
        EXPECT(0x6a, gbc.readMem(0xc768));
        // CB 6A 0055
        gbc.setState(0x9e5b, 0x2139, 0x9f30, 0x11dd, 0x28a6, 0xcf72, 0x0, 0x1);
        gbc.writeMem(0x9e5b, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x2139, gbc.sp());
        EXPECT(0x9e5d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9e5b));
        EXPECT(0x6a, gbc.readMem(0x9e5c));
        // CB 6A 0056
        gbc.setState(0x77b2, 0x3a86, 0x5460, 0x9695, 0xe4d0, 0x8311, 0x0, 0x1);
        gbc.writeMem(0x77b2, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x3a86, gbc.sp());
        EXPECT(0x77b4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 6A 0057
        gbc.setState(0x5043, 0xc4a5, 0x4910, 0xd5d2, 0xeb3b, 0x8520, 0x0, 0x1);
        gbc.writeMem(0x5043, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0xc4a5, gbc.sp());
        EXPECT(0x5045, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6A 0058
        gbc.setState(0x9306, 0x5729, 0xc750, 0xd7dd, 0xf7c8, 0xdfa2, 0x1, 0x1);
        gbc.writeMem(0x9306, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x5729, gbc.sp());
        EXPECT(0x9308, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9306));
        EXPECT(0x6a, gbc.readMem(0x9307));
        // CB 6A 0059
        gbc.setState(0x2f55, 0xaab6, 0x1ef0, 0x93ab, 0xb115, 0xab3c, 0x1, 0x0);
        gbc.writeMem(0x2f55, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0xaab6, gbc.sp());
        EXPECT(0x2f57, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6A 005A
        gbc.setState(0x9099, 0xd5b4, 0x4860, 0xa97f, 0xbd69, 0xb02d, 0x1, 0x1);
        gbc.writeMem(0x9099, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0xd5b4, gbc.sp());
        EXPECT(0x909b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9099));
        EXPECT(0x6a, gbc.readMem(0x909a));
        // CB 6A 005B
        gbc.setState(0x7ec, 0x2eb1, 0x6000, 0xa221, 0x71c2, 0x5b33, 0x1, 0x1);
        gbc.writeMem(0x7ec, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x2eb1, gbc.sp());
        EXPECT(0x7ee, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 6A 005D
        gbc.setState(0xb361, 0xce6, 0xd1b0, 0x1a5f, 0x75ea, 0x22af, 0x0, 0x0);
        gbc.writeMem(0xb361, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0xce6, gbc.sp());
        EXPECT(0xb363, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb361));
        EXPECT(0x6a, gbc.readMem(0xb362));
        // CB 6A 005E
        gbc.setState(0xea6f, 0x2cbb, 0x9aa0, 0xd9bc, 0x3b3e, 0x634e, 0x0, 0x1);
        gbc.writeMem(0xea6f, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x2cbb, gbc.sp());
        EXPECT(0xea71, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xea6f));
        EXPECT(0x6a, gbc.readMem(0xea70));
        // CB 6A 005F
        gbc.setState(0xba32, 0xed26, 0x2330, 0xa35d, 0xfbc2, 0x69e, 0x0, 0x1);
        gbc.writeMem(0xba32, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0xed26, gbc.sp());
        EXPECT(0xba34, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xba32));
        EXPECT(0x6a, gbc.readMem(0xba33));
        // CB 6A 0060
        gbc.setState(0x9f0b, 0x9ab3, 0x6e30, 0xbd40, 0x63c0, 0x46be, 0x1, 0x0);
        gbc.writeMem(0x9f0b, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0x9ab3, gbc.sp());
        EXPECT(0x9f0d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9f0b));
        EXPECT(0x6a, gbc.readMem(0x9f0c));
        // CB 6A 0061
        gbc.setState(0x7d36, 0xed32, 0xa5a0, 0x232c, 0x3bdd, 0x553f, 0x1, 0x0);
        gbc.writeMem(0x7d36, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0xed32, gbc.sp());
        EXPECT(0x7d38, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 6A 0062
        gbc.setState(0x1ce6, 0x100a, 0x4e90, 0x7b, 0x7637, 0x72ab, 0x0, 0x1);
        gbc.writeMem(0x1ce6, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x100a, gbc.sp());
        EXPECT(0x1ce8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6A 0063
        gbc.setState(0xade1, 0xbae6, 0x7ca0, 0x4a4b, 0x8303, 0x3c94, 0x0, 0x0);
        gbc.writeMem(0xade1, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0xbae6, gbc.sp());
        EXPECT(0xade3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xade1));
        EXPECT(0x6a, gbc.readMem(0xade2));
        // CB 6A 0064
        gbc.setState(0xea1d, 0xcb3c, 0xa40, 0x16c6, 0x3749, 0x74e1, 0x0, 0x1);
        gbc.writeMem(0xea1d, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0xcb3c, gbc.sp());
        EXPECT(0xea1f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xea1d));
        EXPECT(0x6a, gbc.readMem(0xea1e));
        // CB 6A 0065
        gbc.setState(0x279b, 0xd925, 0x2b70, 0xa44a, 0x8d4b, 0x6cb4, 0x1, 0x1);
        gbc.writeMem(0x279b, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0xd925, gbc.sp());
        EXPECT(0x279d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6A 0066
        gbc.setState(0x9425, 0x813a, 0x7270, 0xce72, 0x345b, 0x1e1f, 0x0, 0x1);
        gbc.writeMem(0x9425, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x813a, gbc.sp());
        EXPECT(0x9427, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9425));
        EXPECT(0x6a, gbc.readMem(0x9426));
        // CB 6A 0067
        gbc.setState(0x2c3e, 0x356f, 0x6760, 0xf172, 0x8ee, 0xbd8, 0x0, 0x1);
        gbc.writeMem(0x2c3e, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x356f, gbc.sp());
        EXPECT(0x2c40, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 6A 0069
        gbc.setState(0xcde3, 0x3588, 0xd850, 0x95c3, 0xddc8, 0x2c1e, 0x1, 0x0);
        gbc.writeMem(0xcde3, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x3588, gbc.sp());
        EXPECT(0xcde5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcde3));
        EXPECT(0x6a, gbc.readMem(0xcde4));
        // CB 6A 006B
        gbc.setState(0xa7f8, 0xfbea, 0x6a00, 0x4491, 0xcb6, 0x7a14, 0x0, 0x1);
        gbc.writeMem(0xa7f8, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0xfbea, gbc.sp());
        EXPECT(0xa7fa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa7f8));
        EXPECT(0x6a, gbc.readMem(0xa7f9));
        // CB 6A 006C
        gbc.setState(0x5a28, 0x9a93, 0x6f0, 0xfab9, 0x9626, 0xc9a3, 0x1, 0x0);
        gbc.writeMem(0x5a28, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0x9a93, gbc.sp());
        EXPECT(0x5a2a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6A 006D
        gbc.setState(0x1214, 0xac48, 0x2720, 0x508e, 0x8702, 0x734d, 0x0, 0x0);
        gbc.writeMem(0x1214, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0xac48, gbc.sp());
        EXPECT(0x1216, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 6A 006E
        gbc.setState(0xd868, 0x8c87, 0x8bd0, 0x5454, 0x4a39, 0xf7dd, 0x0, 0x1);
        gbc.writeMem(0xd868, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x8c87, gbc.sp());
        EXPECT(0xd86a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd868));
        EXPECT(0x6a, gbc.readMem(0xd869));
        // CB 6A 006F
        gbc.setState(0x4dbb, 0x749b, 0x47f0, 0x6b09, 0x693a, 0xe6f6, 0x1, 0x1);
        gbc.writeMem(0x4dbb, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x749b, gbc.sp());
        EXPECT(0x4dbd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6A 0071
        gbc.setState(0xca72, 0x72bb, 0x6e60, 0x315b, 0x78b0, 0x2e1e, 0x1, 0x0);
        gbc.writeMem(0xca72, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x72bb, gbc.sp());
        EXPECT(0xca74, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xca72));
        EXPECT(0x6a, gbc.readMem(0xca73));
        // CB 6A 0072
        gbc.setState(0xc40c, 0x8164, 0xf10, 0x635f, 0x8a3c, 0xed40, 0x0, 0x1);
        gbc.writeMem(0xc40c, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x8164, gbc.sp());
        EXPECT(0xc40e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc40c));
        EXPECT(0x6a, gbc.readMem(0xc40d));
        // CB 6A 0073
        gbc.setState(0x6f2e, 0x9423, 0xaaa0, 0x3d94, 0x7304, 0x39af, 0x0, 0x0);
        gbc.writeMem(0x6f2e, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x9423, gbc.sp());
        EXPECT(0x6f30, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 6A 0074
        gbc.setState(0x690b, 0x9c7d, 0x5140, 0x79ee, 0x6619, 0x15db, 0x0, 0x1);
        gbc.writeMem(0x690b, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x9c7d, gbc.sp());
        EXPECT(0x690d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 6A 0075
        gbc.setState(0x15fe, 0x6230, 0xe6a0, 0xb572, 0x3776, 0xd017, 0x1, 0x0);
        gbc.writeMem(0x15fe, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x6230, gbc.sp());
        EXPECT(0x1600, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 6A 0076
        gbc.setState(0x5758, 0x6295, 0xddb0, 0x595c, 0x1169, 0xe9d0, 0x1, 0x1);
        gbc.writeMem(0x5758, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x6295, gbc.sp());
        EXPECT(0x575a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6A 0077
        gbc.setState(0x9044, 0x84ff, 0x5a40, 0xc62b, 0xe365, 0xb7a2, 0x1, 0x0);
        gbc.writeMem(0x9044, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x84ff, gbc.sp());
        EXPECT(0x9046, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9044));
        EXPECT(0x6a, gbc.readMem(0x9045));
        // CB 6A 0078
        gbc.setState(0xe7bc, 0xe111, 0xd090, 0x707e, 0x38a0, 0xf69f, 0x0, 0x1);
        gbc.writeMem(0xe7bc, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0xe111, gbc.sp());
        EXPECT(0xe7be, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe7bc));
        EXPECT(0x6a, gbc.readMem(0xe7bd));
        // CB 6A 0079
        gbc.setState(0x3728, 0xcf6, 0x16a0, 0x5e08, 0xbba7, 0x3e3d, 0x0, 0x1);
        gbc.writeMem(0x3728, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0xcf6, gbc.sp());
        EXPECT(0x372a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 6A 007A
        gbc.setState(0xa6a8, 0x9e07, 0x58c0, 0x6c07, 0x5ccd, 0xb304, 0x0, 0x1);
        gbc.writeMem(0xa6a8, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x9e07, gbc.sp());
        EXPECT(0xa6aa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa6a8));
        EXPECT(0x6a, gbc.readMem(0xa6a9));
        // CB 6A 007B
        gbc.setState(0xa164, 0x8b47, 0x8d10, 0x1ec7, 0x8450, 0xdf95, 0x1, 0x1);
        gbc.writeMem(0xa164, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x8b47, gbc.sp());
        EXPECT(0xa166, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa164));
        EXPECT(0x6a, gbc.readMem(0xa165));
        // CB 6A 007C
        gbc.setState(0xb180, 0xc513, 0x16b0, 0x8b94, 0x17eb, 0xc229, 0x0, 0x0);
        gbc.writeMem(0xb180, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0xc513, gbc.sp());
        EXPECT(0xb182, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb180));
        EXPECT(0x6a, gbc.readMem(0xb181));
        // CB 6A 007D
        gbc.setState(0xbc48, 0x86c0, 0x52c0, 0x2922, 0x135c, 0x344a, 0x1, 0x1);
        gbc.writeMem(0xbc48, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x86c0, gbc.sp());
        EXPECT(0xbc4a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbc48));
        EXPECT(0x6a, gbc.readMem(0xbc49));
        // CB 6A 007E
        gbc.setState(0x2106, 0xb184, 0xe6b0, 0xf394, 0xe7d7, 0xf3ec, 0x0, 0x0);
        gbc.writeMem(0x2106, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0xb184, gbc.sp());
        EXPECT(0x2108, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6A 007F
        gbc.setState(0xd40d, 0xf9e4, 0x35c0, 0xe2a8, 0xbf52, 0xeb34, 0x1, 0x0);
        gbc.writeMem(0xd40d, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0xf9e4, gbc.sp());
        EXPECT(0xd40f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd40d));
        EXPECT(0x6a, gbc.readMem(0xd40e));
        // CB 6A 0080
        gbc.setState(0x3b83, 0xe7, 0x7e50, 0xfed3, 0xe8c4, 0x2783, 0x1, 0x1);
        gbc.writeMem(0x3b83, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0xe7, gbc.sp());
        EXPECT(0x3b85, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6A 0081
        gbc.setState(0x4e7e, 0xaf0b, 0x3c20, 0x1494, 0x65a2, 0xe866, 0x0, 0x1);
        gbc.writeMem(0x4e7e, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0xaf0b, gbc.sp());
        EXPECT(0x4e80, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 6A 0082
        gbc.setState(0xc9e0, 0xcf5d, 0x3890, 0x193b, 0x1a7a, 0xc3dc, 0x0, 0x0);
        gbc.writeMem(0xc9e0, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0xcf5d, gbc.sp());
        EXPECT(0xc9e2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc9e0));
        EXPECT(0x6a, gbc.readMem(0xc9e1));
        // CB 6A 0083
        gbc.setState(0xdb3c, 0xb971, 0xd80, 0xbd6c, 0x9c77, 0xe706, 0x1, 0x1);
        gbc.writeMem(0xdb3c, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0xb971, gbc.sp());
        EXPECT(0xdb3e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdb3c));
        EXPECT(0x6a, gbc.readMem(0xdb3d));
        // CB 6A 0084
        gbc.setState(0x34e4, 0x4deb, 0xd480, 0x4a58, 0x2d97, 0xcf76, 0x0, 0x0);
        gbc.writeMem(0x34e4, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x4deb, gbc.sp());
        EXPECT(0x34e6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 6A 0085
        gbc.setState(0xb7f9, 0x6e76, 0x72d0, 0x9cf8, 0x4398, 0x99f5, 0x1, 0x0);
        gbc.writeMem(0xb7f9, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x6e76, gbc.sp());
        EXPECT(0xb7fb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb7f9));
        EXPECT(0x6a, gbc.readMem(0xb7fa));
        // CB 6A 0086
        gbc.setState(0x8b78, 0xf887, 0x13a0, 0x92b4, 0xe362, 0xf257, 0x1, 0x0);
        gbc.writeMem(0x8b78, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0xf887, gbc.sp());
        EXPECT(0x8b7a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8b78));
        EXPECT(0x6a, gbc.readMem(0x8b79));
        // CB 6A 0087
        gbc.setState(0xe594, 0xbd4, 0x5d50, 0x736, 0x4388, 0xea31, 0x1, 0x0);
        gbc.writeMem(0xe594, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0xbd4, gbc.sp());
        EXPECT(0xe596, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe594));
        EXPECT(0x6a, gbc.readMem(0xe595));
        // CB 6A 0088
        gbc.setState(0xe42e, 0xcc4f, 0x2c30, 0x93bc, 0xaa78, 0x207b, 0x0, 0x1);
        gbc.writeMem(0xe42e, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0xcc4f, gbc.sp());
        EXPECT(0xe430, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe42e));
        EXPECT(0x6a, gbc.readMem(0xe42f));
        // CB 6A 0089
        gbc.setState(0x5b11, 0x3cf9, 0xac90, 0x337c, 0x2686, 0xf860, 0x1, 0x1);
        gbc.writeMem(0x5b11, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x3cf9, gbc.sp());
        EXPECT(0x5b13, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6A 008A
        gbc.setState(0x36bf, 0x5508, 0x4c30, 0x22c1, 0x787c, 0xaf7e, 0x0, 0x1);
        gbc.writeMem(0x36bf, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0x5508, gbc.sp());
        EXPECT(0x36c1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6A 008B
        gbc.setState(0xeacc, 0x132d, 0xeeb0, 0xdb0f, 0x2b1f, 0xf733, 0x0, 0x1);
        gbc.writeMem(0xeacc, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x132d, gbc.sp());
        EXPECT(0xeace, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeacc));
        EXPECT(0x6a, gbc.readMem(0xeacd));
        // CB 6A 008C
        gbc.setState(0xb8e9, 0xf839, 0x9420, 0xa458, 0x2cb8, 0xf560, 0x1, 0x0);
        gbc.writeMem(0xb8e9, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0xf839, gbc.sp());
        EXPECT(0xb8eb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb8e9));
        EXPECT(0x6a, gbc.readMem(0xb8ea));
        // CB 6A 008D
        gbc.setState(0x67a2, 0xd42d, 0x3440, 0x326, 0xdf07, 0x2ed, 0x1, 0x0);
        gbc.writeMem(0x67a2, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0xd42d, gbc.sp());
        EXPECT(0x67a4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 6A 008E
        gbc.setState(0x13e2, 0xde69, 0x940, 0xfe00, 0x65da, 0xbe0, 0x1, 0x0);
        gbc.writeMem(0x13e2, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0xde69, gbc.sp());
        EXPECT(0x13e4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 6A 008F
        gbc.setState(0x5b44, 0xe3b8, 0xd0, 0x58c8, 0x4984, 0xc89d, 0x0, 0x1);
        gbc.writeMem(0x5b44, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0xe3b8, gbc.sp());
        EXPECT(0x5b46, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6A 0090
        gbc.setState(0x5eaa, 0x6b2f, 0xadd0, 0xffac, 0xba64, 0xd53b, 0x1, 0x1);
        gbc.writeMem(0x5eaa, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x6b2f, gbc.sp());
        EXPECT(0x5eac, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6A 0092
        gbc.setState(0xda2a, 0xb10f, 0x73c0, 0x205a, 0xa95, 0x3939, 0x1, 0x0);
        gbc.writeMem(0xda2a, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0xb10f, gbc.sp());
        EXPECT(0xda2c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xda2a));
        EXPECT(0x6a, gbc.readMem(0xda2b));
        // CB 6A 0093
        gbc.setState(0x3d61, 0xaa68, 0xfe60, 0xa8c7, 0x3ade, 0xcb8d, 0x1, 0x1);
        gbc.writeMem(0x3d61, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0xaa68, gbc.sp());
        EXPECT(0x3d63, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 6A 0094
        gbc.setState(0x7b41, 0x9cfc, 0xec40, 0x175d, 0x2717, 0x69de, 0x0, 0x0);
        gbc.writeMem(0x7b41, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x9cfc, gbc.sp());
        EXPECT(0x7b43, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 6A 0095
        gbc.setState(0x1af8, 0x67cf, 0x1880, 0x1bf4, 0x4327, 0x4402, 0x0, 0x0);
        gbc.writeMem(0x1af8, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x67cf, gbc.sp());
        EXPECT(0x1afa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 6A 0096
        gbc.setState(0x464f, 0x56f0, 0xe390, 0x34eb, 0x8e46, 0xf82, 0x0, 0x1);
        gbc.writeMem(0x464f, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x56f0, gbc.sp());
        EXPECT(0x4651, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6A 0097
        gbc.setState(0x1d41, 0x3afe, 0x30c0, 0xbef9, 0xc551, 0xe698, 0x0, 0x1);
        gbc.writeMem(0x1d41, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x3afe, gbc.sp());
        EXPECT(0x1d43, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 6A 0099
        gbc.setState(0x4852, 0x4d33, 0x72e0, 0x5c9e, 0xf603, 0x24bc, 0x1, 0x1);
        gbc.writeMem(0x4852, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x4d33, gbc.sp());
        EXPECT(0x4854, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 6A 009A
        gbc.setState(0x7f79, 0xff59, 0xa180, 0x139a, 0x902c, 0xe8aa, 0x0, 0x0);
        gbc.writeMem(0x7f79, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0xff59, gbc.sp());
        EXPECT(0x7f7b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 6A 009B
        gbc.setState(0x8914, 0xf673, 0xf840, 0xa576, 0x95f4, 0xa624, 0x1, 0x1);
        gbc.writeMem(0x8914, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0xf673, gbc.sp());
        EXPECT(0x8916, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8914));
        EXPECT(0x6a, gbc.readMem(0x8915));
        // CB 6A 009C
        gbc.setState(0x941, 0x9ffa, 0x4230, 0xfcbd, 0xe078, 0x1e25, 0x1, 0x0);
        gbc.writeMem(0x941, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x9ffa, gbc.sp());
        EXPECT(0x943, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6A 009D
        gbc.setState(0xd9dc, 0x4868, 0x8c10, 0xa192, 0x749e, 0x6bc7, 0x1, 0x0);
        gbc.writeMem(0xd9dc, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x4868, gbc.sp());
        EXPECT(0xd9de, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd9dc));
        EXPECT(0x6a, gbc.readMem(0xd9dd));
        // CB 6A 009E
        gbc.setState(0x5862, 0x7c0e, 0x1c0, 0x9d0f, 0x470, 0x895e, 0x0, 0x0);
        gbc.writeMem(0x5862, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x7c0e, gbc.sp());
        EXPECT(0x5864, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 6A 009F
        gbc.setState(0xa344, 0xc860, 0x68e0, 0xc6bb, 0x9c20, 0x1888, 0x0, 0x1);
        gbc.writeMem(0xa344, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0xc860, gbc.sp());
        EXPECT(0xa346, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa344));
        EXPECT(0x6a, gbc.readMem(0xa345));
        // CB 6A 00A0
        gbc.setState(0xaf07, 0x18e6, 0xb510, 0x1ad5, 0x2641, 0xb157, 0x1, 0x0);
        gbc.writeMem(0xaf07, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x18e6, gbc.sp());
        EXPECT(0xaf09, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaf07));
        EXPECT(0x6a, gbc.readMem(0xaf08));
        // CB 6A 00A1
        gbc.setState(0xa0ac, 0x5d20, 0x6a00, 0x9ab0, 0x1544, 0xf08a, 0x1, 0x1);
        gbc.writeMem(0xa0ac, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x5d20, gbc.sp());
        EXPECT(0xa0ae, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa0ac));
        EXPECT(0x6a, gbc.readMem(0xa0ad));
        // CB 6A 00A2
        gbc.setState(0xe6fb, 0x818d, 0x4c30, 0x687, 0xeab5, 0x927b, 0x1, 0x0);
        gbc.writeMem(0xe6fb, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x818d, gbc.sp());
        EXPECT(0xe6fd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe6fb));
        EXPECT(0x6a, gbc.readMem(0xe6fc));
        // CB 6A 00A3
        gbc.setState(0xd875, 0x574e, 0xd810, 0xb928, 0x7b6f, 0xa0c1, 0x1, 0x0);
        gbc.writeMem(0xd875, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x574e, gbc.sp());
        EXPECT(0xd877, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd875));
        EXPECT(0x6a, gbc.readMem(0xd876));
        // CB 6A 00A4
        gbc.setState(0xa967, 0xb1ff, 0xacb0, 0xc1c3, 0x5146, 0x89e9, 0x1, 0x0);
        gbc.writeMem(0xa967, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0xb1ff, gbc.sp());
        EXPECT(0xa969, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa967));
        EXPECT(0x6a, gbc.readMem(0xa968));
        // CB 6A 00A5
        gbc.setState(0xadd8, 0xb44a, 0x85d0, 0x963c, 0xd5c4, 0xec9c, 0x1, 0x1);
        gbc.writeMem(0xadd8, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0xb44a, gbc.sp());
        EXPECT(0xadda, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xadd8));
        EXPECT(0x6a, gbc.readMem(0xadd9));
        // CB 6A 00A6
        gbc.setState(0x8cae, 0xff49, 0x200, 0x360a, 0x9f52, 0x13ac, 0x0, 0x1);
        gbc.writeMem(0x8cae, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0xff49, gbc.sp());
        EXPECT(0x8cb0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8cae));
        EXPECT(0x6a, gbc.readMem(0x8caf));
        // CB 6A 00A7
        gbc.setState(0x86ac, 0xa538, 0x2890, 0xe13d, 0x2d9c, 0x99d1, 0x1, 0x0);
        gbc.writeMem(0x86ac, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0xa538, gbc.sp());
        EXPECT(0x86ae, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x86ac));
        EXPECT(0x6a, gbc.readMem(0x86ad));
        // CB 6A 00A8
        gbc.setState(0xa450, 0xf054, 0xdd20, 0x9f07, 0x3315, 0x45c5, 0x0, 0x0);
        gbc.writeMem(0xa450, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0xf054, gbc.sp());
        EXPECT(0xa452, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa450));
        EXPECT(0x6a, gbc.readMem(0xa451));
        // CB 6A 00A9
        gbc.setState(0x1138, 0x9c67, 0x5a90, 0x8c9f, 0xdd88, 0x9079, 0x1, 0x0);
        gbc.writeMem(0x1138, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x9c67, gbc.sp());
        EXPECT(0x113a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6A 00AA
        gbc.setState(0xe705, 0x33d4, 0x8f90, 0xc4cf, 0x5dc, 0x4fa9, 0x0, 0x1);
        gbc.writeMem(0xe705, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x33d4, gbc.sp());
        EXPECT(0xe707, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe705));
        EXPECT(0x6a, gbc.readMem(0xe706));
        // CB 6A 00AB
        gbc.setState(0x6a10, 0x1a61, 0x8800, 0x520f, 0xabb7, 0xa7b5, 0x1, 0x0);
        gbc.writeMem(0x6a10, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x1a61, gbc.sp());
        EXPECT(0x6a12, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 6A 00AC
        gbc.setState(0xc4d3, 0x8940, 0xc430, 0x519, 0x8c99, 0x5e2d, 0x0, 0x1);
        gbc.writeMem(0xc4d3, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x8940, gbc.sp());
        EXPECT(0xc4d5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc4d3));
        EXPECT(0x6a, gbc.readMem(0xc4d4));
        // CB 6A 00AD
        gbc.setState(0xe67c, 0x9d62, 0x3440, 0x2e08, 0xf49a, 0xaea2, 0x0, 0x0);
        gbc.writeMem(0xe67c, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x9d62, gbc.sp());
        EXPECT(0xe67e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe67c));
        EXPECT(0x6a, gbc.readMem(0xe67d));
        // CB 6A 00AE
        gbc.setState(0x645d, 0xdf33, 0x1590, 0xbc82, 0x516d, 0xd3a4, 0x0, 0x0);
        gbc.writeMem(0x645d, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0xdf33, gbc.sp());
        EXPECT(0x645f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6A 00AF
        gbc.setState(0x7769, 0xd1b6, 0x8490, 0xb984, 0x9781, 0x8967, 0x0, 0x0);
        gbc.writeMem(0x7769, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0xd1b6, gbc.sp());
        EXPECT(0x776b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6A 00B0
        gbc.setState(0x53bb, 0x85dd, 0x49e0, 0x4023, 0x5386, 0x2fb, 0x1, 0x1);
        gbc.writeMem(0x53bb, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x85dd, gbc.sp());
        EXPECT(0x53bd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 6A 00B1
        gbc.setState(0x3155, 0x8de4, 0x9130, 0x904e, 0x1389, 0x96ad, 0x0, 0x1);
        gbc.writeMem(0x3155, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x8de4, gbc.sp());
        EXPECT(0x3157, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6A 00B2
        gbc.setState(0x37e, 0x6f04, 0x460, 0xa351, 0x3d3e, 0xfca0, 0x1, 0x0);
        gbc.writeMem(0x37e, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x6f04, gbc.sp());
        EXPECT(0x380, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 6A 00B3
        gbc.setState(0xc3c9, 0x67d9, 0xab60, 0x8541, 0x7a6f, 0xe8b2, 0x1, 0x0);
        gbc.writeMem(0xc3c9, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x67d9, gbc.sp());
        EXPECT(0xc3cb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc3c9));
        EXPECT(0x6a, gbc.readMem(0xc3ca));
        // CB 6A 00B4
        gbc.setState(0x655c, 0xb195, 0x2010, 0x694, 0xc126, 0x65ce, 0x0, 0x1);
        gbc.writeMem(0x655c, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0xb195, gbc.sp());
        EXPECT(0x655e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6A 00B5
        gbc.setState(0xdb35, 0x3f06, 0x39e0, 0x7b47, 0x977a, 0x2735, 0x1, 0x0);
        gbc.writeMem(0xdb35, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x3f06, gbc.sp());
        EXPECT(0xdb37, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdb35));
        EXPECT(0x6a, gbc.readMem(0xdb36));
        // CB 6A 00B6
        gbc.setState(0x44fe, 0xb183, 0xc8c0, 0x3493, 0xfd00, 0x48c7, 0x1, 0x1);
        gbc.writeMem(0x44fe, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0xb183, gbc.sp());
        EXPECT(0x4500, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 6A 00B7
        gbc.setState(0x937e, 0xd7e2, 0x2450, 0x1932, 0x8221, 0x6e04, 0x1, 0x1);
        gbc.writeMem(0x937e, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0xd7e2, gbc.sp());
        EXPECT(0x9380, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x937e));
        EXPECT(0x6a, gbc.readMem(0x937f));
        // CB 6A 00B8
        gbc.setState(0x1790, 0x773a, 0x9880, 0x8c12, 0xbffd, 0x67e7, 0x0, 0x1);
        gbc.writeMem(0x1790, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x773a, gbc.sp());
        EXPECT(0x1792, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 6A 00B9
        gbc.setState(0x7952, 0xbe67, 0x7a00, 0x93d1, 0x319c, 0xa9f9, 0x0, 0x0);
        gbc.writeMem(0x7952, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0xbe67, gbc.sp());
        EXPECT(0x7954, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 6A 00BA
        gbc.setState(0xef91, 0x4ad4, 0x3d50, 0x4db7, 0xdfa0, 0x9db7, 0x1, 0x0);
        gbc.writeMem(0xef91, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x4ad4, gbc.sp());
        EXPECT(0xef93, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xef91));
        EXPECT(0x6a, gbc.readMem(0xef92));
        // CB 6A 00BB
        gbc.setState(0x1801, 0xeadf, 0x9c90, 0xe77, 0x4987, 0x5286, 0x1, 0x0);
        gbc.writeMem(0x1801, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0xeadf, gbc.sp());
        EXPECT(0x1803, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6A 00BC
        gbc.setState(0x7349, 0x306c, 0xa900, 0x81f3, 0x7b94, 0xe84e, 0x0, 0x1);
        gbc.writeMem(0x7349, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x306c, gbc.sp());
        EXPECT(0x734b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 6A 00BE
        gbc.setState(0x877a, 0xe01a, 0xa9b0, 0x54c, 0x402f, 0x9a78, 0x0, 0x0);
        gbc.writeMem(0x877a, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0xe01a, gbc.sp());
        EXPECT(0x877c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x877a));
        EXPECT(0x6a, gbc.readMem(0x877b));
        // CB 6A 00BF
        gbc.setState(0x6d11, 0x7003, 0x2540, 0x8bf7, 0xe484, 0x50c7, 0x1, 0x0);
        gbc.writeMem(0x6d11, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x7003, gbc.sp());
        EXPECT(0x6d13, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 6A 00C0
        gbc.setState(0xb763, 0x7496, 0x1ff0, 0x91f8, 0xa7b8, 0x59c0, 0x0, 0x0);
        gbc.writeMem(0xb763, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x7496, gbc.sp());
        EXPECT(0xb765, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb763));
        EXPECT(0x6a, gbc.readMem(0xb764));
        // CB 6A 00C1
        gbc.setState(0x5e6, 0xd9e9, 0x52f0, 0x39b, 0xb1c1, 0x46ca, 0x0, 0x1);
        gbc.writeMem(0x5e6, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0xd9e9, gbc.sp());
        EXPECT(0x5e8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6A 00C2
        gbc.setState(0xb90d, 0xccfd, 0xc1e0, 0xb1b, 0x92fa, 0x7346, 0x0, 0x1);
        gbc.writeMem(0xb90d, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0xccfd, gbc.sp());
        EXPECT(0xb90f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb90d));
        EXPECT(0x6a, gbc.readMem(0xb90e));
        // CB 6A 00C3
        gbc.setState(0x4aea, 0xeac6, 0x41c0, 0xa2e5, 0x3911, 0xff7f, 0x1, 0x1);
        gbc.writeMem(0x4aea, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0xeac6, gbc.sp());
        EXPECT(0x4aec, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 6A 00C4
        gbc.setState(0x9e42, 0xdc75, 0x7a10, 0xe8ae, 0xdb9b, 0x2697, 0x0, 0x0);
        gbc.writeMem(0x9e42, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0xdc75, gbc.sp());
        EXPECT(0x9e44, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9e42));
        EXPECT(0x6a, gbc.readMem(0x9e43));
        // CB 6A 00C5
        gbc.setState(0x6e62, 0xceae, 0xcec0, 0x1b06, 0x950e, 0xfed0, 0x1, 0x1);
        gbc.writeMem(0x6e62, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0xceae, gbc.sp());
        EXPECT(0x6e64, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 6A 00C6
        gbc.setState(0xc445, 0x9073, 0xd90, 0x13ca, 0x94e6, 0x3e94, 0x1, 0x1);
        gbc.writeMem(0xc445, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x9073, gbc.sp());
        EXPECT(0xc447, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc445));
        EXPECT(0x6a, gbc.readMem(0xc446));
        // CB 6A 00C7
        gbc.setState(0x82d3, 0x91c3, 0x6160, 0x9867, 0x4cd0, 0x3254, 0x1, 0x1);
        gbc.writeMem(0x82d3, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x91c3, gbc.sp());
        EXPECT(0x82d5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x82d3));
        EXPECT(0x6a, gbc.readMem(0x82d4));
        // CB 6A 00C8
        gbc.setState(0x3fbf, 0x990e, 0x7f70, 0x6999, 0xf4ce, 0xeac8, 0x1, 0x1);
        gbc.writeMem(0x3fbf, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x990e, gbc.sp());
        EXPECT(0x3fc1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6A 00C9
        gbc.setState(0x5336, 0xb3b0, 0xf790, 0xa39c, 0x1189, 0xf070, 0x0, 0x1);
        gbc.writeMem(0x5336, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0xb3b0, gbc.sp());
        EXPECT(0x5338, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6A 00CA
        gbc.setState(0x9e9d, 0x70ad, 0x2320, 0xd76a, 0xb2c8, 0xb220, 0x0, 0x0);
        gbc.writeMem(0x9e9d, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x70ad, gbc.sp());
        EXPECT(0x9e9f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9e9d));
        EXPECT(0x6a, gbc.readMem(0x9e9e));
        // CB 6A 00CB
        gbc.setState(0x8f3e, 0xd602, 0xcde0, 0x6800, 0x25fa, 0xa140, 0x1, 0x1);
        gbc.writeMem(0x8f3e, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0xd602, gbc.sp());
        EXPECT(0x8f40, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8f3e));
        EXPECT(0x6a, gbc.readMem(0x8f3f));
        // CB 6A 00CC
        gbc.setState(0x5c7b, 0x5fa1, 0xa930, 0x50dd, 0xc302, 0xc4dc, 0x1, 0x0);
        gbc.writeMem(0x5c7b, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x5fa1, gbc.sp());
        EXPECT(0x5c7d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6A 00CD
        gbc.setState(0xd310, 0xe392, 0xc9e0, 0xaded, 0xde3f, 0x565d, 0x1, 0x1);
        gbc.writeMem(0xd310, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0xe392, gbc.sp());
        EXPECT(0xd312, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd310));
        EXPECT(0x6a, gbc.readMem(0xd311));
        // CB 6A 00CE
        gbc.setState(0x71dc, 0x9186, 0x25d0, 0xa32c, 0x832c, 0x12ea, 0x0, 0x1);
        gbc.writeMem(0x71dc, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x9186, gbc.sp());
        EXPECT(0x71de, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6A 00D0
        gbc.setState(0x894f, 0x7b4b, 0x8ce0, 0xb6, 0x2f84, 0x2da3, 0x0, 0x0);
        gbc.writeMem(0x894f, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0x7b4b, gbc.sp());
        EXPECT(0x8951, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x894f));
        EXPECT(0x6a, gbc.readMem(0x8950));
        // CB 6A 00D1
        gbc.setState(0x1526, 0x16da, 0x6670, 0xad7d, 0xa470, 0xe4cd, 0x0, 0x1);
        gbc.writeMem(0x1526, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x16da, gbc.sp());
        EXPECT(0x1528, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6A 00D2
        gbc.setState(0x1b61, 0x388a, 0x1590, 0x3110, 0x151b, 0x1e96, 0x1, 0x0);
        gbc.writeMem(0x1b61, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x388a, gbc.sp());
        EXPECT(0x1b63, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6A 00D3
        gbc.setState(0x790b, 0xd910, 0x1d60, 0xf34c, 0xe991, 0x74c, 0x0, 0x1);
        gbc.writeMem(0x790b, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0xd910, gbc.sp());
        EXPECT(0x790d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 6A 00D4
        gbc.setState(0x477b, 0xa08a, 0x880, 0x3fc2, 0x1ee4, 0x438d, 0x1, 0x1);
        gbc.writeMem(0x477b, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0xa08a, gbc.sp());
        EXPECT(0x477d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 6A 00D5
        gbc.setState(0x1e2c, 0x2e61, 0x27c0, 0xee5b, 0xda6d, 0x3397, 0x0, 0x0);
        gbc.writeMem(0x1e2c, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0x2e61, gbc.sp());
        EXPECT(0x1e2e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 6A 00D6
        gbc.setState(0xcc50, 0xdc7, 0x1ef0, 0x2a4e, 0xc8e3, 0xcef8, 0x0, 0x1);
        gbc.writeMem(0xcc50, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0xdc7, gbc.sp());
        EXPECT(0xcc52, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcc50));
        EXPECT(0x6a, gbc.readMem(0xcc51));
        // CB 6A 00D7
        gbc.setState(0xa538, 0x8e00, 0xe3c0, 0x8a26, 0x73cd, 0xa005, 0x1, 0x0);
        gbc.writeMem(0xa538, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x8e00, gbc.sp());
        EXPECT(0xa53a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa538));
        EXPECT(0x6a, gbc.readMem(0xa539));
        // CB 6A 00D8
        gbc.setState(0xbc77, 0x2c37, 0x5ae0, 0xbb0a, 0x1951, 0xb3b5, 0x1, 0x0);
        gbc.writeMem(0xbc77, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x2c37, gbc.sp());
        EXPECT(0xbc79, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbc77));
        EXPECT(0x6a, gbc.readMem(0xbc78));
        // CB 6A 00D9
        gbc.setState(0x8e3a, 0xda77, 0xbd40, 0x59f, 0xf9e5, 0x5bc7, 0x1, 0x0);
        gbc.writeMem(0x8e3a, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0xda77, gbc.sp());
        EXPECT(0x8e3c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8e3a));
        EXPECT(0x6a, gbc.readMem(0x8e3b));
        // CB 6A 00DA
        gbc.setState(0x1def, 0x12f1, 0xaf50, 0xc305, 0x4a54, 0x5882, 0x0, 0x0);
        gbc.writeMem(0x1def, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x12f1, gbc.sp());
        EXPECT(0x1df1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6A 00DC
        gbc.setState(0x7d21, 0x842c, 0x8ee0, 0x1808, 0x2e46, 0x8d6b, 0x1, 0x1);
        gbc.writeMem(0x7d21, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x842c, gbc.sp());
        EXPECT(0x7d23, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 6A 00DD
        gbc.setState(0x1ebb, 0x782c, 0x7780, 0x48b7, 0xfba7, 0x1c83, 0x0, 0x0);
        gbc.writeMem(0x1ebb, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x782c, gbc.sp());
        EXPECT(0x1ebd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 6A 00DE
        gbc.setState(0xd520, 0x9034, 0x67d0, 0x3d7b, 0x7819, 0x5e6a, 0x0, 0x0);
        gbc.writeMem(0xd520, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x9034, gbc.sp());
        EXPECT(0xd522, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd520));
        EXPECT(0x6a, gbc.readMem(0xd521));
        // CB 6A 00DF
        gbc.setState(0x5648, 0x7128, 0x8ab0, 0x579d, 0x646b, 0x7522, 0x1, 0x0);
        gbc.writeMem(0x5648, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x7128, gbc.sp());
        EXPECT(0x564a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6A 00E0
        gbc.setState(0x3aaf, 0xe41b, 0x94f0, 0xda85, 0x5e56, 0xc799, 0x0, 0x1);
        gbc.writeMem(0x3aaf, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0xe41b, gbc.sp());
        EXPECT(0x3ab1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6A 00E1
        gbc.setState(0x5a20, 0x40fa, 0x8710, 0x4c72, 0xd958, 0x1f99, 0x0, 0x0);
        gbc.writeMem(0x5a20, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x40fa, gbc.sp());
        EXPECT(0x5a22, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6A 00E2
        gbc.setState(0x74c7, 0xc3de, 0x7ef0, 0x5914, 0xbf93, 0xea7c, 0x1, 0x1);
        gbc.writeMem(0x74c7, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0xc3de, gbc.sp());
        EXPECT(0x74c9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6A 00E3
        gbc.setState(0x4b0b, 0x4379, 0x980, 0xb4fd, 0xa776, 0x7f43, 0x1, 0x1);
        gbc.writeMem(0x4b0b, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x4379, gbc.sp());
        EXPECT(0x4b0d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 6A 00E4
        gbc.setState(0xb845, 0xd875, 0x4ed0, 0xa126, 0xdec0, 0x99cd, 0x1, 0x0);
        gbc.writeMem(0xb845, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0xd875, gbc.sp());
        EXPECT(0xb847, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb845));
        EXPECT(0x6a, gbc.readMem(0xb846));
        // CB 6A 00E5
        gbc.setState(0x299c, 0x895c, 0x8750, 0xb8fc, 0x6c22, 0x2eb9, 0x1, 0x0);
        gbc.writeMem(0x299c, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x895c, gbc.sp());
        EXPECT(0x299e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6A 00E6
        gbc.setState(0x50dc, 0xe5ea, 0x9a10, 0x5dba, 0x84a5, 0x86ea, 0x0, 0x1);
        gbc.writeMem(0x50dc, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0xe5ea, gbc.sp());
        EXPECT(0x50de, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6A 00E7
        gbc.setState(0x230a, 0x44b2, 0x34c0, 0x8c79, 0xd354, 0x92bd, 0x0, 0x1);
        gbc.writeMem(0x230a, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x44b2, gbc.sp());
        EXPECT(0x230c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 6A 00E8
        gbc.setState(0x32be, 0x9612, 0xfb50, 0xdcc2, 0x3c87, 0xce96, 0x1, 0x1);
        gbc.writeMem(0x32be, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x9612, gbc.sp());
        EXPECT(0x32c0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6A 00E9
        gbc.setState(0xa6bd, 0x866d, 0x13a0, 0xe32a, 0x5978, 0x5d21, 0x1, 0x0);
        gbc.writeMem(0xa6bd, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x866d, gbc.sp());
        EXPECT(0xa6bf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa6bd));
        EXPECT(0x6a, gbc.readMem(0xa6be));
        // CB 6A 00EA
        gbc.setState(0x9e36, 0x2c28, 0x21f0, 0x9efe, 0x65eb, 0xbf1d, 0x0, 0x1);
        gbc.writeMem(0x9e36, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x2c28, gbc.sp());
        EXPECT(0x9e38, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9e36));
        EXPECT(0x6a, gbc.readMem(0x9e37));
        // CB 6A 00EB
        gbc.setState(0x89f0, 0x3d3d, 0x8ef0, 0xa114, 0x32ab, 0x77fd, 0x1, 0x1);
        gbc.writeMem(0x89f0, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x3d3d, gbc.sp());
        EXPECT(0x89f2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x89f0));
        EXPECT(0x6a, gbc.readMem(0x89f1));
        // CB 6A 00EC
        gbc.setState(0x7adb, 0xcc5b, 0xf170, 0xe382, 0x946, 0xeb79, 0x0, 0x1);
        gbc.writeMem(0x7adb, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0xcc5b, gbc.sp());
        EXPECT(0x7add, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6A 00ED
        gbc.setState(0xafd3, 0xc9a6, 0xcba0, 0x78a2, 0xb7e3, 0x2399, 0x0, 0x0);
        gbc.writeMem(0xafd3, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0xc9a6, gbc.sp());
        EXPECT(0xafd5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xafd3));
        EXPECT(0x6a, gbc.readMem(0xafd4));
        // CB 6A 00EE
        gbc.setState(0x5657, 0xdf1a, 0x300, 0x97, 0x2b0b, 0xd823, 0x0, 0x1);
        gbc.writeMem(0x5657, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0xdf1a, gbc.sp());
        EXPECT(0x5659, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 6A 00EF
        gbc.setState(0xdbd3, 0x4581, 0x1850, 0xdcba, 0xe60, 0x7f80, 0x1, 0x1);
        gbc.writeMem(0xdbd3, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x4581, gbc.sp());
        EXPECT(0xdbd5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdbd3));
        EXPECT(0x6a, gbc.readMem(0xdbd4));
        // CB 6A 00F0
        gbc.setState(0xc237, 0x8dcc, 0x28c0, 0x1d09, 0xa136, 0xd973, 0x1, 0x1);
        gbc.writeMem(0xc237, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x8dcc, gbc.sp());
        EXPECT(0xc239, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc237));
        EXPECT(0x6a, gbc.readMem(0xc238));
        // CB 6A 00F1
        gbc.setState(0x8afc, 0x6365, 0x10d0, 0xaee2, 0xb999, 0x1b72, 0x1, 0x0);
        gbc.writeMem(0x8afc, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x6365, gbc.sp());
        EXPECT(0x8afe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8afc));
        EXPECT(0x6a, gbc.readMem(0x8afd));
        // CB 6A 00F2
        gbc.setState(0xb37e, 0x8861, 0xf910, 0xb584, 0xf77c, 0x3411, 0x1, 0x0);
        gbc.writeMem(0xb37e, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x8861, gbc.sp());
        EXPECT(0xb380, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb37e));
        EXPECT(0x6a, gbc.readMem(0xb37f));
        // CB 6A 00F3
        gbc.setState(0x9112, 0xd1bf, 0x2670, 0x4afc, 0xab2f, 0xbe1c, 0x1, 0x0);
        gbc.writeMem(0x9112, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0xd1bf, gbc.sp());
        EXPECT(0x9114, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9112));
        EXPECT(0x6a, gbc.readMem(0x9113));
        // CB 6A 00F4
        gbc.setState(0x9c2d, 0xc3d8, 0xf7c0, 0xc7db, 0x4995, 0xfbbf, 0x0, 0x1);
        gbc.writeMem(0x9c2d, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0xc3d8, gbc.sp());
        EXPECT(0x9c2f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9c2d));
        EXPECT(0x6a, gbc.readMem(0x9c2e));
        // CB 6A 00F5
        gbc.setState(0xaef3, 0xe4c2, 0xc830, 0xf624, 0x7702, 0xaeb5, 0x1, 0x1);
        gbc.writeMem(0xaef3, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0xe4c2, gbc.sp());
        EXPECT(0xaef5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaef3));
        EXPECT(0x6a, gbc.readMem(0xaef4));
        // CB 6A 00F7
        gbc.setState(0xac, 0x99a3, 0xf9d0, 0x20a4, 0x6ce2, 0x7cc6, 0x0, 0x1);
        gbc.writeMem(0xac, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x99a3, gbc.sp());
        EXPECT(0xae, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6A 00F8
        gbc.setState(0x821c, 0xaff, 0xd1f0, 0x11b3, 0xf325, 0xfff7, 0x1, 0x0);
        gbc.writeMem(0x821c, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0xaff, gbc.sp());
        EXPECT(0x821e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x821c));
        EXPECT(0x6a, gbc.readMem(0x821d));
        // CB 6A 00F9
        gbc.setState(0xc5b7, 0x2cac, 0x4ce0, 0xd85, 0xb490, 0x5716, 0x0, 0x1);
        gbc.writeMem(0xc5b7, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x2cac, gbc.sp());
        EXPECT(0xc5b9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc5b7));
        EXPECT(0x6a, gbc.readMem(0xc5b8));
        // CB 6A 00FA
        gbc.setState(0x443e, 0x9f9, 0x13f0, 0x1fae, 0xb4b8, 0x312c, 0x1, 0x1);
        gbc.writeMem(0x443e, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x9f9, gbc.sp());
        EXPECT(0x4440, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6A 00FB
        gbc.setState(0x8755, 0x4c17, 0xf800, 0xeccc, 0x9dab, 0xf842, 0x0, 0x0);
        gbc.writeMem(0x8755, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x4c17, gbc.sp());
        EXPECT(0x8757, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8755));
        EXPECT(0x6a, gbc.readMem(0x8756));
        // CB 6A 00FC
        gbc.setState(0xc287, 0x1691, 0x4150, 0xe03d, 0xc023, 0x782d, 0x1, 0x1);
        gbc.writeMem(0xc287, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x1691, gbc.sp());
        EXPECT(0xc289, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc287));
        EXPECT(0x6a, gbc.readMem(0xc288));
        // CB 6A 00FD
        gbc.setState(0xcf2e, 0xe80c, 0x1c50, 0xf09b, 0xfe92, 0x32a, 0x1, 0x0);
        gbc.writeMem(0xcf2e, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0xe80c, gbc.sp());
        EXPECT(0xcf30, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcf2e));
        EXPECT(0x6a, gbc.readMem(0xcf2f));
        // CB 6A 00FE
        gbc.setState(0x96bc, 0xb4a5, 0x1fb0, 0x9f65, 0x1c58, 0x3f8f, 0x0, 0x0);
        gbc.writeMem(0x96bc, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0xb4a5, gbc.sp());
        EXPECT(0x96be, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x96bc));
        EXPECT(0x6a, gbc.readMem(0x96bd));
        // CB 6A 00FF
        gbc.setState(0x14af, 0x7fad, 0xef90, 0xbb0a, 0x51e5, 0x5c2b, 0x1, 0x0);
        gbc.writeMem(0x14af, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x7fad, gbc.sp());
        EXPECT(0x14b1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6A 0100
        gbc.setState(0xa42e, 0xed30, 0xd540, 0xf7d8, 0x155a, 0x2b47, 0x1, 0x0);
        gbc.writeMem(0xa42e, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0xed30, gbc.sp());
        EXPECT(0xa430, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa42e));
        EXPECT(0x6a, gbc.readMem(0xa42f));
        // CB 6A 0101
        gbc.setState(0x89ba, 0xd537, 0xc880, 0x5e42, 0xfa1a, 0x2927, 0x1, 0x0);
        gbc.writeMem(0x89ba, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0xd537, gbc.sp());
        EXPECT(0x89bc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x89ba));
        EXPECT(0x6a, gbc.readMem(0x89bb));
        // CB 6A 0102
        gbc.setState(0x54a6, 0xbe73, 0x8e50, 0xb12, 0x61fc, 0x22e3, 0x1, 0x0);
        gbc.writeMem(0x54a6, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0xbe73, gbc.sp());
        EXPECT(0x54a8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6A 0103
        gbc.setState(0xb560, 0xec03, 0x7e20, 0x5bd9, 0x8279, 0xd1bc, 0x1, 0x1);
        gbc.writeMem(0xb560, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0xec03, gbc.sp());
        EXPECT(0xb562, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb560));
        EXPECT(0x6a, gbc.readMem(0xb561));
        // CB 6A 0104
        gbc.setState(0xebed, 0xc89, 0xe900, 0xa30c, 0xc180, 0x4d49, 0x0, 0x0);
        gbc.writeMem(0xebed, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0xc89, gbc.sp());
        EXPECT(0xebef, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xebed));
        EXPECT(0x6a, gbc.readMem(0xebee));
        // CB 6A 0105
        gbc.setState(0xcf1d, 0xddad, 0x34d0, 0x7161, 0xfcbe, 0xa008, 0x1, 0x0);
        gbc.writeMem(0xcf1d, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0xddad, gbc.sp());
        EXPECT(0xcf1f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcf1d));
        EXPECT(0x6a, gbc.readMem(0xcf1e));
        // CB 6A 0106
        gbc.setState(0x3072, 0x99e8, 0xfb30, 0x802e, 0x64ab, 0x853, 0x1, 0x0);
        gbc.writeMem(0x3072, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x99e8, gbc.sp());
        EXPECT(0x3074, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6A 0107
        gbc.setState(0xbc44, 0x6996, 0x76b0, 0xd73a, 0xefb0, 0x54b, 0x1, 0x1);
        gbc.writeMem(0xbc44, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x6996, gbc.sp());
        EXPECT(0xbc46, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbc44));
        EXPECT(0x6a, gbc.readMem(0xbc45));
        // CB 6A 0108
        gbc.setState(0x5bc1, 0xdf1b, 0x7780, 0xbb6f, 0x85b2, 0x64ed, 0x0, 0x1);
        gbc.writeMem(0x5bc1, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0xdf1b, gbc.sp());
        EXPECT(0x5bc3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 6A 0109
        gbc.setState(0xcf8a, 0x107d, 0xcd20, 0xfde, 0xea26, 0xf14c, 0x1, 0x0);
        gbc.writeMem(0xcf8a, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x107d, gbc.sp());
        EXPECT(0xcf8c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcf8a));
        EXPECT(0x6a, gbc.readMem(0xcf8b));
        // CB 6A 010A
        gbc.setState(0xbbc0, 0xf7af, 0x3070, 0x6929, 0xa9ab, 0x77e0, 0x0, 0x1);
        gbc.writeMem(0xbbc0, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0xf7af, gbc.sp());
        EXPECT(0xbbc2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbbc0));
        EXPECT(0x6a, gbc.readMem(0xbbc1));
        // CB 6A 010B
        gbc.setState(0xcb3d, 0xdc30, 0x2cc0, 0xbfa0, 0xd10f, 0x13a8, 0x0, 0x0);
        gbc.writeMem(0xcb3d, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0xdc30, gbc.sp());
        EXPECT(0xcb3f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcb3d));
        EXPECT(0x6a, gbc.readMem(0xcb3e));
        // CB 6A 010C
        gbc.setState(0x88cf, 0x4ff8, 0x7330, 0x91dc, 0xb64a, 0x601b, 0x1, 0x0);
        gbc.writeMem(0x88cf, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x4ff8, gbc.sp());
        EXPECT(0x88d1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x88cf));
        EXPECT(0x6a, gbc.readMem(0x88d0));
        // CB 6A 010D
        gbc.setState(0xc7ae, 0xf39c, 0xf540, 0x4f20, 0xc00d, 0x9593, 0x1, 0x0);
        gbc.writeMem(0xc7ae, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0xf39c, gbc.sp());
        EXPECT(0xc7b0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc7ae));
        EXPECT(0x6a, gbc.readMem(0xc7af));
        // CB 6A 010E
        gbc.setState(0x88a7, 0x48ee, 0x4310, 0x447f, 0x2766, 0x3e3, 0x0, 0x1);
        gbc.writeMem(0x88a7, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x48ee, gbc.sp());
        EXPECT(0x88a9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x88a7));
        EXPECT(0x6a, gbc.readMem(0x88a8));
        // CB 6A 010F
        gbc.setState(0xc144, 0x3e53, 0xd10, 0x4079, 0x28c1, 0xb0d1, 0x0, 0x0);
        gbc.writeMem(0xc144, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x3e53, gbc.sp());
        EXPECT(0xc146, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc144));
        EXPECT(0x6a, gbc.readMem(0xc145));
        // CB 6A 0110
        gbc.setState(0x6bfa, 0x5517, 0x22e0, 0xd58b, 0x4235, 0x5c7c, 0x1, 0x1);
        gbc.writeMem(0x6bfa, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x5517, gbc.sp());
        EXPECT(0x6bfc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 6A 0111
        gbc.setState(0x60ae, 0x75b7, 0x7c00, 0xab04, 0xca97, 0xe17a, 0x1, 0x1);
        gbc.writeMem(0x60ae, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x75b7, gbc.sp());
        EXPECT(0x60b0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 6A 0112
        gbc.setState(0xdcd5, 0x2170, 0x1ff0, 0x8515, 0x4308, 0xe8c0, 0x0, 0x1);
        gbc.writeMem(0xdcd5, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x2170, gbc.sp());
        EXPECT(0xdcd7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdcd5));
        EXPECT(0x6a, gbc.readMem(0xdcd6));
        // CB 6A 0113
        gbc.setState(0xdaae, 0xbc96, 0xf860, 0x7647, 0xcd33, 0xecb8, 0x0, 0x1);
        gbc.writeMem(0xdaae, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0xbc96, gbc.sp());
        EXPECT(0xdab0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdaae));
        EXPECT(0x6a, gbc.readMem(0xdaaf));
        // CB 6A 0114
        gbc.setState(0x48d9, 0xe558, 0xbf10, 0x7f92, 0xf5d0, 0x6d77, 0x1, 0x0);
        gbc.writeMem(0x48d9, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0xe558, gbc.sp());
        EXPECT(0x48db, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6A 0115
        gbc.setState(0xd09c, 0x18a8, 0x4e40, 0x64df, 0x38bd, 0x385e, 0x0, 0x1);
        gbc.writeMem(0xd09c, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x18a8, gbc.sp());
        EXPECT(0xd09e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd09c));
        EXPECT(0x6a, gbc.readMem(0xd09d));
        // CB 6A 0116
        gbc.setState(0x9b46, 0xd8f, 0xf350, 0x34c7, 0xa565, 0x7c95, 0x1, 0x0);
        gbc.writeMem(0x9b46, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0xd8f, gbc.sp());
        EXPECT(0x9b48, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9b46));
        EXPECT(0x6a, gbc.readMem(0x9b47));
        // CB 6A 0117
        gbc.setState(0x7c80, 0x8053, 0xeb30, 0x9c34, 0xd534, 0xf824, 0x1, 0x1);
        gbc.writeMem(0x7c80, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x8053, gbc.sp());
        EXPECT(0x7c82, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6A 0118
        gbc.setState(0x5085, 0xbd7a, 0xa310, 0x54e7, 0x1b2d, 0xbcd, 0x1, 0x1);
        gbc.writeMem(0x5085, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0xbd7a, gbc.sp());
        EXPECT(0x5087, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6A 0119
        gbc.setState(0x6090, 0xcc9c, 0x1be0, 0xdbbd, 0x6629, 0xd1d8, 0x1, 0x1);
        gbc.writeMem(0x6090, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0xcc9c, gbc.sp());
        EXPECT(0x6092, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 6A 011A
        gbc.setState(0x936a, 0xc527, 0x31c0, 0xc3b7, 0x4575, 0xdcaf, 0x1, 0x1);
        gbc.writeMem(0x936a, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0xc527, gbc.sp());
        EXPECT(0x936c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x936a));
        EXPECT(0x6a, gbc.readMem(0x936b));
        // CB 6A 011B
        gbc.setState(0xe876, 0x5cef, 0x67c0, 0xece0, 0xcc7f, 0x950c, 0x1, 0x0);
        gbc.writeMem(0xe876, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x5cef, gbc.sp());
        EXPECT(0xe878, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe876));
        EXPECT(0x6a, gbc.readMem(0xe877));
        // CB 6A 011D
        gbc.setState(0x7f58, 0x90d6, 0x920, 0x8934, 0x3264, 0x2e42, 0x1, 0x0);
        gbc.writeMem(0x7f58, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x90d6, gbc.sp());
        EXPECT(0x7f5a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 6A 011E
        gbc.setState(0xb966, 0x5f92, 0x3c90, 0x675e, 0x644e, 0x4dcf, 0x1, 0x0);
        gbc.writeMem(0xb966, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x5f92, gbc.sp());
        EXPECT(0xb968, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb966));
        EXPECT(0x6a, gbc.readMem(0xb967));
        // CB 6A 011F
        gbc.setState(0xe50f, 0x6194, 0xeca0, 0x349, 0xf52d, 0xdb44, 0x1, 0x0);
        gbc.writeMem(0xe50f, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x6194, gbc.sp());
        EXPECT(0xe511, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe50f));
        EXPECT(0x6a, gbc.readMem(0xe510));
        // CB 6A 0120
        gbc.setState(0x4ebd, 0x9eea, 0x4a10, 0x5105, 0x8a7f, 0x2541, 0x0, 0x1);
        gbc.writeMem(0x4ebd, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x9eea, gbc.sp());
        EXPECT(0x4ebf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6A 0121
        gbc.setState(0x681, 0xd2e6, 0x58b0, 0x3627, 0xeacc, 0xe625, 0x0, 0x0);
        gbc.writeMem(0x681, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0xd2e6, gbc.sp());
        EXPECT(0x683, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6A 0123
        gbc.setState(0x7675, 0xeeee, 0xc910, 0x6e17, 0xc483, 0x42cd, 0x1, 0x1);
        gbc.writeMem(0x7675, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0xeeee, gbc.sp());
        EXPECT(0x7677, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6A 0124
        gbc.setState(0xd58c, 0xd657, 0x22d0, 0xac70, 0x135, 0xc901, 0x1, 0x1);
        gbc.writeMem(0xd58c, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0xd657, gbc.sp());
        EXPECT(0xd58e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd58c));
        EXPECT(0x6a, gbc.readMem(0xd58d));
        // CB 6A 0125
        gbc.setState(0x5b78, 0xae6e, 0x68a0, 0x1c00, 0xea55, 0x385c, 0x0, 0x0);
        gbc.writeMem(0x5b78, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0xae6e, gbc.sp());
        EXPECT(0x5b7a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 6A 0126
        gbc.setState(0xe6e2, 0x2333, 0x95d0, 0xa64e, 0xf941, 0xf36e, 0x1, 0x1);
        gbc.writeMem(0xe6e2, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x2333, gbc.sp());
        EXPECT(0xe6e4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe6e2));
        EXPECT(0x6a, gbc.readMem(0xe6e3));
        // CB 6A 0129
        gbc.setState(0x117b, 0xa599, 0x7ab0, 0x8e1d, 0x2fe3, 0x3b80, 0x1, 0x0);
        gbc.writeMem(0x117b, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0xa599, gbc.sp());
        EXPECT(0x117d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6A 012A
        gbc.setState(0x3d0b, 0x29eb, 0x5360, 0xd922, 0x7c5b, 0xdd6f, 0x0, 0x0);
        gbc.writeMem(0x3d0b, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x29eb, gbc.sp());
        EXPECT(0x3d0d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 6A 012B
        gbc.setState(0x6fdb, 0x6590, 0x27e0, 0x985c, 0xdad, 0xf6d7, 0x0, 0x0);
        gbc.writeMem(0x6fdb, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0x6590, gbc.sp());
        EXPECT(0x6fdd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 6A 012C
        gbc.setState(0xa472, 0xfbc, 0x2eb0, 0x2011, 0xc2f1, 0x6f91, 0x0, 0x1);
        gbc.writeMem(0xa472, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0xfbc, gbc.sp());
        EXPECT(0xa474, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa472));
        EXPECT(0x6a, gbc.readMem(0xa473));
        // CB 6A 012D
        gbc.setState(0x2954, 0xdc06, 0xf790, 0x4ea8, 0x7819, 0x2833, 0x0, 0x0);
        gbc.writeMem(0x2954, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0xdc06, gbc.sp());
        EXPECT(0x2956, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6A 012E
        gbc.setState(0xa749, 0xd03f, 0xee40, 0xcdbe, 0xe441, 0x4cca, 0x0, 0x1);
        gbc.writeMem(0xa749, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0xd03f, gbc.sp());
        EXPECT(0xa74b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa749));
        EXPECT(0x6a, gbc.readMem(0xa74a));
        // CB 6A 012F
        gbc.setState(0x922, 0x2bc6, 0xabb0, 0xda1b, 0x8c5d, 0x3fc4, 0x1, 0x1);
        gbc.writeMem(0x922, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x2bc6, gbc.sp());
        EXPECT(0x924, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6A 0130
        gbc.setState(0x5f8e, 0x3ff0, 0x1520, 0x4805, 0x529b, 0x8899, 0x0, 0x0);
        gbc.writeMem(0x5f8e, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x3ff0, gbc.sp());
        EXPECT(0x5f90, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 6A 0131
        gbc.setState(0x225e, 0xbcd, 0x8910, 0x1de4, 0x7056, 0x36f1, 0x0, 0x0);
        gbc.writeMem(0x225e, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0xbcd, gbc.sp());
        EXPECT(0x2260, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6A 0132
        gbc.setState(0x6f8e, 0x2170, 0x19d0, 0xbe92, 0x517d, 0xda7e, 0x0, 0x1);
        gbc.writeMem(0x6f8e, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0x2170, gbc.sp());
        EXPECT(0x6f90, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6A 0133
        gbc.setState(0xb288, 0xac63, 0x25a0, 0x443f, 0x79bd, 0xa0f6, 0x0, 0x1);
        gbc.writeMem(0xb288, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0xac63, gbc.sp());
        EXPECT(0xb28a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb288));
        EXPECT(0x6a, gbc.readMem(0xb289));
        // CB 6A 0134
        gbc.setState(0x3659, 0x720d, 0x2d0, 0xe753, 0x9f80, 0x3e4f, 0x0, 0x1);
        gbc.writeMem(0x3659, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x720d, gbc.sp());
        EXPECT(0x365b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6A 0135
        gbc.setState(0x7025, 0x4ba6, 0xc400, 0xd54, 0x43d5, 0x39c6, 0x0, 0x0);
        gbc.writeMem(0x7025, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x4ba6, gbc.sp());
        EXPECT(0x7027, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 6A 0136
        gbc.setState(0xdb2f, 0xb417, 0x37e0, 0x5406, 0xef62, 0x8f61, 0x0, 0x0);
        gbc.writeMem(0xdb2f, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0xb417, gbc.sp());
        EXPECT(0xdb31, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdb2f));
        EXPECT(0x6a, gbc.readMem(0xdb30));
        // CB 6A 0137
        gbc.setState(0x5a6f, 0x7dd3, 0x18f0, 0x2453, 0xe1f3, 0x1a42, 0x0, 0x1);
        gbc.writeMem(0x5a6f, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x7dd3, gbc.sp());
        EXPECT(0x5a71, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6A 0138
        gbc.setState(0x7fdb, 0x5c0d, 0x2550, 0xc403, 0x318e, 0xd96f, 0x0, 0x0);
        gbc.writeMem(0x7fdb, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x5c0d, gbc.sp());
        EXPECT(0x7fdd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6A 0139
        gbc.setState(0x1000, 0x49a0, 0x1390, 0x8b0c, 0xa2af, 0x120a, 0x1, 0x1);
        gbc.writeMem(0x1000, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x49a0, gbc.sp());
        EXPECT(0x1002, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6A 013A
        gbc.setState(0xeb58, 0x15b2, 0x5320, 0x940d, 0xb0cd, 0xf631, 0x1, 0x0);
        gbc.writeMem(0xeb58, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x15b2, gbc.sp());
        EXPECT(0xeb5a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeb58));
        EXPECT(0x6a, gbc.readMem(0xeb59));
        // CB 6A 013B
        gbc.setState(0x3b8d, 0xe027, 0x9860, 0x97cb, 0xd917, 0xcd47, 0x0, 0x1);
        gbc.writeMem(0x3b8d, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0xe027, gbc.sp());
        EXPECT(0x3b8f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 6A 013C
        gbc.setState(0xa153, 0x6440, 0x2680, 0x1936, 0x51f5, 0xd8a4, 0x0, 0x0);
        gbc.writeMem(0xa153, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x6440, gbc.sp());
        EXPECT(0xa155, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa153));
        EXPECT(0x6a, gbc.readMem(0xa154));
        // CB 6A 013D
        gbc.setState(0x30a4, 0xc4d0, 0xbf10, 0x9d9e, 0x7849, 0x2126, 0x0, 0x0);
        gbc.writeMem(0x30a4, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0xc4d0, gbc.sp());
        EXPECT(0x30a6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6A 013E
        gbc.setState(0xcf10, 0x5eb6, 0xb9e0, 0x7489, 0x620c, 0x1e2b, 0x1, 0x1);
        gbc.writeMem(0xcf10, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x5eb6, gbc.sp());
        EXPECT(0xcf12, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcf10));
        EXPECT(0x6a, gbc.readMem(0xcf11));
        // CB 6A 013F
        gbc.setState(0x5a70, 0x5b2b, 0xe5e0, 0xcf84, 0xb417, 0xe8ce, 0x1, 0x0);
        gbc.writeMem(0x5a70, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x5b2b, gbc.sp());
        EXPECT(0x5a72, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 6A 0140
        gbc.setState(0x2652, 0x8702, 0x1470, 0xaf24, 0xd966, 0xc7c6, 0x1, 0x0);
        gbc.writeMem(0x2652, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x8702, gbc.sp());
        EXPECT(0x2654, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6A 0141
        gbc.setState(0x3f9c, 0x3ee7, 0x7e0, 0x77a7, 0x9e47, 0x5606, 0x1, 0x1);
        gbc.writeMem(0x3f9c, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x3ee7, gbc.sp());
        EXPECT(0x3f9e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 6A 0142
        gbc.setState(0xbc1, 0xf848, 0xaf70, 0x892, 0xa118, 0x2523, 0x1, 0x1);
        gbc.writeMem(0xbc1, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0xf848, gbc.sp());
        EXPECT(0xbc3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6A 0143
        gbc.setState(0x36f, 0xf833, 0xc270, 0xcaf4, 0x3168, 0x99f, 0x1, 0x0);
        gbc.writeMem(0x36f, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0xf833, gbc.sp());
        EXPECT(0x371, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6A 0144
        gbc.setState(0xc5f7, 0xbb70, 0x7880, 0x5bf7, 0x6fb1, 0xaa2f, 0x1, 0x0);
        gbc.writeMem(0xc5f7, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0xbb70, gbc.sp());
        EXPECT(0xc5f9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc5f7));
        EXPECT(0x6a, gbc.readMem(0xc5f8));
        // CB 6A 0145
        gbc.setState(0x3c85, 0x1494, 0x660, 0x5bd7, 0x801d, 0xff04, 0x1, 0x1);
        gbc.writeMem(0x3c85, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x1494, gbc.sp());
        EXPECT(0x3c87, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 6A 0146
        gbc.setState(0x5831, 0x45d8, 0x86f0, 0xecc3, 0xa30b, 0x90c2, 0x0, 0x0);
        gbc.writeMem(0x5831, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x45d8, gbc.sp());
        EXPECT(0x5833, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6A 0147
        gbc.setState(0xd399, 0xa11c, 0x5ed0, 0xab59, 0x73b4, 0x12f5, 0x0, 0x0);
        gbc.writeMem(0xd399, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0xa11c, gbc.sp());
        EXPECT(0xd39b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd399));
        EXPECT(0x6a, gbc.readMem(0xd39a));
        // CB 6A 0149
        gbc.setState(0xe509, 0x725, 0xe140, 0x6962, 0x16d6, 0x459d, 0x0, 0x0);
        gbc.writeMem(0xe509, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x725, gbc.sp());
        EXPECT(0xe50b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe509));
        EXPECT(0x6a, gbc.readMem(0xe50a));
        // CB 6A 014A
        gbc.setState(0x2d79, 0xaaa1, 0x4370, 0x8675, 0xac17, 0xf14, 0x0, 0x0);
        gbc.writeMem(0x2d79, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0xaaa1, gbc.sp());
        EXPECT(0x2d7b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6A 014B
        gbc.setState(0xc39b, 0x5c81, 0x7ad0, 0xb627, 0x3db1, 0xd98c, 0x1, 0x1);
        gbc.writeMem(0xc39b, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x5c81, gbc.sp());
        EXPECT(0xc39d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc39b));
        EXPECT(0x6a, gbc.readMem(0xc39c));
        // CB 6A 014C
        gbc.setState(0x674a, 0x5d9d, 0xb5c0, 0x271f, 0x352f, 0x9efe, 0x1, 0x1);
        gbc.writeMem(0x674a, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x5d9d, gbc.sp());
        EXPECT(0x674c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 6A 014D
        gbc.setState(0x16a4, 0x1b79, 0x7bb0, 0xb14, 0x882d, 0x91be, 0x0, 0x1);
        gbc.writeMem(0x16a4, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0x1b79, gbc.sp());
        EXPECT(0x16a6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6A 014E
        gbc.setState(0x2bcc, 0xaf92, 0x470, 0x5e92, 0x7e87, 0x436b, 0x0, 0x0);
        gbc.writeMem(0x2bcc, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0xaf92, gbc.sp());
        EXPECT(0x2bce, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6A 014F
        gbc.setState(0x3dc7, 0xc136, 0xc810, 0x7f84, 0xf182, 0x677a, 0x0, 0x1);
        gbc.writeMem(0x3dc7, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0xc136, gbc.sp());
        EXPECT(0x3dc9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6A 0150
        gbc.setState(0x5a84, 0xd4db, 0xc9c0, 0x960c, 0x10c6, 0xbdfc, 0x1, 0x1);
        gbc.writeMem(0x5a84, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0xd4db, gbc.sp());
        EXPECT(0x5a86, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 6A 0151
        gbc.setState(0xe8b0, 0x1d51, 0x9ec0, 0x63f7, 0xe04b, 0xd3cb, 0x0, 0x1);
        gbc.writeMem(0xe8b0, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x1d51, gbc.sp());
        EXPECT(0xe8b2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe8b0));
        EXPECT(0x6a, gbc.readMem(0xe8b1));
        // CB 6A 0152
        gbc.setState(0xae2c, 0x2f1, 0x9f10, 0x5700, 0xfadb, 0x36e4, 0x1, 0x1);
        gbc.writeMem(0xae2c, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x2f1, gbc.sp());
        EXPECT(0xae2e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xae2c));
        EXPECT(0x6a, gbc.readMem(0xae2d));
        // CB 6A 0153
        gbc.setState(0x1279, 0xb691, 0x18c0, 0xe114, 0x3cc2, 0xa2b7, 0x1, 0x0);
        gbc.writeMem(0x1279, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0xb691, gbc.sp());
        EXPECT(0x127b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 6A 0154
        gbc.setState(0x48e6, 0x60c6, 0x3a60, 0x87f7, 0xa328, 0xaf75, 0x1, 0x0);
        gbc.writeMem(0x48e6, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x60c6, gbc.sp());
        EXPECT(0x48e8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 6A 0155
        gbc.setState(0xeb3f, 0x8df1, 0xad90, 0x2d52, 0xb168, 0x8918, 0x1, 0x0);
        gbc.writeMem(0xeb3f, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x8df1, gbc.sp());
        EXPECT(0xeb41, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeb3f));
        EXPECT(0x6a, gbc.readMem(0xeb40));
        // CB 6A 0156
        gbc.setState(0x6aa, 0x24dd, 0x62b0, 0xc15b, 0x249e, 0xfb22, 0x0, 0x0);
        gbc.writeMem(0x6aa, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x24dd, gbc.sp());
        EXPECT(0x6ac, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6A 0157
        gbc.setState(0x153, 0x363b, 0x2190, 0xe59c, 0x6a53, 0x5da7, 0x0, 0x0);
        gbc.writeMem(0x153, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x363b, gbc.sp());
        EXPECT(0x155, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6A 0158
        gbc.setState(0x98e2, 0xee06, 0x7350, 0x732b, 0x2ee5, 0xeeca, 0x1, 0x0);
        gbc.writeMem(0x98e2, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0xee06, gbc.sp());
        EXPECT(0x98e4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x98e2));
        EXPECT(0x6a, gbc.readMem(0x98e3));
        // CB 6A 0159
        gbc.setState(0x3543, 0x1486, 0xedb0, 0xe8c3, 0x6ffb, 0x1d98, 0x1, 0x1);
        gbc.writeMem(0x3543, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x1486, gbc.sp());
        EXPECT(0x3545, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6A 015B
        gbc.setState(0x1988, 0xc648, 0x49e0, 0x8bc6, 0xb1d5, 0xb768, 0x1, 0x1);
        gbc.writeMem(0x1988, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0xc648, gbc.sp());
        EXPECT(0x198a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 6A 015C
        gbc.setState(0xeccc, 0x5c4a, 0x7d60, 0x3f51, 0x5c57, 0x766b, 0x0, 0x1);
        gbc.writeMem(0xeccc, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x5c4a, gbc.sp());
        EXPECT(0xecce, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeccc));
        EXPECT(0x6a, gbc.readMem(0xeccd));
        // CB 6A 015D
        gbc.setState(0x5e63, 0x228f, 0xce90, 0xe636, 0x9e8a, 0xfdd9, 0x1, 0x1);
        gbc.writeMem(0x5e63, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x228f, gbc.sp());
        EXPECT(0x5e65, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6A 015E
        gbc.setState(0x9b19, 0xfe06, 0x1b40, 0x6120, 0xfd47, 0x622d, 0x1, 0x0);
        gbc.writeMem(0x9b19, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0xfe06, gbc.sp());
        EXPECT(0x9b1b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9b19));
        EXPECT(0x6a, gbc.readMem(0x9b1a));
        // CB 6A 015F
        gbc.setState(0xaee7, 0x6012, 0xc6b0, 0x8338, 0xa614, 0x4755, 0x0, 0x0);
        gbc.writeMem(0xaee7, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x6012, gbc.sp());
        EXPECT(0xaee9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaee7));
        EXPECT(0x6a, gbc.readMem(0xaee8));
        // CB 6A 0160
        gbc.setState(0x39fe, 0x95cf, 0x820, 0xcb29, 0x6ab7, 0x6283, 0x1, 0x1);
        gbc.writeMem(0x39fe, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x95cf, gbc.sp());
        EXPECT(0x3a00, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 6A 0161
        gbc.setState(0x65a3, 0xaa20, 0xe370, 0x6cca, 0xdbf, 0x39e7, 0x1, 0x1);
        gbc.writeMem(0x65a3, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0xaa20, gbc.sp());
        EXPECT(0x65a5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6A 0162
        gbc.setState(0x2998, 0x337f, 0x6400, 0x28a7, 0x9cf6, 0x169c, 0x0, 0x1);
        gbc.writeMem(0x2998, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x337f, gbc.sp());
        EXPECT(0x299a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 6A 0163
        gbc.setState(0x8c9b, 0xfa55, 0xd70, 0x564c, 0x8f01, 0xc34d, 0x1, 0x0);
        gbc.writeMem(0x8c9b, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0xfa55, gbc.sp());
        EXPECT(0x8c9d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8c9b));
        EXPECT(0x6a, gbc.readMem(0x8c9c));
        // CB 6A 0164
        gbc.setState(0x6fd, 0x84a1, 0x9cd0, 0xc543, 0x40d4, 0x215, 0x0, 0x0);
        gbc.writeMem(0x6fd, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x84a1, gbc.sp());
        EXPECT(0x6ff, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6A 0165
        gbc.setState(0x3ecc, 0xfd86, 0x58b0, 0xe767, 0xd398, 0x496b, 0x0, 0x0);
        gbc.writeMem(0x3ecc, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0xfd86, gbc.sp());
        EXPECT(0x3ece, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6A 0167
        gbc.setState(0xd661, 0x43ba, 0x9c40, 0x650c, 0xaf48, 0x4d87, 0x0, 0x1);
        gbc.writeMem(0xd661, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x43ba, gbc.sp());
        EXPECT(0xd663, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd661));
        EXPECT(0x6a, gbc.readMem(0xd662));
        // CB 6A 0168
        gbc.setState(0xb468, 0xa260, 0x5710, 0xc62f, 0xc019, 0x197d, 0x1, 0x0);
        gbc.writeMem(0xb468, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0xa260, gbc.sp());
        EXPECT(0xb46a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb468));
        EXPECT(0x6a, gbc.readMem(0xb469));
        // CB 6A 0169
        gbc.setState(0xe375, 0x18b9, 0x6900, 0x7bdf, 0xa061, 0x93e2, 0x1, 0x1);
        gbc.writeMem(0xe375, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x18b9, gbc.sp());
        EXPECT(0xe377, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe375));
        EXPECT(0x6a, gbc.readMem(0xe376));
        // CB 6A 016A
        gbc.setState(0xcf99, 0x2ac4, 0x4b80, 0x5b5b, 0x3a79, 0x1f6f, 0x1, 0x0);
        gbc.writeMem(0xcf99, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x2ac4, gbc.sp());
        EXPECT(0xcf9b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcf99));
        EXPECT(0x6a, gbc.readMem(0xcf9a));
        // CB 6A 016B
        gbc.setState(0x5a5a, 0x5261, 0x8260, 0x6473, 0x59b2, 0x6f31, 0x0, 0x0);
        gbc.writeMem(0x5a5a, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x5261, gbc.sp());
        EXPECT(0x5a5c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 6A 016C
        gbc.setState(0x67e0, 0xab42, 0xe0d0, 0x6eb5, 0x993b, 0xb074, 0x1, 0x0);
        gbc.writeMem(0x67e0, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0xab42, gbc.sp());
        EXPECT(0x67e2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6A 016D
        gbc.setState(0x3cf5, 0x307b, 0xe9c0, 0xe5f9, 0xa541, 0xe9b4, 0x1, 0x0);
        gbc.writeMem(0x3cf5, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x307b, gbc.sp());
        EXPECT(0x3cf7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 6A 016E
        gbc.setState(0x6dc1, 0x52ba, 0x7c90, 0x9062, 0x5569, 0x6f33, 0x1, 0x0);
        gbc.writeMem(0x6dc1, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x52ba, gbc.sp());
        EXPECT(0x6dc3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6A 016F
        gbc.setState(0x2813, 0x8b4c, 0xb6a0, 0x556d, 0x9739, 0x1525, 0x1, 0x0);
        gbc.writeMem(0x2813, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x8b4c, gbc.sp());
        EXPECT(0x2815, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 6A 0170
        gbc.setState(0xefb0, 0xfe9, 0x2510, 0xd721, 0x3368, 0x3bce, 0x0, 0x0);
        gbc.writeMem(0xefb0, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0xfe9, gbc.sp());
        EXPECT(0xefb2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xefb0));
        EXPECT(0x6a, gbc.readMem(0xefb1));
        // CB 6A 0171
        gbc.setState(0xd6ac, 0xf151, 0xf290, 0xd5f1, 0xfdb6, 0xc7cd, 0x0, 0x1);
        gbc.writeMem(0xd6ac, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0xf151, gbc.sp());
        EXPECT(0xd6ae, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd6ac));
        EXPECT(0x6a, gbc.readMem(0xd6ad));
        // CB 6A 0172
        gbc.setState(0xd4c5, 0xe92f, 0xfb00, 0xb0da, 0x549f, 0x28d1, 0x0, 0x1);
        gbc.writeMem(0xd4c5, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0xe92f, gbc.sp());
        EXPECT(0xd4c7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd4c5));
        EXPECT(0x6a, gbc.readMem(0xd4c6));
        // CB 6A 0173
        gbc.setState(0x300d, 0x31d8, 0xc120, 0xb1b7, 0xf819, 0x5ae1, 0x1, 0x0);
        gbc.writeMem(0x300d, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0x31d8, gbc.sp());
        EXPECT(0x300f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 6A 0174
        gbc.setState(0x56c6, 0x7a8e, 0x50d0, 0xfcbf, 0x62d0, 0x275e, 0x0, 0x0);
        gbc.writeMem(0x56c6, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x7a8e, gbc.sp());
        EXPECT(0x56c8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6A 0175
        gbc.setState(0x7a21, 0xca26, 0x2d70, 0x7ea0, 0xbe6, 0xad55, 0x1, 0x0);
        gbc.writeMem(0x7a21, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0xca26, gbc.sp());
        EXPECT(0x7a23, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6A 0176
        gbc.setState(0x733b, 0x4de, 0x4cb0, 0x70d8, 0x73aa, 0xecb6, 0x1, 0x0);
        gbc.writeMem(0x733b, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x4de, gbc.sp());
        EXPECT(0x733d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6A 0177
        gbc.setState(0x485, 0x8523, 0x7fe0, 0x60ed, 0x45f6, 0xc70d, 0x0, 0x0);
        gbc.writeMem(0x485, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x8523, gbc.sp());
        EXPECT(0x487, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 6A 0178
        gbc.setState(0x49d8, 0xeb07, 0xce0, 0x88c2, 0xa83b, 0xcc19, 0x1, 0x0);
        gbc.writeMem(0x49d8, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0xeb07, gbc.sp());
        EXPECT(0x49da, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 6A 0179
        gbc.setState(0x312b, 0x4639, 0x47e0, 0xaeb5, 0xdf42, 0x6ccd, 0x0, 0x0);
        gbc.writeMem(0x312b, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x4639, gbc.sp());
        EXPECT(0x312d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 6A 017A
        gbc.setState(0x2547, 0xb6a7, 0x9060, 0x5724, 0xeb7b, 0xf377, 0x0, 0x1);
        gbc.writeMem(0x2547, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0xb6a7, gbc.sp());
        EXPECT(0x2549, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 6A 017B
        gbc.setState(0xabe, 0x6d55, 0xb8a0, 0x21e7, 0xbb63, 0xca7, 0x0, 0x0);
        gbc.writeMem(0xabe, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x6d55, gbc.sp());
        EXPECT(0xac0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 6A 017C
        gbc.setState(0x4ca1, 0x8c56, 0x3c50, 0xad59, 0x981d, 0x455, 0x1, 0x0);
        gbc.writeMem(0x4ca1, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x8c56, gbc.sp());
        EXPECT(0x4ca3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6A 017D
        gbc.setState(0xb5ca, 0x5595, 0x1c10, 0x33d8, 0x889, 0xeef6, 0x0, 0x1);
        gbc.writeMem(0xb5ca, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x5595, gbc.sp());
        EXPECT(0xb5cc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb5ca));
        EXPECT(0x6a, gbc.readMem(0xb5cb));
        // CB 6A 017E
        gbc.setState(0xdd95, 0x7f1f, 0x68b0, 0xdac9, 0x28ae, 0x8607, 0x1, 0x0);
        gbc.writeMem(0xdd95, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x7f1f, gbc.sp());
        EXPECT(0xdd97, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdd95));
        EXPECT(0x6a, gbc.readMem(0xdd96));
        // CB 6A 017F
        gbc.setState(0x6ef2, 0xcf32, 0x4560, 0x47fb, 0xedb5, 0x6505, 0x0, 0x0);
        gbc.writeMem(0x6ef2, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0xcf32, gbc.sp());
        EXPECT(0x6ef4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 6A 0180
        gbc.setState(0x21f0, 0xe04f, 0x8060, 0x473, 0xa715, 0x407e, 0x0, 0x1);
        gbc.writeMem(0x21f0, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0xe04f, gbc.sp());
        EXPECT(0x21f2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 6A 0181
        gbc.setState(0x37b5, 0x4a7f, 0xd760, 0xe420, 0xb047, 0x9098, 0x1, 0x1);
        gbc.writeMem(0x37b5, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x4a7f, gbc.sp());
        EXPECT(0x37b7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 6A 0182
        gbc.setState(0xc1cc, 0xa94a, 0xde00, 0xaba5, 0x104b, 0x3ab7, 0x1, 0x1);
        gbc.writeMem(0xc1cc, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0xa94a, gbc.sp());
        EXPECT(0xc1ce, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc1cc));
        EXPECT(0x6a, gbc.readMem(0xc1cd));
        // CB 6A 0183
        gbc.setState(0x7d6e, 0x3729, 0x8de0, 0x97cb, 0x25b2, 0xc7a5, 0x0, 0x0);
        gbc.writeMem(0x7d6e, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x3729, gbc.sp());
        EXPECT(0x7d70, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 6A 0184
        gbc.setState(0xe815, 0xdbb4, 0x73b0, 0xbaaf, 0x24e6, 0x523a, 0x0, 0x1);
        gbc.writeMem(0xe815, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0xdbb4, gbc.sp());
        EXPECT(0xe817, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe815));
        EXPECT(0x6a, gbc.readMem(0xe816));
        // CB 6A 0185
        gbc.setState(0xabf, 0x900e, 0x6880, 0x1c5e, 0x4dc6, 0xc849, 0x0, 0x1);
        gbc.writeMem(0xabf, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x900e, gbc.sp());
        EXPECT(0xac1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 6A 0186
        gbc.setState(0x47c, 0x96ec, 0x1e70, 0xa09b, 0x3803, 0xff3d, 0x0, 0x1);
        gbc.writeMem(0x47c, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x96ec, gbc.sp());
        EXPECT(0x47e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6A 0187
        gbc.setState(0x5adf, 0x8320, 0x1cf0, 0xd32f, 0x8dcd, 0x15e1, 0x1, 0x1);
        gbc.writeMem(0x5adf, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0x8320, gbc.sp());
        EXPECT(0x5ae1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6A 0188
        gbc.setState(0x8ef, 0x58e7, 0x8eb0, 0x655c, 0x3601, 0x592c, 0x0, 0x1);
        gbc.writeMem(0x8ef, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x58e7, gbc.sp());
        EXPECT(0x8f1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6A 0189
        gbc.setState(0xd21, 0xc89d, 0xca40, 0x2d46, 0xa6e1, 0xbdf0, 0x0, 0x1);
        gbc.writeMem(0xd21, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0xc89d, gbc.sp());
        EXPECT(0xd23, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 6A 018A
        gbc.setState(0x3784, 0xea11, 0x7460, 0x20ca, 0x494c, 0xb917, 0x0, 0x1);
        gbc.writeMem(0x3784, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0xea11, gbc.sp());
        EXPECT(0x3786, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 6A 018B
        gbc.setState(0x25ef, 0x3f79, 0xa1f0, 0x214d, 0xb329, 0xab09, 0x0, 0x1);
        gbc.writeMem(0x25ef, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x3f79, gbc.sp());
        EXPECT(0x25f1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6A 018C
        gbc.setState(0x4e1f, 0xa7b, 0xf7d0, 0x4c2b, 0x6746, 0x39d0, 0x0, 0x1);
        gbc.writeMem(0x4e1f, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0xa7b, gbc.sp());
        EXPECT(0x4e21, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6A 018D
        gbc.setState(0x76b6, 0xf2df, 0x8df0, 0x4002, 0x48cc, 0xcc02, 0x1, 0x0);
        gbc.writeMem(0x76b6, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0xf2df, gbc.sp());
        EXPECT(0x76b8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6A 018E
        gbc.setState(0x46a2, 0x4286, 0xd620, 0xef74, 0x85b, 0xa2db, 0x1, 0x0);
        gbc.writeMem(0x46a2, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x4286, gbc.sp());
        EXPECT(0x46a4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 6A 018F
        gbc.setState(0xcf6d, 0xbc2f, 0x7190, 0xb0df, 0x1744, 0x29e3, 0x0, 0x1);
        gbc.writeMem(0xcf6d, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0xbc2f, gbc.sp());
        EXPECT(0xcf6f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcf6d));
        EXPECT(0x6a, gbc.readMem(0xcf6e));
        // CB 6A 0190
        gbc.setState(0x6a3c, 0xe2b4, 0x4350, 0xcf5d, 0xd478, 0xf10c, 0x0, 0x0);
        gbc.writeMem(0x6a3c, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0xe2b4, gbc.sp());
        EXPECT(0x6a3e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6A 0191
        gbc.setState(0x7bca, 0xe4aa, 0xebc0, 0xb185, 0x3f01, 0xf540, 0x1, 0x1);
        gbc.writeMem(0x7bca, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0xe4aa, gbc.sp());
        EXPECT(0x7bcc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 6A 0192
        gbc.setState(0x60a0, 0x55ea, 0x4f40, 0x876a, 0xd44c, 0x5a5d, 0x1, 0x0);
        gbc.writeMem(0x60a0, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x55ea, gbc.sp());
        EXPECT(0x60a2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 6A 0193
        gbc.setState(0x8ac3, 0xa807, 0xcea0, 0x78c1, 0xdba4, 0x8dff, 0x1, 0x0);
        gbc.writeMem(0x8ac3, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0xa807, gbc.sp());
        EXPECT(0x8ac5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8ac3));
        EXPECT(0x6a, gbc.readMem(0x8ac4));
        // CB 6A 0194
        gbc.setState(0xe27e, 0xa024, 0xfbe0, 0xbcd0, 0x436d, 0x396f, 0x1, 0x0);
        gbc.writeMem(0xe27e, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0xa024, gbc.sp());
        EXPECT(0xe280, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe27e));
        EXPECT(0x6a, gbc.readMem(0xe27f));
        // CB 6A 0195
        gbc.setState(0xc45d, 0x646c, 0x6240, 0x7140, 0x88f3, 0xc724, 0x0, 0x1);
        gbc.writeMem(0xc45d, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x646c, gbc.sp());
        EXPECT(0xc45f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc45d));
        EXPECT(0x6a, gbc.readMem(0xc45e));
        // CB 6A 0196
        gbc.setState(0xed43, 0x916, 0x2b90, 0x683b, 0x45f3, 0xefd5, 0x1, 0x0);
        gbc.writeMem(0xed43, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x916, gbc.sp());
        EXPECT(0xed45, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xed43));
        EXPECT(0x6a, gbc.readMem(0xed44));
        // CB 6A 0197
        gbc.setState(0x52b8, 0xa0b1, 0x5e60, 0xd977, 0x87d3, 0xb8f9, 0x0, 0x0);
        gbc.writeMem(0x52b8, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0xa0b1, gbc.sp());
        EXPECT(0x52ba, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 6A 0198
        gbc.setState(0x4c36, 0x6c33, 0x1ff0, 0x2cc3, 0xd7ed, 0x596c, 0x1, 0x0);
        gbc.writeMem(0x4c36, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x6c33, gbc.sp());
        EXPECT(0x4c38, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6A 0199
        gbc.setState(0x2112, 0x4eb2, 0x3ef0, 0xefa9, 0xdf4a, 0xb2, 0x0, 0x1);
        gbc.writeMem(0x2112, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x4eb2, gbc.sp());
        EXPECT(0x2114, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6A 019A
        gbc.setState(0xab34, 0xbda3, 0xb690, 0xe0fb, 0xbc3b, 0x5255, 0x1, 0x1);
        gbc.writeMem(0xab34, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0xbda3, gbc.sp());
        EXPECT(0xab36, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xab34));
        EXPECT(0x6a, gbc.readMem(0xab35));
        // CB 6A 019B
        gbc.setState(0x3000, 0xf25a, 0x21d0, 0x3f65, 0x8ff8, 0xbc70, 0x0, 0x0);
        gbc.writeMem(0x3000, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0xf25a, gbc.sp());
        EXPECT(0x3002, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6A 019C
        gbc.setState(0x3483, 0x81b0, 0x8ef0, 0x1a74, 0xa299, 0xfce6, 0x0, 0x0);
        gbc.writeMem(0x3483, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x81b0, gbc.sp());
        EXPECT(0x3485, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6A 019D
        gbc.setState(0xa5e1, 0x2238, 0x23a0, 0xad9, 0x67e5, 0xf0e1, 0x0, 0x1);
        gbc.writeMem(0xa5e1, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0x2238, gbc.sp());
        EXPECT(0xa5e3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa5e1));
        EXPECT(0x6a, gbc.readMem(0xa5e2));
        // CB 6A 019F
        gbc.setState(0xbf78, 0x9a00, 0x1d50, 0x704, 0xffd, 0x5373, 0x1, 0x0);
        gbc.writeMem(0xbf78, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x9a00, gbc.sp());
        EXPECT(0xbf7a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbf78));
        EXPECT(0x6a, gbc.readMem(0xbf79));
        // CB 6A 01A0
        gbc.setState(0xa238, 0xe281, 0x2f40, 0xdc03, 0x1e99, 0xc7cd, 0x0, 0x0);
        gbc.writeMem(0xa238, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0xe281, gbc.sp());
        EXPECT(0xa23a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa238));
        EXPECT(0x6a, gbc.readMem(0xa239));
        // CB 6A 01A1
        gbc.setState(0x8c9, 0x8f33, 0x6fa0, 0x8eef, 0xca1, 0x1ffc, 0x0, 0x0);
        gbc.writeMem(0x8c9, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x8f33, gbc.sp());
        EXPECT(0x8cb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 6A 01A2
        gbc.setState(0x7971, 0x1152, 0xb100, 0x2a56, 0x6073, 0x6d80, 0x0, 0x1);
        gbc.writeMem(0x7971, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x1152, gbc.sp());
        EXPECT(0x7973, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 6A 01A3
        gbc.setState(0x9512, 0x4ef8, 0x5530, 0x8b97, 0x7f8b, 0x69c8, 0x1, 0x0);
        gbc.writeMem(0x9512, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x4ef8, gbc.sp());
        EXPECT(0x9514, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9512));
        EXPECT(0x6a, gbc.readMem(0x9513));
        // CB 6A 01A4
        gbc.setState(0xb81a, 0xe97f, 0x8be0, 0x105d, 0x10c, 0xc592, 0x1, 0x1);
        gbc.writeMem(0xb81a, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0xe97f, gbc.sp());
        EXPECT(0xb81c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb81a));
        EXPECT(0x6a, gbc.readMem(0xb81b));
        // CB 6A 01A5
        gbc.setState(0x3434, 0x6811, 0x8370, 0x6981, 0x3708, 0xe6fe, 0x0, 0x1);
        gbc.writeMem(0x3434, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x6811, gbc.sp());
        EXPECT(0x3436, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6A 01A6
        gbc.setState(0xc70b, 0x99be, 0x2ea0, 0x792f, 0x6123, 0x4cd6, 0x1, 0x1);
        gbc.writeMem(0xc70b, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x99be, gbc.sp());
        EXPECT(0xc70d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc70b));
        EXPECT(0x6a, gbc.readMem(0xc70c));
        // CB 6A 01A7
        gbc.setState(0x74e1, 0x8ccf, 0x9160, 0x1774, 0x2ba8, 0x5f59, 0x0, 0x1);
        gbc.writeMem(0x74e1, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x8ccf, gbc.sp());
        EXPECT(0x74e3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 6A 01A8
        gbc.setState(0x7c5a, 0x76a0, 0x7850, 0x579b, 0x995c, 0x7528, 0x0, 0x0);
        gbc.writeMem(0x7c5a, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x76a0, gbc.sp());
        EXPECT(0x7c5c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6A 01AA
        gbc.setState(0xe15d, 0xb65d, 0xbb10, 0x63eb, 0x899a, 0x86ca, 0x1, 0x0);
        gbc.writeMem(0xe15d, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0xb65d, gbc.sp());
        EXPECT(0xe15f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe15d));
        EXPECT(0x6a, gbc.readMem(0xe15e));
        // CB 6A 01AB
        gbc.setState(0xa40c, 0xdee6, 0xe450, 0x338d, 0xb528, 0xe526, 0x0, 0x1);
        gbc.writeMem(0xa40c, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0xdee6, gbc.sp());
        EXPECT(0xa40e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa40c));
        EXPECT(0x6a, gbc.readMem(0xa40d));
        // CB 6A 01AC
        gbc.setState(0x6148, 0x5ddf, 0x6bf0, 0xc505, 0x547, 0xbb96, 0x0, 0x1);
        gbc.writeMem(0x6148, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x5ddf, gbc.sp());
        EXPECT(0x614a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6A 01AD
        gbc.setState(0xbaba, 0xf2a4, 0xe8f0, 0xb66f, 0x9c82, 0xfa4b, 0x0, 0x1);
        gbc.writeMem(0xbaba, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0xf2a4, gbc.sp());
        EXPECT(0xbabc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbaba));
        EXPECT(0x6a, gbc.readMem(0xbabb));
        // CB 6A 01AE
        gbc.setState(0xad0, 0x757f, 0xbd60, 0x157a, 0xa519, 0x1ec, 0x1, 0x1);
        gbc.writeMem(0xad0, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x757f, gbc.sp());
        EXPECT(0xad2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 6A 01B0
        gbc.setState(0xd2ce, 0x5a2, 0x18e0, 0x1f8, 0xe5a, 0x3a0, 0x1, 0x1);
        gbc.writeMem(0xd2ce, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x5a2, gbc.sp());
        EXPECT(0xd2d0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd2ce));
        EXPECT(0x6a, gbc.readMem(0xd2cf));
        // CB 6A 01B1
        gbc.setState(0xb280, 0xae1e, 0xc00, 0x9038, 0xe126, 0xcbe7, 0x1, 0x1);
        gbc.writeMem(0xb280, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0xae1e, gbc.sp());
        EXPECT(0xb282, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb280));
        EXPECT(0x6a, gbc.readMem(0xb281));
        // CB 6A 01B2
        gbc.setState(0x6bb4, 0xe2f8, 0xebc0, 0xfe18, 0x285b, 0x7ece, 0x1, 0x1);
        gbc.writeMem(0x6bb4, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0xe2f8, gbc.sp());
        EXPECT(0x6bb6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 6A 01B3
        gbc.setState(0xd9fe, 0xdbff, 0xd840, 0xcebc, 0x4cd6, 0x5f1e, 0x1, 0x0);
        gbc.writeMem(0xd9fe, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0xdbff, gbc.sp());
        EXPECT(0xda00, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd9fe));
        EXPECT(0x6a, gbc.readMem(0xd9ff));
        // CB 6A 01B4
        gbc.setState(0xb54d, 0xdb62, 0x5be0, 0x4425, 0xf389, 0x91bc, 0x0, 0x1);
        gbc.writeMem(0xb54d, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0xdb62, gbc.sp());
        EXPECT(0xb54f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb54d));
        EXPECT(0x6a, gbc.readMem(0xb54e));
        // CB 6A 01B5
        gbc.setState(0xcf34, 0x8f35, 0x2e40, 0xb443, 0x2de3, 0x5157, 0x1, 0x1);
        gbc.writeMem(0xcf34, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x8f35, gbc.sp());
        EXPECT(0xcf36, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcf34));
        EXPECT(0x6a, gbc.readMem(0xcf35));
        // CB 6A 01B6
        gbc.setState(0x7923, 0x41b6, 0xb800, 0x7c6, 0xace5, 0xe8d8, 0x0, 0x1);
        gbc.writeMem(0x7923, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x41b6, gbc.sp());
        EXPECT(0x7925, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 6A 01B7
        gbc.setState(0xe66c, 0x8b41, 0x8c50, 0xc41, 0x79a5, 0x14b9, 0x1, 0x0);
        gbc.writeMem(0xe66c, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x8b41, gbc.sp());
        EXPECT(0xe66e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe66c));
        EXPECT(0x6a, gbc.readMem(0xe66d));
        // CB 6A 01B8
        gbc.setState(0xef2e, 0x7238, 0x8a90, 0xfe49, 0xd9a6, 0xa5fe, 0x0, 0x1);
        gbc.writeMem(0xef2e, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x7238, gbc.sp());
        EXPECT(0xef30, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xef2e));
        EXPECT(0x6a, gbc.readMem(0xef2f));
        // CB 6A 01B9
        gbc.setState(0x8e11, 0x10ae, 0xf8c0, 0xbc5e, 0x1682, 0xadea, 0x0, 0x1);
        gbc.writeMem(0x8e11, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x10ae, gbc.sp());
        EXPECT(0x8e13, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8e11));
        EXPECT(0x6a, gbc.readMem(0x8e12));
        // CB 6A 01BA
        gbc.setState(0x67dc, 0x601a, 0xd70, 0x1f56, 0x8c94, 0x786e, 0x0, 0x1);
        gbc.writeMem(0x67dc, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x601a, gbc.sp());
        EXPECT(0x67de, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6A 01BB
        gbc.setState(0x2587, 0x189a, 0x20c0, 0x680f, 0x16e5, 0x2b55, 0x0, 0x1);
        gbc.writeMem(0x2587, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x189a, gbc.sp());
        EXPECT(0x2589, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 6A 01BC
        gbc.setState(0xbf25, 0xf72e, 0xee60, 0x6160, 0xebfc, 0xbbf4, 0x0, 0x1);
        gbc.writeMem(0xbf25, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0xf72e, gbc.sp());
        EXPECT(0xbf27, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbf25));
        EXPECT(0x6a, gbc.readMem(0xbf26));
        // CB 6A 01BD
        gbc.setState(0x470, 0xa194, 0x48c0, 0x99e1, 0x5e10, 0xf24c, 0x0, 0x0);
        gbc.writeMem(0x470, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0xa194, gbc.sp());
        EXPECT(0x472, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 6A 01BE
        gbc.setState(0xe112, 0xc1eb, 0x5150, 0xe036, 0xa668, 0xc506, 0x0, 0x0);
        gbc.writeMem(0xe112, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0xc1eb, gbc.sp());
        EXPECT(0xe114, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe112));
        EXPECT(0x6a, gbc.readMem(0xe113));
        // CB 6A 01BF
        gbc.setState(0xb10, 0xf2b2, 0x1000, 0x3472, 0x6335, 0x682f, 0x1, 0x0);
        gbc.writeMem(0xb10, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0xf2b2, gbc.sp());
        EXPECT(0xb12, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 6A 01C0
        gbc.setState(0xc1, 0xf06b, 0xe1c0, 0xb55c, 0x46fc, 0x7283, 0x0, 0x1);
        gbc.writeMem(0xc1, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0xf06b, gbc.sp());
        EXPECT(0xc3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 6A 01C1
        gbc.setState(0x2a84, 0xd88a, 0x2670, 0xe57e, 0xaa3b, 0xb2fd, 0x1, 0x1);
        gbc.writeMem(0x2a84, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0xd88a, gbc.sp());
        EXPECT(0x2a86, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6A 01C2
        gbc.setState(0xc555, 0xb317, 0x980, 0x837c, 0x7bed, 0xfeb5, 0x0, 0x1);
        gbc.writeMem(0xc555, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0xb317, gbc.sp());
        EXPECT(0xc557, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc555));
        EXPECT(0x6a, gbc.readMem(0xc556));
        // CB 6A 01C3
        gbc.setState(0x6b1e, 0xd563, 0x5dd0, 0xe13, 0x7e2a, 0x262a, 0x1, 0x1);
        gbc.writeMem(0x6b1e, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0xd563, gbc.sp());
        EXPECT(0x6b20, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6A 01C5
        gbc.setState(0x7c37, 0xf1e8, 0x1830, 0x76f0, 0x107a, 0x3200, 0x0, 0x0);
        gbc.writeMem(0x7c37, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0xf1e8, gbc.sp());
        EXPECT(0x7c39, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6A 01C6
        gbc.setState(0xefac, 0xef61, 0xe2e0, 0x3ec6, 0x67c1, 0x95e9, 0x1, 0x1);
        gbc.writeMem(0xefac, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0xef61, gbc.sp());
        EXPECT(0xefae, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xefac));
        EXPECT(0x6a, gbc.readMem(0xefad));
        // CB 6A 01C7
        gbc.setState(0x75c0, 0x982c, 0xc740, 0x7390, 0xece3, 0xc3dc, 0x1, 0x1);
        gbc.writeMem(0x75c0, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x982c, gbc.sp());
        EXPECT(0x75c2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 6A 01C8
        gbc.setState(0x4efa, 0x6b3c, 0xc230, 0x6f90, 0x4c22, 0xa44d, 0x0, 0x1);
        gbc.writeMem(0x4efa, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x6b3c, gbc.sp());
        EXPECT(0x4efc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6A 01C9
        gbc.setState(0xa816, 0xf6b9, 0xe9b0, 0xb9b8, 0xd645, 0xd103, 0x1, 0x1);
        gbc.writeMem(0xa816, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0xf6b9, gbc.sp());
        EXPECT(0xa818, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa816));
        EXPECT(0x6a, gbc.readMem(0xa817));
        // CB 6A 01CA
        gbc.setState(0xbff1, 0x67a, 0xf9d0, 0xc595, 0x4661, 0x4d12, 0x0, 0x0);
        gbc.writeMem(0xbff1, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x67a, gbc.sp());
        EXPECT(0xbff3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbff1));
        EXPECT(0x6a, gbc.readMem(0xbff2));
        // CB 6A 01CB
        gbc.setState(0x76a9, 0xbb42, 0x3340, 0x860d, 0x61a8, 0xcce, 0x0, 0x1);
        gbc.writeMem(0x76a9, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0xbb42, gbc.sp());
        EXPECT(0x76ab, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 6A 01CC
        gbc.setState(0x43ce, 0xc81, 0x8ce0, 0x701e, 0xcf31, 0xf0c3, 0x0, 0x1);
        gbc.writeMem(0x43ce, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0xc81, gbc.sp());
        EXPECT(0x43d0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 6A 01CE
        gbc.setState(0x6afe, 0x872b, 0x8960, 0xde57, 0xf611, 0x80a1, 0x1, 0x1);
        gbc.writeMem(0x6afe, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x872b, gbc.sp());
        EXPECT(0x6b00, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 6A 01CF
        gbc.setState(0xb9a2, 0x7e29, 0x6650, 0xde36, 0x6a92, 0xe49e, 0x1, 0x0);
        gbc.writeMem(0xb9a2, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x7e29, gbc.sp());
        EXPECT(0xb9a4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb9a2));
        EXPECT(0x6a, gbc.readMem(0xb9a3));
        // CB 6A 01D0
        gbc.setState(0x8b7f, 0xc0f9, 0x15f0, 0xb333, 0xff9b, 0x3816, 0x0, 0x0);
        gbc.writeMem(0x8b7f, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0xc0f9, gbc.sp());
        EXPECT(0x8b81, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8b7f));
        EXPECT(0x6a, gbc.readMem(0x8b80));
        // CB 6A 01D1
        gbc.setState(0x7a0d, 0xca19, 0x8dd0, 0x77ad, 0x17ce, 0x8c6b, 0x0, 0x1);
        gbc.writeMem(0x7a0d, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0xca19, gbc.sp());
        EXPECT(0x7a0f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6A 01D2
        gbc.setState(0x4bc2, 0x5ee7, 0x2120, 0x2f22, 0x32b7, 0xd28e, 0x0, 0x0);
        gbc.writeMem(0x4bc2, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x5ee7, gbc.sp());
        EXPECT(0x4bc4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 6A 01D3
        gbc.setState(0x93f, 0x9a6, 0xd8e0, 0xd5e6, 0xcdd6, 0x4807, 0x1, 0x0);
        gbc.writeMem(0x93f, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x9a6, gbc.sp());
        EXPECT(0x941, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 6A 01D4
        gbc.setState(0x6dfd, 0xa904, 0x6480, 0x317a, 0x8e7d, 0x8223, 0x1, 0x0);
        gbc.writeMem(0x6dfd, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0xa904, gbc.sp());
        EXPECT(0x6dff, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 6A 01D5
        gbc.setState(0xb749, 0xee7d, 0x4c20, 0x13d, 0x6b81, 0x46a1, 0x1, 0x0);
        gbc.writeMem(0xb749, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0xee7d, gbc.sp());
        EXPECT(0xb74b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb749));
        EXPECT(0x6a, gbc.readMem(0xb74a));
        // CB 6A 01D6
        gbc.setState(0x2841, 0xa3d6, 0xffd0, 0x2940, 0x6ce0, 0x52bc, 0x0, 0x1);
        gbc.writeMem(0x2841, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0xa3d6, gbc.sp());
        EXPECT(0x2843, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6A 01D7
        gbc.setState(0xe687, 0x5fb2, 0x48f0, 0x4169, 0x1bdd, 0x4fbc, 0x1, 0x1);
        gbc.writeMem(0xe687, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x5fb2, gbc.sp());
        EXPECT(0xe689, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe687));
        EXPECT(0x6a, gbc.readMem(0xe688));
        // CB 6A 01D8
        gbc.setState(0x9576, 0x1b1f, 0xb520, 0x9bc8, 0xdae2, 0x8563, 0x1, 0x1);
        gbc.writeMem(0x9576, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x1b1f, gbc.sp());
        EXPECT(0x9578, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9576));
        EXPECT(0x6a, gbc.readMem(0x9577));
        // CB 6A 01D9
        gbc.setState(0x3752, 0xf172, 0x93f0, 0x6940, 0xef0e, 0xcd86, 0x0, 0x0);
        gbc.writeMem(0x3752, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0xf172, gbc.sp());
        EXPECT(0x3754, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6A 01DB
        gbc.setState(0x185b, 0x2aa1, 0xd950, 0x6857, 0x7150, 0x30bb, 0x1, 0x0);
        gbc.writeMem(0x185b, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x2aa1, gbc.sp());
        EXPECT(0x185d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6A 01DC
        gbc.setState(0x7f89, 0xab1f, 0x8d30, 0x7ad7, 0xa697, 0x7913, 0x1, 0x1);
        gbc.writeMem(0x7f89, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0xab1f, gbc.sp());
        EXPECT(0x7f8b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6A 01DD
        gbc.setState(0x4229, 0x3e7a, 0x5390, 0xc1e4, 0x6cb5, 0x7497, 0x0, 0x0);
        gbc.writeMem(0x4229, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0x3e7a, gbc.sp());
        EXPECT(0x422b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6A 01DE
        gbc.setState(0xc674, 0xd8ff, 0xa630, 0x5fc9, 0xc320, 0x1ea4, 0x1, 0x1);
        gbc.writeMem(0xc674, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0xd8ff, gbc.sp());
        EXPECT(0xc676, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc674));
        EXPECT(0x6a, gbc.readMem(0xc675));
        // CB 6A 01DF
        gbc.setState(0xd9d1, 0xe9d1, 0x1570, 0xddf2, 0x63f4, 0x6bfe, 0x0, 0x0);
        gbc.writeMem(0xd9d1, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0xe9d1, gbc.sp());
        EXPECT(0xd9d3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd9d1));
        EXPECT(0x6a, gbc.readMem(0xd9d2));
        // CB 6A 01E0
        gbc.setState(0xaddf, 0xc611, 0x9ee0, 0xe978, 0xad57, 0xfff0, 0x0, 0x1);
        gbc.writeMem(0xaddf, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0xc611, gbc.sp());
        EXPECT(0xade1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaddf));
        EXPECT(0x6a, gbc.readMem(0xade0));
        // CB 6A 01E1
        gbc.setState(0x9f45, 0xce1d, 0x2120, 0xefe4, 0x60f7, 0x941e, 0x1, 0x0);
        gbc.writeMem(0x9f45, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0xce1d, gbc.sp());
        EXPECT(0x9f47, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9f45));
        EXPECT(0x6a, gbc.readMem(0x9f46));
        // CB 6A 01E2
        gbc.setState(0x8fa5, 0x2869, 0x1d00, 0x6b73, 0x897a, 0x173f, 0x0, 0x1);
        gbc.writeMem(0x8fa5, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0x2869, gbc.sp());
        EXPECT(0x8fa7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8fa5));
        EXPECT(0x6a, gbc.readMem(0x8fa6));
        // CB 6A 01E3
        gbc.setState(0x8173, 0x488f, 0x70e0, 0x6016, 0xf7c0, 0x8e4a, 0x1, 0x0);
        gbc.writeMem(0x8173, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x488f, gbc.sp());
        EXPECT(0x8175, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8173));
        EXPECT(0x6a, gbc.readMem(0x8174));
        // CB 6A 01E4
        gbc.setState(0xceaa, 0xd132, 0x6160, 0x5b09, 0x6b1c, 0xbcec, 0x1, 0x0);
        gbc.writeMem(0xceaa, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0xd132, gbc.sp());
        EXPECT(0xceac, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xceaa));
        EXPECT(0x6a, gbc.readMem(0xceab));
        // CB 6A 01E5
        gbc.setState(0x2ec9, 0x7422, 0xf350, 0x5428, 0xb03d, 0x559c, 0x1, 0x0);
        gbc.writeMem(0x2ec9, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x7422, gbc.sp());
        EXPECT(0x2ecb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6A 01E6
        gbc.setState(0x23cd, 0x6a93, 0xdab0, 0x599c, 0x5887, 0x695a, 0x0, 0x0);
        gbc.writeMem(0x23cd, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x6a93, gbc.sp());
        EXPECT(0x23cf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6A 01E8
        gbc.setState(0x1977, 0x20dc, 0x9bf0, 0x9896, 0xb771, 0xab6f, 0x1, 0x0);
        gbc.writeMem(0x1977, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x20dc, gbc.sp());
        EXPECT(0x1979, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6A 01E9
        gbc.setState(0xe95, 0x1525, 0x55d0, 0x92a9, 0x38f0, 0x4c17, 0x1, 0x1);
        gbc.writeMem(0xe95, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x1525, gbc.sp());
        EXPECT(0xe97, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6A 01EA
        gbc.setState(0x576c, 0xe0cb, 0x1bc0, 0xe65f, 0xa700, 0x5944, 0x0, 0x1);
        gbc.writeMem(0x576c, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0xe0cb, gbc.sp());
        EXPECT(0x576e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 6A 01EB
        gbc.setState(0x6720, 0xdae3, 0xd410, 0xe194, 0xe446, 0xe448, 0x1, 0x1);
        gbc.writeMem(0x6720, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0xdae3, gbc.sp());
        EXPECT(0x6722, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6A 01EC
        gbc.setState(0xbd79, 0x9109, 0x5930, 0xb2ed, 0x9151, 0xa524, 0x1, 0x1);
        gbc.writeMem(0xbd79, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x9109, gbc.sp());
        EXPECT(0xbd7b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbd79));
        EXPECT(0x6a, gbc.readMem(0xbd7a));
        // CB 6A 01ED
        gbc.setState(0x5529, 0x12c, 0xc2d0, 0x1db1, 0xfec, 0x7f92, 0x0, 0x0);
        gbc.writeMem(0x5529, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x12c, gbc.sp());
        EXPECT(0x552b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6A 01EE
        gbc.setState(0x463f, 0xd3bf, 0x7670, 0x3b75, 0xb63e, 0x3e3f, 0x0, 0x0);
        gbc.writeMem(0x463f, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0xd3bf, gbc.sp());
        EXPECT(0x4641, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6A 01EF
        gbc.setState(0x23cc, 0x56db, 0xaa30, 0x6674, 0xb080, 0x1311, 0x1, 0x0);
        gbc.writeMem(0x23cc, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x56db, gbc.sp());
        EXPECT(0x23ce, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6A 01F0
        gbc.setState(0x2bd7, 0xd9af, 0x3fe0, 0x2d37, 0x26f3, 0xa3a6, 0x0, 0x1);
        gbc.writeMem(0x2bd7, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0xd9af, gbc.sp());
        EXPECT(0x2bd9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 6A 01F1
        gbc.setState(0x4d9, 0x87f8, 0x3d60, 0x77ae, 0x12d7, 0xda92, 0x1, 0x0);
        gbc.writeMem(0x4d9, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x87f8, gbc.sp());
        EXPECT(0x4db, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 6A 01F2
        gbc.setState(0x1f09, 0xd400, 0x39b0, 0x98f2, 0xadf9, 0x70c1, 0x1, 0x0);
        gbc.writeMem(0x1f09, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0xd400, gbc.sp());
        EXPECT(0x1f0b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6A 01F3
        gbc.setState(0x36e8, 0x691d, 0x2c0, 0xd33b, 0xcd01, 0xca4, 0x0, 0x0);
        gbc.writeMem(0x36e8, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x691d, gbc.sp());
        EXPECT(0x36ea, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 6A 01F4
        gbc.setState(0x32a9, 0x7ef, 0x5570, 0x3782, 0x18e0, 0xb44d, 0x0, 0x1);
        gbc.writeMem(0x32a9, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x7ef, gbc.sp());
        EXPECT(0x32ab, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6A 01F5
        gbc.setState(0xae6b, 0x555, 0xdf50, 0xc47f, 0xdf2a, 0x5a20, 0x1, 0x1);
        gbc.writeMem(0xae6b, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x555, gbc.sp());
        EXPECT(0xae6d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xae6b));
        EXPECT(0x6a, gbc.readMem(0xae6c));
        // CB 6A 01F6
        gbc.setState(0x1091, 0xf940, 0x7a40, 0x181a, 0xf150, 0x4bfd, 0x1, 0x1);
        gbc.writeMem(0x1091, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0xf940, gbc.sp());
        EXPECT(0x1093, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 6A 01F7
        gbc.setState(0x1ad3, 0xd60f, 0xbba0, 0xcfeb, 0xcf79, 0xeccd, 0x1, 0x0);
        gbc.writeMem(0x1ad3, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0xd60f, gbc.sp());
        EXPECT(0x1ad5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 6A 01F8
        gbc.setState(0x42f7, 0xd62e, 0x16d0, 0x94ff, 0x9dcc, 0x8f63, 0x1, 0x1);
        gbc.writeMem(0x42f7, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0xd62e, gbc.sp());
        EXPECT(0x42f9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6A 01F9
        gbc.setState(0x4257, 0x75f, 0xe3f0, 0xb67d, 0x8481, 0x4028, 0x1, 0x0);
        gbc.writeMem(0x4257, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x75f, gbc.sp());
        EXPECT(0x4259, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6A 01FA
        gbc.setState(0x87e9, 0xbc60, 0xdf60, 0x7401, 0xa6d3, 0x2b20, 0x1, 0x1);
        gbc.writeMem(0x87e9, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0xbc60, gbc.sp());
        EXPECT(0x87eb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x87e9));
        EXPECT(0x6a, gbc.readMem(0x87ea));
        // CB 6A 01FB
        gbc.setState(0xed19, 0x2393, 0xf600, 0x2e04, 0x2af9, 0xd6c1, 0x1, 0x1);
        gbc.writeMem(0xed19, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x2393, gbc.sp());
        EXPECT(0xed1b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xed19));
        EXPECT(0x6a, gbc.readMem(0xed1a));
        // CB 6A 01FC
        gbc.setState(0xe14, 0x44ad, 0x6450, 0x6eb3, 0xb, 0x48e0, 0x1, 0x1);
        gbc.writeMem(0xe14, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x44ad, gbc.sp());
        EXPECT(0xe16, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6A 01FD
        gbc.setState(0x2e06, 0x74b5, 0x670, 0xa2b0, 0xbdff, 0xe0c, 0x1, 0x0);
        gbc.writeMem(0x2e06, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x74b5, gbc.sp());
        EXPECT(0x2e08, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6A 01FE
        gbc.setState(0x3042, 0x1cf7, 0xec80, 0x4941, 0x2f93, 0xc09, 0x1, 0x0);
        gbc.writeMem(0x3042, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x1cf7, gbc.sp());
        EXPECT(0x3044, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 6A 01FF
        gbc.setState(0x4a05, 0x8050, 0x3ea0, 0xc98, 0xab33, 0xd9ec, 0x0, 0x1);
        gbc.writeMem(0x4a05, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x8050, gbc.sp());
        EXPECT(0x4a07, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 6A 0200
        gbc.setState(0x7982, 0x4628, 0x5420, 0xce5c, 0xf03c, 0x4580, 0x1, 0x1);
        gbc.writeMem(0x7982, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x4628, gbc.sp());
        EXPECT(0x7984, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 6A 0201
        gbc.setState(0xa012, 0x63fe, 0x9670, 0x61ab, 0xde05, 0xf2e, 0x0, 0x1);
        gbc.writeMem(0xa012, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x63fe, gbc.sp());
        EXPECT(0xa014, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa012));
        EXPECT(0x6a, gbc.readMem(0xa013));
        // CB 6A 0203
        gbc.setState(0xdceb, 0x4cee, 0x39c0, 0x187, 0xa899, 0x9bad, 0x1, 0x0);
        gbc.writeMem(0xdceb, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x4cee, gbc.sp());
        EXPECT(0xdced, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdceb));
        EXPECT(0x6a, gbc.readMem(0xdcec));
        // CB 6A 0204
        gbc.setState(0x94f4, 0xf678, 0xa80, 0xdae3, 0x5fee, 0xfdfe, 0x1, 0x0);
        gbc.writeMem(0x94f4, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0xf678, gbc.sp());
        EXPECT(0x94f6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x94f4));
        EXPECT(0x6a, gbc.readMem(0x94f5));
        // CB 6A 0205
        gbc.setState(0xad3f, 0x13a9, 0x5f60, 0x871f, 0x84a3, 0x8bf0, 0x1, 0x1);
        gbc.writeMem(0xad3f, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x13a9, gbc.sp());
        EXPECT(0xad41, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xad3f));
        EXPECT(0x6a, gbc.readMem(0xad40));
        // CB 6A 0206
        gbc.setState(0x3500, 0xa010, 0x9f30, 0x5a59, 0xfeb7, 0x2851, 0x1, 0x1);
        gbc.writeMem(0x3500, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0xa010, gbc.sp());
        EXPECT(0x3502, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6A 0207
        gbc.setState(0xd378, 0x659a, 0xe400, 0x482b, 0x66dd, 0x226f, 0x1, 0x1);
        gbc.writeMem(0xd378, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x659a, gbc.sp());
        EXPECT(0xd37a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd378));
        EXPECT(0x6a, gbc.readMem(0xd379));
        // CB 6A 0208
        gbc.setState(0x957d, 0xfa5f, 0x7790, 0x148e, 0xe148, 0x5f2b, 0x0, 0x1);
        gbc.writeMem(0x957d, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0xfa5f, gbc.sp());
        EXPECT(0x957f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x957d));
        EXPECT(0x6a, gbc.readMem(0x957e));
        // CB 6A 0209
        gbc.setState(0x46e, 0x6a0c, 0xec0, 0x348c, 0x29f1, 0xf34b, 0x0, 0x1);
        gbc.writeMem(0x46e, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x6a0c, gbc.sp());
        EXPECT(0x470, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 6A 020A
        gbc.setState(0x1fb5, 0x2106, 0x6a60, 0x25f4, 0x4a78, 0xe3a6, 0x1, 0x1);
        gbc.writeMem(0x1fb5, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x2106, gbc.sp());
        EXPECT(0x1fb7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 6A 020B
        gbc.setState(0xc60c, 0x188c, 0x4c90, 0x2ec3, 0xb2c3, 0x1dd4, 0x1, 0x1);
        gbc.writeMem(0xc60c, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x188c, gbc.sp());
        EXPECT(0xc60e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc60c));
        EXPECT(0x6a, gbc.readMem(0xc60d));
        // CB 6A 020C
        gbc.setState(0x53e6, 0xf84b, 0xade0, 0x170e, 0x102a, 0x8259, 0x0, 0x1);
        gbc.writeMem(0x53e6, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0xf84b, gbc.sp());
        EXPECT(0x53e8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 6A 020D
        gbc.setState(0x67b0, 0x637a, 0x5590, 0xde19, 0x4de8, 0x5d44, 0x0, 0x1);
        gbc.writeMem(0x67b0, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x637a, gbc.sp());
        EXPECT(0x67b2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6A 020F
        gbc.setState(0x4622, 0xac0e, 0x3c10, 0x46ae, 0xec48, 0x896e, 0x1, 0x1);
        gbc.writeMem(0x4622, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0xac0e, gbc.sp());
        EXPECT(0x4624, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6A 0210
        gbc.setState(0x3a46, 0x4143, 0xf930, 0xfa24, 0xeb6b, 0x2f36, 0x0, 0x0);
        gbc.writeMem(0x3a46, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x4143, gbc.sp());
        EXPECT(0x3a48, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6A 0211
        gbc.setState(0xdc64, 0x7e44, 0xb430, 0x42a8, 0x2437, 0xe102, 0x0, 0x0);
        gbc.writeMem(0xdc64, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x7e44, gbc.sp());
        EXPECT(0xdc66, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdc64));
        EXPECT(0x6a, gbc.readMem(0xdc65));
        // CB 6A 0212
        gbc.setState(0x161e, 0xcc9d, 0x3090, 0xf615, 0xf913, 0xad48, 0x0, 0x0);
        gbc.writeMem(0x161e, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0xcc9d, gbc.sp());
        EXPECT(0x1620, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6A 0213
        gbc.setState(0x15ae, 0xd0fb, 0x5ff0, 0x87bd, 0x6d4f, 0x512, 0x0, 0x0);
        gbc.writeMem(0x15ae, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0xd0fb, gbc.sp());
        EXPECT(0x15b0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6A 0214
        gbc.setState(0x3473, 0x581c, 0xa810, 0xf2c6, 0xc5ac, 0xba4c, 0x0, 0x0);
        gbc.writeMem(0x3473, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x581c, gbc.sp());
        EXPECT(0x3475, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6A 0215
        gbc.setState(0x9233, 0x61d9, 0xd280, 0xe523, 0xf6bd, 0x9751, 0x1, 0x1);
        gbc.writeMem(0x9233, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x61d9, gbc.sp());
        EXPECT(0x9235, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9233));
        EXPECT(0x6a, gbc.readMem(0x9234));
        // CB 6A 0216
        gbc.setState(0x21d4, 0x2172, 0x57f0, 0x2f8, 0xae56, 0x17e7, 0x0, 0x1);
        gbc.writeMem(0x21d4, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x2172, gbc.sp());
        EXPECT(0x21d6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6A 0217
        gbc.setState(0xcf2f, 0x83a9, 0x6330, 0xdb76, 0xfae0, 0xaebc, 0x1, 0x1);
        gbc.writeMem(0xcf2f, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x83a9, gbc.sp());
        EXPECT(0xcf31, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcf2f));
        EXPECT(0x6a, gbc.readMem(0xcf30));
        // CB 6A 0218
        gbc.setState(0x8a45, 0xe2dd, 0xa2c0, 0x4d60, 0x1ef7, 0x3097, 0x0, 0x1);
        gbc.writeMem(0x8a45, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0xe2dd, gbc.sp());
        EXPECT(0x8a47, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8a45));
        EXPECT(0x6a, gbc.readMem(0x8a46));
        // CB 6A 0219
        gbc.setState(0xb17c, 0x1416, 0x6290, 0xce50, 0x70d2, 0x8d14, 0x0, 0x0);
        gbc.writeMem(0xb17c, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x1416, gbc.sp());
        EXPECT(0xb17e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb17c));
        EXPECT(0x6a, gbc.readMem(0xb17d));
        // CB 6A 021A
        gbc.setState(0xa946, 0xeb2, 0xa360, 0x9b6a, 0xc1c8, 0x3053, 0x1, 0x1);
        gbc.writeMem(0xa946, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0xeb2, gbc.sp());
        EXPECT(0xa948, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa946));
        EXPECT(0x6a, gbc.readMem(0xa947));
        // CB 6A 021B
        gbc.setState(0x305a, 0x7dc5, 0x20d0, 0x80ce, 0xc74c, 0x106e, 0x1, 0x0);
        gbc.writeMem(0x305a, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x7dc5, gbc.sp());
        EXPECT(0x305c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6A 021C
        gbc.setState(0x42ed, 0x2579, 0xf970, 0x6026, 0x9bde, 0xe6a5, 0x0, 0x0);
        gbc.writeMem(0x42ed, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x2579, gbc.sp());
        EXPECT(0x42ef, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6A 021D
        gbc.setState(0x1947, 0x26fc, 0x3c40, 0xe27a, 0x9f4b, 0x275c, 0x1, 0x1);
        gbc.writeMem(0x1947, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x26fc, gbc.sp());
        EXPECT(0x1949, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 6A 021E
        gbc.setState(0x59ff, 0x39e2, 0x3490, 0x9e6c, 0xd5ad, 0x9014, 0x0, 0x1);
        gbc.writeMem(0x59ff, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x39e2, gbc.sp());
        EXPECT(0x5a01, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6A 021F
        gbc.setState(0xa5b7, 0x6447, 0x3e80, 0xca92, 0x6581, 0xade8, 0x1, 0x0);
        gbc.writeMem(0xa5b7, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x6447, gbc.sp());
        EXPECT(0xa5b9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa5b7));
        EXPECT(0x6a, gbc.readMem(0xa5b8));
        // CB 6A 0220
        gbc.setState(0x3ff7, 0x3b52, 0xcf50, 0xb96b, 0xa4ae, 0xe399, 0x0, 0x0);
        gbc.writeMem(0x3ff7, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x3b52, gbc.sp());
        EXPECT(0x3ff9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6A 0221
        gbc.setState(0x946a, 0x1d04, 0x94f0, 0x276c, 0x96ec, 0x87d2, 0x1, 0x0);
        gbc.writeMem(0x946a, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x1d04, gbc.sp());
        EXPECT(0x946c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x946a));
        EXPECT(0x6a, gbc.readMem(0x946b));
        // CB 6A 0222
        gbc.setState(0x8c37, 0xddb, 0xd4e0, 0xe66b, 0xf541, 0x28f, 0x0, 0x1);
        gbc.writeMem(0x8c37, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0xddb, gbc.sp());
        EXPECT(0x8c39, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8c37));
        EXPECT(0x6a, gbc.readMem(0x8c38));
        // CB 6A 0223
        gbc.setState(0xea53, 0xd622, 0xeaf0, 0x236e, 0xcb6f, 0x95fa, 0x1, 0x1);
        gbc.writeMem(0xea53, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0xd622, gbc.sp());
        EXPECT(0xea55, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xea53));
        EXPECT(0x6a, gbc.readMem(0xea54));
        // CB 6A 0224
        gbc.setState(0xbf82, 0xe3e2, 0xe940, 0xd9f8, 0x779c, 0x7020, 0x1, 0x0);
        gbc.writeMem(0xbf82, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0xe3e2, gbc.sp());
        EXPECT(0xbf84, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbf82));
        EXPECT(0x6a, gbc.readMem(0xbf83));
        // CB 6A 0225
        gbc.setState(0x1b18, 0xc030, 0x8d50, 0x466e, 0x3b2c, 0x46b8, 0x1, 0x1);
        gbc.writeMem(0x1b18, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0xc030, gbc.sp());
        EXPECT(0x1b1a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6A 0226
        gbc.setState(0x8122, 0x8da5, 0x6420, 0x17b2, 0xa886, 0xd84e, 0x0, 0x0);
        gbc.writeMem(0x8122, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x8da5, gbc.sp());
        EXPECT(0x8124, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8122));
        EXPECT(0x6a, gbc.readMem(0x8123));
        // CB 6A 0227
        gbc.setState(0x8ca0, 0xe344, 0xd2d0, 0x60f2, 0x3dd7, 0x41ab, 0x0, 0x1);
        gbc.writeMem(0x8ca0, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0xe344, gbc.sp());
        EXPECT(0x8ca2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8ca0));
        EXPECT(0x6a, gbc.readMem(0x8ca1));
        // CB 6A 0228
        gbc.setState(0x96bd, 0xe1c7, 0x16b0, 0xd995, 0x9099, 0x529e, 0x1, 0x1);
        gbc.writeMem(0x96bd, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0xe1c7, gbc.sp());
        EXPECT(0x96bf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x96bd));
        EXPECT(0x6a, gbc.readMem(0x96be));
        // CB 6A 0229
        gbc.setState(0x275f, 0x7c27, 0x35a0, 0xe919, 0xfc9, 0x75f3, 0x0, 0x1);
        gbc.writeMem(0x275f, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x7c27, gbc.sp());
        EXPECT(0x2761, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 6A 022A
        gbc.setState(0x3838, 0xaed2, 0xb770, 0xa8a6, 0xbf5f, 0x335e, 0x1, 0x1);
        gbc.writeMem(0x3838, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0xaed2, gbc.sp());
        EXPECT(0x383a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6A 022B
        gbc.setState(0xb33f, 0x7b53, 0x7b40, 0x31fd, 0xe5b4, 0xd42f, 0x0, 0x0);
        gbc.writeMem(0xb33f, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x7b53, gbc.sp());
        EXPECT(0xb341, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb33f));
        EXPECT(0x6a, gbc.readMem(0xb340));
        // CB 6A 022C
        gbc.setState(0x1b47, 0xd0c7, 0x8970, 0x8850, 0xb76c, 0x4de8, 0x1, 0x1);
        gbc.writeMem(0x1b47, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0xd0c7, gbc.sp());
        EXPECT(0x1b49, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6A 022D
        gbc.setState(0x3036, 0x28fd, 0xcdc0, 0x8efb, 0x5dbd, 0x852, 0x0, 0x0);
        gbc.writeMem(0x3036, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x28fd, gbc.sp());
        EXPECT(0x3038, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 6A 022E
        gbc.setState(0x3d83, 0xae62, 0xb020, 0xc241, 0xa33, 0xaff3, 0x1, 0x1);
        gbc.writeMem(0x3d83, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0xae62, gbc.sp());
        EXPECT(0x3d85, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 6A 022F
        gbc.setState(0x45a0, 0x34dc, 0x1760, 0xbef5, 0x2eb3, 0x5118, 0x1, 0x1);
        gbc.writeMem(0x45a0, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x34dc, gbc.sp());
        EXPECT(0x45a2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 6A 0231
        gbc.setState(0x1af9, 0xc4d3, 0xe410, 0xb779, 0xd91e, 0xe5f7, 0x1, 0x0);
        gbc.writeMem(0x1af9, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0xc4d3, gbc.sp());
        EXPECT(0x1afb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6A 0232
        gbc.setState(0xc258, 0x698, 0xdb40, 0xa76c, 0xe452, 0x1bf4, 0x1, 0x1);
        gbc.writeMem(0xc258, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x698, gbc.sp());
        EXPECT(0xc25a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc258));
        EXPECT(0x6a, gbc.readMem(0xc259));
        // CB 6A 0233
        gbc.setState(0xd320, 0xe400, 0xd9c0, 0xa318, 0xde01, 0xdbee, 0x0, 0x0);
        gbc.writeMem(0xd320, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0xe400, gbc.sp());
        EXPECT(0xd322, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd320));
        EXPECT(0x6a, gbc.readMem(0xd321));
        // CB 6A 0234
        gbc.setState(0xb3a5, 0x8f58, 0xc550, 0xac40, 0x26de, 0x35e, 0x0, 0x0);
        gbc.writeMem(0xb3a5, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x8f58, gbc.sp());
        EXPECT(0xb3a7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb3a5));
        EXPECT(0x6a, gbc.readMem(0xb3a6));
        // CB 6A 0235
        gbc.setState(0xc0d8, 0xda28, 0x2100, 0x2562, 0x895b, 0x1090, 0x0, 0x1);
        gbc.writeMem(0xc0d8, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0xda28, gbc.sp());
        EXPECT(0xc0da, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc0d8));
        EXPECT(0x6a, gbc.readMem(0xc0d9));
        // CB 6A 0236
        gbc.setState(0x470a, 0xbd16, 0x3760, 0x4910, 0x1d37, 0x7245, 0x0, 0x1);
        gbc.writeMem(0x470a, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0xbd16, gbc.sp());
        EXPECT(0x470c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 6A 0237
        gbc.setState(0x6c0b, 0x876f, 0xf1a0, 0x1e6, 0x1aec, 0x781a, 0x0, 0x1);
        gbc.writeMem(0x6c0b, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x876f, gbc.sp());
        EXPECT(0x6c0d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 6A 0238
        gbc.setState(0x856f, 0xd7d4, 0xbf60, 0x5fb3, 0xc40c, 0xe24d, 0x0, 0x0);
        gbc.writeMem(0x856f, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0xd7d4, gbc.sp());
        EXPECT(0x8571, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x856f));
        EXPECT(0x6a, gbc.readMem(0x8570));
        // CB 6A 0239
        gbc.setState(0xd360, 0x61d3, 0x70c0, 0xe06f, 0x8ca0, 0x862a, 0x0, 0x1);
        gbc.writeMem(0xd360, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x61d3, gbc.sp());
        EXPECT(0xd362, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd360));
        EXPECT(0x6a, gbc.readMem(0xd361));
        // CB 6A 023A
        gbc.setState(0xea3, 0x1ab6, 0x9700, 0x2f8a, 0xdacf, 0x8fe6, 0x1, 0x1);
        gbc.writeMem(0xea3, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x1ab6, gbc.sp());
        EXPECT(0xea5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 6A 023B
        gbc.setState(0x3fe6, 0x367d, 0x7680, 0x7a5a, 0xca25, 0x976, 0x1, 0x1);
        gbc.writeMem(0x3fe6, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x367d, gbc.sp());
        EXPECT(0x3fe8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 6A 023C
        gbc.setState(0x3e3, 0xd6b8, 0x22b0, 0x27be, 0xf124, 0x6891, 0x1, 0x1);
        gbc.writeMem(0x3e3, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0xd6b8, gbc.sp());
        EXPECT(0x3e5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6A 023D
        gbc.setState(0x3cf4, 0xc44d, 0x950, 0xa715, 0x9897, 0xa3c6, 0x0, 0x1);
        gbc.writeMem(0x3cf4, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0xc44d, gbc.sp());
        EXPECT(0x3cf6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6A 023E
        gbc.setState(0x28a5, 0x5355, 0x5c70, 0xdcb, 0x7247, 0x52b5, 0x0, 0x0);
        gbc.writeMem(0x28a5, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x5355, gbc.sp());
        EXPECT(0x28a7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6A 0240
        gbc.setState(0x5311, 0xe22e, 0x3fd0, 0xaf83, 0x13ba, 0xd6ad, 0x0, 0x0);
        gbc.writeMem(0x5311, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0xe22e, gbc.sp());
        EXPECT(0x5313, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6A 0241
        gbc.setState(0xa169, 0xeec4, 0x2440, 0x44af, 0x3147, 0xedc2, 0x0, 0x1);
        gbc.writeMem(0xa169, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0xeec4, gbc.sp());
        EXPECT(0xa16b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa169));
        EXPECT(0x6a, gbc.readMem(0xa16a));
        // CB 6A 0242
        gbc.setState(0xf39, 0x2dd5, 0x9df0, 0x2e05, 0x9320, 0xeea8, 0x0, 0x1);
        gbc.writeMem(0xf39, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x2dd5, gbc.sp());
        EXPECT(0xf3b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6A 0243
        gbc.setState(0x2f46, 0xed1b, 0xb830, 0xadba, 0xeeb4, 0xe26f, 0x0, 0x0);
        gbc.writeMem(0x2f46, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0xed1b, gbc.sp());
        EXPECT(0x2f48, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6A 0244
        gbc.setState(0x891e, 0xfe34, 0xabd0, 0xf5cf, 0x22dd, 0xe1e0, 0x0, 0x1);
        gbc.writeMem(0x891e, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0xfe34, gbc.sp());
        EXPECT(0x8920, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x891e));
        EXPECT(0x6a, gbc.readMem(0x891f));
        // CB 6A 0245
        gbc.setState(0xd6, 0xd869, 0x2cc0, 0x1024, 0x9782, 0x223b, 0x1, 0x1);
        gbc.writeMem(0xd6, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0xd869, gbc.sp());
        EXPECT(0xd8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 6A 0246
        gbc.setState(0x2d01, 0xdd68, 0xab40, 0xd0ce, 0x564c, 0x57c1, 0x0, 0x1);
        gbc.writeMem(0x2d01, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0xdd68, gbc.sp());
        EXPECT(0x2d03, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 6A 0247
        gbc.setState(0x647a, 0xc7e3, 0x8710, 0x5e90, 0xf894, 0x4eb5, 0x0, 0x0);
        gbc.writeMem(0x647a, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0xc7e3, gbc.sp());
        EXPECT(0x647c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6A 0248
        gbc.setState(0x84f5, 0xa51a, 0x13f0, 0x508e, 0xcd38, 0x81e1, 0x1, 0x1);
        gbc.writeMem(0x84f5, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0xa51a, gbc.sp());
        EXPECT(0x84f7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x84f5));
        EXPECT(0x6a, gbc.readMem(0x84f6));
        // CB 6A 0249
        gbc.setState(0x2f78, 0x9bca, 0x63b0, 0x37e2, 0x364b, 0x82a5, 0x1, 0x1);
        gbc.writeMem(0x2f78, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x9bca, gbc.sp());
        EXPECT(0x2f7a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6A 024A
        gbc.setState(0x7cac, 0x3185, 0xd5a0, 0x9fee, 0xa478, 0x33a0, 0x0, 0x1);
        gbc.writeMem(0x7cac, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x3185, gbc.sp());
        EXPECT(0x7cae, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 6A 024B
        gbc.setState(0x6822, 0x9db2, 0x1470, 0xaf61, 0xf0df, 0x7f12, 0x0, 0x0);
        gbc.writeMem(0x6822, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x9db2, gbc.sp());
        EXPECT(0x6824, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6A 024D
        gbc.setState(0x2531, 0x1541, 0x84c0, 0xb7a0, 0x111b, 0xfa5c, 0x0, 0x1);
        gbc.writeMem(0x2531, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x1541, gbc.sp());
        EXPECT(0x2533, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 6A 024E
        gbc.setState(0x80f3, 0xa79d, 0xeba0, 0xe86b, 0xcdc9, 0x1901, 0x1, 0x1);
        gbc.writeMem(0x80f3, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0xa79d, gbc.sp());
        EXPECT(0x80f5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x80f3));
        EXPECT(0x6a, gbc.readMem(0x80f4));
        // CB 6A 024F
        gbc.setState(0x3c63, 0x85f2, 0x2c90, 0xa0c9, 0x760b, 0xbdb4, 0x1, 0x0);
        gbc.writeMem(0x3c63, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x85f2, gbc.sp());
        EXPECT(0x3c65, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6A 0250
        gbc.setState(0x220, 0xd611, 0x50e0, 0x795e, 0x2d84, 0x55ff, 0x0, 0x0);
        gbc.writeMem(0x220, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0xd611, gbc.sp());
        EXPECT(0x222, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 6A 0251
        gbc.setState(0x604, 0x566, 0x9f00, 0xaa12, 0x8cab, 0x6e7e, 0x1, 0x0);
        gbc.writeMem(0x604, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0x566, gbc.sp());
        EXPECT(0x606, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 6A 0253
        gbc.setState(0x57e6, 0x9383, 0x9230, 0xc70f, 0x6748, 0xc0c3, 0x1, 0x0);
        gbc.writeMem(0x57e6, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x9383, gbc.sp());
        EXPECT(0x57e8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6A 0255
        gbc.setState(0xeeec, 0x9beb, 0xb960, 0x139, 0x4031, 0x8a5a, 0x1, 0x0);
        gbc.writeMem(0xeeec, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x9beb, gbc.sp());
        EXPECT(0xeeee, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeeec));
        EXPECT(0x6a, gbc.readMem(0xeeed));
        // CB 6A 0256
        gbc.setState(0x9a44, 0xff62, 0xa7a0, 0x5921, 0x8a48, 0xa5a3, 0x0, 0x1);
        gbc.writeMem(0x9a44, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0xff62, gbc.sp());
        EXPECT(0x9a46, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9a44));
        EXPECT(0x6a, gbc.readMem(0x9a45));
        // CB 6A 0257
        gbc.setState(0xaafa, 0xb7b8, 0xa480, 0x95bd, 0x2934, 0x2e6e, 0x1, 0x0);
        gbc.writeMem(0xaafa, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0xb7b8, gbc.sp());
        EXPECT(0xaafc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaafa));
        EXPECT(0x6a, gbc.readMem(0xaafb));
        // CB 6A 0258
        gbc.setState(0x685, 0xf130, 0x8e80, 0x8178, 0xf420, 0xefd9, 0x0, 0x1);
        gbc.writeMem(0x685, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0xf130, gbc.sp());
        EXPECT(0x687, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 6A 0259
        gbc.setState(0x7a6, 0xfd9f, 0xe50, 0xd50c, 0x75e1, 0xc199, 0x0, 0x0);
        gbc.writeMem(0x7a6, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0xfd9f, gbc.sp());
        EXPECT(0x7a8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6A 025A
        gbc.setState(0x3ccf, 0x8767, 0x3970, 0x6b1, 0xadee, 0x918, 0x0, 0x0);
        gbc.writeMem(0x3ccf, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x8767, gbc.sp());
        EXPECT(0x3cd1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6A 025C
        gbc.setState(0x8404, 0xa997, 0x80b0, 0xc07d, 0xddff, 0xe9a3, 0x0, 0x0);
        gbc.writeMem(0x8404, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0xa997, gbc.sp());
        EXPECT(0x8406, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8404));
        EXPECT(0x6a, gbc.readMem(0x8405));
        // CB 6A 025D
        gbc.setState(0xbfc, 0xc7e1, 0xb3c0, 0x3aa3, 0xb0ab, 0x6718, 0x1, 0x0);
        gbc.writeMem(0xbfc, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0xc7e1, gbc.sp());
        EXPECT(0xbfe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 6A 025E
        gbc.setState(0xcdb2, 0x6a59, 0xd3e0, 0xb62d, 0x69f8, 0x24e1, 0x0, 0x0);
        gbc.writeMem(0xcdb2, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0x6a59, gbc.sp());
        EXPECT(0xcdb4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcdb2));
        EXPECT(0x6a, gbc.readMem(0xcdb3));
        // CB 6A 025F
        gbc.setState(0x78a0, 0x8574, 0x3400, 0x5ad0, 0x90c4, 0x927d, 0x0, 0x0);
        gbc.writeMem(0x78a0, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x8574, gbc.sp());
        EXPECT(0x78a2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 6A 0262
        gbc.setState(0xcaa6, 0xe14c, 0xa1e0, 0xa449, 0x29a8, 0x3e5a, 0x1, 0x0);
        gbc.writeMem(0xcaa6, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0xe14c, gbc.sp());
        EXPECT(0xcaa8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcaa6));
        EXPECT(0x6a, gbc.readMem(0xcaa7));
        // CB 6A 0263
        gbc.setState(0x3da, 0x8112, 0x7fe0, 0x46ac, 0x207f, 0xdeb1, 0x0, 0x1);
        gbc.writeMem(0x3da, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x8112, gbc.sp());
        EXPECT(0x3dc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 6A 0264
        gbc.setState(0x9fda, 0xbd8e, 0xa2e0, 0xac75, 0x220d, 0xe8d3, 0x0, 0x0);
        gbc.writeMem(0x9fda, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0xbd8e, gbc.sp());
        EXPECT(0x9fdc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9fda));
        EXPECT(0x6a, gbc.readMem(0x9fdb));
        // CB 6A 0265
        gbc.setState(0x270, 0xc6f, 0xc050, 0xdc80, 0x1322, 0x7662, 0x1, 0x1);
        gbc.writeMem(0x270, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0xc6f, gbc.sp());
        EXPECT(0x272, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6A 0267
        gbc.setState(0x3f7, 0x6426, 0xc810, 0x3c81, 0xbc96, 0xb151, 0x0, 0x1);
        gbc.writeMem(0x3f7, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x6426, gbc.sp());
        EXPECT(0x3f9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6A 0268
        gbc.setState(0x2e7d, 0xf9a, 0xe6b0, 0x85d4, 0xde1e, 0x9176, 0x0, 0x0);
        gbc.writeMem(0x2e7d, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0xf9a, gbc.sp());
        EXPECT(0x2e7f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6A 026A
        gbc.setState(0xd698, 0x735c, 0x9f60, 0xaa93, 0x8400, 0xbfe6, 0x0, 0x0);
        gbc.writeMem(0xd698, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x735c, gbc.sp());
        EXPECT(0xd69a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd698));
        EXPECT(0x6a, gbc.readMem(0xd699));
        // CB 6A 026B
        gbc.setState(0xa597, 0x3597, 0x5500, 0xee7e, 0x2c61, 0x880, 0x0, 0x0);
        gbc.writeMem(0xa597, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x3597, gbc.sp());
        EXPECT(0xa599, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa597));
        EXPECT(0x6a, gbc.readMem(0xa598));
        // CB 6A 026C
        gbc.setState(0xbe42, 0x56b6, 0xae10, 0xe525, 0xd66b, 0x9186, 0x0, 0x1);
        gbc.writeMem(0xbe42, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x56b6, gbc.sp());
        EXPECT(0xbe44, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbe42));
        EXPECT(0x6a, gbc.readMem(0xbe43));
        // CB 6A 026D
        gbc.setState(0xb684, 0xf599, 0x1fd0, 0x9d16, 0x7b65, 0x9fe6, 0x0, 0x0);
        gbc.writeMem(0xb684, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0xf599, gbc.sp());
        EXPECT(0xb686, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb684));
        EXPECT(0x6a, gbc.readMem(0xb685));
        // CB 6A 026E
        gbc.setState(0xc39f, 0x5a9c, 0x9340, 0xe3e4, 0x4fb8, 0xa9c5, 0x0, 0x0);
        gbc.writeMem(0xc39f, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x5a9c, gbc.sp());
        EXPECT(0xc3a1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc39f));
        EXPECT(0x6a, gbc.readMem(0xc3a0));
        // CB 6A 026F
        gbc.setState(0x2cd6, 0xe1c, 0x4610, 0x90f4, 0x8076, 0x69b7, 0x1, 0x1);
        gbc.writeMem(0x2cd6, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0xe1c, gbc.sp());
        EXPECT(0x2cd8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6A 0270
        gbc.setState(0x4270, 0xf07b, 0xdd90, 0xbdee, 0xe009, 0x1d40, 0x1, 0x0);
        gbc.writeMem(0x4270, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0xf07b, gbc.sp());
        EXPECT(0x4272, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6A 0271
        gbc.setState(0x72e, 0x2f9d, 0x60b0, 0xd9a5, 0xbe92, 0xd57e, 0x0, 0x1);
        gbc.writeMem(0x72e, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0x2f9d, gbc.sp());
        EXPECT(0x730, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6A 0272
        gbc.setState(0xe20e, 0xdd99, 0x7620, 0x7a48, 0xf843, 0xeee5, 0x0, 0x1);
        gbc.writeMem(0xe20e, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0xdd99, gbc.sp());
        EXPECT(0xe210, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe20e));
        EXPECT(0x6a, gbc.readMem(0xe20f));
        // CB 6A 0273
        gbc.setState(0x50a4, 0xe726, 0xdc10, 0x9b5c, 0xe18d, 0x8988, 0x1, 0x1);
        gbc.writeMem(0x50a4, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0xe726, gbc.sp());
        EXPECT(0x50a6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6A 0274
        gbc.setState(0x4e05, 0x8076, 0x7be0, 0x2de1, 0x25e6, 0x145a, 0x0, 0x1);
        gbc.writeMem(0x4e05, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x8076, gbc.sp());
        EXPECT(0x4e07, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 6A 0275
        gbc.setState(0xc117, 0x6a97, 0xaea0, 0x8c90, 0x1dd, 0x7fb5, 0x0, 0x0);
        gbc.writeMem(0xc117, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x6a97, gbc.sp());
        EXPECT(0xc119, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc117));
        EXPECT(0x6a, gbc.readMem(0xc118));
        // CB 6A 0276
        gbc.setState(0xa0f7, 0x938d, 0xd940, 0xb052, 0x74d9, 0xa983, 0x0, 0x1);
        gbc.writeMem(0xa0f7, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x938d, gbc.sp());
        EXPECT(0xa0f9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa0f7));
        EXPECT(0x6a, gbc.readMem(0xa0f8));
        // CB 6A 0277
        gbc.setState(0x914e, 0xf5b4, 0x2140, 0x527e, 0x987d, 0xa5fc, 0x1, 0x1);
        gbc.writeMem(0x914e, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0xf5b4, gbc.sp());
        EXPECT(0x9150, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x914e));
        EXPECT(0x6a, gbc.readMem(0x914f));
        // CB 6A 0278
        gbc.setState(0xb156, 0x6cba, 0xc550, 0x1c7, 0x77b0, 0x2f47, 0x1, 0x0);
        gbc.writeMem(0xb156, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x6cba, gbc.sp());
        EXPECT(0xb158, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb156));
        EXPECT(0x6a, gbc.readMem(0xb157));
        // CB 6A 0279
        gbc.setState(0xbfc2, 0x72c9, 0xec70, 0x462f, 0xefbd, 0x2264, 0x1, 0x0);
        gbc.writeMem(0xbfc2, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x72c9, gbc.sp());
        EXPECT(0xbfc4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbfc2));
        EXPECT(0x6a, gbc.readMem(0xbfc3));
        // CB 6A 027A
        gbc.setState(0x2aa0, 0x2b6e, 0xcb00, 0x585b, 0xe6d3, 0x3f85, 0x0, 0x0);
        gbc.writeMem(0x2aa0, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x2b6e, gbc.sp());
        EXPECT(0x2aa2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 6A 027B
        gbc.setState(0xe779, 0x67d4, 0x88a0, 0x9be7, 0x53da, 0xce6d, 0x0, 0x0);
        gbc.writeMem(0xe779, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x67d4, gbc.sp());
        EXPECT(0xe77b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe779));
        EXPECT(0x6a, gbc.readMem(0xe77a));
        // CB 6A 027C
        gbc.setState(0x68e2, 0x446d, 0xe310, 0x946c, 0xa6e6, 0x5205, 0x0, 0x0);
        gbc.writeMem(0x68e2, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x446d, gbc.sp());
        EXPECT(0x68e4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6A 027D
        gbc.setState(0x93d6, 0x67ca, 0xb770, 0x70ad, 0x4a36, 0x31fe, 0x0, 0x1);
        gbc.writeMem(0x93d6, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x67ca, gbc.sp());
        EXPECT(0x93d8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x93d6));
        EXPECT(0x6a, gbc.readMem(0x93d7));
        // CB 6A 027F
        gbc.setState(0xddb8, 0x6d70, 0x4280, 0x31f6, 0x69a6, 0xdc9b, 0x1, 0x1);
        gbc.writeMem(0xddb8, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x6d70, gbc.sp());
        EXPECT(0xddba, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xddb8));
        EXPECT(0x6a, gbc.readMem(0xddb9));
        // CB 6A 0280
        gbc.setState(0xc71d, 0x4ba2, 0xc730, 0x5113, 0xc173, 0x3ae1, 0x1, 0x0);
        gbc.writeMem(0xc71d, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0x4ba2, gbc.sp());
        EXPECT(0xc71f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc71d));
        EXPECT(0x6a, gbc.readMem(0xc71e));
        // CB 6A 0281
        gbc.setState(0x8547, 0xd955, 0x35c0, 0x13b9, 0x589a, 0x13e7, 0x0, 0x0);
        gbc.writeMem(0x8547, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0xd955, gbc.sp());
        EXPECT(0x8549, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8547));
        EXPECT(0x6a, gbc.readMem(0x8548));
        // CB 6A 0282
        gbc.setState(0x793, 0x70bf, 0xa9a0, 0x9364, 0xd348, 0x10d6, 0x0, 0x1);
        gbc.writeMem(0x793, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x70bf, gbc.sp());
        EXPECT(0x795, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 6A 0283
        gbc.setState(0xee51, 0x830d, 0xada0, 0xebcd, 0xa87b, 0xf09, 0x1, 0x1);
        gbc.writeMem(0xee51, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x830d, gbc.sp());
        EXPECT(0xee53, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xee51));
        EXPECT(0x6a, gbc.readMem(0xee52));
        // CB 6A 0285
        gbc.setState(0x8f15, 0x8305, 0x5ac0, 0x97a7, 0x73e0, 0xad95, 0x0, 0x0);
        gbc.writeMem(0x8f15, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x8305, gbc.sp());
        EXPECT(0x8f17, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8f15));
        EXPECT(0x6a, gbc.readMem(0x8f16));
        // CB 6A 0286
        gbc.setState(0x7eaa, 0xa1f0, 0xe880, 0xfeb8, 0xed78, 0x84f3, 0x0, 0x1);
        gbc.writeMem(0x7eaa, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0xa1f0, gbc.sp());
        EXPECT(0x7eac, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 6A 0287
        gbc.setState(0x6f62, 0x7baf, 0xdd90, 0x2415, 0xf206, 0xa057, 0x0, 0x0);
        gbc.writeMem(0x6f62, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x7baf, gbc.sp());
        EXPECT(0x6f64, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6A 0288
        gbc.setState(0xd261, 0xd48, 0xce30, 0x2457, 0x300a, 0xea67, 0x1, 0x1);
        gbc.writeMem(0xd261, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0xd48, gbc.sp());
        EXPECT(0xd263, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd261));
        EXPECT(0x6a, gbc.readMem(0xd262));
        // CB 6A 0289
        gbc.setState(0xe558, 0xeec5, 0x9f60, 0x845a, 0x187c, 0x84ec, 0x0, 0x1);
        gbc.writeMem(0xe558, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0xeec5, gbc.sp());
        EXPECT(0xe55a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe558));
        EXPECT(0x6a, gbc.readMem(0xe559));
        // CB 6A 028A
        gbc.setState(0x5c42, 0x87a0, 0xa430, 0x34c, 0x946c, 0xa478, 0x0, 0x1);
        gbc.writeMem(0x5c42, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x87a0, gbc.sp());
        EXPECT(0x5c44, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6A 028B
        gbc.setState(0xb9fb, 0x8e2b, 0xd1c0, 0x1dd, 0xe641, 0x48af, 0x0, 0x1);
        gbc.writeMem(0xb9fb, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x8e2b, gbc.sp());
        EXPECT(0xb9fd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb9fb));
        EXPECT(0x6a, gbc.readMem(0xb9fc));
        // CB 6A 028C
        gbc.setState(0xd0b1, 0x20a8, 0xb760, 0x567e, 0xf930, 0x2c32, 0x0, 0x1);
        gbc.writeMem(0xd0b1, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x20a8, gbc.sp());
        EXPECT(0xd0b3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd0b1));
        EXPECT(0x6a, gbc.readMem(0xd0b2));
        // CB 6A 028D
        gbc.setState(0xd26d, 0xa5ee, 0x3600, 0xb299, 0x534a, 0x5954, 0x1, 0x1);
        gbc.writeMem(0xd26d, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0xa5ee, gbc.sp());
        EXPECT(0xd26f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd26d));
        EXPECT(0x6a, gbc.readMem(0xd26e));
        // CB 6A 028E
        gbc.setState(0x38c1, 0x5070, 0x9500, 0x9e8e, 0x89b8, 0x73a0, 0x1, 0x1);
        gbc.writeMem(0x38c1, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x5070, gbc.sp());
        EXPECT(0x38c3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 6A 028F
        gbc.setState(0xcacd, 0x71ab, 0x9730, 0x88fa, 0x6c56, 0xb73, 0x0, 0x0);
        gbc.writeMem(0xcacd, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x71ab, gbc.sp());
        EXPECT(0xcacf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcacd));
        EXPECT(0x6a, gbc.readMem(0xcace));
        // CB 6A 0290
        gbc.setState(0x20eb, 0xaf66, 0x6e0, 0x186, 0x801, 0x553f, 0x1, 0x1);
        gbc.writeMem(0x20eb, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0xaf66, gbc.sp());
        EXPECT(0x20ed, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 6A 0291
        gbc.setState(0xb15c, 0xa1f, 0xa280, 0xc30e, 0xe983, 0x1d36, 0x0, 0x1);
        gbc.writeMem(0xb15c, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0xa1f, gbc.sp());
        EXPECT(0xb15e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb15c));
        EXPECT(0x6a, gbc.readMem(0xb15d));
        // CB 6A 0292
        gbc.setState(0x1923, 0x2a26, 0xad80, 0xa675, 0x4fcd, 0xce94, 0x0, 0x0);
        gbc.writeMem(0x1923, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x2a26, gbc.sp());
        EXPECT(0x1925, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 6A 0293
        gbc.setState(0xbfc8, 0xa6ce, 0x7290, 0xdf22, 0xff04, 0x9232, 0x0, 0x1);
        gbc.writeMem(0xbfc8, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0xa6ce, gbc.sp());
        EXPECT(0xbfca, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbfc8));
        EXPECT(0x6a, gbc.readMem(0xbfc9));
        // CB 6A 0294
        gbc.setState(0x7a25, 0xd0b3, 0x5320, 0x7456, 0xb48f, 0xe962, 0x1, 0x0);
        gbc.writeMem(0x7a25, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0xd0b3, gbc.sp());
        EXPECT(0x7a27, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 6A 0295
        gbc.setState(0xa7ae, 0x9355, 0x2180, 0xd022, 0xc863, 0xa518, 0x0, 0x0);
        gbc.writeMem(0xa7ae, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x9355, gbc.sp());
        EXPECT(0xa7b0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa7ae));
        EXPECT(0x6a, gbc.readMem(0xa7af));
        // CB 6A 0296
        gbc.setState(0x483d, 0xcc2e, 0xbce0, 0xe3b4, 0x357a, 0x1633, 0x0, 0x0);
        gbc.writeMem(0x483d, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0xcc2e, gbc.sp());
        EXPECT(0x483f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 6A 0297
        gbc.setState(0x612, 0x4538, 0x940, 0x8947, 0x1cc1, 0x4933, 0x0, 0x1);
        gbc.writeMem(0x612, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x4538, gbc.sp());
        EXPECT(0x614, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 6A 0298
        gbc.setState(0x6aff, 0xb354, 0xcf10, 0xa14b, 0xbbf9, 0x59eb, 0x1, 0x0);
        gbc.writeMem(0x6aff, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0xb354, gbc.sp());
        EXPECT(0x6b01, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6A 0299
        gbc.setState(0xae63, 0x4df, 0x1a0, 0x110a, 0x7620, 0x2b84, 0x0, 0x1);
        gbc.writeMem(0xae63, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x4df, gbc.sp());
        EXPECT(0xae65, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xae63));
        EXPECT(0x6a, gbc.readMem(0xae64));
        // CB 6A 029A
        gbc.setState(0x5d29, 0x33f7, 0x1760, 0x6e5c, 0xdbcf, 0xedcf, 0x0, 0x0);
        gbc.writeMem(0x5d29, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x33f7, gbc.sp());
        EXPECT(0x5d2b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 6A 029B
        gbc.setState(0x9192, 0x73d1, 0x2340, 0x3e0b, 0xfc6a, 0x5e01, 0x1, 0x0);
        gbc.writeMem(0x9192, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x73d1, gbc.sp());
        EXPECT(0x9194, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9192));
        EXPECT(0x6a, gbc.readMem(0x9193));
        // CB 6A 029C
        gbc.setState(0x3afc, 0x4225, 0xfbb0, 0x93bd, 0xf67e, 0x5f2a, 0x1, 0x1);
        gbc.writeMem(0x3afc, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x4225, gbc.sp());
        EXPECT(0x3afe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6A 029D
        gbc.setState(0xb815, 0x1e9b, 0xfcc0, 0x7a28, 0x9307, 0x2eab, 0x1, 0x0);
        gbc.writeMem(0xb815, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x1e9b, gbc.sp());
        EXPECT(0xb817, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb815));
        EXPECT(0x6a, gbc.readMem(0xb816));
        // CB 6A 029E
        gbc.setState(0x6e33, 0x4b73, 0x2a10, 0x480b, 0xa64d, 0x3dc8, 0x0, 0x1);
        gbc.writeMem(0x6e33, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x4b73, gbc.sp());
        EXPECT(0x6e35, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6A 029F
        gbc.setState(0x342b, 0x435a, 0xf640, 0x930c, 0xdf8, 0x4dbe, 0x1, 0x1);
        gbc.writeMem(0x342b, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0x435a, gbc.sp());
        EXPECT(0x342d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 6A 02A0
        gbc.setState(0x26a2, 0x9bec, 0xeff0, 0xa588, 0xcf41, 0x5d77, 0x0, 0x0);
        gbc.writeMem(0x26a2, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x9bec, gbc.sp());
        EXPECT(0x26a4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6A 02A1
        gbc.setState(0x5f31, 0x8e5e, 0x3be0, 0xfaf9, 0x9b9f, 0xd12a, 0x1, 0x0);
        gbc.writeMem(0x5f31, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x8e5e, gbc.sp());
        EXPECT(0x5f33, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 6A 02A3
        gbc.setState(0x1f00, 0xa709, 0x320, 0x40fd, 0x116b, 0x9d86, 0x0, 0x0);
        gbc.writeMem(0x1f00, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0xa709, gbc.sp());
        EXPECT(0x1f02, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 6A 02A4
        gbc.setState(0x9556, 0x2ae, 0x2850, 0xff54, 0x44a6, 0x48a, 0x1, 0x1);
        gbc.writeMem(0x9556, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x2ae, gbc.sp());
        EXPECT(0x9558, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9556));
        EXPECT(0x6a, gbc.readMem(0x9557));
        // CB 6A 02A5
        gbc.setState(0xe2d4, 0x2006, 0x1470, 0x305a, 0x4b27, 0x216f, 0x0, 0x0);
        gbc.writeMem(0xe2d4, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x2006, gbc.sp());
        EXPECT(0xe2d6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe2d4));
        EXPECT(0x6a, gbc.readMem(0xe2d5));
        // CB 6A 02A6
        gbc.setState(0x8ef9, 0x254d, 0xa210, 0x12b5, 0xb255, 0x5226, 0x0, 0x0);
        gbc.writeMem(0x8ef9, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x254d, gbc.sp());
        EXPECT(0x8efb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8ef9));
        EXPECT(0x6a, gbc.readMem(0x8efa));
        // CB 6A 02A7
        gbc.setState(0x3228, 0x8349, 0x2850, 0xcc92, 0x48e4, 0x5555, 0x1, 0x0);
        gbc.writeMem(0x3228, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x8349, gbc.sp());
        EXPECT(0x322a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6A 02A8
        gbc.setState(0xbfd0, 0x70b1, 0x7df0, 0xd4a5, 0xc242, 0x378f, 0x1, 0x1);
        gbc.writeMem(0xbfd0, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x70b1, gbc.sp());
        EXPECT(0xbfd2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbfd0));
        EXPECT(0x6a, gbc.readMem(0xbfd1));
        // CB 6A 02A9
        gbc.setState(0x5bc5, 0xbaf9, 0xde20, 0x5a04, 0xb44f, 0xd8ab, 0x0, 0x1);
        gbc.writeMem(0x5bc5, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0xbaf9, gbc.sp());
        EXPECT(0x5bc7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 6A 02AA
        gbc.setState(0x3a34, 0x85a7, 0xdd60, 0xd791, 0x87a4, 0x4daa, 0x1, 0x1);
        gbc.writeMem(0x3a34, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x85a7, gbc.sp());
        EXPECT(0x3a36, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 6A 02AC
        gbc.setState(0x5f63, 0x40ea, 0x5020, 0x1658, 0xc479, 0x2c46, 0x1, 0x0);
        gbc.writeMem(0x5f63, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x40ea, gbc.sp());
        EXPECT(0x5f65, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 6A 02AE
        gbc.setState(0x53f, 0x1b7a, 0x49e0, 0x372d, 0x343b, 0xf5c9, 0x0, 0x1);
        gbc.writeMem(0x53f, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x1b7a, gbc.sp());
        EXPECT(0x541, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 6A 02B0
        gbc.setState(0x5dd3, 0x49a4, 0x9960, 0xc51e, 0x5a51, 0x1614, 0x1, 0x1);
        gbc.writeMem(0x5dd3, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x49a4, gbc.sp());
        EXPECT(0x5dd5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 6A 02B1
        gbc.setState(0x4c16, 0xc8b9, 0x3d60, 0x75a1, 0xce1d, 0xf5cf, 0x0, 0x1);
        gbc.writeMem(0x4c16, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0xc8b9, gbc.sp());
        EXPECT(0x4c18, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 6A 02B2
        gbc.setState(0x7b6f, 0x3452, 0x6aa0, 0x12ac, 0xed32, 0x9f03, 0x0, 0x0);
        gbc.writeMem(0x7b6f, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x3452, gbc.sp());
        EXPECT(0x7b71, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 6A 02B3
        gbc.setState(0x8db7, 0xc2ee, 0x3080, 0xf42e, 0x2a98, 0x3cea, 0x1, 0x0);
        gbc.writeMem(0x8db7, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0xc2ee, gbc.sp());
        EXPECT(0x8db9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8db7));
        EXPECT(0x6a, gbc.readMem(0x8db8));
        // CB 6A 02B5
        gbc.setState(0xb34b, 0x4131, 0x4880, 0x9f3f, 0x5fce, 0x86ce, 0x1, 0x1);
        gbc.writeMem(0xb34b, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x4131, gbc.sp());
        EXPECT(0xb34d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb34b));
        EXPECT(0x6a, gbc.readMem(0xb34c));
        // CB 6A 02B6
        gbc.setState(0xbcc2, 0x3eb5, 0x4d50, 0x82f, 0xed3c, 0xfd79, 0x0, 0x1);
        gbc.writeMem(0xbcc2, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x3eb5, gbc.sp());
        EXPECT(0xbcc4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbcc2));
        EXPECT(0x6a, gbc.readMem(0xbcc3));
        // CB 6A 02B7
        gbc.setState(0x2458, 0xda08, 0x8340, 0xdd82, 0x4ee7, 0x6998, 0x1, 0x0);
        gbc.writeMem(0x2458, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0xda08, gbc.sp());
        EXPECT(0x245a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 6A 02B8
        gbc.setState(0xd834, 0x5d55, 0x6a20, 0x5c22, 0xaae0, 0x7671, 0x0, 0x0);
        gbc.writeMem(0xd834, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x5d55, gbc.sp());
        EXPECT(0xd836, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd834));
        EXPECT(0x6a, gbc.readMem(0xd835));
        // CB 6A 02B9
        gbc.setState(0x4e11, 0x9c34, 0xbf20, 0xeb9e, 0x735d, 0x6490, 0x1, 0x1);
        gbc.writeMem(0x4e11, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x9c34, gbc.sp());
        EXPECT(0x4e13, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 6A 02BA
        gbc.setState(0x2cc9, 0x6632, 0x72d0, 0xc4c6, 0x2725, 0xc085, 0x0, 0x0);
        gbc.writeMem(0x2cc9, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x6632, gbc.sp());
        EXPECT(0x2ccb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6A 02BB
        gbc.setState(0xee4a, 0x63f0, 0x7390, 0x8e3a, 0xd2b7, 0x9cc3, 0x1, 0x0);
        gbc.writeMem(0xee4a, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x63f0, gbc.sp());
        EXPECT(0xee4c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xee4a));
        EXPECT(0x6a, gbc.readMem(0xee4b));
        // CB 6A 02BC
        gbc.setState(0x7dfa, 0x13e6, 0x68f0, 0xc779, 0xeeb4, 0xd71b, 0x1, 0x1);
        gbc.writeMem(0x7dfa, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x13e6, gbc.sp());
        EXPECT(0x7dfc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6A 02BD
        gbc.setState(0x1d8, 0xbca1, 0x8f0, 0xf4f, 0xfe60, 0xd82, 0x1, 0x1);
        gbc.writeMem(0x1d8, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0xbca1, gbc.sp());
        EXPECT(0x1da, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6A 02BE
        gbc.setState(0xc67c, 0x8d1b, 0xc650, 0xb39b, 0x5a85, 0xccc2, 0x1, 0x0);
        gbc.writeMem(0xc67c, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x8d1b, gbc.sp());
        EXPECT(0xc67e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc67c));
        EXPECT(0x6a, gbc.readMem(0xc67d));
        // CB 6A 02BF
        gbc.setState(0x6a83, 0x54e2, 0x5d00, 0x7672, 0xa51b, 0xb62, 0x1, 0x0);
        gbc.writeMem(0x6a83, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x54e2, gbc.sp());
        EXPECT(0x6a85, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 6A 02C1
        gbc.setState(0xadf9, 0xdc9e, 0xc760, 0x507c, 0x7ad0, 0x4d4a, 0x1, 0x1);
        gbc.writeMem(0xadf9, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0xdc9e, gbc.sp());
        EXPECT(0xadfb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xadf9));
        EXPECT(0x6a, gbc.readMem(0xadfa));
        // CB 6A 02C2
        gbc.setState(0x7522, 0xbd5, 0x63a0, 0xad0d, 0x93ef, 0x5403, 0x1, 0x1);
        gbc.writeMem(0x7522, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0xbd5, gbc.sp());
        EXPECT(0x7524, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 6A 02C3
        gbc.setState(0x8041, 0xb620, 0x2570, 0x45a0, 0xf70b, 0x5ac2, 0x1, 0x1);
        gbc.writeMem(0x8041, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0xb620, gbc.sp());
        EXPECT(0x8043, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8041));
        EXPECT(0x6a, gbc.readMem(0x8042));
        // CB 6A 02C4
        gbc.setState(0xd641, 0xc4fe, 0x45b0, 0x631b, 0x67ca, 0xac14, 0x1, 0x0);
        gbc.writeMem(0xd641, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0xc4fe, gbc.sp());
        EXPECT(0xd643, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd641));
        EXPECT(0x6a, gbc.readMem(0xd642));
        // CB 6A 02C5
        gbc.setState(0xaf39, 0x2b39, 0x2860, 0xcbe, 0xfbe2, 0xcc1c, 0x1, 0x1);
        gbc.writeMem(0xaf39, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x2b39, gbc.sp());
        EXPECT(0xaf3b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaf39));
        EXPECT(0x6a, gbc.readMem(0xaf3a));
        // CB 6A 02C6
        gbc.setState(0x2505, 0xee34, 0x9260, 0xa310, 0x1cb0, 0x71ee, 0x1, 0x0);
        gbc.writeMem(0x2505, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0xee34, gbc.sp());
        EXPECT(0x2507, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 6A 02C7
        gbc.setState(0x7a5d, 0xeaae, 0xc420, 0xec6a, 0x7149, 0x5da, 0x1, 0x0);
        gbc.writeMem(0x7a5d, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0xeaae, gbc.sp());
        EXPECT(0x7a5f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 6A 02C8
        gbc.setState(0xebc3, 0x61f, 0xdcb0, 0xa602, 0x8e81, 0x1e2d, 0x1, 0x0);
        gbc.writeMem(0xebc3, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x61f, gbc.sp());
        EXPECT(0xebc5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xebc3));
        EXPECT(0x6a, gbc.readMem(0xebc4));
        // CB 6A 02C9
        gbc.setState(0x542, 0x10c9, 0x8f30, 0x8847, 0xe9f6, 0x3658, 0x1, 0x0);
        gbc.writeMem(0x542, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x10c9, gbc.sp());
        EXPECT(0x544, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6A 02CA
        gbc.setState(0xdfd2, 0xb73c, 0xb810, 0x840c, 0xdd25, 0x4bc2, 0x0, 0x0);
        gbc.writeMem(0xdfd2, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0xb73c, gbc.sp());
        EXPECT(0xdfd4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdfd2));
        EXPECT(0x6a, gbc.readMem(0xdfd3));
        // CB 6A 02CB
        gbc.setState(0x84a3, 0xff6f, 0x1360, 0x67ec, 0xc376, 0x6563, 0x0, 0x1);
        gbc.writeMem(0x84a3, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0xff6f, gbc.sp());
        EXPECT(0x84a5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x84a3));
        EXPECT(0x6a, gbc.readMem(0x84a4));
        // CB 6A 02CC
        gbc.setState(0x70f6, 0xb409, 0x9e20, 0x7115, 0x35b0, 0x54fe, 0x1, 0x1);
        gbc.writeMem(0x70f6, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0xb409, gbc.sp());
        EXPECT(0x70f8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 6A 02CE
        gbc.setState(0x8e1f, 0xf3ed, 0xab10, 0x6915, 0x4907, 0xec74, 0x0, 0x0);
        gbc.writeMem(0x8e1f, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0xf3ed, gbc.sp());
        EXPECT(0x8e21, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8e1f));
        EXPECT(0x6a, gbc.readMem(0x8e20));
        // CB 6A 02CF
        gbc.setState(0x59fc, 0xb34e, 0xda70, 0x6fc0, 0xab27, 0xb62b, 0x0, 0x0);
        gbc.writeMem(0x59fc, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0xb34e, gbc.sp());
        EXPECT(0x59fe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6A 02D0
        gbc.setState(0x4f2f, 0x838, 0x1b40, 0x17a7, 0x5125, 0x80e8, 0x1, 0x0);
        gbc.writeMem(0x4f2f, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x838, gbc.sp());
        EXPECT(0x4f31, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 6A 02D1
        gbc.setState(0x783d, 0xa8b5, 0x9ed0, 0xc66b, 0xd3f8, 0xfa82, 0x1, 0x0);
        gbc.writeMem(0x783d, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0xa8b5, gbc.sp());
        EXPECT(0x783f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6A 02D2
        gbc.setState(0x75d8, 0x6a1b, 0xaf0, 0x7672, 0xe16f, 0x20d3, 0x1, 0x1);
        gbc.writeMem(0x75d8, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x6a1b, gbc.sp());
        EXPECT(0x75da, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6A 02D3
        gbc.setState(0xa8af, 0xd0e2, 0xf6c0, 0x4e4e, 0x347e, 0x7b81, 0x0, 0x0);
        gbc.writeMem(0xa8af, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0xd0e2, gbc.sp());
        EXPECT(0xa8b1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa8af));
        EXPECT(0x6a, gbc.readMem(0xa8b0));
        // CB 6A 02D4
        gbc.setState(0x3daf, 0x4844, 0xb180, 0xe4e, 0x8810, 0x86f4, 0x0, 0x0);
        gbc.writeMem(0x3daf, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x4844, gbc.sp());
        EXPECT(0x3db1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 6A 02D5
        gbc.setState(0xb781, 0x984c, 0xa9d0, 0xdf27, 0x7e96, 0x366a, 0x0, 0x1);
        gbc.writeMem(0xb781, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x984c, gbc.sp());
        EXPECT(0xb783, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb781));
        EXPECT(0x6a, gbc.readMem(0xb782));
        // CB 6A 02D7
        gbc.setState(0x6a56, 0xe844, 0x5ce0, 0xcf00, 0x86c3, 0xeaa2, 0x1, 0x0);
        gbc.writeMem(0x6a56, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0xe844, gbc.sp());
        EXPECT(0x6a58, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 6A 02D8
        gbc.setState(0xb8fe, 0x83b4, 0x6f80, 0xe925, 0x6cf5, 0x23a9, 0x1, 0x0);
        gbc.writeMem(0xb8fe, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x83b4, gbc.sp());
        EXPECT(0xb900, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb8fe));
        EXPECT(0x6a, gbc.readMem(0xb8ff));
        // CB 6A 02D9
        gbc.setState(0x14c0, 0x7517, 0xd470, 0xd32a, 0xdf2a, 0x24ee, 0x1, 0x1);
        gbc.writeMem(0x14c0, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x7517, gbc.sp());
        EXPECT(0x14c2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6A 02DA
        gbc.setState(0x9ed6, 0x4dfc, 0x2ce0, 0x2969, 0xf8a2, 0xe713, 0x0, 0x1);
        gbc.writeMem(0x9ed6, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x4dfc, gbc.sp());
        EXPECT(0x9ed8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9ed6));
        EXPECT(0x6a, gbc.readMem(0x9ed7));
        // CB 6A 02DB
        gbc.setState(0x4676, 0x57f, 0x4140, 0x420, 0x3636, 0x623e, 0x0, 0x0);
        gbc.writeMem(0x4676, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x57f, gbc.sp());
        EXPECT(0x4678, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 6A 02DC
        gbc.setState(0xb97d, 0x26f1, 0xd7c0, 0x6a53, 0xabff, 0xc841, 0x1, 0x0);
        gbc.writeMem(0xb97d, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x26f1, gbc.sp());
        EXPECT(0xb97f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb97d));
        EXPECT(0x6a, gbc.readMem(0xb97e));
        // CB 6A 02DD
        gbc.setState(0x577c, 0x2b75, 0xaf20, 0x8c59, 0xa91f, 0x94b, 0x1, 0x0);
        gbc.writeMem(0x577c, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x2b75, gbc.sp());
        EXPECT(0x577e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 6A 02DE
        gbc.setState(0x6097, 0x4d53, 0xafc0, 0xc2a7, 0x73b, 0xba5b, 0x0, 0x0);
        gbc.writeMem(0x6097, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x4d53, gbc.sp());
        EXPECT(0x6099, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 6A 02DF
        gbc.setState(0x8323, 0x55f0, 0xad70, 0xf254, 0x6cee, 0xb8ba, 0x1, 0x1);
        gbc.writeMem(0x8323, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0x55f0, gbc.sp());
        EXPECT(0x8325, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8323));
        EXPECT(0x6a, gbc.readMem(0x8324));
        // CB 6A 02E0
        gbc.setState(0x318d, 0x8a61, 0xf070, 0x7f47, 0x8b5c, 0x3eaa, 0x0, 0x0);
        gbc.writeMem(0x318d, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x8a61, gbc.sp());
        EXPECT(0x318f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6A 02E1
        gbc.setState(0x469, 0x693b, 0x84e0, 0x643c, 0xd6d3, 0xbd8c, 0x0, 0x0);
        gbc.writeMem(0x469, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x693b, gbc.sp());
        EXPECT(0x46b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 6A 02E3
        gbc.setState(0x34b0, 0xeec9, 0x590, 0xde3a, 0xf3ae, 0x172a, 0x0, 0x1);
        gbc.writeMem(0x34b0, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0xeec9, gbc.sp());
        EXPECT(0x34b2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6A 02E4
        gbc.setState(0x3592, 0xce2, 0xce60, 0x6ce1, 0x7ac4, 0x9da3, 0x1, 0x1);
        gbc.writeMem(0x3592, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0xce2, gbc.sp());
        EXPECT(0x3594, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 6A 02E5
        gbc.setState(0xe816, 0x8b2d, 0x950, 0xe11a, 0xce85, 0x307f, 0x1, 0x1);
        gbc.writeMem(0xe816, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x8b2d, gbc.sp());
        EXPECT(0xe818, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe816));
        EXPECT(0x6a, gbc.readMem(0xe817));
        // CB 6A 02E6
        gbc.setState(0xb80, 0x16dc, 0x7330, 0x95f2, 0x9fc1, 0x2ac1, 0x1, 0x0);
        gbc.writeMem(0xb80, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x16dc, gbc.sp());
        EXPECT(0xb82, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6A 02E7
        gbc.setState(0xde20, 0x88e8, 0x2230, 0x4c6a, 0x6482, 0x8691, 0x0, 0x1);
        gbc.writeMem(0xde20, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x88e8, gbc.sp());
        EXPECT(0xde22, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xde20));
        EXPECT(0x6a, gbc.readMem(0xde21));
        // CB 6A 02E8
        gbc.setState(0x2019, 0x24f1, 0x50e0, 0x77d5, 0x5909, 0xfab9, 0x1, 0x0);
        gbc.writeMem(0x2019, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x24f1, gbc.sp());
        EXPECT(0x201b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 6A 02E9
        gbc.setState(0x8ea8, 0xb0ed, 0x7f80, 0x89ef, 0x96f9, 0x5bc7, 0x1, 0x1);
        gbc.writeMem(0x8ea8, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0xb0ed, gbc.sp());
        EXPECT(0x8eaa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8ea8));
        EXPECT(0x6a, gbc.readMem(0x8ea9));
        // CB 6A 02EA
        gbc.setState(0xd077, 0x18d0, 0xe140, 0xde27, 0x3e12, 0xe57a, 0x1, 0x1);
        gbc.writeMem(0xd077, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x18d0, gbc.sp());
        EXPECT(0xd079, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd077));
        EXPECT(0x6a, gbc.readMem(0xd078));
        // CB 6A 02EB
        gbc.setState(0x854e, 0x8c3a, 0x5d70, 0xb891, 0x68a6, 0x3030, 0x0, 0x0);
        gbc.writeMem(0x854e, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x8c3a, gbc.sp());
        EXPECT(0x8550, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x854e));
        EXPECT(0x6a, gbc.readMem(0x854f));
        // CB 6A 02EC
        gbc.setState(0xeb66, 0x6b1f, 0x5ad0, 0xf0ed, 0x4df5, 0xaf19, 0x1, 0x1);
        gbc.writeMem(0xeb66, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x6b1f, gbc.sp());
        EXPECT(0xeb68, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeb66));
        EXPECT(0x6a, gbc.readMem(0xeb67));
        // CB 6A 02ED
        gbc.setState(0xbbce, 0xa4cc, 0x4cd0, 0x5a19, 0x609f, 0x6990, 0x1, 0x1);
        gbc.writeMem(0xbbce, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0xa4cc, gbc.sp());
        EXPECT(0xbbd0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbbce));
        EXPECT(0x6a, gbc.readMem(0xbbcf));
        // CB 6A 02EE
        gbc.setState(0x3b80, 0x3dde, 0xa770, 0x9c84, 0xb07a, 0xc19e, 0x0, 0x0);
        gbc.writeMem(0x3b80, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x3dde, gbc.sp());
        EXPECT(0x3b82, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6A 02EF
        gbc.setState(0x598b, 0xd11b, 0xc7a0, 0xdb1a, 0x7407, 0x8e93, 0x0, 0x1);
        gbc.writeMem(0x598b, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0xd11b, gbc.sp());
        EXPECT(0x598d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 6A 02F0
        gbc.setState(0x4f65, 0xf26, 0x7f20, 0x6c7d, 0x39e4, 0x72cc, 0x0, 0x1);
        gbc.writeMem(0x4f65, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0xf26, gbc.sp());
        EXPECT(0x4f67, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 6A 02F2
        gbc.setState(0x7c0e, 0x151b, 0x3a90, 0xe8ce, 0x6c02, 0x4888, 0x1, 0x0);
        gbc.writeMem(0x7c0e, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x151b, gbc.sp());
        EXPECT(0x7c10, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6A 02F3
        gbc.setState(0x3aad, 0x672c, 0x6240, 0x6dc8, 0xdcd0, 0xded1, 0x1, 0x0);
        gbc.writeMem(0x3aad, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x672c, gbc.sp());
        EXPECT(0x3aaf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 6A 02F4
        gbc.setState(0xa3a3, 0xe8c6, 0xef60, 0x3aeb, 0x5ae2, 0xe69c, 0x1, 0x1);
        gbc.writeMem(0xa3a3, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0xe8c6, gbc.sp());
        EXPECT(0xa3a5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa3a3));
        EXPECT(0x6a, gbc.readMem(0xa3a4));
        // CB 6A 02F5
        gbc.setState(0xb06f, 0xcc81, 0xd1d0, 0xdc18, 0xbf3d, 0xe016, 0x1, 0x1);
        gbc.writeMem(0xb06f, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0xcc81, gbc.sp());
        EXPECT(0xb071, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb06f));
        EXPECT(0x6a, gbc.readMem(0xb070));
        // CB 6A 02F6
        gbc.setState(0xd32e, 0xeb8b, 0x9e0, 0x64c1, 0x21bc, 0x8ea0, 0x1, 0x1);
        gbc.writeMem(0xd32e, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0xeb8b, gbc.sp());
        EXPECT(0xd330, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd32e));
        EXPECT(0x6a, gbc.readMem(0xd32f));
        // CB 6A 02F7
        gbc.setState(0x7446, 0xbc0, 0x7c0, 0x8242, 0xa1f1, 0x5984, 0x1, 0x0);
        gbc.writeMem(0x7446, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0xbc0, gbc.sp());
        EXPECT(0x7448, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 6A 02F8
        gbc.setState(0x4ddf, 0xe769, 0xbe50, 0x35c8, 0x55ce, 0xd616, 0x0, 0x0);
        gbc.writeMem(0x4ddf, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0xe769, gbc.sp());
        EXPECT(0x4de1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6A 02F9
        gbc.setState(0xe95e, 0x53da, 0x3b0, 0xcf03, 0xaa9c, 0xdea9, 0x0, 0x1);
        gbc.writeMem(0xe95e, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x53da, gbc.sp());
        EXPECT(0xe960, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe95e));
        EXPECT(0x6a, gbc.readMem(0xe95f));
        // CB 6A 02FA
        gbc.setState(0x8b45, 0x98d6, 0x63e0, 0xf25a, 0x9a0f, 0x73a2, 0x0, 0x0);
        gbc.writeMem(0x8b45, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x98d6, gbc.sp());
        EXPECT(0x8b47, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8b45));
        EXPECT(0x6a, gbc.readMem(0x8b46));
        // CB 6A 02FC
        gbc.setState(0x7040, 0xb9a1, 0xb9b0, 0xf97c, 0x3ca4, 0xdfbe, 0x0, 0x1);
        gbc.writeMem(0x7040, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0xb9a1, gbc.sp());
        EXPECT(0x7042, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6A 02FD
        gbc.setState(0xb7f4, 0xb497, 0x3160, 0x7e30, 0xe946, 0xd411, 0x1, 0x0);
        gbc.writeMem(0xb7f4, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0xb497, gbc.sp());
        EXPECT(0xb7f6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb7f4));
        EXPECT(0x6a, gbc.readMem(0xb7f5));
        // CB 6A 02FE
        gbc.setState(0xb955, 0xc0e4, 0xb690, 0x9b10, 0x1a32, 0x21f5, 0x1, 0x0);
        gbc.writeMem(0xb955, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0xc0e4, gbc.sp());
        EXPECT(0xb957, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb955));
        EXPECT(0x6a, gbc.readMem(0xb956));
        // CB 6A 02FF
        gbc.setState(0x31d6, 0x14ae, 0xd990, 0xcea8, 0xb95d, 0x22c4, 0x0, 0x0);
        gbc.writeMem(0x31d6, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x14ae, gbc.sp());
        EXPECT(0x31d8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6A 0300
        gbc.setState(0xe676, 0x1fb8, 0xb2f0, 0x111f, 0x3e49, 0x3045, 0x1, 0x1);
        gbc.writeMem(0xe676, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x1fb8, gbc.sp());
        EXPECT(0xe678, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe676));
        EXPECT(0x6a, gbc.readMem(0xe677));
        // CB 6A 0301
        gbc.setState(0x66c9, 0xbde1, 0xb730, 0xb2a7, 0xbee0, 0x9579, 0x1, 0x1);
        gbc.writeMem(0x66c9, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0xbde1, gbc.sp());
        EXPECT(0x66cb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6A 0302
        gbc.setState(0x7741, 0xd548, 0x37c0, 0x4da6, 0xdb1, 0x32cd, 0x1, 0x1);
        gbc.writeMem(0x7741, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0xd548, gbc.sp());
        EXPECT(0x7743, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 6A 0303
        gbc.setState(0x82a3, 0x3c2d, 0xc2a0, 0xe9e5, 0xb8fe, 0xe740, 0x1, 0x1);
        gbc.writeMem(0x82a3, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x3c2d, gbc.sp());
        EXPECT(0x82a5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x82a3));
        EXPECT(0x6a, gbc.readMem(0x82a4));
        // CB 6A 0304
        gbc.setState(0x98bf, 0xb7d, 0xa4b0, 0x7eb6, 0x7a06, 0x9979, 0x0, 0x0);
        gbc.writeMem(0x98bf, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0xb7d, gbc.sp());
        EXPECT(0x98c1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x98bf));
        EXPECT(0x6a, gbc.readMem(0x98c0));
        // CB 6A 0305
        gbc.setState(0x2c04, 0xe36a, 0x9ca0, 0xfa20, 0x7ff4, 0xdf5c, 0x0, 0x0);
        gbc.writeMem(0x2c04, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0xe36a, gbc.sp());
        EXPECT(0x2c06, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 6A 0306
        gbc.setState(0xdaef, 0x1b24, 0x43a0, 0xe215, 0x1a3a, 0x3881, 0x1, 0x1);
        gbc.writeMem(0xdaef, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x1b24, gbc.sp());
        EXPECT(0xdaf1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdaef));
        EXPECT(0x6a, gbc.readMem(0xdaf0));
        // CB 6A 0307
        gbc.setState(0xf2c, 0x5de4, 0xad30, 0x2b8d, 0x3c1e, 0x13e5, 0x1, 0x0);
        gbc.writeMem(0xf2c, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x5de4, gbc.sp());
        EXPECT(0xf2e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6A 0308
        gbc.setState(0x2a39, 0x75ea, 0xa4d0, 0x13d7, 0xbb7a, 0x2c7c, 0x1, 0x0);
        gbc.writeMem(0x2a39, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x75ea, gbc.sp());
        EXPECT(0x2a3b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6A 0309
        gbc.setState(0x4a9, 0xe9fd, 0xa7a0, 0x7da9, 0xd308, 0xa07f, 0x0, 0x0);
        gbc.writeMem(0x4a9, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0xe9fd, gbc.sp());
        EXPECT(0x4ab, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 6A 030A
        gbc.setState(0xb10c, 0x9871, 0xe380, 0x73ed, 0xc28e, 0x3fab, 0x1, 0x1);
        gbc.writeMem(0xb10c, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x9871, gbc.sp());
        EXPECT(0xb10e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb10c));
        EXPECT(0x6a, gbc.readMem(0xb10d));
        // CB 6A 030B
        gbc.setState(0xebc8, 0xbeeb, 0xe350, 0x922b, 0x84b2, 0xb2a5, 0x1, 0x0);
        gbc.writeMem(0xebc8, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0xbeeb, gbc.sp());
        EXPECT(0xebca, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xebc8));
        EXPECT(0x6a, gbc.readMem(0xebc9));
        // CB 6A 030C
        gbc.setState(0x38c1, 0x8475, 0x1890, 0xc860, 0x6bb0, 0xcc0f, 0x0, 0x1);
        gbc.writeMem(0x38c1, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x8475, gbc.sp());
        EXPECT(0x38c3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6A 030D
        gbc.setState(0xe8e3, 0x752d, 0x6740, 0xf4b2, 0x1b43, 0x8576, 0x0, 0x0);
        gbc.writeMem(0xe8e3, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x752d, gbc.sp());
        EXPECT(0xe8e5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe8e3));
        EXPECT(0x6a, gbc.readMem(0xe8e4));
        // CB 6A 030E
        gbc.setState(0x7010, 0xdf3, 0x7ad0, 0x424c, 0x518a, 0xf09b, 0x1, 0x0);
        gbc.writeMem(0x7010, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0xdf3, gbc.sp());
        EXPECT(0x7012, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6A 030F
        gbc.setState(0x8b1e, 0x40a6, 0xf030, 0xdf4, 0xc26b, 0x116f, 0x1, 0x0);
        gbc.writeMem(0x8b1e, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x40a6, gbc.sp());
        EXPECT(0x8b20, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8b1e));
        EXPECT(0x6a, gbc.readMem(0x8b1f));
        // CB 6A 0310
        gbc.setState(0x1b4d, 0xc8cb, 0x1e40, 0x1664, 0x3f53, 0x175c, 0x1, 0x0);
        gbc.writeMem(0x1b4d, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0xc8cb, gbc.sp());
        EXPECT(0x1b4f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 6A 0311
        gbc.setState(0x9f13, 0x1354, 0x36c0, 0xfae5, 0x1353, 0xb68a, 0x0, 0x1);
        gbc.writeMem(0x9f13, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x1354, gbc.sp());
        EXPECT(0x9f15, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9f13));
        EXPECT(0x6a, gbc.readMem(0x9f14));
        // CB 6A 0312
        gbc.setState(0x27ed, 0xda9c, 0x4160, 0x6549, 0xceb, 0xadb5, 0x0, 0x1);
        gbc.writeMem(0x27ed, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0xda9c, gbc.sp());
        EXPECT(0x27ef, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 6A 0313
        gbc.setState(0xe591, 0x5274, 0x57b0, 0x55b9, 0x76ef, 0x41bf, 0x1, 0x1);
        gbc.writeMem(0xe591, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x5274, gbc.sp());
        EXPECT(0xe593, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe591));
        EXPECT(0x6a, gbc.readMem(0xe592));
        // CB 6A 0314
        gbc.setState(0x2732, 0x7472, 0x4240, 0xfd4, 0x1fb6, 0x585d, 0x0, 0x1);
        gbc.writeMem(0x2732, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x7472, gbc.sp());
        EXPECT(0x2734, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 6A 0315
        gbc.setState(0x71c0, 0xb4db, 0x9310, 0x6fed, 0xeb8e, 0xdcc3, 0x0, 0x1);
        gbc.writeMem(0x71c0, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0xb4db, gbc.sp());
        EXPECT(0x71c2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6A 0316
        gbc.setState(0x310, 0x86d8, 0xc730, 0x7464, 0x357a, 0xffcd, 0x0, 0x1);
        gbc.writeMem(0x310, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x86d8, gbc.sp());
        EXPECT(0x312, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6A 0317
        gbc.setState(0x8c3e, 0x8739, 0x5e80, 0x3b9b, 0xa1b, 0xf4e1, 0x0, 0x0);
        gbc.writeMem(0x8c3e, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0x8739, gbc.sp());
        EXPECT(0x8c40, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8c3e));
        EXPECT(0x6a, gbc.readMem(0x8c3f));
        // CB 6A 0318
        gbc.setState(0xc58d, 0xfff9, 0xfdd0, 0xba62, 0xba48, 0xe11, 0x0, 0x0);
        gbc.writeMem(0xc58d, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0xfff9, gbc.sp());
        EXPECT(0xc58f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc58d));
        EXPECT(0x6a, gbc.readMem(0xc58e));
        // CB 6A 0319
        gbc.setState(0xe0fa, 0x229, 0x6d80, 0xee00, 0x9e41, 0x3e39, 0x1, 0x0);
        gbc.writeMem(0xe0fa, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x229, gbc.sp());
        EXPECT(0xe0fc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe0fa));
        EXPECT(0x6a, gbc.readMem(0xe0fb));
        // CB 6A 031A
        gbc.setState(0x4c85, 0x480a, 0x650, 0x9794, 0xa092, 0x1d0a, 0x1, 0x0);
        gbc.writeMem(0x4c85, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x480a, gbc.sp());
        EXPECT(0x4c87, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6A 031B
        gbc.setState(0x939e, 0x5346, 0xf630, 0xa7dc, 0x2b55, 0xde9c, 0x0, 0x0);
        gbc.writeMem(0x939e, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x5346, gbc.sp());
        EXPECT(0x93a0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x939e));
        EXPECT(0x6a, gbc.readMem(0x939f));
        // CB 6A 031C
        gbc.setState(0x2023, 0x53f7, 0x45f0, 0xbe7e, 0xc670, 0x249e, 0x1, 0x1);
        gbc.writeMem(0x2023, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x53f7, gbc.sp());
        EXPECT(0x2025, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6A 031D
        gbc.setState(0xd2af, 0xb78f, 0x8f60, 0xf74a, 0x2aa6, 0x3efd, 0x1, 0x0);
        gbc.writeMem(0xd2af, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0xb78f, gbc.sp());
        EXPECT(0xd2b1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd2af));
        EXPECT(0x6a, gbc.readMem(0xd2b0));
        // CB 6A 031E
        gbc.setState(0x54b5, 0x30b3, 0xc490, 0x4a52, 0xb0c0, 0x8d9c, 0x1, 0x1);
        gbc.writeMem(0x54b5, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x30b3, gbc.sp());
        EXPECT(0x54b7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6A 031F
        gbc.setState(0x2499, 0x1bbd, 0x9310, 0xba80, 0x2985, 0xf32, 0x1, 0x1);
        gbc.writeMem(0x2499, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x1bbd, gbc.sp());
        EXPECT(0x249b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6A 0320
        gbc.setState(0x18c2, 0x66b6, 0x8ee0, 0x94e1, 0xc91e, 0xbf70, 0x1, 0x1);
        gbc.writeMem(0x18c2, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x66b6, gbc.sp());
        EXPECT(0x18c4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 6A 0321
        gbc.setState(0x7b00, 0xbbf0, 0x4a60, 0xde45, 0x390c, 0xe656, 0x1, 0x0);
        gbc.writeMem(0x7b00, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0xbbf0, gbc.sp());
        EXPECT(0x7b02, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 6A 0322
        gbc.setState(0xb624, 0x8a71, 0x1790, 0x699f, 0xbbbb, 0x2ae4, 0x0, 0x0);
        gbc.writeMem(0xb624, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x8a71, gbc.sp());
        EXPECT(0xb626, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb624));
        EXPECT(0x6a, gbc.readMem(0xb625));
        // CB 6A 0323
        gbc.setState(0xd831, 0x57e2, 0x8830, 0xd32b, 0xf5ea, 0x20c0, 0x0, 0x0);
        gbc.writeMem(0xd831, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x57e2, gbc.sp());
        EXPECT(0xd833, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd831));
        EXPECT(0x6a, gbc.readMem(0xd832));
        // CB 6A 0324
        gbc.setState(0xa9bd, 0x187d, 0x4500, 0x2ce8, 0x4f3, 0x2c59, 0x1, 0x1);
        gbc.writeMem(0xa9bd, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x187d, gbc.sp());
        EXPECT(0xa9bf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa9bd));
        EXPECT(0x6a, gbc.readMem(0xa9be));
        // CB 6A 0325
        gbc.setState(0x4abd, 0x220b, 0x9900, 0xac6b, 0xc40c, 0xb1d0, 0x1, 0x1);
        gbc.writeMem(0x4abd, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x220b, gbc.sp());
        EXPECT(0x4abf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 6A 0326
        gbc.setState(0xba1c, 0x5c91, 0x98a0, 0x1d6f, 0x9264, 0xedc6, 0x0, 0x0);
        gbc.writeMem(0xba1c, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x5c91, gbc.sp());
        EXPECT(0xba1e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xba1c));
        EXPECT(0x6a, gbc.readMem(0xba1d));
        // CB 6A 0327
        gbc.setState(0xc267, 0xc3fb, 0xe7c0, 0x73c4, 0x302e, 0xfd35, 0x1, 0x0);
        gbc.writeMem(0xc267, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0xc3fb, gbc.sp());
        EXPECT(0xc269, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc267));
        EXPECT(0x6a, gbc.readMem(0xc268));
        // CB 6A 0328
        gbc.setState(0x317a, 0xd82, 0x69a0, 0x1470, 0x5d3, 0x984c, 0x1, 0x0);
        gbc.writeMem(0x317a, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0xd82, gbc.sp());
        EXPECT(0x317c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 6A 0329
        gbc.setState(0x8347, 0xd93a, 0xaa20, 0x8912, 0x28aa, 0x91ac, 0x1, 0x0);
        gbc.writeMem(0x8347, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0xd93a, gbc.sp());
        EXPECT(0x8349, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8347));
        EXPECT(0x6a, gbc.readMem(0x8348));
        // CB 6A 032A
        gbc.setState(0x9a2d, 0xff49, 0x2300, 0xcddc, 0xf88f, 0xffb2, 0x1, 0x1);
        gbc.writeMem(0x9a2d, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0xff49, gbc.sp());
        EXPECT(0x9a2f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9a2d));
        EXPECT(0x6a, gbc.readMem(0x9a2e));
        // CB 6A 032B
        gbc.setState(0x2db0, 0xceee, 0xb50, 0xaeb3, 0xf52d, 0xb262, 0x1, 0x1);
        gbc.writeMem(0x2db0, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0xceee, gbc.sp());
        EXPECT(0x2db2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6A 032C
        gbc.setState(0xe1, 0x4ffd, 0x7b70, 0xa57f, 0x817e, 0x18bc, 0x1, 0x1);
        gbc.writeMem(0xe1, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x4ffd, gbc.sp());
        EXPECT(0xe3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6A 032D
        gbc.setState(0xbb08, 0x716e, 0x6ec0, 0x9f2, 0x9032, 0x290a, 0x0, 0x0);
        gbc.writeMem(0xbb08, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x716e, gbc.sp());
        EXPECT(0xbb0a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbb08));
        EXPECT(0x6a, gbc.readMem(0xbb09));
        // CB 6A 032F
        gbc.setState(0x346e, 0x8414, 0xa0a0, 0xf06f, 0x99ab, 0xbcca, 0x0, 0x0);
        gbc.writeMem(0x346e, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x8414, gbc.sp());
        EXPECT(0x3470, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 6A 0330
        gbc.setState(0x46c2, 0x6ac7, 0x5ed0, 0xa15, 0x1fc1, 0x53b6, 0x0, 0x1);
        gbc.writeMem(0x46c2, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x6ac7, gbc.sp());
        EXPECT(0x46c4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6A 0331
        gbc.setState(0xdbb7, 0xd7fb, 0xd3f0, 0xd213, 0x46db, 0x91f2, 0x1, 0x1);
        gbc.writeMem(0xdbb7, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0xd7fb, gbc.sp());
        EXPECT(0xdbb9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdbb7));
        EXPECT(0x6a, gbc.readMem(0xdbb8));
        // CB 6A 0332
        gbc.setState(0x9242, 0x83bf, 0x70f0, 0x95e1, 0x89b8, 0x634d, 0x1, 0x0);
        gbc.writeMem(0x9242, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x83bf, gbc.sp());
        EXPECT(0x9244, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9242));
        EXPECT(0x6a, gbc.readMem(0x9243));
        // CB 6A 0333
        gbc.setState(0x89c5, 0xef10, 0xbb50, 0xe144, 0x6240, 0xa4ae, 0x0, 0x0);
        gbc.writeMem(0x89c5, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0xef10, gbc.sp());
        EXPECT(0x89c7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x89c5));
        EXPECT(0x6a, gbc.readMem(0x89c6));
        // CB 6A 0334
        gbc.setState(0xa5a2, 0xd42e, 0x2bd0, 0x220a, 0xf1b4, 0xd0a6, 0x0, 0x0);
        gbc.writeMem(0xa5a2, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0xd42e, gbc.sp());
        EXPECT(0xa5a4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa5a2));
        EXPECT(0x6a, gbc.readMem(0xa5a3));
        // CB 6A 0335
        gbc.setState(0xa8b5, 0x25d, 0xd620, 0x873a, 0xba77, 0x1449, 0x0, 0x0);
        gbc.writeMem(0xa8b5, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x25d, gbc.sp());
        EXPECT(0xa8b7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa8b5));
        EXPECT(0x6a, gbc.readMem(0xa8b6));
        // CB 6A 0337
        gbc.setState(0xa35f, 0x484, 0x6040, 0x69c1, 0x7848, 0xa8f1, 0x1, 0x1);
        gbc.writeMem(0xa35f, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x484, gbc.sp());
        EXPECT(0xa361, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa35f));
        EXPECT(0x6a, gbc.readMem(0xa360));
        // CB 6A 0338
        gbc.setState(0x28eb, 0xe23a, 0xb3f0, 0x6f53, 0x7484, 0xa54c, 0x1, 0x1);
        gbc.writeMem(0x28eb, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0xe23a, gbc.sp());
        EXPECT(0x28ed, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6A 0339
        gbc.setState(0x639b, 0x738f, 0x7be0, 0x1796, 0x58ed, 0xc414, 0x1, 0x0);
        gbc.writeMem(0x639b, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x738f, gbc.sp());
        EXPECT(0x639d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 6A 033A
        gbc.setState(0x5dd4, 0x7278, 0xa660, 0x6e91, 0x7246, 0x5b0b, 0x0, 0x1);
        gbc.writeMem(0x5dd4, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x7278, gbc.sp());
        EXPECT(0x5dd6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 6A 033B
        gbc.setState(0xeb1, 0xe5a9, 0x1790, 0x8097, 0xd9e2, 0x3b30, 0x1, 0x1);
        gbc.writeMem(0xeb1, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0xe5a9, gbc.sp());
        EXPECT(0xeb3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6A 033C
        gbc.setState(0xc054, 0x29e0, 0x5ef0, 0x6238, 0x510a, 0xe979, 0x0, 0x1);
        gbc.writeMem(0xc054, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x29e0, gbc.sp());
        EXPECT(0xc056, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc054));
        EXPECT(0x6a, gbc.readMem(0xc055));
        // CB 6A 033D
        gbc.setState(0x437d, 0xcdc5, 0x7370, 0xf3f1, 0xb510, 0xf961, 0x0, 0x0);
        gbc.writeMem(0x437d, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0xcdc5, gbc.sp());
        EXPECT(0x437f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6A 033E
        gbc.setState(0xbd39, 0xc6e9, 0x5a10, 0xd9df, 0x91ed, 0xb23a, 0x1, 0x0);
        gbc.writeMem(0xbd39, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0xc6e9, gbc.sp());
        EXPECT(0xbd3b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbd39));
        EXPECT(0x6a, gbc.readMem(0xbd3a));
        // CB 6A 033F
        gbc.setState(0x6fea, 0xacdb, 0xf510, 0x4110, 0xc4a7, 0xe38b, 0x0, 0x1);
        gbc.writeMem(0x6fea, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0xacdb, gbc.sp());
        EXPECT(0x6fec, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6A 0340
        gbc.setState(0x4cc2, 0x49c6, 0x7e0, 0x9730, 0xb05f, 0x9c83, 0x0, 0x0);
        gbc.writeMem(0x4cc2, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x49c6, gbc.sp());
        EXPECT(0x4cc4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 6A 0341
        gbc.setState(0x9e43, 0x52dd, 0xfa80, 0x4f08, 0x81da, 0x10d7, 0x0, 0x1);
        gbc.writeMem(0x9e43, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0x52dd, gbc.sp());
        EXPECT(0x9e45, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9e43));
        EXPECT(0x6a, gbc.readMem(0x9e44));
        // CB 6A 0346
        gbc.setState(0x981e, 0x63a7, 0x6590, 0xad20, 0x3f23, 0x1bfa, 0x0, 0x0);
        gbc.writeMem(0x981e, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0x63a7, gbc.sp());
        EXPECT(0x9820, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x981e));
        EXPECT(0x6a, gbc.readMem(0x981f));
        // CB 6A 0347
        gbc.setState(0x4672, 0x7f0e, 0x32e0, 0xc291, 0xb0c6, 0xdd4c, 0x0, 0x0);
        gbc.writeMem(0x4672, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x7f0e, gbc.sp());
        EXPECT(0x4674, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 6A 0348
        gbc.setState(0xe5fe, 0xdc39, 0xb690, 0xf9c7, 0x5e39, 0xe0f7, 0x1, 0x0);
        gbc.writeMem(0xe5fe, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0xdc39, gbc.sp());
        EXPECT(0xe600, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe5fe));
        EXPECT(0x6a, gbc.readMem(0xe5ff));
        // CB 6A 0349
        gbc.setState(0x6415, 0xd626, 0xcde0, 0x1428, 0x83f3, 0x5ebb, 0x1, 0x1);
        gbc.writeMem(0x6415, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0xd626, gbc.sp());
        EXPECT(0x6417, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 6A 034B
        gbc.setState(0x372e, 0xf015, 0x28c0, 0x389d, 0x4fdd, 0x2fda, 0x1, 0x1);
        gbc.writeMem(0x372e, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0xf015, gbc.sp());
        EXPECT(0x3730, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 6A 034C
        gbc.setState(0xa9d3, 0x13b9, 0x2120, 0x438, 0x62c3, 0xc902, 0x1, 0x1);
        gbc.writeMem(0xa9d3, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x13b9, gbc.sp());
        EXPECT(0xa9d5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa9d3));
        EXPECT(0x6a, gbc.readMem(0xa9d4));
        // CB 6A 034D
        gbc.setState(0x6508, 0x9c66, 0xfdd0, 0x9f0, 0x9255, 0x98ae, 0x1, 0x1);
        gbc.writeMem(0x6508, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0x9c66, gbc.sp());
        EXPECT(0x650a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6A 034E
        gbc.setState(0x6273, 0x3000, 0x9400, 0x48e4, 0xdbe3, 0x7ba4, 0x1, 0x0);
        gbc.writeMem(0x6273, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x3000, gbc.sp());
        EXPECT(0x6275, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 6A 034F
        gbc.setState(0x570f, 0xec0, 0xe8d0, 0xbcd7, 0xdab, 0x2b91, 0x0, 0x1);
        gbc.writeMem(0x570f, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0xec0, gbc.sp());
        EXPECT(0x5711, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6A 0350
        gbc.setState(0x6401, 0x816b, 0xbb70, 0x48b1, 0xa52e, 0x5d5b, 0x1, 0x1);
        gbc.writeMem(0x6401, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x816b, gbc.sp());
        EXPECT(0x6403, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6A 0351
        gbc.setState(0x6565, 0xa48c, 0x4d10, 0x6487, 0xee34, 0x7dbe, 0x0, 0x0);
        gbc.writeMem(0x6565, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0xa48c, gbc.sp());
        EXPECT(0x6567, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6A 0352
        gbc.setState(0x9f9b, 0x8260, 0xf240, 0x15f3, 0x1d22, 0xa8c0, 0x1, 0x0);
        gbc.writeMem(0x9f9b, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x8260, gbc.sp());
        EXPECT(0x9f9d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9f9b));
        EXPECT(0x6a, gbc.readMem(0x9f9c));
        // CB 6A 0353
        gbc.setState(0x358b, 0xa3f3, 0x39a0, 0x6fbb, 0x2f45, 0xbad, 0x0, 0x1);
        gbc.writeMem(0x358b, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0xa3f3, gbc.sp());
        EXPECT(0x358d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 6A 0354
        gbc.setState(0x12df, 0x4128, 0x200, 0x8117, 0x38ef, 0x6308, 0x1, 0x1);
        gbc.writeMem(0x12df, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x4128, gbc.sp());
        EXPECT(0x12e1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 6A 0355
        gbc.setState(0xaef8, 0xa87d, 0x3100, 0x3229, 0x2cf7, 0xfd45, 0x0, 0x1);
        gbc.writeMem(0xaef8, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0xa87d, gbc.sp());
        EXPECT(0xaefa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaef8));
        EXPECT(0x6a, gbc.readMem(0xaef9));
        // CB 6A 0356
        gbc.setState(0x870d, 0xdbda, 0x6a10, 0x457e, 0xd694, 0xb6ef, 0x1, 0x1);
        gbc.writeMem(0x870d, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0xdbda, gbc.sp());
        EXPECT(0x870f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x870d));
        EXPECT(0x6a, gbc.readMem(0x870e));
        // CB 6A 0357
        gbc.setState(0x9c2e, 0xf04c, 0x40a0, 0x2e, 0xc108, 0x1beb, 0x1, 0x1);
        gbc.writeMem(0x9c2e, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0xf04c, gbc.sp());
        EXPECT(0x9c30, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9c2e));
        EXPECT(0x6a, gbc.readMem(0x9c2f));
        // CB 6A 0359
        gbc.setState(0x1fa, 0x5f39, 0x90c0, 0x5e90, 0x2165, 0xeddc, 0x1, 0x0);
        gbc.writeMem(0x1fa, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x5f39, gbc.sp());
        EXPECT(0x1fc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 6A 035A
        gbc.setState(0xe952, 0xa682, 0x5100, 0xd362, 0x9a87, 0xbe9f, 0x1, 0x1);
        gbc.writeMem(0xe952, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0xa682, gbc.sp());
        EXPECT(0xe954, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe952));
        EXPECT(0x6a, gbc.readMem(0xe953));
        // CB 6A 035B
        gbc.setState(0x9f97, 0xfa21, 0x87b0, 0x6714, 0xc921, 0x6113, 0x0, 0x1);
        gbc.writeMem(0x9f97, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0xfa21, gbc.sp());
        EXPECT(0x9f99, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9f97));
        EXPECT(0x6a, gbc.readMem(0x9f98));
        // CB 6A 035D
        gbc.setState(0x696f, 0x8899, 0x43d0, 0xfcd9, 0xffc9, 0x49c9, 0x1, 0x0);
        gbc.writeMem(0x696f, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x8899, gbc.sp());
        EXPECT(0x6971, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6A 035E
        gbc.setState(0x6c6f, 0xc4ec, 0x4040, 0x62c6, 0x4097, 0x97c4, 0x1, 0x0);
        gbc.writeMem(0x6c6f, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0xc4ec, gbc.sp());
        EXPECT(0x6c71, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 6A 035F
        gbc.setState(0xa200, 0x882f, 0x9f0, 0xd9d1, 0x774c, 0xd7f8, 0x0, 0x0);
        gbc.writeMem(0xa200, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x882f, gbc.sp());
        EXPECT(0xa202, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa200));
        EXPECT(0x6a, gbc.readMem(0xa201));
        // CB 6A 0360
        gbc.setState(0x62d5, 0xb791, 0xd2b0, 0xf49f, 0x1b4, 0x4b1e, 0x0, 0x1);
        gbc.writeMem(0x62d5, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0xb791, gbc.sp());
        EXPECT(0x62d7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6A 0361
        gbc.setState(0x5d08, 0xbe84, 0x3500, 0x3e47, 0x4c33, 0xedf8, 0x0, 0x0);
        gbc.writeMem(0x5d08, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0xbe84, gbc.sp());
        EXPECT(0x5d0a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 6A 0362
        gbc.setState(0xdf2e, 0xaee7, 0x1ba0, 0x8009, 0x3230, 0x5462, 0x0, 0x0);
        gbc.writeMem(0xdf2e, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0xaee7, gbc.sp());
        EXPECT(0xdf30, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdf2e));
        EXPECT(0x6a, gbc.readMem(0xdf2f));
        // CB 6A 0363
        gbc.setState(0x1108, 0xb840, 0x3630, 0xfff9, 0xb4c0, 0xf054, 0x1, 0x0);
        gbc.writeMem(0x1108, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0xb840, gbc.sp());
        EXPECT(0x110a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6A 0364
        gbc.setState(0x27a8, 0x1389, 0x200, 0xaec0, 0xac67, 0x6e00, 0x0, 0x0);
        gbc.writeMem(0x27a8, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x1389, gbc.sp());
        EXPECT(0x27aa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 6A 0365
        gbc.setState(0x2046, 0x6ad4, 0x6b20, 0x5c7, 0x403d, 0x86d6, 0x0, 0x0);
        gbc.writeMem(0x2046, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x6ad4, gbc.sp());
        EXPECT(0x2048, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 6A 0366
        gbc.setState(0x3845, 0x4262, 0x5090, 0x30e5, 0x4f29, 0xc96, 0x1, 0x1);
        gbc.writeMem(0x3845, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x4262, gbc.sp());
        EXPECT(0x3847, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6A 0367
        gbc.setState(0x8e84, 0x9432, 0x6d30, 0x67e8, 0x1f9d, 0x5d26, 0x0, 0x0);
        gbc.writeMem(0x8e84, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x9432, gbc.sp());
        EXPECT(0x8e86, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8e84));
        EXPECT(0x6a, gbc.readMem(0x8e85));
        // CB 6A 0368
        gbc.setState(0x71f1, 0x944b, 0x4d40, 0xe3e4, 0xcf36, 0x492e, 0x0, 0x1);
        gbc.writeMem(0x71f1, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x944b, gbc.sp());
        EXPECT(0x71f3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 6A 0369
        gbc.setState(0xe7c7, 0xf4f5, 0x4de0, 0x1694, 0x6045, 0xded2, 0x0, 0x0);
        gbc.writeMem(0xe7c7, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0xf4f5, gbc.sp());
        EXPECT(0xe7c9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe7c7));
        EXPECT(0x6a, gbc.readMem(0xe7c8));
        // CB 6A 036A
        gbc.setState(0x7d2a, 0x273c, 0xc650, 0x4747, 0xe932, 0xfee, 0x1, 0x0);
        gbc.writeMem(0x7d2a, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x273c, gbc.sp());
        EXPECT(0x7d2c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6A 036C
        gbc.setState(0x4e79, 0xba36, 0xc440, 0x814a, 0x254b, 0x3fd9, 0x0, 0x1);
        gbc.writeMem(0x4e79, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0xba36, gbc.sp());
        EXPECT(0x4e7b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 6A 036D
        gbc.setState(0x7781, 0x7675, 0x3ab0, 0x2f27, 0xd452, 0xcb76, 0x1, 0x1);
        gbc.writeMem(0x7781, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x7675, gbc.sp());
        EXPECT(0x7783, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6A 036E
        gbc.setState(0xba0c, 0x3254, 0x24c0, 0x7248, 0xeb75, 0x40e6, 0x0, 0x0);
        gbc.writeMem(0xba0c, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x3254, gbc.sp());
        EXPECT(0xba0e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xba0c));
        EXPECT(0x6a, gbc.readMem(0xba0d));
        // CB 6A 036F
        gbc.setState(0x470b, 0x5425, 0xe020, 0x8945, 0x15c2, 0xaf96, 0x0, 0x0);
        gbc.writeMem(0x470b, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x5425, gbc.sp());
        EXPECT(0x470d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 6A 0370
        gbc.setState(0x4c2a, 0x5115, 0xc680, 0x66ad, 0xae32, 0x83bd, 0x1, 0x1);
        gbc.writeMem(0x4c2a, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x5115, gbc.sp());
        EXPECT(0x4c2c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 6A 0371
        gbc.setState(0xea03, 0x7e4c, 0x73b0, 0xbce6, 0xa25f, 0xd279, 0x1, 0x0);
        gbc.writeMem(0xea03, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x7e4c, gbc.sp());
        EXPECT(0xea05, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xea03));
        EXPECT(0x6a, gbc.readMem(0xea04));
        // CB 6A 0372
        gbc.setState(0xc123, 0x240c, 0x8cf0, 0x1574, 0xfafb, 0xb107, 0x1, 0x1);
        gbc.writeMem(0xc123, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x240c, gbc.sp());
        EXPECT(0xc125, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc123));
        EXPECT(0x6a, gbc.readMem(0xc124));
        // CB 6A 0373
        gbc.setState(0x5eb4, 0x8126, 0x4950, 0xcd2b, 0x6c57, 0x45ad, 0x1, 0x1);
        gbc.writeMem(0x5eb4, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x8126, gbc.sp());
        EXPECT(0x5eb6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6A 0374
        gbc.setState(0x34db, 0x2b64, 0x8210, 0x335c, 0xe47b, 0xd4ec, 0x0, 0x0);
        gbc.writeMem(0x34db, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x2b64, gbc.sp());
        EXPECT(0x34dd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6A 0375
        gbc.setState(0x51b9, 0x442c, 0x9480, 0x245, 0x353c, 0x881f, 0x0, 0x1);
        gbc.writeMem(0x51b9, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x442c, gbc.sp());
        EXPECT(0x51bb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 6A 0376
        gbc.setState(0x6830, 0x17f1, 0x65c0, 0x4cf0, 0xb45, 0x38a4, 0x0, 0x0);
        gbc.writeMem(0x6830, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x17f1, gbc.sp());
        EXPECT(0x6832, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 6A 0377
        gbc.setState(0xb6c4, 0xe3d9, 0xdd0, 0xcc9b, 0xa250, 0x7471, 0x1, 0x0);
        gbc.writeMem(0xb6c4, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0xe3d9, gbc.sp());
        EXPECT(0xb6c6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb6c4));
        EXPECT(0x6a, gbc.readMem(0xb6c5));
        // CB 6A 0378
        gbc.setState(0x1931, 0xf24f, 0x76d0, 0x21bd, 0x18f2, 0xc60e, 0x1, 0x1);
        gbc.writeMem(0x1931, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0xf24f, gbc.sp());
        EXPECT(0x1933, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6A 0379
        gbc.setState(0x8082, 0x1ed8, 0xac30, 0xfc4d, 0xbaef, 0x2ef4, 0x0, 0x1);
        gbc.writeMem(0x8082, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x1ed8, gbc.sp());
        EXPECT(0x8084, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8082));
        EXPECT(0x6a, gbc.readMem(0x8083));
        // CB 6A 037A
        gbc.setState(0x873d, 0xbfc4, 0x4000, 0x1890, 0xc770, 0x5dae, 0x1, 0x1);
        gbc.writeMem(0x873d, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0xbfc4, gbc.sp());
        EXPECT(0x873f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x873d));
        EXPECT(0x6a, gbc.readMem(0x873e));
        // CB 6A 037B
        gbc.setState(0x950e, 0x5d0b, 0x99b0, 0x3dd, 0x31d3, 0xf01e, 0x1, 0x0);
        gbc.writeMem(0x950e, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x5d0b, gbc.sp());
        EXPECT(0x9510, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x950e));
        EXPECT(0x6a, gbc.readMem(0x950f));
        // CB 6A 037C
        gbc.setState(0x6eda, 0xa2aa, 0xb240, 0xc8f0, 0xb3ec, 0x9373, 0x1, 0x0);
        gbc.writeMem(0x6eda, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0xa2aa, gbc.sp());
        EXPECT(0x6edc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 6A 037D
        gbc.setState(0x3d1c, 0xdcdf, 0x4c00, 0xf6b3, 0xc26b, 0xc56, 0x1, 0x1);
        gbc.writeMem(0x3d1c, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0xdcdf, gbc.sp());
        EXPECT(0x3d1e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 6A 037E
        gbc.setState(0x8f80, 0xfd3c, 0xbe20, 0xce4a, 0x525b, 0x9bba, 0x1, 0x1);
        gbc.writeMem(0x8f80, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0xfd3c, gbc.sp());
        EXPECT(0x8f82, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8f80));
        EXPECT(0x6a, gbc.readMem(0x8f81));
        // CB 6A 037F
        gbc.setState(0x32b5, 0x75d4, 0x47d0, 0x720d, 0x5191, 0xf98, 0x0, 0x0);
        gbc.writeMem(0x32b5, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x75d4, gbc.sp());
        EXPECT(0x32b7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6A 0380
        gbc.setState(0x6c9d, 0x8290, 0x94c0, 0x4b1b, 0x3aeb, 0xa7e, 0x1, 0x0);
        gbc.writeMem(0x6c9d, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0x8290, gbc.sp());
        EXPECT(0x6c9f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 6A 0381
        gbc.setState(0x9268, 0x550f, 0xc1b0, 0xcb86, 0x710a, 0x50d6, 0x0, 0x1);
        gbc.writeMem(0x9268, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x550f, gbc.sp());
        EXPECT(0x926a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9268));
        EXPECT(0x6a, gbc.readMem(0x9269));
        // CB 6A 0382
        gbc.setState(0x7356, 0xfb63, 0x2870, 0xae49, 0xb01a, 0x5d2, 0x0, 0x1);
        gbc.writeMem(0x7356, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0xfb63, gbc.sp());
        EXPECT(0x7358, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6A 0383
        gbc.setState(0xc5e8, 0x527, 0xe0c0, 0x777b, 0x2de2, 0x5cb5, 0x0, 0x0);
        gbc.writeMem(0xc5e8, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x527, gbc.sp());
        EXPECT(0xc5ea, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc5e8));
        EXPECT(0x6a, gbc.readMem(0xc5e9));
        // CB 6A 0384
        gbc.setState(0x2e58, 0x44ca, 0x4d50, 0xa454, 0xa9ff, 0x7678, 0x1, 0x0);
        gbc.writeMem(0x2e58, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x44ca, gbc.sp());
        EXPECT(0x2e5a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6A 0385
        gbc.setState(0x3d00, 0xc226, 0x5060, 0x7162, 0xff80, 0xb5dd, 0x1, 0x1);
        gbc.writeMem(0x3d00, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0xc226, gbc.sp());
        EXPECT(0x3d02, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 6A 0388
        gbc.setState(0x35f0, 0xd37, 0x21a0, 0x89cd, 0x3773, 0x2577, 0x0, 0x0);
        gbc.writeMem(0x35f0, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0xd37, gbc.sp());
        EXPECT(0x35f2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 6A 0389
        gbc.setState(0xe4e6, 0xa245, 0xbfe0, 0xf86c, 0xf683, 0x87f5, 0x1, 0x0);
        gbc.writeMem(0xe4e6, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0xa245, gbc.sp());
        EXPECT(0xe4e8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe4e6));
        EXPECT(0x6a, gbc.readMem(0xe4e7));
        // CB 6A 038A
        gbc.setState(0x9bb0, 0x7354, 0x9650, 0xec4, 0xacd3, 0xb55d, 0x0, 0x1);
        gbc.writeMem(0x9bb0, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x7354, gbc.sp());
        EXPECT(0x9bb2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9bb0));
        EXPECT(0x6a, gbc.readMem(0x9bb1));
        // CB 6A 038B
        gbc.setState(0x6f2c, 0x577, 0x340, 0xd97f, 0xfd2a, 0x45ed, 0x1, 0x1);
        gbc.writeMem(0x6f2c, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x577, gbc.sp());
        EXPECT(0x6f2e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 6A 038C
        gbc.setState(0x9462, 0x8252, 0x8d0, 0xe0b6, 0x820, 0x81d, 0x0, 0x1);
        gbc.writeMem(0x9462, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x8252, gbc.sp());
        EXPECT(0x9464, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9462));
        EXPECT(0x6a, gbc.readMem(0x9463));
        // CB 6A 038D
        gbc.setState(0x6ab6, 0xe69e, 0x5d10, 0x617, 0xb92d, 0x1251, 0x1, 0x1);
        gbc.writeMem(0x6ab6, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0xe69e, gbc.sp());
        EXPECT(0x6ab8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6A 038E
        gbc.setState(0x40f7, 0x2e5, 0x1260, 0x900b, 0x722e, 0x26, 0x1, 0x1);
        gbc.writeMem(0x40f7, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x2e5, gbc.sp());
        EXPECT(0x40f9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 6A 038F
        gbc.setState(0xd830, 0xfc0d, 0xd1c0, 0x7f5f, 0x6b3a, 0x9020, 0x1, 0x0);
        gbc.writeMem(0xd830, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0xfc0d, gbc.sp());
        EXPECT(0xd832, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd830));
        EXPECT(0x6a, gbc.readMem(0xd831));
        // CB 6A 0390
        gbc.setState(0xe41d, 0x23f7, 0xf210, 0x5512, 0x2398, 0xf853, 0x1, 0x1);
        gbc.writeMem(0xe41d, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x23f7, gbc.sp());
        EXPECT(0xe41f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe41d));
        EXPECT(0x6a, gbc.readMem(0xe41e));
        // CB 6A 0391
        gbc.setState(0xee36, 0x54df, 0xb270, 0x6368, 0xd69d, 0x116c, 0x1, 0x1);
        gbc.writeMem(0xee36, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x54df, gbc.sp());
        EXPECT(0xee38, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xee36));
        EXPECT(0x6a, gbc.readMem(0xee37));
        // CB 6A 0392
        gbc.setState(0xb662, 0x5a2c, 0x1420, 0x8484, 0x8a8f, 0xaed7, 0x1, 0x1);
        gbc.writeMem(0xb662, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0x5a2c, gbc.sp());
        EXPECT(0xb664, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb662));
        EXPECT(0x6a, gbc.readMem(0xb663));
        // CB 6A 0393
        gbc.setState(0xb9de, 0xbd3e, 0x31a0, 0x9e95, 0xee5c, 0xcab9, 0x1, 0x1);
        gbc.writeMem(0xb9de, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0xbd3e, gbc.sp());
        EXPECT(0xb9e0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb9de));
        EXPECT(0x6a, gbc.readMem(0xb9df));
        // CB 6A 0394
        gbc.setState(0x658c, 0x542a, 0xa2f0, 0x728b, 0x8361, 0x2d9e, 0x0, 0x0);
        gbc.writeMem(0x658c, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x542a, gbc.sp());
        EXPECT(0x658e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6A 0395
        gbc.setState(0xee47, 0x3b82, 0xfef0, 0xcf2, 0xcfc0, 0x6c3b, 0x0, 0x1);
        gbc.writeMem(0xee47, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x3b82, gbc.sp());
        EXPECT(0xee49, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xee47));
        EXPECT(0x6a, gbc.readMem(0xee48));
        // CB 6A 0396
        gbc.setState(0x39de, 0x5213, 0xcde0, 0x9c31, 0x1732, 0xbab6, 0x1, 0x1);
        gbc.writeMem(0x39de, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x5213, gbc.sp());
        EXPECT(0x39e0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 6A 0397
        gbc.setState(0xc656, 0xd895, 0x28d0, 0xa69, 0xbd77, 0xa731, 0x0, 0x0);
        gbc.writeMem(0xc656, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0xd895, gbc.sp());
        EXPECT(0xc658, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc656));
        EXPECT(0x6a, gbc.readMem(0xc657));
        // CB 6A 0398
        gbc.setState(0xecdd, 0x6ee0, 0xf610, 0x6fa3, 0xcc69, 0xfd58, 0x0, 0x1);
        gbc.writeMem(0xecdd, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x6ee0, gbc.sp());
        EXPECT(0xecdf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xecdd));
        EXPECT(0x6a, gbc.readMem(0xecde));
        // CB 6A 0399
        gbc.setState(0xae01, 0x8763, 0x8b50, 0xd152, 0x5a7d, 0x7e9a, 0x0, 0x1);
        gbc.writeMem(0xae01, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x8763, gbc.sp());
        EXPECT(0xae03, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xae01));
        EXPECT(0x6a, gbc.readMem(0xae02));
        // CB 6A 039A
        gbc.setState(0xe083, 0xe520, 0x1ed0, 0x97ae, 0x6faa, 0xf3df, 0x1, 0x1);
        gbc.writeMem(0xe083, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0xe520, gbc.sp());
        EXPECT(0xe085, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe083));
        EXPECT(0x6a, gbc.readMem(0xe084));
        // CB 6A 039B
        gbc.setState(0xe1a4, 0x9c2f, 0x83c0, 0xfac5, 0xc23d, 0x9c3e, 0x1, 0x0);
        gbc.writeMem(0xe1a4, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x9c2f, gbc.sp());
        EXPECT(0xe1a6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe1a4));
        EXPECT(0x6a, gbc.readMem(0xe1a5));
        // CB 6A 039C
        gbc.setState(0x88d4, 0xad9f, 0x7240, 0x4e00, 0xc224, 0xd797, 0x0, 0x0);
        gbc.writeMem(0x88d4, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0xad9f, gbc.sp());
        EXPECT(0x88d6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x88d4));
        EXPECT(0x6a, gbc.readMem(0x88d5));
        // CB 6A 039D
        gbc.setState(0x9f82, 0x75b5, 0x9260, 0xeacc, 0x92c, 0x56d, 0x1, 0x1);
        gbc.writeMem(0x9f82, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x75b5, gbc.sp());
        EXPECT(0x9f84, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9f82));
        EXPECT(0x6a, gbc.readMem(0x9f83));
        // CB 6A 039E
        gbc.setState(0x51d7, 0xf69a, 0x7190, 0x9092, 0x7ac0, 0xbe9e, 0x1, 0x0);
        gbc.writeMem(0x51d7, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0xf69a, gbc.sp());
        EXPECT(0x51d9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6A 039F
        gbc.setState(0x8175, 0x8ec1, 0x84b0, 0xa7c, 0x5fee, 0x28fd, 0x1, 0x0);
        gbc.writeMem(0x8175, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x8ec1, gbc.sp());
        EXPECT(0x8177, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8175));
        EXPECT(0x6a, gbc.readMem(0x8176));
        // CB 6A 03A0
        gbc.setState(0x571b, 0xd97c, 0x33b0, 0x67f3, 0x7ce5, 0x4bc, 0x1, 0x1);
        gbc.writeMem(0x571b, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0xd97c, gbc.sp());
        EXPECT(0x571d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6A 03A1
        gbc.setState(0x5c6f, 0x6783, 0x3100, 0x7b0c, 0xf616, 0x3d60, 0x1, 0x0);
        gbc.writeMem(0x5c6f, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x6783, gbc.sp());
        EXPECT(0x5c71, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 6A 03A2
        gbc.setState(0xc9e8, 0xacf7, 0xe140, 0x202f, 0xe9e4, 0xb9ea, 0x0, 0x1);
        gbc.writeMem(0xc9e8, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0xacf7, gbc.sp());
        EXPECT(0xc9ea, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc9e8));
        EXPECT(0x6a, gbc.readMem(0xc9e9));
        // CB 6A 03A3
        gbc.setState(0x557a, 0x38a3, 0xd6c0, 0xe8fe, 0x3ff1, 0x241e, 0x0, 0x0);
        gbc.writeMem(0x557a, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x38a3, gbc.sp());
        EXPECT(0x557c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 6A 03A4
        gbc.setState(0x269b, 0x248f, 0xdd50, 0x6198, 0x4438, 0x9b1c, 0x0, 0x1);
        gbc.writeMem(0x269b, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x248f, gbc.sp());
        EXPECT(0x269d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6A 03A5
        gbc.setState(0x626a, 0x989c, 0x390, 0xa051, 0xa7c5, 0xa539, 0x0, 0x0);
        gbc.writeMem(0x626a, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x989c, gbc.sp());
        EXPECT(0x626c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6A 03A6
        gbc.setState(0x13c2, 0xc0e5, 0xbf0, 0x67aa, 0x6738, 0xd72d, 0x1, 0x1);
        gbc.writeMem(0x13c2, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0xc0e5, gbc.sp());
        EXPECT(0x13c4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6A 03A7
        gbc.setState(0x7b8a, 0x4a60, 0xd710, 0xc0e1, 0xb45a, 0x4a60, 0x1, 0x0);
        gbc.writeMem(0x7b8a, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x4a60, gbc.sp());
        EXPECT(0x7b8c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6A 03A8
        gbc.setState(0xaff7, 0x8e67, 0xf8c0, 0xf2d5, 0xd16a, 0x51c1, 0x0, 0x0);
        gbc.writeMem(0xaff7, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x8e67, gbc.sp());
        EXPECT(0xaff9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaff7));
        EXPECT(0x6a, gbc.readMem(0xaff8));
        // CB 6A 03A9
        gbc.setState(0xe9bc, 0x902e, 0x2d00, 0xe78, 0x57d2, 0x5b42, 0x0, 0x1);
        gbc.writeMem(0xe9bc, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x902e, gbc.sp());
        EXPECT(0xe9be, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe9bc));
        EXPECT(0x6a, gbc.readMem(0xe9bd));
        // CB 6A 03AA
        gbc.setState(0xcf6, 0x5db2, 0x6ca0, 0x654b, 0xc2da, 0xb99d, 0x0, 0x0);
        gbc.writeMem(0xcf6, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x5db2, gbc.sp());
        EXPECT(0xcf8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 6A 03AB
        gbc.setState(0xb6b9, 0x3c3d, 0x12c0, 0x907, 0x773d, 0x3f28, 0x1, 0x1);
        gbc.writeMem(0xb6b9, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x3c3d, gbc.sp());
        EXPECT(0xb6bb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb6b9));
        EXPECT(0x6a, gbc.readMem(0xb6ba));
        // CB 6A 03AC
        gbc.setState(0xdf97, 0x7aac, 0x35f0, 0xba76, 0x6a9c, 0x832e, 0x0, 0x1);
        gbc.writeMem(0xdf97, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x7aac, gbc.sp());
        EXPECT(0xdf99, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdf97));
        EXPECT(0x6a, gbc.readMem(0xdf98));
        // CB 6A 03AD
        gbc.setState(0x359d, 0x3d45, 0xa190, 0xdd45, 0xd683, 0xbe64, 0x0, 0x0);
        gbc.writeMem(0x359d, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x3d45, gbc.sp());
        EXPECT(0x359f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6A 03AE
        gbc.setState(0xa667, 0xbfd6, 0xefb0, 0x4e28, 0xa2a6, 0x3181, 0x0, 0x1);
        gbc.writeMem(0xa667, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0xbfd6, gbc.sp());
        EXPECT(0xa669, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa667));
        EXPECT(0x6a, gbc.readMem(0xa668));
        // CB 6A 03AF
        gbc.setState(0x8643, 0x378e, 0x5dc0, 0xd47b, 0x64b, 0xc60a, 0x1, 0x0);
        gbc.writeMem(0x8643, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x378e, gbc.sp());
        EXPECT(0x8645, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8643));
        EXPECT(0x6a, gbc.readMem(0x8644));
        // CB 6A 03B0
        gbc.setState(0x1202, 0x78a0, 0xc7c0, 0x923b, 0x27a3, 0xd705, 0x0, 0x1);
        gbc.writeMem(0x1202, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x78a0, gbc.sp());
        EXPECT(0x1204, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 6A 03B1
        gbc.setState(0xecea, 0xf7a0, 0x7090, 0x1696, 0xa576, 0x284d, 0x1, 0x0);
        gbc.writeMem(0xecea, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0xf7a0, gbc.sp());
        EXPECT(0xecec, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xecea));
        EXPECT(0x6a, gbc.readMem(0xeceb));
        // CB 6A 03B2
        gbc.setState(0x3606, 0x44e1, 0xd6b0, 0x3f64, 0x28e5, 0x7a73, 0x0, 0x1);
        gbc.writeMem(0x3606, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x44e1, gbc.sp());
        EXPECT(0x3608, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6A 03B3
        gbc.setState(0x6fd, 0xe2fd, 0x13d0, 0xbef4, 0xaffb, 0xc6f0, 0x0, 0x1);
        gbc.writeMem(0x6fd, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0xe2fd, gbc.sp());
        EXPECT(0x6ff, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6A 03B4
        gbc.setState(0x4e58, 0x73ef, 0x9910, 0x271f, 0x89f7, 0x730b, 0x1, 0x0);
        gbc.writeMem(0x4e58, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x73ef, gbc.sp());
        EXPECT(0x4e5a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6A 03B5
        gbc.setState(0xb94b, 0x1cf, 0x9db0, 0xf45f, 0x1ea, 0x9c17, 0x0, 0x1);
        gbc.writeMem(0xb94b, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x1cf, gbc.sp());
        EXPECT(0xb94d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb94b));
        EXPECT(0x6a, gbc.readMem(0xb94c));
        // CB 6A 03B6
        gbc.setState(0x9d68, 0x2d6e, 0xc850, 0x41e6, 0x366a, 0xc8b7, 0x1, 0x1);
        gbc.writeMem(0x9d68, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x2d6e, gbc.sp());
        EXPECT(0x9d6a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9d68));
        EXPECT(0x6a, gbc.readMem(0x9d69));
        // CB 6A 03B7
        gbc.setState(0x8465, 0xc9a, 0xa980, 0x1426, 0xbbf3, 0x6e9f, 0x0, 0x0);
        gbc.writeMem(0x8465, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0xc9a, gbc.sp());
        EXPECT(0x8467, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8465));
        EXPECT(0x6a, gbc.readMem(0x8466));
        // CB 6A 03B9
        gbc.setState(0xa9e2, 0x1b26, 0x15f0, 0xd51c, 0xfded, 0x5a, 0x0, 0x1);
        gbc.writeMem(0xa9e2, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x1b26, gbc.sp());
        EXPECT(0xa9e4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa9e2));
        EXPECT(0x6a, gbc.readMem(0xa9e3));
        // CB 6A 03BA
        gbc.setState(0x4b93, 0x8c1d, 0xb200, 0x783b, 0xcb4e, 0x339f, 0x1, 0x1);
        gbc.writeMem(0x4b93, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x8c1d, gbc.sp());
        EXPECT(0x4b95, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 6A 03BB
        gbc.setState(0x3f0d, 0x2510, 0x86d0, 0xc594, 0x549e, 0xe047, 0x1, 0x0);
        gbc.writeMem(0x3f0d, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x2510, gbc.sp());
        EXPECT(0x3f0f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6A 03BC
        gbc.setState(0x1f6, 0x801e, 0xd7b0, 0xed12, 0x818f, 0x1f08, 0x1, 0x1);
        gbc.writeMem(0x1f6, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x801e, gbc.sp());
        EXPECT(0x1f8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6A 03BD
        gbc.setState(0x7b9, 0x9819, 0xc120, 0x29b0, 0xf56a, 0x2a4a, 0x1, 0x0);
        gbc.writeMem(0x7b9, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x9819, gbc.sp());
        EXPECT(0x7bb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 6A 03BE
        gbc.setState(0xa34d, 0xa050, 0x4c80, 0x8dfc, 0x96f3, 0xc8a8, 0x0, 0x0);
        gbc.writeMem(0xa34d, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0xa050, gbc.sp());
        EXPECT(0xa34f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa34d));
        EXPECT(0x6a, gbc.readMem(0xa34e));
        // CB 6A 03BF
        gbc.setState(0xa7b6, 0x32ec, 0x1680, 0xbd69, 0xdb0d, 0x404e, 0x1, 0x0);
        gbc.writeMem(0xa7b6, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x32ec, gbc.sp());
        EXPECT(0xa7b8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa7b6));
        EXPECT(0x6a, gbc.readMem(0xa7b7));
        // CB 6A 03C0
        gbc.setState(0x718e, 0x78c3, 0xe760, 0x436c, 0x56e4, 0xd086, 0x0, 0x0);
        gbc.writeMem(0x718e, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x78c3, gbc.sp());
        EXPECT(0x7190, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 6A 03C1
        gbc.setState(0x581c, 0xee65, 0x8740, 0x3e0e, 0x951f, 0xc334, 0x0, 0x1);
        gbc.writeMem(0x581c, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0xee65, gbc.sp());
        EXPECT(0x581e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 6A 03C2
        gbc.setState(0x730, 0x38f1, 0x720, 0xf5c8, 0x891b, 0x66ab, 0x0, 0x0);
        gbc.writeMem(0x730, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x38f1, gbc.sp());
        EXPECT(0x732, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 6A 03C3
        gbc.setState(0xd106, 0xe87, 0x5330, 0x68be, 0x853d, 0x542f, 0x0, 0x1);
        gbc.writeMem(0xd106, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0xe87, gbc.sp());
        EXPECT(0xd108, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd106));
        EXPECT(0x6a, gbc.readMem(0xd107));
        // CB 6A 03C4
        gbc.setState(0x8638, 0xd33d, 0x51d0, 0xa623, 0xea3, 0xa2a0, 0x1, 0x1);
        gbc.writeMem(0x8638, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0xd33d, gbc.sp());
        EXPECT(0x863a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8638));
        EXPECT(0x6a, gbc.readMem(0x8639));
        // CB 6A 03C5
        gbc.setState(0x4199, 0xbf99, 0x61d0, 0x7d71, 0x37d6, 0xabc7, 0x1, 0x0);
        gbc.writeMem(0x4199, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0xbf99, gbc.sp());
        EXPECT(0x419b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6A 03C6
        gbc.setState(0xae80, 0x75a6, 0x5bd0, 0x58ec, 0x3085, 0x7fa7, 0x0, 0x1);
        gbc.writeMem(0xae80, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x75a6, gbc.sp());
        EXPECT(0xae82, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xae80));
        EXPECT(0x6a, gbc.readMem(0xae81));
        // CB 6A 03C7
        gbc.setState(0xbecb, 0x55f5, 0x10f0, 0x9897, 0xf2dc, 0xd378, 0x0, 0x1);
        gbc.writeMem(0xbecb, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x55f5, gbc.sp());
        EXPECT(0xbecd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbecb));
        EXPECT(0x6a, gbc.readMem(0xbecc));
        // CB 6A 03C8
        gbc.setState(0xf88, 0xc04f, 0x530, 0x5673, 0xd61a, 0x3ecc, 0x1, 0x0);
        gbc.writeMem(0xf88, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0xc04f, gbc.sp());
        EXPECT(0xf8a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6A 03C9
        gbc.setState(0xc4df, 0x10d0, 0xd3e0, 0xacef, 0xb428, 0x4275, 0x1, 0x1);
        gbc.writeMem(0xc4df, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x10d0, gbc.sp());
        EXPECT(0xc4e1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc4df));
        EXPECT(0x6a, gbc.readMem(0xc4e0));
        // CB 6A 03CA
        gbc.setState(0xd3f2, 0xf240, 0x65d0, 0x2e58, 0xa5be, 0xab8, 0x0, 0x1);
        gbc.writeMem(0xd3f2, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0xf240, gbc.sp());
        EXPECT(0xd3f4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd3f2));
        EXPECT(0x6a, gbc.readMem(0xd3f3));
        // CB 6A 03CB
        gbc.setState(0x3875, 0x7f77, 0x8810, 0xecb1, 0x4772, 0x8be5, 0x0, 0x0);
        gbc.writeMem(0x3875, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x7f77, gbc.sp());
        EXPECT(0x3877, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6A 03CC
        gbc.setState(0xabba, 0xbbce, 0xebb0, 0xc569, 0xdd24, 0x2845, 0x1, 0x1);
        gbc.writeMem(0xabba, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0xbbce, gbc.sp());
        EXPECT(0xabbc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xabba));
        EXPECT(0x6a, gbc.readMem(0xabbb));
        // CB 6A 03CD
        gbc.setState(0xec47, 0xb126, 0x6d20, 0x6c97, 0x87e, 0xc8a4, 0x1, 0x0);
        gbc.writeMem(0xec47, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0xb126, gbc.sp());
        EXPECT(0xec49, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xec47));
        EXPECT(0x6a, gbc.readMem(0xec48));
        // CB 6A 03CE
        gbc.setState(0x758b, 0xf619, 0x6cb0, 0xbbd1, 0x84c3, 0x26b8, 0x1, 0x1);
        gbc.writeMem(0x758b, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0xf619, gbc.sp());
        EXPECT(0x758d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6A 03CF
        gbc.setState(0x69d, 0x8a14, 0xec60, 0x254, 0x7ff7, 0x3395, 0x1, 0x1);
        gbc.writeMem(0x69d, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x8a14, gbc.sp());
        EXPECT(0x69f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 6A 03D0
        gbc.setState(0xcd4d, 0x3efa, 0x38c0, 0xcc38, 0x2edd, 0xa078, 0x1, 0x1);
        gbc.writeMem(0xcd4d, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x3efa, gbc.sp());
        EXPECT(0xcd4f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcd4d));
        EXPECT(0x6a, gbc.readMem(0xcd4e));
        // CB 6A 03D1
        gbc.setState(0x58c0, 0x70c5, 0x1ad0, 0x19c9, 0x1444, 0xf485, 0x0, 0x1);
        gbc.writeMem(0x58c0, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x70c5, gbc.sp());
        EXPECT(0x58c2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6A 03D2
        gbc.setState(0xeeed, 0xebe3, 0xfc0, 0x1d01, 0xbb1f, 0x9ad0, 0x0, 0x0);
        gbc.writeMem(0xeeed, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0xebe3, gbc.sp());
        EXPECT(0xeeef, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeeed));
        EXPECT(0x6a, gbc.readMem(0xeeee));
        // CB 6A 03D3
        gbc.setState(0x1cc6, 0x4d6d, 0xacb0, 0x5356, 0xb24e, 0x1e73, 0x0, 0x0);
        gbc.writeMem(0x1cc6, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x4d6d, gbc.sp());
        EXPECT(0x1cc8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6A 03D4
        gbc.setState(0x8eae, 0x484e, 0xd860, 0x4496, 0x9712, 0x98a1, 0x1, 0x0);
        gbc.writeMem(0x8eae, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x484e, gbc.sp());
        EXPECT(0x8eb0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8eae));
        EXPECT(0x6a, gbc.readMem(0x8eaf));
        // CB 6A 03D5
        gbc.setState(0x5680, 0x8bd2, 0xfc90, 0x670f, 0x3137, 0x2b4f, 0x0, 0x0);
        gbc.writeMem(0x5680, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x8bd2, gbc.sp());
        EXPECT(0x5682, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6A 03D6
        gbc.setState(0x6092, 0x957c, 0xf150, 0xd417, 0xf76e, 0xeb52, 0x1, 0x0);
        gbc.writeMem(0x6092, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x957c, gbc.sp());
        EXPECT(0x6094, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6A 03D7
        gbc.setState(0x670, 0x5852, 0x92a0, 0xe254, 0x653d, 0x48f8, 0x0, 0x0);
        gbc.writeMem(0x670, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x5852, gbc.sp());
        EXPECT(0x672, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 6A 03D8
        gbc.setState(0xa5e3, 0x79b0, 0xec50, 0x824f, 0xfae0, 0xb80, 0x0, 0x1);
        gbc.writeMem(0xa5e3, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x79b0, gbc.sp());
        EXPECT(0xa5e5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa5e3));
        EXPECT(0x6a, gbc.readMem(0xa5e4));
        // CB 6A 03D9
        gbc.setState(0xb480, 0x1e8e, 0x5c50, 0x68d0, 0x6d3, 0x510a, 0x1, 0x0);
        gbc.writeMem(0xb480, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x1e8e, gbc.sp());
        EXPECT(0xb482, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb480));
        EXPECT(0x6a, gbc.readMem(0xb481));
        // CB 6A 03DA
        gbc.setState(0x8efc, 0x6eb0, 0xa1d0, 0x74b2, 0x4acf, 0xa462, 0x0, 0x1);
        gbc.writeMem(0x8efc, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x6eb0, gbc.sp());
        EXPECT(0x8efe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8efc));
        EXPECT(0x6a, gbc.readMem(0x8efd));
        // CB 6A 03DB
        gbc.setState(0x3008, 0x70ed, 0xd6a0, 0x8e94, 0x47e1, 0x118f, 0x0, 0x1);
        gbc.writeMem(0x3008, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x70ed, gbc.sp());
        EXPECT(0x300a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 6A 03DC
        gbc.setState(0xd32b, 0x22ad, 0x5ad0, 0x9ed2, 0x9069, 0x6b0c, 0x0, 0x0);
        gbc.writeMem(0xd32b, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x22ad, gbc.sp());
        EXPECT(0xd32d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd32b));
        EXPECT(0x6a, gbc.readMem(0xd32c));
        // CB 6A 03DD
        gbc.setState(0x3a82, 0xa622, 0xecc0, 0x3e6b, 0xe2f0, 0x89ea, 0x1, 0x0);
        gbc.writeMem(0x3a82, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0xa622, gbc.sp());
        EXPECT(0x3a84, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 6A 03DE
        gbc.setState(0xd5d7, 0xf80b, 0x6d20, 0x80d, 0x15d1, 0xb546, 0x1, 0x0);
        gbc.writeMem(0xd5d7, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0xf80b, gbc.sp());
        EXPECT(0xd5d9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd5d7));
        EXPECT(0x6a, gbc.readMem(0xd5d8));
        // CB 6A 03DF
        gbc.setState(0x4567, 0x88a5, 0x95f0, 0xd39e, 0x82b5, 0xdc0b, 0x1, 0x1);
        gbc.writeMem(0x4567, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x88a5, gbc.sp());
        EXPECT(0x4569, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6A 03E0
        gbc.setState(0xbd60, 0x26bc, 0x6d10, 0x464c, 0x37cf, 0x1a32, 0x1, 0x1);
        gbc.writeMem(0xbd60, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x26bc, gbc.sp());
        EXPECT(0xbd62, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbd60));
        EXPECT(0x6a, gbc.readMem(0xbd61));
        // CB 6A 03E1
        gbc.setState(0x4f7d, 0x83f3, 0x7570, 0xa82d, 0x4d96, 0xac7d, 0x0, 0x0);
        gbc.writeMem(0x4f7d, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x83f3, gbc.sp());
        EXPECT(0x4f7f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6A 03E3
        gbc.setState(0x71c0, 0xa7ed, 0x5890, 0x4fdc, 0x97f3, 0xf5ed, 0x0, 0x1);
        gbc.writeMem(0x71c0, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0xa7ed, gbc.sp());
        EXPECT(0x71c2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6A 03E4
        gbc.setState(0xb2ff, 0xfe0d, 0x84f0, 0x4a00, 0x496b, 0x65e7, 0x0, 0x1);
        gbc.writeMem(0xb2ff, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0xfe0d, gbc.sp());
        EXPECT(0xb301, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb2ff));
        EXPECT(0x6a, gbc.readMem(0xb300));
        // CB 6A 03E5
        gbc.setState(0x2632, 0xc0e, 0xc720, 0x982c, 0x8ada, 0xa285, 0x0, 0x0);
        gbc.writeMem(0x2632, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0xc0e, gbc.sp());
        EXPECT(0x2634, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 6A 03E6
        gbc.setState(0xa5ae, 0x1f7c, 0x2d00, 0x8b99, 0xd9a7, 0xe25a, 0x0, 0x0);
        gbc.writeMem(0xa5ae, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x1f7c, gbc.sp());
        EXPECT(0xa5b0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa5ae));
        EXPECT(0x6a, gbc.readMem(0xa5af));
        // CB 6A 03E7
        gbc.setState(0x10fb, 0x2948, 0x2e30, 0xe0f, 0x3089, 0xf831, 0x1, 0x1);
        gbc.writeMem(0x10fb, { 0xcb, 0x6a });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x2948, gbc.sp());
        EXPECT(0x10fd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
    }
