    TEST(gbcemu, opcode_cb_43) {
        GBCEmu gbc{};
        uint8_t cartridge[0x8000];
        cartridge[0x149] = 0x02; // 8kb external RAM
        gbc.loadCartridge(new FlashGamePak(cartridge));
        // CB 43 0000
        gbc.setState(0x8060, 0x33ad, 0xa950, 0x779f, 0xce2a, 0xe4f5, 0x1, 0x0);
        gbc.writeMem(0x8060, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x33ad, gbc.sp());
        EXPECT(0x8062, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8060));
        EXPECT(0x43, gbc.readMem(0x8061));
        // CB 43 0001
        gbc.setState(0x78ed, 0x2ee3, 0x3f90, 0x20cb, 0x753b, 0x8d6e, 0x0, 0x0);
        gbc.writeMem(0x78ed, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x2ee3, gbc.sp());
        EXPECT(0x78ef, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 43 0003
        gbc.setState(0x78f6, 0x94fa, 0x3890, 0xea2, 0xa867, 0x329b, 0x0, 0x1);
        gbc.writeMem(0x78f6, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x94fa, gbc.sp());
        EXPECT(0x78f8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 43 0004
        gbc.setState(0x9386, 0x9236, 0x4fd0, 0x3b51, 0xfb79, 0x74b8, 0x0, 0x1);
        gbc.writeMem(0x9386, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x9236, gbc.sp());
        EXPECT(0x9388, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9386));
        EXPECT(0x43, gbc.readMem(0x9387));
        // CB 43 0006
        gbc.setState(0x153a, 0xe439, 0xd4a0, 0xbe6c, 0x92b8, 0xaef4, 0x0, 0x1);
        gbc.writeMem(0x153a, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0xe439, gbc.sp());
        EXPECT(0x153c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 43 0007
        gbc.setState(0x4a56, 0xc945, 0xcba0, 0x846a, 0x6c9d, 0x5d4, 0x1, 0x1);
        gbc.writeMem(0x4a56, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0xc945, gbc.sp());
        EXPECT(0x4a58, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 43 0008
        gbc.setState(0x5de6, 0x16de, 0xe9f0, 0x4363, 0xb728, 0x8b16, 0x1, 0x1);
        gbc.writeMem(0x5de6, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x16de, gbc.sp());
        EXPECT(0x5de8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 43 0009
        gbc.setState(0x9140, 0x9563, 0x8bf0, 0xd1e6, 0x1bbf, 0x3dc0, 0x1, 0x0);
        gbc.writeMem(0x9140, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x9563, gbc.sp());
        EXPECT(0x9142, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9140));
        EXPECT(0x43, gbc.readMem(0x9141));
        // CB 43 000A
        gbc.setState(0x7216, 0x6044, 0x4e70, 0x9324, 0xc0d7, 0xd146, 0x0, 0x0);
        gbc.writeMem(0x7216, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x6044, gbc.sp());
        EXPECT(0x7218, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 43 000B
        gbc.setState(0xe93b, 0xb14f, 0x4ec0, 0xc1a2, 0x6bde, 0x9136, 0x0, 0x1);
        gbc.writeMem(0xe93b, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0xb14f, gbc.sp());
        EXPECT(0xe93d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe93b));
        EXPECT(0x43, gbc.readMem(0xe93c));
        // CB 43 000C
        gbc.setState(0x64e0, 0x4927, 0x6b0, 0xb44c, 0x514e, 0xc02b, 0x0, 0x1);
        gbc.writeMem(0x64e0, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x4927, gbc.sp());
        EXPECT(0x64e2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 43 000D
        gbc.setState(0x7171, 0x6074, 0xa750, 0x7266, 0xcbc4, 0x3e4a, 0x0, 0x1);
        gbc.writeMem(0x7171, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x6074, gbc.sp());
        EXPECT(0x7173, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 43 000E
        gbc.setState(0x4d14, 0xa1ad, 0x4360, 0x1fff, 0x5802, 0xabce, 0x1, 0x0);
        gbc.writeMem(0x4d14, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0xa1ad, gbc.sp());
        EXPECT(0x4d16, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 43 000F
        gbc.setState(0xc4bd, 0x8e08, 0x2b30, 0x35e, 0x6c76, 0x4d8d, 0x0, 0x1);
        gbc.writeMem(0xc4bd, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x8e08, gbc.sp());
        EXPECT(0xc4bf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc4bd));
        EXPECT(0x43, gbc.readMem(0xc4be));
        // CB 43 0010
        gbc.setState(0x9541, 0x3cdc, 0x1dc0, 0x8df1, 0xd1d3, 0x9760, 0x0, 0x1);
        gbc.writeMem(0x9541, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x3cdc, gbc.sp());
        EXPECT(0x9543, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9541));
        EXPECT(0x43, gbc.readMem(0x9542));
        // CB 43 0011
        gbc.setState(0xb5b, 0xd7a1, 0xb760, 0x33db, 0x5395, 0x4b7, 0x1, 0x0);
        gbc.writeMem(0xb5b, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0xd7a1, gbc.sp());
        EXPECT(0xb5d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 43 0012
        gbc.setState(0xd8ba, 0x71a5, 0xe50, 0x386, 0xfc7c, 0xcd4c, 0x0, 0x0);
        gbc.writeMem(0xd8ba, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x71a5, gbc.sp());
        EXPECT(0xd8bc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd8ba));
        EXPECT(0x43, gbc.readMem(0xd8bb));
        // CB 43 0013
        gbc.setState(0x4b57, 0x98d, 0x2f50, 0x8487, 0xac86, 0x71de, 0x1, 0x0);
        gbc.writeMem(0x4b57, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x98d, gbc.sp());
        EXPECT(0x4b59, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 43 0015
        gbc.setState(0xa09c, 0x3516, 0x570, 0x4fd3, 0xf272, 0xa16, 0x1, 0x1);
        gbc.writeMem(0xa09c, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x3516, gbc.sp());
        EXPECT(0xa09e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa09c));
        EXPECT(0x43, gbc.readMem(0xa09d));
        // CB 43 0016
        gbc.setState(0x2f65, 0xfa88, 0x5c10, 0x5031, 0xe25, 0x8f4c, 0x1, 0x1);
        gbc.writeMem(0x2f65, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0xfa88, gbc.sp());
        EXPECT(0x2f67, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 43 0017
        gbc.setState(0x93b2, 0xc8a9, 0x3870, 0xc55f, 0xbbf7, 0xb27b, 0x1, 0x1);
        gbc.writeMem(0x93b2, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0xc8a9, gbc.sp());
        EXPECT(0x93b4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x93b2));
        EXPECT(0x43, gbc.readMem(0x93b3));
        // CB 43 0018
        gbc.setState(0x49d5, 0x2835, 0x1a80, 0x9c01, 0x74cf, 0xe980, 0x0, 0x0);
        gbc.writeMem(0x49d5, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x2835, gbc.sp());
        EXPECT(0x49d7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 43 001A
        gbc.setState(0x723c, 0x1744, 0xb9c0, 0xbf85, 0xc358, 0x5158, 0x0, 0x1);
        gbc.writeMem(0x723c, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x1744, gbc.sp());
        EXPECT(0x723e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 43 001B
        gbc.setState(0xa2d3, 0x2205, 0x540, 0xaeb7, 0x5aad, 0xd483, 0x1, 0x1);
        gbc.writeMem(0xa2d3, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x2205, gbc.sp());
        EXPECT(0xa2d5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa2d3));
        EXPECT(0x43, gbc.readMem(0xa2d4));
        // CB 43 001C
        gbc.setState(0xc4ae, 0x1b7e, 0x9c60, 0x25de, 0xd330, 0x2e5d, 0x0, 0x0);
        gbc.writeMem(0xc4ae, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x1b7e, gbc.sp());
        EXPECT(0xc4b0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc4ae));
        EXPECT(0x43, gbc.readMem(0xc4af));
        // CB 43 001D
        gbc.setState(0xbe80, 0x9714, 0x7210, 0xdc79, 0xcc9a, 0x5b0, 0x0, 0x1);
        gbc.writeMem(0xbe80, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x9714, gbc.sp());
        EXPECT(0xbe82, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbe80));
        EXPECT(0x43, gbc.readMem(0xbe81));
        // CB 43 001E
        gbc.setState(0x420d, 0xe333, 0xb110, 0xb30b, 0x65b9, 0x44d4, 0x0, 0x1);
        gbc.writeMem(0x420d, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0xe333, gbc.sp());
        EXPECT(0x420f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 43 001F
        gbc.setState(0x328, 0x4f0d, 0x3c80, 0xde8, 0x486c, 0x2141, 0x1, 0x1);
        gbc.writeMem(0x328, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x4f0d, gbc.sp());
        EXPECT(0x32a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 43 0020
        gbc.setState(0xa9db, 0x4ec4, 0x1520, 0x8ca1, 0xba52, 0x5199, 0x0, 0x1);
        gbc.writeMem(0xa9db, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x4ec4, gbc.sp());
        EXPECT(0xa9dd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa9db));
        EXPECT(0x43, gbc.readMem(0xa9dc));
        // CB 43 0021
        gbc.setState(0xb60e, 0xb1c4, 0xada0, 0x4f98, 0x9e05, 0x37ce, 0x1, 0x1);
        gbc.writeMem(0xb60e, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0xb1c4, gbc.sp());
        EXPECT(0xb610, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb60e));
        EXPECT(0x43, gbc.readMem(0xb60f));
        // CB 43 0022
        gbc.setState(0x39b6, 0xcfb6, 0x760, 0x9461, 0x99dc, 0xc813, 0x0, 0x0);
        gbc.writeMem(0x39b6, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0xcfb6, gbc.sp());
        EXPECT(0x39b8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 43 0023
        gbc.setState(0x9dce, 0xbf70, 0x33c0, 0x3718, 0x68e7, 0x82c5, 0x1, 0x1);
        gbc.writeMem(0x9dce, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0xbf70, gbc.sp());
        EXPECT(0x9dd0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9dce));
        EXPECT(0x43, gbc.readMem(0x9dcf));
        // CB 43 0024
        gbc.setState(0x224, 0xa0f1, 0x3eb0, 0x2b23, 0x12fd, 0x655, 0x0, 0x0);
        gbc.writeMem(0x224, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0xa0f1, gbc.sp());
        EXPECT(0x226, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 43 0025
        gbc.setState(0x625e, 0xa845, 0xe950, 0x1f52, 0x10ca, 0xc156, 0x1, 0x0);
        gbc.writeMem(0x625e, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0xa845, gbc.sp());
        EXPECT(0x6260, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 43 0026
        gbc.setState(0xc145, 0x40da, 0x1680, 0xd8ab, 0xd7c9, 0x5071, 0x0, 0x0);
        gbc.writeMem(0xc145, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x40da, gbc.sp());
        EXPECT(0xc147, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc145));
        EXPECT(0x43, gbc.readMem(0xc146));
        // CB 43 0027
        gbc.setState(0xa49b, 0x69c4, 0xc920, 0x36e3, 0xc961, 0xe297, 0x0, 0x0);
        gbc.writeMem(0xa49b, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0x69c4, gbc.sp());
        EXPECT(0xa49d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa49b));
        EXPECT(0x43, gbc.readMem(0xa49c));
        // CB 43 0028
        gbc.setState(0x25e6, 0xba60, 0xdc70, 0xc9e3, 0x629c, 0x2be5, 0x0, 0x1);
        gbc.writeMem(0x25e6, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0xba60, gbc.sp());
        EXPECT(0x25e8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 43 0029
        gbc.setState(0xb536, 0xe88b, 0x7580, 0x1752, 0xdb0e, 0xab9f, 0x1, 0x1);
        gbc.writeMem(0xb536, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0xe88b, gbc.sp());
        EXPECT(0xb538, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb536));
        EXPECT(0x43, gbc.readMem(0xb537));
        // CB 43 002A
        gbc.setState(0x3578, 0xe0b3, 0xf0e0, 0x5ee6, 0xc770, 0x6c0b, 0x1, 0x0);
        gbc.writeMem(0x3578, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0xe0b3, gbc.sp());
        EXPECT(0x357a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 43 002B
        gbc.setState(0x3bf0, 0x22b7, 0x45b0, 0x15b2, 0xdaec, 0x5286, 0x1, 0x0);
        gbc.writeMem(0x3bf0, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x22b7, gbc.sp());
        EXPECT(0x3bf2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 43 002C
        gbc.setState(0x7e5, 0xcedc, 0xcfc0, 0x84ec, 0x5218, 0x6d10, 0x0, 0x1);
        gbc.writeMem(0x7e5, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0xcedc, gbc.sp());
        EXPECT(0x7e7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 43 002D
        gbc.setState(0x82bc, 0x90db, 0x3fb0, 0xffe9, 0x864, 0xd734, 0x1, 0x0);
        gbc.writeMem(0x82bc, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x90db, gbc.sp());
        EXPECT(0x82be, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x82bc));
        EXPECT(0x43, gbc.readMem(0x82bd));
        // CB 43 002F
        gbc.setState(0xa6fc, 0x59d2, 0xebe0, 0x24fa, 0x830a, 0x93b7, 0x1, 0x1);
        gbc.writeMem(0xa6fc, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x59d2, gbc.sp());
        EXPECT(0xa6fe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa6fc));
        EXPECT(0x43, gbc.readMem(0xa6fd));
        // CB 43 0030
        gbc.setState(0xb204, 0xafb5, 0x7140, 0x7e61, 0x8ace, 0x6e85, 0x1, 0x0);
        gbc.writeMem(0xb204, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0xafb5, gbc.sp());
        EXPECT(0xb206, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb204));
        EXPECT(0x43, gbc.readMem(0xb205));
        // CB 43 0031
        gbc.setState(0xc7b2, 0x556d, 0x3100, 0xccca, 0x378b, 0x1694, 0x1, 0x0);
        gbc.writeMem(0xc7b2, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x556d, gbc.sp());
        EXPECT(0xc7b4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc7b2));
        EXPECT(0x43, gbc.readMem(0xc7b3));
        // CB 43 0032
        gbc.setState(0x2c31, 0xd60b, 0x5930, 0x7962, 0xe60a, 0xfad4, 0x0, 0x0);
        gbc.writeMem(0x2c31, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0xd60b, gbc.sp());
        EXPECT(0x2c33, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 43 0033
        gbc.setState(0x6edb, 0xba2d, 0x2020, 0xc29f, 0xbb45, 0x8450, 0x0, 0x1);
        gbc.writeMem(0x6edb, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0xba2d, gbc.sp());
        EXPECT(0x6edd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 43 0034
        gbc.setState(0x9b16, 0xada6, 0xf230, 0x8fd9, 0xb985, 0x479f, 0x1, 0x1);
        gbc.writeMem(0x9b16, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0xada6, gbc.sp());
        EXPECT(0x9b18, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9b16));
        EXPECT(0x43, gbc.readMem(0x9b17));
        // CB 43 0035
        gbc.setState(0x4b72, 0xbe28, 0x8ff0, 0xe259, 0x5530, 0x21ec, 0x0, 0x1);
        gbc.writeMem(0x4b72, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0xbe28, gbc.sp());
        EXPECT(0x4b74, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 43 0036
        gbc.setState(0x2384, 0xce39, 0x2b50, 0x222f, 0x4345, 0x3210, 0x1, 0x0);
        gbc.writeMem(0x2384, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0xce39, gbc.sp());
        EXPECT(0x2386, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 43 0037
        gbc.setState(0x6b6c, 0xb770, 0xad0, 0xfb59, 0x4259, 0x6529, 0x0, 0x1);
        gbc.writeMem(0x6b6c, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0xb770, gbc.sp());
        EXPECT(0x6b6e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 43 0038
        gbc.setState(0x31c6, 0xc40f, 0x4aa0, 0x414e, 0x507b, 0xe7df, 0x1, 0x0);
        gbc.writeMem(0x31c6, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0xc40f, gbc.sp());
        EXPECT(0x31c8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 43 0039
        gbc.setState(0x6f27, 0xe095, 0x8c40, 0x58b5, 0x7e90, 0x8a0c, 0x1, 0x0);
        gbc.writeMem(0x6f27, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0xe095, gbc.sp());
        EXPECT(0x6f29, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 43 003A
        gbc.setState(0xb766, 0x1858, 0xe30, 0xe6ad, 0xa62b, 0x9139, 0x1, 0x0);
        gbc.writeMem(0xb766, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x1858, gbc.sp());
        EXPECT(0xb768, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb766));
        EXPECT(0x43, gbc.readMem(0xb767));
        // CB 43 003B
        gbc.setState(0xaaf, 0x4bf2, 0x3140, 0xbd89, 0x367d, 0xb797, 0x0, 0x1);
        gbc.writeMem(0xaaf, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0x4bf2, gbc.sp());
        EXPECT(0xab1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 43 003C
        gbc.setState(0x85df, 0xf8c6, 0xc3f0, 0xbc40, 0x61ff, 0x402c, 0x1, 0x1);
        gbc.writeMem(0x85df, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0xf8c6, gbc.sp());
        EXPECT(0x85e1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x85df));
        EXPECT(0x43, gbc.readMem(0x85e0));
        // CB 43 003D
        gbc.setState(0xecc9, 0x2db2, 0xa340, 0x3239, 0x1d25, 0xe289, 0x1, 0x1);
        gbc.writeMem(0xecc9, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x2db2, gbc.sp());
        EXPECT(0xeccb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xecc9));
        EXPECT(0x43, gbc.readMem(0xecca));
        // CB 43 003E
        gbc.setState(0x8292, 0xd115, 0x4ab0, 0x4686, 0x3c6c, 0xc9be, 0x1, 0x0);
        gbc.writeMem(0x8292, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0xd115, gbc.sp());
        EXPECT(0x8294, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8292));
        EXPECT(0x43, gbc.readMem(0x8293));
        // CB 43 003F
        gbc.setState(0x79c1, 0x626c, 0xdfe0, 0xc009, 0x1d67, 0xa3f4, 0x0, 0x0);
        gbc.writeMem(0x79c1, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x626c, gbc.sp());
        EXPECT(0x79c3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 43 0040
        gbc.setState(0xef69, 0x716d, 0x9630, 0xdc55, 0x1bb4, 0x4e0e, 0x1, 0x0);
        gbc.writeMem(0xef69, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x716d, gbc.sp());
        EXPECT(0xef6b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xef69));
        EXPECT(0x43, gbc.readMem(0xef6a));
        // CB 43 0042
        gbc.setState(0x2e7c, 0x7c01, 0x75a0, 0xac69, 0x2a97, 0x3a69, 0x1, 0x0);
        gbc.writeMem(0x2e7c, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0x7c01, gbc.sp());
        EXPECT(0x2e7e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 43 0043
        gbc.setState(0xa393, 0x5611, 0x1710, 0x21ad, 0x10e6, 0x85bf, 0x0, 0x0);
        gbc.writeMem(0xa393, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x5611, gbc.sp());
        EXPECT(0xa395, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa393));
        EXPECT(0x43, gbc.readMem(0xa394));
        // CB 43 0044
        gbc.setState(0x843f, 0x352e, 0xb80, 0xe36e, 0x1fc7, 0xfe2d, 0x0, 0x0);
        gbc.writeMem(0x843f, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x352e, gbc.sp());
        EXPECT(0x8441, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x843f));
        EXPECT(0x43, gbc.readMem(0x8440));
        // CB 43 0045
        gbc.setState(0xebbc, 0x9e77, 0x390, 0x355f, 0xa16a, 0x7cbe, 0x1, 0x0);
        gbc.writeMem(0xebbc, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0x9e77, gbc.sp());
        EXPECT(0xebbe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xebbc));
        EXPECT(0x43, gbc.readMem(0xebbd));
        // CB 43 0046
        gbc.setState(0x9580, 0x321b, 0xb3d0, 0xc83b, 0xa7cb, 0x6581, 0x1, 0x1);
        gbc.writeMem(0x9580, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x321b, gbc.sp());
        EXPECT(0x9582, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9580));
        EXPECT(0x43, gbc.readMem(0x9581));
        // CB 43 0047
        gbc.setState(0xb9a7, 0x3a89, 0x890, 0x2c95, 0x82d2, 0x6aac, 0x1, 0x0);
        gbc.writeMem(0xb9a7, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x3a89, gbc.sp());
        EXPECT(0xb9a9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb9a7));
        EXPECT(0x43, gbc.readMem(0xb9a8));
        // CB 43 0049
        gbc.setState(0xbc90, 0xeb0b, 0x48b0, 0x9585, 0x9d04, 0x7d84, 0x1, 0x0);
        gbc.writeMem(0xbc90, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0xeb0b, gbc.sp());
        EXPECT(0xbc92, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbc90));
        EXPECT(0x43, gbc.readMem(0xbc91));
        // CB 43 004A
        gbc.setState(0xa968, 0xa99a, 0xc9a0, 0x819, 0x1c11, 0xb23c, 0x0, 0x0);
        gbc.writeMem(0xa968, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0xa99a, gbc.sp());
        EXPECT(0xa96a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa968));
        EXPECT(0x43, gbc.readMem(0xa969));
        // CB 43 004C
        gbc.setState(0x5c6f, 0x2a03, 0xf9c0, 0x5de8, 0xa135, 0xe860, 0x0, 0x0);
        gbc.writeMem(0x5c6f, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x2a03, gbc.sp());
        EXPECT(0x5c71, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 43 004D
        gbc.setState(0xabd6, 0x478a, 0x4ca0, 0x58b9, 0xcde0, 0x731c, 0x1, 0x1);
        gbc.writeMem(0xabd6, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x478a, gbc.sp());
        EXPECT(0xabd8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xabd6));
        EXPECT(0x43, gbc.readMem(0xabd7));
        // CB 43 004E
        gbc.setState(0xde9d, 0x3b53, 0xa4f0, 0x4e9a, 0xafcc, 0xb31b, 0x1, 0x0);
        gbc.writeMem(0xde9d, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x3b53, gbc.sp());
        EXPECT(0xde9f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xde9d));
        EXPECT(0x43, gbc.readMem(0xde9e));
        // CB 43 004F
        gbc.setState(0x627a, 0x5de7, 0x2ad0, 0xb3dd, 0xd5a8, 0x5db, 0x1, 0x1);
        gbc.writeMem(0x627a, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x5de7, gbc.sp());
        EXPECT(0x627c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 43 0050
        gbc.setState(0x8591, 0x84b, 0xdd00, 0xa888, 0x6814, 0x8eaf, 0x0, 0x0);
        gbc.writeMem(0x8591, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x84b, gbc.sp());
        EXPECT(0x8593, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8591));
        EXPECT(0x43, gbc.readMem(0x8592));
        // CB 43 0051
        gbc.setState(0x3f6f, 0xa74e, 0xbab0, 0xe60b, 0x7464, 0xdbce, 0x1, 0x0);
        gbc.writeMem(0x3f6f, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0xa74e, gbc.sp());
        EXPECT(0x3f71, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 43 0052
        gbc.setState(0x67b1, 0xf312, 0xc7c0, 0x14b3, 0xcf4e, 0xc06c, 0x1, 0x0);
        gbc.writeMem(0x67b1, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0xf312, gbc.sp());
        EXPECT(0x67b3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 43 0053
        gbc.setState(0x280d, 0x59f4, 0x370, 0x9ced, 0xfcbc, 0x1a3a, 0x0, 0x0);
        gbc.writeMem(0x280d, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x59f4, gbc.sp());
        EXPECT(0x280f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 43 0054
        gbc.setState(0x9c6a, 0xbb02, 0x1c90, 0x1ea8, 0x334, 0x55a1, 0x0, 0x1);
        gbc.writeMem(0x9c6a, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0xbb02, gbc.sp());
        EXPECT(0x9c6c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9c6a));
        EXPECT(0x43, gbc.readMem(0x9c6b));
        // CB 43 0055
        gbc.setState(0x18f1, 0x5e22, 0x4a70, 0x7d34, 0x60b1, 0x548f, 0x0, 0x0);
        gbc.writeMem(0x18f1, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x5e22, gbc.sp());
        EXPECT(0x18f3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 43 0056
        gbc.setState(0x39a0, 0x4cf5, 0xbea0, 0xda8c, 0xbde0, 0x80c7, 0x0, 0x0);
        gbc.writeMem(0x39a0, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x4cf5, gbc.sp());
        EXPECT(0x39a2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 43 0057
        gbc.setState(0x3966, 0xdab, 0x1790, 0x916e, 0x1916, 0x2bb0, 0x1, 0x1);
        gbc.writeMem(0x3966, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0xdab, gbc.sp());
        EXPECT(0x3968, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 43 0058
        gbc.setState(0x7623, 0x5e95, 0xf360, 0x1b91, 0x5f81, 0x7924, 0x1, 0x1);
        gbc.writeMem(0x7623, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x5e95, gbc.sp());
        EXPECT(0x7625, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 43 0059
        gbc.setState(0x6041, 0xef49, 0x6270, 0x5ea2, 0x36e4, 0xab86, 0x1, 0x0);
        gbc.writeMem(0x6041, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0xef49, gbc.sp());
        EXPECT(0x6043, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 43 005A
        gbc.setState(0x1b33, 0xeb23, 0xd10, 0xaba1, 0xc5b6, 0x67e0, 0x0, 0x0);
        gbc.writeMem(0x1b33, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0xeb23, gbc.sp());
        EXPECT(0x1b35, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 43 005B
        gbc.setState(0x773b, 0x9a1e, 0xbee0, 0x8471, 0x25cd, 0x26b1, 0x1, 0x1);
        gbc.writeMem(0x773b, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x9a1e, gbc.sp());
        EXPECT(0x773d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 43 005C
        gbc.setState(0xa709, 0x827b, 0x570, 0x350b, 0x5fa, 0xedec, 0x0, 0x1);
        gbc.writeMem(0xa709, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x827b, gbc.sp());
        EXPECT(0xa70b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa709));
        EXPECT(0x43, gbc.readMem(0xa70a));
        // CB 43 005D
        gbc.setState(0x329f, 0xc5b0, 0x2bf0, 0x8e43, 0x1725, 0x82a, 0x1, 0x1);
        gbc.writeMem(0x329f, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0xc5b0, gbc.sp());
        EXPECT(0x32a1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 43 005E
        gbc.setState(0x7eb8, 0xaa35, 0x72a0, 0xde2d, 0xf0e2, 0xdaf9, 0x1, 0x1);
        gbc.writeMem(0x7eb8, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0xaa35, gbc.sp());
        EXPECT(0x7eba, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 43 005F
        gbc.setState(0xe41d, 0x654c, 0x7370, 0xd096, 0x85c1, 0xfdae, 0x0, 0x1);
        gbc.writeMem(0xe41d, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0x654c, gbc.sp());
        EXPECT(0xe41f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe41d));
        EXPECT(0x43, gbc.readMem(0xe41e));
        // CB 43 0060
        gbc.setState(0x1854, 0xad91, 0x86f0, 0x2557, 0xcf25, 0xb766, 0x0, 0x0);
        gbc.writeMem(0x1854, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0xad91, gbc.sp());
        EXPECT(0x1856, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 43 0061
        gbc.setState(0x503f, 0x292b, 0x5070, 0xe2a8, 0xdc5c, 0x4148, 0x0, 0x0);
        gbc.writeMem(0x503f, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0x292b, gbc.sp());
        EXPECT(0x5041, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 43 0062
        gbc.setState(0xefc0, 0x125a, 0x81a0, 0xa712, 0xcc0a, 0xa31b, 0x0, 0x0);
        gbc.writeMem(0xefc0, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x125a, gbc.sp());
        EXPECT(0xefc2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xefc0));
        EXPECT(0x43, gbc.readMem(0xefc1));
        // CB 43 0063
        gbc.setState(0xcf99, 0x904, 0x95a0, 0xf7fc, 0x6782, 0xbdd1, 0x1, 0x0);
        gbc.writeMem(0xcf99, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x904, gbc.sp());
        EXPECT(0xcf9b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcf99));
        EXPECT(0x43, gbc.readMem(0xcf9a));
        // CB 43 0065
        gbc.setState(0xb2a6, 0xee20, 0xa0e0, 0xa767, 0xdde, 0x7877, 0x0, 0x1);
        gbc.writeMem(0xb2a6, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0xee20, gbc.sp());
        EXPECT(0xb2a8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb2a6));
        EXPECT(0x43, gbc.readMem(0xb2a7));
        // CB 43 0066
        gbc.setState(0xe0b9, 0xbfa4, 0xfb40, 0x9add, 0x76d1, 0x5cff, 0x1, 0x1);
        gbc.writeMem(0xe0b9, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0xbfa4, gbc.sp());
        EXPECT(0xe0bb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe0b9));
        EXPECT(0x43, gbc.readMem(0xe0ba));
        // CB 43 0067
        gbc.setState(0x9801, 0xb31f, 0xd50, 0x95ed, 0xd309, 0x3997, 0x0, 0x1);
        gbc.writeMem(0x9801, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0xb31f, gbc.sp());
        EXPECT(0x9803, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9801));
        EXPECT(0x43, gbc.readMem(0x9802));
        // CB 43 0068
        gbc.setState(0x8d9, 0x9779, 0xe5a0, 0xcfbf, 0x81d3, 0xf435, 0x1, 0x1);
        gbc.writeMem(0x8d9, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x9779, gbc.sp());
        EXPECT(0x8db, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 43 0069
        gbc.setState(0xa4e4, 0x9d77, 0xb4a0, 0x9702, 0x8449, 0x8dfe, 0x0, 0x0);
        gbc.writeMem(0xa4e4, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x9d77, gbc.sp());
        EXPECT(0xa4e6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa4e4));
        EXPECT(0x43, gbc.readMem(0xa4e5));
        // CB 43 006A
        gbc.setState(0x7f47, 0xb5b4, 0x4e20, 0x15c8, 0x3d05, 0x86df, 0x0, 0x0);
        gbc.writeMem(0x7f47, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0xb5b4, gbc.sp());
        EXPECT(0x7f49, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 43 006C
        gbc.setState(0xbed4, 0xcc3f, 0x56f0, 0x227b, 0xfa14, 0x642e, 0x0, 0x1);
        gbc.writeMem(0xbed4, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0xcc3f, gbc.sp());
        EXPECT(0xbed6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbed4));
        EXPECT(0x43, gbc.readMem(0xbed5));
        // CB 43 006D
        gbc.setState(0x4e0c, 0x6ce1, 0x9880, 0x7e5e, 0x2fbc, 0x4f26, 0x0, 0x0);
        gbc.writeMem(0x4e0c, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x6ce1, gbc.sp());
        EXPECT(0x4e0e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 43 006E
        gbc.setState(0x3b1f, 0xa9c1, 0xbfe0, 0xf63c, 0xddac, 0x5be9, 0x0, 0x1);
        gbc.writeMem(0x3b1f, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0xa9c1, gbc.sp());
        EXPECT(0x3b21, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 43 0070
        gbc.setState(0x9adf, 0x53c2, 0xa290, 0x27b7, 0x9642, 0x469c, 0x1, 0x0);
        gbc.writeMem(0x9adf, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x53c2, gbc.sp());
        EXPECT(0x9ae1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9adf));
        EXPECT(0x43, gbc.readMem(0x9ae0));
        // CB 43 0071
        gbc.setState(0xd6c4, 0xba14, 0xf080, 0x79fc, 0x1c5b, 0xbc1c, 0x1, 0x0);
        gbc.writeMem(0xd6c4, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0xba14, gbc.sp());
        EXPECT(0xd6c6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd6c4));
        EXPECT(0x43, gbc.readMem(0xd6c5));
        // CB 43 0073
        gbc.setState(0xccb6, 0x46a9, 0x7980, 0x23be, 0xd301, 0xa034, 0x0, 0x0);
        gbc.writeMem(0xccb6, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x46a9, gbc.sp());
        EXPECT(0xccb8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xccb6));
        EXPECT(0x43, gbc.readMem(0xccb7));
        // CB 43 0074
        gbc.setState(0xa347, 0xf52c, 0x1a00, 0x3d04, 0xe3dc, 0xfb3e, 0x0, 0x0);
        gbc.writeMem(0xa347, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0xf52c, gbc.sp());
        EXPECT(0xa349, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa347));
        EXPECT(0x43, gbc.readMem(0xa348));
        // CB 43 0076
        gbc.setState(0x3190, 0xa810, 0x8210, 0xf202, 0x12b9, 0x46b9, 0x1, 0x0);
        gbc.writeMem(0x3190, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0xa810, gbc.sp());
        EXPECT(0x3192, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 43 0077
        gbc.setState(0x81b6, 0xde75, 0xade0, 0xf54f, 0x81a, 0x12b0, 0x1, 0x1);
        gbc.writeMem(0x81b6, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0xde75, gbc.sp());
        EXPECT(0x81b8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x81b6));
        EXPECT(0x43, gbc.readMem(0x81b7));
        // CB 43 0078
        gbc.setState(0xc6a5, 0xd5b5, 0x3f10, 0xfac6, 0x1535, 0xcf42, 0x0, 0x0);
        gbc.writeMem(0xc6a5, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0xd5b5, gbc.sp());
        EXPECT(0xc6a7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc6a5));
        EXPECT(0x43, gbc.readMem(0xc6a6));
        // CB 43 0079
        gbc.setState(0x2f47, 0x8b1e, 0x2f90, 0x4a4f, 0xf67a, 0x7d34, 0x1, 0x1);
        gbc.writeMem(0x2f47, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x8b1e, gbc.sp());
        EXPECT(0x2f49, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 43 007A
        gbc.setState(0x5c4a, 0xe302, 0xe20, 0xa3cd, 0xd4b2, 0xd9a0, 0x0, 0x0);
        gbc.writeMem(0x5c4a, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0xe302, gbc.sp());
        EXPECT(0x5c4c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 43 007B
        gbc.setState(0x91f9, 0x38d6, 0xc680, 0xa4de, 0xd39, 0xfe03, 0x1, 0x0);
        gbc.writeMem(0x91f9, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x38d6, gbc.sp());
        EXPECT(0x91fb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x91f9));
        EXPECT(0x43, gbc.readMem(0x91fa));
        // CB 43 007D
        gbc.setState(0x25ea, 0x77e3, 0xe170, 0x8c8, 0xa2b7, 0xa657, 0x0, 0x0);
        gbc.writeMem(0x25ea, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x77e3, gbc.sp());
        EXPECT(0x25ec, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 43 007E
        gbc.setState(0x97da, 0xe0b4, 0x890, 0x8e04, 0x67e8, 0xcf51, 0x0, 0x1);
        gbc.writeMem(0x97da, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0xe0b4, gbc.sp());
        EXPECT(0x97dc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x97da));
        EXPECT(0x43, gbc.readMem(0x97db));
        // CB 43 007F
        gbc.setState(0xda38, 0x48ce, 0xf520, 0xdc69, 0x5dac, 0x23bb, 0x1, 0x1);
        gbc.writeMem(0xda38, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x48ce, gbc.sp());
        EXPECT(0xda3a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xda38));
        EXPECT(0x43, gbc.readMem(0xda39));
        // CB 43 0080
        gbc.setState(0xec30, 0x934c, 0x4000, 0xdd56, 0x78ed, 0x289f, 0x1, 0x0);
        gbc.writeMem(0xec30, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x934c, gbc.sp());
        EXPECT(0xec32, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xec30));
        EXPECT(0x43, gbc.readMem(0xec31));
        // CB 43 0081
        gbc.setState(0xe7e8, 0xce24, 0x4870, 0x3bae, 0x9146, 0xb141, 0x0, 0x0);
        gbc.writeMem(0xe7e8, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0xce24, gbc.sp());
        EXPECT(0xe7ea, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe7e8));
        EXPECT(0x43, gbc.readMem(0xe7e9));
        // CB 43 0083
        gbc.setState(0xd34e, 0x8b4, 0xabc0, 0x6bb6, 0x4ce7, 0x6542, 0x1, 0x1);
        gbc.writeMem(0xd34e, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x8b4, gbc.sp());
        EXPECT(0xd350, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd34e));
        EXPECT(0x43, gbc.readMem(0xd34f));
        // CB 43 0084
        gbc.setState(0x7b59, 0x2e57, 0xc1c0, 0x298c, 0x8e1b, 0x7ff8, 0x1, 0x1);
        gbc.writeMem(0x7b59, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x2e57, gbc.sp());
        EXPECT(0x7b5b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 43 0085
        gbc.setState(0x5d0e, 0xd15, 0x7c00, 0x8499, 0xe88f, 0x8810, 0x1, 0x0);
        gbc.writeMem(0x5d0e, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0xd15, gbc.sp());
        EXPECT(0x5d10, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 43 0086
        gbc.setState(0x263e, 0x548b, 0x9520, 0x5b5, 0x68ec, 0xea5f, 0x0, 0x0);
        gbc.writeMem(0x263e, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x548b, gbc.sp());
        EXPECT(0x2640, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 43 0087
        gbc.setState(0x7201, 0xd03d, 0x9490, 0x36c3, 0xbc75, 0x2442, 0x1, 0x1);
        gbc.writeMem(0x7201, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0xd03d, gbc.sp());
        EXPECT(0x7203, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 43 0088
        gbc.setState(0x1c3a, 0xce31, 0x530, 0x80b0, 0xb25e, 0x6c89, 0x0, 0x0);
        gbc.writeMem(0x1c3a, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0xce31, gbc.sp());
        EXPECT(0x1c3c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 43 0089
        gbc.setState(0x2625, 0x499a, 0xd8c0, 0xe86e, 0x778c, 0xe0ac, 0x0, 0x0);
        gbc.writeMem(0x2625, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x499a, gbc.sp());
        EXPECT(0x2627, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 43 008A
        gbc.setState(0x8fc1, 0x8fd9, 0xc080, 0x7517, 0x6b92, 0xb017, 0x0, 0x0);
        gbc.writeMem(0x8fc1, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x8fd9, gbc.sp());
        EXPECT(0x8fc3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8fc1));
        EXPECT(0x43, gbc.readMem(0x8fc2));
        // CB 43 008B
        gbc.setState(0x5b84, 0xb6e8, 0xc240, 0x3879, 0xaab9, 0x35d3, 0x0, 0x0);
        gbc.writeMem(0x5b84, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0xb6e8, gbc.sp());
        EXPECT(0x5b86, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 43 008C
        gbc.setState(0x2876, 0x4e0, 0x1b10, 0x88f6, 0x1d3c, 0x4688, 0x0, 0x0);
        gbc.writeMem(0x2876, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x4e0, gbc.sp());
        EXPECT(0x2878, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 43 008D
        gbc.setState(0x7c8c, 0x56bb, 0x51a0, 0xb0be, 0xf8b9, 0x2dfb, 0x1, 0x1);
        gbc.writeMem(0x7c8c, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x56bb, gbc.sp());
        EXPECT(0x7c8e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 43 008E
        gbc.setState(0xd158, 0x671, 0x2fd0, 0x3af8, 0x4faf, 0x6623, 0x1, 0x1);
        gbc.writeMem(0xd158, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x671, gbc.sp());
        EXPECT(0xd15a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd158));
        EXPECT(0x43, gbc.readMem(0xd159));
        // CB 43 008F
        gbc.setState(0x83c9, 0xd071, 0x9530, 0xcc42, 0xdd84, 0x8bc0, 0x0, 0x0);
        gbc.writeMem(0x83c9, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0xd071, gbc.sp());
        EXPECT(0x83cb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x83c9));
        EXPECT(0x43, gbc.readMem(0x83ca));
        // CB 43 0090
        gbc.setState(0xef02, 0x56bb, 0xf420, 0xc376, 0xea75, 0xa568, 0x0, 0x1);
        gbc.writeMem(0xef02, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x56bb, gbc.sp());
        EXPECT(0xef04, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xef02));
        EXPECT(0x43, gbc.readMem(0xef03));
        // CB 43 0091
        gbc.setState(0x2877, 0x9fc9, 0x3cc0, 0xe1ab, 0xaebe, 0x7fb8, 0x1, 0x0);
        gbc.writeMem(0x2877, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x9fc9, gbc.sp());
        EXPECT(0x2879, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 43 0092
        gbc.setState(0xd3bb, 0xe5f2, 0x1990, 0x6724, 0x3d45, 0x9c03, 0x1, 0x1);
        gbc.writeMem(0xd3bb, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0xe5f2, gbc.sp());
        EXPECT(0xd3bd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd3bb));
        EXPECT(0x43, gbc.readMem(0xd3bc));
        // CB 43 0093
        gbc.setState(0xb0e8, 0xa98f, 0x72e0, 0x41a8, 0x2a5a, 0xdfb0, 0x1, 0x0);
        gbc.writeMem(0xb0e8, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0xa98f, gbc.sp());
        EXPECT(0xb0ea, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb0e8));
        EXPECT(0x43, gbc.readMem(0xb0e9));
        // CB 43 0094
        gbc.setState(0xebca, 0x74e3, 0xab20, 0x64b8, 0x9002, 0x538f, 0x1, 0x1);
        gbc.writeMem(0xebca, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x74e3, gbc.sp());
        EXPECT(0xebcc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xebca));
        EXPECT(0x43, gbc.readMem(0xebcb));
        // CB 43 0095
        gbc.setState(0x2f03, 0xcea8, 0x7680, 0xf79c, 0x6ef0, 0x4394, 0x1, 0x0);
        gbc.writeMem(0x2f03, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0xcea8, gbc.sp());
        EXPECT(0x2f05, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 43 0096
        gbc.setState(0x8517, 0x2345, 0x54a0, 0xba5, 0xdab1, 0x30d9, 0x1, 0x0);
        gbc.writeMem(0x8517, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x2345, gbc.sp());
        EXPECT(0x8519, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8517));
        EXPECT(0x43, gbc.readMem(0x8518));
        // CB 43 0097
        gbc.setState(0xa39d, 0x667f, 0x2570, 0x4484, 0x7d20, 0xb632, 0x0, 0x1);
        gbc.writeMem(0xa39d, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x667f, gbc.sp());
        EXPECT(0xa39f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa39d));
        EXPECT(0x43, gbc.readMem(0xa39e));
        // CB 43 0098
        gbc.setState(0xa948, 0x836a, 0xc230, 0xe152, 0xa0a0, 0x2390, 0x0, 0x0);
        gbc.writeMem(0xa948, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x836a, gbc.sp());
        EXPECT(0xa94a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa948));
        EXPECT(0x43, gbc.readMem(0xa949));
        // CB 43 0099
        gbc.setState(0x91ca, 0xb5e6, 0x3500, 0x7931, 0xbbd, 0xb97a, 0x0, 0x0);
        gbc.writeMem(0x91ca, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0xb5e6, gbc.sp());
        EXPECT(0x91cc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x91ca));
        EXPECT(0x43, gbc.readMem(0x91cb));
        // CB 43 009A
        gbc.setState(0x67fe, 0xca0d, 0x7550, 0xeb56, 0xd313, 0x8b1e, 0x0, 0x1);
        gbc.writeMem(0x67fe, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0xca0d, gbc.sp());
        EXPECT(0x6800, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 43 009B
        gbc.setState(0xcaf7, 0xb29, 0xe5c0, 0x3c60, 0x621b, 0x5eb1, 0x1, 0x0);
        gbc.writeMem(0xcaf7, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0xb29, gbc.sp());
        EXPECT(0xcaf9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcaf7));
        EXPECT(0x43, gbc.readMem(0xcaf8));
        // CB 43 009C
        gbc.setState(0x173f, 0xf535, 0x1020, 0xa512, 0xdbac, 0x208d, 0x0, 0x1);
        gbc.writeMem(0x173f, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0xf535, gbc.sp());
        EXPECT(0x1741, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 43 009E
        gbc.setState(0x9157, 0x440f, 0x9010, 0x519f, 0xe802, 0x853a, 0x1, 0x1);
        gbc.writeMem(0x9157, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x440f, gbc.sp());
        EXPECT(0x9159, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9157));
        EXPECT(0x43, gbc.readMem(0x9158));
        // CB 43 009F
        gbc.setState(0xd060, 0xc6cf, 0x9a0, 0x554e, 0x6e22, 0x4bb6, 0x1, 0x1);
        gbc.writeMem(0xd060, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0xc6cf, gbc.sp());
        EXPECT(0xd062, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd060));
        EXPECT(0x43, gbc.readMem(0xd061));
        // CB 43 00A0
        gbc.setState(0x46d8, 0x9ac0, 0xedb0, 0xa9b6, 0x59c5, 0xad3c, 0x0, 0x1);
        gbc.writeMem(0x46d8, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x9ac0, gbc.sp());
        EXPECT(0x46da, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 43 00A1
        gbc.setState(0xd92c, 0x91d9, 0x2a0, 0x2998, 0x6783, 0xffe7, 0x0, 0x0);
        gbc.writeMem(0xd92c, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x91d9, gbc.sp());
        EXPECT(0xd92e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd92c));
        EXPECT(0x43, gbc.readMem(0xd92d));
        // CB 43 00A2
        gbc.setState(0xb3a2, 0x267c, 0xa1b0, 0x27e4, 0x610f, 0x97e, 0x1, 0x1);
        gbc.writeMem(0xb3a2, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0x267c, gbc.sp());
        EXPECT(0xb3a4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb3a2));
        EXPECT(0x43, gbc.readMem(0xb3a3));
        // CB 43 00A3
        gbc.setState(0x1b2b, 0x35ab, 0x3670, 0x847e, 0x8108, 0xdfc1, 0x0, 0x0);
        gbc.writeMem(0x1b2b, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x35ab, gbc.sp());
        EXPECT(0x1b2d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 43 00A4
        gbc.setState(0x814f, 0x33c1, 0xdd50, 0x5a25, 0x75a9, 0x3ff2, 0x1, 0x0);
        gbc.writeMem(0x814f, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x33c1, gbc.sp());
        EXPECT(0x8151, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x814f));
        EXPECT(0x43, gbc.readMem(0x8150));
        // CB 43 00A5
        gbc.setState(0xd2cf, 0xeffc, 0xd370, 0x7db8, 0x6c00, 0xaf1, 0x0, 0x0);
        gbc.writeMem(0xd2cf, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0xeffc, gbc.sp());
        EXPECT(0xd2d1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd2cf));
        EXPECT(0x43, gbc.readMem(0xd2d0));
        // CB 43 00A6
        gbc.setState(0x6ba5, 0x877d, 0xb210, 0xb20e, 0x5ba3, 0xfbaf, 0x1, 0x1);
        gbc.writeMem(0x6ba5, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x877d, gbc.sp());
        EXPECT(0x6ba7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 43 00A7
        gbc.setState(0x7cb5, 0x6d14, 0x7d0, 0xe066, 0xfc5d, 0xcbc1, 0x1, 0x0);
        gbc.writeMem(0x7cb5, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x6d14, gbc.sp());
        EXPECT(0x7cb7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 43 00A8
        gbc.setState(0x6c95, 0xeb82, 0x5df0, 0xb222, 0x9fdd, 0x2617, 0x0, 0x0);
        gbc.writeMem(0x6c95, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0xeb82, gbc.sp());
        EXPECT(0x6c97, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 43 00A9
        gbc.setState(0x6526, 0x75a4, 0x4400, 0xb840, 0xb6ce, 0xee95, 0x1, 0x0);
        gbc.writeMem(0x6526, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x75a4, gbc.sp());
        EXPECT(0x6528, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 43 00AA
        gbc.setState(0x35d5, 0x863e, 0x21f0, 0xfd9e, 0xc3c2, 0xbd36, 0x0, 0x1);
        gbc.writeMem(0x35d5, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x863e, gbc.sp());
        EXPECT(0x35d7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 43 00AB
        gbc.setState(0xa83, 0x97ec, 0x33d0, 0xfca0, 0xb67b, 0xe670, 0x0, 0x1);
        gbc.writeMem(0xa83, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x97ec, gbc.sp());
        EXPECT(0xa85, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 43 00AC
        gbc.setState(0x380, 0x49dc, 0xf590, 0xaa80, 0xfe57, 0x4ec6, 0x0, 0x0);
        gbc.writeMem(0x380, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x49dc, gbc.sp());
        EXPECT(0x382, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 43 00AD
        gbc.setState(0x1a9e, 0xd5bc, 0x1ae0, 0xc24d, 0x1929, 0xc331, 0x0, 0x1);
        gbc.writeMem(0x1a9e, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0xd5bc, gbc.sp());
        EXPECT(0x1aa0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 43 00AE
        gbc.setState(0xd8e6, 0x11c5, 0x1150, 0xfc47, 0x4d67, 0xe643, 0x1, 0x1);
        gbc.writeMem(0xd8e6, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x11c5, gbc.sp());
        EXPECT(0xd8e8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd8e6));
        EXPECT(0x43, gbc.readMem(0xd8e7));
        // CB 43 00AF
        gbc.setState(0xe95f, 0xad47, 0x7c40, 0x71af, 0xe165, 0xb067, 0x0, 0x0);
        gbc.writeMem(0xe95f, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0xad47, gbc.sp());
        EXPECT(0xe961, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe95f));
        EXPECT(0x43, gbc.readMem(0xe960));
        // CB 43 00B0
        gbc.setState(0x9427, 0xcacb, 0x9440, 0x231e, 0xdf9b, 0x3f35, 0x1, 0x0);
        gbc.writeMem(0x9427, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0xcacb, gbc.sp());
        EXPECT(0x9429, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9427));
        EXPECT(0x43, gbc.readMem(0x9428));
        // CB 43 00B1
        gbc.setState(0xcf01, 0x1a84, 0xc0a0, 0x9c8a, 0x460e, 0x9d43, 0x0, 0x0);
        gbc.writeMem(0xcf01, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x1a84, gbc.sp());
        EXPECT(0xcf03, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcf01));
        EXPECT(0x43, gbc.readMem(0xcf02));
        // CB 43 00B2
        gbc.setState(0x31d8, 0x45ab, 0x60a0, 0x4f21, 0x6937, 0x8974, 0x1, 0x1);
        gbc.writeMem(0x31d8, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x45ab, gbc.sp());
        EXPECT(0x31da, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 43 00B3
        gbc.setState(0x7a6, 0x6613, 0x50d0, 0x49c1, 0x8162, 0xbd19, 0x0, 0x1);
        gbc.writeMem(0x7a6, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x6613, gbc.sp());
        EXPECT(0x7a8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 43 00B4
        gbc.setState(0x5689, 0x1510, 0x7ff0, 0x1d32, 0x2683, 0x2b58, 0x1, 0x0);
        gbc.writeMem(0x5689, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x1510, gbc.sp());
        EXPECT(0x568b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 43 00B5
        gbc.setState(0x88ff, 0x8dbd, 0x1b40, 0x128a, 0x82c2, 0xd91f, 0x0, 0x1);
        gbc.writeMem(0x88ff, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x8dbd, gbc.sp());
        EXPECT(0x8901, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x88ff));
        EXPECT(0x43, gbc.readMem(0x8900));
        // CB 43 00B6
        gbc.setState(0x573a, 0xd16, 0x6590, 0x6ce4, 0xc656, 0x260c, 0x1, 0x0);
        gbc.writeMem(0x573a, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0xd16, gbc.sp());
        EXPECT(0x573c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 43 00B7
        gbc.setState(0xea4f, 0xb9e8, 0x24a0, 0x2402, 0x4357, 0xa363, 0x0, 0x1);
        gbc.writeMem(0xea4f, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0xb9e8, gbc.sp());
        EXPECT(0xea51, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xea4f));
        EXPECT(0x43, gbc.readMem(0xea50));
        // CB 43 00B8
        gbc.setState(0x521c, 0xb2c8, 0xba30, 0x3f0d, 0xcf29, 0xecab, 0x1, 0x1);
        gbc.writeMem(0x521c, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0xb2c8, gbc.sp());
        EXPECT(0x521e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 43 00B9
        gbc.setState(0xebd2, 0x1d4d, 0x3fd0, 0xaef3, 0x2232, 0x2cde, 0x1, 0x1);
        gbc.writeMem(0xebd2, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x1d4d, gbc.sp());
        EXPECT(0xebd4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xebd2));
        EXPECT(0x43, gbc.readMem(0xebd3));
        // CB 43 00BA
        gbc.setState(0x20cf, 0x4b11, 0x9ac0, 0xb847, 0xa311, 0x57a, 0x0, 0x1);
        gbc.writeMem(0x20cf, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x4b11, gbc.sp());
        EXPECT(0x20d1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 43 00BB
        gbc.setState(0x7ab2, 0x75d6, 0xc7b0, 0x72fd, 0x7387, 0xd32d, 0x1, 0x1);
        gbc.writeMem(0x7ab2, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x75d6, gbc.sp());
        EXPECT(0x7ab4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 43 00BC
        gbc.setState(0x3da5, 0xb745, 0xd60, 0xa6bd, 0x7e12, 0x572a, 0x0, 0x0);
        gbc.writeMem(0x3da5, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0xb745, gbc.sp());
        EXPECT(0x3da7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 43 00BD
        gbc.setState(0x177f, 0xa944, 0xa210, 0x9497, 0xa13c, 0x85ce, 0x0, 0x0);
        gbc.writeMem(0x177f, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0xa944, gbc.sp());
        EXPECT(0x1781, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 43 00BE
        gbc.setState(0xb90f, 0x9d79, 0x3990, 0x926b, 0xd064, 0x396e, 0x1, 0x0);
        gbc.writeMem(0xb90f, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x9d79, gbc.sp());
        EXPECT(0xb911, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb90f));
        EXPECT(0x43, gbc.readMem(0xb910));
        // CB 43 00BF
        gbc.setState(0xbde6, 0x2411, 0xd9f0, 0xd74c, 0x3d04, 0xb235, 0x0, 0x1);
        gbc.writeMem(0xbde6, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x2411, gbc.sp());
        EXPECT(0xbde8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbde6));
        EXPECT(0x43, gbc.readMem(0xbde7));
        // CB 43 00C0
        gbc.setState(0x5cff, 0xd7b7, 0x6950, 0xce1e, 0x23b1, 0x967, 0x1, 0x0);
        gbc.writeMem(0x5cff, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0xd7b7, gbc.sp());
        EXPECT(0x5d01, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 43 00C1
        gbc.setState(0xeb3c, 0xbc8f, 0x2e0, 0xec4b, 0x925a, 0xa6f8, 0x1, 0x0);
        gbc.writeMem(0xeb3c, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0xbc8f, gbc.sp());
        EXPECT(0xeb3e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeb3c));
        EXPECT(0x43, gbc.readMem(0xeb3d));
        // CB 43 00C2
        gbc.setState(0xcea9, 0xe88f, 0x38b0, 0xb72, 0x25ca, 0xea7e, 0x1, 0x1);
        gbc.writeMem(0xcea9, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0xe88f, gbc.sp());
        EXPECT(0xceab, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcea9));
        EXPECT(0x43, gbc.readMem(0xceaa));
        // CB 43 00C3
        gbc.setState(0xead2, 0xcab6, 0xdbd0, 0xdd30, 0xed5, 0xc3e1, 0x1, 0x0);
        gbc.writeMem(0xead2, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0xcab6, gbc.sp());
        EXPECT(0xead4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xead2));
        EXPECT(0x43, gbc.readMem(0xead3));
        // CB 43 00C4
        gbc.setState(0xe9da, 0xf9b9, 0xbe10, 0x97eb, 0x2507, 0x7e97, 0x1, 0x0);
        gbc.writeMem(0xe9da, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0xf9b9, gbc.sp());
        EXPECT(0xe9dc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe9da));
        EXPECT(0x43, gbc.readMem(0xe9db));
        // CB 43 00C5
        gbc.setState(0x4655, 0x919c, 0xb5a0, 0x1b22, 0xc675, 0x6e0d, 0x0, 0x0);
        gbc.writeMem(0x4655, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x919c, gbc.sp());
        EXPECT(0x4657, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 43 00C6
        gbc.setState(0x9515, 0x6852, 0x690, 0x474d, 0x7e83, 0x9712, 0x1, 0x0);
        gbc.writeMem(0x9515, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x6852, gbc.sp());
        EXPECT(0x9517, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9515));
        EXPECT(0x43, gbc.readMem(0x9516));
        // CB 43 00C7
        gbc.setState(0xa286, 0x1a6f, 0xb680, 0xd7a0, 0x5af8, 0x975a, 0x0, 0x0);
        gbc.writeMem(0xa286, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x1a6f, gbc.sp());
        EXPECT(0xa288, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa286));
        EXPECT(0x43, gbc.readMem(0xa287));
        // CB 43 00C8
        gbc.setState(0x94eb, 0xb80a, 0xb470, 0x504a, 0xef96, 0xd237, 0x0, 0x1);
        gbc.writeMem(0x94eb, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0xb80a, gbc.sp());
        EXPECT(0x94ed, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x94eb));
        EXPECT(0x43, gbc.readMem(0x94ec));
        // CB 43 00C9
        gbc.setState(0x8002, 0xc5ba, 0xfe60, 0x9335, 0x9b52, 0xe111, 0x0, 0x1);
        gbc.writeMem(0x8002, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0xc5ba, gbc.sp());
        EXPECT(0x8004, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8002));
        EXPECT(0x43, gbc.readMem(0x8003));
        // CB 43 00CA
        gbc.setState(0xedd8, 0x8bc1, 0x7800, 0xbe8f, 0xdc67, 0x9a34, 0x0, 0x0);
        gbc.writeMem(0xedd8, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x8bc1, gbc.sp());
        EXPECT(0xedda, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xedd8));
        EXPECT(0x43, gbc.readMem(0xedd9));
        // CB 43 00CB
        gbc.setState(0x8be5, 0xdad4, 0xcb90, 0xe3f6, 0xcbc8, 0xf08e, 0x1, 0x0);
        gbc.writeMem(0x8be5, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0xdad4, gbc.sp());
        EXPECT(0x8be7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8be5));
        EXPECT(0x43, gbc.readMem(0x8be6));
        // CB 43 00CC
        gbc.setState(0xbfcd, 0xaa98, 0x63a0, 0x777d, 0xcbed, 0x10cf, 0x1, 0x0);
        gbc.writeMem(0xbfcd, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0xaa98, gbc.sp());
        EXPECT(0xbfcf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbfcd));
        EXPECT(0x43, gbc.readMem(0xbfce));
        // CB 43 00CD
        gbc.setState(0x2937, 0xc37b, 0x94a0, 0xf908, 0x5100, 0xff13, 0x0, 0x1);
        gbc.writeMem(0x2937, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0xc37b, gbc.sp());
        EXPECT(0x2939, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 43 00CE
        gbc.setState(0x7e6e, 0xaf12, 0x80f0, 0x2309, 0x930, 0x28af, 0x0, 0x1);
        gbc.writeMem(0x7e6e, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0xaf12, gbc.sp());
        EXPECT(0x7e70, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 43 00CF
        gbc.setState(0x2812, 0x2f39, 0xba40, 0x338f, 0x3ee4, 0x2b84, 0x1, 0x1);
        gbc.writeMem(0x2812, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x2f39, gbc.sp());
        EXPECT(0x2814, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 43 00D0
        gbc.setState(0x1d96, 0x7685, 0xefd0, 0x9ce4, 0xf751, 0xc1d, 0x1, 0x0);
        gbc.writeMem(0x1d96, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x7685, gbc.sp());
        EXPECT(0x1d98, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 43 00D1
        gbc.setState(0x90bd, 0xb808, 0x6d90, 0x2596, 0xf705, 0x79a7, 0x1, 0x1);
        gbc.writeMem(0x90bd, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0xb808, gbc.sp());
        EXPECT(0x90bf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x90bd));
        EXPECT(0x43, gbc.readMem(0x90be));
        // CB 43 00D3
        gbc.setState(0x3544, 0x2d0b, 0x8bc0, 0xb66e, 0x7fd8, 0x97fe, 0x1, 0x1);
        gbc.writeMem(0x3544, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x2d0b, gbc.sp());
        EXPECT(0x3546, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 43 00D4
        gbc.setState(0x1c2c, 0xb68f, 0xe1d0, 0xa3b8, 0xd54, 0x86d3, 0x0, 0x1);
        gbc.writeMem(0x1c2c, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0xb68f, gbc.sp());
        EXPECT(0x1c2e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 43 00D5
        gbc.setState(0xd54c, 0xc138, 0xfa0, 0x1056, 0xa6df, 0x7e4e, 0x0, 0x1);
        gbc.writeMem(0xd54c, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0xc138, gbc.sp());
        EXPECT(0xd54e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd54c));
        EXPECT(0x43, gbc.readMem(0xd54d));
        // CB 43 00D6
        gbc.setState(0x8a29, 0xbf2b, 0x90f0, 0xd255, 0x516, 0x2d4a, 0x0, 0x1);
        gbc.writeMem(0x8a29, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0xbf2b, gbc.sp());
        EXPECT(0x8a2b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8a29));
        EXPECT(0x43, gbc.readMem(0x8a2a));
        // CB 43 00D7
        gbc.setState(0x8508, 0xe705, 0xe50, 0x1f8b, 0xd896, 0x261a, 0x1, 0x0);
        gbc.writeMem(0x8508, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0xe705, gbc.sp());
        EXPECT(0x850a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8508));
        EXPECT(0x43, gbc.readMem(0x8509));
        // CB 43 00D8
        gbc.setState(0xcf70, 0x7fe1, 0x43f0, 0xc94f, 0x2784, 0xb631, 0x0, 0x1);
        gbc.writeMem(0xcf70, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x7fe1, gbc.sp());
        EXPECT(0xcf72, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcf70));
        EXPECT(0x43, gbc.readMem(0xcf71));
        // CB 43 00D9
        gbc.setState(0x6dbd, 0x9ad4, 0x7510, 0x5ef2, 0xb053, 0xadeb, 0x1, 0x1);
        gbc.writeMem(0x6dbd, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x9ad4, gbc.sp());
        EXPECT(0x6dbf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 43 00DA
        gbc.setState(0x684d, 0x47e5, 0xf380, 0xdb42, 0xa3a, 0x6fec, 0x0, 0x1);
        gbc.writeMem(0x684d, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x47e5, gbc.sp());
        EXPECT(0x684f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 43 00DC
        gbc.setState(0x8c83, 0x8e77, 0xecf0, 0xb5f1, 0xbf19, 0xec00, 0x0, 0x1);
        gbc.writeMem(0x8c83, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x8e77, gbc.sp());
        EXPECT(0x8c85, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8c83));
        EXPECT(0x43, gbc.readMem(0x8c84));
        // CB 43 00DD
        gbc.setState(0x7cee, 0x1de0, 0x9fb0, 0x8f5e, 0x57e1, 0xa3a8, 0x0, 0x0);
        gbc.writeMem(0x7cee, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x1de0, gbc.sp());
        EXPECT(0x7cf0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 43 00DE
        gbc.setState(0xb68a, 0x48da, 0xdb0, 0xff6, 0x28a6, 0x14a7, 0x1, 0x1);
        gbc.writeMem(0xb68a, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x48da, gbc.sp());
        EXPECT(0xb68c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb68a));
        EXPECT(0x43, gbc.readMem(0xb68b));
        // CB 43 00DF
        gbc.setState(0x64f6, 0xebdb, 0x43f0, 0x6e41, 0x7175, 0xb1be, 0x1, 0x1);
        gbc.writeMem(0x64f6, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0xebdb, gbc.sp());
        EXPECT(0x64f8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 43 00E0
        gbc.setState(0x6093, 0x112, 0xbc00, 0x9ce7, 0xdccd, 0x21bf, 0x0, 0x0);
        gbc.writeMem(0x6093, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x112, gbc.sp());
        EXPECT(0x6095, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 43 00E1
        gbc.setState(0x94eb, 0xe37f, 0x5aa0, 0xe9ff, 0xb87b, 0xe185, 0x0, 0x1);
        gbc.writeMem(0x94eb, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0xe37f, gbc.sp());
        EXPECT(0x94ed, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x94eb));
        EXPECT(0x43, gbc.readMem(0x94ec));
        // CB 43 00E2
        gbc.setState(0x77f1, 0x90ae, 0xfbf0, 0xb3, 0x489, 0xcf9e, 0x0, 0x1);
        gbc.writeMem(0x77f1, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x90ae, gbc.sp());
        EXPECT(0x77f3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 43 00E3
        gbc.setState(0x7b78, 0xb759, 0x4ed0, 0xec17, 0xbe5b, 0xf417, 0x0, 0x1);
        gbc.writeMem(0x7b78, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0xb759, gbc.sp());
        EXPECT(0x7b7a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 43 00E4
        gbc.setState(0x1b22, 0x33f9, 0xabd0, 0x9b2e, 0x51e1, 0x888e, 0x0, 0x1);
        gbc.writeMem(0x1b22, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x33f9, gbc.sp());
        EXPECT(0x1b24, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 43 00E6
        gbc.setState(0x7701, 0xec0, 0x1080, 0x3611, 0xa694, 0x685c, 0x0, 0x1);
        gbc.writeMem(0x7701, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0xec0, gbc.sp());
        EXPECT(0x7703, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 43 00E7
        gbc.setState(0xb986, 0x8c55, 0xd2f0, 0x17e0, 0xab47, 0x4b5e, 0x1, 0x0);
        gbc.writeMem(0xb986, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x8c55, gbc.sp());
        EXPECT(0xb988, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb986));
        EXPECT(0x43, gbc.readMem(0xb987));
        // CB 43 00E8
        gbc.setState(0x5745, 0xd2c, 0x1ec0, 0xfe57, 0x1405, 0xb779, 0x0, 0x0);
        gbc.writeMem(0x5745, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0xd2c, gbc.sp());
        EXPECT(0x5747, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 43 00E9
        gbc.setState(0x4b19, 0x953, 0xd1c0, 0xeff4, 0x9e12, 0x1646, 0x1, 0x1);
        gbc.writeMem(0x4b19, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x953, gbc.sp());
        EXPECT(0x4b1b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 43 00EA
        gbc.setState(0xdfc8, 0x4f38, 0x7fd0, 0xe94, 0xd107, 0x5635, 0x1, 0x0);
        gbc.writeMem(0xdfc8, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x4f38, gbc.sp());
        EXPECT(0xdfca, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdfc8));
        EXPECT(0x43, gbc.readMem(0xdfc9));
        // CB 43 00EB
        gbc.setState(0x1e45, 0x4a83, 0xda60, 0xd055, 0x227, 0x43d0, 0x0, 0x0);
        gbc.writeMem(0x1e45, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x4a83, gbc.sp());
        EXPECT(0x1e47, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 43 00ED
        gbc.setState(0x1ce2, 0x1765, 0x58b0, 0x236b, 0xaae0, 0x4132, 0x1, 0x0);
        gbc.writeMem(0x1ce2, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x1765, gbc.sp());
        EXPECT(0x1ce4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 43 00EE
        gbc.setState(0xc9c, 0x58d4, 0xc710, 0xac22, 0x78cc, 0x8437, 0x1, 0x1);
        gbc.writeMem(0xc9c, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x58d4, gbc.sp());
        EXPECT(0xc9e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 43 00EF
        gbc.setState(0xa65b, 0xd16c, 0xe650, 0x4c3a, 0x86cc, 0x2332, 0x0, 0x0);
        gbc.writeMem(0xa65b, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0xd16c, gbc.sp());
        EXPECT(0xa65d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa65b));
        EXPECT(0x43, gbc.readMem(0xa65c));
        // CB 43 00F0
        gbc.setState(0xe4ee, 0xedf5, 0x4a30, 0xeab6, 0x9f5f, 0x1f78, 0x0, 0x1);
        gbc.writeMem(0xe4ee, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0xedf5, gbc.sp());
        EXPECT(0xe4f0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe4ee));
        EXPECT(0x43, gbc.readMem(0xe4ef));
        // CB 43 00F1
        gbc.setState(0xc35, 0x5b89, 0x9df0, 0x8d87, 0x3366, 0x96ac, 0x0, 0x0);
        gbc.writeMem(0xc35, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x5b89, gbc.sp());
        EXPECT(0xc37, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 43 00F2
        gbc.setState(0xd0c6, 0xe504, 0x85b0, 0xf219, 0x5431, 0xb614, 0x0, 0x0);
        gbc.writeMem(0xd0c6, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0xe504, gbc.sp());
        EXPECT(0xd0c8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd0c6));
        EXPECT(0x43, gbc.readMem(0xd0c7));
        // CB 43 00F3
        gbc.setState(0x2bdd, 0x3e7c, 0xa9e0, 0x3e61, 0xe7d5, 0xfa50, 0x0, 0x1);
        gbc.writeMem(0x2bdd, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x3e7c, gbc.sp());
        EXPECT(0x2bdf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 43 00F4
        gbc.setState(0xd471, 0xf252, 0x1170, 0xb8aa, 0xc10e, 0x221a, 0x1, 0x0);
        gbc.writeMem(0xd471, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0xf252, gbc.sp());
        EXPECT(0xd473, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd471));
        EXPECT(0x43, gbc.readMem(0xd472));
        // CB 43 00F5
        gbc.setState(0xb616, 0x36b6, 0x350, 0x988a, 0xfa9, 0x7c1, 0x1, 0x0);
        gbc.writeMem(0xb616, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x36b6, gbc.sp());
        EXPECT(0xb618, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb616));
        EXPECT(0x43, gbc.readMem(0xb617));
        // CB 43 00F6
        gbc.setState(0x4895, 0x453d, 0xf0e0, 0xb0dc, 0xd1b8, 0xc7f4, 0x1, 0x1);
        gbc.writeMem(0x4895, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x453d, gbc.sp());
        EXPECT(0x4897, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 43 00F7
        gbc.setState(0x659a, 0xba1e, 0x97c0, 0x6abf, 0x468f, 0x803a, 0x0, 0x0);
        gbc.writeMem(0x659a, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0xba1e, gbc.sp());
        EXPECT(0x659c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 43 00F8
        gbc.setState(0xc9ac, 0x6ab8, 0xb9a0, 0xef8d, 0xbdc6, 0x6693, 0x0, 0x1);
        gbc.writeMem(0xc9ac, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0x6ab8, gbc.sp());
        EXPECT(0xc9ae, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc9ac));
        EXPECT(0x43, gbc.readMem(0xc9ad));
        // CB 43 00FA
        gbc.setState(0x90f9, 0x635e, 0x1a30, 0x718f, 0xfaa7, 0xf29e, 0x0, 0x1);
        gbc.writeMem(0x90f9, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x635e, gbc.sp());
        EXPECT(0x90fb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x90f9));
        EXPECT(0x43, gbc.readMem(0x90fa));
        // CB 43 00FB
        gbc.setState(0xc450, 0x102b, 0x2510, 0x629e, 0xd8f5, 0x6eb7, 0x1, 0x0);
        gbc.writeMem(0xc450, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x102b, gbc.sp());
        EXPECT(0xc452, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc450));
        EXPECT(0x43, gbc.readMem(0xc451));
        // CB 43 00FC
        gbc.setState(0xebc0, 0xc6f6, 0x4aa0, 0x591, 0x94e7, 0xe9ee, 0x0, 0x1);
        gbc.writeMem(0xebc0, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0xc6f6, gbc.sp());
        EXPECT(0xebc2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xebc0));
        EXPECT(0x43, gbc.readMem(0xebc1));
        // CB 43 00FD
        gbc.setState(0x7fde, 0xf374, 0x4d00, 0xb445, 0x791a, 0xd4c3, 0x0, 0x0);
        gbc.writeMem(0x7fde, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0xf374, gbc.sp());
        EXPECT(0x7fe0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 43 00FE
        gbc.setState(0x7e8c, 0xa4ad, 0x7e10, 0x9003, 0x2144, 0x8766, 0x1, 0x1);
        gbc.writeMem(0x7e8c, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0xa4ad, gbc.sp());
        EXPECT(0x7e8e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 43 00FF
        gbc.setState(0x876, 0x7f2b, 0x9950, 0x4cd5, 0xf3bc, 0xf822, 0x0, 0x0);
        gbc.writeMem(0x876, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x7f2b, gbc.sp());
        EXPECT(0x878, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 43 0100
        gbc.setState(0xa707, 0xc5ca, 0x9aa0, 0x22a, 0xc444, 0x3c2e, 0x0, 0x1);
        gbc.writeMem(0xa707, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0xc5ca, gbc.sp());
        EXPECT(0xa709, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa707));
        EXPECT(0x43, gbc.readMem(0xa708));
        // CB 43 0101
        gbc.setState(0x810f, 0x1362, 0xaeb0, 0xbb0b, 0x2dea, 0xb89e, 0x1, 0x1);
        gbc.writeMem(0x810f, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x1362, gbc.sp());
        EXPECT(0x8111, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x810f));
        EXPECT(0x43, gbc.readMem(0x8110));
        // CB 43 0102
        gbc.setState(0x9927, 0x5aa8, 0x6930, 0x2d08, 0x7d5d, 0xecdc, 0x1, 0x0);
        gbc.writeMem(0x9927, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x5aa8, gbc.sp());
        EXPECT(0x9929, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9927));
        EXPECT(0x43, gbc.readMem(0x9928));
        // CB 43 0103
        gbc.setState(0x23cd, 0xbbda, 0xd8a0, 0xefb1, 0xc232, 0xc3b9, 0x0, 0x0);
        gbc.writeMem(0x23cd, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0xbbda, gbc.sp());
        EXPECT(0x23cf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 43 0104
        gbc.setState(0x39d1, 0x2e06, 0xae20, 0xcd9d, 0xc3d7, 0x9334, 0x1, 0x0);
        gbc.writeMem(0x39d1, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x2e06, gbc.sp());
        EXPECT(0x39d3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 43 0105
        gbc.setState(0xa563, 0x5aef, 0x28b0, 0x693b, 0x7c47, 0x7fb5, 0x0, 0x1);
        gbc.writeMem(0xa563, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x5aef, gbc.sp());
        EXPECT(0xa565, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa563));
        EXPECT(0x43, gbc.readMem(0xa564));
        // CB 43 0106
        gbc.setState(0x8766, 0xc172, 0x16b0, 0xe506, 0x8814, 0xfd8b, 0x0, 0x1);
        gbc.writeMem(0x8766, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0xc172, gbc.sp());
        EXPECT(0x8768, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8766));
        EXPECT(0x43, gbc.readMem(0x8767));
        // CB 43 0107
        gbc.setState(0xcfde, 0x905, 0xcf10, 0xc9e2, 0xf28b, 0x617f, 0x1, 0x0);
        gbc.writeMem(0xcfde, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x905, gbc.sp());
        EXPECT(0xcfe0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcfde));
        EXPECT(0x43, gbc.readMem(0xcfdf));
        // CB 43 0109
        gbc.setState(0xd50c, 0x10a5, 0xda50, 0x52b3, 0x1d71, 0xb6af, 0x0, 0x1);
        gbc.writeMem(0xd50c, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x10a5, gbc.sp());
        EXPECT(0xd50e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd50c));
        EXPECT(0x43, gbc.readMem(0xd50d));
        // CB 43 010A
        gbc.setState(0xc3c5, 0xc576, 0xd960, 0x6d35, 0xfe61, 0x49d, 0x1, 0x1);
        gbc.writeMem(0xc3c5, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0xc576, gbc.sp());
        EXPECT(0xc3c7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc3c5));
        EXPECT(0x43, gbc.readMem(0xc3c6));
        // CB 43 010B
        gbc.setState(0x24b7, 0x791e, 0x1b00, 0x568e, 0xec93, 0x7ed3, 0x1, 0x1);
        gbc.writeMem(0x24b7, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x791e, gbc.sp());
        EXPECT(0x24b9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 43 010C
        gbc.setState(0x873c, 0x5977, 0x5f00, 0xa7b, 0x12e6, 0xa10a, 0x0, 0x1);
        gbc.writeMem(0x873c, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x5977, gbc.sp());
        EXPECT(0x873e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x873c));
        EXPECT(0x43, gbc.readMem(0x873d));
        // CB 43 010D
        gbc.setState(0x79ce, 0xc381, 0x3600, 0x6e6, 0xfa93, 0x619f, 0x0, 0x0);
        gbc.writeMem(0x79ce, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0xc381, gbc.sp());
        EXPECT(0x79d0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 43 010E
        gbc.setState(0x86a, 0x59b7, 0x6680, 0xdafc, 0x60ea, 0x8d80, 0x1, 0x1);
        gbc.writeMem(0x86a, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x59b7, gbc.sp());
        EXPECT(0x86c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 43 010F
        gbc.setState(0x7673, 0x3ec1, 0x6620, 0x5c5, 0x27ae, 0x19ca, 0x1, 0x1);
        gbc.writeMem(0x7673, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x3ec1, gbc.sp());
        EXPECT(0x7675, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 43 0110
        gbc.setState(0x151b, 0x4fff, 0xefa0, 0xf35, 0x2aee, 0x1af0, 0x0, 0x1);
        gbc.writeMem(0x151b, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x4fff, gbc.sp());
        EXPECT(0x151d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 43 0111
        gbc.setState(0x2db1, 0x5f95, 0x19b0, 0x5e7, 0x6392, 0xeac7, 0x0, 0x0);
        gbc.writeMem(0x2db1, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x5f95, gbc.sp());
        EXPECT(0x2db3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 43 0112
        gbc.setState(0xde4d, 0xc5f7, 0x99d0, 0xb3bd, 0x2604, 0xdb7b, 0x1, 0x1);
        gbc.writeMem(0xde4d, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0xc5f7, gbc.sp());
        EXPECT(0xde4f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xde4d));
        EXPECT(0x43, gbc.readMem(0xde4e));
        // CB 43 0113
        gbc.setState(0x5f85, 0x6fb9, 0x730, 0xb452, 0x22b0, 0x86cd, 0x1, 0x1);
        gbc.writeMem(0x5f85, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x6fb9, gbc.sp());
        EXPECT(0x5f87, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 43 0114
        gbc.setState(0xa77a, 0x8306, 0xacd0, 0x254e, 0x440b, 0x6df9, 0x0, 0x1);
        gbc.writeMem(0xa77a, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x8306, gbc.sp());
        EXPECT(0xa77c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa77a));
        EXPECT(0x43, gbc.readMem(0xa77b));
        // CB 43 0115
        gbc.setState(0x5ac0, 0x6183, 0x6d70, 0xd086, 0x31ae, 0x9a30, 0x0, 0x1);
        gbc.writeMem(0x5ac0, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x6183, gbc.sp());
        EXPECT(0x5ac2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 43 0116
        gbc.setState(0xc026, 0xa60c, 0x2090, 0x785, 0x3c5f, 0xb38b, 0x1, 0x1);
        gbc.writeMem(0xc026, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0xa60c, gbc.sp());
        EXPECT(0xc028, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc026));
        EXPECT(0x43, gbc.readMem(0xc027));
        // CB 43 0117
        gbc.setState(0x34f0, 0x5df7, 0x8050, 0xa6fe, 0xc9bd, 0xd644, 0x0, 0x1);
        gbc.writeMem(0x34f0, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x5df7, gbc.sp());
        EXPECT(0x34f2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 43 0118
        gbc.setState(0x4995, 0xb4f0, 0x4de0, 0x951c, 0x83e2, 0xa875, 0x0, 0x1);
        gbc.writeMem(0x4995, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0xb4f0, gbc.sp());
        EXPECT(0x4997, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 43 0119
        gbc.setState(0xa4e2, 0xd27c, 0x73c0, 0xe445, 0xa8c3, 0xac0d, 0x0, 0x0);
        gbc.writeMem(0xa4e2, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0xd27c, gbc.sp());
        EXPECT(0xa4e4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa4e2));
        EXPECT(0x43, gbc.readMem(0xa4e3));
        // CB 43 011A
        gbc.setState(0x6e00, 0xa0c4, 0xc600, 0x3200, 0x1251, 0xcd23, 0x1, 0x1);
        gbc.writeMem(0x6e00, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0xa0c4, gbc.sp());
        EXPECT(0x6e02, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 43 011B
        gbc.setState(0xa9cf, 0x1603, 0xbc80, 0x9925, 0xa5f8, 0x8a76, 0x0, 0x0);
        gbc.writeMem(0xa9cf, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x1603, gbc.sp());
        EXPECT(0xa9d1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa9cf));
        EXPECT(0x43, gbc.readMem(0xa9d0));
        // CB 43 011C
        gbc.setState(0x4cde, 0x37cd, 0xe4f0, 0xb2b9, 0x5ec9, 0x5ebc, 0x0, 0x0);
        gbc.writeMem(0x4cde, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x37cd, gbc.sp());
        EXPECT(0x4ce0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 43 011D
        gbc.setState(0x3054, 0xfbf9, 0x5d0, 0x418e, 0x9c5e, 0x13d3, 0x1, 0x1);
        gbc.writeMem(0x3054, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0xfbf9, gbc.sp());
        EXPECT(0x3056, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 43 011E
        gbc.setState(0x650d, 0x4d54, 0xbff0, 0xdfdd, 0x85bb, 0xaab9, 0x0, 0x0);
        gbc.writeMem(0x650d, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x4d54, gbc.sp());
        EXPECT(0x650f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 43 011F
        gbc.setState(0x2893, 0x908b, 0xf9d0, 0x9c8e, 0x9fbd, 0x88f1, 0x0, 0x1);
        gbc.writeMem(0x2893, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x908b, gbc.sp());
        EXPECT(0x2895, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 43 0120
        gbc.setState(0x7c93, 0x5039, 0x6300, 0x8cea, 0xd319, 0x974f, 0x0, 0x1);
        gbc.writeMem(0x7c93, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x5039, gbc.sp());
        EXPECT(0x7c95, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 43 0121
        gbc.setState(0xb12, 0x7644, 0x370, 0x3dcc, 0xdce1, 0xa2d0, 0x1, 0x1);
        gbc.writeMem(0xb12, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x7644, gbc.sp());
        EXPECT(0xb14, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 43 0122
        gbc.setState(0x1f65, 0x410e, 0xc580, 0xb3eb, 0xaea, 0x88c8, 0x0, 0x1);
        gbc.writeMem(0x1f65, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x410e, gbc.sp());
        EXPECT(0x1f67, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 43 0123
        gbc.setState(0x64b4, 0x4326, 0xc2a0, 0x4c02, 0x1092, 0x7719, 0x0, 0x0);
        gbc.writeMem(0x64b4, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x4326, gbc.sp());
        EXPECT(0x64b6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 43 0124
        gbc.setState(0x8d26, 0xaa00, 0x33b0, 0xa9d2, 0xc35e, 0xa72, 0x0, 0x1);
        gbc.writeMem(0x8d26, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0xaa00, gbc.sp());
        EXPECT(0x8d28, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8d26));
        EXPECT(0x43, gbc.readMem(0x8d27));
        // CB 43 0125
        gbc.setState(0x6505, 0x963c, 0xe410, 0x4aa5, 0x79e9, 0x8fdc, 0x1, 0x0);
        gbc.writeMem(0x6505, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x963c, gbc.sp());
        EXPECT(0x6507, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 43 0126
        gbc.setState(0x969c, 0xb943, 0xfc00, 0xc853, 0x5117, 0x2e1d, 0x0, 0x0);
        gbc.writeMem(0x969c, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0xb943, gbc.sp());
        EXPECT(0x969e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x969c));
        EXPECT(0x43, gbc.readMem(0x969d));
        // CB 43 0127
        gbc.setState(0xd752, 0x9b76, 0xbb20, 0xbdf6, 0xc00c, 0x712c, 0x0, 0x0);
        gbc.writeMem(0xd752, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x9b76, gbc.sp());
        EXPECT(0xd754, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd752));
        EXPECT(0x43, gbc.readMem(0xd753));
        // CB 43 0128
        gbc.setState(0xd60c, 0x9e53, 0xef20, 0xb31a, 0x4bd8, 0x2024, 0x1, 0x1);
        gbc.writeMem(0xd60c, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x9e53, gbc.sp());
        EXPECT(0xd60e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd60c));
        EXPECT(0x43, gbc.readMem(0xd60d));
        // CB 43 0129
        gbc.setState(0xccc5, 0x9749, 0xa920, 0xf1cb, 0x16c7, 0x2d8a, 0x0, 0x1);
        gbc.writeMem(0xccc5, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x9749, gbc.sp());
        EXPECT(0xccc7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xccc5));
        EXPECT(0x43, gbc.readMem(0xccc6));
        // CB 43 012A
        gbc.setState(0x67bb, 0x405b, 0x61f0, 0x81d3, 0xf4b2, 0x488b, 0x0, 0x0);
        gbc.writeMem(0x67bb, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x405b, gbc.sp());
        EXPECT(0x67bd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 43 012B
        gbc.setState(0x4100, 0xba5d, 0x8b50, 0x23a3, 0xa086, 0x28e3, 0x0, 0x0);
        gbc.writeMem(0x4100, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0xba5d, gbc.sp());
        EXPECT(0x4102, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 43 012C
        gbc.setState(0xa380, 0x1a38, 0xadb0, 0x7820, 0x8eb1, 0x263b, 0x1, 0x1);
        gbc.writeMem(0xa380, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x1a38, gbc.sp());
        EXPECT(0xa382, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa380));
        EXPECT(0x43, gbc.readMem(0xa381));
        // CB 43 012D
        gbc.setState(0x145a, 0x473c, 0x1bd0, 0x50fa, 0x7df2, 0xb56c, 0x0, 0x1);
        gbc.writeMem(0x145a, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x473c, gbc.sp());
        EXPECT(0x145c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 43 012E
        gbc.setState(0x18bd, 0x7e30, 0x2830, 0xab04, 0x690f, 0xe7f1, 0x0, 0x1);
        gbc.writeMem(0x18bd, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x7e30, gbc.sp());
        EXPECT(0x18bf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 43 0130
        gbc.setState(0x8e9f, 0x3c6a, 0x6d20, 0x8659, 0xf26a, 0x5817, 0x1, 0x1);
        gbc.writeMem(0x8e9f, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x3c6a, gbc.sp());
        EXPECT(0x8ea1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8e9f));
        EXPECT(0x43, gbc.readMem(0x8ea0));
        // CB 43 0133
        gbc.setState(0x3ca, 0xeab8, 0x3ed0, 0xe703, 0x6938, 0xae25, 0x0, 0x1);
        gbc.writeMem(0x3ca, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0xeab8, gbc.sp());
        EXPECT(0x3cc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 43 0134
        gbc.setState(0xea07, 0xed8b, 0x29c0, 0xea3, 0xf890, 0x6bcd, 0x1, 0x1);
        gbc.writeMem(0xea07, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0xed8b, gbc.sp());
        EXPECT(0xea09, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xea07));
        EXPECT(0x43, gbc.readMem(0xea08));
        // CB 43 0135
        gbc.setState(0xeef1, 0x2e16, 0xd830, 0x6899, 0x149, 0x716b, 0x1, 0x0);
        gbc.writeMem(0xeef1, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x2e16, gbc.sp());
        EXPECT(0xeef3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeef1));
        EXPECT(0x43, gbc.readMem(0xeef2));
        // CB 43 0136
        gbc.setState(0x638d, 0x16f6, 0x7cc0, 0x770a, 0x21fd, 0x1310, 0x0, 0x0);
        gbc.writeMem(0x638d, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x16f6, gbc.sp());
        EXPECT(0x638f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 43 0137
        gbc.setState(0x48cb, 0x6b19, 0x2d40, 0x5902, 0xa16, 0x2434, 0x1, 0x1);
        gbc.writeMem(0x48cb, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x6b19, gbc.sp());
        EXPECT(0x48cd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 43 0138
        gbc.setState(0x12b4, 0xa4fd, 0x4820, 0x2ffd, 0x56e9, 0x436, 0x0, 0x1);
        gbc.writeMem(0x12b4, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0xa4fd, gbc.sp());
        EXPECT(0x12b6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 43 0139
        gbc.setState(0x3df7, 0xe046, 0x410, 0x4157, 0xb1b5, 0x7fd, 0x0, 0x1);
        gbc.writeMem(0x3df7, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0xe046, gbc.sp());
        EXPECT(0x3df9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 43 013A
        gbc.setState(0x2563, 0xc623, 0x4f0, 0x6767, 0x3a58, 0x2d1c, 0x1, 0x1);
        gbc.writeMem(0x2563, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0xc623, gbc.sp());
        EXPECT(0x2565, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 43 013B
        gbc.setState(0xec24, 0x5cf4, 0xa4d0, 0xb8f3, 0xe247, 0x5f2c, 0x0, 0x0);
        gbc.writeMem(0xec24, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x5cf4, gbc.sp());
        EXPECT(0xec26, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xec24));
        EXPECT(0x43, gbc.readMem(0xec25));
        // CB 43 013C
        gbc.setState(0xb39f, 0x8a1e, 0x90b0, 0xc7b, 0x450, 0xea23, 0x0, 0x0);
        gbc.writeMem(0xb39f, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x8a1e, gbc.sp());
        EXPECT(0xb3a1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb39f));
        EXPECT(0x43, gbc.readMem(0xb3a0));
        // CB 43 013D
        gbc.setState(0x362e, 0x5386, 0xada0, 0x6a79, 0x6ede, 0x590e, 0x1, 0x0);
        gbc.writeMem(0x362e, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x5386, gbc.sp());
        EXPECT(0x3630, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 43 013E
        gbc.setState(0x77d6, 0xf172, 0xc170, 0x1ee4, 0x70b0, 0xa5f2, 0x1, 0x0);
        gbc.writeMem(0x77d6, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0xf172, gbc.sp());
        EXPECT(0x77d8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 43 013F
        gbc.setState(0x994e, 0xdeb6, 0x44a0, 0xa6d6, 0x56a8, 0x22ce, 0x0, 0x0);
        gbc.writeMem(0x994e, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0xdeb6, gbc.sp());
        EXPECT(0x9950, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x994e));
        EXPECT(0x43, gbc.readMem(0x994f));
        // CB 43 0141
        gbc.setState(0xb57d, 0xbd8b, 0xae90, 0xb741, 0xb27b, 0xdbec, 0x1, 0x1);
        gbc.writeMem(0xb57d, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0xbd8b, gbc.sp());
        EXPECT(0xb57f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb57d));
        EXPECT(0x43, gbc.readMem(0xb57e));
        // CB 43 0142
        gbc.setState(0xb24d, 0x5dd9, 0x9230, 0x72a7, 0xf96e, 0xdc3c, 0x0, 0x1);
        gbc.writeMem(0xb24d, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x5dd9, gbc.sp());
        EXPECT(0xb24f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb24d));
        EXPECT(0x43, gbc.readMem(0xb24e));
        // CB 43 0144
        gbc.setState(0x8139, 0x317, 0x76b0, 0x8de0, 0x1f02, 0xc801, 0x0, 0x0);
        gbc.writeMem(0x8139, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x317, gbc.sp());
        EXPECT(0x813b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8139));
        EXPECT(0x43, gbc.readMem(0x813a));
        // CB 43 0145
        gbc.setState(0x872a, 0x45e7, 0x5960, 0x71f3, 0x22ab, 0xf8f2, 0x0, 0x0);
        gbc.writeMem(0x872a, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x45e7, gbc.sp());
        EXPECT(0x872c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x872a));
        EXPECT(0x43, gbc.readMem(0x872b));
        // CB 43 0146
        gbc.setState(0x90ea, 0x1558, 0x3540, 0x8eb7, 0x3c2, 0xa1bd, 0x0, 0x1);
        gbc.writeMem(0x90ea, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x1558, gbc.sp());
        EXPECT(0x90ec, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x90ea));
        EXPECT(0x43, gbc.readMem(0x90eb));
        // CB 43 0147
        gbc.setState(0xe3cf, 0x144d, 0x8ba0, 0x701e, 0x4fab, 0x3c46, 0x1, 0x1);
        gbc.writeMem(0xe3cf, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x144d, gbc.sp());
        EXPECT(0xe3d1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe3cf));
        EXPECT(0x43, gbc.readMem(0xe3d0));
        // CB 43 0148
        gbc.setState(0x6ffe, 0x3648, 0xdf30, 0x6967, 0xb4d6, 0xa205, 0x0, 0x1);
        gbc.writeMem(0x6ffe, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x3648, gbc.sp());
        EXPECT(0x7000, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 43 0149
        gbc.setState(0xccaa, 0x74b2, 0x1b0, 0x82b, 0x1d86, 0x1f3d, 0x1, 0x1);
        gbc.writeMem(0xccaa, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x74b2, gbc.sp());
        EXPECT(0xccac, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xccaa));
        EXPECT(0x43, gbc.readMem(0xccab));
        // CB 43 014A
        gbc.setState(0x38b6, 0xe7d7, 0x3270, 0x4c9f, 0x4a41, 0x61da, 0x0, 0x1);
        gbc.writeMem(0x38b6, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0xe7d7, gbc.sp());
        EXPECT(0x38b8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 43 014B
        gbc.setState(0x1464, 0x49a2, 0x25d0, 0xbfca, 0x7f72, 0x7b1c, 0x0, 0x0);
        gbc.writeMem(0x1464, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x49a2, gbc.sp());
        EXPECT(0x1466, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 43 014C
        gbc.setState(0x5b40, 0xee03, 0xf840, 0xae95, 0xed8f, 0xfbf2, 0x1, 0x0);
        gbc.writeMem(0x5b40, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0xee03, gbc.sp());
        EXPECT(0x5b42, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 43 014D
        gbc.setState(0xbe3d, 0x301b, 0x6ac0, 0xf354, 0xa9a7, 0x5bb6, 0x0, 0x0);
        gbc.writeMem(0xbe3d, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x301b, gbc.sp());
        EXPECT(0xbe3f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbe3d));
        EXPECT(0x43, gbc.readMem(0xbe3e));
        // CB 43 014E
        gbc.setState(0xce45, 0xd2fe, 0xece0, 0x3e99, 0x6865, 0x77be, 0x1, 0x1);
        gbc.writeMem(0xce45, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0xd2fe, gbc.sp());
        EXPECT(0xce47, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xce45));
        EXPECT(0x43, gbc.readMem(0xce46));
        // CB 43 014F
        gbc.setState(0x57f0, 0xbff8, 0x1fc0, 0x5cf1, 0x7eb1, 0x9ede, 0x0, 0x0);
        gbc.writeMem(0x57f0, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0xbff8, gbc.sp());
        EXPECT(0x57f2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 43 0150
        gbc.setState(0xc851, 0xe6d6, 0x2480, 0x2e42, 0xadc8, 0x4b4, 0x1, 0x1);
        gbc.writeMem(0xc851, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0xe6d6, gbc.sp());
        EXPECT(0xc853, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc851));
        EXPECT(0x43, gbc.readMem(0xc852));
        // CB 43 0151
        gbc.setState(0x8f39, 0x2146, 0x8920, 0xdb96, 0x3fae, 0x7f77, 0x0, 0x1);
        gbc.writeMem(0x8f39, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x2146, gbc.sp());
        EXPECT(0x8f3b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8f39));
        EXPECT(0x43, gbc.readMem(0x8f3a));
        // CB 43 0152
        gbc.setState(0x6ef8, 0x702f, 0x9840, 0x9aa3, 0xf23e, 0xe587, 0x0, 0x1);
        gbc.writeMem(0x6ef8, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x702f, gbc.sp());
        EXPECT(0x6efa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 43 0153
        gbc.setState(0x1544, 0x2f6a, 0x3850, 0xde43, 0xc13f, 0xa4f7, 0x0, 0x1);
        gbc.writeMem(0x1544, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x2f6a, gbc.sp());
        EXPECT(0x1546, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 43 0154
        gbc.setState(0xec55, 0xc106, 0xc4a0, 0x364f, 0x59df, 0x9303, 0x1, 0x0);
        gbc.writeMem(0xec55, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0xc106, gbc.sp());
        EXPECT(0xec57, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xec55));
        EXPECT(0x43, gbc.readMem(0xec56));
        // CB 43 0155
        gbc.setState(0x3844, 0x1b34, 0xe100, 0x9346, 0xe148, 0x8387, 0x0, 0x1);
        gbc.writeMem(0x3844, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x1b34, gbc.sp());
        EXPECT(0x3846, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 43 0156
        gbc.setState(0x7dbc, 0xfd4c, 0x42e0, 0xec4f, 0xb938, 0xa295, 0x0, 0x1);
        gbc.writeMem(0x7dbc, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0xfd4c, gbc.sp());
        EXPECT(0x7dbe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 43 0157
        gbc.setState(0x7069, 0x3988, 0xf5a0, 0x5c0, 0x7723, 0xe099, 0x0, 0x1);
        gbc.writeMem(0x7069, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x3988, gbc.sp());
        EXPECT(0x706b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 43 0158
        gbc.setState(0x4367, 0x3f6, 0xf6a0, 0x1d03, 0x5328, 0xcd13, 0x0, 0x0);
        gbc.writeMem(0x4367, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x3f6, gbc.sp());
        EXPECT(0x4369, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 43 015A
        gbc.setState(0xe841, 0x6c83, 0xe090, 0xa3da, 0x70cb, 0x8b07, 0x0, 0x0);
        gbc.writeMem(0xe841, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x6c83, gbc.sp());
        EXPECT(0xe843, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe841));
        EXPECT(0x43, gbc.readMem(0xe842));
        // CB 43 015B
        gbc.setState(0xaa01, 0x4fae, 0x8540, 0x6d19, 0xe22f, 0xd8aa, 0x0, 0x1);
        gbc.writeMem(0xaa01, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x4fae, gbc.sp());
        EXPECT(0xaa03, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaa01));
        EXPECT(0x43, gbc.readMem(0xaa02));
        // CB 43 015C
        gbc.setState(0xa3, 0x5555, 0x7a40, 0x89f9, 0xeb6c, 0xc17a, 0x0, 0x1);
        gbc.writeMem(0xa3, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x5555, gbc.sp());
        EXPECT(0xa5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 43 015D
        gbc.setState(0xc12c, 0x5abc, 0x5c00, 0xa0d1, 0x73df, 0x319a, 0x1, 0x1);
        gbc.writeMem(0xc12c, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x5abc, gbc.sp());
        EXPECT(0xc12e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc12c));
        EXPECT(0x43, gbc.readMem(0xc12d));
        // CB 43 015E
        gbc.setState(0xd45e, 0x1f0d, 0xbab0, 0xeffb, 0x4024, 0x380c, 0x1, 0x1);
        gbc.writeMem(0xd45e, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x1f0d, gbc.sp());
        EXPECT(0xd460, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd45e));
        EXPECT(0x43, gbc.readMem(0xd45f));
        // CB 43 015F
        gbc.setState(0x9671, 0x8c8, 0x7bc0, 0x5b1, 0xde87, 0x5c82, 0x1, 0x0);
        gbc.writeMem(0x9671, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x8c8, gbc.sp());
        EXPECT(0x9673, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9671));
        EXPECT(0x43, gbc.readMem(0x9672));
        // CB 43 0161
        gbc.setState(0x2487, 0xfc0c, 0x1e20, 0x80e9, 0x2218, 0x7af4, 0x0, 0x1);
        gbc.writeMem(0x2487, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0xfc0c, gbc.sp());
        EXPECT(0x2489, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 43 0162
        gbc.setState(0x6394, 0xdeba, 0xecc0, 0x82e8, 0x555c, 0xd47f, 0x1, 0x0);
        gbc.writeMem(0x6394, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0xdeba, gbc.sp());
        EXPECT(0x6396, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 43 0163
        gbc.setState(0x37f2, 0xf98d, 0xa720, 0x7dff, 0x8fd, 0xad2d, 0x0, 0x1);
        gbc.writeMem(0x37f2, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0xf98d, gbc.sp());
        EXPECT(0x37f4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 43 0164
        gbc.setState(0x5a02, 0x4790, 0xc9e0, 0x4d35, 0x7632, 0x8108, 0x0, 0x0);
        gbc.writeMem(0x5a02, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x4790, gbc.sp());
        EXPECT(0x5a04, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 43 0165
        gbc.setState(0xe0f4, 0xedc3, 0x5340, 0xf7e, 0x2779, 0x2bcb, 0x0, 0x0);
        gbc.writeMem(0xe0f4, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0xedc3, gbc.sp());
        EXPECT(0xe0f6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe0f4));
        EXPECT(0x43, gbc.readMem(0xe0f5));
        // CB 43 0166
        gbc.setState(0xc2de, 0xcb15, 0xac30, 0xd279, 0x300d, 0x9e4, 0x1, 0x1);
        gbc.writeMem(0xc2de, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0xcb15, gbc.sp());
        EXPECT(0xc2e0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc2de));
        EXPECT(0x43, gbc.readMem(0xc2df));
        // CB 43 0167
        gbc.setState(0x6afc, 0xf22f, 0xb670, 0x961a, 0xc1fb, 0x969d, 0x0, 0x0);
        gbc.writeMem(0x6afc, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0xf22f, gbc.sp());
        EXPECT(0x6afe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 43 0168
        gbc.setState(0x111e, 0xbee1, 0x8f90, 0xfab, 0x8c5f, 0x2b0f, 0x0, 0x0);
        gbc.writeMem(0x111e, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0xbee1, gbc.sp());
        EXPECT(0x1120, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 43 0169
        gbc.setState(0x3733, 0x84cd, 0x7280, 0xf100, 0x4460, 0x9c61, 0x1, 0x0);
        gbc.writeMem(0x3733, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x84cd, gbc.sp());
        EXPECT(0x3735, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 43 016B
        gbc.setState(0xa7f5, 0xc775, 0x3310, 0x37c5, 0xbed1, 0x5f11, 0x1, 0x0);
        gbc.writeMem(0xa7f5, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0xc775, gbc.sp());
        EXPECT(0xa7f7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa7f5));
        EXPECT(0x43, gbc.readMem(0xa7f6));
        // CB 43 016C
        gbc.setState(0xbc99, 0xc9, 0xa090, 0x9431, 0x83ee, 0x5b9d, 0x1, 0x0);
        gbc.writeMem(0xbc99, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0xc9, gbc.sp());
        EXPECT(0xbc9b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbc99));
        EXPECT(0x43, gbc.readMem(0xbc9a));
        // CB 43 016E
        gbc.setState(0x94ab, 0xa349, 0xf0e0, 0xeff5, 0x4e2c, 0x23e0, 0x1, 0x1);
        gbc.writeMem(0x94ab, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0xa349, gbc.sp());
        EXPECT(0x94ad, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x94ab));
        EXPECT(0x43, gbc.readMem(0x94ac));
        // CB 43 0170
        gbc.setState(0xba46, 0x3816, 0x7ef0, 0xf300, 0xefa4, 0x761, 0x1, 0x1);
        gbc.writeMem(0xba46, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x3816, gbc.sp());
        EXPECT(0xba48, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xba46));
        EXPECT(0x43, gbc.readMem(0xba47));
        // CB 43 0171
        gbc.setState(0xac32, 0xaf5, 0x3cf0, 0x72fc, 0x334, 0x61c2, 0x0, 0x0);
        gbc.writeMem(0xac32, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0xaf5, gbc.sp());
        EXPECT(0xac34, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xac32));
        EXPECT(0x43, gbc.readMem(0xac33));
        // CB 43 0172
        gbc.setState(0x6c47, 0xa2a5, 0x7d30, 0xea02, 0xf9c7, 0x818c, 0x0, 0x0);
        gbc.writeMem(0x6c47, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0xa2a5, gbc.sp());
        EXPECT(0x6c49, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 43 0173
        gbc.setState(0x915c, 0x306e, 0x3aa0, 0x5ded, 0x1ad, 0x2f81, 0x1, 0x1);
        gbc.writeMem(0x915c, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x306e, gbc.sp());
        EXPECT(0x915e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x915c));
        EXPECT(0x43, gbc.readMem(0x915d));
        // CB 43 0174
        gbc.setState(0x965a, 0xdde8, 0xaa70, 0x6c3c, 0xb701, 0x8c61, 0x1, 0x0);
        gbc.writeMem(0x965a, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0xdde8, gbc.sp());
        EXPECT(0x965c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x965a));
        EXPECT(0x43, gbc.readMem(0x965b));
        // CB 43 0175
        gbc.setState(0xc5bf, 0x5bec, 0xe600, 0x3f3a, 0x876e, 0x175, 0x1, 0x1);
        gbc.writeMem(0xc5bf, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x5bec, gbc.sp());
        EXPECT(0xc5c1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc5bf));
        EXPECT(0x43, gbc.readMem(0xc5c0));
        // CB 43 0176
        gbc.setState(0x4901, 0xed12, 0x7880, 0x7ef1, 0x7dc5, 0x1843, 0x0, 0x0);
        gbc.writeMem(0x4901, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0xed12, gbc.sp());
        EXPECT(0x4903, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 43 0177
        gbc.setState(0x84e, 0xc6e3, 0x6d30, 0x193, 0x53f6, 0xb732, 0x0, 0x0);
        gbc.writeMem(0x84e, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0xc6e3, gbc.sp());
        EXPECT(0x850, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 43 0178
        gbc.setState(0x9188, 0xca22, 0x19a0, 0x325b, 0xe86b, 0xf8cd, 0x0, 0x1);
        gbc.writeMem(0x9188, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0xca22, gbc.sp());
        EXPECT(0x918a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9188));
        EXPECT(0x43, gbc.readMem(0x9189));
        // CB 43 0179
        gbc.setState(0x3d1d, 0x1834, 0x1c70, 0xe569, 0xf20d, 0x79df, 0x1, 0x1);
        gbc.writeMem(0x3d1d, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x1834, gbc.sp());
        EXPECT(0x3d1f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 43 017A
        gbc.setState(0xbee, 0x21f, 0x2e70, 0xff54, 0xe107, 0x826e, 0x0, 0x0);
        gbc.writeMem(0xbee, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x21f, gbc.sp());
        EXPECT(0xbf0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 43 017C
        gbc.setState(0x159a, 0xc56a, 0x7df0, 0x1a89, 0x113, 0xfe24, 0x1, 0x1);
        gbc.writeMem(0x159a, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0xc56a, gbc.sp());
        EXPECT(0x159c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 43 017D
        gbc.setState(0x7a, 0xf0e6, 0x7f40, 0x2ff6, 0x8f14, 0xe1f5, 0x0, 0x1);
        gbc.writeMem(0x7a, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0xf0e6, gbc.sp());
        EXPECT(0x7c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 43 017F
        gbc.setState(0x7b06, 0xcf25, 0x6f30, 0x9c3, 0x4205, 0xdf15, 0x1, 0x1);
        gbc.writeMem(0x7b06, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0xcf25, gbc.sp());
        EXPECT(0x7b08, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 43 0180
        gbc.setState(0x7789, 0xf64d, 0x26a0, 0x835, 0x73be, 0x8944, 0x0, 0x1);
        gbc.writeMem(0x7789, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0xf64d, gbc.sp());
        EXPECT(0x778b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 43 0181
        gbc.setState(0xa0c3, 0xe874, 0x1150, 0x22bb, 0xbc5c, 0x6bb9, 0x0, 0x1);
        gbc.writeMem(0xa0c3, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0xe874, gbc.sp());
        EXPECT(0xa0c5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa0c3));
        EXPECT(0x43, gbc.readMem(0xa0c4));
        // CB 43 0182
        gbc.setState(0x79c4, 0x9239, 0xa2f0, 0xb7a7, 0xfac4, 0x1f3d, 0x0, 0x0);
        gbc.writeMem(0x79c4, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x9239, gbc.sp());
        EXPECT(0x79c6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 43 0183
        gbc.setState(0x6e93, 0x830d, 0x8c80, 0x8169, 0x94a2, 0x9829, 0x1, 0x0);
        gbc.writeMem(0x6e93, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x830d, gbc.sp());
        EXPECT(0x6e95, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 43 0184
        gbc.setState(0x6df8, 0xe410, 0x6810, 0x4c, 0x1d57, 0x23e2, 0x0, 0x1);
        gbc.writeMem(0x6df8, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0xe410, gbc.sp());
        EXPECT(0x6dfa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 43 0185
        gbc.setState(0xa66f, 0x98cb, 0x9f00, 0x262, 0x8528, 0xcd2e, 0x1, 0x1);
        gbc.writeMem(0xa66f, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x98cb, gbc.sp());
        EXPECT(0xa671, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa66f));
        EXPECT(0x43, gbc.readMem(0xa670));
        // CB 43 0186
        gbc.setState(0xeb5e, 0xeaa0, 0xc2f0, 0xb485, 0xeca5, 0x3a8e, 0x0, 0x0);
        gbc.writeMem(0xeb5e, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0xeaa0, gbc.sp());
        EXPECT(0xeb60, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeb5e));
        EXPECT(0x43, gbc.readMem(0xeb5f));
        // CB 43 0187
        gbc.setState(0x4882, 0x8ecd, 0xf210, 0x4444, 0x4ecd, 0x8724, 0x1, 0x1);
        gbc.writeMem(0x4882, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x8ecd, gbc.sp());
        EXPECT(0x4884, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 43 0188
        gbc.setState(0xde6c, 0x6c2c, 0x70b0, 0x1120, 0x34e3, 0xfb3e, 0x0, 0x0);
        gbc.writeMem(0xde6c, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x6c2c, gbc.sp());
        EXPECT(0xde6e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xde6c));
        EXPECT(0x43, gbc.readMem(0xde6d));
        // CB 43 0189
        gbc.setState(0x85be, 0x92cc, 0xc9a0, 0x7f61, 0xb7a8, 0xc5b7, 0x1, 0x1);
        gbc.writeMem(0x85be, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x92cc, gbc.sp());
        EXPECT(0x85c0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x85be));
        EXPECT(0x43, gbc.readMem(0x85bf));
        // CB 43 018A
        gbc.setState(0x8ced, 0xd655, 0x4d60, 0x7620, 0x3b31, 0x512d, 0x0, 0x0);
        gbc.writeMem(0x8ced, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0xd655, gbc.sp());
        EXPECT(0x8cef, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8ced));
        EXPECT(0x43, gbc.readMem(0x8cee));
        // CB 43 018B
        gbc.setState(0xe934, 0x3bed, 0x2ea0, 0xbf05, 0x4b17, 0xb465, 0x0, 0x0);
        gbc.writeMem(0xe934, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x3bed, gbc.sp());
        EXPECT(0xe936, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe934));
        EXPECT(0x43, gbc.readMem(0xe935));
        // CB 43 018C
        gbc.setState(0xc8b4, 0xf783, 0xce30, 0xa650, 0xb00c, 0x156f, 0x0, 0x1);
        gbc.writeMem(0xc8b4, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0xf783, gbc.sp());
        EXPECT(0xc8b6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc8b4));
        EXPECT(0x43, gbc.readMem(0xc8b5));
        // CB 43 018D
        gbc.setState(0x8cee, 0x4b76, 0x43d0, 0xf16d, 0x5f80, 0x51, 0x0, 0x1);
        gbc.writeMem(0x8cee, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x4b76, gbc.sp());
        EXPECT(0x8cf0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8cee));
        EXPECT(0x43, gbc.readMem(0x8cef));
        // CB 43 018F
        gbc.setState(0xda0d, 0x743a, 0x4f30, 0x1885, 0xd339, 0xd4c4, 0x0, 0x1);
        gbc.writeMem(0xda0d, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x743a, gbc.sp());
        EXPECT(0xda0f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xda0d));
        EXPECT(0x43, gbc.readMem(0xda0e));
        // CB 43 0190
        gbc.setState(0x7c22, 0xd100, 0xecc0, 0x62f9, 0x659, 0xe1c9, 0x0, 0x1);
        gbc.writeMem(0x7c22, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0xd100, gbc.sp());
        EXPECT(0x7c24, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 43 0191
        gbc.setState(0x545, 0x6791, 0x2220, 0x76ad, 0x20c0, 0x619a, 0x0, 0x1);
        gbc.writeMem(0x545, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x6791, gbc.sp());
        EXPECT(0x547, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 43 0192
        gbc.setState(0xd776, 0x5c05, 0xc890, 0xd5fa, 0xbc6f, 0x4b95, 0x1, 0x1);
        gbc.writeMem(0xd776, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x5c05, gbc.sp());
        EXPECT(0xd778, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd776));
        EXPECT(0x43, gbc.readMem(0xd777));
        // CB 43 0193
        gbc.setState(0x35e8, 0xca78, 0xd1e0, 0x4f74, 0xc8de, 0xbad9, 0x0, 0x0);
        gbc.writeMem(0x35e8, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0xca78, gbc.sp());
        EXPECT(0x35ea, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 43 0194
        gbc.setState(0xb157, 0x80c6, 0x4c30, 0x24d4, 0xd7a5, 0x8e62, 0x0, 0x1);
        gbc.writeMem(0xb157, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x80c6, gbc.sp());
        EXPECT(0xb159, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb157));
        EXPECT(0x43, gbc.readMem(0xb158));
        // CB 43 0195
        gbc.setState(0x361b, 0x8dfd, 0xee60, 0x9e08, 0xaf63, 0x43aa, 0x1, 0x1);
        gbc.writeMem(0x361b, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x8dfd, gbc.sp());
        EXPECT(0x361d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 43 0196
        gbc.setState(0x637b, 0x8ee2, 0xa8a0, 0xca88, 0x6ff6, 0x8b51, 0x1, 0x1);
        gbc.writeMem(0x637b, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x8ee2, gbc.sp());
        EXPECT(0x637d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 43 0197
        gbc.setState(0x67a6, 0xd1ec, 0x62a0, 0x62f8, 0xaba6, 0x8fbd, 0x1, 0x1);
        gbc.writeMem(0x67a6, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0xd1ec, gbc.sp());
        EXPECT(0x67a8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 43 0198
        gbc.setState(0x79a3, 0xb1e7, 0x22f0, 0x5965, 0xebcc, 0xae27, 0x0, 0x0);
        gbc.writeMem(0x79a3, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0xb1e7, gbc.sp());
        EXPECT(0x79a5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 43 0199
        gbc.setState(0x41ed, 0x2f1e, 0x6ef0, 0x606c, 0x5f2f, 0xcbe8, 0x0, 0x1);
        gbc.writeMem(0x41ed, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x2f1e, gbc.sp());
        EXPECT(0x41ef, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 43 019A
        gbc.setState(0x7ea5, 0xa015, 0x7af0, 0x16cc, 0x2221, 0x844b, 0x1, 0x1);
        gbc.writeMem(0x7ea5, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0xa015, gbc.sp());
        EXPECT(0x7ea7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 43 019B
        gbc.setState(0xa1f, 0x44, 0xcf60, 0x3a80, 0x7118, 0xf83, 0x1, 0x0);
        gbc.writeMem(0xa1f, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x44, gbc.sp());
        EXPECT(0xa21, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 43 019C
        gbc.setState(0x5bc7, 0x2bdb, 0x8e70, 0x9912, 0x4952, 0x6536, 0x1, 0x1);
        gbc.writeMem(0x5bc7, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x2bdb, gbc.sp());
        EXPECT(0x5bc9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 43 019D
        gbc.setState(0x5c67, 0x89f, 0x8770, 0x3372, 0x7959, 0x74fd, 0x0, 0x1);
        gbc.writeMem(0x5c67, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x89f, gbc.sp());
        EXPECT(0x5c69, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 43 019E
        gbc.setState(0xdf51, 0xbabd, 0x5200, 0xb9db, 0x19d6, 0x4473, 0x0, 0x0);
        gbc.writeMem(0xdf51, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0xbabd, gbc.sp());
        EXPECT(0xdf53, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdf51));
        EXPECT(0x43, gbc.readMem(0xdf52));
        // CB 43 019F
        gbc.setState(0x308, 0x4e65, 0xbba0, 0x64eb, 0x711c, 0x66cc, 0x0, 0x1);
        gbc.writeMem(0x308, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x4e65, gbc.sp());
        EXPECT(0x30a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 43 01A0
        gbc.setState(0x7a57, 0x17cd, 0x300, 0x700, 0xdaf4, 0x6ea4, 0x1, 0x1);
        gbc.writeMem(0x7a57, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x17cd, gbc.sp());
        EXPECT(0x7a59, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 43 01A1
        gbc.setState(0xbc02, 0xdcb8, 0x1db0, 0x9a3b, 0x73e5, 0x6e9a, 0x0, 0x0);
        gbc.writeMem(0xbc02, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0xdcb8, gbc.sp());
        EXPECT(0xbc04, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbc02));
        EXPECT(0x43, gbc.readMem(0xbc03));
        // CB 43 01A2
        gbc.setState(0x80ce, 0xa88d, 0x7a20, 0x7f54, 0x4977, 0x7b5b, 0x0, 0x0);
        gbc.writeMem(0x80ce, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0xa88d, gbc.sp());
        EXPECT(0x80d0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x80ce));
        EXPECT(0x43, gbc.readMem(0x80cf));
        // CB 43 01A3
        gbc.setState(0x4254, 0xb8a, 0xab70, 0xaedc, 0xe804, 0xd356, 0x0, 0x0);
        gbc.writeMem(0x4254, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0xb8a, gbc.sp());
        EXPECT(0x4256, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 43 01A4
        gbc.setState(0xa36, 0xc7a8, 0x5160, 0xb67e, 0x6a76, 0xf98c, 0x1, 0x1);
        gbc.writeMem(0xa36, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0xc7a8, gbc.sp());
        EXPECT(0xa38, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 43 01A5
        gbc.setState(0x4a4c, 0x5ff2, 0xe250, 0x5955, 0xf73c, 0x434, 0x0, 0x1);
        gbc.writeMem(0x4a4c, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x5ff2, gbc.sp());
        EXPECT(0x4a4e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 43 01A6
        gbc.setState(0xd90a, 0x81f8, 0x8210, 0x50db, 0x9a02, 0xdc9a, 0x1, 0x0);
        gbc.writeMem(0xd90a, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x81f8, gbc.sp());
        EXPECT(0xd90c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd90a));
        EXPECT(0x43, gbc.readMem(0xd90b));
        // CB 43 01A7
        gbc.setState(0xc3d4, 0x21d1, 0x6fb0, 0x7495, 0xfa21, 0x9812, 0x1, 0x1);
        gbc.writeMem(0xc3d4, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x21d1, gbc.sp());
        EXPECT(0xc3d6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc3d4));
        EXPECT(0x43, gbc.readMem(0xc3d5));
        // CB 43 01A8
        gbc.setState(0xbc60, 0x85ab, 0x3f40, 0xed72, 0x5fca, 0x3073, 0x1, 0x0);
        gbc.writeMem(0xbc60, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x85ab, gbc.sp());
        EXPECT(0xbc62, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbc60));
        EXPECT(0x43, gbc.readMem(0xbc61));
        // CB 43 01A9
        gbc.setState(0x69dd, 0x9d82, 0x8f30, 0x2c8e, 0xbb3a, 0x86dc, 0x1, 0x1);
        gbc.writeMem(0x69dd, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x9d82, gbc.sp());
        EXPECT(0x69df, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 43 01AA
        gbc.setState(0x948a, 0x3094, 0x3da0, 0x2992, 0x196e, 0xa357, 0x1, 0x0);
        gbc.writeMem(0x948a, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x3094, gbc.sp());
        EXPECT(0x948c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x948a));
        EXPECT(0x43, gbc.readMem(0x948b));
        // CB 43 01AB
        gbc.setState(0x5c27, 0xe137, 0x3380, 0x46bf, 0xd8a2, 0xaf05, 0x0, 0x0);
        gbc.writeMem(0x5c27, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0xe137, gbc.sp());
        EXPECT(0x5c29, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 43 01AC
        gbc.setState(0x3fc4, 0xecf6, 0x19f0, 0xffd8, 0x955c, 0x54e7, 0x0, 0x0);
        gbc.writeMem(0x3fc4, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0xecf6, gbc.sp());
        EXPECT(0x3fc6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 43 01AD
        gbc.setState(0xe485, 0x960f, 0x1300, 0x43a6, 0xae25, 0x5ebe, 0x0, 0x0);
        gbc.writeMem(0xe485, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0x960f, gbc.sp());
        EXPECT(0xe487, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe485));
        EXPECT(0x43, gbc.readMem(0xe486));
        // CB 43 01AE
        gbc.setState(0x74b1, 0xacb8, 0x5370, 0x9149, 0x1e1b, 0x6176, 0x0, 0x1);
        gbc.writeMem(0x74b1, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0xacb8, gbc.sp());
        EXPECT(0x74b3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 43 01AF
        gbc.setState(0x18d6, 0xf6d, 0x86e0, 0x330f, 0xff90, 0x411, 0x0, 0x1);
        gbc.writeMem(0x18d6, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0xf6d, gbc.sp());
        EXPECT(0x18d8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 43 01B0
        gbc.setState(0x6f56, 0xad28, 0xc520, 0xe293, 0x4405, 0x710a, 0x0, 0x1);
        gbc.writeMem(0x6f56, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0xad28, gbc.sp());
        EXPECT(0x6f58, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 43 01B1
        gbc.setState(0xd3f0, 0xffc0, 0xb5d0, 0x53de, 0x4bf7, 0xeb49, 0x1, 0x0);
        gbc.writeMem(0xd3f0, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0xffc0, gbc.sp());
        EXPECT(0xd3f2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd3f0));
        EXPECT(0x43, gbc.readMem(0xd3f1));
        // CB 43 01B2
        gbc.setState(0xddf1, 0xbf05, 0xb9b0, 0x9c29, 0x3836, 0x7479, 0x0, 0x1);
        gbc.writeMem(0xddf1, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0xbf05, gbc.sp());
        EXPECT(0xddf3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xddf1));
        EXPECT(0x43, gbc.readMem(0xddf2));
        // CB 43 01B3
        gbc.setState(0x9d18, 0x3971, 0x21c0, 0xba9b, 0x5987, 0x4068, 0x0, 0x1);
        gbc.writeMem(0x9d18, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x3971, gbc.sp());
        EXPECT(0x9d1a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9d18));
        EXPECT(0x43, gbc.readMem(0x9d19));
        // CB 43 01B5
        gbc.setState(0xec38, 0x5534, 0xa450, 0x9ab5, 0x1526, 0xc4f, 0x1, 0x0);
        gbc.writeMem(0xec38, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x5534, gbc.sp());
        EXPECT(0xec3a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xec38));
        EXPECT(0x43, gbc.readMem(0xec39));
        // CB 43 01B6
        gbc.setState(0x7284, 0xe01c, 0x26e0, 0xf14c, 0x6b63, 0x4ec9, 0x1, 0x0);
        gbc.writeMem(0x7284, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0xe01c, gbc.sp());
        EXPECT(0x7286, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 43 01B7
        gbc.setState(0xbf89, 0x2e1d, 0xce90, 0xf7b7, 0x9fe5, 0x7233, 0x1, 0x1);
        gbc.writeMem(0xbf89, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x2e1d, gbc.sp());
        EXPECT(0xbf8b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbf89));
        EXPECT(0x43, gbc.readMem(0xbf8a));
        // CB 43 01B8
        gbc.setState(0xe0be, 0xdaf4, 0xcfd0, 0xfa4a, 0x64dd, 0xb296, 0x1, 0x1);
        gbc.writeMem(0xe0be, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0xdaf4, gbc.sp());
        EXPECT(0xe0c0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe0be));
        EXPECT(0x43, gbc.readMem(0xe0bf));
        // CB 43 01B9
        gbc.setState(0x2ea1, 0x892e, 0xdfb0, 0xfdbe, 0x1f77, 0x5d6b, 0x1, 0x1);
        gbc.writeMem(0x2ea1, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x892e, gbc.sp());
        EXPECT(0x2ea3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 43 01BB
        gbc.setState(0x20f4, 0xda6f, 0x2a0, 0x91f4, 0x5b90, 0x9fad, 0x1, 0x0);
        gbc.writeMem(0x20f4, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0xda6f, gbc.sp());
        EXPECT(0x20f6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 43 01BC
        gbc.setState(0x29c6, 0x7f07, 0x4a60, 0x41c0, 0x537d, 0xc0e5, 0x1, 0x1);
        gbc.writeMem(0x29c6, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x7f07, gbc.sp());
        EXPECT(0x29c8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 43 01BD
        gbc.setState(0x79cc, 0x4e34, 0x210, 0xe1c4, 0xee2d, 0x3fe1, 0x0, 0x1);
        gbc.writeMem(0x79cc, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0x4e34, gbc.sp());
        EXPECT(0x79ce, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 43 01BE
        gbc.setState(0xe73d, 0x15b5, 0xd1f0, 0x243b, 0x5017, 0xda68, 0x0, 0x0);
        gbc.writeMem(0xe73d, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x15b5, gbc.sp());
        EXPECT(0xe73f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe73d));
        EXPECT(0x43, gbc.readMem(0xe73e));
        // CB 43 01BF
        gbc.setState(0xc86b, 0x22b9, 0xd6d0, 0x8781, 0x3fc1, 0x42b8, 0x1, 0x0);
        gbc.writeMem(0xc86b, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x22b9, gbc.sp());
        EXPECT(0xc86d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc86b));
        EXPECT(0x43, gbc.readMem(0xc86c));
        // CB 43 01C0
        gbc.setState(0xc224, 0x2743, 0x3c40, 0x7e03, 0xba0d, 0x7505, 0x1, 0x0);
        gbc.writeMem(0xc224, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x2743, gbc.sp());
        EXPECT(0xc226, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc224));
        EXPECT(0x43, gbc.readMem(0xc225));
        // CB 43 01C1
        gbc.setState(0xd600, 0xd1f6, 0x8ef0, 0x495f, 0x3f92, 0x2972, 0x0, 0x1);
        gbc.writeMem(0xd600, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0xd1f6, gbc.sp());
        EXPECT(0xd602, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd600));
        EXPECT(0x43, gbc.readMem(0xd601));
        // CB 43 01C2
        gbc.setState(0xa1c7, 0xc4f6, 0x1180, 0xe677, 0x3936, 0xbf83, 0x0, 0x1);
        gbc.writeMem(0xa1c7, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0xc4f6, gbc.sp());
        EXPECT(0xa1c9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa1c7));
        EXPECT(0x43, gbc.readMem(0xa1c8));
        // CB 43 01C3
        gbc.setState(0x8dad, 0x9bd1, 0xe9c0, 0x83e2, 0xfd8b, 0x1303, 0x0, 0x0);
        gbc.writeMem(0x8dad, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x9bd1, gbc.sp());
        EXPECT(0x8daf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8dad));
        EXPECT(0x43, gbc.readMem(0x8dae));
        // CB 43 01C4
        gbc.setState(0x7759, 0x80cf, 0xa460, 0xf9b9, 0x4fd8, 0x292a, 0x1, 0x1);
        gbc.writeMem(0x7759, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x80cf, gbc.sp());
        EXPECT(0x775b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 43 01C5
        gbc.setState(0x8446, 0x9991, 0x61f0, 0x9ca8, 0xae36, 0x58e8, 0x1, 0x1);
        gbc.writeMem(0x8446, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x9991, gbc.sp());
        EXPECT(0x8448, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8446));
        EXPECT(0x43, gbc.readMem(0x8447));
        // CB 43 01C6
        gbc.setState(0xd4a4, 0x6edf, 0xba30, 0xf808, 0xbf27, 0xd39b, 0x1, 0x1);
        gbc.writeMem(0xd4a4, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x6edf, gbc.sp());
        EXPECT(0xd4a6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd4a4));
        EXPECT(0x43, gbc.readMem(0xd4a5));
        // CB 43 01C7
        gbc.setState(0x9fac, 0x70ce, 0x9cb0, 0xf5c, 0xe71c, 0x7bda, 0x1, 0x0);
        gbc.writeMem(0x9fac, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x70ce, gbc.sp());
        EXPECT(0x9fae, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9fac));
        EXPECT(0x43, gbc.readMem(0x9fad));
        // CB 43 01C8
        gbc.setState(0x51e0, 0xd7c, 0x7fd0, 0xf9a4, 0x230d, 0x9aea, 0x1, 0x0);
        gbc.writeMem(0x51e0, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0xd7c, gbc.sp());
        EXPECT(0x51e2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 43 01C9
        gbc.setState(0xc9a3, 0xd5f2, 0x3770, 0x89c3, 0x36f0, 0x26b4, 0x0, 0x1);
        gbc.writeMem(0xc9a3, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0xd5f2, gbc.sp());
        EXPECT(0xc9a5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc9a3));
        EXPECT(0x43, gbc.readMem(0xc9a4));
        // CB 43 01CB
        gbc.setState(0x5621, 0x4e21, 0xbc40, 0x12d4, 0x395c, 0x53ab, 0x0, 0x1);
        gbc.writeMem(0x5621, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x4e21, gbc.sp());
        EXPECT(0x5623, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 43 01CC
        gbc.setState(0xc1ad, 0x78d9, 0x7470, 0x786f, 0xe2ed, 0x30ec, 0x1, 0x0);
        gbc.writeMem(0xc1ad, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x78d9, gbc.sp());
        EXPECT(0xc1af, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc1ad));
        EXPECT(0x43, gbc.readMem(0xc1ae));
        // CB 43 01CD
        gbc.setState(0x5334, 0xa1aa, 0x9e30, 0xb02d, 0xfaa, 0x7c2, 0x1, 0x1);
        gbc.writeMem(0x5334, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0xa1aa, gbc.sp());
        EXPECT(0x5336, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 43 01CE
        gbc.setState(0x9c76, 0xc994, 0x6ef0, 0xbd0d, 0x4165, 0xacbe, 0x0, 0x1);
        gbc.writeMem(0x9c76, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0xc994, gbc.sp());
        EXPECT(0x9c78, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9c76));
        EXPECT(0x43, gbc.readMem(0x9c77));
        // CB 43 01D0
        gbc.setState(0xc627, 0xfaed, 0x3090, 0x2ee1, 0x6060, 0x20e4, 0x0, 0x0);
        gbc.writeMem(0xc627, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0xfaed, gbc.sp());
        EXPECT(0xc629, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc627));
        EXPECT(0x43, gbc.readMem(0xc628));
        // CB 43 01D1
        gbc.setState(0x944c, 0x2fb6, 0xc620, 0xccd7, 0x8218, 0x5708, 0x1, 0x0);
        gbc.writeMem(0x944c, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x2fb6, gbc.sp());
        EXPECT(0x944e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x944c));
        EXPECT(0x43, gbc.readMem(0x944d));
        // CB 43 01D2
        gbc.setState(0x37df, 0x4a29, 0xa9d0, 0xe7c0, 0x7864, 0x575, 0x1, 0x1);
        gbc.writeMem(0x37df, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x4a29, gbc.sp());
        EXPECT(0x37e1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 43 01D3
        gbc.setState(0x5f09, 0xca33, 0x43b0, 0xea26, 0x9d5a, 0x8bf8, 0x1, 0x1);
        gbc.writeMem(0x5f09, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0xca33, gbc.sp());
        EXPECT(0x5f0b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 43 01D4
        gbc.setState(0x84ca, 0x1fbf, 0x1980, 0x47fc, 0x208f, 0xf718, 0x0, 0x0);
        gbc.writeMem(0x84ca, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x1fbf, gbc.sp());
        EXPECT(0x84cc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x84ca));
        EXPECT(0x43, gbc.readMem(0x84cb));
        // CB 43 01D5
        gbc.setState(0xdaaf, 0xf890, 0x1500, 0xe551, 0x2ba8, 0xc9ea, 0x1, 0x0);
        gbc.writeMem(0xdaaf, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0xf890, gbc.sp());
        EXPECT(0xdab1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdaaf));
        EXPECT(0x43, gbc.readMem(0xdab0));
        // CB 43 01D6
        gbc.setState(0xa51a, 0x6418, 0x3670, 0x1858, 0x1481, 0xa476, 0x1, 0x0);
        gbc.writeMem(0xa51a, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x6418, gbc.sp());
        EXPECT(0xa51c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa51a));
        EXPECT(0x43, gbc.readMem(0xa51b));
        // CB 43 01D7
        gbc.setState(0xe92c, 0x93c4, 0x61d0, 0xadde, 0xe299, 0xc066, 0x0, 0x1);
        gbc.writeMem(0xe92c, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x93c4, gbc.sp());
        EXPECT(0xe92e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe92c));
        EXPECT(0x43, gbc.readMem(0xe92d));
        // CB 43 01D8
        gbc.setState(0x6b58, 0xe2e4, 0x4480, 0xb676, 0x4787, 0x3910, 0x1, 0x1);
        gbc.writeMem(0x6b58, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0xe2e4, gbc.sp());
        EXPECT(0x6b5a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 43 01D9
        gbc.setState(0xd79e, 0xec0e, 0x38f0, 0xc919, 0x9ce0, 0x6554, 0x0, 0x1);
        gbc.writeMem(0xd79e, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0xec0e, gbc.sp());
        EXPECT(0xd7a0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd79e));
        EXPECT(0x43, gbc.readMem(0xd79f));
        // CB 43 01DA
        gbc.setState(0x3801, 0x22a3, 0xd700, 0x45e7, 0xed61, 0x384d, 0x0, 0x1);
        gbc.writeMem(0x3801, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x22a3, gbc.sp());
        EXPECT(0x3803, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 43 01DB
        gbc.setState(0x153f, 0xe997, 0x9770, 0xe1f2, 0x17d4, 0x60d1, 0x1, 0x0);
        gbc.writeMem(0x153f, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0xe997, gbc.sp());
        EXPECT(0x1541, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 43 01DC
        gbc.setState(0xa41c, 0x7341, 0xdbc0, 0xf55f, 0x859e, 0xa31d, 0x0, 0x0);
        gbc.writeMem(0xa41c, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x7341, gbc.sp());
        EXPECT(0xa41e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa41c));
        EXPECT(0x43, gbc.readMem(0xa41d));
        // CB 43 01DD
        gbc.setState(0x7301, 0x152c, 0x99a0, 0x6728, 0x72a2, 0xc613, 0x0, 0x1);
        gbc.writeMem(0x7301, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x152c, gbc.sp());
        EXPECT(0x7303, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 43 01DE
        gbc.setState(0xfd4, 0x9c84, 0xf920, 0x86f5, 0x5f9f, 0xf78a, 0x0, 0x1);
        gbc.writeMem(0xfd4, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x9c84, gbc.sp());
        EXPECT(0xfd6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 43 01DF
        gbc.setState(0xa385, 0xa5b1, 0xf360, 0x49db, 0x53f, 0x59c7, 0x0, 0x1);
        gbc.writeMem(0xa385, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0xa5b1, gbc.sp());
        EXPECT(0xa387, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa385));
        EXPECT(0x43, gbc.readMem(0xa386));
        // CB 43 01E0
        gbc.setState(0xe83b, 0x788f, 0x5e0, 0x4490, 0x4bc2, 0xcb1, 0x0, 0x1);
        gbc.writeMem(0xe83b, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x788f, gbc.sp());
        EXPECT(0xe83d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe83b));
        EXPECT(0x43, gbc.readMem(0xe83c));
        // CB 43 01E1
        gbc.setState(0x467c, 0x50e, 0xd2c0, 0x2ec3, 0x7adc, 0x9acf, 0x0, 0x1);
        gbc.writeMem(0x467c, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x50e, gbc.sp());
        EXPECT(0x467e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 43 01E2
        gbc.setState(0xe488, 0xd9ff, 0xc450, 0x25d7, 0xf199, 0x73ce, 0x1, 0x0);
        gbc.writeMem(0xe488, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0xd9ff, gbc.sp());
        EXPECT(0xe48a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe488));
        EXPECT(0x43, gbc.readMem(0xe489));
        // CB 43 01E3
        gbc.setState(0x8e56, 0x757a, 0x960, 0x8601, 0x2a50, 0xb06b, 0x0, 0x1);
        gbc.writeMem(0x8e56, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x757a, gbc.sp());
        EXPECT(0x8e58, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8e56));
        EXPECT(0x43, gbc.readMem(0x8e57));
        // CB 43 01E4
        gbc.setState(0x6c60, 0xe8cf, 0xf500, 0x4fa7, 0x9916, 0x72b7, 0x1, 0x0);
        gbc.writeMem(0x6c60, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0xe8cf, gbc.sp());
        EXPECT(0x6c62, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 43 01E5
        gbc.setState(0xe5a9, 0x89f, 0x34b0, 0x9ee0, 0x5c7b, 0x3a26, 0x0, 0x1);
        gbc.writeMem(0xe5a9, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x89f, gbc.sp());
        EXPECT(0xe5ab, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe5a9));
        EXPECT(0x43, gbc.readMem(0xe5aa));
        // CB 43 01E6
        gbc.setState(0xe8d3, 0xb33e, 0x13f0, 0xe745, 0x4be0, 0xb980, 0x0, 0x0);
        gbc.writeMem(0xe8d3, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0xb33e, gbc.sp());
        EXPECT(0xe8d5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe8d3));
        EXPECT(0x43, gbc.readMem(0xe8d4));
        // CB 43 01E7
        gbc.setState(0x7fde, 0xa1a6, 0xf0e0, 0xaaa9, 0x42cd, 0x2827, 0x0, 0x1);
        gbc.writeMem(0x7fde, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0xa1a6, gbc.sp());
        EXPECT(0x7fe0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 43 01EA
        gbc.setState(0xdddf, 0x41ff, 0x1ce0, 0xd334, 0x97a9, 0xdbf6, 0x1, 0x1);
        gbc.writeMem(0xdddf, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x41ff, gbc.sp());
        EXPECT(0xdde1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdddf));
        EXPECT(0x43, gbc.readMem(0xdde0));
        // CB 43 01EB
        gbc.setState(0x32f9, 0x3e71, 0x7400, 0xf0c8, 0xa5bf, 0x109d, 0x0, 0x1);
        gbc.writeMem(0x32f9, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x3e71, gbc.sp());
        EXPECT(0x32fb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 43 01EC
        gbc.setState(0xc93b, 0x7c1b, 0x48e0, 0xbeb5, 0xd9ce, 0xb1e5, 0x1, 0x0);
        gbc.writeMem(0xc93b, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x7c1b, gbc.sp());
        EXPECT(0xc93d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc93b));
        EXPECT(0x43, gbc.readMem(0xc93c));
        // CB 43 01ED
        gbc.setState(0x2e2b, 0xf5ad, 0x34c0, 0x73f0, 0x8f7e, 0xcb54, 0x1, 0x0);
        gbc.writeMem(0x2e2b, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0xf5ad, gbc.sp());
        EXPECT(0x2e2d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 43 01EE
        gbc.setState(0xc77, 0xbc17, 0x6cd0, 0x2614, 0xcba0, 0xa621, 0x1, 0x0);
        gbc.writeMem(0xc77, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0xbc17, gbc.sp());
        EXPECT(0xc79, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 43 01EF
        gbc.setState(0x35a9, 0xf59d, 0x7ed0, 0x5efe, 0x1a3d, 0xa6c5, 0x1, 0x0);
        gbc.writeMem(0x35a9, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0xf59d, gbc.sp());
        EXPECT(0x35ab, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 43 01F0
        gbc.setState(0x5ce7, 0xbb6d, 0x1dd0, 0x95a9, 0x5475, 0x2b9f, 0x0, 0x0);
        gbc.writeMem(0x5ce7, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0xbb6d, gbc.sp());
        EXPECT(0x5ce9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 43 01F1
        gbc.setState(0x9c2d, 0xce1a, 0x1910, 0x3122, 0xd622, 0x7363, 0x1, 0x1);
        gbc.writeMem(0x9c2d, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0xce1a, gbc.sp());
        EXPECT(0x9c2f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9c2d));
        EXPECT(0x43, gbc.readMem(0x9c2e));
        // CB 43 01F2
        gbc.setState(0x30ad, 0xaf25, 0xdf80, 0xc765, 0x90ab, 0x54ca, 0x1, 0x1);
        gbc.writeMem(0x30ad, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0xaf25, gbc.sp());
        EXPECT(0x30af, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 43 01F3
        gbc.setState(0x8925, 0x1df8, 0x7e30, 0xe449, 0x56b1, 0x55d6, 0x0, 0x0);
        gbc.writeMem(0x8925, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x1df8, gbc.sp());
        EXPECT(0x8927, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8925));
        EXPECT(0x43, gbc.readMem(0x8926));
        // CB 43 01F4
        gbc.setState(0xd3b3, 0xbec9, 0xcd20, 0xf450, 0x1a4c, 0x6c08, 0x1, 0x0);
        gbc.writeMem(0xd3b3, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0xbec9, gbc.sp());
        EXPECT(0xd3b5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd3b3));
        EXPECT(0x43, gbc.readMem(0xd3b4));
        // CB 43 01F5
        gbc.setState(0xde5a, 0xfed2, 0x9850, 0x74fd, 0x209e, 0xf8b8, 0x0, 0x1);
        gbc.writeMem(0xde5a, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0xfed2, gbc.sp());
        EXPECT(0xde5c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xde5a));
        EXPECT(0x43, gbc.readMem(0xde5b));
        // CB 43 01F6
        gbc.setState(0x5570, 0x457d, 0x1020, 0x82a2, 0xc21b, 0x4c25, 0x0, 0x1);
        gbc.writeMem(0x5570, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x457d, gbc.sp());
        EXPECT(0x5572, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 43 01F7
        gbc.setState(0x372d, 0x6487, 0xd8a0, 0x8d4, 0xec7e, 0x2e49, 0x1, 0x0);
        gbc.writeMem(0x372d, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x6487, gbc.sp());
        EXPECT(0x372f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 43 01F8
        gbc.setState(0x79de, 0x1317, 0x7c00, 0xfb49, 0x7817, 0x7d20, 0x1, 0x0);
        gbc.writeMem(0x79de, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x1317, gbc.sp());
        EXPECT(0x79e0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 43 01F9
        gbc.setState(0x68f, 0x6879, 0x3d10, 0x1dff, 0x2e63, 0xf358, 0x0, 0x0);
        gbc.writeMem(0x68f, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x6879, gbc.sp());
        EXPECT(0x691, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 43 01FA
        gbc.setState(0xcda6, 0xe6f2, 0xa440, 0x27d4, 0x4335, 0x92ac, 0x1, 0x1);
        gbc.writeMem(0xcda6, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0xe6f2, gbc.sp());
        EXPECT(0xcda8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcda6));
        EXPECT(0x43, gbc.readMem(0xcda7));
        // CB 43 01FB
        gbc.setState(0x239a, 0x9185, 0x1440, 0xc2f8, 0xd56d, 0x85c8, 0x0, 0x0);
        gbc.writeMem(0x239a, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x9185, gbc.sp());
        EXPECT(0x239c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 43 01FC
        gbc.setState(0x8976, 0xad61, 0xa080, 0x964d, 0x398b, 0x18f8, 0x0, 0x1);
        gbc.writeMem(0x8976, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0xad61, gbc.sp());
        EXPECT(0x8978, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8976));
        EXPECT(0x43, gbc.readMem(0x8977));
        // CB 43 01FD
        gbc.setState(0xea95, 0xf72f, 0xc5d0, 0xe502, 0x3d46, 0xad87, 0x0, 0x0);
        gbc.writeMem(0xea95, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0xf72f, gbc.sp());
        EXPECT(0xea97, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xea95));
        EXPECT(0x43, gbc.readMem(0xea96));
        // CB 43 01FE
        gbc.setState(0x5ef2, 0x82f9, 0xed80, 0x6468, 0xe2dd, 0x2f20, 0x0, 0x1);
        gbc.writeMem(0x5ef2, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x82f9, gbc.sp());
        EXPECT(0x5ef4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 43 01FF
        gbc.setState(0xeca5, 0xf76e, 0x2c10, 0x69a2, 0xd1f7, 0x7497, 0x0, 0x1);
        gbc.writeMem(0xeca5, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0xf76e, gbc.sp());
        EXPECT(0xeca7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeca5));
        EXPECT(0x43, gbc.readMem(0xeca6));
        // CB 43 0200
        gbc.setState(0x1210, 0xeaa, 0x48d0, 0x38d7, 0x8403, 0x2544, 0x0, 0x1);
        gbc.writeMem(0x1210, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0xeaa, gbc.sp());
        EXPECT(0x1212, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 43 0201
        gbc.setState(0x2482, 0x25a1, 0xc670, 0x3d6e, 0xe1f5, 0xac41, 0x1, 0x1);
        gbc.writeMem(0x2482, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x25a1, gbc.sp());
        EXPECT(0x2484, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 43 0202
        gbc.setState(0x5e6a, 0x14c2, 0x6200, 0x99f, 0x258a, 0xa6e6, 0x0, 0x1);
        gbc.writeMem(0x5e6a, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x14c2, gbc.sp());
        EXPECT(0x5e6c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 43 0203
        gbc.setState(0x5bff, 0x2ba2, 0x14d0, 0xea, 0xde98, 0x9416, 0x1, 0x0);
        gbc.writeMem(0x5bff, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x2ba2, gbc.sp());
        EXPECT(0x5c01, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 43 0204
        gbc.setState(0x4834, 0x4351, 0x850, 0xb0b5, 0xa694, 0x14fb, 0x1, 0x0);
        gbc.writeMem(0x4834, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x4351, gbc.sp());
        EXPECT(0x4836, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 43 0205
        gbc.setState(0x8fe5, 0xb4fc, 0x66a0, 0x2cd5, 0xd196, 0xeafd, 0x0, 0x0);
        gbc.writeMem(0x8fe5, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0xb4fc, gbc.sp());
        EXPECT(0x8fe7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8fe5));
        EXPECT(0x43, gbc.readMem(0x8fe6));
        // CB 43 0206
        gbc.setState(0x3f9d, 0x37af, 0x2f00, 0xe1b, 0x266e, 0x6026, 0x0, 0x0);
        gbc.writeMem(0x3f9d, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x37af, gbc.sp());
        EXPECT(0x3f9f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 43 0207
        gbc.setState(0xc921, 0xd088, 0x72a0, 0xc073, 0x643e, 0xaf93, 0x1, 0x0);
        gbc.writeMem(0xc921, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0xd088, gbc.sp());
        EXPECT(0xc923, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc921));
        EXPECT(0x43, gbc.readMem(0xc922));
        // CB 43 0208
        gbc.setState(0xc67a, 0x3b1b, 0x1c50, 0xd82d, 0x57ab, 0x84e5, 0x0, 0x0);
        gbc.writeMem(0xc67a, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x3b1b, gbc.sp());
        EXPECT(0xc67c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc67a));
        EXPECT(0x43, gbc.readMem(0xc67b));
        // CB 43 0209
        gbc.setState(0x2872, 0xcee7, 0x4130, 0x5845, 0x44e6, 0xe25a, 0x1, 0x1);
        gbc.writeMem(0x2872, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0xcee7, gbc.sp());
        EXPECT(0x2874, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 43 020A
        gbc.setState(0x78e3, 0xc998, 0x7dc0, 0xc26f, 0xf8ff, 0xc7db, 0x0, 0x0);
        gbc.writeMem(0x78e3, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0xc998, gbc.sp());
        EXPECT(0x78e5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 43 020B
        gbc.setState(0x9f16, 0xee79, 0x5fb0, 0xe07d, 0xf6ab, 0x4e23, 0x0, 0x1);
        gbc.writeMem(0x9f16, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0xee79, gbc.sp());
        EXPECT(0x9f18, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9f16));
        EXPECT(0x43, gbc.readMem(0x9f17));
        // CB 43 020C
        gbc.setState(0x4f71, 0xfaac, 0x3440, 0x9381, 0xb935, 0x1e7d, 0x0, 0x1);
        gbc.writeMem(0x4f71, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0xfaac, gbc.sp());
        EXPECT(0x4f73, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 43 020D
        gbc.setState(0x68b9, 0xdc67, 0xd030, 0xbd7a, 0x2d1f, 0xa4aa, 0x0, 0x1);
        gbc.writeMem(0x68b9, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0xdc67, gbc.sp());
        EXPECT(0x68bb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 43 020E
        gbc.setState(0xe094, 0x4ff7, 0x43a0, 0xc145, 0xfcda, 0x4d4b, 0x0, 0x1);
        gbc.writeMem(0xe094, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x4ff7, gbc.sp());
        EXPECT(0xe096, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe094));
        EXPECT(0x43, gbc.readMem(0xe095));
        // CB 43 020F
        gbc.setState(0xa277, 0x2ee, 0x49a0, 0x7a79, 0xbd35, 0x8232, 0x0, 0x1);
        gbc.writeMem(0xa277, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x2ee, gbc.sp());
        EXPECT(0xa279, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa277));
        EXPECT(0x43, gbc.readMem(0xa278));
        // CB 43 0210
        gbc.setState(0x95b2, 0x7afe, 0x2080, 0x309e, 0xfd7a, 0x9e50, 0x1, 0x1);
        gbc.writeMem(0x95b2, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x7afe, gbc.sp());
        EXPECT(0x95b4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x95b2));
        EXPECT(0x43, gbc.readMem(0x95b3));
        // CB 43 0211
        gbc.setState(0xa90a, 0x6d23, 0xed70, 0xcfd9, 0xffd3, 0xe79d, 0x1, 0x1);
        gbc.writeMem(0xa90a, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x6d23, gbc.sp());
        EXPECT(0xa90c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa90a));
        EXPECT(0x43, gbc.readMem(0xa90b));
        // CB 43 0212
        gbc.setState(0xb2d5, 0x1dd7, 0xcd20, 0x3702, 0x6481, 0x5cd0, 0x0, 0x1);
        gbc.writeMem(0xb2d5, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x1dd7, gbc.sp());
        EXPECT(0xb2d7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb2d5));
        EXPECT(0x43, gbc.readMem(0xb2d6));
        // CB 43 0213
        gbc.setState(0xbbfa, 0x2822, 0x3130, 0x84d6, 0x96d3, 0x2f68, 0x0, 0x0);
        gbc.writeMem(0xbbfa, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x2822, gbc.sp());
        EXPECT(0xbbfc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbbfa));
        EXPECT(0x43, gbc.readMem(0xbbfb));
        // CB 43 0214
        gbc.setState(0xb38c, 0x450, 0x1ac0, 0x5eea, 0x7535, 0x118e, 0x1, 0x0);
        gbc.writeMem(0xb38c, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x450, gbc.sp());
        EXPECT(0xb38e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb38c));
        EXPECT(0x43, gbc.readMem(0xb38d));
        // CB 43 0215
        gbc.setState(0x7007, 0x80f8, 0x6600, 0xb62c, 0x7292, 0x2a5, 0x0, 0x1);
        gbc.writeMem(0x7007, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x80f8, gbc.sp());
        EXPECT(0x7009, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 43 0216
        gbc.setState(0x8546, 0x71ba, 0xdb10, 0xbee5, 0x81e7, 0xc0cb, 0x1, 0x1);
        gbc.writeMem(0x8546, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x71ba, gbc.sp());
        EXPECT(0x8548, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8546));
        EXPECT(0x43, gbc.readMem(0x8547));
        // CB 43 0217
        gbc.setState(0x28c2, 0x87df, 0xcce0, 0x74cf, 0x3eea, 0xcbcd, 0x1, 0x0);
        gbc.writeMem(0x28c2, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x87df, gbc.sp());
        EXPECT(0x28c4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 43 0218
        gbc.setState(0x6bd, 0x841c, 0x4590, 0x466d, 0xa0da, 0x34c4, 0x0, 0x1);
        gbc.writeMem(0x6bd, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x841c, gbc.sp());
        EXPECT(0x6bf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 43 0219
        gbc.setState(0x6a93, 0x58b3, 0x8190, 0x97c0, 0x648d, 0xab43, 0x1, 0x0);
        gbc.writeMem(0x6a93, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x58b3, gbc.sp());
        EXPECT(0x6a95, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 43 021A
        gbc.setState(0xafbc, 0xcb88, 0x73c0, 0xf72d, 0x5d7d, 0x7ece, 0x0, 0x0);
        gbc.writeMem(0xafbc, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0xcb88, gbc.sp());
        EXPECT(0xafbe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xafbc));
        EXPECT(0x43, gbc.readMem(0xafbd));
        // CB 43 021B
        gbc.setState(0x5ae7, 0x2bcd, 0xd250, 0x7efd, 0x85b4, 0x4e04, 0x0, 0x0);
        gbc.writeMem(0x5ae7, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x2bcd, gbc.sp());
        EXPECT(0x5ae9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 43 021C
        gbc.setState(0x7f6f, 0x2d40, 0x7e00, 0xab9f, 0xe4ef, 0x9209, 0x1, 0x0);
        gbc.writeMem(0x7f6f, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x2d40, gbc.sp());
        EXPECT(0x7f71, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 43 021D
        gbc.setState(0x313c, 0x1888, 0xb9c0, 0xb49d, 0x9698, 0x2453, 0x0, 0x1);
        gbc.writeMem(0x313c, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x1888, gbc.sp());
        EXPECT(0x313e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 43 021F
        gbc.setState(0x8358, 0xc1b3, 0x7be0, 0xa5d4, 0x30bd, 0x20dd, 0x0, 0x1);
        gbc.writeMem(0x8358, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0xc1b3, gbc.sp());
        EXPECT(0x835a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8358));
        EXPECT(0x43, gbc.readMem(0x8359));
        // CB 43 0220
        gbc.setState(0xd125, 0x213d, 0xf400, 0x33b2, 0xd02d, 0xc9ec, 0x1, 0x0);
        gbc.writeMem(0xd125, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x213d, gbc.sp());
        EXPECT(0xd127, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd125));
        EXPECT(0x43, gbc.readMem(0xd126));
        // CB 43 0222
        gbc.setState(0x3f4e, 0x2410, 0x28e0, 0x617c, 0x2e2f, 0x2a9e, 0x0, 0x0);
        gbc.writeMem(0x3f4e, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x2410, gbc.sp());
        EXPECT(0x3f50, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 43 0223
        gbc.setState(0xd00e, 0x93f2, 0xf690, 0x1298, 0xca5e, 0x4466, 0x1, 0x0);
        gbc.writeMem(0xd00e, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x93f2, gbc.sp());
        EXPECT(0xd010, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd00e));
        EXPECT(0x43, gbc.readMem(0xd00f));
        // CB 43 0224
        gbc.setState(0x94cf, 0xd5b2, 0x5200, 0xcda7, 0xb6a7, 0x9ad4, 0x1, 0x0);
        gbc.writeMem(0x94cf, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0xd5b2, gbc.sp());
        EXPECT(0x94d1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x94cf));
        EXPECT(0x43, gbc.readMem(0x94d0));
        // CB 43 0225
        gbc.setState(0x74a6, 0x90ed, 0x6ba0, 0xaaba, 0xabc8, 0x88e, 0x1, 0x0);
        gbc.writeMem(0x74a6, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x90ed, gbc.sp());
        EXPECT(0x74a8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 43 0226
        gbc.setState(0x1002, 0x3c77, 0x8040, 0xca1c, 0x851f, 0x3eed, 0x0, 0x1);
        gbc.writeMem(0x1002, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x3c77, gbc.sp());
        EXPECT(0x1004, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 43 0227
        gbc.setState(0xd0f6, 0xeaff, 0x9330, 0x8208, 0x67da, 0x33ac, 0x0, 0x0);
        gbc.writeMem(0xd0f6, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0xeaff, gbc.sp());
        EXPECT(0xd0f8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd0f6));
        EXPECT(0x43, gbc.readMem(0xd0f7));
        // CB 43 0228
        gbc.setState(0xabce, 0x8d2e, 0xcf0, 0x995a, 0x982a, 0x7af2, 0x0, 0x1);
        gbc.writeMem(0xabce, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x8d2e, gbc.sp());
        EXPECT(0xabd0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xabce));
        EXPECT(0x43, gbc.readMem(0xabcf));
        // CB 43 0229
        gbc.setState(0x1104, 0xb444, 0x2170, 0x5bf1, 0xd64b, 0x9f3, 0x0, 0x0);
        gbc.writeMem(0x1104, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0xb444, gbc.sp());
        EXPECT(0x1106, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 43 022A
        gbc.setState(0x6cda, 0xc03f, 0xed70, 0xaea7, 0x3df0, 0xc587, 0x0, 0x0);
        gbc.writeMem(0x6cda, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0xc03f, gbc.sp());
        EXPECT(0x6cdc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 43 022B
        gbc.setState(0xec0f, 0x9d44, 0xde30, 0x494f, 0x3f25, 0x8033, 0x1, 0x0);
        gbc.writeMem(0xec0f, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x9d44, gbc.sp());
        EXPECT(0xec11, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xec0f));
        EXPECT(0x43, gbc.readMem(0xec10));
        // CB 43 022C
        gbc.setState(0xd88c, 0x135a, 0x3f10, 0x3086, 0x682f, 0x8973, 0x0, 0x0);
        gbc.writeMem(0xd88c, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x135a, gbc.sp());
        EXPECT(0xd88e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd88c));
        EXPECT(0x43, gbc.readMem(0xd88d));
        // CB 43 022F
        gbc.setState(0x291a, 0xdd2c, 0xe930, 0x6340, 0x2297, 0x9615, 0x0, 0x1);
        gbc.writeMem(0x291a, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0xdd2c, gbc.sp());
        EXPECT(0x291c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 43 0230
        gbc.setState(0x8dbe, 0x1df3, 0x53c0, 0xeb71, 0x5117, 0x7879, 0x0, 0x0);
        gbc.writeMem(0x8dbe, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x1df3, gbc.sp());
        EXPECT(0x8dc0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8dbe));
        EXPECT(0x43, gbc.readMem(0x8dbf));
        // CB 43 0231
        gbc.setState(0xc819, 0x5a68, 0x6940, 0xa0e6, 0x6444, 0xc85f, 0x0, 0x0);
        gbc.writeMem(0xc819, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x5a68, gbc.sp());
        EXPECT(0xc81b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc819));
        EXPECT(0x43, gbc.readMem(0xc81a));
        // CB 43 0232
        gbc.setState(0x4bd6, 0x1d36, 0x94c0, 0x78a2, 0x95df, 0x143e, 0x1, 0x0);
        gbc.writeMem(0x4bd6, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x1d36, gbc.sp());
        EXPECT(0x4bd8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 43 0233
        gbc.setState(0x5dbf, 0x20a6, 0xffa0, 0xc5c9, 0xe4b2, 0x9b6c, 0x0, 0x1);
        gbc.writeMem(0x5dbf, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x20a6, gbc.sp());
        EXPECT(0x5dc1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 43 0234
        gbc.setState(0xbcb4, 0xa08b, 0x7860, 0x8bd1, 0x1913, 0x2ff6, 0x0, 0x0);
        gbc.writeMem(0xbcb4, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0xa08b, gbc.sp());
        EXPECT(0xbcb6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbcb4));
        EXPECT(0x43, gbc.readMem(0xbcb5));
        // CB 43 0235
        gbc.setState(0x9fb5, 0xe4bb, 0x1fd0, 0x920b, 0x3591, 0x804b, 0x1, 0x0);
        gbc.writeMem(0x9fb5, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0xe4bb, gbc.sp());
        EXPECT(0x9fb7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9fb5));
        EXPECT(0x43, gbc.readMem(0x9fb6));
        // CB 43 0236
        gbc.setState(0xeda5, 0x1b9f, 0xc1f0, 0xd331, 0x4dfc, 0x6d2e, 0x0, 0x0);
        gbc.writeMem(0xeda5, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x1b9f, gbc.sp());
        EXPECT(0xeda7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeda5));
        EXPECT(0x43, gbc.readMem(0xeda6));
        // CB 43 0237
        gbc.setState(0xd84c, 0xab36, 0x1330, 0x7834, 0xc44f, 0xff4, 0x0, 0x1);
        gbc.writeMem(0xd84c, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0xab36, gbc.sp());
        EXPECT(0xd84e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd84c));
        EXPECT(0x43, gbc.readMem(0xd84d));
        // CB 43 0238
        gbc.setState(0x7639, 0xedd2, 0xcce0, 0x6f80, 0xce4c, 0x8ab, 0x1, 0x1);
        gbc.writeMem(0x7639, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0xedd2, gbc.sp());
        EXPECT(0x763b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 43 0239
        gbc.setState(0xb8da, 0x2c19, 0x63d0, 0x40b1, 0xe957, 0xe53d, 0x0, 0x0);
        gbc.writeMem(0xb8da, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x2c19, gbc.sp());
        EXPECT(0xb8dc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb8da));
        EXPECT(0x43, gbc.readMem(0xb8db));
        // CB 43 023A
        gbc.setState(0xe5d7, 0x9f82, 0x4410, 0x7888, 0x26a3, 0x903a, 0x0, 0x0);
        gbc.writeMem(0xe5d7, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x9f82, gbc.sp());
        EXPECT(0xe5d9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe5d7));
        EXPECT(0x43, gbc.readMem(0xe5d8));
        // CB 43 023B
        gbc.setState(0xc8c3, 0xf2e4, 0xaa00, 0x51a8, 0x83a5, 0x4380, 0x0, 0x0);
        gbc.writeMem(0xc8c3, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0xf2e4, gbc.sp());
        EXPECT(0xc8c5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc8c3));
        EXPECT(0x43, gbc.readMem(0xc8c4));
        // CB 43 023C
        gbc.setState(0x2e36, 0xab64, 0xf160, 0x4ded, 0xe1a4, 0xc960, 0x1, 0x1);
        gbc.writeMem(0x2e36, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0xab64, gbc.sp());
        EXPECT(0x2e38, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 43 023D
        gbc.setState(0xe904, 0xc92, 0x39b0, 0xdea, 0x72be, 0x71a, 0x1, 0x0);
        gbc.writeMem(0xe904, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0xc92, gbc.sp());
        EXPECT(0xe906, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe904));
        EXPECT(0x43, gbc.readMem(0xe905));
        // CB 43 023E
        gbc.setState(0xd20c, 0xa8d7, 0x86b0, 0xc1fe, 0x6bca, 0xe55e, 0x1, 0x1);
        gbc.writeMem(0xd20c, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0xa8d7, gbc.sp());
        EXPECT(0xd20e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd20c));
        EXPECT(0x43, gbc.readMem(0xd20d));
        // CB 43 0240
        gbc.setState(0xe8dc, 0xfbd1, 0xb210, 0xefec, 0x7400, 0x2455, 0x1, 0x1);
        gbc.writeMem(0xe8dc, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0xfbd1, gbc.sp());
        EXPECT(0xe8de, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe8dc));
        EXPECT(0x43, gbc.readMem(0xe8dd));
        // CB 43 0241
        gbc.setState(0x3dd4, 0xe11c, 0xf300, 0xad77, 0xbc58, 0xc9ff, 0x1, 0x1);
        gbc.writeMem(0x3dd4, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0xe11c, gbc.sp());
        EXPECT(0x3dd6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 43 0242
        gbc.setState(0x5297, 0xd954, 0x7ec0, 0x9612, 0x6fe7, 0xe5e2, 0x0, 0x1);
        gbc.writeMem(0x5297, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0xd954, gbc.sp());
        EXPECT(0x5299, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 43 0243
        gbc.setState(0xba57, 0xb909, 0xffe0, 0x16c0, 0x2a02, 0x466e, 0x1, 0x0);
        gbc.writeMem(0xba57, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0xb909, gbc.sp());
        EXPECT(0xba59, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xba57));
        EXPECT(0x43, gbc.readMem(0xba58));
        // CB 43 0244
        gbc.setState(0x323b, 0x46d5, 0x3530, 0xbae, 0xe6ee, 0x4f43, 0x0, 0x0);
        gbc.writeMem(0x323b, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x46d5, gbc.sp());
        EXPECT(0x323d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 43 0246
        gbc.setState(0x8918, 0x334, 0x6140, 0x689d, 0xe7a3, 0xbffc, 0x1, 0x0);
        gbc.writeMem(0x8918, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x334, gbc.sp());
        EXPECT(0x891a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8918));
        EXPECT(0x43, gbc.readMem(0x8919));
        // CB 43 0247
        gbc.setState(0xabb2, 0x4abb, 0xa780, 0x9a88, 0x5653, 0x29b1, 0x0, 0x1);
        gbc.writeMem(0xabb2, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x4abb, gbc.sp());
        EXPECT(0xabb4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xabb2));
        EXPECT(0x43, gbc.readMem(0xabb3));
        // CB 43 0248
        gbc.setState(0x713c, 0x9ad4, 0x6410, 0x3a62, 0x132d, 0x4e35, 0x0, 0x0);
        gbc.writeMem(0x713c, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x9ad4, gbc.sp());
        EXPECT(0x713e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 43 0249
        gbc.setState(0x9508, 0x79b0, 0xae50, 0x240b, 0x944e, 0xd42f, 0x0, 0x1);
        gbc.writeMem(0x9508, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x79b0, gbc.sp());
        EXPECT(0x950a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9508));
        EXPECT(0x43, gbc.readMem(0x9509));
        // CB 43 024A
        gbc.setState(0xd1d4, 0xb76d, 0x55b0, 0xc888, 0xeafa, 0x5138, 0x1, 0x0);
        gbc.writeMem(0xd1d4, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0xb76d, gbc.sp());
        EXPECT(0xd1d6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd1d4));
        EXPECT(0x43, gbc.readMem(0xd1d5));
        // CB 43 024C
        gbc.setState(0x7cd0, 0x5133, 0x9fb0, 0xdbb2, 0x6870, 0xb574, 0x0, 0x1);
        gbc.writeMem(0x7cd0, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x5133, gbc.sp());
        EXPECT(0x7cd2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 43 024D
        gbc.setState(0xec9e, 0xb94b, 0x6050, 0x99c6, 0xb207, 0xf981, 0x0, 0x0);
        gbc.writeMem(0xec9e, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0xb94b, gbc.sp());
        EXPECT(0xeca0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xec9e));
        EXPECT(0x43, gbc.readMem(0xec9f));
        // CB 43 024E
        gbc.setState(0xedc6, 0x27aa, 0x4470, 0x6584, 0x3c8d, 0x36b6, 0x0, 0x1);
        gbc.writeMem(0xedc6, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x27aa, gbc.sp());
        EXPECT(0xedc8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xedc6));
        EXPECT(0x43, gbc.readMem(0xedc7));
        // CB 43 024F
        gbc.setState(0x408a, 0xbb6a, 0xb340, 0x957c, 0x7dbe, 0x5766, 0x0, 0x1);
        gbc.writeMem(0x408a, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0xbb6a, gbc.sp());
        EXPECT(0x408c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 43 0250
        gbc.setState(0xd6db, 0xc476, 0x4590, 0x77cf, 0x88, 0xce37, 0x0, 0x0);
        gbc.writeMem(0xd6db, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0xc476, gbc.sp());
        EXPECT(0xd6dd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd6db));
        EXPECT(0x43, gbc.readMem(0xd6dc));
        // CB 43 0251
        gbc.setState(0x5c6f, 0x96c4, 0xad20, 0x8576, 0xc975, 0x829, 0x0, 0x0);
        gbc.writeMem(0x5c6f, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x96c4, gbc.sp());
        EXPECT(0x5c71, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 43 0252
        gbc.setState(0x2773, 0x9a25, 0x4a30, 0xbe3f, 0x49e8, 0xde75, 0x0, 0x1);
        gbc.writeMem(0x2773, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x9a25, gbc.sp());
        EXPECT(0x2775, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 43 0253
        gbc.setState(0x69e0, 0xd0ac, 0xff40, 0xc267, 0x9f0, 0xa01c, 0x0, 0x1);
        gbc.writeMem(0x69e0, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0xd0ac, gbc.sp());
        EXPECT(0x69e2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 43 0254
        gbc.setState(0xa9a, 0x1e5b, 0x3450, 0xaf6e, 0x6551, 0x648b, 0x1, 0x0);
        gbc.writeMem(0xa9a, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x1e5b, gbc.sp());
        EXPECT(0xa9c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 43 0255
        gbc.setState(0x5ee3, 0x1496, 0xd5c0, 0xf50f, 0xa712, 0x74d4, 0x0, 0x0);
        gbc.writeMem(0x5ee3, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x1496, gbc.sp());
        EXPECT(0x5ee5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 43 0256
        gbc.setState(0x259, 0xd55, 0x7d30, 0xd320, 0xe350, 0xa1a8, 0x1, 0x0);
        gbc.writeMem(0x259, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0xd55, gbc.sp());
        EXPECT(0x25b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 43 0257
        gbc.setState(0xd013, 0xa155, 0x34f0, 0x5a4c, 0x1866, 0x63d, 0x0, 0x1);
        gbc.writeMem(0xd013, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0xa155, gbc.sp());
        EXPECT(0xd015, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd013));
        EXPECT(0x43, gbc.readMem(0xd014));
        // CB 43 0259
        gbc.setState(0x7bef, 0xbc9d, 0xfb80, 0x4785, 0xf4cb, 0x4ee9, 0x1, 0x1);
        gbc.writeMem(0x7bef, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0xbc9d, gbc.sp());
        EXPECT(0x7bf1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 43 025A
        gbc.setState(0x136a, 0xe35e, 0x8bd0, 0xf5fe, 0x9834, 0x479b, 0x0, 0x1);
        gbc.writeMem(0x136a, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0xe35e, gbc.sp());
        EXPECT(0x136c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 43 025B
        gbc.setState(0xed0b, 0x4789, 0xbf40, 0xf8ba, 0xdd88, 0x9001, 0x0, 0x0);
        gbc.writeMem(0xed0b, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x4789, gbc.sp());
        EXPECT(0xed0d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xed0b));
        EXPECT(0x43, gbc.readMem(0xed0c));
        // CB 43 025C
        gbc.setState(0x664c, 0x1b7, 0xad00, 0x885d, 0x8ba1, 0xab29, 0x0, 0x1);
        gbc.writeMem(0x664c, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x1b7, gbc.sp());
        EXPECT(0x664e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 43 025D
        gbc.setState(0xefed, 0x47e0, 0x94a0, 0x2565, 0x4dc4, 0x293c, 0x0, 0x0);
        gbc.writeMem(0xefed, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x47e0, gbc.sp());
        EXPECT(0xefef, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xefed));
        EXPECT(0x43, gbc.readMem(0xefee));
        // CB 43 025E
        gbc.setState(0xc774, 0x8967, 0x5d00, 0x57b7, 0xe04e, 0xbe6e, 0x1, 0x1);
        gbc.writeMem(0xc774, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x8967, gbc.sp());
        EXPECT(0xc776, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc774));
        EXPECT(0x43, gbc.readMem(0xc775));
        // CB 43 0260
        gbc.setState(0xb061, 0x2b91, 0x2d50, 0x645, 0x9bf1, 0x633e, 0x0, 0x0);
        gbc.writeMem(0xb061, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x2b91, gbc.sp());
        EXPECT(0xb063, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb061));
        EXPECT(0x43, gbc.readMem(0xb062));
        // CB 43 0261
        gbc.setState(0xb2bc, 0x555f, 0x6e80, 0xfb5a, 0x49bd, 0xa723, 0x0, 0x1);
        gbc.writeMem(0xb2bc, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x555f, gbc.sp());
        EXPECT(0xb2be, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb2bc));
        EXPECT(0x43, gbc.readMem(0xb2bd));
        // CB 43 0263
        gbc.setState(0xd31f, 0x4453, 0xd080, 0xe813, 0x5194, 0xa7f5, 0x1, 0x1);
        gbc.writeMem(0xd31f, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x4453, gbc.sp());
        EXPECT(0xd321, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd31f));
        EXPECT(0x43, gbc.readMem(0xd320));
        // CB 43 0264
        gbc.setState(0x9bc2, 0xc6bf, 0x1f40, 0x6a5b, 0x2fca, 0x6b6, 0x0, 0x0);
        gbc.writeMem(0x9bc2, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0xc6bf, gbc.sp());
        EXPECT(0x9bc4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9bc2));
        EXPECT(0x43, gbc.readMem(0x9bc3));
        // CB 43 0265
        gbc.setState(0xafcc, 0xa2ce, 0x3b80, 0x15ed, 0xe95d, 0xe784, 0x1, 0x0);
        gbc.writeMem(0xafcc, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0xa2ce, gbc.sp());
        EXPECT(0xafce, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xafcc));
        EXPECT(0x43, gbc.readMem(0xafcd));
        // CB 43 0266
        gbc.setState(0x4e49, 0x5864, 0xf480, 0xeb20, 0xfe4e, 0x8383, 0x0, 0x1);
        gbc.writeMem(0x4e49, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x5864, gbc.sp());
        EXPECT(0x4e4b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 43 0267
        gbc.setState(0x6308, 0xca0c, 0x4bc0, 0x3f1, 0xf4ce, 0xfccf, 0x0, 0x1);
        gbc.writeMem(0x6308, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0xca0c, gbc.sp());
        EXPECT(0x630a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 43 0268
        gbc.setState(0xc3dc, 0xbbe7, 0x5ae0, 0xec47, 0xd3db, 0x8840, 0x1, 0x0);
        gbc.writeMem(0xc3dc, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0xbbe7, gbc.sp());
        EXPECT(0xc3de, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc3dc));
        EXPECT(0x43, gbc.readMem(0xc3dd));
        // CB 43 0269
        gbc.setState(0xd709, 0xa5c6, 0xce40, 0x9912, 0x34ad, 0x2aef, 0x0, 0x1);
        gbc.writeMem(0xd709, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0xa5c6, gbc.sp());
        EXPECT(0xd70b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd709));
        EXPECT(0x43, gbc.readMem(0xd70a));
        // CB 43 026A
        gbc.setState(0x8646, 0xbf3a, 0xeaf0, 0x72e5, 0x6036, 0x1fd2, 0x0, 0x0);
        gbc.writeMem(0x8646, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0xbf3a, gbc.sp());
        EXPECT(0x8648, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8646));
        EXPECT(0x43, gbc.readMem(0x8647));
        // CB 43 026B
        gbc.setState(0x5985, 0x15ea, 0x6b30, 0x3b93, 0xd076, 0x65f7, 0x0, 0x0);
        gbc.writeMem(0x5985, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x15ea, gbc.sp());
        EXPECT(0x5987, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 43 026C
        gbc.setState(0x8fa7, 0xa6a, 0x6780, 0xe9b7, 0xc82f, 0x9d6, 0x0, 0x1);
        gbc.writeMem(0x8fa7, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0xa6a, gbc.sp());
        EXPECT(0x8fa9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8fa7));
        EXPECT(0x43, gbc.readMem(0x8fa8));
        // CB 43 026D
        gbc.setState(0x638a, 0x989f, 0xce50, 0x316e, 0x325e, 0xd372, 0x0, 0x0);
        gbc.writeMem(0x638a, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x989f, gbc.sp());
        EXPECT(0x638c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 43 026E
        gbc.setState(0x77ac, 0xb5d1, 0x2da0, 0xe1b8, 0x1305, 0xb178, 0x1, 0x0);
        gbc.writeMem(0x77ac, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0xb5d1, gbc.sp());
        EXPECT(0x77ae, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 43 026F
        gbc.setState(0xa011, 0x9ff1, 0x45d0, 0xc508, 0x4b16, 0x8557, 0x1, 0x0);
        gbc.writeMem(0xa011, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x9ff1, gbc.sp());
        EXPECT(0xa013, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa011));
        EXPECT(0x43, gbc.readMem(0xa012));
        // CB 43 0270
        gbc.setState(0xd1c1, 0x2748, 0xaa50, 0x4485, 0xf3eb, 0xb418, 0x1, 0x0);
        gbc.writeMem(0xd1c1, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x2748, gbc.sp());
        EXPECT(0xd1c3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd1c1));
        EXPECT(0x43, gbc.readMem(0xd1c2));
        // CB 43 0271
        gbc.setState(0x84da, 0x2b7c, 0x53a0, 0xcf62, 0x7711, 0xb781, 0x1, 0x0);
        gbc.writeMem(0x84da, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x2b7c, gbc.sp());
        EXPECT(0x84dc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x84da));
        EXPECT(0x43, gbc.readMem(0x84db));
        // CB 43 0272
        gbc.setState(0xc7ff, 0x6b01, 0x5090, 0x1a43, 0xcdc4, 0x691, 0x1, 0x1);
        gbc.writeMem(0xc7ff, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x6b01, gbc.sp());
        EXPECT(0xc801, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc7ff));
        EXPECT(0x43, gbc.readMem(0xc800));
        // CB 43 0273
        gbc.setState(0xa95b, 0x5d96, 0x2400, 0x6e76, 0x8226, 0x9567, 0x0, 0x1);
        gbc.writeMem(0xa95b, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x5d96, gbc.sp());
        EXPECT(0xa95d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa95b));
        EXPECT(0x43, gbc.readMem(0xa95c));
        // CB 43 0274
        gbc.setState(0x8a8f, 0x7be, 0x5d60, 0xe16, 0xd798, 0xfa7c, 0x1, 0x1);
        gbc.writeMem(0x8a8f, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x7be, gbc.sp());
        EXPECT(0x8a91, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8a8f));
        EXPECT(0x43, gbc.readMem(0x8a90));
        // CB 43 0275
        gbc.setState(0x122c, 0x6b62, 0x8460, 0x35cf, 0x19a7, 0x40cc, 0x1, 0x1);
        gbc.writeMem(0x122c, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x6b62, gbc.sp());
        EXPECT(0x122e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 43 0276
        gbc.setState(0x6b34, 0x652a, 0x6db0, 0x2bc2, 0x425, 0x71b6, 0x1, 0x1);
        gbc.writeMem(0x6b34, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x652a, gbc.sp());
        EXPECT(0x6b36, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 43 0277
        gbc.setState(0x4feb, 0xd4b1, 0xd720, 0x3225, 0xd326, 0xe441, 0x1, 0x1);
        gbc.writeMem(0x4feb, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0xd4b1, gbc.sp());
        EXPECT(0x4fed, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 43 0278
        gbc.setState(0x97c0, 0xe255, 0x6360, 0x5f50, 0x3d4c, 0x22c8, 0x0, 0x1);
        gbc.writeMem(0x97c0, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0xe255, gbc.sp());
        EXPECT(0x97c2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x97c0));
        EXPECT(0x43, gbc.readMem(0x97c1));
        // CB 43 0279
        gbc.setState(0x7072, 0x98a2, 0xce00, 0xace2, 0xc6c0, 0x51ee, 0x0, 0x1);
        gbc.writeMem(0x7072, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x98a2, gbc.sp());
        EXPECT(0x7074, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 43 027A
        gbc.setState(0xdfd4, 0x9de8, 0xeab0, 0x2b48, 0x2c37, 0xe4d, 0x0, 0x1);
        gbc.writeMem(0xdfd4, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x9de8, gbc.sp());
        EXPECT(0xdfd6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdfd4));
        EXPECT(0x43, gbc.readMem(0xdfd5));
        // CB 43 027B
        gbc.setState(0x3285, 0x6307, 0x29e0, 0x4452, 0x1ad6, 0x5da8, 0x0, 0x1);
        gbc.writeMem(0x3285, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x6307, gbc.sp());
        EXPECT(0x3287, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 43 027C
        gbc.setState(0x99cd, 0x1537, 0xee10, 0xeef3, 0x1f73, 0xbdbc, 0x0, 0x0);
        gbc.writeMem(0x99cd, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x1537, gbc.sp());
        EXPECT(0x99cf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x99cd));
        EXPECT(0x43, gbc.readMem(0x99ce));
        // CB 43 027D
        gbc.setState(0x6563, 0x2ced, 0x9d50, 0x30dc, 0x4a91, 0xb494, 0x0, 0x1);
        gbc.writeMem(0x6563, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x2ced, gbc.sp());
        EXPECT(0x6565, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 43 027E
        gbc.setState(0x91a2, 0x404f, 0x7e70, 0x3c34, 0xe1ee, 0xba2b, 0x1, 0x1);
        gbc.writeMem(0x91a2, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x404f, gbc.sp());
        EXPECT(0x91a4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x91a2));
        EXPECT(0x43, gbc.readMem(0x91a3));
        // CB 43 027F
        gbc.setState(0xf31, 0x50e4, 0xaa0, 0x23c1, 0x9a8b, 0xe272, 0x1, 0x0);
        gbc.writeMem(0xf31, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x50e4, gbc.sp());
        EXPECT(0xf33, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 43 0280
        gbc.setState(0x3abf, 0xcc65, 0x7940, 0x614a, 0x2064, 0x4233, 0x1, 0x0);
        gbc.writeMem(0x3abf, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0xcc65, gbc.sp());
        EXPECT(0x3ac1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 43 0281
        gbc.setState(0xd0bd, 0xbf6b, 0xab30, 0xd743, 0x7808, 0x3454, 0x0, 0x0);
        gbc.writeMem(0xd0bd, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0xbf6b, gbc.sp());
        EXPECT(0xd0bf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd0bd));
        EXPECT(0x43, gbc.readMem(0xd0be));
        // CB 43 0282
        gbc.setState(0x7050, 0x3973, 0xc9e0, 0x2193, 0x5d04, 0xf5d2, 0x1, 0x0);
        gbc.writeMem(0x7050, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x3973, gbc.sp());
        EXPECT(0x7052, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 43 0283
        gbc.setState(0xd287, 0xe9c3, 0x61b0, 0x2bec, 0x187e, 0xb33c, 0x1, 0x1);
        gbc.writeMem(0xd287, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0xe9c3, gbc.sp());
        EXPECT(0xd289, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd287));
        EXPECT(0x43, gbc.readMem(0xd288));
        // CB 43 0284
        gbc.setState(0xc3e4, 0xcc4, 0x6f40, 0x9af3, 0xbc89, 0xb101, 0x0, 0x0);
        gbc.writeMem(0xc3e4, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0xcc4, gbc.sp());
        EXPECT(0xc3e6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc3e4));
        EXPECT(0x43, gbc.readMem(0xc3e5));
        // CB 43 0285
        gbc.setState(0x931f, 0x5d23, 0x5360, 0xeada, 0x6df9, 0x96af, 0x0, 0x0);
        gbc.writeMem(0x931f, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x5d23, gbc.sp());
        EXPECT(0x9321, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x931f));
        EXPECT(0x43, gbc.readMem(0x9320));
        // CB 43 0286
        gbc.setState(0xd7fd, 0x7655, 0x5260, 0xca80, 0xa9e0, 0xcc7f, 0x1, 0x1);
        gbc.writeMem(0xd7fd, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x7655, gbc.sp());
        EXPECT(0xd7ff, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd7fd));
        EXPECT(0x43, gbc.readMem(0xd7fe));
        // CB 43 0287
        gbc.setState(0xe2cc, 0x12a4, 0x5860, 0xa611, 0x4574, 0x8644, 0x0, 0x1);
        gbc.writeMem(0xe2cc, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x12a4, gbc.sp());
        EXPECT(0xe2ce, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe2cc));
        EXPECT(0x43, gbc.readMem(0xe2cd));
        // CB 43 0288
        gbc.setState(0x1222, 0xdc10, 0x9110, 0x453d, 0xd139, 0x93ee, 0x1, 0x1);
        gbc.writeMem(0x1222, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0xdc10, gbc.sp());
        EXPECT(0x1224, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 43 0289
        gbc.setState(0x336d, 0xcfa2, 0x9740, 0x992f, 0xd412, 0xc897, 0x1, 0x1);
        gbc.writeMem(0x336d, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0xcfa2, gbc.sp());
        EXPECT(0x336f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 43 028A
        gbc.setState(0x5ba0, 0x8d, 0xbae0, 0x8f4, 0xb4e3, 0x886f, 0x0, 0x0);
        gbc.writeMem(0x5ba0, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x8d, gbc.sp());
        EXPECT(0x5ba2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 43 028B
        gbc.setState(0xc45b, 0xbff4, 0xe6e0, 0x39c3, 0x493f, 0x1aa0, 0x1, 0x1);
        gbc.writeMem(0xc45b, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0xbff4, gbc.sp());
        EXPECT(0xc45d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc45b));
        EXPECT(0x43, gbc.readMem(0xc45c));
        // CB 43 028C
        gbc.setState(0x97f9, 0x4710, 0xc530, 0xf8fe, 0xab7c, 0xe817, 0x1, 0x0);
        gbc.writeMem(0x97f9, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x4710, gbc.sp());
        EXPECT(0x97fb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x97f9));
        EXPECT(0x43, gbc.readMem(0x97fa));
        // CB 43 028D
        gbc.setState(0x638a, 0x5aa6, 0x4330, 0x4fea, 0xe92e, 0xa64d, 0x1, 0x1);
        gbc.writeMem(0x638a, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x5aa6, gbc.sp());
        EXPECT(0x638c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 43 028E
        gbc.setState(0x8904, 0xb58b, 0xd540, 0xce91, 0x810c, 0xee8b, 0x1, 0x0);
        gbc.writeMem(0x8904, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0xb58b, gbc.sp());
        EXPECT(0x8906, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8904));
        EXPECT(0x43, gbc.readMem(0x8905));
        // CB 43 028F
        gbc.setState(0x82f1, 0xdbe0, 0xb210, 0x988c, 0x4f5c, 0xf10, 0x1, 0x0);
        gbc.writeMem(0x82f1, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0xdbe0, gbc.sp());
        EXPECT(0x82f3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x82f1));
        EXPECT(0x43, gbc.readMem(0x82f2));
        // CB 43 0290
        gbc.setState(0x76d0, 0x7c2d, 0x9e20, 0x35dc, 0x6b47, 0x4b50, 0x0, 0x1);
        gbc.writeMem(0x76d0, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x7c2d, gbc.sp());
        EXPECT(0x76d2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 43 0291
        gbc.setState(0x367f, 0xd264, 0xc260, 0x6719, 0x507e, 0x84b1, 0x1, 0x0);
        gbc.writeMem(0x367f, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0xd264, gbc.sp());
        EXPECT(0x3681, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 43 0292
        gbc.setState(0x781f, 0xf20c, 0xb1b0, 0x66f8, 0xc83e, 0x80a3, 0x0, 0x0);
        gbc.writeMem(0x781f, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0xf20c, gbc.sp());
        EXPECT(0x7821, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 43 0293
        gbc.setState(0x4294, 0xb9d0, 0x5be0, 0x591f, 0x4812, 0x4be3, 0x0, 0x0);
        gbc.writeMem(0x4294, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0xb9d0, gbc.sp());
        EXPECT(0x4296, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 43 0294
        gbc.setState(0xcd30, 0xe97, 0x7090, 0x70cc, 0x51d2, 0x2964, 0x0, 0x0);
        gbc.writeMem(0xcd30, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0xe97, gbc.sp());
        EXPECT(0xcd32, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcd30));
        EXPECT(0x43, gbc.readMem(0xcd31));
        // CB 43 0295
        gbc.setState(0x3c5c, 0xb6e, 0xdde0, 0xced, 0xd8a6, 0x137f, 0x1, 0x1);
        gbc.writeMem(0x3c5c, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0xb6e, gbc.sp());
        EXPECT(0x3c5e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 43 0296
        gbc.setState(0xa37e, 0x3895, 0x98c0, 0xe57, 0xf29b, 0x5d25, 0x0, 0x1);
        gbc.writeMem(0xa37e, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x3895, gbc.sp());
        EXPECT(0xa380, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa37e));
        EXPECT(0x43, gbc.readMem(0xa37f));
        // CB 43 0297
        gbc.setState(0xcf2e, 0x2765, 0x7c80, 0x7b76, 0xa06a, 0x7faa, 0x1, 0x0);
        gbc.writeMem(0xcf2e, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x2765, gbc.sp());
        EXPECT(0xcf30, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcf2e));
        EXPECT(0x43, gbc.readMem(0xcf2f));
        // CB 43 0298
        gbc.setState(0xa75d, 0x10b7, 0xa600, 0x7503, 0xac0a, 0xb76c, 0x1, 0x0);
        gbc.writeMem(0xa75d, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x10b7, gbc.sp());
        EXPECT(0xa75f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa75d));
        EXPECT(0x43, gbc.readMem(0xa75e));
        // CB 43 0299
        gbc.setState(0x393e, 0x8c7b, 0x4f90, 0x825a, 0xb11c, 0x2e54, 0x1, 0x0);
        gbc.writeMem(0x393e, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x8c7b, gbc.sp());
        EXPECT(0x3940, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 43 029A
        gbc.setState(0x9584, 0x1c33, 0x9090, 0xfc55, 0xdb58, 0x80c0, 0x0, 0x1);
        gbc.writeMem(0x9584, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x1c33, gbc.sp());
        EXPECT(0x9586, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9584));
        EXPECT(0x43, gbc.readMem(0x9585));
        // CB 43 029C
        gbc.setState(0xc90, 0xc7cd, 0x4930, 0xa17, 0xea61, 0x150b, 0x0, 0x1);
        gbc.writeMem(0xc90, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0xc7cd, gbc.sp());
        EXPECT(0xc92, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 43 029D
        gbc.setState(0x78af, 0xe920, 0x98b0, 0xab71, 0x9a77, 0xdee8, 0x1, 0x1);
        gbc.writeMem(0x78af, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0xe920, gbc.sp());
        EXPECT(0x78b1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 43 029E
        gbc.setState(0xc483, 0xb8ba, 0x3610, 0x957, 0x83bb, 0xa1fc, 0x0, 0x0);
        gbc.writeMem(0xc483, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0xb8ba, gbc.sp());
        EXPECT(0xc485, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc483));
        EXPECT(0x43, gbc.readMem(0xc484));
        // CB 43 029F
        gbc.setState(0x1943, 0xd744, 0x6200, 0x2d8b, 0x3adf, 0xe92, 0x0, 0x0);
        gbc.writeMem(0x1943, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0xd744, gbc.sp());
        EXPECT(0x1945, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 43 02A0
        gbc.setState(0x2e13, 0x510b, 0xc150, 0xf292, 0x7ae, 0xbb09, 0x1, 0x1);
        gbc.writeMem(0x2e13, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x510b, gbc.sp());
        EXPECT(0x2e15, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 43 02A1
        gbc.setState(0xa220, 0x7278, 0xac80, 0x9c42, 0x7c20, 0x9a3f, 0x0, 0x1);
        gbc.writeMem(0xa220, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0x7278, gbc.sp());
        EXPECT(0xa222, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa220));
        EXPECT(0x43, gbc.readMem(0xa221));
        // CB 43 02A2
        gbc.setState(0xdcf4, 0x7136, 0x3120, 0x49db, 0x5410, 0x60c9, 0x1, 0x1);
        gbc.writeMem(0xdcf4, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x7136, gbc.sp());
        EXPECT(0xdcf6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdcf4));
        EXPECT(0x43, gbc.readMem(0xdcf5));
        // CB 43 02A3
        gbc.setState(0x5dac, 0x7773, 0x5620, 0x290, 0xb278, 0xa801, 0x0, 0x1);
        gbc.writeMem(0x5dac, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x7773, gbc.sp());
        EXPECT(0x5dae, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 43 02A4
        gbc.setState(0x96b9, 0x4e28, 0xcba0, 0xce04, 0x6fe8, 0x13eb, 0x1, 0x0);
        gbc.writeMem(0x96b9, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x4e28, gbc.sp());
        EXPECT(0x96bb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x96b9));
        EXPECT(0x43, gbc.readMem(0x96ba));
        // CB 43 02A5
        gbc.setState(0x63b6, 0x289a, 0x3120, 0x6d12, 0x26c6, 0xd877, 0x1, 0x1);
        gbc.writeMem(0x63b6, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x289a, gbc.sp());
        EXPECT(0x63b8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 43 02A6
        gbc.setState(0x2ca6, 0x326d, 0x4520, 0xf487, 0xea01, 0x4b6e, 0x1, 0x1);
        gbc.writeMem(0x2ca6, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x326d, gbc.sp());
        EXPECT(0x2ca8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 43 02A7
        gbc.setState(0xcd07, 0xc30, 0x3d30, 0x2d44, 0xe38c, 0xb60a, 0x1, 0x1);
        gbc.writeMem(0xcd07, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0xc30, gbc.sp());
        EXPECT(0xcd09, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcd07));
        EXPECT(0x43, gbc.readMem(0xcd08));
        // CB 43 02A8
        gbc.setState(0x464f, 0x4839, 0x26d0, 0xb4c2, 0xecc8, 0x4e73, 0x0, 0x0);
        gbc.writeMem(0x464f, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x4839, gbc.sp());
        EXPECT(0x4651, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 43 02A9
        gbc.setState(0xc9f0, 0xff, 0xa090, 0x8757, 0x7b7a, 0xd459, 0x1, 0x0);
        gbc.writeMem(0xc9f0, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0xff, gbc.sp());
        EXPECT(0xc9f2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc9f0));
        EXPECT(0x43, gbc.readMem(0xc9f1));
        // CB 43 02AA
        gbc.setState(0xebd5, 0xa992, 0x7e30, 0xccad, 0x118f, 0x19ec, 0x0, 0x0);
        gbc.writeMem(0xebd5, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0xa992, gbc.sp());
        EXPECT(0xebd7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xebd5));
        EXPECT(0x43, gbc.readMem(0xebd6));
        // CB 43 02AB
        gbc.setState(0x323d, 0x79c6, 0xd20, 0xfff9, 0x9bf5, 0xdf3a, 0x1, 0x1);
        gbc.writeMem(0x323d, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x79c6, gbc.sp());
        EXPECT(0x323f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 43 02AC
        gbc.setState(0x6552, 0x298f, 0xf2c0, 0xb067, 0x68e2, 0xd839, 0x0, 0x1);
        gbc.writeMem(0x6552, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x298f, gbc.sp());
        EXPECT(0x6554, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 43 02AD
        gbc.setState(0x3f4a, 0x3a5f, 0x8c80, 0x8311, 0x449b, 0xf438, 0x1, 0x0);
        gbc.writeMem(0x3f4a, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x3a5f, gbc.sp());
        EXPECT(0x3f4c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 43 02AE
        gbc.setState(0xb6a5, 0xe05a, 0x38f0, 0x8423, 0x1a5c, 0xb2a8, 0x0, 0x1);
        gbc.writeMem(0xb6a5, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0xe05a, gbc.sp());
        EXPECT(0xb6a7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb6a5));
        EXPECT(0x43, gbc.readMem(0xb6a6));
        // CB 43 02AF
        gbc.setState(0xe538, 0xc54e, 0x2040, 0xf57f, 0xc294, 0xef17, 0x0, 0x1);
        gbc.writeMem(0xe538, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0xc54e, gbc.sp());
        EXPECT(0xe53a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe538));
        EXPECT(0x43, gbc.readMem(0xe539));
        // CB 43 02B0
        gbc.setState(0xaf00, 0x75de, 0x8d70, 0x3263, 0xd9c, 0x88ea, 0x0, 0x1);
        gbc.writeMem(0xaf00, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x75de, gbc.sp());
        EXPECT(0xaf02, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaf00));
        EXPECT(0x43, gbc.readMem(0xaf01));
        // CB 43 02B1
        gbc.setState(0x16de, 0x5a97, 0x4a0, 0xaa2a, 0x245f, 0x6bcd, 0x0, 0x1);
        gbc.writeMem(0x16de, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x5a97, gbc.sp());
        EXPECT(0x16e0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 43 02B2
        gbc.setState(0x8da7, 0x2c42, 0xd5b0, 0x9053, 0x8d34, 0x647, 0x0, 0x0);
        gbc.writeMem(0x8da7, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x2c42, gbc.sp());
        EXPECT(0x8da9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8da7));
        EXPECT(0x43, gbc.readMem(0x8da8));
        // CB 43 02B3
        gbc.setState(0xe78d, 0xe959, 0x9b80, 0xcb5d, 0x5308, 0x68b2, 0x1, 0x1);
        gbc.writeMem(0xe78d, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0xe959, gbc.sp());
        EXPECT(0xe78f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe78d));
        EXPECT(0x43, gbc.readMem(0xe78e));
        // CB 43 02B4
        gbc.setState(0x6750, 0xa3b3, 0x81e0, 0x1e7b, 0x9507, 0xa9e3, 0x1, 0x1);
        gbc.writeMem(0x6750, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0xa3b3, gbc.sp());
        EXPECT(0x6752, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 43 02B5
        gbc.setState(0x5596, 0x7416, 0x7690, 0x69c2, 0xac34, 0xe0b6, 0x0, 0x1);
        gbc.writeMem(0x5596, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x7416, gbc.sp());
        EXPECT(0x5598, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 43 02B6
        gbc.setState(0xd4c, 0xae60, 0xcd00, 0x77ed, 0xfe04, 0x6ec4, 0x0, 0x1);
        gbc.writeMem(0xd4c, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0xae60, gbc.sp());
        EXPECT(0xd4e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 43 02B7
        gbc.setState(0xe21c, 0x69c4, 0xbf70, 0xcf90, 0x8030, 0xc403, 0x1, 0x0);
        gbc.writeMem(0xe21c, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x69c4, gbc.sp());
        EXPECT(0xe21e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe21c));
        EXPECT(0x43, gbc.readMem(0xe21d));
        // CB 43 02B8
        gbc.setState(0x2580, 0x5e93, 0xaa20, 0xade7, 0xe31f, 0x226f, 0x1, 0x0);
        gbc.writeMem(0x2580, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x5e93, gbc.sp());
        EXPECT(0x2582, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 43 02B9
        gbc.setState(0x75f6, 0x12ce, 0x9c0, 0x5773, 0x92d0, 0xc5c7, 0x1, 0x0);
        gbc.writeMem(0x75f6, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x12ce, gbc.sp());
        EXPECT(0x75f8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 43 02BA
        gbc.setState(0xbffa, 0x5ce2, 0x8dc0, 0xafc7, 0x452e, 0x321f, 0x1, 0x0);
        gbc.writeMem(0xbffa, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x5ce2, gbc.sp());
        EXPECT(0xbffc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbffa));
        EXPECT(0x43, gbc.readMem(0xbffb));
        // CB 43 02BB
        gbc.setState(0x9592, 0x7d20, 0x8910, 0x6d6a, 0x6c9, 0x544f, 0x1, 0x0);
        gbc.writeMem(0x9592, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x7d20, gbc.sp());
        EXPECT(0x9594, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9592));
        EXPECT(0x43, gbc.readMem(0x9593));
        // CB 43 02BC
        gbc.setState(0x3790, 0x4e0e, 0x6270, 0x2636, 0xa30, 0xcceb, 0x0, 0x1);
        gbc.writeMem(0x3790, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x4e0e, gbc.sp());
        EXPECT(0x3792, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 43 02BD
        gbc.setState(0x8f5, 0x9eb5, 0xd080, 0xa4a6, 0x2022, 0x44a9, 0x0, 0x1);
        gbc.writeMem(0x8f5, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x9eb5, gbc.sp());
        EXPECT(0x8f7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 43 02BE
        gbc.setState(0x774f, 0x9fea, 0x6f50, 0x30fc, 0x6b01, 0x8627, 0x1, 0x1);
        gbc.writeMem(0x774f, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x9fea, gbc.sp());
        EXPECT(0x7751, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 43 02BF
        gbc.setState(0xc6be, 0xc320, 0xcda0, 0x8180, 0x274b, 0x4b70, 0x0, 0x0);
        gbc.writeMem(0xc6be, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0xc320, gbc.sp());
        EXPECT(0xc6c0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc6be));
        EXPECT(0x43, gbc.readMem(0xc6bf));
        // CB 43 02C0
        gbc.setState(0xd869, 0xafea, 0xebc0, 0x6f04, 0x4256, 0xf605, 0x0, 0x1);
        gbc.writeMem(0xd869, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0xafea, gbc.sp());
        EXPECT(0xd86b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd869));
        EXPECT(0x43, gbc.readMem(0xd86a));
        // CB 43 02C1
        gbc.setState(0xe8ec, 0x8b70, 0xb5e0, 0xe5c7, 0x7a4d, 0x2544, 0x0, 0x0);
        gbc.writeMem(0xe8ec, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x8b70, gbc.sp());
        EXPECT(0xe8ee, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe8ec));
        EXPECT(0x43, gbc.readMem(0xe8ed));
        // CB 43 02C2
        gbc.setState(0xd945, 0xa9eb, 0xb0b0, 0x5503, 0x3c4, 0xfb47, 0x1, 0x0);
        gbc.writeMem(0xd945, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0xa9eb, gbc.sp());
        EXPECT(0xd947, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd945));
        EXPECT(0x43, gbc.readMem(0xd946));
        // CB 43 02C3
        gbc.setState(0x33c7, 0xf8d7, 0x65a0, 0xe0e1, 0x918c, 0x1d42, 0x0, 0x1);
        gbc.writeMem(0x33c7, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0xf8d7, gbc.sp());
        EXPECT(0x33c9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 43 02C4
        gbc.setState(0x919, 0x9737, 0xf330, 0xe07e, 0x1f12, 0x3fe2, 0x0, 0x1);
        gbc.writeMem(0x919, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x9737, gbc.sp());
        EXPECT(0x91b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 43 02C5
        gbc.setState(0xd585, 0xbda4, 0xb8e0, 0x868d, 0xbb2b, 0x7486, 0x0, 0x0);
        gbc.writeMem(0xd585, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0xbda4, gbc.sp());
        EXPECT(0xd587, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd585));
        EXPECT(0x43, gbc.readMem(0xd586));
        // CB 43 02C6
        gbc.setState(0x89f7, 0x596f, 0x82c0, 0xeff5, 0x8c4c, 0x73af, 0x1, 0x1);
        gbc.writeMem(0x89f7, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x596f, gbc.sp());
        EXPECT(0x89f9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x89f7));
        EXPECT(0x43, gbc.readMem(0x89f8));
        // CB 43 02C8
        gbc.setState(0x92b7, 0xe462, 0xf00, 0xcf87, 0x9275, 0x459, 0x1, 0x1);
        gbc.writeMem(0x92b7, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0xe462, gbc.sp());
        EXPECT(0x92b9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x92b7));
        EXPECT(0x43, gbc.readMem(0x92b8));
        // CB 43 02C9
        gbc.setState(0xe3f, 0xefd2, 0xb9f0, 0x56de, 0xb019, 0x9ec0, 0x0, 0x0);
        gbc.writeMem(0xe3f, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0xefd2, gbc.sp());
        EXPECT(0xe41, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 43 02CA
        gbc.setState(0xd516, 0xef76, 0x58d0, 0x41fa, 0x232d, 0xe994, 0x1, 0x1);
        gbc.writeMem(0xd516, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0xef76, gbc.sp());
        EXPECT(0xd518, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd516));
        EXPECT(0x43, gbc.readMem(0xd517));
        // CB 43 02CB
        gbc.setState(0xd2bb, 0xb0b5, 0x32c0, 0x1684, 0x85f7, 0xa5c1, 0x0, 0x0);
        gbc.writeMem(0xd2bb, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0xb0b5, gbc.sp());
        EXPECT(0xd2bd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd2bb));
        EXPECT(0x43, gbc.readMem(0xd2bc));
        // CB 43 02CC
        gbc.setState(0x5195, 0x3df6, 0x5aa0, 0x534d, 0x7577, 0xd666, 0x1, 0x0);
        gbc.writeMem(0x5195, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x3df6, gbc.sp());
        EXPECT(0x5197, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 43 02CD
        gbc.setState(0x6260, 0xcd14, 0x1580, 0x421, 0xf384, 0x9b60, 0x1, 0x1);
        gbc.writeMem(0x6260, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0xcd14, gbc.sp());
        EXPECT(0x6262, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 43 02CE
        gbc.setState(0x7865, 0x90d6, 0x9280, 0x92d, 0x21fd, 0x8dde, 0x0, 0x0);
        gbc.writeMem(0x7865, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x90d6, gbc.sp());
        EXPECT(0x7867, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 43 02CF
        gbc.setState(0x715d, 0x6616, 0x4590, 0xbde6, 0xcdcc, 0x580, 0x1, 0x0);
        gbc.writeMem(0x715d, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x6616, gbc.sp());
        EXPECT(0x715f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 43 02D0
        gbc.setState(0x457f, 0xca78, 0x23a0, 0x251a, 0x7370, 0xcf6, 0x0, 0x1);
        gbc.writeMem(0x457f, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0xca78, gbc.sp());
        EXPECT(0x4581, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 43 02D1
        gbc.setState(0x8d1b, 0xde69, 0xe9f0, 0xe5a5, 0x34d7, 0x917f, 0x0, 0x0);
        gbc.writeMem(0x8d1b, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0xde69, gbc.sp());
        EXPECT(0x8d1d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8d1b));
        EXPECT(0x43, gbc.readMem(0x8d1c));
        // CB 43 02D2
        gbc.setState(0x657a, 0xd900, 0x5190, 0x1836, 0x454b, 0xe6b5, 0x0, 0x1);
        gbc.writeMem(0x657a, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0xd900, gbc.sp());
        EXPECT(0x657c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 43 02D3
        gbc.setState(0xb207, 0x9b7c, 0x7150, 0x7617, 0xf6eb, 0x38b, 0x0, 0x1);
        gbc.writeMem(0xb207, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x9b7c, gbc.sp());
        EXPECT(0xb209, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb207));
        EXPECT(0x43, gbc.readMem(0xb208));
        // CB 43 02D4
        gbc.setState(0x6ec9, 0x56d, 0x4750, 0xad48, 0x29f8, 0xb159, 0x0, 0x1);
        gbc.writeMem(0x6ec9, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x56d, gbc.sp());
        EXPECT(0x6ecb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 43 02D5
        gbc.setState(0x1d50, 0x33ac, 0x8ad0, 0x60d6, 0xfc75, 0x7dc9, 0x0, 0x1);
        gbc.writeMem(0x1d50, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x33ac, gbc.sp());
        EXPECT(0x1d52, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 43 02D6
        gbc.setState(0xebf2, 0x1770, 0x4d80, 0xc5a3, 0xf180, 0xb560, 0x1, 0x1);
        gbc.writeMem(0xebf2, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x1770, gbc.sp());
        EXPECT(0xebf4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xebf2));
        EXPECT(0x43, gbc.readMem(0xebf3));
        // CB 43 02D7
        gbc.setState(0x9231, 0x89ca, 0xf70, 0xba19, 0x1a4d, 0x21a, 0x0, 0x0);
        gbc.writeMem(0x9231, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x89ca, gbc.sp());
        EXPECT(0x9233, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9231));
        EXPECT(0x43, gbc.readMem(0x9232));
        // CB 43 02D8
        gbc.setState(0x134b, 0xc645, 0x6490, 0xe3f4, 0x7d03, 0x17e3, 0x0, 0x0);
        gbc.writeMem(0x134b, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0xc645, gbc.sp());
        EXPECT(0x134d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 43 02D9
        gbc.setState(0x2c58, 0xe288, 0x9b50, 0x4a31, 0x136c, 0x71cc, 0x0, 0x1);
        gbc.writeMem(0x2c58, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0xe288, gbc.sp());
        EXPECT(0x2c5a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 43 02DA
        gbc.setState(0xeec1, 0x2bd2, 0xcb60, 0x5980, 0x492e, 0x9e9e, 0x1, 0x1);
        gbc.writeMem(0xeec1, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x2bd2, gbc.sp());
        EXPECT(0xeec3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeec1));
        EXPECT(0x43, gbc.readMem(0xeec2));
        // CB 43 02DB
        gbc.setState(0xa0a7, 0xdcfa, 0x3350, 0x2b9d, 0x5f94, 0xb53f, 0x1, 0x0);
        gbc.writeMem(0xa0a7, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0xdcfa, gbc.sp());
        EXPECT(0xa0a9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa0a7));
        EXPECT(0x43, gbc.readMem(0xa0a8));
        // CB 43 02DC
        gbc.setState(0x8bcf, 0x6ad0, 0xf8f0, 0x52a1, 0x892b, 0x68db, 0x0, 0x0);
        gbc.writeMem(0x8bcf, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x6ad0, gbc.sp());
        EXPECT(0x8bd1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8bcf));
        EXPECT(0x43, gbc.readMem(0x8bd0));
        // CB 43 02DD
        gbc.setState(0x4c14, 0xd10f, 0x6cd0, 0xe3f0, 0x83d8, 0xd9a9, 0x1, 0x0);
        gbc.writeMem(0x4c14, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0xd10f, gbc.sp());
        EXPECT(0x4c16, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 43 02DE
        gbc.setState(0x19f, 0x724b, 0x5740, 0x4e82, 0x1378, 0x1182, 0x0, 0x0);
        gbc.writeMem(0x19f, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x724b, gbc.sp());
        EXPECT(0x1a1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 43 02DF
        gbc.setState(0x8214, 0xa842, 0x7760, 0x5390, 0xd58f, 0x9e8b, 0x1, 0x0);
        gbc.writeMem(0x8214, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0xa842, gbc.sp());
        EXPECT(0x8216, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8214));
        EXPECT(0x43, gbc.readMem(0x8215));
        // CB 43 02E0
        gbc.setState(0x53ac, 0x1ff9, 0x8c80, 0xa0b5, 0xb452, 0xfc55, 0x0, 0x0);
        gbc.writeMem(0x53ac, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x1ff9, gbc.sp());
        EXPECT(0x53ae, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 43 02E1
        gbc.setState(0x3bf0, 0xd2d8, 0x66b0, 0x1309, 0x7284, 0xe3c6, 0x1, 0x1);
        gbc.writeMem(0x3bf0, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0xd2d8, gbc.sp());
        EXPECT(0x3bf2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 43 02E2
        gbc.setState(0x86f3, 0x238d, 0x83c0, 0xad3e, 0x9295, 0x543f, 0x1, 0x1);
        gbc.writeMem(0x86f3, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0x238d, gbc.sp());
        EXPECT(0x86f5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x86f3));
        EXPECT(0x43, gbc.readMem(0x86f4));
        // CB 43 02E3
        gbc.setState(0xa1e2, 0x38f5, 0x9940, 0xa339, 0x6688, 0x467e, 0x0, 0x1);
        gbc.writeMem(0xa1e2, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0x38f5, gbc.sp());
        EXPECT(0xa1e4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa1e2));
        EXPECT(0x43, gbc.readMem(0xa1e3));
        // CB 43 02E4
        gbc.setState(0x1b91, 0x4954, 0xf970, 0x4af, 0xf2, 0x327b, 0x1, 0x0);
        gbc.writeMem(0x1b91, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x4954, gbc.sp());
        EXPECT(0x1b93, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 43 02E5
        gbc.setState(0xa2de, 0xafbb, 0x7c50, 0xb848, 0xc04d, 0x3cd6, 0x1, 0x0);
        gbc.writeMem(0xa2de, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0xafbb, gbc.sp());
        EXPECT(0xa2e0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa2de));
        EXPECT(0x43, gbc.readMem(0xa2df));
        // CB 43 02E6
        gbc.setState(0xd0c1, 0x7da5, 0x1440, 0xace2, 0x7bc3, 0xa808, 0x0, 0x1);
        gbc.writeMem(0xd0c1, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x7da5, gbc.sp());
        EXPECT(0xd0c3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd0c1));
        EXPECT(0x43, gbc.readMem(0xd0c2));
        // CB 43 02E7
        gbc.setState(0x9cfa, 0xe93d, 0xcfa0, 0x881, 0x36a3, 0x483f, 0x0, 0x1);
        gbc.writeMem(0x9cfa, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0xe93d, gbc.sp());
        EXPECT(0x9cfc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9cfa));
        EXPECT(0x43, gbc.readMem(0x9cfb));
        // CB 43 02E8
        gbc.setState(0x9a82, 0xb345, 0x28a0, 0x4529, 0x6968, 0xf026, 0x1, 0x0);
        gbc.writeMem(0x9a82, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0xb345, gbc.sp());
        EXPECT(0x9a84, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9a82));
        EXPECT(0x43, gbc.readMem(0x9a83));
        // CB 43 02EA
        gbc.setState(0x5531, 0x840c, 0x2770, 0x5c50, 0xb6cd, 0xf75b, 0x1, 0x0);
        gbc.writeMem(0x5531, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x840c, gbc.sp());
        EXPECT(0x5533, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 43 02EB
        gbc.setState(0xe26f, 0x302f, 0xd130, 0x69bc, 0xce79, 0x5277, 0x0, 0x1);
        gbc.writeMem(0xe26f, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x302f, gbc.sp());
        EXPECT(0xe271, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe26f));
        EXPECT(0x43, gbc.readMem(0xe270));
        // CB 43 02EC
        gbc.setState(0x4709, 0xed58, 0x93d0, 0x355, 0x65a9, 0xfc36, 0x0, 0x0);
        gbc.writeMem(0x4709, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0xed58, gbc.sp());
        EXPECT(0x470b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 43 02ED
        gbc.setState(0x633e, 0x2505, 0xf980, 0xbcec, 0x2601, 0xa6d6, 0x1, 0x1);
        gbc.writeMem(0x633e, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x2505, gbc.sp());
        EXPECT(0x6340, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 43 02EE
        gbc.setState(0x32bd, 0x9d26, 0x4c40, 0x77bb, 0x74cf, 0xcc3f, 0x1, 0x1);
        gbc.writeMem(0x32bd, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0x9d26, gbc.sp());
        EXPECT(0x32bf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 43 02EF
        gbc.setState(0x3f9b, 0xf201, 0x7e30, 0x6ece, 0xd175, 0x9b8d, 0x1, 0x0);
        gbc.writeMem(0x3f9b, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0xf201, gbc.sp());
        EXPECT(0x3f9d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 43 02F0
        gbc.setState(0x8995, 0x4e21, 0x86f0, 0xa7f1, 0xebca, 0x1d01, 0x1, 0x1);
        gbc.writeMem(0x8995, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x4e21, gbc.sp());
        EXPECT(0x8997, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8995));
        EXPECT(0x43, gbc.readMem(0x8996));
        // CB 43 02F1
        gbc.setState(0xaa8f, 0x65c4, 0xb660, 0xe551, 0xfa67, 0xa441, 0x1, 0x1);
        gbc.writeMem(0xaa8f, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x65c4, gbc.sp());
        EXPECT(0xaa91, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaa8f));
        EXPECT(0x43, gbc.readMem(0xaa90));
        // CB 43 02F2
        gbc.setState(0xbfa1, 0xf031, 0xb010, 0xff96, 0x79ac, 0xe20a, 0x1, 0x1);
        gbc.writeMem(0xbfa1, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0xf031, gbc.sp());
        EXPECT(0xbfa3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbfa1));
        EXPECT(0x43, gbc.readMem(0xbfa2));
        // CB 43 02F3
        gbc.setState(0x1475, 0xf5ce, 0xe140, 0xcff3, 0x3086, 0x1ea1, 0x1, 0x1);
        gbc.writeMem(0x1475, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0xf5ce, gbc.sp());
        EXPECT(0x1477, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 43 02F4
        gbc.setState(0x970, 0x446e, 0xab90, 0x4af9, 0xc9d3, 0x4824, 0x1, 0x0);
        gbc.writeMem(0x970, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x446e, gbc.sp());
        EXPECT(0x972, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 43 02F5
        gbc.setState(0xce51, 0xb6c2, 0xd9e0, 0x14c3, 0xef18, 0xc0af, 0x0, 0x0);
        gbc.writeMem(0xce51, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0xb6c2, gbc.sp());
        EXPECT(0xce53, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xce51));
        EXPECT(0x43, gbc.readMem(0xce52));
        // CB 43 02F6
        gbc.setState(0x4830, 0x3e89, 0xd090, 0xdc30, 0x82e5, 0x644, 0x0, 0x1);
        gbc.writeMem(0x4830, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x3e89, gbc.sp());
        EXPECT(0x4832, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 43 02F7
        gbc.setState(0x78b0, 0x1e10, 0x4cb0, 0x47f4, 0x12ec, 0x2b80, 0x1, 0x1);
        gbc.writeMem(0x78b0, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x1e10, gbc.sp());
        EXPECT(0x78b2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 43 02F9
        gbc.setState(0x3026, 0x957b, 0x41e0, 0x6bbe, 0xaa9d, 0xe0a0, 0x0, 0x1);
        gbc.writeMem(0x3026, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x957b, gbc.sp());
        EXPECT(0x3028, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 43 02FA
        gbc.setState(0x82c, 0x682c, 0xf670, 0x41e0, 0x1330, 0xe9aa, 0x1, 0x0);
        gbc.writeMem(0x82c, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x682c, gbc.sp());
        EXPECT(0x82e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 43 02FB
        gbc.setState(0xc64b, 0xdb09, 0xf400, 0x14db, 0x87c4, 0x5a85, 0x1, 0x0);
        gbc.writeMem(0xc64b, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0xdb09, gbc.sp());
        EXPECT(0xc64d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc64b));
        EXPECT(0x43, gbc.readMem(0xc64c));
        // CB 43 02FC
        gbc.setState(0x4c08, 0xcf1e, 0x9d0, 0x4717, 0xd3b2, 0x8888, 0x0, 0x0);
        gbc.writeMem(0x4c08, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0xcf1e, gbc.sp());
        EXPECT(0x4c0a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 43 02FD
        gbc.setState(0xb813, 0x88d0, 0x1150, 0x6743, 0x59d, 0x8f01, 0x0, 0x0);
        gbc.writeMem(0xb813, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x88d0, gbc.sp());
        EXPECT(0xb815, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb813));
        EXPECT(0x43, gbc.readMem(0xb814));
        // CB 43 02FE
        gbc.setState(0x8ace, 0x2221, 0xdb10, 0xac97, 0x529f, 0x43f9, 0x0, 0x1);
        gbc.writeMem(0x8ace, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x2221, gbc.sp());
        EXPECT(0x8ad0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8ace));
        EXPECT(0x43, gbc.readMem(0x8acf));
        // CB 43 02FF
        gbc.setState(0x2b70, 0xac60, 0x8e90, 0xd1ba, 0x935d, 0xfaf8, 0x0, 0x1);
        gbc.writeMem(0x2b70, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0xac60, gbc.sp());
        EXPECT(0x2b72, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 43 0300
        gbc.setState(0x903e, 0x889, 0x7ee0, 0x4c9c, 0xf3f2, 0xdc8d, 0x0, 0x1);
        gbc.writeMem(0x903e, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x889, gbc.sp());
        EXPECT(0x9040, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x903e));
        EXPECT(0x43, gbc.readMem(0x903f));
        // CB 43 0301
        gbc.setState(0x1639, 0xd525, 0xbc20, 0xece, 0xb767, 0x41cd, 0x0, 0x1);
        gbc.writeMem(0x1639, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0xd525, gbc.sp());
        EXPECT(0x163b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 43 0302
        gbc.setState(0x9871, 0x49a3, 0x2640, 0xace, 0xfcad, 0x1e98, 0x1, 0x0);
        gbc.writeMem(0x9871, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x49a3, gbc.sp());
        EXPECT(0x9873, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9871));
        EXPECT(0x43, gbc.readMem(0x9872));
        // CB 43 0303
        gbc.setState(0x6a43, 0x1608, 0xd760, 0x8f17, 0xeb04, 0xb123, 0x1, 0x1);
        gbc.writeMem(0x6a43, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x1608, gbc.sp());
        EXPECT(0x6a45, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 43 0304
        gbc.setState(0x505, 0x60bc, 0x2230, 0x83ff, 0xb279, 0xa977, 0x0, 0x0);
        gbc.writeMem(0x505, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x60bc, gbc.sp());
        EXPECT(0x507, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 43 0305
        gbc.setState(0x64c7, 0xe41b, 0xb060, 0x727b, 0xa3d3, 0x4680, 0x1, 0x0);
        gbc.writeMem(0x64c7, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0xe41b, gbc.sp());
        EXPECT(0x64c9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 43 0306
        gbc.setState(0x9937, 0xf13, 0xc540, 0x4355, 0xf4cc, 0x16c3, 0x0, 0x0);
        gbc.writeMem(0x9937, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0xf13, gbc.sp());
        EXPECT(0x9939, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9937));
        EXPECT(0x43, gbc.readMem(0x9938));
        // CB 43 0307
        gbc.setState(0x7924, 0x13b4, 0xe190, 0x7878, 0xa6f6, 0x65c9, 0x0, 0x0);
        gbc.writeMem(0x7924, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x13b4, gbc.sp());
        EXPECT(0x7926, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 43 0308
        gbc.setState(0xb7da, 0x1b71, 0x2d70, 0x96a3, 0x96fb, 0x6222, 0x1, 0x1);
        gbc.writeMem(0xb7da, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x1b71, gbc.sp());
        EXPECT(0xb7dc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb7da));
        EXPECT(0x43, gbc.readMem(0xb7db));
        // CB 43 0309
        gbc.setState(0x345, 0x33d0, 0x4c10, 0xb170, 0x207c, 0xfaf, 0x0, 0x0);
        gbc.writeMem(0x345, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x33d0, gbc.sp());
        EXPECT(0x347, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 43 030A
        gbc.setState(0xac56, 0x634, 0xa4c0, 0xd422, 0xce0b, 0x93a2, 0x1, 0x1);
        gbc.writeMem(0xac56, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x634, gbc.sp());
        EXPECT(0xac58, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xac56));
        EXPECT(0x43, gbc.readMem(0xac57));
        // CB 43 030B
        gbc.setState(0x587d, 0x17c4, 0x55e0, 0x2245, 0x2bfa, 0xd0d1, 0x0, 0x1);
        gbc.writeMem(0x587d, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x17c4, gbc.sp());
        EXPECT(0x587f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 43 030C
        gbc.setState(0x745f, 0x155e, 0x89d0, 0xa493, 0xa654, 0x3a4d, 0x0, 0x1);
        gbc.writeMem(0x745f, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x155e, gbc.sp());
        EXPECT(0x7461, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 43 030D
        gbc.setState(0xf0a, 0xd316, 0xdd00, 0x7e17, 0x43cd, 0x2e8b, 0x0, 0x0);
        gbc.writeMem(0xf0a, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0xd316, gbc.sp());
        EXPECT(0xf0c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 43 030E
        gbc.setState(0xd9fd, 0xca15, 0xaa60, 0x5026, 0xa241, 0x1991, 0x0, 0x1);
        gbc.writeMem(0xd9fd, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0xca15, gbc.sp());
        EXPECT(0xd9ff, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd9fd));
        EXPECT(0x43, gbc.readMem(0xd9fe));
        // CB 43 030F
        gbc.setState(0x30c7, 0x4dc4, 0x4550, 0x81cd, 0xb006, 0xe4dc, 0x0, 0x1);
        gbc.writeMem(0x30c7, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x4dc4, gbc.sp());
        EXPECT(0x30c9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 43 0310
        gbc.setState(0xa1d4, 0xbdd5, 0xf310, 0xd4d7, 0xf4ba, 0x4a20, 0x0, 0x0);
        gbc.writeMem(0xa1d4, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0xbdd5, gbc.sp());
        EXPECT(0xa1d6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa1d4));
        EXPECT(0x43, gbc.readMem(0xa1d5));
        // CB 43 0311
        gbc.setState(0x5787, 0x560f, 0x5280, 0x493b, 0xb79c, 0x3fdb, 0x0, 0x1);
        gbc.writeMem(0x5787, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x560f, gbc.sp());
        EXPECT(0x5789, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 43 0312
        gbc.setState(0xdfc7, 0x64fd, 0x3de0, 0xb2db, 0xfef2, 0xe2c7, 0x0, 0x1);
        gbc.writeMem(0xdfc7, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x64fd, gbc.sp());
        EXPECT(0xdfc9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdfc7));
        EXPECT(0x43, gbc.readMem(0xdfc8));
        // CB 43 0313
        gbc.setState(0x99d2, 0xff74, 0x85d0, 0x74dc, 0x73cd, 0x1722, 0x0, 0x0);
        gbc.writeMem(0x99d2, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0xff74, gbc.sp());
        EXPECT(0x99d4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x99d2));
        EXPECT(0x43, gbc.readMem(0x99d3));
        // CB 43 0314
        gbc.setState(0x1878, 0xc017, 0xc130, 0x293d, 0xf174, 0xf8db, 0x0, 0x1);
        gbc.writeMem(0x1878, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0xc017, gbc.sp());
        EXPECT(0x187a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 43 0315
        gbc.setState(0x4a1d, 0xa4e7, 0x28c0, 0x3381, 0x1e73, 0x8a8, 0x0, 0x1);
        gbc.writeMem(0x4a1d, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0xa4e7, gbc.sp());
        EXPECT(0x4a1f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 43 0316
        gbc.setState(0x3e23, 0xa0f7, 0xcc30, 0xd7a4, 0x9079, 0x22a9, 0x1, 0x0);
        gbc.writeMem(0x3e23, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0xa0f7, gbc.sp());
        EXPECT(0x3e25, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 43 0317
        gbc.setState(0xc313, 0x40fd, 0x6b0, 0x3130, 0x6f4e, 0x9346, 0x0, 0x1);
        gbc.writeMem(0xc313, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x40fd, gbc.sp());
        EXPECT(0xc315, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc313));
        EXPECT(0x43, gbc.readMem(0xc314));
        // CB 43 0318
        gbc.setState(0xba2d, 0x4c10, 0xcd10, 0x9b43, 0x904f, 0x5fe0, 0x0, 0x1);
        gbc.writeMem(0xba2d, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x4c10, gbc.sp());
        EXPECT(0xba2f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xba2d));
        EXPECT(0x43, gbc.readMem(0xba2e));
        // CB 43 0319
        gbc.setState(0x93f8, 0x4746, 0xae60, 0xad5d, 0x3a63, 0x8eb8, 0x1, 0x0);
        gbc.writeMem(0x93f8, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x4746, gbc.sp());
        EXPECT(0x93fa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x93f8));
        EXPECT(0x43, gbc.readMem(0x93f9));
        // CB 43 031A
        gbc.setState(0xb6dd, 0xf8da, 0x81d0, 0x98fb, 0x4b56, 0x3ede, 0x0, 0x0);
        gbc.writeMem(0xb6dd, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0xf8da, gbc.sp());
        EXPECT(0xb6df, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb6dd));
        EXPECT(0x43, gbc.readMem(0xb6de));
        // CB 43 031B
        gbc.setState(0xe6a, 0x1f2, 0xafe0, 0x20f3, 0x47d9, 0x1514, 0x0, 0x0);
        gbc.writeMem(0xe6a, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x1f2, gbc.sp());
        EXPECT(0xe6c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 43 031C
        gbc.setState(0x87e4, 0x7dbe, 0x1c90, 0x3d78, 0xa6a9, 0x8209, 0x1, 0x0);
        gbc.writeMem(0x87e4, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x7dbe, gbc.sp());
        EXPECT(0x87e6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x87e4));
        EXPECT(0x43, gbc.readMem(0x87e5));
        // CB 43 031D
        gbc.setState(0x175f, 0xd428, 0x9170, 0x1125, 0xdc9b, 0xb216, 0x0, 0x0);
        gbc.writeMem(0x175f, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0xd428, gbc.sp());
        EXPECT(0x1761, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 43 031E
        gbc.setState(0xc16a, 0x8a9f, 0x8de0, 0x36bf, 0x53f, 0x91b6, 0x1, 0x1);
        gbc.writeMem(0xc16a, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x8a9f, gbc.sp());
        EXPECT(0xc16c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc16a));
        EXPECT(0x43, gbc.readMem(0xc16b));
        // CB 43 031F
        gbc.setState(0xe4c5, 0x3f41, 0x1520, 0x1e36, 0x9a56, 0x1fde, 0x0, 0x0);
        gbc.writeMem(0xe4c5, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x3f41, gbc.sp());
        EXPECT(0xe4c7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe4c5));
        EXPECT(0x43, gbc.readMem(0xe4c6));
        // CB 43 0320
        gbc.setState(0x280b, 0xad68, 0x1b70, 0x3b88, 0x4c5f, 0x6e41, 0x0, 0x1);
        gbc.writeMem(0x280b, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0xad68, gbc.sp());
        EXPECT(0x280d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 43 0321
        gbc.setState(0x2f3b, 0x5999, 0x1180, 0x787b, 0xd2fb, 0xbf44, 0x1, 0x0);
        gbc.writeMem(0x2f3b, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x5999, gbc.sp());
        EXPECT(0x2f3d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 43 0322
        gbc.setState(0xc296, 0xc90a, 0x8630, 0xb842, 0xf2f7, 0xb7fc, 0x1, 0x1);
        gbc.writeMem(0xc296, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0xc90a, gbc.sp());
        EXPECT(0xc298, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc296));
        EXPECT(0x43, gbc.readMem(0xc297));
        // CB 43 0323
        gbc.setState(0x9d59, 0xcfe6, 0xb380, 0x751c, 0x2f49, 0xc540, 0x1, 0x1);
        gbc.writeMem(0x9d59, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0xcfe6, gbc.sp());
        EXPECT(0x9d5b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9d59));
        EXPECT(0x43, gbc.readMem(0x9d5a));
        // CB 43 0324
        gbc.setState(0xe1bc, 0xf328, 0x55f0, 0xfee, 0xa810, 0xb43d, 0x0, 0x1);
        gbc.writeMem(0xe1bc, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0xf328, gbc.sp());
        EXPECT(0xe1be, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe1bc));
        EXPECT(0x43, gbc.readMem(0xe1bd));
        // CB 43 0325
        gbc.setState(0x23ef, 0xdaf, 0xb990, 0xbbd, 0x4b6f, 0x1222, 0x1, 0x1);
        gbc.writeMem(0x23ef, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0xdaf, gbc.sp());
        EXPECT(0x23f1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 43 0326
        gbc.setState(0x6864, 0xe48, 0x4480, 0x15ad, 0xaa59, 0x3aa8, 0x1, 0x0);
        gbc.writeMem(0x6864, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0xe48, gbc.sp());
        EXPECT(0x6866, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 43 0327
        gbc.setState(0x4e16, 0x5199, 0x71a0, 0xa7cd, 0x74fa, 0xc50d, 0x1, 0x0);
        gbc.writeMem(0x4e16, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x5199, gbc.sp());
        EXPECT(0x4e18, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 43 0328
        gbc.setState(0x578c, 0xcfe9, 0x9c90, 0xf65, 0xb45b, 0x9056, 0x0, 0x1);
        gbc.writeMem(0x578c, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0xcfe9, gbc.sp());
        EXPECT(0x578e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 43 0329
        gbc.setState(0x6e2d, 0x5578, 0xe520, 0xe99, 0x9fda, 0x767, 0x1, 0x0);
        gbc.writeMem(0x6e2d, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x5578, gbc.sp());
        EXPECT(0x6e2f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 43 032A
        gbc.setState(0x20fe, 0x10a8, 0x15b0, 0xa7ac, 0xb97d, 0x1a1, 0x0, 0x0);
        gbc.writeMem(0x20fe, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x10a8, gbc.sp());
        EXPECT(0x2100, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 43 032B
        gbc.setState(0x40c5, 0x6034, 0x15c0, 0xea0c, 0xefa7, 0x589b, 0x0, 0x1);
        gbc.writeMem(0x40c5, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x6034, gbc.sp());
        EXPECT(0x40c7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 43 032C
        gbc.setState(0x6828, 0xc412, 0x82c0, 0xe7e, 0x4112, 0x6a78, 0x0, 0x0);
        gbc.writeMem(0x6828, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0xc412, gbc.sp());
        EXPECT(0x682a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 43 032D
        gbc.setState(0x3aee, 0xec10, 0x1430, 0xd3a1, 0x1d96, 0x2b35, 0x1, 0x0);
        gbc.writeMem(0x3aee, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0xec10, gbc.sp());
        EXPECT(0x3af0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 43 032E
        gbc.setState(0xc184, 0xb8f6, 0x4f90, 0xc947, 0x2577, 0xfa99, 0x1, 0x1);
        gbc.writeMem(0xc184, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0xb8f6, gbc.sp());
        EXPECT(0xc186, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc184));
        EXPECT(0x43, gbc.readMem(0xc185));
        // CB 43 032F
        gbc.setState(0x101c, 0xdc54, 0xeb80, 0x718d, 0x9aae, 0xd699, 0x0, 0x1);
        gbc.writeMem(0x101c, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0xdc54, gbc.sp());
        EXPECT(0x101e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 43 0330
        gbc.setState(0x43b0, 0x364, 0xf70, 0x6c6c, 0x72cc, 0x9f44, 0x0, 0x0);
        gbc.writeMem(0x43b0, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x364, gbc.sp());
        EXPECT(0x43b2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 43 0331
        gbc.setState(0xb2ea, 0xf0a9, 0x540, 0x95fd, 0xbb12, 0x5a81, 0x1, 0x0);
        gbc.writeMem(0xb2ea, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0xf0a9, gbc.sp());
        EXPECT(0xb2ec, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb2ea));
        EXPECT(0x43, gbc.readMem(0xb2eb));
        // CB 43 0332
        gbc.setState(0xed29, 0x7aba, 0x3fb0, 0x320c, 0xd88e, 0xf946, 0x1, 0x1);
        gbc.writeMem(0xed29, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x7aba, gbc.sp());
        EXPECT(0xed2b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xed29));
        EXPECT(0x43, gbc.readMem(0xed2a));
        // CB 43 0333
        gbc.setState(0xd601, 0x4173, 0xf220, 0x5f4d, 0x4450, 0xaa06, 0x0, 0x1);
        gbc.writeMem(0xd601, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x4173, gbc.sp());
        EXPECT(0xd603, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd601));
        EXPECT(0x43, gbc.readMem(0xd602));
        // CB 43 0334
        gbc.setState(0x5347, 0x4981, 0xd5a0, 0xd427, 0x769c, 0x3751, 0x1, 0x1);
        gbc.writeMem(0x5347, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x4981, gbc.sp());
        EXPECT(0x5349, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 43 0335
        gbc.setState(0x91ee, 0xb56a, 0xc4c0, 0x80ab, 0x39d8, 0xfae1, 0x0, 0x1);
        gbc.writeMem(0x91ee, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0xb56a, gbc.sp());
        EXPECT(0x91f0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x91ee));
        EXPECT(0x43, gbc.readMem(0x91ef));
        // CB 43 0336
        gbc.setState(0x864c, 0x98e6, 0x7d50, 0x5068, 0xd404, 0x178c, 0x1, 0x0);
        gbc.writeMem(0x864c, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x98e6, gbc.sp());
        EXPECT(0x864e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x864c));
        EXPECT(0x43, gbc.readMem(0x864d));
        // CB 43 0337
        gbc.setState(0xe288, 0xeeb9, 0x1b80, 0x8d96, 0xaa57, 0x5b54, 0x0, 0x1);
        gbc.writeMem(0xe288, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0xeeb9, gbc.sp());
        EXPECT(0xe28a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe288));
        EXPECT(0x43, gbc.readMem(0xe289));
        // CB 43 0338
        gbc.setState(0xa421, 0xc4ba, 0xeba0, 0x9b1d, 0x3763, 0x3957, 0x0, 0x0);
        gbc.writeMem(0xa421, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0xc4ba, gbc.sp());
        EXPECT(0xa423, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa421));
        EXPECT(0x43, gbc.readMem(0xa422));
        // CB 43 0339
        gbc.setState(0x593d, 0xabce, 0x1140, 0x7642, 0x37d3, 0xff9c, 0x1, 0x0);
        gbc.writeMem(0x593d, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0xabce, gbc.sp());
        EXPECT(0x593f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 43 033A
        gbc.setState(0x635, 0xc93, 0xac60, 0xc63a, 0xf5b3, 0xc7cc, 0x1, 0x1);
        gbc.writeMem(0x635, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0xc93, gbc.sp());
        EXPECT(0x637, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 43 033B
        gbc.setState(0x1e78, 0x515b, 0xf5f0, 0xa282, 0xb0ad, 0x932a, 0x0, 0x1);
        gbc.writeMem(0x1e78, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x515b, gbc.sp());
        EXPECT(0x1e7a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 43 033C
        gbc.setState(0x5995, 0xd3c6, 0x5f90, 0x1d32, 0x246d, 0x3ba1, 0x1, 0x1);
        gbc.writeMem(0x5995, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0xd3c6, gbc.sp());
        EXPECT(0x5997, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 43 033E
        gbc.setState(0x832f, 0xc969, 0x3170, 0xf09, 0x6867, 0xa7a9, 0x0, 0x0);
        gbc.writeMem(0x832f, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0xc969, gbc.sp());
        EXPECT(0x8331, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x832f));
        EXPECT(0x43, gbc.readMem(0x8330));
        // CB 43 033F
        gbc.setState(0x6383, 0xe95, 0x2ea0, 0xa78c, 0x2298, 0x397, 0x0, 0x0);
        gbc.writeMem(0x6383, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0xe95, gbc.sp());
        EXPECT(0x6385, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 43 0340
        gbc.setState(0x3dc6, 0xf8d4, 0xe6b0, 0x7a7c, 0x7e70, 0xeb88, 0x0, 0x0);
        gbc.writeMem(0x3dc6, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0xf8d4, gbc.sp());
        EXPECT(0x3dc8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 43 0341
        gbc.setState(0xd3f4, 0xd856, 0xcec0, 0x66cb, 0x57c4, 0x449f, 0x0, 0x0);
        gbc.writeMem(0xd3f4, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0xd856, gbc.sp());
        EXPECT(0xd3f6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd3f4));
        EXPECT(0x43, gbc.readMem(0xd3f5));
        // CB 43 0342
        gbc.setState(0xe1e, 0x5037, 0x43c0, 0x72e6, 0xcf0f, 0xf4fb, 0x1, 0x1);
        gbc.writeMem(0xe1e, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x5037, gbc.sp());
        EXPECT(0xe20, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 43 0343
        gbc.setState(0x5804, 0xacd7, 0x41e0, 0x52e8, 0x6590, 0xec19, 0x0, 0x0);
        gbc.writeMem(0x5804, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0xacd7, gbc.sp());
        EXPECT(0x5806, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 43 0344
        gbc.setState(0x2438, 0x586f, 0x94f0, 0xacbf, 0x22f8, 0xe008, 0x0, 0x1);
        gbc.writeMem(0x2438, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x586f, gbc.sp());
        EXPECT(0x243a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 43 0345
        gbc.setState(0xbdd5, 0x8683, 0x6950, 0xed91, 0x75c5, 0xf683, 0x1, 0x0);
        gbc.writeMem(0xbdd5, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x8683, gbc.sp());
        EXPECT(0xbdd7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbdd5));
        EXPECT(0x43, gbc.readMem(0xbdd6));
        // CB 43 0346
        gbc.setState(0x6ee6, 0x55db, 0xe3a0, 0xdf33, 0x174f, 0xd91b, 0x1, 0x0);
        gbc.writeMem(0x6ee6, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x55db, gbc.sp());
        EXPECT(0x6ee8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 43 0347
        gbc.setState(0x8cb8, 0x563a, 0x2e30, 0x2f87, 0xabdd, 0xc599, 0x1, 0x0);
        gbc.writeMem(0x8cb8, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x563a, gbc.sp());
        EXPECT(0x8cba, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8cb8));
        EXPECT(0x43, gbc.readMem(0x8cb9));
        // CB 43 0348
        gbc.setState(0x8d2, 0x62c9, 0x48c0, 0x50cd, 0x5560, 0xb8a, 0x0, 0x1);
        gbc.writeMem(0x8d2, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x62c9, gbc.sp());
        EXPECT(0x8d4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 43 0349
        gbc.setState(0x5cae, 0x93ea, 0xee80, 0x9a98, 0x7de7, 0x9716, 0x1, 0x0);
        gbc.writeMem(0x5cae, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x93ea, gbc.sp());
        EXPECT(0x5cb0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 43 034A
        gbc.setState(0x78c0, 0x107e, 0x6c20, 0xa45, 0xdb8b, 0xfdeb, 0x1, 0x1);
        gbc.writeMem(0x78c0, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x107e, gbc.sp());
        EXPECT(0x78c2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 43 034B
        gbc.setState(0x7679, 0xa019, 0xf940, 0x74c1, 0x3ab1, 0x2a42, 0x1, 0x1);
        gbc.writeMem(0x7679, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0xa019, gbc.sp());
        EXPECT(0x767b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 43 034C
        gbc.setState(0xb80a, 0xaeb2, 0xb390, 0x6d56, 0x2c51, 0xe6e0, 0x0, 0x0);
        gbc.writeMem(0xb80a, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0xaeb2, gbc.sp());
        EXPECT(0xb80c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb80a));
        EXPECT(0x43, gbc.readMem(0xb80b));
        // CB 43 034E
        gbc.setState(0xb15f, 0x2c8e, 0x3b20, 0x3f53, 0x7a8c, 0x1a1e, 0x0, 0x1);
        gbc.writeMem(0xb15f, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x2c8e, gbc.sp());
        EXPECT(0xb161, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb15f));
        EXPECT(0x43, gbc.readMem(0xb160));
        // CB 43 034F
        gbc.setState(0x9d36, 0x6fd4, 0x7830, 0xac42, 0x98e4, 0xb9ee, 0x1, 0x1);
        gbc.writeMem(0x9d36, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x6fd4, gbc.sp());
        EXPECT(0x9d38, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9d36));
        EXPECT(0x43, gbc.readMem(0x9d37));
        // CB 43 0350
        gbc.setState(0x3cf, 0xdbf1, 0x4740, 0x6904, 0x7844, 0x893a, 0x1, 0x1);
        gbc.writeMem(0x3cf, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0xdbf1, gbc.sp());
        EXPECT(0x3d1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 43 0351
        gbc.setState(0x94c8, 0x6d7f, 0x2af0, 0x39ef, 0x1414, 0x124, 0x0, 0x0);
        gbc.writeMem(0x94c8, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x6d7f, gbc.sp());
        EXPECT(0x94ca, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x94c8));
        EXPECT(0x43, gbc.readMem(0x94c9));
        // CB 43 0352
        gbc.setState(0x7baf, 0x7f1d, 0x6a20, 0xd86f, 0xa72, 0x4a6b, 0x0, 0x0);
        gbc.writeMem(0x7baf, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x7f1d, gbc.sp());
        EXPECT(0x7bb1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 43 0353
        gbc.setState(0x30f5, 0xe0aa, 0x140, 0x279d, 0xa693, 0x8c9d, 0x0, 0x0);
        gbc.writeMem(0x30f5, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0xe0aa, gbc.sp());
        EXPECT(0x30f7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 43 0354
        gbc.setState(0x29c9, 0x7ee4, 0xa230, 0xe31b, 0xbb53, 0xd6b1, 0x0, 0x0);
        gbc.writeMem(0x29c9, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x7ee4, gbc.sp());
        EXPECT(0x29cb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 43 0355
        gbc.setState(0x8172, 0xf034, 0x9310, 0x5f43, 0x35fa, 0x1744, 0x1, 0x1);
        gbc.writeMem(0x8172, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0xf034, gbc.sp());
        EXPECT(0x8174, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8172));
        EXPECT(0x43, gbc.readMem(0x8173));
        // CB 43 0356
        gbc.setState(0xd909, 0x93f5, 0x4520, 0x8ae3, 0x4099, 0xbe55, 0x0, 0x1);
        gbc.writeMem(0xd909, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x93f5, gbc.sp());
        EXPECT(0xd90b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd909));
        EXPECT(0x43, gbc.readMem(0xd90a));
        // CB 43 0357
        gbc.setState(0x84ee, 0x57da, 0xd450, 0x9d62, 0x1c6d, 0x562b, 0x0, 0x1);
        gbc.writeMem(0x84ee, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x57da, gbc.sp());
        EXPECT(0x84f0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x84ee));
        EXPECT(0x43, gbc.readMem(0x84ef));
        // CB 43 0358
        gbc.setState(0xe420, 0xa68a, 0xd3e0, 0x369, 0xe85b, 0xb76c, 0x0, 0x1);
        gbc.writeMem(0xe420, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0xa68a, gbc.sp());
        EXPECT(0xe422, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe420));
        EXPECT(0x43, gbc.readMem(0xe421));
        // CB 43 0359
        gbc.setState(0xdbbf, 0xc35e, 0xd8d0, 0x6079, 0x814b, 0x2fd3, 0x0, 0x1);
        gbc.writeMem(0xdbbf, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0xc35e, gbc.sp());
        EXPECT(0xdbc1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdbbf));
        EXPECT(0x43, gbc.readMem(0xdbc0));
        // CB 43 035A
        gbc.setState(0x67dc, 0x4b69, 0x2c30, 0x69ef, 0x4cb4, 0xac31, 0x0, 0x0);
        gbc.writeMem(0x67dc, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x4b69, gbc.sp());
        EXPECT(0x67de, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 43 035B
        gbc.setState(0x9867, 0x9ce0, 0x4d70, 0xe417, 0x4cf6, 0x6eff, 0x1, 0x0);
        gbc.writeMem(0x9867, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x9ce0, gbc.sp());
        EXPECT(0x9869, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9867));
        EXPECT(0x43, gbc.readMem(0x9868));
        // CB 43 035C
        gbc.setState(0x3f8d, 0x1f25, 0x7e80, 0x7783, 0x6346, 0xc6b4, 0x0, 0x1);
        gbc.writeMem(0x3f8d, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x1f25, gbc.sp());
        EXPECT(0x3f8f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 43 035D
        gbc.setState(0x9732, 0x5519, 0xdf40, 0x9a6f, 0xe99b, 0x4700, 0x1, 0x0);
        gbc.writeMem(0x9732, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x5519, gbc.sp());
        EXPECT(0x9734, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9732));
        EXPECT(0x43, gbc.readMem(0x9733));
        // CB 43 035E
        gbc.setState(0xc5e3, 0x30c5, 0xa000, 0x40c1, 0x416a, 0xa2fa, 0x0, 0x1);
        gbc.writeMem(0xc5e3, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0x30c5, gbc.sp());
        EXPECT(0xc5e5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc5e3));
        EXPECT(0x43, gbc.readMem(0xc5e4));
        // CB 43 035F
        gbc.setState(0xa3fb, 0x32c8, 0xf020, 0xffcd, 0x59a6, 0xa447, 0x0, 0x0);
        gbc.writeMem(0xa3fb, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x32c8, gbc.sp());
        EXPECT(0xa3fd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa3fb));
        EXPECT(0x43, gbc.readMem(0xa3fc));
        // CB 43 0361
        gbc.setState(0xae6c, 0x9079, 0x92e0, 0xf2be, 0x37e8, 0xbb64, 0x0, 0x1);
        gbc.writeMem(0xae6c, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x9079, gbc.sp());
        EXPECT(0xae6e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xae6c));
        EXPECT(0x43, gbc.readMem(0xae6d));
        // CB 43 0362
        gbc.setState(0x3900, 0x32a4, 0x4ee0, 0xacaf, 0x77de, 0xd7ad, 0x0, 0x0);
        gbc.writeMem(0x3900, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x32a4, gbc.sp());
        EXPECT(0x3902, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 43 0363
        gbc.setState(0xe79f, 0xdc, 0xe720, 0x4b6d, 0x2430, 0xea46, 0x0, 0x0);
        gbc.writeMem(0xe79f, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0xdc, gbc.sp());
        EXPECT(0xe7a1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe79f));
        EXPECT(0x43, gbc.readMem(0xe7a0));
        // CB 43 0364
        gbc.setState(0xdaf2, 0xe234, 0x11b0, 0xf4aa, 0x9124, 0x365a, 0x0, 0x0);
        gbc.writeMem(0xdaf2, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0xe234, gbc.sp());
        EXPECT(0xdaf4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdaf2));
        EXPECT(0x43, gbc.readMem(0xdaf3));
        // CB 43 0365
        gbc.setState(0x9ea9, 0xcf3d, 0xe690, 0xf5d7, 0x2b54, 0x51e9, 0x1, 0x0);
        gbc.writeMem(0x9ea9, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0xcf3d, gbc.sp());
        EXPECT(0x9eab, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9ea9));
        EXPECT(0x43, gbc.readMem(0x9eaa));
        // CB 43 0366
        gbc.setState(0xc790, 0xd86, 0xbb20, 0x826, 0x713e, 0x522c, 0x1, 0x0);
        gbc.writeMem(0xc790, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0xd86, gbc.sp());
        EXPECT(0xc792, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc790));
        EXPECT(0x43, gbc.readMem(0xc791));
        // CB 43 0367
        gbc.setState(0x8745, 0x635e, 0x4c50, 0xdaec, 0x9e1b, 0x5458, 0x0, 0x0);
        gbc.writeMem(0x8745, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x635e, gbc.sp());
        EXPECT(0x8747, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8745));
        EXPECT(0x43, gbc.readMem(0x8746));
        // CB 43 0368
        gbc.setState(0x7b9d, 0x7801, 0x8c0, 0xbea5, 0xe95a, 0x18fd, 0x0, 0x1);
        gbc.writeMem(0x7b9d, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x7801, gbc.sp());
        EXPECT(0x7b9f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 43 0369
        gbc.setState(0x2586, 0xd2a5, 0xb240, 0xde70, 0xa717, 0x436f, 0x1, 0x1);
        gbc.writeMem(0x2586, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0xd2a5, gbc.sp());
        EXPECT(0x2588, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 43 036A
        gbc.setState(0x9314, 0x4cbb, 0x9800, 0x3794, 0x442f, 0x4243, 0x1, 0x1);
        gbc.writeMem(0x9314, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x4cbb, gbc.sp());
        EXPECT(0x9316, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9314));
        EXPECT(0x43, gbc.readMem(0x9315));
        // CB 43 036B
        gbc.setState(0xa185, 0x2813, 0xf5d0, 0x91a, 0xeada, 0xeea3, 0x0, 0x0);
        gbc.writeMem(0xa185, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0x2813, gbc.sp());
        EXPECT(0xa187, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa185));
        EXPECT(0x43, gbc.readMem(0xa186));
        // CB 43 036C
        gbc.setState(0x2a74, 0x58ca, 0x5c70, 0x6f54, 0x3304, 0x6604, 0x0, 0x1);
        gbc.writeMem(0x2a74, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x58ca, gbc.sp());
        EXPECT(0x2a76, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 43 036D
        gbc.setState(0x87e6, 0xf45d, 0xd230, 0x75a2, 0x9585, 0x31a, 0x1, 0x0);
        gbc.writeMem(0x87e6, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0xf45d, gbc.sp());
        EXPECT(0x87e8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x87e6));
        EXPECT(0x43, gbc.readMem(0x87e7));
        // CB 43 036E
        gbc.setState(0x507d, 0x20eb, 0x1c80, 0xb4ee, 0x2589, 0x5d5e, 0x0, 0x0);
        gbc.writeMem(0x507d, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x20eb, gbc.sp());
        EXPECT(0x507f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 43 036F
        gbc.setState(0xc0c6, 0x9315, 0xf350, 0xce59, 0x1f97, 0x85a8, 0x1, 0x1);
        gbc.writeMem(0xc0c6, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x9315, gbc.sp());
        EXPECT(0xc0c8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc0c6));
        EXPECT(0x43, gbc.readMem(0xc0c7));
        // CB 43 0370
        gbc.setState(0x2d83, 0x3c7f, 0x7980, 0x164a, 0x8519, 0x6579, 0x0, 0x1);
        gbc.writeMem(0x2d83, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x3c7f, gbc.sp());
        EXPECT(0x2d85, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 43 0371
        gbc.setState(0xb435, 0x50f2, 0x73b0, 0x68fb, 0xfb9, 0xcb22, 0x1, 0x0);
        gbc.writeMem(0xb435, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x50f2, gbc.sp());
        EXPECT(0xb437, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb435));
        EXPECT(0x43, gbc.readMem(0xb436));
        // CB 43 0372
        gbc.setState(0x3ecf, 0xc56e, 0xc090, 0xd244, 0xac3d, 0x6e5, 0x1, 0x1);
        gbc.writeMem(0x3ecf, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0xc56e, gbc.sp());
        EXPECT(0x3ed1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 43 0373
        gbc.setState(0x6982, 0xcccd, 0xa830, 0xf5e5, 0x6208, 0xc0c7, 0x1, 0x1);
        gbc.writeMem(0x6982, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0xcccd, gbc.sp());
        EXPECT(0x6984, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 43 0374
        gbc.setState(0x7ed1, 0x40c0, 0x4e10, 0xad64, 0x7fe4, 0x47b4, 0x0, 0x0);
        gbc.writeMem(0x7ed1, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x40c0, gbc.sp());
        EXPECT(0x7ed3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 43 0375
        gbc.setState(0x795b, 0x16ac, 0xddb0, 0x5089, 0x71c3, 0x373b, 0x0, 0x1);
        gbc.writeMem(0x795b, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x16ac, gbc.sp());
        EXPECT(0x795d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 43 0376
        gbc.setState(0x8a05, 0x4368, 0x16e0, 0xc5b6, 0xda79, 0x11e4, 0x0, 0x1);
        gbc.writeMem(0x8a05, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x4368, gbc.sp());
        EXPECT(0x8a07, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8a05));
        EXPECT(0x43, gbc.readMem(0x8a06));
        // CB 43 0377
        gbc.setState(0xd010, 0x198f, 0xa400, 0x683d, 0xc9c5, 0xa3fc, 0x1, 0x1);
        gbc.writeMem(0xd010, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x198f, gbc.sp());
        EXPECT(0xd012, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd010));
        EXPECT(0x43, gbc.readMem(0xd011));
        // CB 43 0379
        gbc.setState(0x15b1, 0xd5d0, 0xf30, 0xfab6, 0x189c, 0x2f16, 0x0, 0x0);
        gbc.writeMem(0x15b1, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0xd5d0, gbc.sp());
        EXPECT(0x15b3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 43 037A
        gbc.setState(0xe595, 0xd0aa, 0x9990, 0x93d4, 0x2592, 0x8418, 0x1, 0x0);
        gbc.writeMem(0xe595, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0xd0aa, gbc.sp());
        EXPECT(0xe597, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe595));
        EXPECT(0x43, gbc.readMem(0xe596));
        // CB 43 037B
        gbc.setState(0x7492, 0x32c9, 0x9330, 0xe685, 0x22fa, 0xcaf4, 0x1, 0x0);
        gbc.writeMem(0x7492, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x32c9, gbc.sp());
        EXPECT(0x7494, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 43 037D
        gbc.setState(0xa8bf, 0x7349, 0x510, 0x48a6, 0xe941, 0x1849, 0x0, 0x1);
        gbc.writeMem(0xa8bf, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x7349, gbc.sp());
        EXPECT(0xa8c1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa8bf));
        EXPECT(0x43, gbc.readMem(0xa8c0));
        // CB 43 037E
        gbc.setState(0xbf92, 0x465d, 0xe200, 0x70b3, 0x2ae6, 0x32fa, 0x0, 0x1);
        gbc.writeMem(0xbf92, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0x465d, gbc.sp());
        EXPECT(0xbf94, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbf92));
        EXPECT(0x43, gbc.readMem(0xbf93));
        // CB 43 037F
        gbc.setState(0x13a8, 0x6ca6, 0x29c0, 0x190c, 0x8c36, 0x1a4c, 0x0, 0x0);
        gbc.writeMem(0x13a8, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x6ca6, gbc.sp());
        EXPECT(0x13aa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 43 0380
        gbc.setState(0x3694, 0xbd0, 0x7690, 0x126b, 0xa379, 0x5049, 0x0, 0x1);
        gbc.writeMem(0x3694, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0xbd0, gbc.sp());
        EXPECT(0x3696, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 43 0381
        gbc.setState(0xa16e, 0xba0d, 0x21f0, 0xb223, 0x4621, 0x7d40, 0x0, 0x0);
        gbc.writeMem(0xa16e, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0xba0d, gbc.sp());
        EXPECT(0xa170, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa16e));
        EXPECT(0x43, gbc.readMem(0xa16f));
        // CB 43 0382
        gbc.setState(0x9fcf, 0x1cc3, 0x9930, 0x1469, 0x8990, 0xa1c1, 0x0, 0x1);
        gbc.writeMem(0x9fcf, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x1cc3, gbc.sp());
        EXPECT(0x9fd1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9fcf));
        EXPECT(0x43, gbc.readMem(0x9fd0));
        // CB 43 0383
        gbc.setState(0x1deb, 0x6b01, 0xfd0, 0x620d, 0xe36d, 0x2f2a, 0x1, 0x1);
        gbc.writeMem(0x1deb, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x6b01, gbc.sp());
        EXPECT(0x1ded, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 43 0384
        gbc.setState(0x1304, 0x4388, 0xcf20, 0xaf9a, 0x1d94, 0x4ed3, 0x0, 0x0);
        gbc.writeMem(0x1304, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x4388, gbc.sp());
        EXPECT(0x1306, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 43 0385
        gbc.setState(0x8770, 0x9856, 0xa720, 0x71ec, 0x9221, 0x2839, 0x1, 0x0);
        gbc.writeMem(0x8770, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x9856, gbc.sp());
        EXPECT(0x8772, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8770));
        EXPECT(0x43, gbc.readMem(0x8771));
        // CB 43 0386
        gbc.setState(0x935a, 0x3e41, 0xa130, 0x7073, 0xc4de, 0x5120, 0x1, 0x0);
        gbc.writeMem(0x935a, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x3e41, gbc.sp());
        EXPECT(0x935c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x935a));
        EXPECT(0x43, gbc.readMem(0x935b));
        // CB 43 0387
        gbc.setState(0x45e5, 0x7e8b, 0x61d0, 0x74d8, 0xa213, 0x3e4e, 0x1, 0x1);
        gbc.writeMem(0x45e5, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x7e8b, gbc.sp());
        EXPECT(0x45e7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 43 0388
        gbc.setState(0x50b6, 0x7850, 0x6d20, 0xcf63, 0x456f, 0x79b2, 0x0, 0x0);
        gbc.writeMem(0x50b6, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x7850, gbc.sp());
        EXPECT(0x50b8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 43 0389
        gbc.setState(0xabc7, 0x41e1, 0x8720, 0x72d, 0x5f2c, 0x1db, 0x1, 0x0);
        gbc.writeMem(0xabc7, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x41e1, gbc.sp());
        EXPECT(0xabc9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xabc7));
        EXPECT(0x43, gbc.readMem(0xabc8));
        // CB 43 038A
        gbc.setState(0x7477, 0x5205, 0xb290, 0x9ec9, 0x2aac, 0x96a9, 0x0, 0x0);
        gbc.writeMem(0x7477, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x5205, gbc.sp());
        EXPECT(0x7479, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 43 038B
        gbc.setState(0xcb3b, 0x1805, 0x73b0, 0x4a64, 0x2613, 0xc3ec, 0x1, 0x1);
        gbc.writeMem(0xcb3b, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x1805, gbc.sp());
        EXPECT(0xcb3d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcb3b));
        EXPECT(0x43, gbc.readMem(0xcb3c));
        // CB 43 038C
        gbc.setState(0x20bf, 0x4631, 0x1350, 0xe3f2, 0x896e, 0x105b, 0x1, 0x0);
        gbc.writeMem(0x20bf, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x4631, gbc.sp());
        EXPECT(0x20c1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 43 038D
        gbc.setState(0xedce, 0x3ecc, 0x98a0, 0xbb38, 0xb24d, 0x2e29, 0x1, 0x0);
        gbc.writeMem(0xedce, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x3ecc, gbc.sp());
        EXPECT(0xedd0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xedce));
        EXPECT(0x43, gbc.readMem(0xedcf));
        // CB 43 038E
        gbc.setState(0x7d22, 0xb86e, 0x6810, 0x5e4b, 0x45d0, 0xae73, 0x0, 0x1);
        gbc.writeMem(0x7d22, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0xb86e, gbc.sp());
        EXPECT(0x7d24, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 43 038F
        gbc.setState(0x5c6f, 0xde8d, 0x7750, 0xefa0, 0xcd41, 0xf114, 0x0, 0x0);
        gbc.writeMem(0x5c6f, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0xde8d, gbc.sp());
        EXPECT(0x5c71, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 43 0391
        gbc.setState(0x7169, 0xd3d0, 0xd130, 0x5c76, 0x7511, 0x434b, 0x1, 0x1);
        gbc.writeMem(0x7169, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0xd3d0, gbc.sp());
        EXPECT(0x716b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 43 0392
        gbc.setState(0x5425, 0x463f, 0xdb90, 0x797, 0xa364, 0x272d, 0x0, 0x0);
        gbc.writeMem(0x5425, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x463f, gbc.sp());
        EXPECT(0x5427, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 43 0393
        gbc.setState(0x8ffe, 0xc79f, 0xdcf0, 0x994e, 0xc6f5, 0xe914, 0x1, 0x0);
        gbc.writeMem(0x8ffe, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0xc79f, gbc.sp());
        EXPECT(0x9000, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8ffe));
        EXPECT(0x43, gbc.readMem(0x8fff));
        // CB 43 0394
        gbc.setState(0x18d0, 0x9194, 0x1250, 0xf56a, 0xb88e, 0xaa74, 0x0, 0x1);
        gbc.writeMem(0x18d0, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x9194, gbc.sp());
        EXPECT(0x18d2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 43 0395
        gbc.setState(0x6147, 0xdf70, 0x28a0, 0x5d5c, 0xa204, 0x1aaa, 0x1, 0x0);
        gbc.writeMem(0x6147, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0xdf70, gbc.sp());
        EXPECT(0x6149, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 43 0396
        gbc.setState(0x6af6, 0xc971, 0x2530, 0xd7db, 0xfafe, 0xf77a, 0x0, 0x0);
        gbc.writeMem(0x6af6, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0xc971, gbc.sp());
        EXPECT(0x6af8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 43 0397
        gbc.setState(0xc004, 0xff9c, 0x88a0, 0xa0c7, 0x5dcc, 0xf5d1, 0x1, 0x1);
        gbc.writeMem(0xc004, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0xff9c, gbc.sp());
        EXPECT(0xc006, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc004));
        EXPECT(0x43, gbc.readMem(0xc005));
        // CB 43 0398
        gbc.setState(0x3405, 0xea0c, 0xf150, 0x1cea, 0xa118, 0x816a, 0x0, 0x0);
        gbc.writeMem(0x3405, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0xea0c, gbc.sp());
        EXPECT(0x3407, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 43 0399
        gbc.setState(0x4cc5, 0x18b3, 0x7e80, 0xbec5, 0x76ba, 0x4bcc, 0x0, 0x0);
        gbc.writeMem(0x4cc5, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x18b3, gbc.sp());
        EXPECT(0x4cc7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 43 039A
        gbc.setState(0xde85, 0xce9b, 0xd5a0, 0x29ee, 0xb70e, 0x84e8, 0x1, 0x1);
        gbc.writeMem(0xde85, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0xce9b, gbc.sp());
        EXPECT(0xde87, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xde85));
        EXPECT(0x43, gbc.readMem(0xde86));
        // CB 43 039B
        gbc.setState(0x1eb6, 0x96f6, 0xa3c0, 0x8f2, 0x77c8, 0x402b, 0x1, 0x1);
        gbc.writeMem(0x1eb6, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x96f6, gbc.sp());
        EXPECT(0x1eb8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 43 039C
        gbc.setState(0x2c5f, 0xa50d, 0xa670, 0x2ca1, 0x9abc, 0xfa72, 0x1, 0x1);
        gbc.writeMem(0x2c5f, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0xa50d, gbc.sp());
        EXPECT(0x2c61, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 43 039D
        gbc.setState(0xb302, 0xd8fa, 0xb9b0, 0x45a1, 0xd64c, 0x63b6, 0x0, 0x0);
        gbc.writeMem(0xb302, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0xd8fa, gbc.sp());
        EXPECT(0xb304, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb302));
        EXPECT(0x43, gbc.readMem(0xb303));
        // CB 43 039E
        gbc.setState(0x6df4, 0x4465, 0xbcb0, 0x6373, 0x18d6, 0x30e, 0x1, 0x0);
        gbc.writeMem(0x6df4, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x4465, gbc.sp());
        EXPECT(0x6df6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 43 039F
        gbc.setState(0x94ea, 0x2c7b, 0x31c0, 0xedb, 0x94bc, 0x769d, 0x1, 0x0);
        gbc.writeMem(0x94ea, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x2c7b, gbc.sp());
        EXPECT(0x94ec, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x94ea));
        EXPECT(0x43, gbc.readMem(0x94eb));
        // CB 43 03A0
        gbc.setState(0x7fd5, 0xae66, 0x3650, 0x5234, 0x518d, 0x726b, 0x0, 0x0);
        gbc.writeMem(0x7fd5, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0xae66, gbc.sp());
        EXPECT(0x7fd7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 43 03A1
        gbc.setState(0x670d, 0xe018, 0x8860, 0x31b4, 0x686c, 0xae94, 0x1, 0x0);
        gbc.writeMem(0x670d, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0xe018, gbc.sp());
        EXPECT(0x670f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 43 03A2
        gbc.setState(0x612a, 0x6162, 0xedc0, 0x9e7c, 0x6bdf, 0x5e0, 0x0, 0x0);
        gbc.writeMem(0x612a, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x6162, gbc.sp());
        EXPECT(0x612c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 43 03A3
        gbc.setState(0xe4b4, 0x191f, 0x9030, 0x7edf, 0x392d, 0x8cba, 0x1, 0x0);
        gbc.writeMem(0xe4b4, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0x191f, gbc.sp());
        EXPECT(0xe4b6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe4b4));
        EXPECT(0x43, gbc.readMem(0xe4b5));
        // CB 43 03A4
        gbc.setState(0xbd6, 0xf6f4, 0xcff0, 0x4b9e, 0x6d13, 0x92f2, 0x0, 0x1);
        gbc.writeMem(0xbd6, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0xf6f4, gbc.sp());
        EXPECT(0xbd8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 43 03A5
        gbc.setState(0xde68, 0x539b, 0x5900, 0xcbed, 0x2310, 0x5b53, 0x0, 0x0);
        gbc.writeMem(0xde68, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x539b, gbc.sp());
        EXPECT(0xde6a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xde68));
        EXPECT(0x43, gbc.readMem(0xde69));
        // CB 43 03A7
        gbc.setState(0x68, 0x8780, 0xb680, 0x1531, 0xf5ea, 0xb47f, 0x0, 0x1);
        gbc.writeMem(0x68, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x8780, gbc.sp());
        EXPECT(0x6a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 43 03A8
        gbc.setState(0xb357, 0xf652, 0x9ec0, 0x9055, 0xce77, 0x3ddd, 0x1, 0x0);
        gbc.writeMem(0xb357, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0xf652, gbc.sp());
        EXPECT(0xb359, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb357));
        EXPECT(0x43, gbc.readMem(0xb358));
        // CB 43 03A9
        gbc.setState(0xb8e9, 0xd2a5, 0x5e0, 0xb833, 0x1a49, 0xebba, 0x1, 0x1);
        gbc.writeMem(0xb8e9, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0xd2a5, gbc.sp());
        EXPECT(0xb8eb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb8e9));
        EXPECT(0x43, gbc.readMem(0xb8ea));
        // CB 43 03AA
        gbc.setState(0xa0f, 0xf587, 0x7950, 0x2d9, 0x10ae, 0xb8be, 0x0, 0x1);
        gbc.writeMem(0xa0f, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0xf587, gbc.sp());
        EXPECT(0xa11, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 43 03AB
        gbc.setState(0xcd2c, 0xae7a, 0xa70, 0xfbee, 0x705f, 0x6adf, 0x1, 0x1);
        gbc.writeMem(0xcd2c, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0xae7a, gbc.sp());
        EXPECT(0xcd2e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcd2c));
        EXPECT(0x43, gbc.readMem(0xcd2d));
        // CB 43 03AC
        gbc.setState(0xe21b, 0x3227, 0xb4d0, 0x3a38, 0xb31e, 0x52d7, 0x0, 0x0);
        gbc.writeMem(0xe21b, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0x3227, gbc.sp());
        EXPECT(0xe21d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe21b));
        EXPECT(0x43, gbc.readMem(0xe21c));
        // CB 43 03AD
        gbc.setState(0x1285, 0xff5e, 0x3930, 0x48a3, 0xcc45, 0x151e, 0x0, 0x0);
        gbc.writeMem(0x1285, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0xff5e, gbc.sp());
        EXPECT(0x1287, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 43 03AE
        gbc.setState(0x50db, 0xb9b2, 0x63a0, 0xcc0f, 0xd711, 0x31a0, 0x1, 0x1);
        gbc.writeMem(0x50db, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0xb9b2, gbc.sp());
        EXPECT(0x50dd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 43 03AF
        gbc.setState(0x830b, 0x4064, 0x5710, 0xa749, 0x91bf, 0xc09a, 0x1, 0x1);
        gbc.writeMem(0x830b, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x4064, gbc.sp());
        EXPECT(0x830d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x830b));
        EXPECT(0x43, gbc.readMem(0x830c));
        // CB 43 03B0
        gbc.setState(0x4892, 0xba6c, 0x3a60, 0xf715, 0x3cd0, 0x20d8, 0x1, 0x0);
        gbc.writeMem(0x4892, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0xba6c, gbc.sp());
        EXPECT(0x4894, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 43 03B1
        gbc.setState(0x2f09, 0xb423, 0x4070, 0x4fa5, 0xc7f8, 0xa09c, 0x0, 0x1);
        gbc.writeMem(0x2f09, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0xb423, gbc.sp());
        EXPECT(0x2f0b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 43 03B3
        gbc.setState(0xc453, 0x8692, 0x51b0, 0xcca6, 0x5312, 0x4996, 0x0, 0x0);
        gbc.writeMem(0xc453, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x8692, gbc.sp());
        EXPECT(0xc455, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc453));
        EXPECT(0x43, gbc.readMem(0xc454));
        // CB 43 03B4
        gbc.setState(0x422d, 0x7d06, 0xb40, 0x91de, 0xd090, 0x1b90, 0x1, 0x1);
        gbc.writeMem(0x422d, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x7d06, gbc.sp());
        EXPECT(0x422f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 43 03B5
        gbc.setState(0xa5e6, 0x67f8, 0xeae0, 0x4dc7, 0x345a, 0xa53b, 0x1, 0x1);
        gbc.writeMem(0xa5e6, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x67f8, gbc.sp());
        EXPECT(0xa5e8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa5e6));
        EXPECT(0x43, gbc.readMem(0xa5e7));
        // CB 43 03B6
        gbc.setState(0xa51c, 0xbd82, 0x1740, 0xb102, 0xca36, 0x8cea, 0x0, 0x0);
        gbc.writeMem(0xa51c, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0xbd82, gbc.sp());
        EXPECT(0xa51e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa51c));
        EXPECT(0x43, gbc.readMem(0xa51d));
        // CB 43 03B7
        gbc.setState(0xc790, 0x4331, 0xffc0, 0x5532, 0x2edc, 0x2a4, 0x0, 0x1);
        gbc.writeMem(0xc790, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x4331, gbc.sp());
        EXPECT(0xc792, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc790));
        EXPECT(0x43, gbc.readMem(0xc791));
        // CB 43 03B8
        gbc.setState(0x2f06, 0xbdaa, 0x8c60, 0x8a31, 0x9ba8, 0x6ccf, 0x1, 0x1);
        gbc.writeMem(0x2f06, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0xbdaa, gbc.sp());
        EXPECT(0x2f08, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 43 03B9
        gbc.setState(0x2d3c, 0x83fd, 0x3ef0, 0xc966, 0x231c, 0xd414, 0x0, 0x1);
        gbc.writeMem(0x2d3c, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x83fd, gbc.sp());
        EXPECT(0x2d3e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 43 03BA
        gbc.setState(0x729c, 0x5b5f, 0xf8e0, 0xd3ad, 0x8c8d, 0x28f8, 0x1, 0x1);
        gbc.writeMem(0x729c, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x5b5f, gbc.sp());
        EXPECT(0x729e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 43 03BB
        gbc.setState(0x4c59, 0x3415, 0xa20, 0x7b66, 0xc950, 0x101c, 0x1, 0x0);
        gbc.writeMem(0x4c59, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x3415, gbc.sp());
        EXPECT(0x4c5b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 43 03BC
        gbc.setState(0x24e7, 0x2bad, 0xa310, 0xb630, 0xcc7a, 0xe48a, 0x1, 0x0);
        gbc.writeMem(0x24e7, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x2bad, gbc.sp());
        EXPECT(0x24e9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 43 03BD
        gbc.setState(0x8961, 0xb53e, 0x5e00, 0xbfbb, 0xf3d5, 0x62a7, 0x0, 0x0);
        gbc.writeMem(0x8961, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0xb53e, gbc.sp());
        EXPECT(0x8963, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8961));
        EXPECT(0x43, gbc.readMem(0x8962));
        // CB 43 03BE
        gbc.setState(0xe64e, 0xf018, 0x1190, 0xf24a, 0x3e6f, 0x5953, 0x0, 0x1);
        gbc.writeMem(0xe64e, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0xf018, gbc.sp());
        EXPECT(0xe650, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe64e));
        EXPECT(0x43, gbc.readMem(0xe64f));
        // CB 43 03C0
        gbc.setState(0x3cf1, 0xa207, 0xccb0, 0x295e, 0x1332, 0xb502, 0x0, 0x1);
        gbc.writeMem(0x3cf1, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0xa207, gbc.sp());
        EXPECT(0x3cf3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 43 03C1
        gbc.setState(0x9ff9, 0x363d, 0x41c0, 0xb739, 0x986f, 0xfd2b, 0x0, 0x1);
        gbc.writeMem(0x9ff9, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x363d, gbc.sp());
        EXPECT(0x9ffb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9ff9));
        EXPECT(0x43, gbc.readMem(0x9ffa));
        // CB 43 03C2
        gbc.setState(0xeb6b, 0xb9b, 0xac40, 0x378f, 0x3ddf, 0xc167, 0x0, 0x1);
        gbc.writeMem(0xeb6b, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0xb9b, gbc.sp());
        EXPECT(0xeb6d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeb6b));
        EXPECT(0x43, gbc.readMem(0xeb6c));
        // CB 43 03C3
        gbc.setState(0x4496, 0xfd54, 0x8480, 0x2674, 0x9b84, 0x3b87, 0x1, 0x0);
        gbc.writeMem(0x4496, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0xfd54, gbc.sp());
        EXPECT(0x4498, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 43 03C4
        gbc.setState(0xdbe2, 0x280f, 0xde00, 0xe37d, 0xa53f, 0x3392, 0x0, 0x1);
        gbc.writeMem(0xdbe2, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x280f, gbc.sp());
        EXPECT(0xdbe4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdbe2));
        EXPECT(0x43, gbc.readMem(0xdbe3));
        // CB 43 03C5
        gbc.setState(0xd54f, 0x659, 0x4e20, 0x4254, 0x35a5, 0x7f81, 0x1, 0x1);
        gbc.writeMem(0xd54f, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x659, gbc.sp());
        EXPECT(0xd551, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd54f));
        EXPECT(0x43, gbc.readMem(0xd550));
        // CB 43 03C6
        gbc.setState(0x7294, 0xc602, 0x17d0, 0xde3f, 0x552f, 0xb530, 0x1, 0x1);
        gbc.writeMem(0x7294, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0xc602, gbc.sp());
        EXPECT(0x7296, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 43 03C7
        gbc.setState(0xcbb5, 0x2c42, 0x7fc0, 0xaf44, 0x5e50, 0xcb25, 0x0, 0x1);
        gbc.writeMem(0xcbb5, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x2c42, gbc.sp());
        EXPECT(0xcbb7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcbb5));
        EXPECT(0x43, gbc.readMem(0xcbb6));
        // CB 43 03C8
        gbc.setState(0x4f72, 0x2cdc, 0x1f0, 0xd1f1, 0x8a6d, 0x70e4, 0x1, 0x1);
        gbc.writeMem(0x4f72, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x2cdc, gbc.sp());
        EXPECT(0x4f74, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 43 03C9
        gbc.setState(0x299f, 0x9d9a, 0x6b40, 0x11dc, 0xf0b2, 0xb2d8, 0x1, 0x0);
        gbc.writeMem(0x299f, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x9d9a, gbc.sp());
        EXPECT(0x29a1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 43 03CA
        gbc.setState(0x8918, 0xd9c9, 0x9a00, 0xe795, 0xf478, 0xd596, 0x0, 0x0);
        gbc.writeMem(0x8918, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0xd9c9, gbc.sp());
        EXPECT(0x891a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8918));
        EXPECT(0x43, gbc.readMem(0x8919));
        // CB 43 03CB
        gbc.setState(0xdc19, 0x4b2e, 0x8f20, 0x5bd7, 0xe8da, 0xcf50, 0x1, 0x0);
        gbc.writeMem(0xdc19, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x4b2e, gbc.sp());
        EXPECT(0xdc1b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdc19));
        EXPECT(0x43, gbc.readMem(0xdc1a));
        // CB 43 03CC
        gbc.setState(0x2df9, 0xfeee, 0x9fc0, 0x60b, 0xff2b, 0x1b51, 0x1, 0x1);
        gbc.writeMem(0x2df9, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0xfeee, gbc.sp());
        EXPECT(0x2dfb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 43 03CD
        gbc.setState(0xc243, 0x1f6d, 0xf9a0, 0xbc1, 0x281f, 0x7c51, 0x0, 0x0);
        gbc.writeMem(0xc243, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x1f6d, gbc.sp());
        EXPECT(0xc245, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc243));
        EXPECT(0x43, gbc.readMem(0xc244));
        // CB 43 03CE
        gbc.setState(0x5e28, 0x1d92, 0xbb0, 0xe367, 0xe537, 0x7ef4, 0x0, 0x1);
        gbc.writeMem(0x5e28, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x1d92, gbc.sp());
        EXPECT(0x5e2a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 43 03CF
        gbc.setState(0x90b6, 0x1e6a, 0xb2e0, 0x2a7c, 0x9b57, 0x2580, 0x1, 0x1);
        gbc.writeMem(0x90b6, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x1e6a, gbc.sp());
        EXPECT(0x90b8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x90b6));
        EXPECT(0x43, gbc.readMem(0x90b7));
        // CB 43 03D0
        gbc.setState(0x2873, 0xc8bf, 0x53e0, 0x7237, 0x1572, 0x782e, 0x0, 0x0);
        gbc.writeMem(0x2873, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0xc8bf, gbc.sp());
        EXPECT(0x2875, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 43 03D1
        gbc.setState(0x910a, 0x401, 0xf2c0, 0x29ed, 0x8ed1, 0x9195, 0x0, 0x0);
        gbc.writeMem(0x910a, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x401, gbc.sp());
        EXPECT(0x910c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x910a));
        EXPECT(0x43, gbc.readMem(0x910b));
        // CB 43 03D2
        gbc.setState(0xb0e1, 0x2f9a, 0x87e0, 0x595a, 0x5a73, 0x7fb6, 0x1, 0x0);
        gbc.writeMem(0xb0e1, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x2f9a, gbc.sp());
        EXPECT(0xb0e3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb0e1));
        EXPECT(0x43, gbc.readMem(0xb0e2));
        // CB 43 03D3
        gbc.setState(0x1ae4, 0x56ac, 0x1950, 0xb581, 0xac5b, 0x4f28, 0x1, 0x1);
        gbc.writeMem(0x1ae4, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x56ac, gbc.sp());
        EXPECT(0x1ae6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 43 03D4
        gbc.setState(0x20e2, 0x8732, 0xf680, 0xd4f7, 0xb1e, 0x35bc, 0x1, 0x1);
        gbc.writeMem(0x20e2, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x8732, gbc.sp());
        EXPECT(0x20e4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 43 03D6
        gbc.setState(0x4d45, 0xf136, 0x5110, 0x1948, 0xeb0, 0xa7f9, 0x1, 0x0);
        gbc.writeMem(0x4d45, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0xf136, gbc.sp());
        EXPECT(0x4d47, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 43 03D7
        gbc.setState(0x9e0b, 0x1e7, 0x1790, 0x1ef7, 0xc29f, 0x7922, 0x1, 0x1);
        gbc.writeMem(0x9e0b, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x1e7, gbc.sp());
        EXPECT(0x9e0d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9e0b));
        EXPECT(0x43, gbc.readMem(0x9e0c));
        // CB 43 03D8
        gbc.setState(0xa9cb, 0x72c0, 0x51d0, 0xbf7a, 0x1fc2, 0xc2aa, 0x0, 0x1);
        gbc.writeMem(0xa9cb, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x72c0, gbc.sp());
        EXPECT(0xa9cd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa9cb));
        EXPECT(0x43, gbc.readMem(0xa9cc));
        // CB 43 03D9
        gbc.setState(0x62f, 0xbfa2, 0xc300, 0xeb89, 0xc538, 0x36ee, 0x1, 0x0);
        gbc.writeMem(0x62f, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0xbfa2, gbc.sp());
        EXPECT(0x631, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 43 03DA
        gbc.setState(0xa884, 0x2b8a, 0x94e0, 0x631f, 0xb363, 0x756, 0x0, 0x1);
        gbc.writeMem(0xa884, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0x2b8a, gbc.sp());
        EXPECT(0xa886, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa884));
        EXPECT(0x43, gbc.readMem(0xa885));
        // CB 43 03DB
        gbc.setState(0x6267, 0xace7, 0x7320, 0xd0c6, 0xc629, 0x824a, 0x1, 0x1);
        gbc.writeMem(0x6267, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0xace7, gbc.sp());
        EXPECT(0x6269, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 43 03DC
        gbc.setState(0xa9ef, 0x925c, 0x110, 0xde2e, 0x9a80, 0x4d02, 0x0, 0x1);
        gbc.writeMem(0xa9ef, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x925c, gbc.sp());
        EXPECT(0xa9f1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa9ef));
        EXPECT(0x43, gbc.readMem(0xa9f0));
        // CB 43 03DD
        gbc.setState(0xd3e3, 0x934a, 0x20d0, 0x4a94, 0x90ee, 0x2766, 0x1, 0x0);
        gbc.writeMem(0xd3e3, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x934a, gbc.sp());
        EXPECT(0xd3e5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd3e3));
        EXPECT(0x43, gbc.readMem(0xd3e4));
        // CB 43 03DF
        gbc.setState(0x5b1, 0xe4b3, 0xdbb0, 0xbcf7, 0xc66c, 0x75fa, 0x1, 0x1);
        gbc.writeMem(0x5b1, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0xe4b3, gbc.sp());
        EXPECT(0x5b3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 43 03E1
        gbc.setState(0x1117, 0x78af, 0xaa70, 0x65b2, 0xba50, 0x8ded, 0x1, 0x1);
        gbc.writeMem(0x1117, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x78af, gbc.sp());
        EXPECT(0x1119, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 43 03E3
        gbc.setState(0xe3bc, 0x1870, 0x3960, 0x55ad, 0xe2a7, 0x83a7, 0x0, 0x1);
        gbc.writeMem(0xe3bc, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x1870, gbc.sp());
        EXPECT(0xe3be, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe3bc));
        EXPECT(0x43, gbc.readMem(0xe3bd));
        // CB 43 03E4
        gbc.setState(0x15b0, 0xaebe, 0xc4f0, 0x1255, 0x52cc, 0xb15, 0x1, 0x0);
        gbc.writeMem(0x15b0, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0xaebe, gbc.sp());
        EXPECT(0x15b2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 43 03E6
        gbc.setState(0x36, 0x81a0, 0x800, 0x86a4, 0x7c70, 0x904c, 0x1, 0x1);
        gbc.writeMem(0x36, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x81a0, gbc.sp());
        EXPECT(0x38, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 43 03E7
        gbc.setState(0xea4f, 0x861b, 0xb2c0, 0x6989, 0x662a, 0xadf1, 0x0, 0x0);
        gbc.writeMem(0xea4f, { 0xcb, 0x43 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x861b, gbc.sp());
        EXPECT(0xea51, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xea4f));
        EXPECT(0x43, gbc.readMem(0xea50));
    }
