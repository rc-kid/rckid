    TEST(gbcemu, opcode_cb_c0) {
        GBCEmu gbc{"", nullptr};
        uint8_t cartridge[0x8000];
        cartridge[0x149] = 0x02; // 8kb external RAM
        gbc.loadCartridge(new FlashGamePak(cartridge));
        // CB C0 0000
        gbc.setState(0x950d, 0xe16b, 0x1120, 0x3283, 0x7d1a, 0x338c, 0x0, 0x1);
        gbc.writeMem(0x950d, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0xe16b, gbc.sp());
        EXPECT(0x950f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x950d));
        EXPECT(0xc0, gbc.readMem(0x950e));
        // CB C0 0001
        gbc.setState(0xa622, 0x7cc7, 0x3dd0, 0xe3f1, 0x916d, 0x99d4, 0x0, 0x1);
        gbc.writeMem(0xa622, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x7cc7, gbc.sp());
        EXPECT(0xa624, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa622));
        EXPECT(0xc0, gbc.readMem(0xa623));
        // CB C0 0002
        gbc.setState(0xd5c, 0xa28, 0xa950, 0x92ec, 0x6561, 0xd1de, 0x0, 0x1);
        gbc.writeMem(0xd5c, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0xa28, gbc.sp());
        EXPECT(0xd5e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C0 0003
        gbc.setState(0x508b, 0x1a21, 0x8c10, 0x9617, 0x67f6, 0x4935, 0x1, 0x1);
        gbc.writeMem(0x508b, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x1a21, gbc.sp());
        EXPECT(0x508d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C0 0004
        gbc.setState(0xb7d8, 0x8ee1, 0x9d30, 0xdf26, 0x1b65, 0x1829, 0x1, 0x0);
        gbc.writeMem(0xb7d8, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x8ee1, gbc.sp());
        EXPECT(0xb7da, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb7d8));
        EXPECT(0xc0, gbc.readMem(0xb7d9));
        // CB C0 0006
        gbc.setState(0xa356, 0x4af8, 0xbff0, 0xeeb6, 0xf594, 0xafdc, 0x0, 0x0);
        gbc.writeMem(0xa356, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x4af8, gbc.sp());
        EXPECT(0xa358, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa356));
        EXPECT(0xc0, gbc.readMem(0xa357));
        // CB C0 0007
        gbc.setState(0x40c5, 0x1bf3, 0xa4b0, 0xec0d, 0x4f0c, 0xb834, 0x1, 0x1);
        gbc.writeMem(0x40c5, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x1bf3, gbc.sp());
        EXPECT(0x40c7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C0 0008
        gbc.setState(0xdde5, 0xde3e, 0x8290, 0x1e3a, 0xcba0, 0x6851, 0x1, 0x0);
        gbc.writeMem(0xdde5, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0xde3e, gbc.sp());
        EXPECT(0xdde7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdde5));
        EXPECT(0xc0, gbc.readMem(0xdde6));
        // CB C0 0009
        gbc.setState(0x7083, 0x4169, 0x65d0, 0xdf40, 0x5dfd, 0x22cc, 0x0, 0x1);
        gbc.writeMem(0x7083, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x4169, gbc.sp());
        EXPECT(0x7085, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C0 000A
        gbc.setState(0x759e, 0x5179, 0xc870, 0x56ee, 0x97e9, 0xcb94, 0x1, 0x0);
        gbc.writeMem(0x759e, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x5179, gbc.sp());
        EXPECT(0x75a0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C0 000B
        gbc.setState(0x4a6a, 0x164b, 0xd8a0, 0xeb68, 0x6371, 0x18b7, 0x0, 0x0);
        gbc.writeMem(0x4a6a, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x164b, gbc.sp());
        EXPECT(0x4a6c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C0 000C
        gbc.setState(0x3a27, 0x4945, 0x940, 0xb9a5, 0xa4b4, 0x49cd, 0x1, 0x0);
        gbc.writeMem(0x3a27, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x4945, gbc.sp());
        EXPECT(0x3a29, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C0 000D
        gbc.setState(0x994b, 0xbd6d, 0x97f0, 0xf37f, 0x9caf, 0x2dea, 0x0, 0x1);
        gbc.writeMem(0x994b, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0xbd6d, gbc.sp());
        EXPECT(0x994d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x994b));
        EXPECT(0xc0, gbc.readMem(0x994c));
        // CB C0 000E
        gbc.setState(0x15c1, 0x6bdc, 0x2b20, 0xa607, 0xff18, 0x1da0, 0x0, 0x0);
        gbc.writeMem(0x15c1, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x6bdc, gbc.sp());
        EXPECT(0x15c3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C0 000F
        gbc.setState(0xaf33, 0xb242, 0x30c0, 0x4a8a, 0xce19, 0xfff2, 0x0, 0x0);
        gbc.writeMem(0xaf33, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0xb242, gbc.sp());
        EXPECT(0xaf35, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaf33));
        EXPECT(0xc0, gbc.readMem(0xaf34));
        // CB C0 0010
        gbc.setState(0x3996, 0x5bc6, 0x5560, 0xa967, 0x339, 0x1427, 0x0, 0x0);
        gbc.writeMem(0x3996, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x5bc6, gbc.sp());
        EXPECT(0x3998, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C0 0011
        gbc.setState(0x725f, 0xc29d, 0xbac0, 0xc3b5, 0x51ab, 0xe8c, 0x0, 0x1);
        gbc.writeMem(0x725f, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0xc29d, gbc.sp());
        EXPECT(0x7261, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C0 0012
        gbc.setState(0xa732, 0x7ee8, 0x3550, 0x4ba8, 0x1dca, 0x40e8, 0x1, 0x1);
        gbc.writeMem(0xa732, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x7ee8, gbc.sp());
        EXPECT(0xa734, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa732));
        EXPECT(0xc0, gbc.readMem(0xa733));
        // CB C0 0013
        gbc.setState(0xd5b8, 0x4aa3, 0xb270, 0xcc40, 0x3d28, 0x7136, 0x0, 0x0);
        gbc.writeMem(0xd5b8, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x4aa3, gbc.sp());
        EXPECT(0xd5ba, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd5b8));
        EXPECT(0xc0, gbc.readMem(0xd5b9));
        // CB C0 0014
        gbc.setState(0xa692, 0x1d14, 0x5bc0, 0x858d, 0xbf45, 0x23e6, 0x0, 0x0);
        gbc.writeMem(0xa692, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x1d14, gbc.sp());
        EXPECT(0xa694, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa692));
        EXPECT(0xc0, gbc.readMem(0xa693));
        // CB C0 0016
        gbc.setState(0x22f1, 0xf48a, 0x7f0, 0x61d4, 0xc0e5, 0xa956, 0x0, 0x0);
        gbc.writeMem(0x22f1, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0xf48a, gbc.sp());
        EXPECT(0x22f3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C0 0017
        gbc.setState(0x3b2b, 0xa4bc, 0xd390, 0xf1bd, 0xe9f8, 0x28ff, 0x0, 0x1);
        gbc.writeMem(0x3b2b, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0xa4bc, gbc.sp());
        EXPECT(0x3b2d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C0 0018
        gbc.setState(0x8410, 0xcf7e, 0x4cf0, 0xf008, 0x8926, 0x8c2, 0x1, 0x0);
        gbc.writeMem(0x8410, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0xcf7e, gbc.sp());
        EXPECT(0x8412, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8410));
        EXPECT(0xc0, gbc.readMem(0x8411));
        // CB C0 0019
        gbc.setState(0x4a35, 0x98b1, 0xeca0, 0xdfd2, 0x57f3, 0x17a7, 0x1, 0x1);
        gbc.writeMem(0x4a35, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x98b1, gbc.sp());
        EXPECT(0x4a37, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C0 001A
        gbc.setState(0x2fe, 0x76b8, 0x2590, 0xdab1, 0xca23, 0x3f5b, 0x0, 0x1);
        gbc.writeMem(0x2fe, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x76b8, gbc.sp());
        EXPECT(0x300, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C0 001B
        gbc.setState(0x9b3f, 0x261c, 0x5310, 0x2339, 0xa419, 0x1524, 0x0, 0x1);
        gbc.writeMem(0x9b3f, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x261c, gbc.sp());
        EXPECT(0x9b41, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9b3f));
        EXPECT(0xc0, gbc.readMem(0x9b40));
        // CB C0 001C
        gbc.setState(0x5fce, 0xd68, 0x9df0, 0xb1ab, 0xc4ff, 0xe27d, 0x0, 0x1);
        gbc.writeMem(0x5fce, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0xd68, gbc.sp());
        EXPECT(0x5fd0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C0 001D
        gbc.setState(0xe6c8, 0x2699, 0x48e0, 0x27d7, 0xb171, 0x7142, 0x0, 0x0);
        gbc.writeMem(0xe6c8, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x2699, gbc.sp());
        EXPECT(0xe6ca, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe6c8));
        EXPECT(0xc0, gbc.readMem(0xe6c9));
        // CB C0 001E
        gbc.setState(0x22b8, 0x4498, 0x56f0, 0x77d7, 0xc2f6, 0x5a34, 0x1, 0x0);
        gbc.writeMem(0x22b8, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x4498, gbc.sp());
        EXPECT(0x22ba, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C0 001F
        gbc.setState(0x520b, 0x15f8, 0xce10, 0x4be4, 0x2c86, 0x5fcc, 0x1, 0x0);
        gbc.writeMem(0x520b, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x15f8, gbc.sp());
        EXPECT(0x520d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C0 0020
        gbc.setState(0x9b91, 0x4281, 0xb9f0, 0x63ef, 0xcea8, 0x9bcd, 0x0, 0x1);
        gbc.writeMem(0x9b91, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x4281, gbc.sp());
        EXPECT(0x9b93, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9b91));
        EXPECT(0xc0, gbc.readMem(0x9b92));
        // CB C0 0021
        gbc.setState(0x9f90, 0xb19b, 0xe8d0, 0xfc4f, 0xc5c6, 0x1698, 0x1, 0x0);
        gbc.writeMem(0x9f90, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0xb19b, gbc.sp());
        EXPECT(0x9f92, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9f90));
        EXPECT(0xc0, gbc.readMem(0x9f91));
        // CB C0 0022
        gbc.setState(0x9c2e, 0xfcad, 0x8a00, 0xae6e, 0x2b8b, 0xa5aa, 0x0, 0x0);
        gbc.writeMem(0x9c2e, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0xfcad, gbc.sp());
        EXPECT(0x9c30, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9c2e));
        EXPECT(0xc0, gbc.readMem(0x9c2f));
        // CB C0 0023
        gbc.setState(0x7306, 0x75f6, 0xb510, 0xed, 0xdc4e, 0x6d2c, 0x0, 0x0);
        gbc.writeMem(0x7306, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x75f6, gbc.sp());
        EXPECT(0x7308, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C0 0024
        gbc.setState(0x5fee, 0xa594, 0xd2e0, 0xc4a5, 0x21ea, 0x32c8, 0x1, 0x1);
        gbc.writeMem(0x5fee, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0xa594, gbc.sp());
        EXPECT(0x5ff0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C0 0025
        gbc.setState(0xc43a, 0xea76, 0xf2e0, 0xb4c, 0x8735, 0xe0c9, 0x1, 0x0);
        gbc.writeMem(0xc43a, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0xea76, gbc.sp());
        EXPECT(0xc43c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc43a));
        EXPECT(0xc0, gbc.readMem(0xc43b));
        // CB C0 0026
        gbc.setState(0x534d, 0x17c7, 0x4c70, 0xddde, 0x268c, 0xf12b, 0x0, 0x0);
        gbc.writeMem(0x534d, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x17c7, gbc.sp());
        EXPECT(0x534f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C0 0027
        gbc.setState(0x8802, 0x2287, 0xc00, 0xe0d8, 0xa8fb, 0x2a3d, 0x1, 0x0);
        gbc.writeMem(0x8802, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x2287, gbc.sp());
        EXPECT(0x8804, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8802));
        EXPECT(0xc0, gbc.readMem(0x8803));
        // CB C0 0028
        gbc.setState(0x532f, 0x4e40, 0x9e70, 0x8a45, 0x175d, 0x8247, 0x0, 0x0);
        gbc.writeMem(0x532f, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x4e40, gbc.sp());
        EXPECT(0x5331, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C0 002A
        gbc.setState(0x2967, 0xed58, 0x2040, 0x7382, 0xa399, 0xd806, 0x0, 0x1);
        gbc.writeMem(0x2967, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0xed58, gbc.sp());
        EXPECT(0x2969, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C0 002B
        gbc.setState(0xdd49, 0x1e9b, 0x6ed0, 0x31f7, 0x3ae3, 0x718d, 0x0, 0x0);
        gbc.writeMem(0xdd49, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x1e9b, gbc.sp());
        EXPECT(0xdd4b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdd49));
        EXPECT(0xc0, gbc.readMem(0xdd4a));
        // CB C0 002C
        gbc.setState(0x6d14, 0xf530, 0xf810, 0xdfc0, 0x1bfa, 0xdddd, 0x0, 0x0);
        gbc.writeMem(0x6d14, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0xf530, gbc.sp());
        EXPECT(0x6d16, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C0 002D
        gbc.setState(0x679, 0xdfa1, 0x4a60, 0xbf40, 0xcf76, 0xd71b, 0x1, 0x0);
        gbc.writeMem(0x679, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0xdfa1, gbc.sp());
        EXPECT(0x67b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C0 002E
        gbc.setState(0x74f8, 0xbc15, 0x72a0, 0x2ed0, 0x7747, 0x4eba, 0x1, 0x0);
        gbc.writeMem(0x74f8, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0xbc15, gbc.sp());
        EXPECT(0x74fa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C0 002F
        gbc.setState(0xd4af, 0x9f3, 0xf890, 0x7fbb, 0x4d2d, 0xa15f, 0x0, 0x1);
        gbc.writeMem(0xd4af, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x9f3, gbc.sp());
        EXPECT(0xd4b1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd4af));
        EXPECT(0xc0, gbc.readMem(0xd4b0));
        // CB C0 0030
        gbc.setState(0x49ee, 0x3904, 0x8d80, 0x8874, 0x8805, 0xd6fb, 0x1, 0x1);
        gbc.writeMem(0x49ee, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x3904, gbc.sp());
        EXPECT(0x49f0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C0 0031
        gbc.setState(0x5335, 0x4e07, 0xf80, 0xf293, 0xfd5a, 0x9f23, 0x0, 0x1);
        gbc.writeMem(0x5335, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x4e07, gbc.sp());
        EXPECT(0x5337, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C0 0032
        gbc.setState(0x6eb2, 0x49fb, 0x8310, 0x5ca9, 0x3b78, 0x8ea9, 0x1, 0x1);
        gbc.writeMem(0x6eb2, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x49fb, gbc.sp());
        EXPECT(0x6eb4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C0 0033
        gbc.setState(0x4876, 0x68de, 0xb530, 0xd8a, 0xe85e, 0x2f5e, 0x0, 0x0);
        gbc.writeMem(0x4876, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x68de, gbc.sp());
        EXPECT(0x4878, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C0 0034
        gbc.setState(0xea1a, 0x57e2, 0xbe40, 0x6eb, 0x888d, 0x8b28, 0x0, 0x1);
        gbc.writeMem(0xea1a, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x57e2, gbc.sp());
        EXPECT(0xea1c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xea1a));
        EXPECT(0xc0, gbc.readMem(0xea1b));
        // CB C0 0035
        gbc.setState(0x7a02, 0x2424, 0x4350, 0x9e77, 0xadce, 0x7063, 0x1, 0x1);
        gbc.writeMem(0x7a02, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x2424, gbc.sp());
        EXPECT(0x7a04, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C0 0036
        gbc.setState(0x9baa, 0x2232, 0xf440, 0x1db8, 0xb7f9, 0x5dad, 0x1, 0x1);
        gbc.writeMem(0x9baa, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x2232, gbc.sp());
        EXPECT(0x9bac, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9baa));
        EXPECT(0xc0, gbc.readMem(0x9bab));
        // CB C0 0037
        gbc.setState(0x4ed4, 0xb1b6, 0xec30, 0xb9d5, 0xcb70, 0x7e2d, 0x0, 0x1);
        gbc.writeMem(0x4ed4, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0xb1b6, gbc.sp());
        EXPECT(0x4ed6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C0 0038
        gbc.setState(0x5ac7, 0xefe9, 0xb30, 0x1466, 0x7e1c, 0x6b90, 0x0, 0x0);
        gbc.writeMem(0x5ac7, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0xefe9, gbc.sp());
        EXPECT(0x5ac9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C0 003A
        gbc.setState(0xe0ef, 0x234d, 0xb890, 0xc556, 0xee1b, 0xb49d, 0x0, 0x1);
        gbc.writeMem(0xe0ef, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x234d, gbc.sp());
        EXPECT(0xe0f1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe0ef));
        EXPECT(0xc0, gbc.readMem(0xe0f0));
        // CB C0 003B
        gbc.setState(0x6304, 0x249f, 0xeac0, 0x3c52, 0x5169, 0x70d0, 0x0, 0x0);
        gbc.writeMem(0x6304, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x249f, gbc.sp());
        EXPECT(0x6306, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C0 003C
        gbc.setState(0x5ca4, 0xc1ae, 0xd760, 0xae51, 0xe546, 0x2193, 0x1, 0x0);
        gbc.writeMem(0x5ca4, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0xc1ae, gbc.sp());
        EXPECT(0x5ca6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C0 003D
        gbc.setState(0xa02b, 0x64c5, 0x8b10, 0xf5f3, 0x7d01, 0x6ce1, 0x0, 0x1);
        gbc.writeMem(0xa02b, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0x64c5, gbc.sp());
        EXPECT(0xa02d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa02b));
        EXPECT(0xc0, gbc.readMem(0xa02c));
        // CB C0 003E
        gbc.setState(0x4978, 0x4d02, 0xbf80, 0x2d75, 0xa8f7, 0xefaa, 0x0, 0x0);
        gbc.writeMem(0x4978, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x4d02, gbc.sp());
        EXPECT(0x497a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C0 0040
        gbc.setState(0xd27e, 0x67c5, 0x3f80, 0x76b7, 0x458c, 0x26af, 0x1, 0x0);
        gbc.writeMem(0xd27e, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x67c5, gbc.sp());
        EXPECT(0xd280, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd27e));
        EXPECT(0xc0, gbc.readMem(0xd27f));
        // CB C0 0041
        gbc.setState(0x717b, 0xf818, 0x2e70, 0x142d, 0xc20f, 0xaf93, 0x1, 0x0);
        gbc.writeMem(0x717b, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0xf818, gbc.sp());
        EXPECT(0x717d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C0 0042
        gbc.setState(0x53e5, 0x7c3d, 0x8410, 0x4deb, 0x36e6, 0x9ed2, 0x1, 0x0);
        gbc.writeMem(0x53e5, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x7c3d, gbc.sp());
        EXPECT(0x53e7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C0 0043
        gbc.setState(0xc4b6, 0xfec5, 0x4cb0, 0x9c51, 0xfd93, 0x8222, 0x1, 0x0);
        gbc.writeMem(0xc4b6, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0xfec5, gbc.sp());
        EXPECT(0xc4b8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc4b6));
        EXPECT(0xc0, gbc.readMem(0xc4b7));
        // CB C0 0044
        gbc.setState(0xddc8, 0x4f83, 0xc90, 0xafb1, 0x8026, 0x319, 0x1, 0x1);
        gbc.writeMem(0xddc8, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x4f83, gbc.sp());
        EXPECT(0xddca, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xddc8));
        EXPECT(0xc0, gbc.readMem(0xddc9));
        // CB C0 0045
        gbc.setState(0x928a, 0x7885, 0xb680, 0xbfb0, 0x75b, 0xd451, 0x0, 0x0);
        gbc.writeMem(0x928a, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x7885, gbc.sp());
        EXPECT(0x928c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x928a));
        EXPECT(0xc0, gbc.readMem(0x928b));
        // CB C0 0046
        gbc.setState(0x38b, 0x7622, 0x51a0, 0xefc1, 0x910, 0x5594, 0x1, 0x0);
        gbc.writeMem(0x38b, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x7622, gbc.sp());
        EXPECT(0x38d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C0 0047
        gbc.setState(0x29a5, 0x71da, 0xee70, 0xb668, 0x9a82, 0xdab5, 0x1, 0x0);
        gbc.writeMem(0x29a5, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x71da, gbc.sp());
        EXPECT(0x29a7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C0 0048
        gbc.setState(0x340f, 0xac0, 0x7cb0, 0x1c84, 0x883b, 0x569e, 0x1, 0x1);
        gbc.writeMem(0x340f, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0xac0, gbc.sp());
        EXPECT(0x3411, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C0 0049
        gbc.setState(0xdde2, 0xa6e2, 0xf90, 0xfc9b, 0xa09c, 0x43db, 0x1, 0x1);
        gbc.writeMem(0xdde2, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0xa6e2, gbc.sp());
        EXPECT(0xdde4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdde2));
        EXPECT(0xc0, gbc.readMem(0xdde3));
        // CB C0 004A
        gbc.setState(0x5bc3, 0x4e68, 0x900, 0x5de5, 0xf931, 0xd031, 0x1, 0x0);
        gbc.writeMem(0x5bc3, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x4e68, gbc.sp());
        EXPECT(0x5bc5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C0 004D
        gbc.setState(0xba3a, 0xfc3f, 0x8780, 0x477, 0x6b23, 0xebfa, 0x0, 0x0);
        gbc.writeMem(0xba3a, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0xfc3f, gbc.sp());
        EXPECT(0xba3c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xba3a));
        EXPECT(0xc0, gbc.readMem(0xba3b));
        // CB C0 004E
        gbc.setState(0x1df6, 0xb391, 0xa920, 0x4c49, 0x5b51, 0xef4d, 0x1, 0x0);
        gbc.writeMem(0x1df6, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0xb391, gbc.sp());
        EXPECT(0x1df8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C0 004F
        gbc.setState(0xc57a, 0xec84, 0xd8c0, 0x8b85, 0xa370, 0xcbc6, 0x0, 0x1);
        gbc.writeMem(0xc57a, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0xec84, gbc.sp());
        EXPECT(0xc57c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc57a));
        EXPECT(0xc0, gbc.readMem(0xc57b));
        // CB C0 0051
        gbc.setState(0xe7d5, 0x2b20, 0xe3b0, 0xffc9, 0xefdd, 0xfd07, 0x0, 0x1);
        gbc.writeMem(0xe7d5, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x2b20, gbc.sp());
        EXPECT(0xe7d7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe7d5));
        EXPECT(0xc0, gbc.readMem(0xe7d6));
        // CB C0 0052
        gbc.setState(0xe55d, 0x281a, 0x9830, 0x6ece, 0xcb70, 0x7fba, 0x1, 0x0);
        gbc.writeMem(0xe55d, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0x281a, gbc.sp());
        EXPECT(0xe55f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe55d));
        EXPECT(0xc0, gbc.readMem(0xe55e));
        // CB C0 0053
        gbc.setState(0xa628, 0x3ccf, 0x8290, 0x5517, 0xf642, 0xee22, 0x0, 0x1);
        gbc.writeMem(0xa628, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x3ccf, gbc.sp());
        EXPECT(0xa62a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa628));
        EXPECT(0xc0, gbc.readMem(0xa629));
        // CB C0 0054
        gbc.setState(0x8507, 0xee55, 0x6ec0, 0x76d6, 0x2c90, 0x18be, 0x1, 0x1);
        gbc.writeMem(0x8507, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0xee55, gbc.sp());
        EXPECT(0x8509, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8507));
        EXPECT(0xc0, gbc.readMem(0x8508));
        // CB C0 0055
        gbc.setState(0x167a, 0xbb78, 0x8110, 0x3ef0, 0x5b0f, 0x35d1, 0x1, 0x0);
        gbc.writeMem(0x167a, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0xbb78, gbc.sp());
        EXPECT(0x167c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C0 0056
        gbc.setState(0x901a, 0x8703, 0xc460, 0x7b86, 0x366b, 0xc02c, 0x0, 0x1);
        gbc.writeMem(0x901a, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x8703, gbc.sp());
        EXPECT(0x901c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x901a));
        EXPECT(0xc0, gbc.readMem(0x901b));
        // CB C0 0057
        gbc.setState(0x95ba, 0xd672, 0xf740, 0xe588, 0xc975, 0x17ea, 0x0, 0x1);
        gbc.writeMem(0x95ba, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0xd672, gbc.sp());
        EXPECT(0x95bc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x95ba));
        EXPECT(0xc0, gbc.readMem(0x95bb));
        // CB C0 0058
        gbc.setState(0xa836, 0x3177, 0xdea0, 0xa22a, 0x1f45, 0xa6e6, 0x0, 0x0);
        gbc.writeMem(0xa836, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x3177, gbc.sp());
        EXPECT(0xa838, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa836));
        EXPECT(0xc0, gbc.readMem(0xa837));
        // CB C0 0059
        gbc.setState(0x250c, 0x3178, 0x410, 0x78c9, 0xaa13, 0x9300, 0x1, 0x0);
        gbc.writeMem(0x250c, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x3178, gbc.sp());
        EXPECT(0x250e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C0 005A
        gbc.setState(0xeac6, 0x9d57, 0xf690, 0xe004, 0xf8ef, 0x888f, 0x0, 0x0);
        gbc.writeMem(0xeac6, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x9d57, gbc.sp());
        EXPECT(0xeac8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeac6));
        EXPECT(0xc0, gbc.readMem(0xeac7));
        // CB C0 005B
        gbc.setState(0xbf37, 0xbb96, 0x70c0, 0xd51b, 0xbdfd, 0x6826, 0x1, 0x1);
        gbc.writeMem(0xbf37, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0xbb96, gbc.sp());
        EXPECT(0xbf39, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbf37));
        EXPECT(0xc0, gbc.readMem(0xbf38));
        // CB C0 005C
        gbc.setState(0x33d9, 0x12ad, 0x4670, 0x1a3a, 0xec57, 0x25d1, 0x0, 0x1);
        gbc.writeMem(0x33d9, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x12ad, gbc.sp());
        EXPECT(0x33db, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C0 005D
        gbc.setState(0xb1, 0xe7f6, 0x950, 0x671a, 0x1700, 0x97ab, 0x1, 0x0);
        gbc.writeMem(0xb1, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0xe7f6, gbc.sp());
        EXPECT(0xb3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C0 005E
        gbc.setState(0x170d, 0xf3d4, 0xaaf0, 0xdf77, 0xee9e, 0x3604, 0x1, 0x1);
        gbc.writeMem(0x170d, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0xf3d4, gbc.sp());
        EXPECT(0x170f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C0 005F
        gbc.setState(0xd69d, 0xb34f, 0x4c60, 0xc615, 0x37fb, 0x60cd, 0x1, 0x1);
        gbc.writeMem(0xd69d, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0xb34f, gbc.sp());
        EXPECT(0xd69f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd69d));
        EXPECT(0xc0, gbc.readMem(0xd69e));
        // CB C0 0060
        gbc.setState(0x9206, 0xa5f6, 0x6340, 0x3ee4, 0xd566, 0xd871, 0x0, 0x1);
        gbc.writeMem(0x9206, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0xa5f6, gbc.sp());
        EXPECT(0x9208, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9206));
        EXPECT(0xc0, gbc.readMem(0x9207));
        // CB C0 0062
        gbc.setState(0xe6a4, 0x1ee3, 0x1570, 0x7b5e, 0xa861, 0xebb1, 0x0, 0x1);
        gbc.writeMem(0xe6a4, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x1ee3, gbc.sp());
        EXPECT(0xe6a6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe6a4));
        EXPECT(0xc0, gbc.readMem(0xe6a5));
        // CB C0 0063
        gbc.setState(0xe73d, 0x1a94, 0x9d50, 0x90a4, 0xfa86, 0x3f26, 0x1, 0x1);
        gbc.writeMem(0xe73d, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x1a94, gbc.sp());
        EXPECT(0xe73f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe73d));
        EXPECT(0xc0, gbc.readMem(0xe73e));
        // CB C0 0064
        gbc.setState(0x8375, 0xbb05, 0x1400, 0x2b, 0x63c2, 0x36bf, 0x1, 0x0);
        gbc.writeMem(0x8375, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0xbb05, gbc.sp());
        EXPECT(0x8377, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8375));
        EXPECT(0xc0, gbc.readMem(0x8376));
        // CB C0 0065
        gbc.setState(0xea72, 0xda0e, 0x5740, 0xe997, 0x9fba, 0xbf7b, 0x1, 0x0);
        gbc.writeMem(0xea72, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0xda0e, gbc.sp());
        EXPECT(0xea74, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xea72));
        EXPECT(0xc0, gbc.readMem(0xea73));
        // CB C0 0066
        gbc.setState(0xb16d, 0xef1a, 0x3cb0, 0x47a9, 0x46f6, 0xafd7, 0x1, 0x1);
        gbc.writeMem(0xb16d, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0xef1a, gbc.sp());
        EXPECT(0xb16f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb16d));
        EXPECT(0xc0, gbc.readMem(0xb16e));
        // CB C0 0068
        gbc.setState(0xc5ce, 0x6e3c, 0x1fc0, 0xfee8, 0x149, 0x17ca, 0x0, 0x0);
        gbc.writeMem(0xc5ce, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x6e3c, gbc.sp());
        EXPECT(0xc5d0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc5ce));
        EXPECT(0xc0, gbc.readMem(0xc5cf));
        // CB C0 0069
        gbc.setState(0xca27, 0xf27e, 0xc960, 0xb86e, 0x2397, 0x2a77, 0x0, 0x0);
        gbc.writeMem(0xca27, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0xf27e, gbc.sp());
        EXPECT(0xca29, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xca27));
        EXPECT(0xc0, gbc.readMem(0xca28));
        // CB C0 006A
        gbc.setState(0x862e, 0x283a, 0xaf90, 0xb112, 0xdc8b, 0x72e0, 0x0, 0x0);
        gbc.writeMem(0x862e, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x283a, gbc.sp());
        EXPECT(0x8630, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x862e));
        EXPECT(0xc0, gbc.readMem(0x862f));
        // CB C0 006B
        gbc.setState(0x478c, 0x4056, 0xe060, 0x5989, 0xee51, 0xcaa9, 0x0, 0x1);
        gbc.writeMem(0x478c, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x4056, gbc.sp());
        EXPECT(0x478e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C0 006C
        gbc.setState(0x1fb5, 0x2e72, 0x82a0, 0x59a1, 0x57ea, 0x2214, 0x0, 0x0);
        gbc.writeMem(0x1fb5, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x2e72, gbc.sp());
        EXPECT(0x1fb7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C0 006D
        gbc.setState(0x22ec, 0xa872, 0xd320, 0xd82c, 0x3ce8, 0xb2bd, 0x1, 0x1);
        gbc.writeMem(0x22ec, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0xa872, gbc.sp());
        EXPECT(0x22ee, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C0 006E
        gbc.setState(0xa577, 0x7bb5, 0x6750, 0xb02, 0x6e76, 0x6d17, 0x0, 0x1);
        gbc.writeMem(0xa577, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x7bb5, gbc.sp());
        EXPECT(0xa579, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa577));
        EXPECT(0xc0, gbc.readMem(0xa578));
        // CB C0 006F
        gbc.setState(0x92c1, 0xccc3, 0xf960, 0x2cb2, 0xabe0, 0xa4ac, 0x1, 0x0);
        gbc.writeMem(0x92c1, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0xccc3, gbc.sp());
        EXPECT(0x92c3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x92c1));
        EXPECT(0xc0, gbc.readMem(0x92c2));
        // CB C0 0070
        gbc.setState(0x4920, 0x5e6f, 0xcb00, 0x980, 0xda3b, 0xd82d, 0x0, 0x0);
        gbc.writeMem(0x4920, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x5e6f, gbc.sp());
        EXPECT(0x4922, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C0 0071
        gbc.setState(0x5e0, 0x19c3, 0xd1e0, 0x95e6, 0xc528, 0x6979, 0x0, 0x1);
        gbc.writeMem(0x5e0, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x19c3, gbc.sp());
        EXPECT(0x5e2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C0 0072
        gbc.setState(0xd6cb, 0x670d, 0x5620, 0x6717, 0xc4c4, 0x5c86, 0x0, 0x1);
        gbc.writeMem(0xd6cb, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x670d, gbc.sp());
        EXPECT(0xd6cd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd6cb));
        EXPECT(0xc0, gbc.readMem(0xd6cc));
        // CB C0 0073
        gbc.setState(0x41c5, 0x98e9, 0xe8a0, 0x5a48, 0xe91d, 0xeb95, 0x1, 0x1);
        gbc.writeMem(0x41c5, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x98e9, gbc.sp());
        EXPECT(0x41c7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C0 0074
        gbc.setState(0x1237, 0xa063, 0x7c70, 0x7382, 0xd951, 0x45eb, 0x1, 0x1);
        gbc.writeMem(0x1237, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0xa063, gbc.sp());
        EXPECT(0x1239, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C0 0075
        gbc.setState(0xa99f, 0x4230, 0x340, 0xfe2, 0x1304, 0x3851, 0x0, 0x0);
        gbc.writeMem(0xa99f, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x4230, gbc.sp());
        EXPECT(0xa9a1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa99f));
        EXPECT(0xc0, gbc.readMem(0xa9a0));
        // CB C0 0076
        gbc.setState(0x12a6, 0xb367, 0xd290, 0x408c, 0x9e7e, 0x892d, 0x0, 0x1);
        gbc.writeMem(0x12a6, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0xb367, gbc.sp());
        EXPECT(0x12a8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C0 0077
        gbc.setState(0x2e7d, 0x817, 0x3660, 0xfc62, 0x5c52, 0x6e21, 0x0, 0x1);
        gbc.writeMem(0x2e7d, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x817, gbc.sp());
        EXPECT(0x2e7f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C0 0078
        gbc.setState(0xbaa8, 0xfe28, 0xdc0, 0x1d6d, 0xeafc, 0x9062, 0x1, 0x0);
        gbc.writeMem(0xbaa8, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0xfe28, gbc.sp());
        EXPECT(0xbaaa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbaa8));
        EXPECT(0xc0, gbc.readMem(0xbaa9));
        // CB C0 007A
        gbc.setState(0xed50, 0xe6a9, 0xd50, 0x83fd, 0x1178, 0x746, 0x1, 0x0);
        gbc.writeMem(0xed50, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0xe6a9, gbc.sp());
        EXPECT(0xed52, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xed50));
        EXPECT(0xc0, gbc.readMem(0xed51));
        // CB C0 007B
        gbc.setState(0x6b2e, 0x9928, 0xba10, 0x6674, 0x1e74, 0xb8f6, 0x0, 0x1);
        gbc.writeMem(0x6b2e, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x9928, gbc.sp());
        EXPECT(0x6b30, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C0 007C
        gbc.setState(0xbe48, 0x2b37, 0xaa90, 0xa286, 0x72fd, 0x7659, 0x0, 0x0);
        gbc.writeMem(0xbe48, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x2b37, gbc.sp());
        EXPECT(0xbe4a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbe48));
        EXPECT(0xc0, gbc.readMem(0xbe49));
        // CB C0 007D
        gbc.setState(0x80cf, 0x7687, 0x59f0, 0xeed1, 0x1cba, 0xca24, 0x1, 0x0);
        gbc.writeMem(0x80cf, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x7687, gbc.sp());
        EXPECT(0x80d1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x80cf));
        EXPECT(0xc0, gbc.readMem(0x80d0));
        // CB C0 007E
        gbc.setState(0x406, 0x42d3, 0xf510, 0x8fcf, 0x8311, 0x412e, 0x0, 0x1);
        gbc.writeMem(0x406, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x42d3, gbc.sp());
        EXPECT(0x408, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C0 007F
        gbc.setState(0x4cc2, 0x9ab5, 0x3130, 0xfec, 0x5e9b, 0xc647, 0x0, 0x0);
        gbc.writeMem(0x4cc2, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x9ab5, gbc.sp());
        EXPECT(0x4cc4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C0 0080
        gbc.setState(0xaccc, 0x9fc7, 0xac20, 0xc412, 0x9c05, 0xe549, 0x1, 0x0);
        gbc.writeMem(0xaccc, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x9fc7, gbc.sp());
        EXPECT(0xacce, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaccc));
        EXPECT(0xc0, gbc.readMem(0xaccd));
        // CB C0 0081
        gbc.setState(0xc231, 0x32e3, 0x2890, 0x7133, 0x37f1, 0x896d, 0x1, 0x0);
        gbc.writeMem(0xc231, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x32e3, gbc.sp());
        EXPECT(0xc233, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc231));
        EXPECT(0xc0, gbc.readMem(0xc232));
        // CB C0 0082
        gbc.setState(0xaf13, 0xe7b3, 0xf9f0, 0xf105, 0xd0ff, 0xd4fb, 0x1, 0x1);
        gbc.writeMem(0xaf13, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0xe7b3, gbc.sp());
        EXPECT(0xaf15, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaf13));
        EXPECT(0xc0, gbc.readMem(0xaf14));
        // CB C0 0083
        gbc.setState(0x608e, 0xfd93, 0x7030, 0xd30f, 0x6ed7, 0x271b, 0x0, 0x1);
        gbc.writeMem(0x608e, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0xfd93, gbc.sp());
        EXPECT(0x6090, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C0 0084
        gbc.setState(0xa903, 0x6b73, 0x49b0, 0xe48d, 0x5a8b, 0x5cb4, 0x0, 0x0);
        gbc.writeMem(0xa903, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x6b73, gbc.sp());
        EXPECT(0xa905, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa903));
        EXPECT(0xc0, gbc.readMem(0xa904));
        // CB C0 0085
        gbc.setState(0x755d, 0x6e8c, 0x1d80, 0x181a, 0x813c, 0xa458, 0x1, 0x1);
        gbc.writeMem(0x755d, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x6e8c, gbc.sp());
        EXPECT(0x755f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C0 0086
        gbc.setState(0x35b6, 0x94f3, 0x2700, 0xa278, 0x549e, 0xdf2a, 0x1, 0x1);
        gbc.writeMem(0x35b6, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x94f3, gbc.sp());
        EXPECT(0x35b8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C0 0087
        gbc.setState(0xd248, 0x5a11, 0xc120, 0x56ca, 0x9132, 0xb88b, 0x0, 0x1);
        gbc.writeMem(0xd248, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x5a11, gbc.sp());
        EXPECT(0xd24a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd248));
        EXPECT(0xc0, gbc.readMem(0xd249));
        // CB C0 0088
        gbc.setState(0x4274, 0xcb0c, 0x9c90, 0x5906, 0xb552, 0x33b4, 0x1, 0x1);
        gbc.writeMem(0x4274, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0xcb0c, gbc.sp());
        EXPECT(0x4276, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C0 0089
        gbc.setState(0x9fb9, 0x9cb8, 0xbdc0, 0xb663, 0xd98d, 0x6b5a, 0x0, 0x0);
        gbc.writeMem(0x9fb9, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x9cb8, gbc.sp());
        EXPECT(0x9fbb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9fb9));
        EXPECT(0xc0, gbc.readMem(0x9fba));
        // CB C0 008A
        gbc.setState(0xb17f, 0xa039, 0xcb0, 0x1365, 0xe5bb, 0x252e, 0x1, 0x1);
        gbc.writeMem(0xb17f, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0xa039, gbc.sp());
        EXPECT(0xb181, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb17f));
        EXPECT(0xc0, gbc.readMem(0xb180));
        // CB C0 008B
        gbc.setState(0x58a4, 0x1133, 0xdd20, 0x97b9, 0xfe43, 0x9bdf, 0x0, 0x1);
        gbc.writeMem(0x58a4, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x1133, gbc.sp());
        EXPECT(0x58a6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C0 008C
        gbc.setState(0x5253, 0x1c3a, 0x9ca0, 0xd29d, 0xde11, 0xbd82, 0x0, 0x1);
        gbc.writeMem(0x5253, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x1c3a, gbc.sp());
        EXPECT(0x5255, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C0 008D
        gbc.setState(0xca66, 0x4f25, 0xb710, 0x9aa0, 0xc4f, 0xd91d, 0x1, 0x0);
        gbc.writeMem(0xca66, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x4f25, gbc.sp());
        EXPECT(0xca68, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xca66));
        EXPECT(0xc0, gbc.readMem(0xca67));
        // CB C0 008E
        gbc.setState(0x6f01, 0x47e4, 0xb700, 0x35e, 0x918d, 0x35e1, 0x1, 0x0);
        gbc.writeMem(0x6f01, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0x47e4, gbc.sp());
        EXPECT(0x6f03, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C0 008F
        gbc.setState(0xe474, 0x9245, 0xae70, 0xf1b6, 0x1fb3, 0x22f8, 0x1, 0x0);
        gbc.writeMem(0xe474, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x9245, gbc.sp());
        EXPECT(0xe476, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe474));
        EXPECT(0xc0, gbc.readMem(0xe475));
        // CB C0 0090
        gbc.setState(0xcd08, 0xe3db, 0xe8e0, 0x943a, 0x6839, 0x29b0, 0x0, 0x0);
        gbc.writeMem(0xcd08, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0xe3db, gbc.sp());
        EXPECT(0xcd0a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcd08));
        EXPECT(0xc0, gbc.readMem(0xcd09));
        // CB C0 0091
        gbc.setState(0x7219, 0x3f5f, 0x14a0, 0x5807, 0x7b95, 0xce13, 0x1, 0x1);
        gbc.writeMem(0x7219, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x3f5f, gbc.sp());
        EXPECT(0x721b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C0 0092
        gbc.setState(0x2979, 0x9175, 0x410, 0xc91f, 0x7509, 0xe288, 0x0, 0x0);
        gbc.writeMem(0x2979, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x9175, gbc.sp());
        EXPECT(0x297b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C0 0093
        gbc.setState(0x2594, 0x8e39, 0x9b40, 0xcc43, 0xa8ab, 0x7bdc, 0x1, 0x0);
        gbc.writeMem(0x2594, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x8e39, gbc.sp());
        EXPECT(0x2596, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C0 0096
        gbc.setState(0xbcb6, 0xe85e, 0x59f0, 0xd05c, 0x40df, 0x4e5c, 0x0, 0x0);
        gbc.writeMem(0xbcb6, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0xe85e, gbc.sp());
        EXPECT(0xbcb8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbcb6));
        EXPECT(0xc0, gbc.readMem(0xbcb7));
        // CB C0 0097
        gbc.setState(0x227c, 0xfc2f, 0xb400, 0x2ca4, 0xcf4c, 0x8c58, 0x1, 0x0);
        gbc.writeMem(0x227c, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0xfc2f, gbc.sp());
        EXPECT(0x227e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C0 0098
        gbc.setState(0x1c29, 0x7e57, 0x3710, 0xed0, 0xd1f3, 0x1670, 0x1, 0x0);
        gbc.writeMem(0x1c29, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x7e57, gbc.sp());
        EXPECT(0x1c2b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C0 0099
        gbc.setState(0x6124, 0xa26a, 0xfb10, 0x4678, 0x49bd, 0x22e1, 0x1, 0x0);
        gbc.writeMem(0x6124, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0xa26a, gbc.sp());
        EXPECT(0x6126, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C0 009A
        gbc.setState(0x6387, 0x2c05, 0xc670, 0x58d8, 0xc276, 0x9968, 0x1, 0x0);
        gbc.writeMem(0x6387, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x2c05, gbc.sp());
        EXPECT(0x6389, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C0 009B
        gbc.setState(0x4a5c, 0x6fda, 0x8fe0, 0x6599, 0xe935, 0x807b, 0x1, 0x1);
        gbc.writeMem(0x4a5c, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x6fda, gbc.sp());
        EXPECT(0x4a5e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C0 009C
        gbc.setState(0x9f82, 0x6217, 0xe430, 0xa8c9, 0xdb66, 0x9f15, 0x1, 0x0);
        gbc.writeMem(0x9f82, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x6217, gbc.sp());
        EXPECT(0x9f84, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9f82));
        EXPECT(0xc0, gbc.readMem(0x9f83));
        // CB C0 009E
        gbc.setState(0x9cdc, 0xea68, 0x5ed0, 0xb458, 0x563b, 0x7889, 0x1, 0x1);
        gbc.writeMem(0x9cdc, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0xea68, gbc.sp());
        EXPECT(0x9cde, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9cdc));
        EXPECT(0xc0, gbc.readMem(0x9cdd));
        // CB C0 009F
        gbc.setState(0xdcc1, 0xfe3, 0x8320, 0xbe81, 0xab34, 0x67d0, 0x1, 0x0);
        gbc.writeMem(0xdcc1, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0xfe3, gbc.sp());
        EXPECT(0xdcc3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdcc1));
        EXPECT(0xc0, gbc.readMem(0xdcc2));
        // CB C0 00A0
        gbc.setState(0x7184, 0xa9e6, 0xa0d0, 0xdd93, 0x1c1, 0x4054, 0x0, 0x0);
        gbc.writeMem(0x7184, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0xa9e6, gbc.sp());
        EXPECT(0x7186, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C0 00A1
        gbc.setState(0xc359, 0x884a, 0xfec0, 0x68db, 0xc9d3, 0x7588, 0x1, 0x1);
        gbc.writeMem(0xc359, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x884a, gbc.sp());
        EXPECT(0xc35b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc359));
        EXPECT(0xc0, gbc.readMem(0xc35a));
        // CB C0 00A2
        gbc.setState(0x673a, 0x66e8, 0x33a0, 0x3f41, 0xce3e, 0x15c1, 0x0, 0x0);
        gbc.writeMem(0x673a, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x66e8, gbc.sp());
        EXPECT(0x673c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C0 00A3
        gbc.setState(0x1753, 0xfbdc, 0xeb40, 0x7d49, 0x70a8, 0x9df1, 0x1, 0x1);
        gbc.writeMem(0x1753, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0xfbdc, gbc.sp());
        EXPECT(0x1755, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C0 00A4
        gbc.setState(0x4973, 0x9615, 0x3e00, 0x380e, 0xc00c, 0x4dfe, 0x1, 0x1);
        gbc.writeMem(0x4973, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x9615, gbc.sp());
        EXPECT(0x4975, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C0 00A5
        gbc.setState(0xce90, 0xd582, 0xc2c0, 0x206f, 0xe0fd, 0x308d, 0x0, 0x0);
        gbc.writeMem(0xce90, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0xd582, gbc.sp());
        EXPECT(0xce92, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xce90));
        EXPECT(0xc0, gbc.readMem(0xce91));
        // CB C0 00A6
        gbc.setState(0xef26, 0x5ba8, 0x5f20, 0x4d86, 0x550f, 0xbcf4, 0x0, 0x1);
        gbc.writeMem(0xef26, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x5ba8, gbc.sp());
        EXPECT(0xef28, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xef26));
        EXPECT(0xc0, gbc.readMem(0xef27));
        // CB C0 00A7
        gbc.setState(0x95ca, 0xc0e7, 0x23a0, 0x501, 0x6b31, 0xa568, 0x0, 0x1);
        gbc.writeMem(0x95ca, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0xc0e7, gbc.sp());
        EXPECT(0x95cc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x95ca));
        EXPECT(0xc0, gbc.readMem(0x95cb));
        // CB C0 00A8
        gbc.setState(0x86c9, 0x49f2, 0xdde0, 0x28ce, 0xc137, 0xa0a6, 0x1, 0x0);
        gbc.writeMem(0x86c9, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x49f2, gbc.sp());
        EXPECT(0x86cb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x86c9));
        EXPECT(0xc0, gbc.readMem(0x86ca));
        // CB C0 00A9
        gbc.setState(0x18df, 0x1956, 0xa5a0, 0x2155, 0xea7d, 0xaa44, 0x1, 0x1);
        gbc.writeMem(0x18df, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x1956, gbc.sp());
        EXPECT(0x18e1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C0 00AA
        gbc.setState(0x3476, 0x510b, 0x5c10, 0x219, 0xc3f5, 0x296f, 0x1, 0x1);
        gbc.writeMem(0x3476, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x510b, gbc.sp());
        EXPECT(0x3478, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C0 00AB
        gbc.setState(0x885f, 0x67a5, 0x86a0, 0x2274, 0x2e40, 0x4e71, 0x0, 0x0);
        gbc.writeMem(0x885f, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x67a5, gbc.sp());
        EXPECT(0x8861, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x885f));
        EXPECT(0xc0, gbc.readMem(0x8860));
        // CB C0 00AC
        gbc.setState(0x2219, 0xf1a5, 0x6420, 0x3747, 0xb3b7, 0x122f, 0x1, 0x0);
        gbc.writeMem(0x2219, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0xf1a5, gbc.sp());
        EXPECT(0x221b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C0 00AD
        gbc.setState(0xcc3b, 0x9abc, 0xfe70, 0xb997, 0x362d, 0x774, 0x1, 0x0);
        gbc.writeMem(0xcc3b, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x9abc, gbc.sp());
        EXPECT(0xcc3d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcc3b));
        EXPECT(0xc0, gbc.readMem(0xcc3c));
        // CB C0 00AE
        gbc.setState(0xe3c7, 0x1465, 0xdd30, 0x5b5e, 0x9701, 0x990b, 0x0, 0x1);
        gbc.writeMem(0xe3c7, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x1465, gbc.sp());
        EXPECT(0xe3c9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe3c7));
        EXPECT(0xc0, gbc.readMem(0xe3c8));
        // CB C0 00AF
        gbc.setState(0x5308, 0x75a1, 0x2460, 0xc936, 0x9632, 0x4a89, 0x1, 0x1);
        gbc.writeMem(0x5308, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x75a1, gbc.sp());
        EXPECT(0x530a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C0 00B0
        gbc.setState(0x88d3, 0xb6a6, 0xace0, 0xafc9, 0x262a, 0xe0cf, 0x1, 0x1);
        gbc.writeMem(0x88d3, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0xb6a6, gbc.sp());
        EXPECT(0x88d5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x88d3));
        EXPECT(0xc0, gbc.readMem(0x88d4));
        // CB C0 00B1
        gbc.setState(0xb9a9, 0xbb0f, 0x6c60, 0x5af9, 0x381c, 0xe26a, 0x0, 0x0);
        gbc.writeMem(0xb9a9, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0xbb0f, gbc.sp());
        EXPECT(0xb9ab, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb9a9));
        EXPECT(0xc0, gbc.readMem(0xb9aa));
        // CB C0 00B3
        gbc.setState(0x8c4, 0xbfcd, 0x2a60, 0xb09b, 0x2a39, 0x9c18, 0x1, 0x1);
        gbc.writeMem(0x8c4, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0xbfcd, gbc.sp());
        EXPECT(0x8c6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C0 00B4
        gbc.setState(0xad9b, 0x9c07, 0xdc0, 0x8e70, 0x807b, 0x82b3, 0x1, 0x0);
        gbc.writeMem(0xad9b, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x9c07, gbc.sp());
        EXPECT(0xad9d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xad9b));
        EXPECT(0xc0, gbc.readMem(0xad9c));
        // CB C0 00B5
        gbc.setState(0x5284, 0x289d, 0x6d50, 0x7efb, 0x6a00, 0x7bd, 0x0, 0x1);
        gbc.writeMem(0x5284, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x289d, gbc.sp());
        EXPECT(0x5286, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C0 00B6
        gbc.setState(0xe72f, 0x29c5, 0xa540, 0xec6c, 0x9b31, 0x83a7, 0x0, 0x0);
        gbc.writeMem(0xe72f, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x29c5, gbc.sp());
        EXPECT(0xe731, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe72f));
        EXPECT(0xc0, gbc.readMem(0xe730));
        // CB C0 00B7
        gbc.setState(0xc4aa, 0x6c7e, 0xd5f0, 0xe8e3, 0x582e, 0x5cb2, 0x0, 0x1);
        gbc.writeMem(0xc4aa, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x6c7e, gbc.sp());
        EXPECT(0xc4ac, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc4aa));
        EXPECT(0xc0, gbc.readMem(0xc4ab));
        // CB C0 00B8
        gbc.setState(0x242c, 0xae9b, 0xe8f0, 0xe5a2, 0xf9f, 0xce06, 0x0, 0x0);
        gbc.writeMem(0x242c, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0xae9b, gbc.sp());
        EXPECT(0x242e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C0 00B9
        gbc.setState(0x169e, 0x4863, 0x2c90, 0x770c, 0x5f05, 0xbb13, 0x1, 0x0);
        gbc.writeMem(0x169e, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x4863, gbc.sp());
        EXPECT(0x16a0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C0 00BA
        gbc.setState(0x8ca, 0x6cd3, 0x67c0, 0x2396, 0xc622, 0x323d, 0x1, 0x0);
        gbc.writeMem(0x8ca, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x6cd3, gbc.sp());
        EXPECT(0x8cc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C0 00BB
        gbc.setState(0x1047, 0xcd5c, 0xb4e0, 0xf7b6, 0x7d8e, 0xbe7d, 0x1, 0x1);
        gbc.writeMem(0x1047, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0xcd5c, gbc.sp());
        EXPECT(0x1049, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C0 00BC
        gbc.setState(0x9c54, 0x44ec, 0x2400, 0x33d2, 0xb856, 0x1839, 0x1, 0x0);
        gbc.writeMem(0x9c54, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x44ec, gbc.sp());
        EXPECT(0x9c56, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9c54));
        EXPECT(0xc0, gbc.readMem(0x9c55));
        // CB C0 00BD
        gbc.setState(0xae34, 0xcde0, 0x3030, 0x51a4, 0x4d66, 0x8f01, 0x0, 0x0);
        gbc.writeMem(0xae34, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0xcde0, gbc.sp());
        EXPECT(0xae36, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xae34));
        EXPECT(0xc0, gbc.readMem(0xae35));
        // CB C0 00BE
        gbc.setState(0x3f99, 0x79e9, 0xe870, 0x7728, 0x6f44, 0xe9fd, 0x0, 0x1);
        gbc.writeMem(0x3f99, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x79e9, gbc.sp());
        EXPECT(0x3f9b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C0 00BF
        gbc.setState(0x43e3, 0xfea4, 0xe4f0, 0xfba, 0x55ae, 0x69cd, 0x0, 0x0);
        gbc.writeMem(0x43e3, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0xfea4, gbc.sp());
        EXPECT(0x43e5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C0 00C0
        gbc.setState(0x19da, 0x2599, 0xcf70, 0xd511, 0x3a18, 0xf0f2, 0x0, 0x0);
        gbc.writeMem(0x19da, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x2599, gbc.sp());
        EXPECT(0x19dc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C0 00C1
        gbc.setState(0x7dc2, 0xdaab, 0x2230, 0x489f, 0x5114, 0x1107, 0x1, 0x1);
        gbc.writeMem(0x7dc2, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0xdaab, gbc.sp());
        EXPECT(0x7dc4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C0 00C3
        gbc.setState(0x58f4, 0xaba, 0xfe20, 0xf37c, 0xf10f, 0x6fa5, 0x1, 0x1);
        gbc.writeMem(0x58f4, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0xaba, gbc.sp());
        EXPECT(0x58f6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C0 00C4
        gbc.setState(0x21a5, 0xb1a7, 0xa60, 0x5e7d, 0x1f66, 0xed1c, 0x1, 0x0);
        gbc.writeMem(0x21a5, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0xb1a7, gbc.sp());
        EXPECT(0x21a7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C0 00C5
        gbc.setState(0xc82e, 0x532b, 0x3aa0, 0x6a50, 0xfdd7, 0xa6f5, 0x0, 0x0);
        gbc.writeMem(0xc82e, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x532b, gbc.sp());
        EXPECT(0xc830, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc82e));
        EXPECT(0xc0, gbc.readMem(0xc82f));
        // CB C0 00C6
        gbc.setState(0xe863, 0xa96d, 0x8620, 0xd5fa, 0x736c, 0xfdc2, 0x0, 0x0);
        gbc.writeMem(0xe863, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0xa96d, gbc.sp());
        EXPECT(0xe865, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe863));
        EXPECT(0xc0, gbc.readMem(0xe864));
        // CB C0 00C7
        gbc.setState(0xd8ec, 0xfb3b, 0xd30, 0xf0e, 0x8c05, 0x189, 0x1, 0x1);
        gbc.writeMem(0xd8ec, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0xfb3b, gbc.sp());
        EXPECT(0xd8ee, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd8ec));
        EXPECT(0xc0, gbc.readMem(0xd8ed));
        // CB C0 00C8
        gbc.setState(0xde67, 0x3bde, 0xb1e0, 0x4ef3, 0x3461, 0xcb94, 0x1, 0x0);
        gbc.writeMem(0xde67, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x3bde, gbc.sp());
        EXPECT(0xde69, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xde67));
        EXPECT(0xc0, gbc.readMem(0xde68));
        // CB C0 00C9
        gbc.setState(0xd858, 0xb74a, 0x5530, 0xfccf, 0xd595, 0xd0da, 0x0, 0x1);
        gbc.writeMem(0xd858, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0xb74a, gbc.sp());
        EXPECT(0xd85a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd858));
        EXPECT(0xc0, gbc.readMem(0xd859));
        // CB C0 00CA
        gbc.setState(0xe902, 0xa4ef, 0x5a00, 0x78e1, 0x2866, 0xe00a, 0x0, 0x1);
        gbc.writeMem(0xe902, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0xa4ef, gbc.sp());
        EXPECT(0xe904, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe902));
        EXPECT(0xc0, gbc.readMem(0xe903));
        // CB C0 00CB
        gbc.setState(0x6995, 0x369f, 0x3480, 0x5bc2, 0x82ce, 0x544, 0x1, 0x1);
        gbc.writeMem(0x6995, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x369f, gbc.sp());
        EXPECT(0x6997, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C0 00CC
        gbc.setState(0x3353, 0x1842, 0xe250, 0xa9ba, 0x8990, 0x6f, 0x1, 0x1);
        gbc.writeMem(0x3353, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x1842, gbc.sp());
        EXPECT(0x3355, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C0 00CD
        gbc.setState(0x4680, 0x7cea, 0xb3a0, 0xb20e, 0x9f62, 0x2a5c, 0x0, 0x0);
        gbc.writeMem(0x4680, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x7cea, gbc.sp());
        EXPECT(0x4682, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C0 00CE
        gbc.setState(0xb253, 0x3ef5, 0xeb70, 0x4304, 0xfb82, 0x6a1d, 0x1, 0x0);
        gbc.writeMem(0xb253, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x3ef5, gbc.sp());
        EXPECT(0xb255, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb253));
        EXPECT(0xc0, gbc.readMem(0xb254));
        // CB C0 00CF
        gbc.setState(0xf27, 0xb89d, 0x3b00, 0xd596, 0x7059, 0x47d, 0x0, 0x0);
        gbc.writeMem(0xf27, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0xb89d, gbc.sp());
        EXPECT(0xf29, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C0 00D0
        gbc.setState(0x6bd9, 0xf446, 0xc1c0, 0xf64c, 0xbb9e, 0x49fb, 0x1, 0x1);
        gbc.writeMem(0x6bd9, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0xf446, gbc.sp());
        EXPECT(0x6bdb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C0 00D1
        gbc.setState(0xdd00, 0x1ee3, 0x2270, 0x848c, 0xa5a0, 0x8e2d, 0x0, 0x1);
        gbc.writeMem(0xdd00, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x1ee3, gbc.sp());
        EXPECT(0xdd02, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdd00));
        EXPECT(0xc0, gbc.readMem(0xdd01));
        // CB C0 00D2
        gbc.setState(0x483, 0xb2ba, 0xa2a0, 0x5b1b, 0xd82e, 0xa1b8, 0x0, 0x0);
        gbc.writeMem(0x483, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0xb2ba, gbc.sp());
        EXPECT(0x485, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C0 00D3
        gbc.setState(0xb8ee, 0x4059, 0xc470, 0xba9b, 0x6e05, 0x439a, 0x0, 0x0);
        gbc.writeMem(0xb8ee, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x4059, gbc.sp());
        EXPECT(0xb8f0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb8ee));
        EXPECT(0xc0, gbc.readMem(0xb8ef));
        // CB C0 00D4
        gbc.setState(0x7962, 0x6d0a, 0xd5c0, 0x711e, 0x77f2, 0x7c51, 0x0, 0x0);
        gbc.writeMem(0x7962, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x6d0a, gbc.sp());
        EXPECT(0x7964, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C0 00D5
        gbc.setState(0x9729, 0x7e84, 0x15d0, 0x26eb, 0x1482, 0x9371, 0x0, 0x1);
        gbc.writeMem(0x9729, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x7e84, gbc.sp());
        EXPECT(0x972b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9729));
        EXPECT(0xc0, gbc.readMem(0x972a));
        // CB C0 00D6
        gbc.setState(0x5618, 0x65a7, 0xb5d0, 0x972e, 0xd020, 0x6725, 0x0, 0x0);
        gbc.writeMem(0x5618, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x65a7, gbc.sp());
        EXPECT(0x561a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C0 00D7
        gbc.setState(0x2286, 0x5015, 0x3b30, 0xaf2c, 0x1921, 0xddbe, 0x0, 0x0);
        gbc.writeMem(0x2286, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0x5015, gbc.sp());
        EXPECT(0x2288, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C0 00D8
        gbc.setState(0x21ed, 0xd16e, 0x6e10, 0xcbe7, 0x1f50, 0x8e52, 0x1, 0x0);
        gbc.writeMem(0x21ed, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0xd16e, gbc.sp());
        EXPECT(0x21ef, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C0 00D9
        gbc.setState(0x1149, 0x5165, 0xe830, 0x3f5e, 0xc5a8, 0xc15a, 0x0, 0x1);
        gbc.writeMem(0x1149, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x5165, gbc.sp());
        EXPECT(0x114b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C0 00DA
        gbc.setState(0x1966, 0xd18b, 0x220, 0xe556, 0x4da5, 0x3571, 0x1, 0x1);
        gbc.writeMem(0x1966, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0xd18b, gbc.sp());
        EXPECT(0x1968, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C0 00DB
        gbc.setState(0x679a, 0x8f7c, 0x5730, 0xdece, 0xceaf, 0xbc6c, 0x0, 0x1);
        gbc.writeMem(0x679a, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x8f7c, gbc.sp());
        EXPECT(0x679c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C0 00DC
        gbc.setState(0x16a4, 0xd56b, 0xec00, 0xf6f3, 0x5e89, 0xf23e, 0x1, 0x1);
        gbc.writeMem(0x16a4, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0xd56b, gbc.sp());
        EXPECT(0x16a6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C0 00DD
        gbc.setState(0x5392, 0xebfa, 0xe5f0, 0x9fc, 0xef44, 0xbcb9, 0x1, 0x1);
        gbc.writeMem(0x5392, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0xebfa, gbc.sp());
        EXPECT(0x5394, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C0 00DE
        gbc.setState(0xc04b, 0xb009, 0xfe80, 0x53a8, 0xb6be, 0x5f40, 0x0, 0x1);
        gbc.writeMem(0xc04b, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0xb009, gbc.sp());
        EXPECT(0xc04d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc04b));
        EXPECT(0xc0, gbc.readMem(0xc04c));
        // CB C0 00DF
        gbc.setState(0x4a35, 0x7c53, 0xf7f0, 0xb8ac, 0x95ca, 0xac2f, 0x0, 0x1);
        gbc.writeMem(0x4a35, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x7c53, gbc.sp());
        EXPECT(0x4a37, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C0 00E0
        gbc.setState(0xbecc, 0xe16f, 0x5830, 0x79b, 0xfe63, 0x509b, 0x0, 0x1);
        gbc.writeMem(0xbecc, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0xe16f, gbc.sp());
        EXPECT(0xbece, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbecc));
        EXPECT(0xc0, gbc.readMem(0xbecd));
        // CB C0 00E1
        gbc.setState(0x7c70, 0xfbe7, 0x75e0, 0x7087, 0xd6ee, 0x7b1d, 0x0, 0x0);
        gbc.writeMem(0x7c70, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0xfbe7, gbc.sp());
        EXPECT(0x7c72, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C0 00E2
        gbc.setState(0x72d2, 0x6aa3, 0x61f0, 0xceb3, 0x5cf8, 0xb032, 0x1, 0x1);
        gbc.writeMem(0x72d2, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x6aa3, gbc.sp());
        EXPECT(0x72d4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C0 00E3
        gbc.setState(0x9bd0, 0xd0ce, 0x2680, 0xdba3, 0x190e, 0x58e0, 0x0, 0x1);
        gbc.writeMem(0x9bd0, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0xd0ce, gbc.sp());
        EXPECT(0x9bd2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9bd0));
        EXPECT(0xc0, gbc.readMem(0x9bd1));
        // CB C0 00E4
        gbc.setState(0x12df, 0xfbd2, 0x6dc0, 0xdd3c, 0x6cb5, 0xd94e, 0x1, 0x0);
        gbc.writeMem(0x12df, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0xfbd2, gbc.sp());
        EXPECT(0x12e1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C0 00E5
        gbc.setState(0x9919, 0xffc8, 0x88b0, 0x7f3b, 0x21fe, 0x2de6, 0x1, 0x0);
        gbc.writeMem(0x9919, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0xffc8, gbc.sp());
        EXPECT(0x991b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9919));
        EXPECT(0xc0, gbc.readMem(0x991a));
        // CB C0 00E6
        gbc.setState(0x1aef, 0xd851, 0x62e0, 0xbd3d, 0xfdb3, 0x42a4, 0x1, 0x1);
        gbc.writeMem(0x1aef, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0xd851, gbc.sp());
        EXPECT(0x1af1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C0 00E7
        gbc.setState(0x1e86, 0x2624, 0x8320, 0xf277, 0x6f0a, 0x3481, 0x0, 0x1);
        gbc.writeMem(0x1e86, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x2624, gbc.sp());
        EXPECT(0x1e88, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C0 00E8
        gbc.setState(0x1337, 0xfed3, 0xae30, 0x4ef5, 0x67b5, 0x371e, 0x0, 0x0);
        gbc.writeMem(0x1337, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0xfed3, gbc.sp());
        EXPECT(0x1339, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C0 00E9
        gbc.setState(0xa57f, 0xc775, 0x1a10, 0x90b2, 0x37c8, 0xcf8f, 0x0, 0x1);
        gbc.writeMem(0xa57f, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0xc775, gbc.sp());
        EXPECT(0xa581, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa57f));
        EXPECT(0xc0, gbc.readMem(0xa580));
        // CB C0 00EA
        gbc.setState(0xc99a, 0xf88b, 0xa5a0, 0x4ed4, 0xb60c, 0x8118, 0x1, 0x1);
        gbc.writeMem(0xc99a, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0xf88b, gbc.sp());
        EXPECT(0xc99c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc99a));
        EXPECT(0xc0, gbc.readMem(0xc99b));
        // CB C0 00EB
        gbc.setState(0xb8d2, 0x8330, 0xdf00, 0x6b1c, 0x44f4, 0x95f4, 0x1, 0x1);
        gbc.writeMem(0xb8d2, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x8330, gbc.sp());
        EXPECT(0xb8d4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb8d2));
        EXPECT(0xc0, gbc.readMem(0xb8d3));
        // CB C0 00EC
        gbc.setState(0x6e0d, 0x7f00, 0x1af0, 0xbc61, 0x1b56, 0x7210, 0x1, 0x0);
        gbc.writeMem(0x6e0d, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x7f00, gbc.sp());
        EXPECT(0x6e0f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C0 00ED
        gbc.setState(0x5a60, 0xe729, 0xf520, 0xca3d, 0xaf1d, 0x5cf6, 0x0, 0x0);
        gbc.writeMem(0x5a60, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0xe729, gbc.sp());
        EXPECT(0x5a62, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C0 00EE
        gbc.setState(0x2efa, 0x1689, 0x50e0, 0xbf00, 0xf058, 0x36a8, 0x1, 0x0);
        gbc.writeMem(0x2efa, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x1689, gbc.sp());
        EXPECT(0x2efc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C0 00EF
        gbc.setState(0xe4ed, 0x6d32, 0xfa30, 0x5b02, 0xb023, 0x82ef, 0x1, 0x1);
        gbc.writeMem(0xe4ed, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x6d32, gbc.sp());
        EXPECT(0xe4ef, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe4ed));
        EXPECT(0xc0, gbc.readMem(0xe4ee));
        // CB C0 00F0
        gbc.setState(0x82df, 0x6b5c, 0x8f90, 0xafe5, 0x7a92, 0x8927, 0x0, 0x1);
        gbc.writeMem(0x82df, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x6b5c, gbc.sp());
        EXPECT(0x82e1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x82df));
        EXPECT(0xc0, gbc.readMem(0x82e0));
        // CB C0 00F1
        gbc.setState(0xcb3e, 0x7a1a, 0xbfd0, 0x5759, 0xe5c4, 0xa113, 0x0, 0x1);
        gbc.writeMem(0xcb3e, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x7a1a, gbc.sp());
        EXPECT(0xcb40, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcb3e));
        EXPECT(0xc0, gbc.readMem(0xcb3f));
        // CB C0 00F2
        gbc.setState(0x39d1, 0x63ca, 0x17a0, 0x3706, 0x8693, 0xeff9, 0x0, 0x0);
        gbc.writeMem(0x39d1, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x63ca, gbc.sp());
        EXPECT(0x39d3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C0 00F3
        gbc.setState(0x6c6e, 0xe5d8, 0x4110, 0x174c, 0x3227, 0xfa0, 0x1, 0x1);
        gbc.writeMem(0x6c6e, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0xe5d8, gbc.sp());
        EXPECT(0x6c70, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C0 00F4
        gbc.setState(0xc68b, 0x461d, 0xd410, 0x4f4d, 0xc41f, 0xfcd, 0x1, 0x0);
        gbc.writeMem(0xc68b, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x461d, gbc.sp());
        EXPECT(0xc68d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc68b));
        EXPECT(0xc0, gbc.readMem(0xc68c));
        // CB C0 00F6
        gbc.setState(0xb531, 0x84fc, 0x2430, 0x7c06, 0x68f1, 0x952b, 0x1, 0x0);
        gbc.writeMem(0xb531, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x84fc, gbc.sp());
        EXPECT(0xb533, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb531));
        EXPECT(0xc0, gbc.readMem(0xb532));
        // CB C0 00F7
        gbc.setState(0x5137, 0x5f67, 0x2520, 0xbf58, 0x2b3d, 0x6bf2, 0x1, 0x0);
        gbc.writeMem(0x5137, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x5f67, gbc.sp());
        EXPECT(0x5139, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C0 00F9
        gbc.setState(0xe3e9, 0x77a1, 0xfce0, 0x6ab9, 0xd420, 0xbd70, 0x0, 0x1);
        gbc.writeMem(0xe3e9, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x77a1, gbc.sp());
        EXPECT(0xe3eb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe3e9));
        EXPECT(0xc0, gbc.readMem(0xe3ea));
        // CB C0 00FA
        gbc.setState(0x8bc2, 0x14f9, 0xc0c0, 0x5627, 0xacff, 0x7669, 0x0, 0x0);
        gbc.writeMem(0x8bc2, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0x14f9, gbc.sp());
        EXPECT(0x8bc4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8bc2));
        EXPECT(0xc0, gbc.readMem(0x8bc3));
        // CB C0 00FB
        gbc.setState(0x3ed, 0xccce, 0x3710, 0x97b9, 0x4a62, 0x2b34, 0x1, 0x0);
        gbc.writeMem(0x3ed, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0xccce, gbc.sp());
        EXPECT(0x3ef, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C0 00FC
        gbc.setState(0x9b7, 0x96ea, 0x8880, 0x34b2, 0x7741, 0xe9c6, 0x1, 0x1);
        gbc.writeMem(0x9b7, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x96ea, gbc.sp());
        EXPECT(0x9b9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C0 00FD
        gbc.setState(0xe586, 0x15f7, 0xcac0, 0xfcbd, 0xe998, 0x60b1, 0x0, 0x1);
        gbc.writeMem(0xe586, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x15f7, gbc.sp());
        EXPECT(0xe588, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe586));
        EXPECT(0xc0, gbc.readMem(0xe587));
        // CB C0 00FE
        gbc.setState(0xbbf, 0xaa8c, 0xb0c0, 0x4aac, 0x470, 0xe888, 0x1, 0x0);
        gbc.writeMem(0xbbf, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0xaa8c, gbc.sp());
        EXPECT(0xbc1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C0 00FF
        gbc.setState(0x3b17, 0x505e, 0xfa00, 0xc051, 0x851b, 0x2a88, 0x0, 0x0);
        gbc.writeMem(0x3b17, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x505e, gbc.sp());
        EXPECT(0x3b19, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C0 0100
        gbc.setState(0x74cc, 0xc8a, 0x2280, 0xf41f, 0x91b, 0x5057, 0x0, 0x1);
        gbc.writeMem(0x74cc, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0xc8a, gbc.sp());
        EXPECT(0x74ce, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C0 0101
        gbc.setState(0xc578, 0xa2d1, 0x2fb0, 0x42be, 0x4b0b, 0x9ca8, 0x0, 0x1);
        gbc.writeMem(0xc578, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0xa2d1, gbc.sp());
        EXPECT(0xc57a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc578));
        EXPECT(0xc0, gbc.readMem(0xc579));
        // CB C0 0102
        gbc.setState(0x87f5, 0xee97, 0xa0e0, 0xe3d0, 0x33e7, 0x6c92, 0x1, 0x1);
        gbc.writeMem(0x87f5, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0xee97, gbc.sp());
        EXPECT(0x87f7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x87f5));
        EXPECT(0xc0, gbc.readMem(0x87f6));
        // CB C0 0103
        gbc.setState(0xecc, 0x316e, 0x9c50, 0xd2b1, 0xcbb, 0x27f0, 0x0, 0x0);
        gbc.writeMem(0xecc, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x316e, gbc.sp());
        EXPECT(0xece, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C0 0104
        gbc.setState(0x5577, 0xc4ab, 0x7230, 0x9f57, 0x67fb, 0x5e62, 0x1, 0x1);
        gbc.writeMem(0x5577, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0xc4ab, gbc.sp());
        EXPECT(0x5579, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C0 0105
        gbc.setState(0xbc10, 0xc193, 0x98e0, 0xd01b, 0xf06d, 0x9dcc, 0x0, 0x0);
        gbc.writeMem(0xbc10, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0xc193, gbc.sp());
        EXPECT(0xbc12, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbc10));
        EXPECT(0xc0, gbc.readMem(0xbc11));
        // CB C0 0106
        gbc.setState(0x6aec, 0xf3c5, 0x7560, 0x48ee, 0xf271, 0xd7f4, 0x0, 0x1);
        gbc.writeMem(0x6aec, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0xf3c5, gbc.sp());
        EXPECT(0x6aee, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C0 0107
        gbc.setState(0x7131, 0x8627, 0x37d0, 0x943e, 0xda0c, 0xb9bb, 0x0, 0x0);
        gbc.writeMem(0x7131, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x8627, gbc.sp());
        EXPECT(0x7133, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C0 0108
        gbc.setState(0xc7b4, 0x3211, 0x26c0, 0xc33, 0x10fa, 0xed31, 0x0, 0x1);
        gbc.writeMem(0xc7b4, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x3211, gbc.sp());
        EXPECT(0xc7b6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc7b4));
        EXPECT(0xc0, gbc.readMem(0xc7b5));
        // CB C0 0109
        gbc.setState(0x546b, 0x8a9d, 0xd410, 0xfefe, 0x7e4b, 0x763, 0x0, 0x0);
        gbc.writeMem(0x546b, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x8a9d, gbc.sp());
        EXPECT(0x546d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C0 010B
        gbc.setState(0x23a4, 0xf5ec, 0xb8e0, 0x58bd, 0x3962, 0xa57, 0x1, 0x0);
        gbc.writeMem(0x23a4, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0xf5ec, gbc.sp());
        EXPECT(0x23a6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C0 010C
        gbc.setState(0x77e, 0x78dc, 0x900, 0xaa02, 0x9490, 0x126d, 0x0, 0x0);
        gbc.writeMem(0x77e, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x78dc, gbc.sp());
        EXPECT(0x780, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C0 010D
        gbc.setState(0x597a, 0x97ec, 0xc860, 0x9f9a, 0x93f4, 0xd321, 0x1, 0x1);
        gbc.writeMem(0x597a, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x97ec, gbc.sp());
        EXPECT(0x597c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C0 010E
        gbc.setState(0x6a9e, 0x88d4, 0xb230, 0xaa94, 0xcac9, 0x9b67, 0x1, 0x1);
        gbc.writeMem(0x6a9e, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x88d4, gbc.sp());
        EXPECT(0x6aa0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C0 010F
        gbc.setState(0x4f5f, 0x4827, 0x4520, 0x42cd, 0x3ae1, 0xe612, 0x0, 0x1);
        gbc.writeMem(0x4f5f, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x4827, gbc.sp());
        EXPECT(0x4f61, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C0 0110
        gbc.setState(0x2acd, 0xde0c, 0x4080, 0x8030, 0x4f2, 0x8ae6, 0x0, 0x0);
        gbc.writeMem(0x2acd, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0xde0c, gbc.sp());
        EXPECT(0x2acf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C0 0111
        gbc.setState(0xedba, 0xba3e, 0x2680, 0xa5f0, 0x764, 0x86a5, 0x0, 0x0);
        gbc.writeMem(0xedba, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0xba3e, gbc.sp());
        EXPECT(0xedbc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xedba));
        EXPECT(0xc0, gbc.readMem(0xedbb));
        // CB C0 0112
        gbc.setState(0x7456, 0x4420, 0x7230, 0x975e, 0xc0ff, 0x1642, 0x1, 0x0);
        gbc.writeMem(0x7456, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x4420, gbc.sp());
        EXPECT(0x7458, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C0 0113
        gbc.setState(0x5d20, 0x92b7, 0x6800, 0x8351, 0xf25b, 0x136f, 0x1, 0x0);
        gbc.writeMem(0x5d20, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x92b7, gbc.sp());
        EXPECT(0x5d22, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C0 0114
        gbc.setState(0xa9dc, 0xe974, 0x6050, 0xa59b, 0x8fef, 0xd5f7, 0x1, 0x1);
        gbc.writeMem(0xa9dc, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0xe974, gbc.sp());
        EXPECT(0xa9de, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa9dc));
        EXPECT(0xc0, gbc.readMem(0xa9dd));
        // CB C0 0116
        gbc.setState(0xac97, 0xbaad, 0xd4c0, 0x7bf9, 0xb2a, 0x3ad4, 0x0, 0x0);
        gbc.writeMem(0xac97, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0xbaad, gbc.sp());
        EXPECT(0xac99, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xac97));
        EXPECT(0xc0, gbc.readMem(0xac98));
        // CB C0 0117
        gbc.setState(0x2e62, 0x5f81, 0x9cd0, 0x162f, 0x860f, 0x6baf, 0x1, 0x1);
        gbc.writeMem(0x2e62, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x5f81, gbc.sp());
        EXPECT(0x2e64, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C0 0118
        gbc.setState(0xb78d, 0xb921, 0x8410, 0xabac, 0xb65f, 0xc033, 0x0, 0x1);
        gbc.writeMem(0xb78d, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0xb921, gbc.sp());
        EXPECT(0xb78f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb78d));
        EXPECT(0xc0, gbc.readMem(0xb78e));
        // CB C0 011A
        gbc.setState(0x4192, 0x7038, 0x60a0, 0x5745, 0x4d37, 0xcd3e, 0x1, 0x1);
        gbc.writeMem(0x4192, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x7038, gbc.sp());
        EXPECT(0x4194, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C0 011B
        gbc.setState(0x8e05, 0x9f2c, 0x1260, 0x1915, 0x81d4, 0xeaff, 0x0, 0x1);
        gbc.writeMem(0x8e05, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x9f2c, gbc.sp());
        EXPECT(0x8e07, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8e05));
        EXPECT(0xc0, gbc.readMem(0x8e06));
        // CB C0 011C
        gbc.setState(0xa3c9, 0xd9e9, 0xcb10, 0x3286, 0x61d4, 0x8787, 0x1, 0x0);
        gbc.writeMem(0xa3c9, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0xd9e9, gbc.sp());
        EXPECT(0xa3cb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa3c9));
        EXPECT(0xc0, gbc.readMem(0xa3ca));
        // CB C0 011D
        gbc.setState(0xdf66, 0x986, 0x4570, 0xd40d, 0x93cd, 0x2171, 0x1, 0x1);
        gbc.writeMem(0xdf66, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x986, gbc.sp());
        EXPECT(0xdf68, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdf66));
        EXPECT(0xc0, gbc.readMem(0xdf67));
        // CB C0 011E
        gbc.setState(0xd725, 0x9bc5, 0x7900, 0x9720, 0x481c, 0xa5e2, 0x1, 0x1);
        gbc.writeMem(0xd725, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x9bc5, gbc.sp());
        EXPECT(0xd727, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd725));
        EXPECT(0xc0, gbc.readMem(0xd726));
        // CB C0 011F
        gbc.setState(0x1b64, 0xbf61, 0x1830, 0xb050, 0xef56, 0xac05, 0x0, 0x1);
        gbc.writeMem(0x1b64, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0xbf61, gbc.sp());
        EXPECT(0x1b66, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C0 0120
        gbc.setState(0x604d, 0x5b6c, 0xa10, 0x603e, 0x4e66, 0x4ff2, 0x0, 0x0);
        gbc.writeMem(0x604d, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x5b6c, gbc.sp());
        EXPECT(0x604f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C0 0121
        gbc.setState(0x2ba3, 0xb381, 0x10f0, 0xe91f, 0xab02, 0xf3e9, 0x0, 0x1);
        gbc.writeMem(0x2ba3, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0xb381, gbc.sp());
        EXPECT(0x2ba5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C0 0122
        gbc.setState(0xb26e, 0x7f43, 0xfb50, 0xbf3a, 0x7418, 0x81c8, 0x1, 0x0);
        gbc.writeMem(0xb26e, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x7f43, gbc.sp());
        EXPECT(0xb270, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb26e));
        EXPECT(0xc0, gbc.readMem(0xb26f));
        // CB C0 0123
        gbc.setState(0x73e, 0x20bd, 0xa8e0, 0xa531, 0x4648, 0x188b, 0x1, 0x1);
        gbc.writeMem(0x73e, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x20bd, gbc.sp());
        EXPECT(0x740, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C0 0124
        gbc.setState(0xa3cf, 0xc6a8, 0x1e40, 0x1abb, 0xbdb, 0x9553, 0x1, 0x1);
        gbc.writeMem(0xa3cf, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0xc6a8, gbc.sp());
        EXPECT(0xa3d1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa3cf));
        EXPECT(0xc0, gbc.readMem(0xa3d0));
        // CB C0 0125
        gbc.setState(0x112d, 0x84b3, 0x3b40, 0x32a9, 0xcbfb, 0x5a0d, 0x1, 0x1);
        gbc.writeMem(0x112d, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x84b3, gbc.sp());
        EXPECT(0x112f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C0 0126
        gbc.setState(0x712a, 0x2c9e, 0xc980, 0x2619, 0x56c0, 0x2817, 0x0, 0x0);
        gbc.writeMem(0x712a, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x2c9e, gbc.sp());
        EXPECT(0x712c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C0 0128
        gbc.setState(0x498b, 0xd9e8, 0xde0, 0x9a3d, 0x5114, 0xe761, 0x0, 0x0);
        gbc.writeMem(0x498b, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0xd9e8, gbc.sp());
        EXPECT(0x498d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C0 0129
        gbc.setState(0x663c, 0x1338, 0x6780, 0xcdec, 0x544b, 0xd606, 0x0, 0x0);
        gbc.writeMem(0x663c, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x1338, gbc.sp());
        EXPECT(0x663e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C0 012A
        gbc.setState(0x8218, 0x1502, 0xd800, 0x43a6, 0x352, 0xe71e, 0x1, 0x1);
        gbc.writeMem(0x8218, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x1502, gbc.sp());
        EXPECT(0x821a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8218));
        EXPECT(0xc0, gbc.readMem(0x8219));
        // CB C0 012B
        gbc.setState(0xe1e8, 0x19f5, 0x26c0, 0xa507, 0xe08a, 0xb4c4, 0x1, 0x0);
        gbc.writeMem(0xe1e8, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x19f5, gbc.sp());
        EXPECT(0xe1ea, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe1e8));
        EXPECT(0xc0, gbc.readMem(0xe1e9));
        // CB C0 012C
        gbc.setState(0x47f1, 0xa933, 0xf220, 0x2933, 0x8025, 0x27a9, 0x0, 0x1);
        gbc.writeMem(0x47f1, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0xa933, gbc.sp());
        EXPECT(0x47f3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C0 012D
        gbc.setState(0xd997, 0x7aae, 0x7870, 0x6046, 0x7284, 0x480d, 0x0, 0x0);
        gbc.writeMem(0xd997, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x7aae, gbc.sp());
        EXPECT(0xd999, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd997));
        EXPECT(0xc0, gbc.readMem(0xd998));
        // CB C0 012E
        gbc.setState(0x21c1, 0xe5a4, 0x3ff0, 0x850c, 0xe678, 0xe53c, 0x1, 0x0);
        gbc.writeMem(0x21c1, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0xe5a4, gbc.sp());
        EXPECT(0x21c3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C0 012F
        gbc.setState(0xe0aa, 0xce6d, 0x7360, 0xf5ce, 0x9f39, 0x38b7, 0x1, 0x1);
        gbc.writeMem(0xe0aa, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0xce6d, gbc.sp());
        EXPECT(0xe0ac, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe0aa));
        EXPECT(0xc0, gbc.readMem(0xe0ab));
        // CB C0 0130
        gbc.setState(0x43c9, 0x5ba7, 0xbdc0, 0x4bd5, 0xaed9, 0xdda1, 0x0, 0x1);
        gbc.writeMem(0x43c9, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x5ba7, gbc.sp());
        EXPECT(0x43cb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C0 0131
        gbc.setState(0x95fe, 0x62c, 0x88a0, 0x267f, 0x54e5, 0x5a92, 0x1, 0x0);
        gbc.writeMem(0x95fe, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x62c, gbc.sp());
        EXPECT(0x9600, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x95fe));
        EXPECT(0xc0, gbc.readMem(0x95ff));
        // CB C0 0132
        gbc.setState(0xc58, 0x595f, 0xeff0, 0x8314, 0xd4d2, 0x1, 0x0, 0x1);
        gbc.writeMem(0xc58, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x595f, gbc.sp());
        EXPECT(0xc5a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C0 0133
        gbc.setState(0x92c7, 0x2e61, 0x6520, 0x889d, 0xeaa6, 0xc1a7, 0x0, 0x0);
        gbc.writeMem(0x92c7, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x2e61, gbc.sp());
        EXPECT(0x92c9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x92c7));
        EXPECT(0xc0, gbc.readMem(0x92c8));
        // CB C0 0134
        gbc.setState(0xdada, 0xae68, 0x2080, 0x5d0a, 0x1b55, 0x9162, 0x1, 0x1);
        gbc.writeMem(0xdada, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0xae68, gbc.sp());
        EXPECT(0xdadc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdada));
        EXPECT(0xc0, gbc.readMem(0xdadb));
        // CB C0 0135
        gbc.setState(0x90f1, 0x41fd, 0x8ab0, 0x765b, 0x8b23, 0x771d, 0x1, 0x1);
        gbc.writeMem(0x90f1, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x41fd, gbc.sp());
        EXPECT(0x90f3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x90f1));
        EXPECT(0xc0, gbc.readMem(0x90f2));
        // CB C0 0136
        gbc.setState(0x8a8, 0xc355, 0xc620, 0x666c, 0x6263, 0x9fa3, 0x0, 0x0);
        gbc.writeMem(0x8a8, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0xc355, gbc.sp());
        EXPECT(0x8aa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C0 0138
        gbc.setState(0xc84d, 0xba8f, 0x7d60, 0xe84f, 0xe4ad, 0xd8f0, 0x0, 0x0);
        gbc.writeMem(0xc84d, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0xba8f, gbc.sp());
        EXPECT(0xc84f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc84d));
        EXPECT(0xc0, gbc.readMem(0xc84e));
        // CB C0 0139
        gbc.setState(0x69f5, 0xd200, 0xe750, 0xd07c, 0x19a8, 0x73e9, 0x0, 0x1);
        gbc.writeMem(0x69f5, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0xd200, gbc.sp());
        EXPECT(0x69f7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C0 013A
        gbc.setState(0x888, 0xf1b9, 0x7bf0, 0xfd52, 0x75da, 0xb26f, 0x1, 0x1);
        gbc.writeMem(0x888, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0xf1b9, gbc.sp());
        EXPECT(0x88a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C0 013B
        gbc.setState(0x3ac1, 0x6420, 0xdc00, 0x1e3f, 0x9e8f, 0x9ef1, 0x1, 0x1);
        gbc.writeMem(0x3ac1, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x6420, gbc.sp());
        EXPECT(0x3ac3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C0 013C
        gbc.setState(0x9fd7, 0xb08b, 0x39c0, 0xa2db, 0x28e3, 0xa1f7, 0x1, 0x1);
        gbc.writeMem(0x9fd7, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0xb08b, gbc.sp());
        EXPECT(0x9fd9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9fd7));
        EXPECT(0xc0, gbc.readMem(0x9fd8));
        // CB C0 013D
        gbc.setState(0x5e86, 0xf1aa, 0x4b70, 0x67c8, 0xe1cf, 0x92f6, 0x1, 0x0);
        gbc.writeMem(0x5e86, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0xf1aa, gbc.sp());
        EXPECT(0x5e88, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C0 013E
        gbc.setState(0x2730, 0x1941, 0x4cb0, 0x85e4, 0xc038, 0xcccf, 0x0, 0x0);
        gbc.writeMem(0x2730, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x1941, gbc.sp());
        EXPECT(0x2732, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C0 013F
        gbc.setState(0x5147, 0x46a0, 0x8090, 0x1e5b, 0x9a6b, 0xac6e, 0x0, 0x0);
        gbc.writeMem(0x5147, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x46a0, gbc.sp());
        EXPECT(0x5149, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C0 0140
        gbc.setState(0xa006, 0x303f, 0x5c50, 0x7afe, 0x1e19, 0xf08d, 0x1, 0x0);
        gbc.writeMem(0xa006, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x303f, gbc.sp());
        EXPECT(0xa008, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa006));
        EXPECT(0xc0, gbc.readMem(0xa007));
        // CB C0 0141
        gbc.setState(0x508, 0x9fdd, 0x56b0, 0x4099, 0xa183, 0x9c3e, 0x0, 0x1);
        gbc.writeMem(0x508, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x9fdd, gbc.sp());
        EXPECT(0x50a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C0 0142
        gbc.setState(0x8aac, 0xbb4a, 0x2080, 0x5b4a, 0x4d18, 0xe1b5, 0x1, 0x1);
        gbc.writeMem(0x8aac, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0xbb4a, gbc.sp());
        EXPECT(0x8aae, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8aac));
        EXPECT(0xc0, gbc.readMem(0x8aad));
        // CB C0 0143
        gbc.setState(0x6e28, 0x17be, 0xd5e0, 0x2e79, 0x90f5, 0xc8cf, 0x1, 0x0);
        gbc.writeMem(0x6e28, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x17be, gbc.sp());
        EXPECT(0x6e2a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C0 0144
        gbc.setState(0x8444, 0x2ec4, 0x9c70, 0xb839, 0x777a, 0x6994, 0x1, 0x1);
        gbc.writeMem(0x8444, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x2ec4, gbc.sp());
        EXPECT(0x8446, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8444));
        EXPECT(0xc0, gbc.readMem(0x8445));
        // CB C0 0145
        gbc.setState(0xacc0, 0x49f4, 0x9fe0, 0x5865, 0xd153, 0xb11c, 0x1, 0x0);
        gbc.writeMem(0xacc0, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x49f4, gbc.sp());
        EXPECT(0xacc2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xacc0));
        EXPECT(0xc0, gbc.readMem(0xacc1));
        // CB C0 0146
        gbc.setState(0x93f, 0xf94b, 0x3ce0, 0x827e, 0x66b3, 0x25f2, 0x1, 0x0);
        gbc.writeMem(0x93f, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0xf94b, gbc.sp());
        EXPECT(0x941, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C0 0147
        gbc.setState(0x29b8, 0xeeca, 0xa50, 0x2ebd, 0xbaa, 0xc47, 0x1, 0x1);
        gbc.writeMem(0x29b8, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0xeeca, gbc.sp());
        EXPECT(0x29ba, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C0 0148
        gbc.setState(0x5d99, 0x871e, 0x3a00, 0x99fe, 0xf3d8, 0x981f, 0x0, 0x0);
        gbc.writeMem(0x5d99, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x871e, gbc.sp());
        EXPECT(0x5d9b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C0 0149
        gbc.setState(0xde98, 0xc0ff, 0x5a50, 0xe4c3, 0x4320, 0x8cec, 0x0, 0x1);
        gbc.writeMem(0xde98, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0xc0ff, gbc.sp());
        EXPECT(0xde9a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xde98));
        EXPECT(0xc0, gbc.readMem(0xde99));
        // CB C0 014A
        gbc.setState(0xb415, 0xea4f, 0xbac0, 0xe1a6, 0x111d, 0x943, 0x0, 0x1);
        gbc.writeMem(0xb415, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0xea4f, gbc.sp());
        EXPECT(0xb417, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb415));
        EXPECT(0xc0, gbc.readMem(0xb416));
        // CB C0 014B
        gbc.setState(0x716e, 0x850d, 0x9450, 0xbb08, 0xfc31, 0x5783, 0x1, 0x1);
        gbc.writeMem(0x716e, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x850d, gbc.sp());
        EXPECT(0x7170, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C0 014C
        gbc.setState(0x3641, 0xbc36, 0xb780, 0x6e1e, 0x8cf6, 0xe651, 0x1, 0x0);
        gbc.writeMem(0x3641, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0xbc36, gbc.sp());
        EXPECT(0x3643, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C0 014D
        gbc.setState(0x67a2, 0x6a68, 0xf760, 0x5a7, 0xc5d4, 0x3f04, 0x1, 0x0);
        gbc.writeMem(0x67a2, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x6a68, gbc.sp());
        EXPECT(0x67a4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C0 014E
        gbc.setState(0x8c67, 0x9f37, 0xe310, 0x7f8, 0x6a59, 0x4663, 0x0, 0x0);
        gbc.writeMem(0x8c67, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x9f37, gbc.sp());
        EXPECT(0x8c69, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8c67));
        EXPECT(0xc0, gbc.readMem(0x8c68));
        // CB C0 0150
        gbc.setState(0x1741, 0x4df, 0xb3d0, 0x8463, 0x93be, 0x520f, 0x1, 0x1);
        gbc.writeMem(0x1741, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x4df, gbc.sp());
        EXPECT(0x1743, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C0 0151
        gbc.setState(0xb8d1, 0x6672, 0x1940, 0x3fb9, 0x5183, 0xecb9, 0x1, 0x0);
        gbc.writeMem(0xb8d1, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x6672, gbc.sp());
        EXPECT(0xb8d3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb8d1));
        EXPECT(0xc0, gbc.readMem(0xb8d2));
        // CB C0 0152
        gbc.setState(0x2a35, 0xec8b, 0x370, 0xf0cd, 0x4554, 0x540a, 0x0, 0x0);
        gbc.writeMem(0x2a35, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0xec8b, gbc.sp());
        EXPECT(0x2a37, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C0 0153
        gbc.setState(0x35fc, 0xb0d3, 0x3000, 0x9a24, 0xafeb, 0xbad2, 0x1, 0x1);
        gbc.writeMem(0x35fc, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0xb0d3, gbc.sp());
        EXPECT(0x35fe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C0 0154
        gbc.setState(0x9f4b, 0x192, 0xa480, 0xb0e1, 0x1b1e, 0x4683, 0x1, 0x0);
        gbc.writeMem(0x9f4b, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x192, gbc.sp());
        EXPECT(0x9f4d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9f4b));
        EXPECT(0xc0, gbc.readMem(0x9f4c));
        // CB C0 0155
        gbc.setState(0xadcf, 0xc681, 0xf250, 0x6aa6, 0x9dd3, 0x62c6, 0x1, 0x0);
        gbc.writeMem(0xadcf, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0xc681, gbc.sp());
        EXPECT(0xadd1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xadcf));
        EXPECT(0xc0, gbc.readMem(0xadd0));
        // CB C0 0156
        gbc.setState(0xe079, 0xdde5, 0x6780, 0x91cd, 0xe7be, 0xa017, 0x0, 0x1);
        gbc.writeMem(0xe079, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0xdde5, gbc.sp());
        EXPECT(0xe07b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe079));
        EXPECT(0xc0, gbc.readMem(0xe07a));
        // CB C0 0157
        gbc.setState(0x711b, 0xf537, 0xba60, 0xb511, 0x4382, 0x6add, 0x1, 0x0);
        gbc.writeMem(0x711b, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0xf537, gbc.sp());
        EXPECT(0x711d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C0 0158
        gbc.setState(0x728c, 0xeade, 0x3010, 0x2f30, 0x43b4, 0x7971, 0x1, 0x1);
        gbc.writeMem(0x728c, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0xeade, gbc.sp());
        EXPECT(0x728e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C0 0159
        gbc.setState(0x79a9, 0x44ae, 0x87d0, 0x9bb9, 0xda80, 0x4b93, 0x1, 0x1);
        gbc.writeMem(0x79a9, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0x44ae, gbc.sp());
        EXPECT(0x79ab, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C0 015A
        gbc.setState(0x7d48, 0x6a38, 0x5fd0, 0xc0b7, 0x634b, 0x38da, 0x0, 0x1);
        gbc.writeMem(0x7d48, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x6a38, gbc.sp());
        EXPECT(0x7d4a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C0 015B
        gbc.setState(0x1348, 0xcaa9, 0x5390, 0x9b23, 0xdf12, 0xef8b, 0x1, 0x0);
        gbc.writeMem(0x1348, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0xcaa9, gbc.sp());
        EXPECT(0x134a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C0 015C
        gbc.setState(0x57f2, 0xcaf3, 0x780, 0x5c1b, 0xed33, 0x7d8, 0x1, 0x0);
        gbc.writeMem(0x57f2, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0xcaf3, gbc.sp());
        EXPECT(0x57f4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C0 015D
        gbc.setState(0xef6c, 0xea31, 0x53a0, 0x363f, 0xae6e, 0x8390, 0x0, 0x1);
        gbc.writeMem(0xef6c, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0xea31, gbc.sp());
        EXPECT(0xef6e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xef6c));
        EXPECT(0xc0, gbc.readMem(0xef6d));
        // CB C0 015E
        gbc.setState(0x5277, 0x7586, 0xa0c0, 0x3237, 0x745c, 0xc4eb, 0x1, 0x1);
        gbc.writeMem(0x5277, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x7586, gbc.sp());
        EXPECT(0x5279, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C0 015F
        gbc.setState(0x4e82, 0xad8f, 0x47b0, 0x55af, 0xeb13, 0x3963, 0x1, 0x1);
        gbc.writeMem(0x4e82, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0xad8f, gbc.sp());
        EXPECT(0x4e84, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C0 0160
        gbc.setState(0xbdd, 0x7179, 0x9f90, 0x3d5b, 0x927e, 0xd09c, 0x1, 0x0);
        gbc.writeMem(0xbdd, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x7179, gbc.sp());
        EXPECT(0xbdf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C0 0161
        gbc.setState(0xbcf7, 0x3166, 0x58f0, 0xbdd9, 0xb7cf, 0xf96e, 0x1, 0x1);
        gbc.writeMem(0xbcf7, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x3166, gbc.sp());
        EXPECT(0xbcf9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbcf7));
        EXPECT(0xc0, gbc.readMem(0xbcf8));
        // CB C0 0162
        gbc.setState(0x8b6e, 0xb5f4, 0xde60, 0xbc90, 0x8fd1, 0xf840, 0x0, 0x1);
        gbc.writeMem(0x8b6e, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0xb5f4, gbc.sp());
        EXPECT(0x8b70, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8b6e));
        EXPECT(0xc0, gbc.readMem(0x8b6f));
        // CB C0 0163
        gbc.setState(0x88d3, 0x2c08, 0x8240, 0xa66a, 0x18de, 0x5530, 0x1, 0x1);
        gbc.writeMem(0x88d3, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x2c08, gbc.sp());
        EXPECT(0x88d5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x88d3));
        EXPECT(0xc0, gbc.readMem(0x88d4));
        // CB C0 0164
        gbc.setState(0xb491, 0x1c8f, 0x9be0, 0x4fd6, 0x2dc6, 0xa885, 0x0, 0x0);
        gbc.writeMem(0xb491, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x1c8f, gbc.sp());
        EXPECT(0xb493, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb491));
        EXPECT(0xc0, gbc.readMem(0xb492));
        // CB C0 0165
        gbc.setState(0x79b4, 0xef05, 0x23f0, 0x9a44, 0xbc5a, 0x8960, 0x1, 0x1);
        gbc.writeMem(0x79b4, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0xef05, gbc.sp());
        EXPECT(0x79b6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C0 0166
        gbc.setState(0x315f, 0x899b, 0xefd0, 0xd418, 0x6771, 0x446f, 0x1, 0x0);
        gbc.writeMem(0x315f, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x899b, gbc.sp());
        EXPECT(0x3161, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C0 0167
        gbc.setState(0x2185, 0xd832, 0x83d0, 0xc904, 0x4ad8, 0x30dd, 0x1, 0x1);
        gbc.writeMem(0x2185, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0xd832, gbc.sp());
        EXPECT(0x2187, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C0 0168
        gbc.setState(0xadc1, 0x7d85, 0x7a40, 0xefdc, 0xecc5, 0x6dab, 0x0, 0x1);
        gbc.writeMem(0xadc1, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x7d85, gbc.sp());
        EXPECT(0xadc3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xadc1));
        EXPECT(0xc0, gbc.readMem(0xadc2));
        // CB C0 0169
        gbc.setState(0x481d, 0xa3ee, 0xd280, 0x7b92, 0x91c1, 0x66b9, 0x0, 0x0);
        gbc.writeMem(0x481d, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0xa3ee, gbc.sp());
        EXPECT(0x481f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C0 016A
        gbc.setState(0x496d, 0x1ebb, 0x67b0, 0x3596, 0x49b6, 0x7d9b, 0x0, 0x0);
        gbc.writeMem(0x496d, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x1ebb, gbc.sp());
        EXPECT(0x496f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C0 016B
        gbc.setState(0x518c, 0x7678, 0xfb70, 0xd4, 0xfb61, 0x446, 0x1, 0x1);
        gbc.writeMem(0x518c, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x7678, gbc.sp());
        EXPECT(0x518e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C0 016C
        gbc.setState(0x32d4, 0x1ad5, 0x8aa0, 0xefda, 0x7131, 0x386a, 0x0, 0x0);
        gbc.writeMem(0x32d4, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x1ad5, gbc.sp());
        EXPECT(0x32d6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C0 016D
        gbc.setState(0xd6d3, 0x8ee5, 0x6de0, 0x7148, 0x672c, 0xadbe, 0x0, 0x0);
        gbc.writeMem(0xd6d3, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0x8ee5, gbc.sp());
        EXPECT(0xd6d5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd6d3));
        EXPECT(0xc0, gbc.readMem(0xd6d4));
        // CB C0 016E
        gbc.setState(0xcd33, 0xfaa3, 0x4020, 0x6365, 0x7e32, 0xb07d, 0x1, 0x1);
        gbc.writeMem(0xcd33, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0xfaa3, gbc.sp());
        EXPECT(0xcd35, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcd33));
        EXPECT(0xc0, gbc.readMem(0xcd34));
        // CB C0 016F
        gbc.setState(0x7ac9, 0xa8f4, 0xa060, 0xc888, 0xf755, 0xe70, 0x1, 0x0);
        gbc.writeMem(0x7ac9, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0xa8f4, gbc.sp());
        EXPECT(0x7acb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C0 0170
        gbc.setState(0x9938, 0xa7b0, 0xff90, 0x6023, 0x339, 0x77eb, 0x1, 0x0);
        gbc.writeMem(0x9938, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0xa7b0, gbc.sp());
        EXPECT(0x993a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9938));
        EXPECT(0xc0, gbc.readMem(0x9939));
        // CB C0 0171
        gbc.setState(0x16a9, 0xb554, 0xba90, 0xa600, 0x883d, 0x429b, 0x1, 0x1);
        gbc.writeMem(0x16a9, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0xb554, gbc.sp());
        EXPECT(0x16ab, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C0 0172
        gbc.setState(0x24bd, 0x9346, 0xc710, 0x132d, 0xbee1, 0x32ec, 0x0, 0x1);
        gbc.writeMem(0x24bd, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x9346, gbc.sp());
        EXPECT(0x24bf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C0 0173
        gbc.setState(0xd7aa, 0xbcc6, 0x8120, 0x398a, 0x9851, 0x87a6, 0x1, 0x0);
        gbc.writeMem(0xd7aa, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0xbcc6, gbc.sp());
        EXPECT(0xd7ac, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd7aa));
        EXPECT(0xc0, gbc.readMem(0xd7ab));
        // CB C0 0174
        gbc.setState(0x1055, 0x71dd, 0x8810, 0xac14, 0xdaf5, 0xf362, 0x0, 0x0);
        gbc.writeMem(0x1055, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x71dd, gbc.sp());
        EXPECT(0x1057, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C0 0175
        gbc.setState(0xc92b, 0x699b, 0x4be0, 0x7c98, 0x98c9, 0x1381, 0x1, 0x0);
        gbc.writeMem(0xc92b, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x699b, gbc.sp());
        EXPECT(0xc92d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc92b));
        EXPECT(0xc0, gbc.readMem(0xc92c));
        // CB C0 0176
        gbc.setState(0xab46, 0xd0e3, 0x8fd0, 0x6006, 0x6b64, 0xcf97, 0x1, 0x0);
        gbc.writeMem(0xab46, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0xd0e3, gbc.sp());
        EXPECT(0xab48, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xab46));
        EXPECT(0xc0, gbc.readMem(0xab47));
        // CB C0 0177
        gbc.setState(0xc456, 0x8744, 0xa1a0, 0x1883, 0x811, 0x58e4, 0x1, 0x1);
        gbc.writeMem(0xc456, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x8744, gbc.sp());
        EXPECT(0xc458, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc456));
        EXPECT(0xc0, gbc.readMem(0xc457));
        // CB C0 0178
        gbc.setState(0xb3b2, 0x706a, 0x91b0, 0xcb47, 0xc95b, 0x1d1a, 0x0, 0x0);
        gbc.writeMem(0xb3b2, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x706a, gbc.sp());
        EXPECT(0xb3b4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb3b2));
        EXPECT(0xc0, gbc.readMem(0xb3b3));
        // CB C0 0179
        gbc.setState(0x32b5, 0xc309, 0xc050, 0x4a91, 0xfece, 0xbf5a, 0x0, 0x1);
        gbc.writeMem(0x32b5, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0xc309, gbc.sp());
        EXPECT(0x32b7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C0 017A
        gbc.setState(0x9bcb, 0xad0e, 0x5d10, 0x33a6, 0xe123, 0xb948, 0x0, 0x0);
        gbc.writeMem(0x9bcb, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0xad0e, gbc.sp());
        EXPECT(0x9bcd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9bcb));
        EXPECT(0xc0, gbc.readMem(0x9bcc));
        // CB C0 017B
        gbc.setState(0x92d2, 0xbab7, 0x34a0, 0x95, 0xbdd1, 0xf976, 0x0, 0x0);
        gbc.writeMem(0x92d2, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0xbab7, gbc.sp());
        EXPECT(0x92d4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x92d2));
        EXPECT(0xc0, gbc.readMem(0x92d3));
        // CB C0 017C
        gbc.setState(0xaa0e, 0x1ca5, 0x45b0, 0x6488, 0xb615, 0x4242, 0x1, 0x0);
        gbc.writeMem(0xaa0e, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x1ca5, gbc.sp());
        EXPECT(0xaa10, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaa0e));
        EXPECT(0xc0, gbc.readMem(0xaa0f));
        // CB C0 017D
        gbc.setState(0x1fab, 0x8f26, 0xfc10, 0x7e6c, 0xab24, 0x9edd, 0x0, 0x0);
        gbc.writeMem(0x1fab, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x8f26, gbc.sp());
        EXPECT(0x1fad, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C0 017E
        gbc.setState(0x562d, 0xd766, 0x95f0, 0xaeae, 0x2be8, 0x850e, 0x1, 0x1);
        gbc.writeMem(0x562d, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0xd766, gbc.sp());
        EXPECT(0x562f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C0 017F
        gbc.setState(0x70e5, 0xad03, 0x8fb0, 0x6f7, 0x7a2b, 0xfe6c, 0x0, 0x1);
        gbc.writeMem(0x70e5, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0xad03, gbc.sp());
        EXPECT(0x70e7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C0 0180
        gbc.setState(0x6afa, 0x15e9, 0xb070, 0x9e30, 0xd4d1, 0x30d, 0x0, 0x1);
        gbc.writeMem(0x6afa, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x15e9, gbc.sp());
        EXPECT(0x6afc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C0 0181
        gbc.setState(0x70db, 0x47ac, 0x9e50, 0x3b33, 0x9b6e, 0x8602, 0x1, 0x1);
        gbc.writeMem(0x70db, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x47ac, gbc.sp());
        EXPECT(0x70dd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C0 0182
        gbc.setState(0xb282, 0xd25e, 0x3f80, 0xbb8f, 0x1c2f, 0xbce4, 0x0, 0x1);
        gbc.writeMem(0xb282, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0xd25e, gbc.sp());
        EXPECT(0xb284, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb282));
        EXPECT(0xc0, gbc.readMem(0xb283));
        // CB C0 0183
        gbc.setState(0x9ac6, 0xeb9a, 0x5b40, 0xab98, 0x9fe0, 0x9e44, 0x0, 0x1);
        gbc.writeMem(0x9ac6, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0xeb9a, gbc.sp());
        EXPECT(0x9ac8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9ac6));
        EXPECT(0xc0, gbc.readMem(0x9ac7));
        // CB C0 0184
        gbc.setState(0x5439, 0xd042, 0x7160, 0xd5ad, 0x50f6, 0xa9ab, 0x1, 0x0);
        gbc.writeMem(0x5439, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0xd042, gbc.sp());
        EXPECT(0x543b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C0 0185
        gbc.setState(0xbf5c, 0x4186, 0x1ed0, 0xe7a, 0xa8f, 0x13ee, 0x0, 0x0);
        gbc.writeMem(0xbf5c, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x4186, gbc.sp());
        EXPECT(0xbf5e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbf5c));
        EXPECT(0xc0, gbc.readMem(0xbf5d));
        // CB C0 0186
        gbc.setState(0x61a7, 0x4d2, 0x4550, 0x1ff, 0xe00f, 0x38a7, 0x1, 0x0);
        gbc.writeMem(0x61a7, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x4d2, gbc.sp());
        EXPECT(0x61a9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C0 0187
        gbc.setState(0x64fb, 0xd3a, 0xaa30, 0xe58d, 0x807e, 0xf13b, 0x0, 0x0);
        gbc.writeMem(0x64fb, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0xd3a, gbc.sp());
        EXPECT(0x64fd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C0 0188
        gbc.setState(0x3e0, 0xe7de, 0xef20, 0xcafe, 0xf032, 0x1d2d, 0x0, 0x1);
        gbc.writeMem(0x3e0, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0xe7de, gbc.sp());
        EXPECT(0x3e2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C0 0189
        gbc.setState(0xc165, 0x43a8, 0xb380, 0x62c4, 0xd5f8, 0xa494, 0x1, 0x1);
        gbc.writeMem(0xc165, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x43a8, gbc.sp());
        EXPECT(0xc167, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc165));
        EXPECT(0xc0, gbc.readMem(0xc166));
        // CB C0 018B
        gbc.setState(0xae61, 0x8481, 0x4100, 0x50f9, 0x652b, 0xb799, 0x0, 0x1);
        gbc.writeMem(0xae61, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x8481, gbc.sp());
        EXPECT(0xae63, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xae61));
        EXPECT(0xc0, gbc.readMem(0xae62));
        // CB C0 018C
        gbc.setState(0x1d74, 0xd653, 0x1c10, 0xca7b, 0x56be, 0x18d7, 0x0, 0x0);
        gbc.writeMem(0x1d74, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0xd653, gbc.sp());
        EXPECT(0x1d76, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C0 018E
        gbc.setState(0x67f9, 0x4984, 0x8ec0, 0x965d, 0x21b5, 0x2c95, 0x0, 0x1);
        gbc.writeMem(0x67f9, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x4984, gbc.sp());
        EXPECT(0x67fb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C0 018F
        gbc.setState(0xc574, 0xa3c2, 0x2130, 0xb7f1, 0xc6d6, 0x3965, 0x1, 0x0);
        gbc.writeMem(0xc574, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0xa3c2, gbc.sp());
        EXPECT(0xc576, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc574));
        EXPECT(0xc0, gbc.readMem(0xc575));
        // CB C0 0190
        gbc.setState(0x8583, 0x5968, 0xbf0, 0xa258, 0x633c, 0x2dad, 0x1, 0x0);
        gbc.writeMem(0x8583, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x5968, gbc.sp());
        EXPECT(0x8585, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8583));
        EXPECT(0xc0, gbc.readMem(0x8584));
        // CB C0 0191
        gbc.setState(0x7869, 0x5c10, 0x3ab0, 0xb325, 0xfb93, 0xe6a0, 0x1, 0x1);
        gbc.writeMem(0x7869, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x5c10, gbc.sp());
        EXPECT(0x786b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C0 0192
        gbc.setState(0x8410, 0x132, 0xbda0, 0xf9b7, 0x943, 0x972d, 0x0, 0x0);
        gbc.writeMem(0x8410, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x132, gbc.sp());
        EXPECT(0x8412, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8410));
        EXPECT(0xc0, gbc.readMem(0x8411));
        // CB C0 0193
        gbc.setState(0xb102, 0x695, 0x18d0, 0xabc3, 0x1200, 0xa4a6, 0x1, 0x0);
        gbc.writeMem(0xb102, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x695, gbc.sp());
        EXPECT(0xb104, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb102));
        EXPECT(0xc0, gbc.readMem(0xb103));
        // CB C0 0195
        gbc.setState(0x79ad, 0xbd67, 0x88a0, 0x31e8, 0x668c, 0x376b, 0x1, 0x1);
        gbc.writeMem(0x79ad, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0xbd67, gbc.sp());
        EXPECT(0x79af, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C0 0196
        gbc.setState(0x4bf7, 0xc88c, 0x6c10, 0x843d, 0xcb04, 0x5d19, 0x1, 0x1);
        gbc.writeMem(0x4bf7, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0xc88c, gbc.sp());
        EXPECT(0x4bf9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C0 0197
        gbc.setState(0xe27, 0xab4b, 0x2aa0, 0xf8dc, 0x938a, 0x4086, 0x0, 0x0);
        gbc.writeMem(0xe27, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0xab4b, gbc.sp());
        EXPECT(0xe29, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C0 0198
        gbc.setState(0xbf1c, 0x1f11, 0xac40, 0xa724, 0x914e, 0x9362, 0x1, 0x1);
        gbc.writeMem(0xbf1c, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x1f11, gbc.sp());
        EXPECT(0xbf1e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbf1c));
        EXPECT(0xc0, gbc.readMem(0xbf1d));
        // CB C0 0199
        gbc.setState(0x2815, 0xc311, 0x8e30, 0x8e02, 0x9b4b, 0x7272, 0x1, 0x0);
        gbc.writeMem(0x2815, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0xc311, gbc.sp());
        EXPECT(0x2817, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C0 019A
        gbc.setState(0x2f10, 0xe11a, 0xf9d0, 0x54c6, 0x7355, 0x3cea, 0x0, 0x1);
        gbc.writeMem(0x2f10, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0xe11a, gbc.sp());
        EXPECT(0x2f12, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C0 019C
        gbc.setState(0xe833, 0x79ca, 0xfdf0, 0x56de, 0xcf9f, 0xb6d4, 0x1, 0x1);
        gbc.writeMem(0xe833, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x79ca, gbc.sp());
        EXPECT(0xe835, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe833));
        EXPECT(0xc0, gbc.readMem(0xe834));
        // CB C0 019D
        gbc.setState(0x5326, 0x4136, 0x8fd0, 0x1134, 0x779d, 0xf7c6, 0x0, 0x1);
        gbc.writeMem(0x5326, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x4136, gbc.sp());
        EXPECT(0x5328, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C0 019E
        gbc.setState(0x8e80, 0x8fc7, 0x4380, 0xbd8f, 0x9a61, 0xf63f, 0x1, 0x0);
        gbc.writeMem(0x8e80, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0x8fc7, gbc.sp());
        EXPECT(0x8e82, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8e80));
        EXPECT(0xc0, gbc.readMem(0x8e81));
        // CB C0 019F
        gbc.setState(0x39fc, 0x7997, 0x69a0, 0x1deb, 0x36c7, 0x4031, 0x0, 0x1);
        gbc.writeMem(0x39fc, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x7997, gbc.sp());
        EXPECT(0x39fe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C0 01A0
        gbc.setState(0xdf06, 0x7677, 0x750, 0x10bd, 0x30de, 0xeb55, 0x0, 0x1);
        gbc.writeMem(0xdf06, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x7677, gbc.sp());
        EXPECT(0xdf08, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdf06));
        EXPECT(0xc0, gbc.readMem(0xdf07));
        // CB C0 01A1
        gbc.setState(0x41ab, 0x228b, 0xdc30, 0xf284, 0x331d, 0x9b8, 0x1, 0x1);
        gbc.writeMem(0x41ab, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x228b, gbc.sp());
        EXPECT(0x41ad, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C0 01A2
        gbc.setState(0x5afe, 0xef76, 0x50d0, 0x19f1, 0xec47, 0x56b7, 0x0, 0x1);
        gbc.writeMem(0x5afe, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0xef76, gbc.sp());
        EXPECT(0x5b00, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C0 01A3
        gbc.setState(0xa94c, 0xc690, 0xd370, 0xd0d9, 0x57ff, 0xd493, 0x0, 0x0);
        gbc.writeMem(0xa94c, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0xc690, gbc.sp());
        EXPECT(0xa94e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa94c));
        EXPECT(0xc0, gbc.readMem(0xa94d));
        // CB C0 01A4
        gbc.setState(0x5ff5, 0x6fd2, 0x98a0, 0xf380, 0x213f, 0x5b4a, 0x1, 0x0);
        gbc.writeMem(0x5ff5, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x6fd2, gbc.sp());
        EXPECT(0x5ff7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C0 01A5
        gbc.setState(0x9c6f, 0x749c, 0xfe50, 0x6bc5, 0xff2c, 0x4292, 0x0, 0x0);
        gbc.writeMem(0x9c6f, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x749c, gbc.sp());
        EXPECT(0x9c71, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9c6f));
        EXPECT(0xc0, gbc.readMem(0x9c70));
        // CB C0 01A6
        gbc.setState(0xed2f, 0x7d5b, 0xbc90, 0xef75, 0x413b, 0x3604, 0x0, 0x0);
        gbc.writeMem(0xed2f, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x7d5b, gbc.sp());
        EXPECT(0xed31, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xed2f));
        EXPECT(0xc0, gbc.readMem(0xed30));
        // CB C0 01A7
        gbc.setState(0x66ef, 0xe6, 0x61c0, 0xb718, 0x9729, 0x9997, 0x0, 0x0);
        gbc.writeMem(0x66ef, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0xe6, gbc.sp());
        EXPECT(0x66f1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C0 01A8
        gbc.setState(0x5391, 0xc78e, 0xce40, 0x7cce, 0x6793, 0x66a4, 0x0, 0x1);
        gbc.writeMem(0x5391, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0xc78e, gbc.sp());
        EXPECT(0x5393, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C0 01A9
        gbc.setState(0xc9d6, 0x4d41, 0x7ee0, 0x4957, 0xd00f, 0xa7bc, 0x0, 0x0);
        gbc.writeMem(0xc9d6, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x4d41, gbc.sp());
        EXPECT(0xc9d8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc9d6));
        EXPECT(0xc0, gbc.readMem(0xc9d7));
        // CB C0 01AA
        gbc.setState(0xa6d, 0x277f, 0xd660, 0x6a5f, 0x9060, 0xd6dd, 0x1, 0x1);
        gbc.writeMem(0xa6d, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x277f, gbc.sp());
        EXPECT(0xa6f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C0 01AB
        gbc.setState(0x3d15, 0x839e, 0x5690, 0xc3fb, 0x31e6, 0x343f, 0x1, 0x1);
        gbc.writeMem(0x3d15, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0x839e, gbc.sp());
        EXPECT(0x3d17, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C0 01AC
        gbc.setState(0x9313, 0x5c86, 0xdff0, 0xead9, 0x4d5e, 0x3bba, 0x1, 0x0);
        gbc.writeMem(0x9313, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0x5c86, gbc.sp());
        EXPECT(0x9315, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9313));
        EXPECT(0xc0, gbc.readMem(0x9314));
        // CB C0 01AD
        gbc.setState(0x2efe, 0x373, 0xfbf0, 0x9e3, 0x54d3, 0x5f2c, 0x1, 0x0);
        gbc.writeMem(0x2efe, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x373, gbc.sp());
        EXPECT(0x2f00, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C0 01AE
        gbc.setState(0x2274, 0x6656, 0xd110, 0xf99b, 0x7eff, 0xf0a8, 0x1, 0x1);
        gbc.writeMem(0x2274, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x6656, gbc.sp());
        EXPECT(0x2276, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C0 01AF
        gbc.setState(0x772a, 0xb4d7, 0xf690, 0x8b6, 0xa76b, 0xeb3, 0x0, 0x0);
        gbc.writeMem(0x772a, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0xb4d7, gbc.sp());
        EXPECT(0x772c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C0 01B0
        gbc.setState(0xb777, 0x9d7a, 0x1850, 0xdf99, 0xd807, 0x22ba, 0x0, 0x0);
        gbc.writeMem(0xb777, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0x9d7a, gbc.sp());
        EXPECT(0xb779, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb777));
        EXPECT(0xc0, gbc.readMem(0xb778));
        // CB C0 01B1
        gbc.setState(0x32be, 0x7710, 0xcb60, 0x6d2, 0xd906, 0x9f46, 0x1, 0x1);
        gbc.writeMem(0x32be, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x7710, gbc.sp());
        EXPECT(0x32c0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C0 01B2
        gbc.setState(0x85a3, 0x669b, 0x4f0, 0xaa5c, 0xbc38, 0x87e8, 0x1, 0x0);
        gbc.writeMem(0x85a3, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x669b, gbc.sp());
        EXPECT(0x85a5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x85a3));
        EXPECT(0xc0, gbc.readMem(0x85a4));
        // CB C0 01B3
        gbc.setState(0x40db, 0x8326, 0xbd40, 0xdcce, 0x18cc, 0xf1cc, 0x1, 0x1);
        gbc.writeMem(0x40db, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x8326, gbc.sp());
        EXPECT(0x40dd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C0 01B4
        gbc.setState(0xa1ee, 0x483c, 0x1100, 0x2c5, 0x4bb, 0x7e1, 0x1, 0x1);
        gbc.writeMem(0xa1ee, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0x483c, gbc.sp());
        EXPECT(0xa1f0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa1ee));
        EXPECT(0xc0, gbc.readMem(0xa1ef));
        // CB C0 01B5
        gbc.setState(0xc9f2, 0x931b, 0x6580, 0xc6dd, 0x5e43, 0xda48, 0x1, 0x1);
        gbc.writeMem(0xc9f2, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0x931b, gbc.sp());
        EXPECT(0xc9f4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc9f2));
        EXPECT(0xc0, gbc.readMem(0xc9f3));
        // CB C0 01B6
        gbc.setState(0x2361, 0x59d, 0x5ae0, 0x8a99, 0x16f5, 0xf635, 0x0, 0x1);
        gbc.writeMem(0x2361, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x59d, gbc.sp());
        EXPECT(0x2363, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C0 01B7
        gbc.setState(0x7908, 0xb63d, 0x3020, 0x1bfc, 0xc4fe, 0xc311, 0x0, 0x1);
        gbc.writeMem(0x7908, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0xb63d, gbc.sp());
        EXPECT(0x790a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C0 01B8
        gbc.setState(0x4c86, 0x228c, 0x5510, 0xe013, 0xb05a, 0x581f, 0x1, 0x1);
        gbc.writeMem(0x4c86, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x228c, gbc.sp());
        EXPECT(0x4c88, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C0 01B9
        gbc.setState(0xef31, 0xcf98, 0x4470, 0x5ec1, 0x3051, 0xe80f, 0x0, 0x0);
        gbc.writeMem(0xef31, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0xcf98, gbc.sp());
        EXPECT(0xef33, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xef31));
        EXPECT(0xc0, gbc.readMem(0xef32));
        // CB C0 01BA
        gbc.setState(0xbd6c, 0xb5be, 0xfaa0, 0xb2a8, 0x402b, 0x51e2, 0x1, 0x1);
        gbc.writeMem(0xbd6c, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0xb5be, gbc.sp());
        EXPECT(0xbd6e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbd6c));
        EXPECT(0xc0, gbc.readMem(0xbd6d));
        // CB C0 01BB
        gbc.setState(0x4087, 0x61fd, 0x31b0, 0xd236, 0x2523, 0x879f, 0x0, 0x1);
        gbc.writeMem(0x4087, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x61fd, gbc.sp());
        EXPECT(0x4089, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C0 01BC
        gbc.setState(0x7aa5, 0xa3c, 0x40e0, 0x825e, 0x326c, 0xd191, 0x1, 0x1);
        gbc.writeMem(0x7aa5, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0xa3c, gbc.sp());
        EXPECT(0x7aa7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C0 01BD
        gbc.setState(0x75d3, 0x8639, 0xdf00, 0xbf61, 0xad56, 0x8948, 0x1, 0x1);
        gbc.writeMem(0x75d3, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0x8639, gbc.sp());
        EXPECT(0x75d5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C0 01BE
        gbc.setState(0x9719, 0xc729, 0xe420, 0x65b5, 0xb76a, 0x1566, 0x1, 0x0);
        gbc.writeMem(0x9719, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0xc729, gbc.sp());
        EXPECT(0x971b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9719));
        EXPECT(0xc0, gbc.readMem(0x971a));
        // CB C0 01BF
        gbc.setState(0xb5cb, 0xf525, 0x4d50, 0xfebd, 0xbef1, 0xbd0a, 0x1, 0x1);
        gbc.writeMem(0xb5cb, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0xf525, gbc.sp());
        EXPECT(0xb5cd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb5cb));
        EXPECT(0xc0, gbc.readMem(0xb5cc));
        // CB C0 01C0
        gbc.setState(0xd990, 0x6b2f, 0x5030, 0x8aca, 0x1d5f, 0xa7f, 0x0, 0x0);
        gbc.writeMem(0xd990, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x6b2f, gbc.sp());
        EXPECT(0xd992, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd990));
        EXPECT(0xc0, gbc.readMem(0xd991));
        // CB C0 01C1
        gbc.setState(0xcc3e, 0xb34e, 0x1e50, 0x7add, 0xfb91, 0x172, 0x1, 0x0);
        gbc.writeMem(0xcc3e, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0xb34e, gbc.sp());
        EXPECT(0xcc40, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcc3e));
        EXPECT(0xc0, gbc.readMem(0xcc3f));
        // CB C0 01C3
        gbc.setState(0xbc5b, 0x9f4a, 0x82b0, 0x901, 0x2fa1, 0xdb32, 0x1, 0x0);
        gbc.writeMem(0xbc5b, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x9f4a, gbc.sp());
        EXPECT(0xbc5d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbc5b));
        EXPECT(0xc0, gbc.readMem(0xbc5c));
        // CB C0 01C4
        gbc.setState(0x6552, 0xc2ee, 0x7d0, 0x6071, 0x748c, 0xdbdd, 0x0, 0x1);
        gbc.writeMem(0x6552, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0xc2ee, gbc.sp());
        EXPECT(0x6554, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C0 01C5
        gbc.setState(0xab8f, 0x7e4c, 0xcb20, 0x7a53, 0x767c, 0x4ca0, 0x0, 0x1);
        gbc.writeMem(0xab8f, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x7e4c, gbc.sp());
        EXPECT(0xab91, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xab8f));
        EXPECT(0xc0, gbc.readMem(0xab90));
        // CB C0 01C6
        gbc.setState(0x92c, 0x5926, 0xf6c0, 0xb10f, 0x45f0, 0xf526, 0x1, 0x1);
        gbc.writeMem(0x92c, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x5926, gbc.sp());
        EXPECT(0x92e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C0 01C7
        gbc.setState(0xee89, 0x76d, 0x7f0, 0x8ed4, 0x8aa4, 0xb2cf, 0x1, 0x0);
        gbc.writeMem(0xee89, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x76d, gbc.sp());
        EXPECT(0xee8b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xee89));
        EXPECT(0xc0, gbc.readMem(0xee8a));
        // CB C0 01C8
        gbc.setState(0x3127, 0x77d7, 0x4f70, 0xeb66, 0xf1e6, 0x29b2, 0x0, 0x0);
        gbc.writeMem(0x3127, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x77d7, gbc.sp());
        EXPECT(0x3129, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C0 01C9
        gbc.setState(0x256, 0xf0b2, 0xebd0, 0x376, 0xbb15, 0xd27a, 0x0, 0x0);
        gbc.writeMem(0x256, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0xf0b2, gbc.sp());
        EXPECT(0x258, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C0 01CA
        gbc.setState(0x56d2, 0xfc2b, 0xc600, 0x5d7d, 0xfbcf, 0xe063, 0x0, 0x1);
        gbc.writeMem(0x56d2, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0xfc2b, gbc.sp());
        EXPECT(0x56d4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C0 01CB
        gbc.setState(0xe5e0, 0xff2c, 0xcd10, 0x5fe5, 0x9a41, 0x4579, 0x0, 0x1);
        gbc.writeMem(0xe5e0, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0xff2c, gbc.sp());
        EXPECT(0xe5e2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe5e0));
        EXPECT(0xc0, gbc.readMem(0xe5e1));
        // CB C0 01CC
        gbc.setState(0x776d, 0xb92f, 0xa7b0, 0x4df7, 0x1566, 0x4f64, 0x1, 0x1);
        gbc.writeMem(0x776d, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0xb92f, gbc.sp());
        EXPECT(0x776f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C0 01CD
        gbc.setState(0x39cb, 0xc961, 0xb9a0, 0x8001, 0x97cf, 0xe16, 0x1, 0x1);
        gbc.writeMem(0x39cb, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0xc961, gbc.sp());
        EXPECT(0x39cd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C0 01CE
        gbc.setState(0x3830, 0x8fb4, 0x18e0, 0xdcce, 0x2d01, 0x24c7, 0x0, 0x0);
        gbc.writeMem(0x3830, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x8fb4, gbc.sp());
        EXPECT(0x3832, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C0 01CF
        gbc.setState(0xdb64, 0x88d7, 0xc530, 0x5b07, 0x457c, 0xf750, 0x1, 0x0);
        gbc.writeMem(0xdb64, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x88d7, gbc.sp());
        EXPECT(0xdb66, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdb64));
        EXPECT(0xc0, gbc.readMem(0xdb65));
        // CB C0 01D0
        gbc.setState(0x5fa4, 0x26fb, 0xc3f0, 0xbc6d, 0xab51, 0x9ae1, 0x1, 0x1);
        gbc.writeMem(0x5fa4, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0x26fb, gbc.sp());
        EXPECT(0x5fa6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C0 01D1
        gbc.setState(0xec0a, 0x3a87, 0x2a0, 0xfaf5, 0x3aa1, 0xaf1, 0x0, 0x0);
        gbc.writeMem(0xec0a, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x3a87, gbc.sp());
        EXPECT(0xec0c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xec0a));
        EXPECT(0xc0, gbc.readMem(0xec0b));
        // CB C0 01D2
        gbc.setState(0x4206, 0xeabd, 0xbbf0, 0x96ab, 0x5ca7, 0xccf1, 0x0, 0x1);
        gbc.writeMem(0x4206, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0xeabd, gbc.sp());
        EXPECT(0x4208, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C0 01D3
        gbc.setState(0x3d5d, 0xf032, 0x2d50, 0x2b73, 0xe479, 0xb1b2, 0x1, 0x0);
        gbc.writeMem(0x3d5d, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0xf032, gbc.sp());
        EXPECT(0x3d5f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C0 01D4
        gbc.setState(0x3416, 0x61e7, 0xb1d0, 0x6e79, 0xe387, 0xa8f6, 0x1, 0x1);
        gbc.writeMem(0x3416, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x61e7, gbc.sp());
        EXPECT(0x3418, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C0 01D5
        gbc.setState(0x8623, 0x5dc1, 0xe300, 0x91d3, 0x6f98, 0x626e, 0x1, 0x0);
        gbc.writeMem(0x8623, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x5dc1, gbc.sp());
        EXPECT(0x8625, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8623));
        EXPECT(0xc0, gbc.readMem(0x8624));
        // CB C0 01D6
        gbc.setState(0xc4bb, 0x88fd, 0x3400, 0x67f1, 0xb8bd, 0x547c, 0x0, 0x0);
        gbc.writeMem(0xc4bb, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x88fd, gbc.sp());
        EXPECT(0xc4bd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc4bb));
        EXPECT(0xc0, gbc.readMem(0xc4bc));
        // CB C0 01D7
        gbc.setState(0x3258, 0xfd17, 0x1050, 0x7c9a, 0x86fd, 0x90d7, 0x0, 0x1);
        gbc.writeMem(0x3258, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0xfd17, gbc.sp());
        EXPECT(0x325a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C0 01D8
        gbc.setState(0x8bce, 0x7765, 0x2bf0, 0xafe5, 0x9826, 0x8216, 0x0, 0x0);
        gbc.writeMem(0x8bce, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x7765, gbc.sp());
        EXPECT(0x8bd0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8bce));
        EXPECT(0xc0, gbc.readMem(0x8bcf));
        // CB C0 01D9
        gbc.setState(0x8ce, 0xa6c7, 0x620, 0xc70e, 0x644, 0x14fb, 0x1, 0x1);
        gbc.writeMem(0x8ce, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0xa6c7, gbc.sp());
        EXPECT(0x8d0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C0 01DA
        gbc.setState(0x2b9a, 0xf489, 0x9a30, 0x1fda, 0xd082, 0x6774, 0x0, 0x1);
        gbc.writeMem(0x2b9a, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0xf489, gbc.sp());
        EXPECT(0x2b9c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C0 01DB
        gbc.setState(0x9570, 0x2c1d, 0xc5a0, 0xe18d, 0x1f40, 0x28db, 0x1, 0x0);
        gbc.writeMem(0x9570, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x2c1d, gbc.sp());
        EXPECT(0x9572, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9570));
        EXPECT(0xc0, gbc.readMem(0x9571));
        // CB C0 01DC
        gbc.setState(0x63c8, 0xf7ad, 0xdbd0, 0xe39, 0x980c, 0x7c70, 0x1, 0x1);
        gbc.writeMem(0x63c8, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0xf7ad, gbc.sp());
        EXPECT(0x63ca, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C0 01DD
        gbc.setState(0x7be2, 0x7f0a, 0xd020, 0x2f59, 0xcd8e, 0x25e, 0x0, 0x1);
        gbc.writeMem(0x7be2, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x7f0a, gbc.sp());
        EXPECT(0x7be4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C0 01DE
        gbc.setState(0x6269, 0x6f97, 0x300, 0xb95e, 0xb379, 0xdc85, 0x1, 0x0);
        gbc.writeMem(0x6269, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x6f97, gbc.sp());
        EXPECT(0x626b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C0 01DF
        gbc.setState(0xaa23, 0x6772, 0x6580, 0xb5db, 0xfce5, 0x745a, 0x1, 0x0);
        gbc.writeMem(0xaa23, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x6772, gbc.sp());
        EXPECT(0xaa25, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaa23));
        EXPECT(0xc0, gbc.readMem(0xaa24));
        // CB C0 01E0
        gbc.setState(0x98ea, 0xef54, 0x660, 0xf741, 0xdbed, 0xa369, 0x0, 0x1);
        gbc.writeMem(0x98ea, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0xef54, gbc.sp());
        EXPECT(0x98ec, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x98ea));
        EXPECT(0xc0, gbc.readMem(0x98eb));
        // CB C0 01E1
        gbc.setState(0x68e3, 0x422b, 0x7030, 0x212d, 0x6c21, 0x1291, 0x1, 0x0);
        gbc.writeMem(0x68e3, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x422b, gbc.sp());
        EXPECT(0x68e5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C0 01E2
        gbc.setState(0x41, 0x966, 0xa850, 0xcd86, 0x7165, 0x55c3, 0x1, 0x1);
        gbc.writeMem(0x41, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x966, gbc.sp());
        EXPECT(0x43, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C0 01E3
        gbc.setState(0x6611, 0xba6c, 0x7e60, 0x2a67, 0x91e5, 0xb9b5, 0x1, 0x1);
        gbc.writeMem(0x6611, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0xba6c, gbc.sp());
        EXPECT(0x6613, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C0 01E4
        gbc.setState(0x74d8, 0xb31a, 0x5a70, 0x69e6, 0x49a0, 0x2653, 0x0, 0x1);
        gbc.writeMem(0x74d8, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0xb31a, gbc.sp());
        EXPECT(0x74da, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C0 01E5
        gbc.setState(0x6f88, 0xdfbe, 0x1e30, 0x1f7d, 0x8448, 0xffb3, 0x0, 0x1);
        gbc.writeMem(0x6f88, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0xdfbe, gbc.sp());
        EXPECT(0x6f8a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C0 01E6
        gbc.setState(0xc88, 0x31bd, 0x7a70, 0x9bd0, 0x48dc, 0xf9f3, 0x1, 0x0);
        gbc.writeMem(0xc88, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x31bd, gbc.sp());
        EXPECT(0xc8a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C0 01E7
        gbc.setState(0x4fa5, 0x64f, 0x1b40, 0x706e, 0xc810, 0x6f81, 0x1, 0x0);
        gbc.writeMem(0x4fa5, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x64f, gbc.sp());
        EXPECT(0x4fa7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C0 01E8
        gbc.setState(0x1157, 0xce4b, 0xb7f0, 0x8509, 0x8415, 0x51c8, 0x0, 0x1);
        gbc.writeMem(0x1157, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0xce4b, gbc.sp());
        EXPECT(0x1159, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C0 01E9
        gbc.setState(0x5fb1, 0x255a, 0x4210, 0xef5f, 0x1873, 0x6845, 0x1, 0x0);
        gbc.writeMem(0x5fb1, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x255a, gbc.sp());
        EXPECT(0x5fb3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C0 01EB
        gbc.setState(0x71fe, 0x9a49, 0x17d0, 0x8b3f, 0xf7b0, 0x4fdb, 0x0, 0x0);
        gbc.writeMem(0x71fe, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x9a49, gbc.sp());
        EXPECT(0x7200, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C0 01EC
        gbc.setState(0xba90, 0x368b, 0x8310, 0x4832, 0xe626, 0xa9fd, 0x0, 0x1);
        gbc.writeMem(0xba90, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x368b, gbc.sp());
        EXPECT(0xba92, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xba90));
        EXPECT(0xc0, gbc.readMem(0xba91));
        // CB C0 01ED
        gbc.setState(0x345, 0xb6fa, 0x870, 0x118a, 0xa, 0x5d1a, 0x1, 0x1);
        gbc.writeMem(0x345, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0xb6fa, gbc.sp());
        EXPECT(0x347, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C0 01EE
        gbc.setState(0x9174, 0x7572, 0x6e60, 0x8369, 0x4d4a, 0x5b96, 0x1, 0x0);
        gbc.writeMem(0x9174, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x7572, gbc.sp());
        EXPECT(0x9176, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9174));
        EXPECT(0xc0, gbc.readMem(0x9175));
        // CB C0 01EF
        gbc.setState(0x1afb, 0x37de, 0x3730, 0x891e, 0x5d5c, 0x6583, 0x1, 0x1);
        gbc.writeMem(0x1afb, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x37de, gbc.sp());
        EXPECT(0x1afd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C0 01F1
        gbc.setState(0xc7d3, 0x895e, 0x9240, 0xcff7, 0x6b41, 0x411a, 0x0, 0x0);
        gbc.writeMem(0xc7d3, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x895e, gbc.sp());
        EXPECT(0xc7d5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc7d3));
        EXPECT(0xc0, gbc.readMem(0xc7d4));
        // CB C0 01F3
        gbc.setState(0xbfd0, 0x35cb, 0xa8f0, 0x4a44, 0x967a, 0xe9f9, 0x0, 0x0);
        gbc.writeMem(0xbfd0, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x35cb, gbc.sp());
        EXPECT(0xbfd2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbfd0));
        EXPECT(0xc0, gbc.readMem(0xbfd1));
        // CB C0 01F4
        gbc.setState(0x573d, 0xef25, 0x6ce0, 0xd912, 0x2dcb, 0xeb99, 0x1, 0x0);
        gbc.writeMem(0x573d, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0xef25, gbc.sp());
        EXPECT(0x573f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C0 01F5
        gbc.setState(0x101, 0x2e87, 0xc780, 0xc9e, 0x6b71, 0xe83, 0x0, 0x0);
        gbc.writeMem(0x101, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x2e87, gbc.sp());
        EXPECT(0x103, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C0 01F6
        gbc.setState(0x1893, 0xd688, 0x39f0, 0x1d62, 0xcc79, 0xf89e, 0x0, 0x0);
        gbc.writeMem(0x1893, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0xd688, gbc.sp());
        EXPECT(0x1895, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C0 01F7
        gbc.setState(0x7053, 0xf634, 0xe130, 0x2ecb, 0xdb84, 0xb789, 0x0, 0x0);
        gbc.writeMem(0x7053, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0xf634, gbc.sp());
        EXPECT(0x7055, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C0 01F8
        gbc.setState(0x9c68, 0x6976, 0x54d0, 0x61dc, 0xb7df, 0x8557, 0x1, 0x0);
        gbc.writeMem(0x9c68, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x6976, gbc.sp());
        EXPECT(0x9c6a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9c68));
        EXPECT(0xc0, gbc.readMem(0x9c69));
        // CB C0 01F9
        gbc.setState(0xa4e6, 0xc304, 0x1860, 0xb48, 0x74c1, 0x3a13, 0x0, 0x1);
        gbc.writeMem(0xa4e6, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0xc304, gbc.sp());
        EXPECT(0xa4e8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa4e6));
        EXPECT(0xc0, gbc.readMem(0xa4e7));
        // CB C0 01FA
        gbc.setState(0xe49d, 0x8da1, 0xda0, 0x2d8c, 0x8e18, 0x9921, 0x0, 0x0);
        gbc.writeMem(0xe49d, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x8da1, gbc.sp());
        EXPECT(0xe49f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe49d));
        EXPECT(0xc0, gbc.readMem(0xe49e));
        // CB C0 01FB
        gbc.setState(0x97fe, 0x383e, 0x430, 0x4e6e, 0xdecb, 0xf254, 0x0, 0x1);
        gbc.writeMem(0x97fe, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x383e, gbc.sp());
        EXPECT(0x9800, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x97fe));
        EXPECT(0xc0, gbc.readMem(0x97ff));
        // CB C0 01FC
        gbc.setState(0x950a, 0x7e6e, 0x8450, 0x2226, 0xe98e, 0x8351, 0x0, 0x1);
        gbc.writeMem(0x950a, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x7e6e, gbc.sp());
        EXPECT(0x950c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x950a));
        EXPECT(0xc0, gbc.readMem(0x950b));
        // CB C0 01FD
        gbc.setState(0x896d, 0xc45c, 0xb2a0, 0x571, 0x1734, 0x3a16, 0x1, 0x1);
        gbc.writeMem(0x896d, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0xc45c, gbc.sp());
        EXPECT(0x896f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x896d));
        EXPECT(0xc0, gbc.readMem(0x896e));
        // CB C0 01FE
        gbc.setState(0xdf56, 0xf7e0, 0x9470, 0x4ece, 0xe791, 0xc026, 0x1, 0x0);
        gbc.writeMem(0xdf56, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0xf7e0, gbc.sp());
        EXPECT(0xdf58, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdf56));
        EXPECT(0xc0, gbc.readMem(0xdf57));
        // CB C0 01FF
        gbc.setState(0xea58, 0x36ef, 0x2aa0, 0xe0b7, 0x160, 0x7a8a, 0x0, 0x0);
        gbc.writeMem(0xea58, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x36ef, gbc.sp());
        EXPECT(0xea5a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xea58));
        EXPECT(0xc0, gbc.readMem(0xea59));
        // CB C0 0200
        gbc.setState(0xd0c6, 0x9dfa, 0x11c0, 0xa154, 0xdcc9, 0xcc2e, 0x0, 0x0);
        gbc.writeMem(0xd0c6, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x9dfa, gbc.sp());
        EXPECT(0xd0c8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd0c6));
        EXPECT(0xc0, gbc.readMem(0xd0c7));
        // CB C0 0201
        gbc.setState(0x1b90, 0xff, 0x5590, 0xfc44, 0x678a, 0x96dd, 0x1, 0x0);
        gbc.writeMem(0x1b90, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0xff, gbc.sp());
        EXPECT(0x1b92, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C0 0202
        gbc.setState(0xaf75, 0x4f29, 0xeea0, 0x46b, 0x240b, 0xc810, 0x1, 0x0);
        gbc.writeMem(0xaf75, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x4f29, gbc.sp());
        EXPECT(0xaf77, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaf75));
        EXPECT(0xc0, gbc.readMem(0xaf76));
        // CB C0 0203
        gbc.setState(0xd685, 0xc49a, 0x5b00, 0x5f5a, 0x62c3, 0xc7fc, 0x0, 0x0);
        gbc.writeMem(0xd685, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0xc49a, gbc.sp());
        EXPECT(0xd687, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd685));
        EXPECT(0xc0, gbc.readMem(0xd686));
        // CB C0 0204
        gbc.setState(0x5cbd, 0xe520, 0xb6e0, 0x7d49, 0x8492, 0xf8b6, 0x0, 0x1);
        gbc.writeMem(0x5cbd, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0xe520, gbc.sp());
        EXPECT(0x5cbf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C0 0205
        gbc.setState(0xd5de, 0x588, 0x8040, 0xc84d, 0x258e, 0x8409, 0x0, 0x1);
        gbc.writeMem(0xd5de, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x588, gbc.sp());
        EXPECT(0xd5e0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd5de));
        EXPECT(0xc0, gbc.readMem(0xd5df));
        // CB C0 0206
        gbc.setState(0xd5b9, 0xe3f, 0xad20, 0xf58b, 0x812f, 0x1a24, 0x1, 0x0);
        gbc.writeMem(0xd5b9, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0xe3f, gbc.sp());
        EXPECT(0xd5bb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd5b9));
        EXPECT(0xc0, gbc.readMem(0xd5ba));
        // CB C0 0207
        gbc.setState(0xd238, 0xb810, 0x6010, 0xd6ef, 0x91d8, 0x2b02, 0x1, 0x1);
        gbc.writeMem(0xd238, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0xb810, gbc.sp());
        EXPECT(0xd23a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd238));
        EXPECT(0xc0, gbc.readMem(0xd239));
        // CB C0 0208
        gbc.setState(0x4dc8, 0x8719, 0xc870, 0x271c, 0x6440, 0xc957, 0x0, 0x0);
        gbc.writeMem(0x4dc8, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x8719, gbc.sp());
        EXPECT(0x4dca, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C0 0209
        gbc.setState(0xa01e, 0x1ff8, 0x6570, 0xce4b, 0x8132, 0x2c11, 0x1, 0x1);
        gbc.writeMem(0xa01e, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x1ff8, gbc.sp());
        EXPECT(0xa020, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa01e));
        EXPECT(0xc0, gbc.readMem(0xa01f));
        // CB C0 020A
        gbc.setState(0x5ac4, 0x612f, 0x8be0, 0x100, 0xd7f7, 0x965e, 0x0, 0x1);
        gbc.writeMem(0x5ac4, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x612f, gbc.sp());
        EXPECT(0x5ac6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C0 020C
        gbc.setState(0x796b, 0x32e3, 0x3db0, 0xc4e7, 0x4b98, 0x7af5, 0x1, 0x0);
        gbc.writeMem(0x796b, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x32e3, gbc.sp());
        EXPECT(0x796d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C0 020D
        gbc.setState(0xc75c, 0xf626, 0x89b0, 0x7d4f, 0x5ce3, 0x19ff, 0x1, 0x0);
        gbc.writeMem(0xc75c, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0xf626, gbc.sp());
        EXPECT(0xc75e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc75c));
        EXPECT(0xc0, gbc.readMem(0xc75d));
        // CB C0 020E
        gbc.setState(0xa4f5, 0xde43, 0x5760, 0x6251, 0x3a76, 0x30b4, 0x1, 0x0);
        gbc.writeMem(0xa4f5, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0xde43, gbc.sp());
        EXPECT(0xa4f7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa4f5));
        EXPECT(0xc0, gbc.readMem(0xa4f6));
        // CB C0 020F
        gbc.setState(0x6cf4, 0x3436, 0xa500, 0xe348, 0x851, 0xee2b, 0x0, 0x1);
        gbc.writeMem(0x6cf4, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x3436, gbc.sp());
        EXPECT(0x6cf6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C0 0210
        gbc.setState(0xe6d0, 0x842, 0x58e0, 0x240b, 0x3346, 0x66ee, 0x0, 0x0);
        gbc.writeMem(0xe6d0, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x842, gbc.sp());
        EXPECT(0xe6d2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe6d0));
        EXPECT(0xc0, gbc.readMem(0xe6d1));
        // CB C0 0211
        gbc.setState(0x4e19, 0xee28, 0xf7f0, 0x6774, 0xe5b4, 0x3eec, 0x0, 0x0);
        gbc.writeMem(0x4e19, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0xee28, gbc.sp());
        EXPECT(0x4e1b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C0 0213
        gbc.setState(0x3dec, 0xaf57, 0x1bf0, 0x66e9, 0x2cc7, 0xce5f, 0x0, 0x1);
        gbc.writeMem(0x3dec, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0xaf57, gbc.sp());
        EXPECT(0x3dee, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C0 0215
        gbc.setState(0x9a46, 0xda7b, 0xc860, 0x39ea, 0xda1f, 0xdf8b, 0x1, 0x0);
        gbc.writeMem(0x9a46, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0xda7b, gbc.sp());
        EXPECT(0x9a48, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9a46));
        EXPECT(0xc0, gbc.readMem(0x9a47));
        // CB C0 0216
        gbc.setState(0xa926, 0x3385, 0x3e40, 0xef42, 0xab5f, 0xfbb8, 0x0, 0x1);
        gbc.writeMem(0xa926, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x3385, gbc.sp());
        EXPECT(0xa928, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa926));
        EXPECT(0xc0, gbc.readMem(0xa927));
        // CB C0 0217
        gbc.setState(0x671c, 0xd981, 0xb150, 0xfb43, 0x85c1, 0x34e7, 0x0, 0x1);
        gbc.writeMem(0x671c, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0xd981, gbc.sp());
        EXPECT(0x671e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C0 0218
        gbc.setState(0x3cc6, 0x691c, 0xd430, 0xda85, 0x70bf, 0x8eca, 0x1, 0x0);
        gbc.writeMem(0x3cc6, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x691c, gbc.sp());
        EXPECT(0x3cc8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C0 021A
        gbc.setState(0x8894, 0xc6f9, 0x7ae0, 0x13c1, 0xdc04, 0xf25, 0x1, 0x1);
        gbc.writeMem(0x8894, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0xc6f9, gbc.sp());
        EXPECT(0x8896, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8894));
        EXPECT(0xc0, gbc.readMem(0x8895));
        // CB C0 021B
        gbc.setState(0xef47, 0x307f, 0x5e70, 0xde5f, 0xf7f7, 0x604d, 0x1, 0x0);
        gbc.writeMem(0xef47, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x307f, gbc.sp());
        EXPECT(0xef49, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xef47));
        EXPECT(0xc0, gbc.readMem(0xef48));
        // CB C0 021C
        gbc.setState(0xa97e, 0x8b6e, 0x32a0, 0x925d, 0x48af, 0x4d51, 0x0, 0x0);
        gbc.writeMem(0xa97e, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x8b6e, gbc.sp());
        EXPECT(0xa980, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa97e));
        EXPECT(0xc0, gbc.readMem(0xa97f));
        // CB C0 021D
        gbc.setState(0xa77c, 0x3579, 0xc7a0, 0x1d55, 0xf1b, 0x1118, 0x0, 0x0);
        gbc.writeMem(0xa77c, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x3579, gbc.sp());
        EXPECT(0xa77e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa77c));
        EXPECT(0xc0, gbc.readMem(0xa77d));
        // CB C0 021E
        gbc.setState(0xbbda, 0x7131, 0x4e70, 0x637a, 0xce7a, 0x2141, 0x0, 0x1);
        gbc.writeMem(0xbbda, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x7131, gbc.sp());
        EXPECT(0xbbdc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbbda));
        EXPECT(0xc0, gbc.readMem(0xbbdb));
        // CB C0 021F
        gbc.setState(0x2ba3, 0x90c0, 0x1d50, 0xa89f, 0x8eb1, 0xec2c, 0x1, 0x1);
        gbc.writeMem(0x2ba3, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x90c0, gbc.sp());
        EXPECT(0x2ba5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C0 0220
        gbc.setState(0x75e7, 0x3ca2, 0x4240, 0x13ff, 0xae0c, 0x6336, 0x0, 0x1);
        gbc.writeMem(0x75e7, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x3ca2, gbc.sp());
        EXPECT(0x75e9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C0 0221
        gbc.setState(0x956, 0x2760, 0x8670, 0xa054, 0x19, 0xcfd6, 0x1, 0x1);
        gbc.writeMem(0x956, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x2760, gbc.sp());
        EXPECT(0x958, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C0 0222
        gbc.setState(0xcc52, 0xf094, 0xed90, 0xd69c, 0x190d, 0x833d, 0x1, 0x1);
        gbc.writeMem(0xcc52, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0xf094, gbc.sp());
        EXPECT(0xcc54, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcc52));
        EXPECT(0xc0, gbc.readMem(0xcc53));
        // CB C0 0223
        gbc.setState(0xbd65, 0x502e, 0x3070, 0xe28c, 0xc472, 0x978a, 0x1, 0x0);
        gbc.writeMem(0xbd65, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x502e, gbc.sp());
        EXPECT(0xbd67, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbd65));
        EXPECT(0xc0, gbc.readMem(0xbd66));
        // CB C0 0224
        gbc.setState(0xdf00, 0x63a1, 0x7b00, 0x18ff, 0x1bbf, 0xd13f, 0x0, 0x0);
        gbc.writeMem(0xdf00, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0x63a1, gbc.sp());
        EXPECT(0xdf02, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdf00));
        EXPECT(0xc0, gbc.readMem(0xdf01));
        // CB C0 0225
        gbc.setState(0x5b65, 0xa6d, 0xab40, 0x5345, 0xa38f, 0xc36e, 0x0, 0x0);
        gbc.writeMem(0x5b65, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0xa6d, gbc.sp());
        EXPECT(0x5b67, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C0 0226
        gbc.setState(0x4cc3, 0x9424, 0x7e30, 0x854e, 0xa6b, 0xa202, 0x1, 0x1);
        gbc.writeMem(0x4cc3, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x9424, gbc.sp());
        EXPECT(0x4cc5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C0 0227
        gbc.setState(0xdd1c, 0x81fe, 0xa700, 0x7e4d, 0x222e, 0xb82a, 0x1, 0x0);
        gbc.writeMem(0xdd1c, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x81fe, gbc.sp());
        EXPECT(0xdd1e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdd1c));
        EXPECT(0xc0, gbc.readMem(0xdd1d));
        // CB C0 0228
        gbc.setState(0x3ba3, 0x6972, 0x1a90, 0x3c26, 0xc05e, 0x6c0e, 0x0, 0x0);
        gbc.writeMem(0x3ba3, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x6972, gbc.sp());
        EXPECT(0x3ba5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C0 0229
        gbc.setState(0x86b1, 0x5854, 0xf180, 0x894a, 0xe926, 0x157a, 0x0, 0x0);
        gbc.writeMem(0x86b1, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x5854, gbc.sp());
        EXPECT(0x86b3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x86b1));
        EXPECT(0xc0, gbc.readMem(0x86b2));
        // CB C0 022A
        gbc.setState(0x9981, 0xd9e3, 0x8570, 0x7361, 0x2fdf, 0x9d34, 0x1, 0x0);
        gbc.writeMem(0x9981, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0xd9e3, gbc.sp());
        EXPECT(0x9983, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9981));
        EXPECT(0xc0, gbc.readMem(0x9982));
        // CB C0 022B
        gbc.setState(0xe788, 0xdb6, 0xca50, 0x9fc, 0x5737, 0x9c4d, 0x0, 0x1);
        gbc.writeMem(0xe788, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0xdb6, gbc.sp());
        EXPECT(0xe78a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe788));
        EXPECT(0xc0, gbc.readMem(0xe789));
        // CB C0 022C
        gbc.setState(0x9808, 0x7d33, 0xff00, 0x7497, 0xb734, 0xf0aa, 0x0, 0x1);
        gbc.writeMem(0x9808, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x7d33, gbc.sp());
        EXPECT(0x980a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9808));
        EXPECT(0xc0, gbc.readMem(0x9809));
        // CB C0 022D
        gbc.setState(0x7e64, 0xa62e, 0x1190, 0x7d8e, 0x1a58, 0x1dfc, 0x1, 0x0);
        gbc.writeMem(0x7e64, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0xa62e, gbc.sp());
        EXPECT(0x7e66, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C0 022E
        gbc.setState(0xbebf, 0x14a4, 0xfa0, 0x3a61, 0x243f, 0xcfc, 0x1, 0x0);
        gbc.writeMem(0xbebf, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x14a4, gbc.sp());
        EXPECT(0xbec1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbebf));
        EXPECT(0xc0, gbc.readMem(0xbec0));
        // CB C0 022F
        gbc.setState(0xea49, 0x4108, 0x2f30, 0x66b4, 0x1c5b, 0x7fec, 0x1, 0x1);
        gbc.writeMem(0xea49, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x4108, gbc.sp());
        EXPECT(0xea4b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xea49));
        EXPECT(0xc0, gbc.readMem(0xea4a));
        // CB C0 0230
        gbc.setState(0x74da, 0xb77d, 0x6cb0, 0x9e9a, 0x58de, 0x7997, 0x1, 0x0);
        gbc.writeMem(0x74da, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0xb77d, gbc.sp());
        EXPECT(0x74dc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C0 0231
        gbc.setState(0x6052, 0x98fa, 0x2ac0, 0xd66a, 0xb568, 0xa438, 0x1, 0x0);
        gbc.writeMem(0x6052, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x98fa, gbc.sp());
        EXPECT(0x6054, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C0 0232
        gbc.setState(0x602c, 0x7e8, 0x1160, 0x3150, 0xcbcc, 0x3081, 0x0, 0x0);
        gbc.writeMem(0x602c, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x7e8, gbc.sp());
        EXPECT(0x602e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C0 0233
        gbc.setState(0x32b9, 0xeeb7, 0x50c0, 0x4773, 0x6a46, 0xb810, 0x1, 0x0);
        gbc.writeMem(0x32b9, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0xeeb7, gbc.sp());
        EXPECT(0x32bb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C0 0234
        gbc.setState(0x5051, 0xdd5d, 0x1780, 0xc008, 0xebd2, 0xde9e, 0x0, 0x1);
        gbc.writeMem(0x5051, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0xdd5d, gbc.sp());
        EXPECT(0x5053, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C0 0235
        gbc.setState(0x61a6, 0xae83, 0x9200, 0x8b81, 0xaa54, 0xd480, 0x0, 0x1);
        gbc.writeMem(0x61a6, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0xae83, gbc.sp());
        EXPECT(0x61a8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C0 0236
        gbc.setState(0x7bc2, 0x3af4, 0x4600, 0xde0, 0xf5c3, 0x8290, 0x1, 0x1);
        gbc.writeMem(0x7bc2, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x3af4, gbc.sp());
        EXPECT(0x7bc4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C0 0237
        gbc.setState(0x4466, 0xc543, 0x5980, 0x8146, 0x973a, 0xec1c, 0x1, 0x0);
        gbc.writeMem(0x4466, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0xc543, gbc.sp());
        EXPECT(0x4468, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C0 0239
        gbc.setState(0xb8de, 0x9871, 0xbbc0, 0xbfb7, 0xb1b2, 0x4fe8, 0x0, 0x1);
        gbc.writeMem(0xb8de, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x9871, gbc.sp());
        EXPECT(0xb8e0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb8de));
        EXPECT(0xc0, gbc.readMem(0xb8df));
        // CB C0 023A
        gbc.setState(0x3a24, 0x6ca8, 0x2230, 0x489d, 0x6766, 0x4230, 0x1, 0x1);
        gbc.writeMem(0x3a24, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x6ca8, gbc.sp());
        EXPECT(0x3a26, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C0 023B
        gbc.setState(0x22ef, 0x701b, 0xba0, 0xadad, 0xcac5, 0xf1e6, 0x1, 0x0);
        gbc.writeMem(0x22ef, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x701b, gbc.sp());
        EXPECT(0x22f1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C0 023C
        gbc.setState(0xaa14, 0xa0e2, 0xb9d0, 0x8779, 0xfbdf, 0x9b1a, 0x1, 0x1);
        gbc.writeMem(0xaa14, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0xa0e2, gbc.sp());
        EXPECT(0xaa16, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaa14));
        EXPECT(0xc0, gbc.readMem(0xaa15));
        // CB C0 023D
        gbc.setState(0xdcde, 0xa34d, 0xdb10, 0x425e, 0xc990, 0xd925, 0x1, 0x0);
        gbc.writeMem(0xdcde, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0xa34d, gbc.sp());
        EXPECT(0xdce0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdcde));
        EXPECT(0xc0, gbc.readMem(0xdcdf));
        // CB C0 023E
        gbc.setState(0xafd5, 0x7612, 0x19b0, 0x33b0, 0x2abf, 0xca62, 0x0, 0x0);
        gbc.writeMem(0xafd5, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x7612, gbc.sp());
        EXPECT(0xafd7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xafd5));
        EXPECT(0xc0, gbc.readMem(0xafd6));
        // CB C0 023F
        gbc.setState(0x3f59, 0x4c80, 0x99b0, 0x920c, 0x920e, 0xaee9, 0x0, 0x1);
        gbc.writeMem(0x3f59, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x4c80, gbc.sp());
        EXPECT(0x3f5b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C0 0240
        gbc.setState(0xc9b5, 0x7f38, 0x5a60, 0x762, 0x3f60, 0xbab, 0x1, 0x1);
        gbc.writeMem(0xc9b5, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x7f38, gbc.sp());
        EXPECT(0xc9b7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc9b5));
        EXPECT(0xc0, gbc.readMem(0xc9b6));
        // CB C0 0241
        gbc.setState(0x9f82, 0x3e17, 0x6800, 0xe5e8, 0x88e5, 0x3a1f, 0x0, 0x0);
        gbc.writeMem(0x9f82, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x3e17, gbc.sp());
        EXPECT(0x9f84, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9f82));
        EXPECT(0xc0, gbc.readMem(0x9f83));
        // CB C0 0242
        gbc.setState(0xa4da, 0xc32b, 0x1dc0, 0xaccf, 0xcb4c, 0xd947, 0x0, 0x0);
        gbc.writeMem(0xa4da, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0xc32b, gbc.sp());
        EXPECT(0xa4dc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa4da));
        EXPECT(0xc0, gbc.readMem(0xa4db));
        // CB C0 0243
        gbc.setState(0x74b, 0xebcc, 0xcd50, 0x2cbf, 0xe864, 0xfdd2, 0x1, 0x1);
        gbc.writeMem(0x74b, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0xebcc, gbc.sp());
        EXPECT(0x74d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C0 0244
        gbc.setState(0x495f, 0x16ea, 0x6300, 0x9678, 0xf02f, 0x8bb8, 0x1, 0x1);
        gbc.writeMem(0x495f, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x16ea, gbc.sp());
        EXPECT(0x4961, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C0 0245
        gbc.setState(0x5296, 0x2206, 0x9930, 0x8ed9, 0xb8f9, 0x8cc2, 0x1, 0x0);
        gbc.writeMem(0x5296, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x2206, gbc.sp());
        EXPECT(0x5298, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C0 0246
        gbc.setState(0xe070, 0xef31, 0xebc0, 0x34c7, 0xa578, 0x9cad, 0x0, 0x0);
        gbc.writeMem(0xe070, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0xef31, gbc.sp());
        EXPECT(0xe072, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe070));
        EXPECT(0xc0, gbc.readMem(0xe071));
        // CB C0 0247
        gbc.setState(0xc66b, 0xecd9, 0xb160, 0xc348, 0xdfd4, 0xcfff, 0x1, 0x0);
        gbc.writeMem(0xc66b, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0xecd9, gbc.sp());
        EXPECT(0xc66d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc66b));
        EXPECT(0xc0, gbc.readMem(0xc66c));
        // CB C0 0248
        gbc.setState(0x1ee5, 0x86f7, 0x2970, 0xd1d9, 0xd891, 0x1d58, 0x1, 0x0);
        gbc.writeMem(0x1ee5, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x86f7, gbc.sp());
        EXPECT(0x1ee7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C0 0249
        gbc.setState(0xbe9d, 0xcd2f, 0x7360, 0x7a5f, 0x62a4, 0xcb56, 0x1, 0x0);
        gbc.writeMem(0xbe9d, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0xcd2f, gbc.sp());
        EXPECT(0xbe9f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbe9d));
        EXPECT(0xc0, gbc.readMem(0xbe9e));
        // CB C0 024A
        gbc.setState(0x2186, 0x1171, 0xbc80, 0x76c4, 0x5dea, 0xef5b, 0x1, 0x1);
        gbc.writeMem(0x2186, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x1171, gbc.sp());
        EXPECT(0x2188, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C0 024B
        gbc.setState(0x2630, 0x33d, 0x1840, 0xd76f, 0x1a7b, 0xdc9a, 0x1, 0x1);
        gbc.writeMem(0x2630, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x33d, gbc.sp());
        EXPECT(0x2632, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C0 024C
        gbc.setState(0x460b, 0x2a21, 0xebf0, 0x4e17, 0x75ac, 0x8caa, 0x0, 0x1);
        gbc.writeMem(0x460b, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x2a21, gbc.sp());
        EXPECT(0x460d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C0 024D
        gbc.setState(0x90a8, 0x175e, 0x2940, 0xfb3b, 0x5c75, 0xc77d, 0x0, 0x1);
        gbc.writeMem(0x90a8, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x175e, gbc.sp());
        EXPECT(0x90aa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x90a8));
        EXPECT(0xc0, gbc.readMem(0x90a9));
        // CB C0 024E
        gbc.setState(0x7cb9, 0x6519, 0x9fc0, 0x94e4, 0x7318, 0xb5f2, 0x0, 0x1);
        gbc.writeMem(0x7cb9, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x6519, gbc.sp());
        EXPECT(0x7cbb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C0 024F
        gbc.setState(0xa6ee, 0xd761, 0x1680, 0xc636, 0x5cea, 0xbd08, 0x0, 0x1);
        gbc.writeMem(0xa6ee, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0xd761, gbc.sp());
        EXPECT(0xa6f0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa6ee));
        EXPECT(0xc0, gbc.readMem(0xa6ef));
        // CB C0 0250
        gbc.setState(0x40ab, 0xa8f6, 0xe2e0, 0xff36, 0xf407, 0xfdc2, 0x1, 0x1);
        gbc.writeMem(0x40ab, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0xa8f6, gbc.sp());
        EXPECT(0x40ad, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C0 0251
        gbc.setState(0xe3de, 0x169d, 0x1820, 0x77d5, 0x4b26, 0x95d6, 0x1, 0x0);
        gbc.writeMem(0xe3de, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x169d, gbc.sp());
        EXPECT(0xe3e0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe3de));
        EXPECT(0xc0, gbc.readMem(0xe3df));
        // CB C0 0254
        gbc.setState(0xb031, 0x5ace, 0x9c50, 0x57e5, 0xc5b0, 0x74d9, 0x0, 0x1);
        gbc.writeMem(0xb031, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x5ace, gbc.sp());
        EXPECT(0xb033, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb031));
        EXPECT(0xc0, gbc.readMem(0xb032));
        // CB C0 0255
        gbc.setState(0x7b96, 0xe7a6, 0x1220, 0x4f11, 0x5851, 0xc189, 0x0, 0x1);
        gbc.writeMem(0x7b96, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0xe7a6, gbc.sp());
        EXPECT(0x7b98, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C0 0256
        gbc.setState(0x4a33, 0xeece, 0xbdf0, 0x5d3e, 0x2f70, 0x3d63, 0x0, 0x0);
        gbc.writeMem(0x4a33, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0xeece, gbc.sp());
        EXPECT(0x4a35, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C0 0257
        gbc.setState(0xe902, 0xf9f6, 0x45c0, 0xbb79, 0xbb04, 0xb3ee, 0x0, 0x1);
        gbc.writeMem(0xe902, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0xf9f6, gbc.sp());
        EXPECT(0xe904, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe902));
        EXPECT(0xc0, gbc.readMem(0xe903));
        // CB C0 0258
        gbc.setState(0x4d3f, 0xe981, 0x16c0, 0x584a, 0xebe3, 0x89e, 0x0, 0x1);
        gbc.writeMem(0x4d3f, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0xe981, gbc.sp());
        EXPECT(0x4d41, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C0 0259
        gbc.setState(0xd095, 0xec1, 0xe6f0, 0xfa1a, 0x2e1d, 0x739a, 0x0, 0x0);
        gbc.writeMem(0xd095, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0xec1, gbc.sp());
        EXPECT(0xd097, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd095));
        EXPECT(0xc0, gbc.readMem(0xd096));
        // CB C0 025A
        gbc.setState(0xbd59, 0xcdbd, 0xfa10, 0x1093, 0xa6df, 0x9f35, 0x0, 0x0);
        gbc.writeMem(0xbd59, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0xcdbd, gbc.sp());
        EXPECT(0xbd5b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbd59));
        EXPECT(0xc0, gbc.readMem(0xbd5a));
        // CB C0 025B
        gbc.setState(0xe7f6, 0x77d8, 0x89e0, 0xbc8f, 0x469b, 0x132b, 0x0, 0x0);
        gbc.writeMem(0xe7f6, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x77d8, gbc.sp());
        EXPECT(0xe7f8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe7f6));
        EXPECT(0xc0, gbc.readMem(0xe7f7));
        // CB C0 025C
        gbc.setState(0xcad8, 0x751f, 0xf5a0, 0x14f3, 0x4d61, 0xdf76, 0x1, 0x0);
        gbc.writeMem(0xcad8, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x751f, gbc.sp());
        EXPECT(0xcada, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcad8));
        EXPECT(0xc0, gbc.readMem(0xcad9));
        // CB C0 025D
        gbc.setState(0x50b9, 0xe66c, 0x5c70, 0xbe6f, 0x494a, 0xdbed, 0x0, 0x0);
        gbc.writeMem(0x50b9, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0xe66c, gbc.sp());
        EXPECT(0x50bb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C0 025E
        gbc.setState(0xb5c8, 0x66e7, 0x4fc0, 0x8ff0, 0xa7bc, 0x934a, 0x1, 0x1);
        gbc.writeMem(0xb5c8, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x66e7, gbc.sp());
        EXPECT(0xb5ca, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb5c8));
        EXPECT(0xc0, gbc.readMem(0xb5c9));
        // CB C0 025F
        gbc.setState(0xc82b, 0xb2c3, 0x83a0, 0xd1ec, 0x6c59, 0xff86, 0x1, 0x1);
        gbc.writeMem(0xc82b, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0xb2c3, gbc.sp());
        EXPECT(0xc82d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc82b));
        EXPECT(0xc0, gbc.readMem(0xc82c));
        // CB C0 0261
        gbc.setState(0xe8d1, 0x2723, 0xd530, 0x49e9, 0x354c, 0xa360, 0x0, 0x0);
        gbc.writeMem(0xe8d1, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x2723, gbc.sp());
        EXPECT(0xe8d3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe8d1));
        EXPECT(0xc0, gbc.readMem(0xe8d2));
        // CB C0 0262
        gbc.setState(0x4c21, 0x9a92, 0x2ba0, 0xfed4, 0x3342, 0x188, 0x0, 0x0);
        gbc.writeMem(0x4c21, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x9a92, gbc.sp());
        EXPECT(0x4c23, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C0 0263
        gbc.setState(0xdf30, 0x7d7d, 0xacd0, 0x1e8, 0x5241, 0x79e2, 0x0, 0x0);
        gbc.writeMem(0xdf30, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x7d7d, gbc.sp());
        EXPECT(0xdf32, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdf30));
        EXPECT(0xc0, gbc.readMem(0xdf31));
        // CB C0 0264
        gbc.setState(0xd55e, 0x8f46, 0x5db0, 0x3c97, 0x8348, 0x5438, 0x1, 0x1);
        gbc.writeMem(0xd55e, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x8f46, gbc.sp());
        EXPECT(0xd560, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd55e));
        EXPECT(0xc0, gbc.readMem(0xd55f));
        // CB C0 0265
        gbc.setState(0xeead, 0x271e, 0xb4e0, 0x1956, 0x92c4, 0x85f3, 0x1, 0x1);
        gbc.writeMem(0xeead, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x271e, gbc.sp());
        EXPECT(0xeeaf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeead));
        EXPECT(0xc0, gbc.readMem(0xeeae));
        // CB C0 0266
        gbc.setState(0x43ca, 0x1486, 0xff40, 0x1ae9, 0x6db9, 0xa6ba, 0x0, 0x1);
        gbc.writeMem(0x43ca, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0x1486, gbc.sp());
        EXPECT(0x43cc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C0 0267
        gbc.setState(0xed86, 0x819, 0x81b0, 0xd4c0, 0x79a7, 0xcfab, 0x1, 0x1);
        gbc.writeMem(0xed86, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x819, gbc.sp());
        EXPECT(0xed88, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xed86));
        EXPECT(0xc0, gbc.readMem(0xed87));
        // CB C0 0268
        gbc.setState(0x9702, 0x6c68, 0x7d50, 0x935, 0x3989, 0xee8b, 0x0, 0x1);
        gbc.writeMem(0x9702, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x6c68, gbc.sp());
        EXPECT(0x9704, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9702));
        EXPECT(0xc0, gbc.readMem(0x9703));
        // CB C0 0269
        gbc.setState(0xe77a, 0x343f, 0x7c00, 0xb9cd, 0x114, 0xdd16, 0x0, 0x1);
        gbc.writeMem(0xe77a, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x343f, gbc.sp());
        EXPECT(0xe77c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe77a));
        EXPECT(0xc0, gbc.readMem(0xe77b));
        // CB C0 026A
        gbc.setState(0x64cf, 0xdd40, 0x25c0, 0x484b, 0x48af, 0xbbb2, 0x1, 0x1);
        gbc.writeMem(0x64cf, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0xdd40, gbc.sp());
        EXPECT(0x64d1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C0 026B
        gbc.setState(0x147a, 0x751b, 0xb550, 0xdaf7, 0x1f8d, 0x61e9, 0x1, 0x0);
        gbc.writeMem(0x147a, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x751b, gbc.sp());
        EXPECT(0x147c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C0 026C
        gbc.setState(0x4131, 0xcb28, 0xeb30, 0x792c, 0x1b91, 0x41e0, 0x0, 0x0);
        gbc.writeMem(0x4131, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0xcb28, gbc.sp());
        EXPECT(0x4133, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C0 026D
        gbc.setState(0xc142, 0x85bb, 0x3a00, 0x5379, 0xe91e, 0x686e, 0x0, 0x1);
        gbc.writeMem(0xc142, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x85bb, gbc.sp());
        EXPECT(0xc144, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc142));
        EXPECT(0xc0, gbc.readMem(0xc143));
        // CB C0 026E
        gbc.setState(0x4e52, 0xec4e, 0x7550, 0x2984, 0x89a0, 0xe01d, 0x0, 0x0);
        gbc.writeMem(0x4e52, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0xec4e, gbc.sp());
        EXPECT(0x4e54, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C0 026F
        gbc.setState(0x8c53, 0xe99b, 0xb3a0, 0x723f, 0x62dc, 0x35f0, 0x0, 0x0);
        gbc.writeMem(0x8c53, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0xe99b, gbc.sp());
        EXPECT(0x8c55, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8c53));
        EXPECT(0xc0, gbc.readMem(0x8c54));
        // CB C0 0270
        gbc.setState(0x4883, 0x467b, 0xfcc0, 0x54f8, 0xa2a2, 0x862d, 0x0, 0x0);
        gbc.writeMem(0x4883, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x467b, gbc.sp());
        EXPECT(0x4885, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C0 0271
        gbc.setState(0xa812, 0x8f82, 0x2ce0, 0x792f, 0xca1d, 0xef34, 0x1, 0x0);
        gbc.writeMem(0xa812, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x8f82, gbc.sp());
        EXPECT(0xa814, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa812));
        EXPECT(0xc0, gbc.readMem(0xa813));
        // CB C0 0272
        gbc.setState(0x5dc6, 0x187f, 0xbdb0, 0x7357, 0x77b1, 0xb2d8, 0x1, 0x0);
        gbc.writeMem(0x5dc6, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x187f, gbc.sp());
        EXPECT(0x5dc8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C0 0273
        gbc.setState(0x2055, 0x5ec, 0x3150, 0x65a, 0xd80c, 0x8219, 0x1, 0x0);
        gbc.writeMem(0x2055, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x5ec, gbc.sp());
        EXPECT(0x2057, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C0 0274
        gbc.setState(0x93ac, 0x7311, 0xf220, 0x415, 0x81ca, 0xcc16, 0x1, 0x1);
        gbc.writeMem(0x93ac, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x7311, gbc.sp());
        EXPECT(0x93ae, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x93ac));
        EXPECT(0xc0, gbc.readMem(0x93ad));
        // CB C0 0275
        gbc.setState(0x2bf5, 0xd189, 0x22e0, 0x669, 0x4331, 0xf31c, 0x1, 0x1);
        gbc.writeMem(0x2bf5, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0xd189, gbc.sp());
        EXPECT(0x2bf7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C0 0276
        gbc.setState(0xd298, 0xa946, 0x4100, 0xd026, 0xb3dd, 0xdac, 0x1, 0x1);
        gbc.writeMem(0xd298, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0xa946, gbc.sp());
        EXPECT(0xd29a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd298));
        EXPECT(0xc0, gbc.readMem(0xd299));
        // CB C0 0277
        gbc.setState(0xca31, 0xd34d, 0x89f0, 0xd296, 0x4074, 0xef1, 0x0, 0x0);
        gbc.writeMem(0xca31, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0xd34d, gbc.sp());
        EXPECT(0xca33, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xca31));
        EXPECT(0xc0, gbc.readMem(0xca32));
        // CB C0 0278
        gbc.setState(0x3eca, 0x89fd, 0xe8d0, 0x78aa, 0x999d, 0x295, 0x0, 0x0);
        gbc.writeMem(0x3eca, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x89fd, gbc.sp());
        EXPECT(0x3ecc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C0 0279
        gbc.setState(0x12db, 0xcf9c, 0x11d0, 0x3fde, 0x4b67, 0x5fbf, 0x0, 0x1);
        gbc.writeMem(0x12db, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0xcf9c, gbc.sp());
        EXPECT(0x12dd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C0 027A
        gbc.setState(0xdce, 0x2f1e, 0xcd50, 0x4a5b, 0x85fc, 0xc8d4, 0x0, 0x1);
        gbc.writeMem(0xdce, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x2f1e, gbc.sp());
        EXPECT(0xdd0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C0 027B
        gbc.setState(0x760f, 0x7355, 0xd340, 0x6eb4, 0xec81, 0x57dc, 0x1, 0x0);
        gbc.writeMem(0x760f, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x7355, gbc.sp());
        EXPECT(0x7611, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C0 027C
        gbc.setState(0x43bd, 0xbdd8, 0x3dc0, 0xfa34, 0x67b, 0x52e0, 0x1, 0x1);
        gbc.writeMem(0x43bd, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0xbdd8, gbc.sp());
        EXPECT(0x43bf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C0 027D
        gbc.setState(0xd60e, 0xa831, 0x97d0, 0xbd87, 0xe7dc, 0x16c, 0x1, 0x1);
        gbc.writeMem(0xd60e, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0xa831, gbc.sp());
        EXPECT(0xd610, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd60e));
        EXPECT(0xc0, gbc.readMem(0xd60f));
        // CB C0 027F
        gbc.setState(0xc211, 0x811c, 0x7eb0, 0xfda, 0x5964, 0x25ad, 0x0, 0x0);
        gbc.writeMem(0xc211, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x811c, gbc.sp());
        EXPECT(0xc213, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc211));
        EXPECT(0xc0, gbc.readMem(0xc212));
        // CB C0 0280
        gbc.setState(0x8e37, 0xae34, 0xf610, 0xd0e4, 0xcf01, 0xe37c, 0x0, 0x1);
        gbc.writeMem(0x8e37, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0xae34, gbc.sp());
        EXPECT(0x8e39, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8e37));
        EXPECT(0xc0, gbc.readMem(0x8e38));
        // CB C0 0281
        gbc.setState(0xa238, 0xfd74, 0x2760, 0x3bca, 0x60d1, 0x4b60, 0x0, 0x0);
        gbc.writeMem(0xa238, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0xfd74, gbc.sp());
        EXPECT(0xa23a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa238));
        EXPECT(0xc0, gbc.readMem(0xa239));
        // CB C0 0282
        gbc.setState(0x6d9c, 0x691c, 0x57b0, 0xdde4, 0xf29c, 0x20c3, 0x1, 0x0);
        gbc.writeMem(0x6d9c, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x691c, gbc.sp());
        EXPECT(0x6d9e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C0 0283
        gbc.setState(0xc482, 0x181b, 0xfa0, 0x5b12, 0x9df7, 0x93a1, 0x1, 0x1);
        gbc.writeMem(0xc482, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x181b, gbc.sp());
        EXPECT(0xc484, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc482));
        EXPECT(0xc0, gbc.readMem(0xc483));
        // CB C0 0284
        gbc.setState(0x5430, 0xcaa9, 0x9160, 0x451a, 0x5660, 0xbd29, 0x0, 0x0);
        gbc.writeMem(0x5430, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0xcaa9, gbc.sp());
        EXPECT(0x5432, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C0 0285
        gbc.setState(0x45be, 0xfd57, 0x3250, 0x1744, 0x969a, 0xf74, 0x0, 0x0);
        gbc.writeMem(0x45be, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0xfd57, gbc.sp());
        EXPECT(0x45c0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C0 0286
        gbc.setState(0x9340, 0x5aa3, 0xb890, 0x743c, 0x55d0, 0x68f5, 0x1, 0x1);
        gbc.writeMem(0x9340, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x5aa3, gbc.sp());
        EXPECT(0x9342, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9340));
        EXPECT(0xc0, gbc.readMem(0x9341));
        // CB C0 0287
        gbc.setState(0x4784, 0x6fc7, 0x6820, 0xdf66, 0x335c, 0x640b, 0x0, 0x0);
        gbc.writeMem(0x4784, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x6fc7, gbc.sp());
        EXPECT(0x4786, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C0 0288
        gbc.setState(0xea50, 0x4ed0, 0x1760, 0x966c, 0xfd0, 0xef9b, 0x1, 0x0);
        gbc.writeMem(0xea50, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x4ed0, gbc.sp());
        EXPECT(0xea52, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xea50));
        EXPECT(0xc0, gbc.readMem(0xea51));
        // CB C0 0289
        gbc.setState(0x260e, 0xa426, 0xaa0, 0x970e, 0x9b8d, 0x55bf, 0x0, 0x0);
        gbc.writeMem(0x260e, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0xa426, gbc.sp());
        EXPECT(0x2610, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C0 028A
        gbc.setState(0x580, 0xdcce, 0x4920, 0x81bd, 0x36c1, 0x5780, 0x1, 0x1);
        gbc.writeMem(0x580, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0xdcce, gbc.sp());
        EXPECT(0x582, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C0 028B
        gbc.setState(0x1247, 0xdda4, 0x8650, 0x7b43, 0xf013, 0x3ed5, 0x0, 0x1);
        gbc.writeMem(0x1247, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0xdda4, gbc.sp());
        EXPECT(0x1249, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C0 028D
        gbc.setState(0x361, 0xbab, 0x26d0, 0x4238, 0xed90, 0x6d66, 0x1, 0x1);
        gbc.writeMem(0x361, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0xbab, gbc.sp());
        EXPECT(0x363, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C0 028E
        gbc.setState(0xb18b, 0xda56, 0x8100, 0xe36b, 0x1e54, 0x5434, 0x1, 0x0);
        gbc.writeMem(0xb18b, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0xda56, gbc.sp());
        EXPECT(0xb18d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb18b));
        EXPECT(0xc0, gbc.readMem(0xb18c));
        // CB C0 028F
        gbc.setState(0xc6e8, 0xdb92, 0x9310, 0xcccf, 0x492d, 0x2ed4, 0x1, 0x0);
        gbc.writeMem(0xc6e8, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0xdb92, gbc.sp());
        EXPECT(0xc6ea, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc6e8));
        EXPECT(0xc0, gbc.readMem(0xc6e9));
        // CB C0 0290
        gbc.setState(0xa2ec, 0x848f, 0xaf90, 0x6e3f, 0x289f, 0x2f8b, 0x1, 0x1);
        gbc.writeMem(0xa2ec, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x848f, gbc.sp());
        EXPECT(0xa2ee, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa2ec));
        EXPECT(0xc0, gbc.readMem(0xa2ed));
        // CB C0 0291
        gbc.setState(0x11df, 0x5fa6, 0xc600, 0x112a, 0x4b49, 0x78de, 0x0, 0x0);
        gbc.writeMem(0x11df, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x5fa6, gbc.sp());
        EXPECT(0x11e1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C0 0292
        gbc.setState(0xc7ef, 0xd2d8, 0xe010, 0x5d13, 0xad55, 0x84e, 0x0, 0x1);
        gbc.writeMem(0xc7ef, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0xd2d8, gbc.sp());
        EXPECT(0xc7f1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc7ef));
        EXPECT(0xc0, gbc.readMem(0xc7f0));
        // CB C0 0293
        gbc.setState(0xb861, 0xce23, 0xa0f0, 0x9fee, 0xa3ac, 0xbca8, 0x1, 0x0);
        gbc.writeMem(0xb861, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0xce23, gbc.sp());
        EXPECT(0xb863, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb861));
        EXPECT(0xc0, gbc.readMem(0xb862));
        // CB C0 0294
        gbc.setState(0x460, 0xdfb7, 0x6120, 0xe906, 0x59c5, 0x3d2d, 0x1, 0x0);
        gbc.writeMem(0x460, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0xdfb7, gbc.sp());
        EXPECT(0x462, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C0 0295
        gbc.setState(0x3f07, 0x1e16, 0x1010, 0x82bd, 0x8142, 0xc16, 0x1, 0x1);
        gbc.writeMem(0x3f07, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x1e16, gbc.sp());
        EXPECT(0x3f09, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C0 0296
        gbc.setState(0x8a44, 0xca30, 0xddb0, 0x4af, 0x2d4d, 0xf914, 0x1, 0x0);
        gbc.writeMem(0x8a44, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0xca30, gbc.sp());
        EXPECT(0x8a46, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8a44));
        EXPECT(0xc0, gbc.readMem(0x8a45));
        // CB C0 0297
        gbc.setState(0xdfde, 0x4e4a, 0x8e90, 0x2359, 0xca2c, 0x395a, 0x0, 0x0);
        gbc.writeMem(0xdfde, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x4e4a, gbc.sp());
        EXPECT(0xdfe0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdfde));
        EXPECT(0xc0, gbc.readMem(0xdfdf));
        // CB C0 0298
        gbc.setState(0xed07, 0xa01f, 0x45f0, 0x2ff5, 0x7d4b, 0xcbf0, 0x1, 0x1);
        gbc.writeMem(0xed07, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0xa01f, gbc.sp());
        EXPECT(0xed09, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xed07));
        EXPECT(0xc0, gbc.readMem(0xed08));
        // CB C0 0299
        gbc.setState(0x53af, 0x4d11, 0x1f00, 0x81d8, 0xaa37, 0x628c, 0x1, 0x1);
        gbc.writeMem(0x53af, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x4d11, gbc.sp());
        EXPECT(0x53b1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C0 029A
        gbc.setState(0x3463, 0x1b40, 0xefd0, 0x765b, 0xc5bc, 0xeabd, 0x1, 0x1);
        gbc.writeMem(0x3463, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x1b40, gbc.sp());
        EXPECT(0x3465, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C0 029B
        gbc.setState(0x62cc, 0x43e2, 0x79c0, 0xf833, 0xba5c, 0x8084, 0x0, 0x1);
        gbc.writeMem(0x62cc, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x43e2, gbc.sp());
        EXPECT(0x62ce, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C0 029C
        gbc.setState(0xa31f, 0x23e3, 0x66e0, 0xeb93, 0xc315, 0xdedb, 0x0, 0x1);
        gbc.writeMem(0xa31f, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x23e3, gbc.sp());
        EXPECT(0xa321, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa31f));
        EXPECT(0xc0, gbc.readMem(0xa320));
        // CB C0 029D
        gbc.setState(0x8004, 0x5327, 0xa4a0, 0x7928, 0x87c3, 0xa447, 0x0, 0x1);
        gbc.writeMem(0x8004, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x5327, gbc.sp());
        EXPECT(0x8006, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8004));
        EXPECT(0xc0, gbc.readMem(0x8005));
        // CB C0 029E
        gbc.setState(0x33b6, 0x8deb, 0x7d00, 0xbf5c, 0x6b1b, 0x979e, 0x1, 0x1);
        gbc.writeMem(0x33b6, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x8deb, gbc.sp());
        EXPECT(0x33b8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C0 029F
        gbc.setState(0x96ef, 0xa50a, 0x5ed0, 0xe999, 0xcc22, 0xebb5, 0x1, 0x1);
        gbc.writeMem(0x96ef, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0xa50a, gbc.sp());
        EXPECT(0x96f1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x96ef));
        EXPECT(0xc0, gbc.readMem(0x96f0));
        // CB C0 02A0
        gbc.setState(0xdf2f, 0x7600, 0x3a10, 0x8aed, 0x2d5a, 0x312b, 0x0, 0x0);
        gbc.writeMem(0xdf2f, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x7600, gbc.sp());
        EXPECT(0xdf31, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdf2f));
        EXPECT(0xc0, gbc.readMem(0xdf30));
        // CB C0 02A1
        gbc.setState(0xe645, 0xb10c, 0x5000, 0x4273, 0xede5, 0xad58, 0x1, 0x1);
        gbc.writeMem(0xe645, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0xb10c, gbc.sp());
        EXPECT(0xe647, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe645));
        EXPECT(0xc0, gbc.readMem(0xe646));
        // CB C0 02A2
        gbc.setState(0x8b9f, 0xcedf, 0x12f0, 0x4840, 0x6543, 0x818a, 0x0, 0x1);
        gbc.writeMem(0x8b9f, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0xcedf, gbc.sp());
        EXPECT(0x8ba1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8b9f));
        EXPECT(0xc0, gbc.readMem(0x8ba0));
        // CB C0 02A3
        gbc.setState(0x6a89, 0xaa06, 0x1ee0, 0x7c99, 0x489f, 0x55fa, 0x1, 0x0);
        gbc.writeMem(0x6a89, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0xaa06, gbc.sp());
        EXPECT(0x6a8b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C0 02A4
        gbc.setState(0x69d9, 0xae7f, 0xdd00, 0x568a, 0x5bd9, 0x20b4, 0x1, 0x0);
        gbc.writeMem(0x69d9, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0xae7f, gbc.sp());
        EXPECT(0x69db, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C0 02A5
        gbc.setState(0x8759, 0x8a0a, 0x6710, 0x4be7, 0x9607, 0x9997, 0x0, 0x0);
        gbc.writeMem(0x8759, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0x8a0a, gbc.sp());
        EXPECT(0x875b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8759));
        EXPECT(0xc0, gbc.readMem(0x875a));
        // CB C0 02A6
        gbc.setState(0x6290, 0xda50, 0xdd70, 0x8336, 0x19a5, 0x40fd, 0x1, 0x0);
        gbc.writeMem(0x6290, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0xda50, gbc.sp());
        EXPECT(0x6292, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C0 02A7
        gbc.setState(0x30cd, 0xe255, 0x4850, 0xde80, 0x7678, 0xa267, 0x0, 0x1);
        gbc.writeMem(0x30cd, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0xe255, gbc.sp());
        EXPECT(0x30cf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C0 02A8
        gbc.setState(0xaff5, 0xe61b, 0x3f80, 0x2246, 0x7ebb, 0xe00d, 0x1, 0x1);
        gbc.writeMem(0xaff5, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0xe61b, gbc.sp());
        EXPECT(0xaff7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaff5));
        EXPECT(0xc0, gbc.readMem(0xaff6));
        // CB C0 02A9
        gbc.setState(0x341b, 0xdb5a, 0x320, 0xb80f, 0x52bd, 0xe509, 0x1, 0x0);
        gbc.writeMem(0x341b, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0xdb5a, gbc.sp());
        EXPECT(0x341d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C0 02AA
        gbc.setState(0xc59d, 0x3e1b, 0x34a0, 0x2dfb, 0xc629, 0xb658, 0x0, 0x0);
        gbc.writeMem(0xc59d, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x3e1b, gbc.sp());
        EXPECT(0xc59f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc59d));
        EXPECT(0xc0, gbc.readMem(0xc59e));
        // CB C0 02AC
        gbc.setState(0xcb76, 0x352d, 0xf5e0, 0x3366, 0x17bf, 0xc0b, 0x1, 0x1);
        gbc.writeMem(0xcb76, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x352d, gbc.sp());
        EXPECT(0xcb78, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcb76));
        EXPECT(0xc0, gbc.readMem(0xcb77));
        // CB C0 02AD
        gbc.setState(0x12e3, 0xacd4, 0x4160, 0x1478, 0x602a, 0x1225, 0x0, 0x1);
        gbc.writeMem(0x12e3, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0xacd4, gbc.sp());
        EXPECT(0x12e5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C0 02AF
        gbc.setState(0xe2d5, 0xbfe, 0x4260, 0xd69f, 0xce7b, 0xbbaa, 0x1, 0x0);
        gbc.writeMem(0xe2d5, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0xbfe, gbc.sp());
        EXPECT(0xe2d7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe2d5));
        EXPECT(0xc0, gbc.readMem(0xe2d6));
        // CB C0 02B0
        gbc.setState(0x2f36, 0xa712, 0x8ba0, 0x92e8, 0xfc94, 0x51bd, 0x1, 0x1);
        gbc.writeMem(0x2f36, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0xa712, gbc.sp());
        EXPECT(0x2f38, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C0 02B1
        gbc.setState(0xe1d6, 0xfe1f, 0x31a0, 0xad98, 0x918a, 0xec98, 0x0, 0x1);
        gbc.writeMem(0xe1d6, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0xfe1f, gbc.sp());
        EXPECT(0xe1d8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe1d6));
        EXPECT(0xc0, gbc.readMem(0xe1d7));
        // CB C0 02B2
        gbc.setState(0x2cf6, 0xad36, 0x9670, 0xefd0, 0x5542, 0x108d, 0x1, 0x1);
        gbc.writeMem(0x2cf6, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0xad36, gbc.sp());
        EXPECT(0x2cf8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C0 02B3
        gbc.setState(0x383a, 0x75fb, 0x8f60, 0x622e, 0x27f1, 0xd1ec, 0x1, 0x1);
        gbc.writeMem(0x383a, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x75fb, gbc.sp());
        EXPECT(0x383c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C0 02B4
        gbc.setState(0x77e1, 0x15c6, 0xccc0, 0x42eb, 0xe5fe, 0x39b4, 0x1, 0x0);
        gbc.writeMem(0x77e1, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x15c6, gbc.sp());
        EXPECT(0x77e3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C0 02B5
        gbc.setState(0x2c1c, 0x9da4, 0x7410, 0x9ed8, 0x7aa6, 0x9a32, 0x1, 0x0);
        gbc.writeMem(0x2c1c, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x9da4, gbc.sp());
        EXPECT(0x2c1e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C0 02B6
        gbc.setState(0x2d5e, 0x825, 0x7640, 0x2279, 0xe682, 0x9eb8, 0x0, 0x0);
        gbc.writeMem(0x2d5e, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x825, gbc.sp());
        EXPECT(0x2d60, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C0 02B7
        gbc.setState(0x982a, 0x9ea7, 0x6630, 0x8f0c, 0xf7fa, 0x7371, 0x0, 0x1);
        gbc.writeMem(0x982a, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x9ea7, gbc.sp());
        EXPECT(0x982c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x982a));
        EXPECT(0xc0, gbc.readMem(0x982b));
        // CB C0 02B8
        gbc.setState(0xd40a, 0xb5e7, 0xd480, 0x6098, 0x5995, 0x6f0f, 0x0, 0x0);
        gbc.writeMem(0xd40a, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0xb5e7, gbc.sp());
        EXPECT(0xd40c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd40a));
        EXPECT(0xc0, gbc.readMem(0xd40b));
        // CB C0 02B9
        gbc.setState(0x10e2, 0x65e5, 0xfc40, 0x44b1, 0x5b4, 0xeed3, 0x1, 0x0);
        gbc.writeMem(0x10e2, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x65e5, gbc.sp());
        EXPECT(0x10e4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C0 02BA
        gbc.setState(0xec46, 0xbcc9, 0x7ba0, 0xc766, 0xf826, 0x49fb, 0x1, 0x1);
        gbc.writeMem(0xec46, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0xbcc9, gbc.sp());
        EXPECT(0xec48, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xec46));
        EXPECT(0xc0, gbc.readMem(0xec47));
        // CB C0 02BB
        gbc.setState(0xb680, 0x8cf0, 0x3250, 0xcce8, 0x96e0, 0xfc11, 0x1, 0x0);
        gbc.writeMem(0xb680, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x8cf0, gbc.sp());
        EXPECT(0xb682, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb680));
        EXPECT(0xc0, gbc.readMem(0xb681));
        // CB C0 02BC
        gbc.setState(0x8ffb, 0xfbb0, 0x5330, 0xb2b9, 0x4c14, 0x817e, 0x0, 0x0);
        gbc.writeMem(0x8ffb, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0xfbb0, gbc.sp());
        EXPECT(0x8ffd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8ffb));
        EXPECT(0xc0, gbc.readMem(0x8ffc));
        // CB C0 02BD
        gbc.setState(0x7bdf, 0x9257, 0x97e0, 0xc650, 0x9a54, 0x374, 0x0, 0x0);
        gbc.writeMem(0x7bdf, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x9257, gbc.sp());
        EXPECT(0x7be1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C0 02BE
        gbc.setState(0x3818, 0xd227, 0xf370, 0x889d, 0x585, 0x2961, 0x0, 0x1);
        gbc.writeMem(0x3818, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0xd227, gbc.sp());
        EXPECT(0x381a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C0 02BF
        gbc.setState(0xd6d1, 0xfb03, 0xed40, 0xd4e5, 0xb3a2, 0xdccd, 0x1, 0x1);
        gbc.writeMem(0xd6d1, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0xfb03, gbc.sp());
        EXPECT(0xd6d3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd6d1));
        EXPECT(0xc0, gbc.readMem(0xd6d2));
        // CB C0 02C0
        gbc.setState(0xb799, 0xb2be, 0x3d30, 0x714, 0xd525, 0xa0db, 0x0, 0x0);
        gbc.writeMem(0xb799, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0xb2be, gbc.sp());
        EXPECT(0xb79b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb799));
        EXPECT(0xc0, gbc.readMem(0xb79a));
        // CB C0 02C1
        gbc.setState(0x9e8c, 0x959e, 0x2350, 0x3544, 0xee49, 0xb25e, 0x1, 0x1);
        gbc.writeMem(0x9e8c, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x959e, gbc.sp());
        EXPECT(0x9e8e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9e8c));
        EXPECT(0xc0, gbc.readMem(0x9e8d));
        // CB C0 02C2
        gbc.setState(0x70e2, 0x3c70, 0x17f0, 0x3ff1, 0x15f9, 0x51ca, 0x1, 0x1);
        gbc.writeMem(0x70e2, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x3c70, gbc.sp());
        EXPECT(0x70e4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C0 02C3
        gbc.setState(0x1288, 0xca4a, 0x41d0, 0x3ae9, 0xf806, 0x7913, 0x1, 0x1);
        gbc.writeMem(0x1288, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0xca4a, gbc.sp());
        EXPECT(0x128a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C0 02C4
        gbc.setState(0x8470, 0xe0c3, 0xc9a0, 0x7576, 0xc04b, 0xca02, 0x1, 0x1);
        gbc.writeMem(0x8470, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0xe0c3, gbc.sp());
        EXPECT(0x8472, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8470));
        EXPECT(0xc0, gbc.readMem(0x8471));
        // CB C0 02C5
        gbc.setState(0x1e49, 0x7564, 0x47d0, 0x4d59, 0x4207, 0xe887, 0x0, 0x0);
        gbc.writeMem(0x1e49, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x7564, gbc.sp());
        EXPECT(0x1e4b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C0 02C6
        gbc.setState(0x8549, 0x78a2, 0x7c20, 0x7b25, 0x465a, 0x6f2a, 0x1, 0x0);
        gbc.writeMem(0x8549, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x78a2, gbc.sp());
        EXPECT(0x854b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8549));
        EXPECT(0xc0, gbc.readMem(0x854a));
        // CB C0 02C7
        gbc.setState(0x3744, 0x223f, 0x6ca0, 0x7426, 0x257c, 0xa55, 0x0, 0x0);
        gbc.writeMem(0x3744, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x223f, gbc.sp());
        EXPECT(0x3746, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C0 02C8
        gbc.setState(0xe5e4, 0x8de7, 0xeee0, 0x8d0c, 0x4af, 0x2a61, 0x0, 0x0);
        gbc.writeMem(0xe5e4, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x8de7, gbc.sp());
        EXPECT(0xe5e6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe5e4));
        EXPECT(0xc0, gbc.readMem(0xe5e5));
        // CB C0 02C9
        gbc.setState(0xfb7, 0xf163, 0x8f00, 0x19fd, 0x44fa, 0x6d96, 0x1, 0x0);
        gbc.writeMem(0xfb7, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0xf163, gbc.sp());
        EXPECT(0xfb9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C0 02CA
        gbc.setState(0x63a8, 0x1bf6, 0xc0a0, 0xbf4e, 0xb614, 0xd64c, 0x0, 0x1);
        gbc.writeMem(0x63a8, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x1bf6, gbc.sp());
        EXPECT(0x63aa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C0 02CB
        gbc.setState(0x133b, 0x2ae6, 0x8570, 0x7dc, 0x8e06, 0x8909, 0x1, 0x0);
        gbc.writeMem(0x133b, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x2ae6, gbc.sp());
        EXPECT(0x133d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C0 02CC
        gbc.setState(0x4622, 0x7852, 0x1f60, 0xcdea, 0xef93, 0x2e8b, 0x1, 0x0);
        gbc.writeMem(0x4622, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x7852, gbc.sp());
        EXPECT(0x4624, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C0 02CD
        gbc.setState(0xcf2b, 0x4af1, 0x3de0, 0x76bb, 0x6017, 0xf933, 0x0, 0x0);
        gbc.writeMem(0xcf2b, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x4af1, gbc.sp());
        EXPECT(0xcf2d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcf2b));
        EXPECT(0xc0, gbc.readMem(0xcf2c));
        // CB C0 02CE
        gbc.setState(0x57d4, 0xc883, 0xac70, 0xdc15, 0x5fa0, 0x728c, 0x1, 0x0);
        gbc.writeMem(0x57d4, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0xc883, gbc.sp());
        EXPECT(0x57d6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C0 02CF
        gbc.setState(0x48fa, 0x74a6, 0x2ca0, 0xe2c8, 0x6101, 0x1ffa, 0x0, 0x0);
        gbc.writeMem(0x48fa, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0x74a6, gbc.sp());
        EXPECT(0x48fc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C0 02D0
        gbc.setState(0xbb68, 0x9d51, 0xa390, 0xa320, 0x6b5a, 0xab69, 0x0, 0x0);
        gbc.writeMem(0xbb68, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0x9d51, gbc.sp());
        EXPECT(0xbb6a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbb68));
        EXPECT(0xc0, gbc.readMem(0xbb69));
        // CB C0 02D1
        gbc.setState(0x8921, 0x8c2f, 0xff50, 0x56bf, 0xf7c6, 0xae00, 0x0, 0x0);
        gbc.writeMem(0x8921, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x8c2f, gbc.sp());
        EXPECT(0x8923, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8921));
        EXPECT(0xc0, gbc.readMem(0x8922));
        // CB C0 02D2
        gbc.setState(0x7cca, 0xa34, 0x4500, 0xcfff, 0xb13e, 0x7817, 0x0, 0x0);
        gbc.writeMem(0x7cca, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0xa34, gbc.sp());
        EXPECT(0x7ccc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C0 02D3
        gbc.setState(0xa9e, 0x85b3, 0x6e0, 0xf1db, 0xa0dd, 0x3e6a, 0x1, 0x1);
        gbc.writeMem(0xa9e, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x85b3, gbc.sp());
        EXPECT(0xaa0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C0 02D4
        gbc.setState(0xb0e7, 0x9b78, 0xd350, 0x4894, 0x7d2e, 0x846c, 0x1, 0x1);
        gbc.writeMem(0xb0e7, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x9b78, gbc.sp());
        EXPECT(0xb0e9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb0e7));
        EXPECT(0xc0, gbc.readMem(0xb0e8));
        // CB C0 02D5
        gbc.setState(0x8019, 0x8cb2, 0xd4f0, 0x27c9, 0xd900, 0x9677, 0x1, 0x0);
        gbc.writeMem(0x8019, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x8cb2, gbc.sp());
        EXPECT(0x801b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8019));
        EXPECT(0xc0, gbc.readMem(0x801a));
        // CB C0 02D6
        gbc.setState(0x5579, 0x9f89, 0x830, 0x1c53, 0xc107, 0x2465, 0x0, 0x1);
        gbc.writeMem(0x5579, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x9f89, gbc.sp());
        EXPECT(0x557b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C0 02D7
        gbc.setState(0xbe66, 0xd941, 0x3370, 0x159d, 0xa807, 0xc025, 0x1, 0x0);
        gbc.writeMem(0xbe66, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0xd941, gbc.sp());
        EXPECT(0xbe68, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbe66));
        EXPECT(0xc0, gbc.readMem(0xbe67));
        // CB C0 02D8
        gbc.setState(0xa836, 0x12e3, 0xe130, 0x97af, 0x8038, 0x2fb, 0x0, 0x1);
        gbc.writeMem(0xa836, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x12e3, gbc.sp());
        EXPECT(0xa838, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa836));
        EXPECT(0xc0, gbc.readMem(0xa837));
        // CB C0 02D9
        gbc.setState(0x58d0, 0x1dcd, 0x9e30, 0xcd39, 0xd63, 0x883f, 0x0, 0x1);
        gbc.writeMem(0x58d0, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0x1dcd, gbc.sp());
        EXPECT(0x58d2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C0 02DA
        gbc.setState(0xa001, 0x70c0, 0x18f0, 0x344c, 0x1dd, 0xc2d0, 0x0, 0x1);
        gbc.writeMem(0xa001, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x70c0, gbc.sp());
        EXPECT(0xa003, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa001));
        EXPECT(0xc0, gbc.readMem(0xa002));
        // CB C0 02DB
        gbc.setState(0xd310, 0xd3ef, 0xfea0, 0xd998, 0x8dd5, 0xd344, 0x1, 0x1);
        gbc.writeMem(0xd310, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0xd3ef, gbc.sp());
        EXPECT(0xd312, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd310));
        EXPECT(0xc0, gbc.readMem(0xd311));
        // CB C0 02DC
        gbc.setState(0x81d8, 0x3e89, 0xe870, 0x9045, 0xe05a, 0x4a8f, 0x0, 0x0);
        gbc.writeMem(0x81d8, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x3e89, gbc.sp());
        EXPECT(0x81da, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x81d8));
        EXPECT(0xc0, gbc.readMem(0x81d9));
        // CB C0 02DD
        gbc.setState(0x455e, 0xb28d, 0x2ed0, 0x41d0, 0x2783, 0x9d39, 0x0, 0x0);
        gbc.writeMem(0x455e, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0xb28d, gbc.sp());
        EXPECT(0x4560, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C0 02DE
        gbc.setState(0x89de, 0xfce6, 0x6bf0, 0xd4a6, 0x6d41, 0x756b, 0x1, 0x1);
        gbc.writeMem(0x89de, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0xfce6, gbc.sp());
        EXPECT(0x89e0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x89de));
        EXPECT(0xc0, gbc.readMem(0x89df));
        // CB C0 02DF
        gbc.setState(0x945b, 0x5be5, 0x1140, 0x5992, 0xf39, 0x100f, 0x0, 0x1);
        gbc.writeMem(0x945b, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x5be5, gbc.sp());
        EXPECT(0x945d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x945b));
        EXPECT(0xc0, gbc.readMem(0x945c));
        // CB C0 02E0
        gbc.setState(0xe030, 0xa03b, 0xf6e0, 0xdd89, 0x4a07, 0x4e56, 0x0, 0x1);
        gbc.writeMem(0xe030, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0xa03b, gbc.sp());
        EXPECT(0xe032, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe030));
        EXPECT(0xc0, gbc.readMem(0xe031));
        // CB C0 02E1
        gbc.setState(0xedca, 0x1a5f, 0xe500, 0x24ca, 0x49a6, 0xed, 0x0, 0x1);
        gbc.writeMem(0xedca, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x1a5f, gbc.sp());
        EXPECT(0xedcc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xedca));
        EXPECT(0xc0, gbc.readMem(0xedcb));
        // CB C0 02E2
        gbc.setState(0x4eef, 0xc2bc, 0xe810, 0xc546, 0x249, 0x458e, 0x0, 0x1);
        gbc.writeMem(0x4eef, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0xc2bc, gbc.sp());
        EXPECT(0x4ef1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C0 02E3
        gbc.setState(0x1c3b, 0x7ef, 0x5470, 0xaef8, 0xbed1, 0x5ecd, 0x1, 0x1);
        gbc.writeMem(0x1c3b, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x7ef, gbc.sp());
        EXPECT(0x1c3d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C0 02E4
        gbc.setState(0x1076, 0xe08a, 0x70b0, 0xcb34, 0x93ab, 0x6cf2, 0x1, 0x0);
        gbc.writeMem(0x1076, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0xe08a, gbc.sp());
        EXPECT(0x1078, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C0 02E5
        gbc.setState(0xa168, 0x9883, 0x21c0, 0x6156, 0x5704, 0xdca0, 0x1, 0x1);
        gbc.writeMem(0xa168, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x9883, gbc.sp());
        EXPECT(0xa16a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa168));
        EXPECT(0xc0, gbc.readMem(0xa169));
        // CB C0 02E6
        gbc.setState(0x2475, 0xd46b, 0xabc0, 0xa561, 0x72e0, 0xe8bc, 0x1, 0x0);
        gbc.writeMem(0x2475, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0xd46b, gbc.sp());
        EXPECT(0x2477, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C0 02E7
        gbc.setState(0x65f, 0x8eb3, 0xe0c0, 0xf6f8, 0xf717, 0x3506, 0x1, 0x0);
        gbc.writeMem(0x65f, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x8eb3, gbc.sp());
        EXPECT(0x661, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C0 02E9
        gbc.setState(0x9c9a, 0x9ceb, 0xf150, 0xe15b, 0xf240, 0x9cc0, 0x1, 0x0);
        gbc.writeMem(0x9c9a, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x9ceb, gbc.sp());
        EXPECT(0x9c9c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9c9a));
        EXPECT(0xc0, gbc.readMem(0x9c9b));
        // CB C0 02EA
        gbc.setState(0x153, 0x9fcf, 0x2af0, 0x5a05, 0xf4dc, 0x4b1d, 0x1, 0x0);
        gbc.writeMem(0x153, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x9fcf, gbc.sp());
        EXPECT(0x155, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C0 02EB
        gbc.setState(0xf54, 0xa8c3, 0x21c0, 0xfe08, 0x133a, 0x70c8, 0x0, 0x1);
        gbc.writeMem(0xf54, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0xa8c3, gbc.sp());
        EXPECT(0xf56, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C0 02EC
        gbc.setState(0x7dcf, 0xc37c, 0x8d60, 0x93b3, 0x1758, 0x79db, 0x1, 0x0);
        gbc.writeMem(0x7dcf, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0xc37c, gbc.sp());
        EXPECT(0x7dd1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C0 02ED
        gbc.setState(0x78fa, 0xd6f, 0x7e0, 0xb1a3, 0x108d, 0x7722, 0x0, 0x1);
        gbc.writeMem(0x78fa, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0xd6f, gbc.sp());
        EXPECT(0x78fc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C0 02EE
        gbc.setState(0x5520, 0x425b, 0x9d60, 0x2ad0, 0xe67b, 0xb8d7, 0x0, 0x1);
        gbc.writeMem(0x5520, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0x425b, gbc.sp());
        EXPECT(0x5522, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C0 02EF
        gbc.setState(0x1a7f, 0x53e5, 0xcc30, 0x11d8, 0x3430, 0x472c, 0x1, 0x1);
        gbc.writeMem(0x1a7f, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x53e5, gbc.sp());
        EXPECT(0x1a81, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C0 02F0
        gbc.setState(0x3a7b, 0x81f1, 0x6d80, 0xc402, 0x7c88, 0xcb87, 0x1, 0x0);
        gbc.writeMem(0x3a7b, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x81f1, gbc.sp());
        EXPECT(0x3a7d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C0 02F1
        gbc.setState(0xe55, 0x69e4, 0x6f20, 0x845, 0x91db, 0x51c1, 0x1, 0x0);
        gbc.writeMem(0xe55, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x69e4, gbc.sp());
        EXPECT(0xe57, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C0 02F2
        gbc.setState(0x4c81, 0x3537, 0xcc60, 0xa3ef, 0xfbaa, 0xa0f0, 0x0, 0x0);
        gbc.writeMem(0x4c81, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x3537, gbc.sp());
        EXPECT(0x4c83, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C0 02F3
        gbc.setState(0xb0a5, 0x8987, 0x27b0, 0x3cb6, 0x83cb, 0x4ded, 0x0, 0x1);
        gbc.writeMem(0xb0a5, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x8987, gbc.sp());
        EXPECT(0xb0a7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb0a5));
        EXPECT(0xc0, gbc.readMem(0xb0a6));
        // CB C0 02F4
        gbc.setState(0x7f0f, 0xbf22, 0xe040, 0x79c4, 0x83a1, 0xbe18, 0x1, 0x1);
        gbc.writeMem(0x7f0f, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0xbf22, gbc.sp());
        EXPECT(0x7f11, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C0 02F5
        gbc.setState(0x8184, 0xa82b, 0x2d90, 0x31ff, 0x8b29, 0x2a3d, 0x1, 0x0);
        gbc.writeMem(0x8184, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0xa82b, gbc.sp());
        EXPECT(0x8186, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8184));
        EXPECT(0xc0, gbc.readMem(0x8185));
        // CB C0 02F6
        gbc.setState(0xc372, 0xf9a8, 0xd230, 0xd46d, 0xf356, 0xfac8, 0x1, 0x0);
        gbc.writeMem(0xc372, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0xf9a8, gbc.sp());
        EXPECT(0xc374, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc372));
        EXPECT(0xc0, gbc.readMem(0xc373));
        // CB C0 02F7
        gbc.setState(0xa428, 0xd5a3, 0xde00, 0xf519, 0x8c96, 0x5541, 0x1, 0x1);
        gbc.writeMem(0xa428, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0xd5a3, gbc.sp());
        EXPECT(0xa42a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa428));
        EXPECT(0xc0, gbc.readMem(0xa429));
        // CB C0 02F8
        gbc.setState(0xd8e1, 0xcbcb, 0xc220, 0xcdaf, 0x616, 0x841c, 0x0, 0x1);
        gbc.writeMem(0xd8e1, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0xcbcb, gbc.sp());
        EXPECT(0xd8e3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd8e1));
        EXPECT(0xc0, gbc.readMem(0xd8e2));
        // CB C0 02F9
        gbc.setState(0xa23a, 0xeae7, 0xacf0, 0x216, 0x64e, 0xeede, 0x1, 0x1);
        gbc.writeMem(0xa23a, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0xeae7, gbc.sp());
        EXPECT(0xa23c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa23a));
        EXPECT(0xc0, gbc.readMem(0xa23b));
        // CB C0 02FA
        gbc.setState(0x8da, 0xf9c2, 0x9ff0, 0x6986, 0xb09a, 0x55fb, 0x0, 0x1);
        gbc.writeMem(0x8da, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0xf9c2, gbc.sp());
        EXPECT(0x8dc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C0 02FB
        gbc.setState(0x5ac9, 0xd38b, 0xf020, 0x72af, 0x6887, 0x462e, 0x1, 0x0);
        gbc.writeMem(0x5ac9, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0xd38b, gbc.sp());
        EXPECT(0x5acb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C0 02FC
        gbc.setState(0x9ae1, 0x20db, 0xcea0, 0x1328, 0xf4ff, 0xe141, 0x0, 0x0);
        gbc.writeMem(0x9ae1, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x20db, gbc.sp());
        EXPECT(0x9ae3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9ae1));
        EXPECT(0xc0, gbc.readMem(0x9ae2));
        // CB C0 02FD
        gbc.setState(0xe8de, 0xe8bb, 0x5f0, 0xeb82, 0xe9a6, 0x1f7c, 0x1, 0x1);
        gbc.writeMem(0xe8de, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0xe8bb, gbc.sp());
        EXPECT(0xe8e0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe8de));
        EXPECT(0xc0, gbc.readMem(0xe8df));
        // CB C0 02FE
        gbc.setState(0x3225, 0x41c4, 0x4990, 0x2120, 0x5ab3, 0xa3d5, 0x1, 0x0);
        gbc.writeMem(0x3225, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x41c4, gbc.sp());
        EXPECT(0x3227, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C0 02FF
        gbc.setState(0x5dda, 0x303d, 0xe30, 0x70be, 0x3cfe, 0x77ac, 0x1, 0x0);
        gbc.writeMem(0x5dda, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x303d, gbc.sp());
        EXPECT(0x5ddc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C0 0300
        gbc.setState(0xd8e4, 0x939d, 0x5ae0, 0x4fd2, 0x9aa0, 0x767, 0x1, 0x1);
        gbc.writeMem(0xd8e4, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x939d, gbc.sp());
        EXPECT(0xd8e6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd8e4));
        EXPECT(0xc0, gbc.readMem(0xd8e5));
        // CB C0 0301
        gbc.setState(0x8b08, 0xa9eb, 0x43b0, 0xc2e8, 0xbdc9, 0x9ffa, 0x1, 0x1);
        gbc.writeMem(0x8b08, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0xa9eb, gbc.sp());
        EXPECT(0x8b0a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8b08));
        EXPECT(0xc0, gbc.readMem(0x8b09));
        // CB C0 0302
        gbc.setState(0xd16b, 0x4d43, 0x3940, 0xc6f1, 0x3455, 0x7c13, 0x1, 0x0);
        gbc.writeMem(0xd16b, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x4d43, gbc.sp());
        EXPECT(0xd16d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd16b));
        EXPECT(0xc0, gbc.readMem(0xd16c));
        // CB C0 0303
        gbc.setState(0x54b6, 0x6fd, 0x2980, 0xa5c8, 0xbaae, 0x80f8, 0x0, 0x1);
        gbc.writeMem(0x54b6, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x6fd, gbc.sp());
        EXPECT(0x54b8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C0 0304
        gbc.setState(0x571c, 0xd924, 0xf1a0, 0x4929, 0x48e1, 0x1aa0, 0x1, 0x1);
        gbc.writeMem(0x571c, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0xd924, gbc.sp());
        EXPECT(0x571e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C0 0305
        gbc.setState(0x8f5f, 0xb72, 0x5c70, 0x7408, 0x40dc, 0xc389, 0x0, 0x0);
        gbc.writeMem(0x8f5f, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0xb72, gbc.sp());
        EXPECT(0x8f61, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8f5f));
        EXPECT(0xc0, gbc.readMem(0x8f60));
        // CB C0 0306
        gbc.setState(0x15c0, 0xd6b8, 0xbab0, 0x299e, 0x8288, 0xa8f9, 0x1, 0x0);
        gbc.writeMem(0x15c0, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0xd6b8, gbc.sp());
        EXPECT(0x15c2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C0 0307
        gbc.setState(0x55be, 0x9f33, 0xe550, 0xc1f8, 0x2198, 0xbcf3, 0x1, 0x0);
        gbc.writeMem(0x55be, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x9f33, gbc.sp());
        EXPECT(0x55c0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C0 0308
        gbc.setState(0x3141, 0x5e3e, 0x2ba0, 0xacf8, 0x4e7f, 0x9669, 0x1, 0x1);
        gbc.writeMem(0x3141, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0x5e3e, gbc.sp());
        EXPECT(0x3143, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C0 0309
        gbc.setState(0x2d82, 0x7dc3, 0x3c10, 0xe82b, 0xca19, 0xeee, 0x1, 0x0);
        gbc.writeMem(0x2d82, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x7dc3, gbc.sp());
        EXPECT(0x2d84, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C0 030A
        gbc.setState(0x2a27, 0x60f8, 0x61e0, 0x808c, 0x5914, 0xf165, 0x1, 0x0);
        gbc.writeMem(0x2a27, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x60f8, gbc.sp());
        EXPECT(0x2a29, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C0 030B
        gbc.setState(0x68d2, 0xd112, 0x1790, 0x6908, 0xc96b, 0x4fcd, 0x1, 0x1);
        gbc.writeMem(0x68d2, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0xd112, gbc.sp());
        EXPECT(0x68d4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C0 030C
        gbc.setState(0x904f, 0xa8, 0x4110, 0xf848, 0x8042, 0x404e, 0x0, 0x0);
        gbc.writeMem(0x904f, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0xa8, gbc.sp());
        EXPECT(0x9051, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x904f));
        EXPECT(0xc0, gbc.readMem(0x9050));
        // CB C0 030D
        gbc.setState(0x77b, 0x9d43, 0x9e50, 0x1fe0, 0x5ad9, 0x52ec, 0x0, 0x1);
        gbc.writeMem(0x77b, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x9d43, gbc.sp());
        EXPECT(0x77d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C0 030E
        gbc.setState(0x762c, 0x2ae6, 0xdb00, 0xdf61, 0xae51, 0xa4e9, 0x0, 0x1);
        gbc.writeMem(0x762c, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x2ae6, gbc.sp());
        EXPECT(0x762e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C0 030F
        gbc.setState(0x5609, 0xdd0d, 0xf310, 0x722, 0x9558, 0xe983, 0x0, 0x0);
        gbc.writeMem(0x5609, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0xdd0d, gbc.sp());
        EXPECT(0x560b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C0 0310
        gbc.setState(0xe218, 0x22b8, 0x2a60, 0x36e7, 0x62fe, 0xaa1f, 0x0, 0x1);
        gbc.writeMem(0xe218, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x22b8, gbc.sp());
        EXPECT(0xe21a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe218));
        EXPECT(0xc0, gbc.readMem(0xe219));
        // CB C0 0311
        gbc.setState(0xca24, 0x2868, 0x9460, 0xb150, 0xd606, 0x9398, 0x1, 0x1);
        gbc.writeMem(0xca24, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x2868, gbc.sp());
        EXPECT(0xca26, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xca24));
        EXPECT(0xc0, gbc.readMem(0xca25));
        // CB C0 0312
        gbc.setState(0xa578, 0x408, 0x6920, 0xcee, 0xc378, 0x88ce, 0x0, 0x1);
        gbc.writeMem(0xa578, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x408, gbc.sp());
        EXPECT(0xa57a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa578));
        EXPECT(0xc0, gbc.readMem(0xa579));
        // CB C0 0313
        gbc.setState(0xa91e, 0xba70, 0x2890, 0xe8a6, 0x2dc1, 0x8e39, 0x0, 0x1);
        gbc.writeMem(0xa91e, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0xba70, gbc.sp());
        EXPECT(0xa920, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa91e));
        EXPECT(0xc0, gbc.readMem(0xa91f));
        // CB C0 0314
        gbc.setState(0xe8c0, 0xe11f, 0x5bd0, 0xb0f1, 0x96ee, 0x221d, 0x1, 0x1);
        gbc.writeMem(0xe8c0, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0xe11f, gbc.sp());
        EXPECT(0xe8c2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe8c0));
        EXPECT(0xc0, gbc.readMem(0xe8c1));
        // CB C0 0315
        gbc.setState(0x95f, 0xcb45, 0x6c00, 0xdd64, 0x1beb, 0xea86, 0x1, 0x1);
        gbc.writeMem(0x95f, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0xcb45, gbc.sp());
        EXPECT(0x961, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C0 0316
        gbc.setState(0x665b, 0xa6e7, 0xdf00, 0x7977, 0x80d0, 0x678f, 0x0, 0x1);
        gbc.writeMem(0x665b, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0xa6e7, gbc.sp());
        EXPECT(0x665d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C0 0317
        gbc.setState(0x7b19, 0xbdaf, 0xb850, 0xaeb2, 0xf1f0, 0xd9e4, 0x1, 0x0);
        gbc.writeMem(0x7b19, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0xbdaf, gbc.sp());
        EXPECT(0x7b1b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C0 0318
        gbc.setState(0x1934, 0x724a, 0x2310, 0x2bad, 0x7582, 0x228f, 0x0, 0x0);
        gbc.writeMem(0x1934, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x724a, gbc.sp());
        EXPECT(0x1936, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C0 0319
        gbc.setState(0xe089, 0xcf1, 0x4500, 0x85b6, 0xf43f, 0xb85d, 0x0, 0x1);
        gbc.writeMem(0xe089, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0xcf1, gbc.sp());
        EXPECT(0xe08b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe089));
        EXPECT(0xc0, gbc.readMem(0xe08a));
        // CB C0 031A
        gbc.setState(0xdc4a, 0x98ce, 0x2130, 0x303f, 0xffda, 0x6ab6, 0x0, 0x0);
        gbc.writeMem(0xdc4a, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x98ce, gbc.sp());
        EXPECT(0xdc4c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdc4a));
        EXPECT(0xc0, gbc.readMem(0xdc4b));
        // CB C0 031B
        gbc.setState(0x5596, 0x7c55, 0xace0, 0x57c7, 0x2550, 0x7261, 0x1, 0x0);
        gbc.writeMem(0x5596, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x7c55, gbc.sp());
        EXPECT(0x5598, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C0 031C
        gbc.setState(0x4582, 0x6df, 0xb0d0, 0x2f78, 0x92d9, 0xbc03, 0x1, 0x0);
        gbc.writeMem(0x4582, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x6df, gbc.sp());
        EXPECT(0x4584, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C0 031D
        gbc.setState(0xe24c, 0x9216, 0xb830, 0x2c96, 0x47b7, 0x480f, 0x0, 0x0);
        gbc.writeMem(0xe24c, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x9216, gbc.sp());
        EXPECT(0xe24e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe24c));
        EXPECT(0xc0, gbc.readMem(0xe24d));
        // CB C0 031E
        gbc.setState(0x8ddf, 0xbe46, 0x9760, 0xe471, 0x85c8, 0xe9ec, 0x0, 0x1);
        gbc.writeMem(0x8ddf, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0xbe46, gbc.sp());
        EXPECT(0x8de1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8ddf));
        EXPECT(0xc0, gbc.readMem(0x8de0));
        // CB C0 031F
        gbc.setState(0xc27, 0xb7ce, 0x8d0, 0x53e0, 0x43a2, 0xc284, 0x0, 0x1);
        gbc.writeMem(0xc27, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0xb7ce, gbc.sp());
        EXPECT(0xc29, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C0 0321
        gbc.setState(0x8301, 0x9105, 0x7e10, 0xf20a, 0xd642, 0xb1ca, 0x0, 0x0);
        gbc.writeMem(0x8301, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x9105, gbc.sp());
        EXPECT(0x8303, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8301));
        EXPECT(0xc0, gbc.readMem(0x8302));
        // CB C0 0322
        gbc.setState(0x6895, 0x79b0, 0xff70, 0x4410, 0x90b6, 0x54f5, 0x0, 0x1);
        gbc.writeMem(0x6895, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x79b0, gbc.sp());
        EXPECT(0x6897, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C0 0323
        gbc.setState(0x38eb, 0xd252, 0x2f40, 0x2d8a, 0x70df, 0xf16, 0x1, 0x0);
        gbc.writeMem(0x38eb, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0xd252, gbc.sp());
        EXPECT(0x38ed, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C0 0325
        gbc.setState(0xca20, 0x710a, 0xca00, 0x1bc2, 0x3ade, 0x20d0, 0x1, 0x1);
        gbc.writeMem(0xca20, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x710a, gbc.sp());
        EXPECT(0xca22, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xca20));
        EXPECT(0xc0, gbc.readMem(0xca21));
        // CB C0 0326
        gbc.setState(0x6482, 0xa939, 0x9d90, 0x9453, 0x72ae, 0x32ba, 0x0, 0x1);
        gbc.writeMem(0x6482, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0xa939, gbc.sp());
        EXPECT(0x6484, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C0 0327
        gbc.setState(0xdd68, 0x333, 0x3930, 0xaac3, 0x4daf, 0x3746, 0x0, 0x0);
        gbc.writeMem(0xdd68, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x333, gbc.sp());
        EXPECT(0xdd6a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdd68));
        EXPECT(0xc0, gbc.readMem(0xdd69));
        // CB C0 0328
        gbc.setState(0x4b2b, 0xab9c, 0x4f30, 0x10ea, 0xd45a, 0x61f, 0x0, 0x0);
        gbc.writeMem(0x4b2b, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0xab9c, gbc.sp());
        EXPECT(0x4b2d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C0 0329
        gbc.setState(0x4d71, 0x7616, 0x6150, 0x2065, 0xf092, 0xe941, 0x1, 0x1);
        gbc.writeMem(0x4d71, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x7616, gbc.sp());
        EXPECT(0x4d73, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C0 032A
        gbc.setState(0x3c69, 0xc939, 0x1b50, 0xed15, 0xa6d6, 0xbf0e, 0x1, 0x0);
        gbc.writeMem(0x3c69, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0xc939, gbc.sp());
        EXPECT(0x3c6b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C0 032B
        gbc.setState(0x88e2, 0x2622, 0xe270, 0x4647, 0x238b, 0x654, 0x0, 0x1);
        gbc.writeMem(0x88e2, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x2622, gbc.sp());
        EXPECT(0x88e4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x88e2));
        EXPECT(0xc0, gbc.readMem(0x88e3));
        // CB C0 032C
        gbc.setState(0x85b7, 0xa8d9, 0x3650, 0xb1d9, 0xf43, 0xabe6, 0x1, 0x1);
        gbc.writeMem(0x85b7, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0xa8d9, gbc.sp());
        EXPECT(0x85b9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x85b7));
        EXPECT(0xc0, gbc.readMem(0x85b8));
        // CB C0 032D
        gbc.setState(0x82f7, 0x6957, 0xf030, 0xd502, 0xe3b0, 0xa548, 0x1, 0x1);
        gbc.writeMem(0x82f7, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0x6957, gbc.sp());
        EXPECT(0x82f9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x82f7));
        EXPECT(0xc0, gbc.readMem(0x82f8));
        // CB C0 032E
        gbc.setState(0x9f56, 0xa3ca, 0x9d20, 0x255b, 0x1be1, 0x8186, 0x0, 0x0);
        gbc.writeMem(0x9f56, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0xa3ca, gbc.sp());
        EXPECT(0x9f58, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9f56));
        EXPECT(0xc0, gbc.readMem(0x9f57));
        // CB C0 032F
        gbc.setState(0xb1dd, 0x9e53, 0xcdf0, 0x504d, 0x658, 0x9e5c, 0x0, 0x1);
        gbc.writeMem(0xb1dd, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x9e53, gbc.sp());
        EXPECT(0xb1df, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb1dd));
        EXPECT(0xc0, gbc.readMem(0xb1de));
        // CB C0 0330
        gbc.setState(0xc334, 0xedbc, 0xb4a0, 0x5cba, 0x9931, 0x757c, 0x0, 0x0);
        gbc.writeMem(0xc334, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0xedbc, gbc.sp());
        EXPECT(0xc336, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc334));
        EXPECT(0xc0, gbc.readMem(0xc335));
        // CB C0 0331
        gbc.setState(0x19dd, 0x779e, 0xbaf0, 0xd512, 0x8849, 0xce44, 0x0, 0x1);
        gbc.writeMem(0x19dd, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x779e, gbc.sp());
        EXPECT(0x19df, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C0 0332
        gbc.setState(0x2283, 0xe969, 0xc6f0, 0xe8f0, 0xb6a9, 0x917a, 0x1, 0x1);
        gbc.writeMem(0x2283, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0xe969, gbc.sp());
        EXPECT(0x2285, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C0 0333
        gbc.setState(0x3330, 0x9ff0, 0x6030, 0x97, 0x2bd1, 0xf3d, 0x1, 0x1);
        gbc.writeMem(0x3330, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x9ff0, gbc.sp());
        EXPECT(0x3332, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C0 0334
        gbc.setState(0x2c1b, 0xf7e9, 0xc260, 0x37d3, 0x7073, 0x5f0a, 0x1, 0x0);
        gbc.writeMem(0x2c1b, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0xf7e9, gbc.sp());
        EXPECT(0x2c1d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C0 0335
        gbc.setState(0xca1e, 0x7f35, 0x6710, 0xe77c, 0xb0d6, 0xf81c, 0x0, 0x1);
        gbc.writeMem(0xca1e, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x7f35, gbc.sp());
        EXPECT(0xca20, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xca1e));
        EXPECT(0xc0, gbc.readMem(0xca1f));
        // CB C0 0336
        gbc.setState(0x2ccf, 0xc92d, 0x8110, 0x9000, 0x9778, 0x32f2, 0x0, 0x1);
        gbc.writeMem(0x2ccf, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0xc92d, gbc.sp());
        EXPECT(0x2cd1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C0 0337
        gbc.setState(0x3064, 0x9623, 0xa900, 0x6cca, 0x43a, 0x244f, 0x1, 0x0);
        gbc.writeMem(0x3064, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x9623, gbc.sp());
        EXPECT(0x3066, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C0 0338
        gbc.setState(0x1adc, 0x9fe7, 0xa8b0, 0xfb90, 0x840f, 0x9618, 0x1, 0x0);
        gbc.writeMem(0x1adc, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x9fe7, gbc.sp());
        EXPECT(0x1ade, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C0 033A
        gbc.setState(0x7687, 0x1d85, 0x20b0, 0x671e, 0x72e8, 0xa2b1, 0x0, 0x0);
        gbc.writeMem(0x7687, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x1d85, gbc.sp());
        EXPECT(0x7689, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C0 033B
        gbc.setState(0xd431, 0x119a, 0x60c0, 0x58b7, 0x22c2, 0xa9d3, 0x1, 0x0);
        gbc.writeMem(0xd431, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x119a, gbc.sp());
        EXPECT(0xd433, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd431));
        EXPECT(0xc0, gbc.readMem(0xd432));
        // CB C0 033C
        gbc.setState(0xb750, 0x5977, 0xee00, 0xb263, 0x3a5b, 0xf565, 0x1, 0x0);
        gbc.writeMem(0xb750, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x5977, gbc.sp());
        EXPECT(0xb752, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb750));
        EXPECT(0xc0, gbc.readMem(0xb751));
        // CB C0 033D
        gbc.setState(0x4f8d, 0xf389, 0x6140, 0xa920, 0x86c2, 0xd64f, 0x0, 0x1);
        gbc.writeMem(0x4f8d, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0xf389, gbc.sp());
        EXPECT(0x4f8f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C0 033E
        gbc.setState(0x772c, 0x45ec, 0xfdd0, 0x89f8, 0xb7ce, 0x6019, 0x1, 0x1);
        gbc.writeMem(0x772c, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x45ec, gbc.sp());
        EXPECT(0x772e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C0 033F
        gbc.setState(0x5f21, 0x87d3, 0xeab0, 0xe02d, 0x2d67, 0xe88d, 0x1, 0x0);
        gbc.writeMem(0x5f21, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x87d3, gbc.sp());
        EXPECT(0x5f23, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C0 0340
        gbc.setState(0x157e, 0xc424, 0xdd60, 0x14a, 0x400a, 0x1aa3, 0x1, 0x1);
        gbc.writeMem(0x157e, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0xc424, gbc.sp());
        EXPECT(0x1580, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C0 0341
        gbc.setState(0x78ae, 0x193e, 0x2c20, 0x7a83, 0x95ae, 0x84cd, 0x0, 0x0);
        gbc.writeMem(0x78ae, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x193e, gbc.sp());
        EXPECT(0x78b0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C0 0342
        gbc.setState(0xb528, 0x7611, 0xfef0, 0x4043, 0x2822, 0xd582, 0x0, 0x1);
        gbc.writeMem(0xb528, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x7611, gbc.sp());
        EXPECT(0xb52a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb528));
        EXPECT(0xc0, gbc.readMem(0xb529));
        // CB C0 0343
        gbc.setState(0x2536, 0x97ce, 0x4c90, 0x331f, 0xceef, 0x87a3, 0x1, 0x1);
        gbc.writeMem(0x2536, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0x97ce, gbc.sp());
        EXPECT(0x2538, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C0 0344
        gbc.setState(0x95ad, 0x6e37, 0x6510, 0x388a, 0xf044, 0x92e0, 0x1, 0x0);
        gbc.writeMem(0x95ad, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x6e37, gbc.sp());
        EXPECT(0x95af, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x95ad));
        EXPECT(0xc0, gbc.readMem(0x95ae));
        // CB C0 0345
        gbc.setState(0xa3f2, 0xfe80, 0xe220, 0xc365, 0x7910, 0x7683, 0x0, 0x1);
        gbc.writeMem(0xa3f2, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0xfe80, gbc.sp());
        EXPECT(0xa3f4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa3f2));
        EXPECT(0xc0, gbc.readMem(0xa3f3));
        // CB C0 0346
        gbc.setState(0x4e1d, 0xdcc7, 0x6700, 0x952f, 0xb892, 0x5682, 0x0, 0x1);
        gbc.writeMem(0x4e1d, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0xdcc7, gbc.sp());
        EXPECT(0x4e1f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C0 0347
        gbc.setState(0x7d38, 0x9f35, 0x1c30, 0xdb50, 0x45be, 0x266b, 0x0, 0x0);
        gbc.writeMem(0x7d38, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x9f35, gbc.sp());
        EXPECT(0x7d3a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C0 0348
        gbc.setState(0xb724, 0x2778, 0x3fa0, 0xad72, 0x93de, 0x6a17, 0x1, 0x0);
        gbc.writeMem(0xb724, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x2778, gbc.sp());
        EXPECT(0xb726, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb724));
        EXPECT(0xc0, gbc.readMem(0xb725));
        // CB C0 0349
        gbc.setState(0x2d6, 0xc6be, 0x96b0, 0xd1f3, 0x7663, 0x88dd, 0x0, 0x1);
        gbc.writeMem(0x2d6, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0xc6be, gbc.sp());
        EXPECT(0x2d8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C0 034A
        gbc.setState(0xcf62, 0x5f21, 0x45b0, 0xa15a, 0x6826, 0xe922, 0x1, 0x0);
        gbc.writeMem(0xcf62, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x5f21, gbc.sp());
        EXPECT(0xcf64, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcf62));
        EXPECT(0xc0, gbc.readMem(0xcf63));
        // CB C0 034B
        gbc.setState(0x2026, 0xe352, 0xf780, 0xced1, 0x989, 0xf2fc, 0x1, 0x0);
        gbc.writeMem(0x2026, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0xe352, gbc.sp());
        EXPECT(0x2028, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C0 034C
        gbc.setState(0x4393, 0x1537, 0x9630, 0x63b0, 0x9028, 0x4243, 0x1, 0x1);
        gbc.writeMem(0x4393, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x1537, gbc.sp());
        EXPECT(0x4395, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C0 034D
        gbc.setState(0x1ed5, 0x309c, 0xbf50, 0x50b7, 0xf1bb, 0x991e, 0x0, 0x1);
        gbc.writeMem(0x1ed5, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x309c, gbc.sp());
        EXPECT(0x1ed7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C0 034E
        gbc.setState(0xbac2, 0x3271, 0x4f50, 0xbd71, 0xd932, 0xd198, 0x0, 0x1);
        gbc.writeMem(0xbac2, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x3271, gbc.sp());
        EXPECT(0xbac4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbac2));
        EXPECT(0xc0, gbc.readMem(0xbac3));
        // CB C0 0350
        gbc.setState(0x8ceb, 0x9720, 0x9c30, 0xac60, 0x3461, 0x121f, 0x1, 0x0);
        gbc.writeMem(0x8ceb, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x9720, gbc.sp());
        EXPECT(0x8ced, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8ceb));
        EXPECT(0xc0, gbc.readMem(0x8cec));
        // CB C0 0351
        gbc.setState(0x671a, 0x975b, 0x85a0, 0x61f, 0x241d, 0xa3e2, 0x1, 0x0);
        gbc.writeMem(0x671a, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x975b, gbc.sp());
        EXPECT(0x671c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C0 0352
        gbc.setState(0x61af, 0xba98, 0xab80, 0x1811, 0xfc51, 0x1bbf, 0x1, 0x1);
        gbc.writeMem(0x61af, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0xba98, gbc.sp());
        EXPECT(0x61b1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C0 0353
        gbc.setState(0x83ec, 0x2c8a, 0xf800, 0xc75b, 0x5008, 0x79b5, 0x1, 0x1);
        gbc.writeMem(0x83ec, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x2c8a, gbc.sp());
        EXPECT(0x83ee, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x83ec));
        EXPECT(0xc0, gbc.readMem(0x83ed));
        // CB C0 0354
        gbc.setState(0xeb5a, 0x958e, 0x4a40, 0xf60b, 0xbc44, 0xc7c7, 0x1, 0x0);
        gbc.writeMem(0xeb5a, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x958e, gbc.sp());
        EXPECT(0xeb5c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeb5a));
        EXPECT(0xc0, gbc.readMem(0xeb5b));
        // CB C0 0355
        gbc.setState(0x4f4d, 0x339a, 0x8220, 0xb7f2, 0xc27a, 0x1bca, 0x1, 0x1);
        gbc.writeMem(0x4f4d, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x339a, gbc.sp());
        EXPECT(0x4f4f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C0 0356
        gbc.setState(0x5a7, 0x4c83, 0xb900, 0x4840, 0x84b, 0x5cbf, 0x0, 0x0);
        gbc.writeMem(0x5a7, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x4c83, gbc.sp());
        EXPECT(0x5a9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C0 0357
        gbc.setState(0x78fa, 0x174, 0xd80, 0x33bf, 0x20b1, 0xe169, 0x0, 0x1);
        gbc.writeMem(0x78fa, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0x174, gbc.sp());
        EXPECT(0x78fc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C0 0358
        gbc.setState(0xbbfc, 0x68cd, 0xcfd0, 0xc427, 0xd5f3, 0x3d9c, 0x1, 0x0);
        gbc.writeMem(0xbbfc, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x68cd, gbc.sp());
        EXPECT(0xbbfe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbbfc));
        EXPECT(0xc0, gbc.readMem(0xbbfd));
        // CB C0 0359
        gbc.setState(0x3ae9, 0x3435, 0x6660, 0xdc31, 0x6516, 0xffa8, 0x0, 0x1);
        gbc.writeMem(0x3ae9, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x3435, gbc.sp());
        EXPECT(0x3aeb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C0 035A
        gbc.setState(0x62e1, 0x5710, 0xe740, 0x2552, 0xe891, 0xb5c2, 0x1, 0x1);
        gbc.writeMem(0x62e1, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x5710, gbc.sp());
        EXPECT(0x62e3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C0 035B
        gbc.setState(0x7b60, 0xbd29, 0xed00, 0xce35, 0xd4dd, 0x2a84, 0x1, 0x1);
        gbc.writeMem(0x7b60, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0xbd29, gbc.sp());
        EXPECT(0x7b62, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C0 035C
        gbc.setState(0x8b66, 0xa2c8, 0xfc40, 0x6139, 0x7f2f, 0x585f, 0x1, 0x1);
        gbc.writeMem(0x8b66, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0xa2c8, gbc.sp());
        EXPECT(0x8b68, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8b66));
        EXPECT(0xc0, gbc.readMem(0x8b67));
        // CB C0 035D
        gbc.setState(0x15e2, 0xbad4, 0x2b90, 0x6118, 0x42b4, 0xdeff, 0x0, 0x1);
        gbc.writeMem(0x15e2, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0xbad4, gbc.sp());
        EXPECT(0x15e4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C0 035E
        gbc.setState(0xa234, 0xfb76, 0xd3a0, 0xb233, 0xcd8, 0x4cf3, 0x0, 0x0);
        gbc.writeMem(0xa234, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0xfb76, gbc.sp());
        EXPECT(0xa236, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa234));
        EXPECT(0xc0, gbc.readMem(0xa235));
        // CB C0 035F
        gbc.setState(0x9df2, 0x2592, 0x73f0, 0xcd08, 0x45fb, 0xa1e9, 0x1, 0x1);
        gbc.writeMem(0x9df2, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x2592, gbc.sp());
        EXPECT(0x9df4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9df2));
        EXPECT(0xc0, gbc.readMem(0x9df3));
        // CB C0 0360
        gbc.setState(0xb1ad, 0x4004, 0xdc80, 0x91c0, 0x43f, 0xf0e2, 0x1, 0x0);
        gbc.writeMem(0xb1ad, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x4004, gbc.sp());
        EXPECT(0xb1af, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb1ad));
        EXPECT(0xc0, gbc.readMem(0xb1ae));
        // CB C0 0361
        gbc.setState(0xb5cd, 0xfae9, 0xbc70, 0x8895, 0x4fed, 0xb092, 0x0, 0x1);
        gbc.writeMem(0xb5cd, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0xfae9, gbc.sp());
        EXPECT(0xb5cf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb5cd));
        EXPECT(0xc0, gbc.readMem(0xb5ce));
        // CB C0 0362
        gbc.setState(0x4c78, 0x29a8, 0xb240, 0xe5da, 0x7741, 0x7084, 0x0, 0x1);
        gbc.writeMem(0x4c78, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x29a8, gbc.sp());
        EXPECT(0x4c7a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C0 0364
        gbc.setState(0xbfa9, 0x4fc1, 0xf3b0, 0x3e18, 0xdc0d, 0xc029, 0x1, 0x1);
        gbc.writeMem(0xbfa9, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x4fc1, gbc.sp());
        EXPECT(0xbfab, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbfa9));
        EXPECT(0xc0, gbc.readMem(0xbfaa));
        // CB C0 0365
        gbc.setState(0x4236, 0x52a9, 0xb460, 0x1a26, 0x1238, 0x9253, 0x0, 0x1);
        gbc.writeMem(0x4236, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x52a9, gbc.sp());
        EXPECT(0x4238, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C0 0366
        gbc.setState(0xc1da, 0xcf1, 0x990, 0x9ee, 0x2194, 0x1200, 0x1, 0x1);
        gbc.writeMem(0xc1da, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0xcf1, gbc.sp());
        EXPECT(0xc1dc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc1da));
        EXPECT(0xc0, gbc.readMem(0xc1db));
        // CB C0 0368
        gbc.setState(0xc20c, 0x2e53, 0x1f60, 0x7944, 0xa447, 0x3cb9, 0x0, 0x1);
        gbc.writeMem(0xc20c, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x2e53, gbc.sp());
        EXPECT(0xc20e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc20c));
        EXPECT(0xc0, gbc.readMem(0xc20d));
        // CB C0 0369
        gbc.setState(0x8746, 0x41cb, 0x4dd0, 0x6926, 0xc483, 0x7b0a, 0x1, 0x1);
        gbc.writeMem(0x8746, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x41cb, gbc.sp());
        EXPECT(0x8748, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8746));
        EXPECT(0xc0, gbc.readMem(0x8747));
        // CB C0 036A
        gbc.setState(0x57b4, 0xa8fd, 0x78c0, 0xa8bb, 0xc109, 0xe750, 0x0, 0x1);
        gbc.writeMem(0x57b4, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0xa8fd, gbc.sp());
        EXPECT(0x57b6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C0 036B
        gbc.setState(0xabde, 0x7448, 0x2470, 0x4d47, 0x5366, 0x9009, 0x1, 0x1);
        gbc.writeMem(0xabde, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x7448, gbc.sp());
        EXPECT(0xabe0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xabde));
        EXPECT(0xc0, gbc.readMem(0xabdf));
        // CB C0 036C
        gbc.setState(0xcdb, 0x5117, 0xdc60, 0x9276, 0xa2cd, 0x3dc1, 0x1, 0x1);
        gbc.writeMem(0xcdb, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x5117, gbc.sp());
        EXPECT(0xcdd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C0 036D
        gbc.setState(0xac95, 0x8972, 0x1770, 0xa99, 0x31fb, 0xcb81, 0x0, 0x0);
        gbc.writeMem(0xac95, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x8972, gbc.sp());
        EXPECT(0xac97, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xac95));
        EXPECT(0xc0, gbc.readMem(0xac96));
        // CB C0 036E
        gbc.setState(0x5cf5, 0x2eb7, 0xe70, 0x3671, 0x51c7, 0x2eaf, 0x0, 0x0);
        gbc.writeMem(0x5cf5, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x2eb7, gbc.sp());
        EXPECT(0x5cf7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C0 036F
        gbc.setState(0x5511, 0x88e5, 0xbf60, 0xcc68, 0x5c1b, 0x60ed, 0x0, 0x1);
        gbc.writeMem(0x5511, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x88e5, gbc.sp());
        EXPECT(0x5513, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C0 0370
        gbc.setState(0xe998, 0x8b58, 0x1c00, 0xf31a, 0xf2b2, 0x2ca9, 0x0, 0x0);
        gbc.writeMem(0xe998, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x8b58, gbc.sp());
        EXPECT(0xe99a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe998));
        EXPECT(0xc0, gbc.readMem(0xe999));
        // CB C0 0371
        gbc.setState(0x7c16, 0xe74c, 0x7b60, 0xe88a, 0xa7ea, 0x6f82, 0x0, 0x0);
        gbc.writeMem(0x7c16, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0xe74c, gbc.sp());
        EXPECT(0x7c18, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C0 0372
        gbc.setState(0x8722, 0x6867, 0xa40, 0xc2c8, 0xe087, 0xe2c3, 0x1, 0x1);
        gbc.writeMem(0x8722, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x6867, gbc.sp());
        EXPECT(0x8724, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8722));
        EXPECT(0xc0, gbc.readMem(0x8723));
        // CB C0 0373
        gbc.setState(0xe523, 0x71d3, 0x300, 0x6db8, 0x4e4b, 0x15e1, 0x1, 0x1);
        gbc.writeMem(0xe523, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0x71d3, gbc.sp());
        EXPECT(0xe525, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe523));
        EXPECT(0xc0, gbc.readMem(0xe524));
        // CB C0 0374
        gbc.setState(0x64ee, 0x4710, 0xe880, 0x3c6d, 0xe262, 0xf778, 0x1, 0x0);
        gbc.writeMem(0x64ee, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x4710, gbc.sp());
        EXPECT(0x64f0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C0 0375
        gbc.setState(0x69c2, 0x34da, 0x2350, 0x3736, 0xa65f, 0x2bf2, 0x0, 0x1);
        gbc.writeMem(0x69c2, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x34da, gbc.sp());
        EXPECT(0x69c4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C0 0376
        gbc.setState(0xc6fd, 0xb210, 0x7aa0, 0x5d23, 0x95a6, 0x4d24, 0x1, 0x1);
        gbc.writeMem(0xc6fd, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0xb210, gbc.sp());
        EXPECT(0xc6ff, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc6fd));
        EXPECT(0xc0, gbc.readMem(0xc6fe));
        // CB C0 0377
        gbc.setState(0x6d, 0x277d, 0x4100, 0x91ad, 0xefa5, 0xb75e, 0x0, 0x1);
        gbc.writeMem(0x6d, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x277d, gbc.sp());
        EXPECT(0x6f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C0 0378
        gbc.setState(0x87aa, 0xf386, 0xa840, 0xee1d, 0x166, 0x6bfa, 0x1, 0x1);
        gbc.writeMem(0x87aa, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0xf386, gbc.sp());
        EXPECT(0x87ac, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x87aa));
        EXPECT(0xc0, gbc.readMem(0x87ab));
        // CB C0 0379
        gbc.setState(0xb638, 0x7cf0, 0x7570, 0xe156, 0x4fd3, 0x2dfa, 0x1, 0x0);
        gbc.writeMem(0xb638, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0x7cf0, gbc.sp());
        EXPECT(0xb63a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb638));
        EXPECT(0xc0, gbc.readMem(0xb639));
        // CB C0 037A
        gbc.setState(0x3fa2, 0xdfdb, 0x2ab0, 0xfd3a, 0xa501, 0xc46b, 0x1, 0x0);
        gbc.writeMem(0x3fa2, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0xdfdb, gbc.sp());
        EXPECT(0x3fa4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C0 037B
        gbc.setState(0x41ab, 0x206a, 0x7a0, 0x76f0, 0xcd72, 0xc2e3, 0x0, 0x1);
        gbc.writeMem(0x41ab, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x206a, gbc.sp());
        EXPECT(0x41ad, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C0 037C
        gbc.setState(0x3da4, 0x537f, 0x42e0, 0x9e02, 0x4319, 0xef31, 0x1, 0x0);
        gbc.writeMem(0x3da4, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x537f, gbc.sp());
        EXPECT(0x3da6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C0 037D
        gbc.setState(0xe78f, 0x671b, 0x78d0, 0x68e8, 0x9551, 0xbe23, 0x1, 0x1);
        gbc.writeMem(0xe78f, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x671b, gbc.sp());
        EXPECT(0xe791, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe78f));
        EXPECT(0xc0, gbc.readMem(0xe790));
        // CB C0 037E
        gbc.setState(0x6478, 0xd4ec, 0x5b40, 0x2909, 0x2d1, 0xd941, 0x0, 0x0);
        gbc.writeMem(0x6478, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0xd4ec, gbc.sp());
        EXPECT(0x647a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C0 037F
        gbc.setState(0xab36, 0x56d3, 0x9260, 0xff02, 0x7aef, 0xd596, 0x0, 0x0);
        gbc.writeMem(0xab36, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x56d3, gbc.sp());
        EXPECT(0xab38, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xab36));
        EXPECT(0xc0, gbc.readMem(0xab37));
        // CB C0 0380
        gbc.setState(0x4646, 0x86b6, 0x96e0, 0x61be, 0x4def, 0x8d94, 0x0, 0x0);
        gbc.writeMem(0x4646, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x86b6, gbc.sp());
        EXPECT(0x4648, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C0 0381
        gbc.setState(0xc79e, 0xb2a3, 0x5300, 0x234, 0x8f20, 0x6ebc, 0x1, 0x1);
        gbc.writeMem(0xc79e, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0xb2a3, gbc.sp());
        EXPECT(0xc7a0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc79e));
        EXPECT(0xc0, gbc.readMem(0xc79f));
        // CB C0 0382
        gbc.setState(0x7569, 0x7541, 0x6220, 0x9a6f, 0xb4e, 0x34f3, 0x0, 0x0);
        gbc.writeMem(0x7569, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x7541, gbc.sp());
        EXPECT(0x756b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C0 0383
        gbc.setState(0xc9db, 0xc3ae, 0xfc10, 0x8d3a, 0xd277, 0xc234, 0x0, 0x0);
        gbc.writeMem(0xc9db, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0xc3ae, gbc.sp());
        EXPECT(0xc9dd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc9db));
        EXPECT(0xc0, gbc.readMem(0xc9dc));
        // CB C0 0384
        gbc.setState(0xc94, 0xd3e6, 0xd8c0, 0xc552, 0x5e61, 0xc140, 0x1, 0x0);
        gbc.writeMem(0xc94, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0xd3e6, gbc.sp());
        EXPECT(0xc96, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C0 0385
        gbc.setState(0x6ab9, 0x4e27, 0xa040, 0xe360, 0xcae5, 0x49c5, 0x0, 0x0);
        gbc.writeMem(0x6ab9, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x4e27, gbc.sp());
        EXPECT(0x6abb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C0 0386
        gbc.setState(0xd926, 0xaf0e, 0xabc0, 0xfe6d, 0x8b61, 0xc110, 0x1, 0x0);
        gbc.writeMem(0xd926, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0xaf0e, gbc.sp());
        EXPECT(0xd928, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd926));
        EXPECT(0xc0, gbc.readMem(0xd927));
        // CB C0 0387
        gbc.setState(0x91e2, 0x98b6, 0x6560, 0x69b0, 0x4842, 0xdb21, 0x1, 0x1);
        gbc.writeMem(0x91e2, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x98b6, gbc.sp());
        EXPECT(0x91e4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x91e2));
        EXPECT(0xc0, gbc.readMem(0x91e3));
        // CB C0 0388
        gbc.setState(0x2d21, 0x5fa7, 0x4050, 0x71d5, 0x73dc, 0x45e7, 0x1, 0x0);
        gbc.writeMem(0x2d21, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x5fa7, gbc.sp());
        EXPECT(0x2d23, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C0 0389
        gbc.setState(0xbed1, 0xc5ae, 0xee70, 0x80f9, 0xa1a2, 0xbaa3, 0x0, 0x1);
        gbc.writeMem(0xbed1, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0xc5ae, gbc.sp());
        EXPECT(0xbed3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbed1));
        EXPECT(0xc0, gbc.readMem(0xbed2));
        // CB C0 038A
        gbc.setState(0xebb9, 0xc2f4, 0x5fe0, 0xbf2d, 0x7837, 0xd76b, 0x0, 0x1);
        gbc.writeMem(0xebb9, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0xc2f4, gbc.sp());
        EXPECT(0xebbb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xebb9));
        EXPECT(0xc0, gbc.readMem(0xebba));
        // CB C0 038B
        gbc.setState(0x3366, 0xffeb, 0xb150, 0xfd64, 0x7bd9, 0xb05c, 0x1, 0x1);
        gbc.writeMem(0x3366, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0xffeb, gbc.sp());
        EXPECT(0x3368, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C0 038C
        gbc.setState(0x1ceb, 0xb51d, 0xce90, 0x867, 0x8316, 0x49c6, 0x0, 0x1);
        gbc.writeMem(0x1ceb, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0xb51d, gbc.sp());
        EXPECT(0x1ced, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C0 038D
        gbc.setState(0x18, 0xd181, 0xb0a0, 0x97b, 0xb161, 0xfbac, 0x1, 0x1);
        gbc.writeMem(0x18, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0xd181, gbc.sp());
        EXPECT(0x1a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C0 038E
        gbc.setState(0x7611, 0x17d3, 0x63c0, 0x86e1, 0xde82, 0xe7f0, 0x1, 0x0);
        gbc.writeMem(0x7611, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x17d3, gbc.sp());
        EXPECT(0x7613, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C0 038F
        gbc.setState(0x984a, 0xcb59, 0x96f0, 0x96b8, 0xf9ad, 0x6265, 0x1, 0x1);
        gbc.writeMem(0x984a, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0xcb59, gbc.sp());
        EXPECT(0x984c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x984a));
        EXPECT(0xc0, gbc.readMem(0x984b));
        // CB C0 0390
        gbc.setState(0x973e, 0xeeba, 0xc550, 0xa364, 0x3c37, 0x9794, 0x1, 0x1);
        gbc.writeMem(0x973e, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0xeeba, gbc.sp());
        EXPECT(0x9740, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x973e));
        EXPECT(0xc0, gbc.readMem(0x973f));
        // CB C0 0391
        gbc.setState(0x2d40, 0x9683, 0x9800, 0x5ffe, 0x5006, 0xb48, 0x0, 0x0);
        gbc.writeMem(0x2d40, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0x9683, gbc.sp());
        EXPECT(0x2d42, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C0 0392
        gbc.setState(0xcb02, 0xc583, 0xdda0, 0x50bf, 0x6dea, 0xa76f, 0x1, 0x1);
        gbc.writeMem(0xcb02, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0xc583, gbc.sp());
        EXPECT(0xcb04, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcb02));
        EXPECT(0xc0, gbc.readMem(0xcb03));
        // CB C0 0393
        gbc.setState(0x4e16, 0xb284, 0xebb0, 0xe684, 0x8b9d, 0xed3e, 0x0, 0x1);
        gbc.writeMem(0x4e16, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0xb284, gbc.sp());
        EXPECT(0x4e18, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C0 0394
        gbc.setState(0x9c45, 0x64c1, 0xdd30, 0x51bd, 0x2b39, 0xd15, 0x1, 0x1);
        gbc.writeMem(0x9c45, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x64c1, gbc.sp());
        EXPECT(0x9c47, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9c45));
        EXPECT(0xc0, gbc.readMem(0x9c46));
        // CB C0 0395
        gbc.setState(0xb009, 0x4da2, 0xf860, 0xe53b, 0xe3b, 0x5074, 0x0, 0x0);
        gbc.writeMem(0xb009, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x4da2, gbc.sp());
        EXPECT(0xb00b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb009));
        EXPECT(0xc0, gbc.readMem(0xb00a));
        // CB C0 0396
        gbc.setState(0xae8f, 0xf6b8, 0x28a0, 0x340, 0x7ec2, 0xa008, 0x0, 0x0);
        gbc.writeMem(0xae8f, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0xf6b8, gbc.sp());
        EXPECT(0xae91, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xae8f));
        EXPECT(0xc0, gbc.readMem(0xae90));
        // CB C0 0397
        gbc.setState(0x6538, 0xe9f9, 0xe30, 0x2963, 0x2c58, 0x73c9, 0x1, 0x0);
        gbc.writeMem(0x6538, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0xe9f9, gbc.sp());
        EXPECT(0x653a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C0 0398
        gbc.setState(0x6256, 0xd5cf, 0x5af0, 0x4625, 0x6c7a, 0xd838, 0x0, 0x0);
        gbc.writeMem(0x6256, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0xd5cf, gbc.sp());
        EXPECT(0x6258, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C0 0399
        gbc.setState(0x8f0e, 0xb7ce, 0xf050, 0x87f1, 0x7c1, 0x26be, 0x1, 0x0);
        gbc.writeMem(0x8f0e, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0xb7ce, gbc.sp());
        EXPECT(0x8f10, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8f0e));
        EXPECT(0xc0, gbc.readMem(0x8f0f));
        // CB C0 039A
        gbc.setState(0x3870, 0x928e, 0x8a50, 0x57ec, 0xeda1, 0x1eb2, 0x0, 0x1);
        gbc.writeMem(0x3870, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x928e, gbc.sp());
        EXPECT(0x3872, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C0 039B
        gbc.setState(0xa0c5, 0xd010, 0xa990, 0x7e5b, 0xa8fd, 0x7d9c, 0x0, 0x1);
        gbc.writeMem(0xa0c5, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0xd010, gbc.sp());
        EXPECT(0xa0c7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa0c5));
        EXPECT(0xc0, gbc.readMem(0xa0c6));
        // CB C0 039C
        gbc.setState(0xa105, 0x512c, 0x5430, 0xadf4, 0x9994, 0x9def, 0x0, 0x0);
        gbc.writeMem(0xa105, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x512c, gbc.sp());
        EXPECT(0xa107, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa105));
        EXPECT(0xc0, gbc.readMem(0xa106));
        // CB C0 039D
        gbc.setState(0xc702, 0x6484, 0xdfd0, 0xd6c7, 0xccd9, 0x852, 0x0, 0x0);
        gbc.writeMem(0xc702, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x6484, gbc.sp());
        EXPECT(0xc704, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc702));
        EXPECT(0xc0, gbc.readMem(0xc703));
        // CB C0 039E
        gbc.setState(0xea66, 0x4d44, 0x10, 0x9d2d, 0xb131, 0x1957, 0x0, 0x0);
        gbc.writeMem(0xea66, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x4d44, gbc.sp());
        EXPECT(0xea68, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xea66));
        EXPECT(0xc0, gbc.readMem(0xea67));
        // CB C0 039F
        gbc.setState(0x4875, 0x39fe, 0xe740, 0x701d, 0xaa76, 0xfb51, 0x1, 0x1);
        gbc.writeMem(0x4875, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x39fe, gbc.sp());
        EXPECT(0x4877, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C0 03A0
        gbc.setState(0x6cd, 0x4986, 0x8ad0, 0x78c6, 0xb02b, 0x788d, 0x0, 0x1);
        gbc.writeMem(0x6cd, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x4986, gbc.sp());
        EXPECT(0x6cf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C0 03A1
        gbc.setState(0xa7b6, 0x4858, 0x5450, 0x9785, 0x68d7, 0xd40b, 0x0, 0x0);
        gbc.writeMem(0xa7b6, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x4858, gbc.sp());
        EXPECT(0xa7b8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa7b6));
        EXPECT(0xc0, gbc.readMem(0xa7b7));
        // CB C0 03A2
        gbc.setState(0x2819, 0xe9d9, 0x5b10, 0x49b1, 0x98d1, 0x3ad9, 0x0, 0x0);
        gbc.writeMem(0x2819, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0xe9d9, gbc.sp());
        EXPECT(0x281b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C0 03A3
        gbc.setState(0xf60, 0xf3b5, 0x1590, 0x9e9f, 0x3b35, 0xc07d, 0x1, 0x0);
        gbc.writeMem(0xf60, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0xf3b5, gbc.sp());
        EXPECT(0xf62, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C0 03A4
        gbc.setState(0x5cab, 0xf41e, 0xc7c0, 0x71fb, 0xa24, 0xd1a5, 0x0, 0x0);
        gbc.writeMem(0x5cab, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0xf41e, gbc.sp());
        EXPECT(0x5cad, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C0 03A5
        gbc.setState(0x315, 0x14fb, 0x7840, 0xd04d, 0x6704, 0x2c8e, 0x0, 0x1);
        gbc.writeMem(0x315, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x14fb, gbc.sp());
        EXPECT(0x317, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C0 03A6
        gbc.setState(0x1a14, 0x95d, 0x85a0, 0xdbf, 0x4f60, 0x9387, 0x0, 0x0);
        gbc.writeMem(0x1a14, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x95d, gbc.sp());
        EXPECT(0x1a16, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C0 03A7
        gbc.setState(0xd7d2, 0xdb37, 0xbbd0, 0xa515, 0x60b7, 0x5a6f, 0x0, 0x1);
        gbc.writeMem(0xd7d2, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0xdb37, gbc.sp());
        EXPECT(0xd7d4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd7d2));
        EXPECT(0xc0, gbc.readMem(0xd7d3));
        // CB C0 03A8
        gbc.setState(0x829, 0xae0f, 0x9df0, 0xa663, 0x9862, 0xc22d, 0x0, 0x0);
        gbc.writeMem(0x829, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0xae0f, gbc.sp());
        EXPECT(0x82b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C0 03A9
        gbc.setState(0x1f09, 0xcd0, 0xf1d0, 0xc934, 0xfed5, 0x59a2, 0x1, 0x1);
        gbc.writeMem(0x1f09, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0xcd0, gbc.sp());
        EXPECT(0x1f0b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C0 03AA
        gbc.setState(0xb008, 0x65ff, 0xb440, 0x7f28, 0xc37b, 0xc3f9, 0x1, 0x1);
        gbc.writeMem(0xb008, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x65ff, gbc.sp());
        EXPECT(0xb00a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb008));
        EXPECT(0xc0, gbc.readMem(0xb009));
        // CB C0 03AB
        gbc.setState(0x2e3e, 0xc54, 0x7c20, 0x7667, 0x8825, 0x7f0a, 0x1, 0x0);
        gbc.writeMem(0x2e3e, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0xc54, gbc.sp());
        EXPECT(0x2e40, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C0 03AD
        gbc.setState(0x34bf, 0x2f65, 0xf750, 0x1e20, 0x3a2c, 0x5b8a, 0x0, 0x1);
        gbc.writeMem(0x34bf, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x2f65, gbc.sp());
        EXPECT(0x34c1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C0 03AE
        gbc.setState(0x747f, 0x72ed, 0x3510, 0x4e14, 0x4da9, 0x609c, 0x1, 0x0);
        gbc.writeMem(0x747f, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x72ed, gbc.sp());
        EXPECT(0x7481, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C0 03AF
        gbc.setState(0xe9bd, 0xe1e6, 0x7de0, 0xf7cc, 0x94d5, 0x8bf9, 0x0, 0x1);
        gbc.writeMem(0xe9bd, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0xe1e6, gbc.sp());
        EXPECT(0xe9bf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe9bd));
        EXPECT(0xc0, gbc.readMem(0xe9be));
        // CB C0 03B1
        gbc.setState(0x32e1, 0xbf94, 0x5430, 0x5ff2, 0xeab0, 0xb081, 0x1, 0x0);
        gbc.writeMem(0x32e1, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0xbf94, gbc.sp());
        EXPECT(0x32e3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C0 03B3
        gbc.setState(0x6ae1, 0x3957, 0x5630, 0xa90d, 0x5211, 0x6414, 0x0, 0x0);
        gbc.writeMem(0x6ae1, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x3957, gbc.sp());
        EXPECT(0x6ae3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C0 03B4
        gbc.setState(0x3bb, 0x1273, 0x43b0, 0x3f8, 0x5b9f, 0xd294, 0x1, 0x1);
        gbc.writeMem(0x3bb, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x1273, gbc.sp());
        EXPECT(0x3bd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C0 03B5
        gbc.setState(0x3f1, 0xd38, 0x49b0, 0x25ad, 0x931b, 0x4a5f, 0x1, 0x0);
        gbc.writeMem(0x3f1, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0xd38, gbc.sp());
        EXPECT(0x3f3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C0 03B6
        gbc.setState(0xe9bc, 0x95d3, 0xa150, 0xa520, 0xbf18, 0xf3f5, 0x0, 0x0);
        gbc.writeMem(0xe9bc, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x95d3, gbc.sp());
        EXPECT(0xe9be, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe9bc));
        EXPECT(0xc0, gbc.readMem(0xe9bd));
        // CB C0 03B7
        gbc.setState(0xb081, 0xb9cb, 0xb640, 0x26ad, 0xd78, 0xc50c, 0x0, 0x1);
        gbc.writeMem(0xb081, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0xb9cb, gbc.sp());
        EXPECT(0xb083, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb081));
        EXPECT(0xc0, gbc.readMem(0xb082));
        // CB C0 03B8
        gbc.setState(0x3c94, 0x676f, 0xb1b0, 0x287b, 0x97c0, 0x4eac, 0x1, 0x1);
        gbc.writeMem(0x3c94, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x676f, gbc.sp());
        EXPECT(0x3c96, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C0 03B9
        gbc.setState(0x794c, 0x24a, 0x10c0, 0xf9b5, 0x4917, 0x221, 0x0, 0x0);
        gbc.writeMem(0x794c, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x24a, gbc.sp());
        EXPECT(0x794e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C0 03BA
        gbc.setState(0xef03, 0x93ce, 0x3ed0, 0x9c2, 0x3a94, 0x9944, 0x1, 0x0);
        gbc.writeMem(0xef03, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x93ce, gbc.sp());
        EXPECT(0xef05, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xef03));
        EXPECT(0xc0, gbc.readMem(0xef04));
        // CB C0 03BB
        gbc.setState(0xf25, 0x2d30, 0xd180, 0xd82a, 0x504d, 0x7663, 0x0, 0x0);
        gbc.writeMem(0xf25, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x2d30, gbc.sp());
        EXPECT(0xf27, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C0 03BC
        gbc.setState(0x93bd, 0x2875, 0xb6e0, 0xc2d, 0xfd86, 0x5cd3, 0x1, 0x0);
        gbc.writeMem(0x93bd, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x2875, gbc.sp());
        EXPECT(0x93bf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x93bd));
        EXPECT(0xc0, gbc.readMem(0x93be));
        // CB C0 03BD
        gbc.setState(0x242, 0xdfb5, 0x8420, 0x1400, 0x6a37, 0xf7a7, 0x0, 0x0);
        gbc.writeMem(0x242, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0xdfb5, gbc.sp());
        EXPECT(0x244, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C0 03BE
        gbc.setState(0x30a2, 0xc6ba, 0xea80, 0x8340, 0x71ea, 0xc54b, 0x0, 0x0);
        gbc.writeMem(0x30a2, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0xc6ba, gbc.sp());
        EXPECT(0x30a4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C0 03BF
        gbc.setState(0x42e0, 0xf9a, 0xe940, 0x6035, 0x66fd, 0xc19d, 0x0, 0x0);
        gbc.writeMem(0x42e0, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0xf9a, gbc.sp());
        EXPECT(0x42e2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C0 03C0
        gbc.setState(0x6f9b, 0xf346, 0xbe60, 0xfe41, 0x8e62, 0x529, 0x1, 0x0);
        gbc.writeMem(0x6f9b, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0xf346, gbc.sp());
        EXPECT(0x6f9d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C0 03C1
        gbc.setState(0x1d75, 0xbd62, 0x8d40, 0x6e51, 0xd74e, 0xb80, 0x1, 0x1);
        gbc.writeMem(0x1d75, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0xbd62, gbc.sp());
        EXPECT(0x1d77, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C0 03C2
        gbc.setState(0x397f, 0xad64, 0xbb60, 0xf317, 0xc460, 0x760f, 0x0, 0x1);
        gbc.writeMem(0x397f, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0xad64, gbc.sp());
        EXPECT(0x3981, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C0 03C3
        gbc.setState(0x6c7b, 0xdc48, 0x9e30, 0x2ec0, 0x4ba4, 0xd48, 0x0, 0x1);
        gbc.writeMem(0x6c7b, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0xdc48, gbc.sp());
        EXPECT(0x6c7d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C0 03C4
        gbc.setState(0x26b4, 0xec2d, 0x1920, 0xa701, 0x384a, 0x4519, 0x1, 0x0);
        gbc.writeMem(0x26b4, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0xec2d, gbc.sp());
        EXPECT(0x26b6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C0 03C5
        gbc.setState(0x4f93, 0x3692, 0x1a00, 0x402a, 0xe7b0, 0xdbfa, 0x1, 0x0);
        gbc.writeMem(0x4f93, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0x3692, gbc.sp());
        EXPECT(0x4f95, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C0 03C6
        gbc.setState(0xe9e0, 0xdc80, 0x3d80, 0xacea, 0xd4be, 0xd115, 0x0, 0x0);
        gbc.writeMem(0xe9e0, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0xdc80, gbc.sp());
        EXPECT(0xe9e2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe9e0));
        EXPECT(0xc0, gbc.readMem(0xe9e1));
        // CB C0 03C7
        gbc.setState(0x845d, 0x413, 0x85e0, 0x9784, 0x5b9a, 0x2c13, 0x0, 0x0);
        gbc.writeMem(0x845d, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x413, gbc.sp());
        EXPECT(0x845f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x845d));
        EXPECT(0xc0, gbc.readMem(0x845e));
        // CB C0 03C8
        gbc.setState(0xbdb4, 0x2031, 0xfa90, 0x337, 0x8be0, 0x1772, 0x0, 0x1);
        gbc.writeMem(0xbdb4, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x2031, gbc.sp());
        EXPECT(0xbdb6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbdb4));
        EXPECT(0xc0, gbc.readMem(0xbdb5));
        // CB C0 03C9
        gbc.setState(0x8c32, 0xce9d, 0xd400, 0xcc03, 0x757e, 0x7288, 0x1, 0x1);
        gbc.writeMem(0x8c32, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0xce9d, gbc.sp());
        EXPECT(0x8c34, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8c32));
        EXPECT(0xc0, gbc.readMem(0x8c33));
        // CB C0 03CA
        gbc.setState(0xdc14, 0xe2b4, 0x8660, 0xf47b, 0xd64c, 0x59a5, 0x0, 0x0);
        gbc.writeMem(0xdc14, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0xe2b4, gbc.sp());
        EXPECT(0xdc16, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdc14));
        EXPECT(0xc0, gbc.readMem(0xdc15));
        // CB C0 03CB
        gbc.setState(0x9895, 0xe0d7, 0x96f0, 0x576, 0x2e78, 0x8ee1, 0x1, 0x1);
        gbc.writeMem(0x9895, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0xe0d7, gbc.sp());
        EXPECT(0x9897, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9895));
        EXPECT(0xc0, gbc.readMem(0x9896));
        // CB C0 03CC
        gbc.setState(0x5266, 0xffc2, 0x63e0, 0xa9b3, 0xe8ef, 0x1481, 0x1, 0x1);
        gbc.writeMem(0x5266, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0xffc2, gbc.sp());
        EXPECT(0x5268, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C0 03CD
        gbc.setState(0x4bdf, 0xb174, 0x43b0, 0x8d0, 0x4304, 0x85ac, 0x1, 0x1);
        gbc.writeMem(0x4bdf, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0xb174, gbc.sp());
        EXPECT(0x4be1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C0 03CE
        gbc.setState(0x4dce, 0x9acd, 0xcd0, 0xd06c, 0x7a0c, 0xffcc, 0x1, 0x0);
        gbc.writeMem(0x4dce, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x9acd, gbc.sp());
        EXPECT(0x4dd0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C0 03CF
        gbc.setState(0x1a12, 0xfd2, 0x67b0, 0xb36c, 0x5e24, 0xea82, 0x0, 0x0);
        gbc.writeMem(0x1a12, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0xfd2, gbc.sp());
        EXPECT(0x1a14, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C0 03D0
        gbc.setState(0x4585, 0x508b, 0x3aa0, 0x4077, 0x1779, 0xedca, 0x1, 0x0);
        gbc.writeMem(0x4585, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x508b, gbc.sp());
        EXPECT(0x4587, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C0 03D1
        gbc.setState(0x4e31, 0x3000, 0xe0f0, 0xe698, 0x984b, 0xf061, 0x0, 0x0);
        gbc.writeMem(0x4e31, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x3000, gbc.sp());
        EXPECT(0x4e33, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C0 03D2
        gbc.setState(0x311c, 0xa11f, 0x7b10, 0x1241, 0xcb6a, 0x1ce, 0x1, 0x1);
        gbc.writeMem(0x311c, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0xa11f, gbc.sp());
        EXPECT(0x311e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C0 03D3
        gbc.setState(0x3c64, 0x80ff, 0xe8e0, 0xf87d, 0x617, 0x4e73, 0x1, 0x0);
        gbc.writeMem(0x3c64, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x80ff, gbc.sp());
        EXPECT(0x3c66, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C0 03D4
        gbc.setState(0xba6c, 0x4aae, 0x16a0, 0x711, 0x102a, 0xdda6, 0x0, 0x1);
        gbc.writeMem(0xba6c, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x4aae, gbc.sp());
        EXPECT(0xba6e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xba6c));
        EXPECT(0xc0, gbc.readMem(0xba6d));
        // CB C0 03D6
        gbc.setState(0xef26, 0x70d3, 0x2660, 0x6008, 0x5dab, 0x59c7, 0x0, 0x0);
        gbc.writeMem(0xef26, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x70d3, gbc.sp());
        EXPECT(0xef28, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xef26));
        EXPECT(0xc0, gbc.readMem(0xef27));
        // CB C0 03D7
        gbc.setState(0x1326, 0x21ca, 0xf0a0, 0xdc39, 0x9619, 0x2750, 0x0, 0x1);
        gbc.writeMem(0x1326, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x21ca, gbc.sp());
        EXPECT(0x1328, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C0 03D8
        gbc.setState(0x4446, 0x49d1, 0xd3b0, 0x6537, 0x6372, 0x9ca0, 0x1, 0x0);
        gbc.writeMem(0x4446, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x49d1, gbc.sp());
        EXPECT(0x4448, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C0 03DA
        gbc.setState(0x66ba, 0x9bc8, 0x6550, 0x7eb1, 0x1f41, 0x6bd, 0x0, 0x0);
        gbc.writeMem(0x66ba, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x9bc8, gbc.sp());
        EXPECT(0x66bc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C0 03DB
        gbc.setState(0x6f5d, 0x4bbc, 0xc550, 0x13fe, 0x5a25, 0xfd7e, 0x0, 0x1);
        gbc.writeMem(0x6f5d, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0x4bbc, gbc.sp());
        EXPECT(0x6f5f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C0 03DC
        gbc.setState(0x4ad6, 0x59e4, 0x7ea0, 0x963d, 0xe553, 0xaa02, 0x1, 0x1);
        gbc.writeMem(0x4ad6, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x59e4, gbc.sp());
        EXPECT(0x4ad8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C0 03DD
        gbc.setState(0x658a, 0x87bb, 0x45f0, 0xbebb, 0x8ba9, 0xc95b, 0x0, 0x0);
        gbc.writeMem(0x658a, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x87bb, gbc.sp());
        EXPECT(0x658c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C0 03DE
        gbc.setState(0x8c1, 0xefd8, 0x2630, 0x470e, 0xb7d5, 0xbf53, 0x1, 0x0);
        gbc.writeMem(0x8c1, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0xefd8, gbc.sp());
        EXPECT(0x8c3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C0 03DF
        gbc.setState(0xde8e, 0x5fcc, 0xbc70, 0xcfa5, 0x3cf4, 0x308d, 0x0, 0x0);
        gbc.writeMem(0xde8e, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x5fcc, gbc.sp());
        EXPECT(0xde90, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xde8e));
        EXPECT(0xc0, gbc.readMem(0xde8f));
        // CB C0 03E0
        gbc.setState(0x4ffc, 0x2690, 0x7dd0, 0x86ce, 0x22d2, 0x20e8, 0x0, 0x1);
        gbc.writeMem(0x4ffc, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x2690, gbc.sp());
        EXPECT(0x4ffe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C0 03E1
        gbc.setState(0x121c, 0x6fda, 0x29f0, 0x458e, 0xb0dd, 0xfdc7, 0x1, 0x1);
        gbc.writeMem(0x121c, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x6fda, gbc.sp());
        EXPECT(0x121e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C0 03E2
        gbc.setState(0x91e0, 0x9184, 0xe590, 0xbb93, 0xd61c, 0x34bf, 0x1, 0x1);
        gbc.writeMem(0x91e0, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x9184, gbc.sp());
        EXPECT(0x91e2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x91e0));
        EXPECT(0xc0, gbc.readMem(0x91e1));
        // CB C0 03E3
        gbc.setState(0xad01, 0x7b09, 0x2760, 0xac48, 0x369d, 0x6bbd, 0x0, 0x1);
        gbc.writeMem(0xad01, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x7b09, gbc.sp());
        EXPECT(0xad03, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xad01));
        EXPECT(0xc0, gbc.readMem(0xad02));
        // CB C0 03E4
        gbc.setState(0x286e, 0xf7bb, 0xc330, 0x472e, 0xc67b, 0x69ee, 0x0, 0x0);
        gbc.writeMem(0x286e, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0xf7bb, gbc.sp());
        EXPECT(0x2870, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C0 03E5
        gbc.setState(0x3f26, 0x845d, 0xa320, 0xd7b4, 0x80f1, 0x4852, 0x0, 0x0);
        gbc.writeMem(0x3f26, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x845d, gbc.sp());
        EXPECT(0x3f28, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C0 03E6
        gbc.setState(0xc537, 0xf642, 0x1700, 0x710d, 0xa384, 0xe499, 0x0, 0x0);
        gbc.writeMem(0xc537, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0xf642, gbc.sp());
        EXPECT(0xc539, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc537));
        EXPECT(0xc0, gbc.readMem(0xc538));
        // CB C0 03E7
        gbc.setState(0x3236, 0xfae8, 0xaa0, 0x3f, 0x212, 0xdeb0, 0x1, 0x1);
        gbc.writeMem(0x3236, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0xfae8, gbc.sp());
        EXPECT(0x3238, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
    }
