    TEST(gbcemu, opcode_cb_c0) {
        GBCEmu gbc{};
        uint8_t cartridge[0x8000];
        cartridge[0x149] = 0x02; // 8kb external RAM
        gbc.loadCartridge(new FlashGamePak(cartridge));
        // CB C0 0000
        gbc.setState(0x950d, 0xe16b, 0x1120, 0x3283, 0x7d1a, 0x338c, 0x0, 0x1);
        gbc.writeMem(0x950d, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x11);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0x7d);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0x8c);
        EXPECT(gbc.sp(), 0xe16b);
        EXPECT(gbc.pc(), 0x950f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x950d), 0xcb);
        EXPECT(gbc.readMem(0x950e), 0xc0);
        // CB C0 0001
        gbc.setState(0xa622, 0x7cc7, 0x3dd0, 0xe3f1, 0x916d, 0x99d4, 0x0, 0x1);
        gbc.writeMem(0xa622, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x3d);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0x6d);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0x7cc7);
        EXPECT(gbc.pc(), 0xa624);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa622), 0xcb);
        EXPECT(gbc.readMem(0xa623), 0xc0);
        // CB C0 0002
        gbc.setState(0xd5c, 0xa28, 0xa950, 0x92ec, 0x6561, 0xd1de, 0x0, 0x1);
        gbc.writeMem(0xd5c, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa9);
        EXPECT(gbc.b(),  0x93);
        EXPECT(gbc.c(),  0xec);
        EXPECT(gbc.d(),  0x65);
        EXPECT(gbc.e(),  0x61);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0xde);
        EXPECT(gbc.sp(), 0xa28);
        EXPECT(gbc.pc(), 0xd5e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C0 0003
        gbc.setState(0x508b, 0x1a21, 0x8c10, 0x9617, 0x67f6, 0x4935, 0x1, 0x1);
        gbc.writeMem(0x508b, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0x97);
        EXPECT(gbc.c(),  0x17);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0xf6);
        EXPECT(gbc.h(),  0x49);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0x1a21);
        EXPECT(gbc.pc(), 0x508d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C0 0004
        gbc.setState(0xb7d8, 0x8ee1, 0x9d30, 0xdf26, 0x1b65, 0x1829, 0x1, 0x0);
        gbc.writeMem(0xb7d8, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x9d);
        EXPECT(gbc.b(),  0xdf);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0x65);
        EXPECT(gbc.h(),  0x18);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0x8ee1);
        EXPECT(gbc.pc(), 0xb7da);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb7d8), 0xcb);
        EXPECT(gbc.readMem(0xb7d9), 0xc0);
        // CB C0 0006
        gbc.setState(0xa356, 0x4af8, 0xbff0, 0xeeb6, 0xf594, 0xafdc, 0x0, 0x0);
        gbc.writeMem(0xa356, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0xef);
        EXPECT(gbc.c(),  0xb6);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0xaf);
        EXPECT(gbc.l(),  0xdc);
        EXPECT(gbc.sp(), 0x4af8);
        EXPECT(gbc.pc(), 0xa358);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa356), 0xcb);
        EXPECT(gbc.readMem(0xa357), 0xc0);
        // CB C0 0007
        gbc.setState(0x40c5, 0x1bf3, 0xa4b0, 0xec0d, 0x4f0c, 0xb834, 0x1, 0x1);
        gbc.writeMem(0x40c5, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa4);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0xd);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0x1bf3);
        EXPECT(gbc.pc(), 0x40c7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C0 0008
        gbc.setState(0xdde5, 0xde3e, 0x8290, 0x1e3a, 0xcba0, 0x6851, 0x1, 0x0);
        gbc.writeMem(0xdde5, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x82);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0xa0);
        EXPECT(gbc.h(),  0x68);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0xde3e);
        EXPECT(gbc.pc(), 0xdde7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdde5), 0xcb);
        EXPECT(gbc.readMem(0xdde6), 0xc0);
        // CB C0 0009
        gbc.setState(0x7083, 0x4169, 0x65d0, 0xdf40, 0x5dfd, 0x22cc, 0x0, 0x1);
        gbc.writeMem(0x7083, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x65);
        EXPECT(gbc.b(),  0xdf);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0x5d);
        EXPECT(gbc.e(),  0xfd);
        EXPECT(gbc.h(),  0x22);
        EXPECT(gbc.l(),  0xcc);
        EXPECT(gbc.sp(), 0x4169);
        EXPECT(gbc.pc(), 0x7085);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C0 000A
        gbc.setState(0x759e, 0x5179, 0xc870, 0x56ee, 0x97e9, 0xcb94, 0x1, 0x0);
        gbc.writeMem(0x759e, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0xe9);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0x5179);
        EXPECT(gbc.pc(), 0x75a0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C0 000B
        gbc.setState(0x4a6a, 0x164b, 0xd8a0, 0xeb68, 0x6371, 0x18b7, 0x0, 0x0);
        gbc.writeMem(0x4a6a, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd8);
        EXPECT(gbc.b(),  0xeb);
        EXPECT(gbc.c(),  0x68);
        EXPECT(gbc.d(),  0x63);
        EXPECT(gbc.e(),  0x71);
        EXPECT(gbc.h(),  0x18);
        EXPECT(gbc.l(),  0xb7);
        EXPECT(gbc.sp(), 0x164b);
        EXPECT(gbc.pc(), 0x4a6c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C0 000C
        gbc.setState(0x3a27, 0x4945, 0x940, 0xb9a5, 0xa4b4, 0x49cd, 0x1, 0x0);
        gbc.writeMem(0x3a27, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0xb9);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0xa4);
        EXPECT(gbc.e(),  0xb4);
        EXPECT(gbc.h(),  0x49);
        EXPECT(gbc.l(),  0xcd);
        EXPECT(gbc.sp(), 0x4945);
        EXPECT(gbc.pc(), 0x3a29);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C0 000D
        gbc.setState(0x994b, 0xbd6d, 0x97f0, 0xf37f, 0x9caf, 0x2dea, 0x0, 0x1);
        gbc.writeMem(0x994b, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x97);
        EXPECT(gbc.b(),  0xf3);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0x2d);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0xbd6d);
        EXPECT(gbc.pc(), 0x994d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x994b), 0xcb);
        EXPECT(gbc.readMem(0x994c), 0xc0);
        // CB C0 000E
        gbc.setState(0x15c1, 0x6bdc, 0x2b20, 0xa607, 0xff18, 0x1da0, 0x0, 0x0);
        gbc.writeMem(0x15c1, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x2b);
        EXPECT(gbc.b(),  0xa7);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0xff);
        EXPECT(gbc.e(),  0x18);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0x6bdc);
        EXPECT(gbc.pc(), 0x15c3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C0 000F
        gbc.setState(0xaf33, 0xb242, 0x30c0, 0x4a8a, 0xce19, 0xfff2, 0x0, 0x0);
        gbc.writeMem(0xaf33, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0xce);
        EXPECT(gbc.e(),  0x19);
        EXPECT(gbc.h(),  0xff);
        EXPECT(gbc.l(),  0xf2);
        EXPECT(gbc.sp(), 0xb242);
        EXPECT(gbc.pc(), 0xaf35);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaf33), 0xcb);
        EXPECT(gbc.readMem(0xaf34), 0xc0);
        // CB C0 0010
        gbc.setState(0x3996, 0x5bc6, 0x5560, 0xa967, 0x339, 0x1427, 0x0, 0x0);
        gbc.writeMem(0x3996, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0xa9);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0x3);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0x14);
        EXPECT(gbc.l(),  0x27);
        EXPECT(gbc.sp(), 0x5bc6);
        EXPECT(gbc.pc(), 0x3998);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C0 0011
        gbc.setState(0x725f, 0xc29d, 0xbac0, 0xc3b5, 0x51ab, 0xe8c, 0x0, 0x1);
        gbc.writeMem(0x725f, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0xc3);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0x51);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0x8c);
        EXPECT(gbc.sp(), 0xc29d);
        EXPECT(gbc.pc(), 0x7261);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C0 0012
        gbc.setState(0xa732, 0x7ee8, 0x3550, 0x4ba8, 0x1dca, 0x40e8, 0x1, 0x1);
        gbc.writeMem(0xa732, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x35);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0xa8);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0xca);
        EXPECT(gbc.h(),  0x40);
        EXPECT(gbc.l(),  0xe8);
        EXPECT(gbc.sp(), 0x7ee8);
        EXPECT(gbc.pc(), 0xa734);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa732), 0xcb);
        EXPECT(gbc.readMem(0xa733), 0xc0);
        // CB C0 0013
        gbc.setState(0xd5b8, 0x4aa3, 0xb270, 0xcc40, 0x3d28, 0x7136, 0x0, 0x0);
        gbc.writeMem(0xd5b8, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb2);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0x28);
        EXPECT(gbc.h(),  0x71);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0x4aa3);
        EXPECT(gbc.pc(), 0xd5ba);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd5b8), 0xcb);
        EXPECT(gbc.readMem(0xd5b9), 0xc0);
        // CB C0 0014
        gbc.setState(0xa692, 0x1d14, 0x5bc0, 0x858d, 0xbf45, 0x23e6, 0x0, 0x0);
        gbc.writeMem(0xa692, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0x8d);
        EXPECT(gbc.d(),  0xbf);
        EXPECT(gbc.e(),  0x45);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0x1d14);
        EXPECT(gbc.pc(), 0xa694);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa692), 0xcb);
        EXPECT(gbc.readMem(0xa693), 0xc0);
        // CB C0 0016
        gbc.setState(0x22f1, 0xf48a, 0x7f0, 0x61d4, 0xc0e5, 0xa956, 0x0, 0x0);
        gbc.writeMem(0x22f1, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0xd4);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0x56);
        EXPECT(gbc.sp(), 0xf48a);
        EXPECT(gbc.pc(), 0x22f3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C0 0017
        gbc.setState(0x3b2b, 0xa4bc, 0xd390, 0xf1bd, 0xe9f8, 0x28ff, 0x0, 0x1);
        gbc.writeMem(0x3b2b, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd3);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0xbd);
        EXPECT(gbc.d(),  0xe9);
        EXPECT(gbc.e(),  0xf8);
        EXPECT(gbc.h(),  0x28);
        EXPECT(gbc.l(),  0xff);
        EXPECT(gbc.sp(), 0xa4bc);
        EXPECT(gbc.pc(), 0x3b2d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C0 0018
        gbc.setState(0x8410, 0xcf7e, 0x4cf0, 0xf008, 0x8926, 0x8c2, 0x1, 0x0);
        gbc.writeMem(0x8410, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x4c);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0x89);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0xcf7e);
        EXPECT(gbc.pc(), 0x8412);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8410), 0xcb);
        EXPECT(gbc.readMem(0x8411), 0xc0);
        // CB C0 0019
        gbc.setState(0x4a35, 0x98b1, 0xeca0, 0xdfd2, 0x57f3, 0x17a7, 0x1, 0x1);
        gbc.writeMem(0x4a35, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0xdf);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0x57);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0x98b1);
        EXPECT(gbc.pc(), 0x4a37);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C0 001A
        gbc.setState(0x2fe, 0x76b8, 0x2590, 0xdab1, 0xca23, 0x3f5b, 0x0, 0x1);
        gbc.writeMem(0x2fe, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x25);
        EXPECT(gbc.b(),  0xdb);
        EXPECT(gbc.c(),  0xb1);
        EXPECT(gbc.d(),  0xca);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0x5b);
        EXPECT(gbc.sp(), 0x76b8);
        EXPECT(gbc.pc(), 0x300);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C0 001B
        gbc.setState(0x9b3f, 0x261c, 0x5310, 0x2339, 0xa419, 0x1524, 0x0, 0x1);
        gbc.writeMem(0x9b3f, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x53);
        EXPECT(gbc.b(),  0x23);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0xa4);
        EXPECT(gbc.e(),  0x19);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0x261c);
        EXPECT(gbc.pc(), 0x9b41);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9b3f), 0xcb);
        EXPECT(gbc.readMem(0x9b40), 0xc0);
        // CB C0 001C
        gbc.setState(0x5fce, 0xd68, 0x9df0, 0xb1ab, 0xc4ff, 0xe27d, 0x0, 0x1);
        gbc.writeMem(0x5fce, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x9d);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0xc4);
        EXPECT(gbc.e(),  0xff);
        EXPECT(gbc.h(),  0xe2);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0xd68);
        EXPECT(gbc.pc(), 0x5fd0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C0 001D
        gbc.setState(0xe6c8, 0x2699, 0x48e0, 0x27d7, 0xb171, 0x7142, 0x0, 0x0);
        gbc.writeMem(0xe6c8, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x48);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0xd7);
        EXPECT(gbc.d(),  0xb1);
        EXPECT(gbc.e(),  0x71);
        EXPECT(gbc.h(),  0x71);
        EXPECT(gbc.l(),  0x42);
        EXPECT(gbc.sp(), 0x2699);
        EXPECT(gbc.pc(), 0xe6ca);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe6c8), 0xcb);
        EXPECT(gbc.readMem(0xe6c9), 0xc0);
        // CB C0 001E
        gbc.setState(0x22b8, 0x4498, 0x56f0, 0x77d7, 0xc2f6, 0x5a34, 0x1, 0x0);
        gbc.writeMem(0x22b8, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0x77);
        EXPECT(gbc.c(),  0xd7);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0xf6);
        EXPECT(gbc.h(),  0x5a);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0x4498);
        EXPECT(gbc.pc(), 0x22ba);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C0 001F
        gbc.setState(0x520b, 0x15f8, 0xce10, 0x4be4, 0x2c86, 0x5fcc, 0x1, 0x0);
        gbc.writeMem(0x520b, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xce);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0x2c);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0xcc);
        EXPECT(gbc.sp(), 0x15f8);
        EXPECT(gbc.pc(), 0x520d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C0 0020
        gbc.setState(0x9b91, 0x4281, 0xb9f0, 0x63ef, 0xcea8, 0x9bcd, 0x0, 0x1);
        gbc.writeMem(0x9b91, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0x63);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0xce);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0xcd);
        EXPECT(gbc.sp(), 0x4281);
        EXPECT(gbc.pc(), 0x9b93);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9b91), 0xcb);
        EXPECT(gbc.readMem(0x9b92), 0xc0);
        // CB C0 0021
        gbc.setState(0x9f90, 0xb19b, 0xe8d0, 0xfc4f, 0xc5c6, 0x1698, 0x1, 0x0);
        gbc.writeMem(0x9f90, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0xc5);
        EXPECT(gbc.e(),  0xc6);
        EXPECT(gbc.h(),  0x16);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0xb19b);
        EXPECT(gbc.pc(), 0x9f92);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9f90), 0xcb);
        EXPECT(gbc.readMem(0x9f91), 0xc0);
        // CB C0 0022
        gbc.setState(0x9c2e, 0xfcad, 0x8a00, 0xae6e, 0x2b8b, 0xa5aa, 0x0, 0x0);
        gbc.writeMem(0x9c2e, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x8a);
        EXPECT(gbc.b(),  0xaf);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0x8b);
        EXPECT(gbc.h(),  0xa5);
        EXPECT(gbc.l(),  0xaa);
        EXPECT(gbc.sp(), 0xfcad);
        EXPECT(gbc.pc(), 0x9c30);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9c2e), 0xcb);
        EXPECT(gbc.readMem(0x9c2f), 0xc0);
        // CB C0 0023
        gbc.setState(0x7306, 0x75f6, 0xb510, 0xed, 0xdc4e, 0x6d2c, 0x0, 0x0);
        gbc.writeMem(0x7306, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb5);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0xed);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0x6d);
        EXPECT(gbc.l(),  0x2c);
        EXPECT(gbc.sp(), 0x75f6);
        EXPECT(gbc.pc(), 0x7308);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C0 0024
        gbc.setState(0x5fee, 0xa594, 0xd2e0, 0xc4a5, 0x21ea, 0x32c8, 0x1, 0x1);
        gbc.writeMem(0x5fee, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0x21);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0xa594);
        EXPECT(gbc.pc(), 0x5ff0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C0 0025
        gbc.setState(0xc43a, 0xea76, 0xf2e0, 0xb4c, 0x8735, 0xe0c9, 0x1, 0x0);
        gbc.writeMem(0xc43a, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0x87);
        EXPECT(gbc.e(),  0x35);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0xea76);
        EXPECT(gbc.pc(), 0xc43c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc43a), 0xcb);
        EXPECT(gbc.readMem(0xc43b), 0xc0);
        // CB C0 0026
        gbc.setState(0x534d, 0x17c7, 0x4c70, 0xddde, 0x268c, 0xf12b, 0x0, 0x0);
        gbc.writeMem(0x534d, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x4c);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0x26);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0xf1);
        EXPECT(gbc.l(),  0x2b);
        EXPECT(gbc.sp(), 0x17c7);
        EXPECT(gbc.pc(), 0x534f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C0 0027
        gbc.setState(0x8802, 0x2287, 0xc00, 0xe0d8, 0xa8fb, 0x2a3d, 0x1, 0x0);
        gbc.writeMem(0x8802, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0xd8);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0xfb);
        EXPECT(gbc.h(),  0x2a);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0x2287);
        EXPECT(gbc.pc(), 0x8804);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8802), 0xcb);
        EXPECT(gbc.readMem(0x8803), 0xc0);
        // CB C0 0028
        gbc.setState(0x532f, 0x4e40, 0x9e70, 0x8a45, 0x175d, 0x8247, 0x0, 0x0);
        gbc.writeMem(0x532f, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0x17);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0x47);
        EXPECT(gbc.sp(), 0x4e40);
        EXPECT(gbc.pc(), 0x5331);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C0 002A
        gbc.setState(0x2967, 0xed58, 0x2040, 0x7382, 0xa399, 0xd806, 0x0, 0x1);
        gbc.writeMem(0x2967, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x20);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0xa3);
        EXPECT(gbc.e(),  0x99);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0xed58);
        EXPECT(gbc.pc(), 0x2969);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C0 002B
        gbc.setState(0xdd49, 0x1e9b, 0x6ed0, 0x31f7, 0x3ae3, 0x718d, 0x0, 0x0);
        gbc.writeMem(0xdd49, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0xe3);
        EXPECT(gbc.h(),  0x71);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0x1e9b);
        EXPECT(gbc.pc(), 0xdd4b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdd49), 0xcb);
        EXPECT(gbc.readMem(0xdd4a), 0xc0);
        // CB C0 002C
        gbc.setState(0x6d14, 0xf530, 0xf810, 0xdfc0, 0x1bfa, 0xdddd, 0x0, 0x0);
        gbc.writeMem(0x6d14, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0xdf);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0xfa);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0xdd);
        EXPECT(gbc.sp(), 0xf530);
        EXPECT(gbc.pc(), 0x6d16);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C0 002D
        gbc.setState(0x679, 0xdfa1, 0x4a60, 0xbf40, 0xcf76, 0xd71b, 0x1, 0x0);
        gbc.writeMem(0x679, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x4a);
        EXPECT(gbc.b(),  0xbf);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0xcf);
        EXPECT(gbc.e(),  0x76);
        EXPECT(gbc.h(),  0xd7);
        EXPECT(gbc.l(),  0x1b);
        EXPECT(gbc.sp(), 0xdfa1);
        EXPECT(gbc.pc(), 0x67b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C0 002E
        gbc.setState(0x74f8, 0xbc15, 0x72a0, 0x2ed0, 0x7747, 0x4eba, 0x1, 0x0);
        gbc.writeMem(0x74f8, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0x47);
        EXPECT(gbc.h(),  0x4e);
        EXPECT(gbc.l(),  0xba);
        EXPECT(gbc.sp(), 0xbc15);
        EXPECT(gbc.pc(), 0x74fa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C0 002F
        gbc.setState(0xd4af, 0x9f3, 0xf890, 0x7fbb, 0x4d2d, 0xa15f, 0x0, 0x1);
        gbc.writeMem(0xd4af, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0xbb);
        EXPECT(gbc.d(),  0x4d);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0xa1);
        EXPECT(gbc.l(),  0x5f);
        EXPECT(gbc.sp(), 0x9f3);
        EXPECT(gbc.pc(), 0xd4b1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd4af), 0xcb);
        EXPECT(gbc.readMem(0xd4b0), 0xc0);
        // CB C0 0030
        gbc.setState(0x49ee, 0x3904, 0x8d80, 0x8874, 0x8805, 0xd6fb, 0x1, 0x1);
        gbc.writeMem(0x49ee, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0x88);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0xfb);
        EXPECT(gbc.sp(), 0x3904);
        EXPECT(gbc.pc(), 0x49f0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C0 0031
        gbc.setState(0x5335, 0x4e07, 0xf80, 0xf293, 0xfd5a, 0x9f23, 0x0, 0x1);
        gbc.writeMem(0x5335, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf);
        EXPECT(gbc.b(),  0xf3);
        EXPECT(gbc.c(),  0x93);
        EXPECT(gbc.d(),  0xfd);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0x23);
        EXPECT(gbc.sp(), 0x4e07);
        EXPECT(gbc.pc(), 0x5337);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C0 0032
        gbc.setState(0x6eb2, 0x49fb, 0x8310, 0x5ca9, 0x3b78, 0x8ea9, 0x1, 0x1);
        gbc.writeMem(0x6eb2, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x83);
        EXPECT(gbc.b(),  0x5d);
        EXPECT(gbc.c(),  0xa9);
        EXPECT(gbc.d(),  0x3b);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0xa9);
        EXPECT(gbc.sp(), 0x49fb);
        EXPECT(gbc.pc(), 0x6eb4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C0 0033
        gbc.setState(0x4876, 0x68de, 0xb530, 0xd8a, 0xe85e, 0x2f5e, 0x0, 0x0);
        gbc.writeMem(0x4876, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb5);
        EXPECT(gbc.b(),  0xd);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0xe8);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0x2f);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0x68de);
        EXPECT(gbc.pc(), 0x4878);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C0 0034
        gbc.setState(0xea1a, 0x57e2, 0xbe40, 0x6eb, 0x888d, 0x8b28, 0x0, 0x1);
        gbc.writeMem(0xea1a, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0x88);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0x57e2);
        EXPECT(gbc.pc(), 0xea1c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xea1a), 0xcb);
        EXPECT(gbc.readMem(0xea1b), 0xc0);
        // CB C0 0035
        gbc.setState(0x7a02, 0x2424, 0x4350, 0x9e77, 0xadce, 0x7063, 0x1, 0x1);
        gbc.writeMem(0x7a02, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x43);
        EXPECT(gbc.b(),  0x9f);
        EXPECT(gbc.c(),  0x77);
        EXPECT(gbc.d(),  0xad);
        EXPECT(gbc.e(),  0xce);
        EXPECT(gbc.h(),  0x70);
        EXPECT(gbc.l(),  0x63);
        EXPECT(gbc.sp(), 0x2424);
        EXPECT(gbc.pc(), 0x7a04);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C0 0036
        gbc.setState(0x9baa, 0x2232, 0xf440, 0x1db8, 0xb7f9, 0x5dad, 0x1, 0x1);
        gbc.writeMem(0x9baa, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0xb8);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0xf9);
        EXPECT(gbc.h(),  0x5d);
        EXPECT(gbc.l(),  0xad);
        EXPECT(gbc.sp(), 0x2232);
        EXPECT(gbc.pc(), 0x9bac);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9baa), 0xcb);
        EXPECT(gbc.readMem(0x9bab), 0xc0);
        // CB C0 0037
        gbc.setState(0x4ed4, 0xb1b6, 0xec30, 0xb9d5, 0xcb70, 0x7e2d, 0x0, 0x1);
        gbc.writeMem(0x4ed4, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0xb9);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0x7e);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0xb1b6);
        EXPECT(gbc.pc(), 0x4ed6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C0 0038
        gbc.setState(0x5ac7, 0xefe9, 0xb30, 0x1466, 0x7e1c, 0x6b90, 0x0, 0x0);
        gbc.writeMem(0x5ac7, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0x7e);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0x6b);
        EXPECT(gbc.l(),  0x90);
        EXPECT(gbc.sp(), 0xefe9);
        EXPECT(gbc.pc(), 0x5ac9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C0 003A
        gbc.setState(0xe0ef, 0x234d, 0xb890, 0xc556, 0xee1b, 0xb49d, 0x0, 0x1);
        gbc.writeMem(0xe0ef, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb8);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0xee);
        EXPECT(gbc.e(),  0x1b);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0x9d);
        EXPECT(gbc.sp(), 0x234d);
        EXPECT(gbc.pc(), 0xe0f1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe0ef), 0xcb);
        EXPECT(gbc.readMem(0xe0f0), 0xc0);
        // CB C0 003B
        gbc.setState(0x6304, 0x249f, 0xeac0, 0x3c52, 0x5169, 0x70d0, 0x0, 0x0);
        gbc.writeMem(0x6304, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0x52);
        EXPECT(gbc.d(),  0x51);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0x70);
        EXPECT(gbc.l(),  0xd0);
        EXPECT(gbc.sp(), 0x249f);
        EXPECT(gbc.pc(), 0x6306);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C0 003C
        gbc.setState(0x5ca4, 0xc1ae, 0xd760, 0xae51, 0xe546, 0x2193, 0x1, 0x0);
        gbc.writeMem(0x5ca4, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd7);
        EXPECT(gbc.b(),  0xaf);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0x21);
        EXPECT(gbc.l(),  0x93);
        EXPECT(gbc.sp(), 0xc1ae);
        EXPECT(gbc.pc(), 0x5ca6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C0 003D
        gbc.setState(0xa02b, 0x64c5, 0x8b10, 0xf5f3, 0x7d01, 0x6ce1, 0x0, 0x1);
        gbc.writeMem(0xa02b, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0xf3);
        EXPECT(gbc.d(),  0x7d);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0x6c);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0x64c5);
        EXPECT(gbc.pc(), 0xa02d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa02b), 0xcb);
        EXPECT(gbc.readMem(0xa02c), 0xc0);
        // CB C0 003E
        gbc.setState(0x4978, 0x4d02, 0xbf80, 0x2d75, 0xa8f7, 0xefaa, 0x0, 0x0);
        gbc.writeMem(0x4978, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0x2d);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0xf7);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0xaa);
        EXPECT(gbc.sp(), 0x4d02);
        EXPECT(gbc.pc(), 0x497a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C0 0040
        gbc.setState(0xd27e, 0x67c5, 0x3f80, 0x76b7, 0x458c, 0x26af, 0x1, 0x0);
        gbc.writeMem(0xd27e, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0x77);
        EXPECT(gbc.c(),  0xb7);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0xaf);
        EXPECT(gbc.sp(), 0x67c5);
        EXPECT(gbc.pc(), 0xd280);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd27e), 0xcb);
        EXPECT(gbc.readMem(0xd27f), 0xc0);
        // CB C0 0041
        gbc.setState(0x717b, 0xf818, 0x2e70, 0x142d, 0xc20f, 0xaf93, 0x1, 0x0);
        gbc.writeMem(0x717b, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0xaf);
        EXPECT(gbc.l(),  0x93);
        EXPECT(gbc.sp(), 0xf818);
        EXPECT(gbc.pc(), 0x717d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C0 0042
        gbc.setState(0x53e5, 0x7c3d, 0x8410, 0x4deb, 0x36e6, 0x9ed2, 0x1, 0x0);
        gbc.writeMem(0x53e5, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x84);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0xe6);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0x7c3d);
        EXPECT(gbc.pc(), 0x53e7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C0 0043
        gbc.setState(0xc4b6, 0xfec5, 0x4cb0, 0x9c51, 0xfd93, 0x8222, 0x1, 0x0);
        gbc.writeMem(0xc4b6, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x4c);
        EXPECT(gbc.b(),  0x9d);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0xfd);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0x22);
        EXPECT(gbc.sp(), 0xfec5);
        EXPECT(gbc.pc(), 0xc4b8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc4b6), 0xcb);
        EXPECT(gbc.readMem(0xc4b7), 0xc0);
        // CB C0 0044
        gbc.setState(0xddc8, 0x4f83, 0xc90, 0xafb1, 0x8026, 0x319, 0x1, 0x1);
        gbc.writeMem(0xddc8, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0xaf);
        EXPECT(gbc.c(),  0xb1);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0x3);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0x4f83);
        EXPECT(gbc.pc(), 0xddca);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xddc8), 0xcb);
        EXPECT(gbc.readMem(0xddc9), 0xc0);
        // CB C0 0045
        gbc.setState(0x928a, 0x7885, 0xb680, 0xbfb0, 0x75b, 0xd451, 0x0, 0x0);
        gbc.writeMem(0x928a, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0xbf);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0x5b);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0x7885);
        EXPECT(gbc.pc(), 0x928c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x928a), 0xcb);
        EXPECT(gbc.readMem(0x928b), 0xc0);
        // CB C0 0046
        gbc.setState(0x38b, 0x7622, 0x51a0, 0xefc1, 0x910, 0x5594, 0x1, 0x0);
        gbc.writeMem(0x38b, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0xef);
        EXPECT(gbc.c(),  0xc1);
        EXPECT(gbc.d(),  0x9);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0x7622);
        EXPECT(gbc.pc(), 0x38d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C0 0047
        gbc.setState(0x29a5, 0x71da, 0xee70, 0xb668, 0x9a82, 0xdab5, 0x1, 0x0);
        gbc.writeMem(0x29a5, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xee);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0x68);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0x82);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0x71da);
        EXPECT(gbc.pc(), 0x29a7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C0 0048
        gbc.setState(0x340f, 0xac0, 0x7cb0, 0x1c84, 0x883b, 0x569e, 0x1, 0x1);
        gbc.writeMem(0x340f, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x7c);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0x88);
        EXPECT(gbc.e(),  0x3b);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0xac0);
        EXPECT(gbc.pc(), 0x3411);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C0 0049
        gbc.setState(0xdde2, 0xa6e2, 0xf90, 0xfc9b, 0xa09c, 0x43db, 0x1, 0x1);
        gbc.writeMem(0xdde2, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0x9b);
        EXPECT(gbc.d(),  0xa0);
        EXPECT(gbc.e(),  0x9c);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0xa6e2);
        EXPECT(gbc.pc(), 0xdde4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdde2), 0xcb);
        EXPECT(gbc.readMem(0xdde3), 0xc0);
        // CB C0 004A
        gbc.setState(0x5bc3, 0x4e68, 0x900, 0x5de5, 0xf931, 0xd031, 0x1, 0x0);
        gbc.writeMem(0x5bc3, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0x5d);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0xf9);
        EXPECT(gbc.e(),  0x31);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0x4e68);
        EXPECT(gbc.pc(), 0x5bc5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C0 004D
        gbc.setState(0xba3a, 0xfc3f, 0x8780, 0x477, 0x6b23, 0xebfa, 0x0, 0x0);
        gbc.writeMem(0xba3a, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x87);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0x77);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0xfc3f);
        EXPECT(gbc.pc(), 0xba3c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xba3a), 0xcb);
        EXPECT(gbc.readMem(0xba3b), 0xc0);
        // CB C0 004E
        gbc.setState(0x1df6, 0xb391, 0xa920, 0x4c49, 0x5b51, 0xef4d, 0x1, 0x0);
        gbc.writeMem(0x1df6, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa9);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0x49);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0x51);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0xb391);
        EXPECT(gbc.pc(), 0x1df8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C0 004F
        gbc.setState(0xc57a, 0xec84, 0xd8c0, 0x8b85, 0xa370, 0xcbc6, 0x0, 0x1);
        gbc.writeMem(0xc57a, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd8);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0x85);
        EXPECT(gbc.d(),  0xa3);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0xec84);
        EXPECT(gbc.pc(), 0xc57c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc57a), 0xcb);
        EXPECT(gbc.readMem(0xc57b), 0xc0);
        // CB C0 0051
        gbc.setState(0xe7d5, 0x2b20, 0xe3b0, 0xffc9, 0xefdd, 0xfd07, 0x0, 0x1);
        gbc.writeMem(0xe7d5, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0xff);
        EXPECT(gbc.c(),  0xc9);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0xfd);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0x2b20);
        EXPECT(gbc.pc(), 0xe7d7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe7d5), 0xcb);
        EXPECT(gbc.readMem(0xe7d6), 0xc0);
        // CB C0 0052
        gbc.setState(0xe55d, 0x281a, 0x9830, 0x6ece, 0xcb70, 0x7fba, 0x1, 0x0);
        gbc.writeMem(0xe55d, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x98);
        EXPECT(gbc.b(),  0x6f);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0x7f);
        EXPECT(gbc.l(),  0xba);
        EXPECT(gbc.sp(), 0x281a);
        EXPECT(gbc.pc(), 0xe55f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe55d), 0xcb);
        EXPECT(gbc.readMem(0xe55e), 0xc0);
        // CB C0 0053
        gbc.setState(0xa628, 0x3ccf, 0x8290, 0x5517, 0xf642, 0xee22, 0x0, 0x1);
        gbc.writeMem(0xa628, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x82);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0x17);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0x42);
        EXPECT(gbc.h(),  0xee);
        EXPECT(gbc.l(),  0x22);
        EXPECT(gbc.sp(), 0x3ccf);
        EXPECT(gbc.pc(), 0xa62a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa628), 0xcb);
        EXPECT(gbc.readMem(0xa629), 0xc0);
        // CB C0 0054
        gbc.setState(0x8507, 0xee55, 0x6ec0, 0x76d6, 0x2c90, 0x18be, 0x1, 0x1);
        gbc.writeMem(0x8507, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0x77);
        EXPECT(gbc.c(),  0xd6);
        EXPECT(gbc.d(),  0x2c);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0x18);
        EXPECT(gbc.l(),  0xbe);
        EXPECT(gbc.sp(), 0xee55);
        EXPECT(gbc.pc(), 0x8509);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8507), 0xcb);
        EXPECT(gbc.readMem(0x8508), 0xc0);
        // CB C0 0055
        gbc.setState(0x167a, 0xbb78, 0x8110, 0x3ef0, 0x5b0f, 0x35d1, 0x1, 0x0);
        gbc.writeMem(0x167a, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x81);
        EXPECT(gbc.b(),  0x3f);
        EXPECT(gbc.c(),  0xf0);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0xd1);
        EXPECT(gbc.sp(), 0xbb78);
        EXPECT(gbc.pc(), 0x167c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C0 0056
        gbc.setState(0x901a, 0x8703, 0xc460, 0x7b86, 0x366b, 0xc02c, 0x0, 0x1);
        gbc.writeMem(0x901a, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xc4);
        EXPECT(gbc.b(),  0x7b);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0x6b);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0x2c);
        EXPECT(gbc.sp(), 0x8703);
        EXPECT(gbc.pc(), 0x901c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x901a), 0xcb);
        EXPECT(gbc.readMem(0x901b), 0xc0);
        // CB C0 0057
        gbc.setState(0x95ba, 0xd672, 0xf740, 0xe588, 0xc975, 0x17ea, 0x0, 0x1);
        gbc.writeMem(0x95ba, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0xe5);
        EXPECT(gbc.c(),  0x88);
        EXPECT(gbc.d(),  0xc9);
        EXPECT(gbc.e(),  0x75);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0xd672);
        EXPECT(gbc.pc(), 0x95bc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x95ba), 0xcb);
        EXPECT(gbc.readMem(0x95bb), 0xc0);
        // CB C0 0058
        gbc.setState(0xa836, 0x3177, 0xdea0, 0xa22a, 0x1f45, 0xa6e6, 0x0, 0x0);
        gbc.writeMem(0xa836, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xde);
        EXPECT(gbc.b(),  0xa3);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0x1f);
        EXPECT(gbc.e(),  0x45);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0x3177);
        EXPECT(gbc.pc(), 0xa838);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa836), 0xcb);
        EXPECT(gbc.readMem(0xa837), 0xc0);
        // CB C0 0059
        gbc.setState(0x250c, 0x3178, 0x410, 0x78c9, 0xaa13, 0x9300, 0x1, 0x0);
        gbc.writeMem(0x250c, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x4);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0xc9);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0x0);
        EXPECT(gbc.sp(), 0x3178);
        EXPECT(gbc.pc(), 0x250e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C0 005A
        gbc.setState(0xeac6, 0x9d57, 0xf690, 0xe004, 0xf8ef, 0x888f, 0x0, 0x0);
        gbc.writeMem(0xeac6, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf6);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0xef);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0x9d57);
        EXPECT(gbc.pc(), 0xeac8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xeac6), 0xcb);
        EXPECT(gbc.readMem(0xeac7), 0xc0);
        // CB C0 005B
        gbc.setState(0xbf37, 0xbb96, 0x70c0, 0xd51b, 0xbdfd, 0x6826, 0x1, 0x1);
        gbc.writeMem(0xbf37, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x70);
        EXPECT(gbc.b(),  0xd5);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0xfd);
        EXPECT(gbc.h(),  0x68);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0xbb96);
        EXPECT(gbc.pc(), 0xbf39);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbf37), 0xcb);
        EXPECT(gbc.readMem(0xbf38), 0xc0);
        // CB C0 005C
        gbc.setState(0x33d9, 0x12ad, 0x4670, 0x1a3a, 0xec57, 0x25d1, 0x0, 0x1);
        gbc.writeMem(0x33d9, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x46);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0x57);
        EXPECT(gbc.h(),  0x25);
        EXPECT(gbc.l(),  0xd1);
        EXPECT(gbc.sp(), 0x12ad);
        EXPECT(gbc.pc(), 0x33db);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C0 005D
        gbc.setState(0xb1, 0xe7f6, 0x950, 0x671a, 0x1700, 0x97ab, 0x1, 0x0);
        gbc.writeMem(0xb1, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0x67);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0x17);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0xe7f6);
        EXPECT(gbc.pc(), 0xb3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C0 005E
        gbc.setState(0x170d, 0xf3d4, 0xaaf0, 0xdf77, 0xee9e, 0x3604, 0x1, 0x1);
        gbc.writeMem(0x170d, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xaa);
        EXPECT(gbc.b(),  0xdf);
        EXPECT(gbc.c(),  0x77);
        EXPECT(gbc.d(),  0xee);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0x36);
        EXPECT(gbc.l(),  0x4);
        EXPECT(gbc.sp(), 0xf3d4);
        EXPECT(gbc.pc(), 0x170f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C0 005F
        gbc.setState(0xd69d, 0xb34f, 0x4c60, 0xc615, 0x37fb, 0x60cd, 0x1, 0x1);
        gbc.writeMem(0xd69d, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x4c);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0x37);
        EXPECT(gbc.e(),  0xfb);
        EXPECT(gbc.h(),  0x60);
        EXPECT(gbc.l(),  0xcd);
        EXPECT(gbc.sp(), 0xb34f);
        EXPECT(gbc.pc(), 0xd69f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd69d), 0xcb);
        EXPECT(gbc.readMem(0xd69e), 0xc0);
        // CB C0 0060
        gbc.setState(0x9206, 0xa5f6, 0x6340, 0x3ee4, 0xd566, 0xd871, 0x0, 0x1);
        gbc.writeMem(0x9206, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0x3f);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0x66);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0xa5f6);
        EXPECT(gbc.pc(), 0x9208);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9206), 0xcb);
        EXPECT(gbc.readMem(0x9207), 0xc0);
        // CB C0 0062
        gbc.setState(0xe6a4, 0x1ee3, 0x1570, 0x7b5e, 0xa861, 0xebb1, 0x0, 0x1);
        gbc.writeMem(0xe6a4, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x15);
        EXPECT(gbc.b(),  0x7b);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0x61);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0x1ee3);
        EXPECT(gbc.pc(), 0xe6a6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe6a4), 0xcb);
        EXPECT(gbc.readMem(0xe6a5), 0xc0);
        // CB C0 0063
        gbc.setState(0xe73d, 0x1a94, 0x9d50, 0x90a4, 0xfa86, 0x3f26, 0x1, 0x1);
        gbc.writeMem(0xe73d, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x9d);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0xa4);
        EXPECT(gbc.d(),  0xfa);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0x1a94);
        EXPECT(gbc.pc(), 0xe73f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe73d), 0xcb);
        EXPECT(gbc.readMem(0xe73e), 0xc0);
        // CB C0 0064
        gbc.setState(0x8375, 0xbb05, 0x1400, 0x2b, 0x63c2, 0x36bf, 0x1, 0x0);
        gbc.writeMem(0x8375, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x14);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0x2b);
        EXPECT(gbc.d(),  0x63);
        EXPECT(gbc.e(),  0xc2);
        EXPECT(gbc.h(),  0x36);
        EXPECT(gbc.l(),  0xbf);
        EXPECT(gbc.sp(), 0xbb05);
        EXPECT(gbc.pc(), 0x8377);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8375), 0xcb);
        EXPECT(gbc.readMem(0x8376), 0xc0);
        // CB C0 0065
        gbc.setState(0xea72, 0xda0e, 0x5740, 0xe997, 0x9fba, 0xbf7b, 0x1, 0x0);
        gbc.writeMem(0xea72, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x57);
        EXPECT(gbc.b(),  0xe9);
        EXPECT(gbc.c(),  0x97);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0x7b);
        EXPECT(gbc.sp(), 0xda0e);
        EXPECT(gbc.pc(), 0xea74);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xea72), 0xcb);
        EXPECT(gbc.readMem(0xea73), 0xc0);
        // CB C0 0066
        gbc.setState(0xb16d, 0xef1a, 0x3cb0, 0x47a9, 0x46f6, 0xafd7, 0x1, 0x1);
        gbc.writeMem(0xb16d, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0xa9);
        EXPECT(gbc.d(),  0x46);
        EXPECT(gbc.e(),  0xf6);
        EXPECT(gbc.h(),  0xaf);
        EXPECT(gbc.l(),  0xd7);
        EXPECT(gbc.sp(), 0xef1a);
        EXPECT(gbc.pc(), 0xb16f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb16d), 0xcb);
        EXPECT(gbc.readMem(0xb16e), 0xc0);
        // CB C0 0068
        gbc.setState(0xc5ce, 0x6e3c, 0x1fc0, 0xfee8, 0x149, 0x17ca, 0x0, 0x0);
        gbc.writeMem(0xc5ce, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0xff);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0x1);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0xca);
        EXPECT(gbc.sp(), 0x6e3c);
        EXPECT(gbc.pc(), 0xc5d0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc5ce), 0xcb);
        EXPECT(gbc.readMem(0xc5cf), 0xc0);
        // CB C0 0069
        gbc.setState(0xca27, 0xf27e, 0xc960, 0xb86e, 0x2397, 0x2a77, 0x0, 0x0);
        gbc.writeMem(0xca27, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xc9);
        EXPECT(gbc.b(),  0xb9);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0x97);
        EXPECT(gbc.h(),  0x2a);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0xf27e);
        EXPECT(gbc.pc(), 0xca29);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xca27), 0xcb);
        EXPECT(gbc.readMem(0xca28), 0xc0);
        // CB C0 006A
        gbc.setState(0x862e, 0x283a, 0xaf90, 0xb112, 0xdc8b, 0x72e0, 0x0, 0x0);
        gbc.writeMem(0x862e, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xaf);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0x8b);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0x283a);
        EXPECT(gbc.pc(), 0x8630);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x862e), 0xcb);
        EXPECT(gbc.readMem(0x862f), 0xc0);
        // CB C0 006B
        gbc.setState(0x478c, 0x4056, 0xe060, 0x5989, 0xee51, 0xcaa9, 0x0, 0x1);
        gbc.writeMem(0x478c, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe0);
        EXPECT(gbc.b(),  0x59);
        EXPECT(gbc.c(),  0x89);
        EXPECT(gbc.d(),  0xee);
        EXPECT(gbc.e(),  0x51);
        EXPECT(gbc.h(),  0xca);
        EXPECT(gbc.l(),  0xa9);
        EXPECT(gbc.sp(), 0x4056);
        EXPECT(gbc.pc(), 0x478e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C0 006C
        gbc.setState(0x1fb5, 0x2e72, 0x82a0, 0x59a1, 0x57ea, 0x2214, 0x0, 0x0);
        gbc.writeMem(0x1fb5, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x82);
        EXPECT(gbc.b(),  0x59);
        EXPECT(gbc.c(),  0xa1);
        EXPECT(gbc.d(),  0x57);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0x22);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0x2e72);
        EXPECT(gbc.pc(), 0x1fb7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C0 006D
        gbc.setState(0x22ec, 0xa872, 0xd320, 0xd82c, 0x3ce8, 0xb2bd, 0x1, 0x1);
        gbc.writeMem(0x22ec, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd3);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0xbd);
        EXPECT(gbc.sp(), 0xa872);
        EXPECT(gbc.pc(), 0x22ee);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C0 006E
        gbc.setState(0xa577, 0x7bb5, 0x6750, 0xb02, 0x6e76, 0x6d17, 0x0, 0x1);
        gbc.writeMem(0xa577, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x67);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0x76);
        EXPECT(gbc.h(),  0x6d);
        EXPECT(gbc.l(),  0x17);
        EXPECT(gbc.sp(), 0x7bb5);
        EXPECT(gbc.pc(), 0xa579);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa577), 0xcb);
        EXPECT(gbc.readMem(0xa578), 0xc0);
        // CB C0 006F
        gbc.setState(0x92c1, 0xccc3, 0xf960, 0x2cb2, 0xabe0, 0xa4ac, 0x1, 0x0);
        gbc.writeMem(0x92c1, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf9);
        EXPECT(gbc.b(),  0x2d);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0xccc3);
        EXPECT(gbc.pc(), 0x92c3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x92c1), 0xcb);
        EXPECT(gbc.readMem(0x92c2), 0xc0);
        // CB C0 0070
        gbc.setState(0x4920, 0x5e6f, 0xcb00, 0x980, 0xda3b, 0xd82d, 0x0, 0x0);
        gbc.writeMem(0x4920, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xcb);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0x80);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0x3b);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0x5e6f);
        EXPECT(gbc.pc(), 0x4922);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C0 0071
        gbc.setState(0x5e0, 0x19c3, 0xd1e0, 0x95e6, 0xc528, 0x6979, 0x0, 0x1);
        gbc.writeMem(0x5e0, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd1);
        EXPECT(gbc.b(),  0x95);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0xc5);
        EXPECT(gbc.e(),  0x28);
        EXPECT(gbc.h(),  0x69);
        EXPECT(gbc.l(),  0x79);
        EXPECT(gbc.sp(), 0x19c3);
        EXPECT(gbc.pc(), 0x5e2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C0 0072
        gbc.setState(0xd6cb, 0x670d, 0x5620, 0x6717, 0xc4c4, 0x5c86, 0x0, 0x1);
        gbc.writeMem(0xd6cb, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0x67);
        EXPECT(gbc.c(),  0x17);
        EXPECT(gbc.d(),  0xc4);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0x5c);
        EXPECT(gbc.l(),  0x86);
        EXPECT(gbc.sp(), 0x670d);
        EXPECT(gbc.pc(), 0xd6cd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd6cb), 0xcb);
        EXPECT(gbc.readMem(0xd6cc), 0xc0);
        // CB C0 0073
        gbc.setState(0x41c5, 0x98e9, 0xe8a0, 0x5a48, 0xe91d, 0xeb95, 0x1, 0x1);
        gbc.writeMem(0x41c5, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0xe9);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0x95);
        EXPECT(gbc.sp(), 0x98e9);
        EXPECT(gbc.pc(), 0x41c7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C0 0074
        gbc.setState(0x1237, 0xa063, 0x7c70, 0x7382, 0xd951, 0x45eb, 0x1, 0x1);
        gbc.writeMem(0x1237, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x7c);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0xd9);
        EXPECT(gbc.e(),  0x51);
        EXPECT(gbc.h(),  0x45);
        EXPECT(gbc.l(),  0xeb);
        EXPECT(gbc.sp(), 0xa063);
        EXPECT(gbc.pc(), 0x1239);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C0 0075
        gbc.setState(0xa99f, 0x4230, 0x340, 0xfe2, 0x1304, 0x3851, 0x0, 0x0);
        gbc.writeMem(0xa99f, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0xf);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0x4);
        EXPECT(gbc.h(),  0x38);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0x4230);
        EXPECT(gbc.pc(), 0xa9a1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa99f), 0xcb);
        EXPECT(gbc.readMem(0xa9a0), 0xc0);
        // CB C0 0076
        gbc.setState(0x12a6, 0xb367, 0xd290, 0x408c, 0x9e7e, 0x892d, 0x0, 0x1);
        gbc.writeMem(0x12a6, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0x7e);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0xb367);
        EXPECT(gbc.pc(), 0x12a8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C0 0077
        gbc.setState(0x2e7d, 0x817, 0x3660, 0xfc62, 0x5c52, 0x6e21, 0x0, 0x1);
        gbc.writeMem(0x2e7d, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x36);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0x5c);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0x6e);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0x817);
        EXPECT(gbc.pc(), 0x2e7f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C0 0078
        gbc.setState(0xbaa8, 0xfe28, 0xdc0, 0x1d6d, 0xeafc, 0x9062, 0x1, 0x0);
        gbc.writeMem(0xbaa8, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0x6d);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0x90);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0xfe28);
        EXPECT(gbc.pc(), 0xbaaa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbaa8), 0xcb);
        EXPECT(gbc.readMem(0xbaa9), 0xc0);
        // CB C0 007A
        gbc.setState(0xed50, 0xe6a9, 0xd50, 0x83fd, 0x1178, 0x746, 0x1, 0x0);
        gbc.writeMem(0xed50, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd);
        EXPECT(gbc.b(),  0x83);
        EXPECT(gbc.c(),  0xfd);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0x46);
        EXPECT(gbc.sp(), 0xe6a9);
        EXPECT(gbc.pc(), 0xed52);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xed50), 0xcb);
        EXPECT(gbc.readMem(0xed51), 0xc0);
        // CB C0 007B
        gbc.setState(0x6b2e, 0x9928, 0xba10, 0x6674, 0x1e74, 0xb8f6, 0x0, 0x1);
        gbc.writeMem(0x6b2e, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0x67);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0x1e);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0xf6);
        EXPECT(gbc.sp(), 0x9928);
        EXPECT(gbc.pc(), 0x6b30);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C0 007C
        gbc.setState(0xbe48, 0x2b37, 0xaa90, 0xa286, 0x72fd, 0x7659, 0x0, 0x0);
        gbc.writeMem(0xbe48, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xaa);
        EXPECT(gbc.b(),  0xa3);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0xfd);
        EXPECT(gbc.h(),  0x76);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0x2b37);
        EXPECT(gbc.pc(), 0xbe4a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbe48), 0xcb);
        EXPECT(gbc.readMem(0xbe49), 0xc0);
        // CB C0 007D
        gbc.setState(0x80cf, 0x7687, 0x59f0, 0xeed1, 0x1cba, 0xca24, 0x1, 0x0);
        gbc.writeMem(0x80cf, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0xef);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0xca);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0x7687);
        EXPECT(gbc.pc(), 0x80d1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x80cf), 0xcb);
        EXPECT(gbc.readMem(0x80d0), 0xc0);
        // CB C0 007E
        gbc.setState(0x406, 0x42d3, 0xf510, 0x8fcf, 0x8311, 0x412e, 0x0, 0x1);
        gbc.writeMem(0x406, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf5);
        EXPECT(gbc.b(),  0x8f);
        EXPECT(gbc.c(),  0xcf);
        EXPECT(gbc.d(),  0x83);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0x41);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0x42d3);
        EXPECT(gbc.pc(), 0x408);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C0 007F
        gbc.setState(0x4cc2, 0x9ab5, 0x3130, 0xfec, 0x5e9b, 0xc647, 0x0, 0x0);
        gbc.writeMem(0x4cc2, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x31);
        EXPECT(gbc.b(),  0xf);
        EXPECT(gbc.c(),  0xec);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0x9b);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0x47);
        EXPECT(gbc.sp(), 0x9ab5);
        EXPECT(gbc.pc(), 0x4cc4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C0 0080
        gbc.setState(0xaccc, 0x9fc7, 0xac20, 0xc412, 0x9c05, 0xe549, 0x1, 0x0);
        gbc.writeMem(0xaccc, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xac);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0x9fc7);
        EXPECT(gbc.pc(), 0xacce);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaccc), 0xcb);
        EXPECT(gbc.readMem(0xaccd), 0xc0);
        // CB C0 0081
        gbc.setState(0xc231, 0x32e3, 0x2890, 0x7133, 0x37f1, 0x896d, 0x1, 0x0);
        gbc.writeMem(0xc231, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0x37);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0x6d);
        EXPECT(gbc.sp(), 0x32e3);
        EXPECT(gbc.pc(), 0xc233);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc231), 0xcb);
        EXPECT(gbc.readMem(0xc232), 0xc0);
        // CB C0 0082
        gbc.setState(0xaf13, 0xe7b3, 0xf9f0, 0xf105, 0xd0ff, 0xd4fb, 0x1, 0x1);
        gbc.writeMem(0xaf13, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf9);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0xff);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0xfb);
        EXPECT(gbc.sp(), 0xe7b3);
        EXPECT(gbc.pc(), 0xaf15);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaf13), 0xcb);
        EXPECT(gbc.readMem(0xaf14), 0xc0);
        // CB C0 0083
        gbc.setState(0x608e, 0xfd93, 0x7030, 0xd30f, 0x6ed7, 0x271b, 0x0, 0x1);
        gbc.writeMem(0x608e, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x70);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0xd7);
        EXPECT(gbc.h(),  0x27);
        EXPECT(gbc.l(),  0x1b);
        EXPECT(gbc.sp(), 0xfd93);
        EXPECT(gbc.pc(), 0x6090);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C0 0084
        gbc.setState(0xa903, 0x6b73, 0x49b0, 0xe48d, 0x5a8b, 0x5cb4, 0x0, 0x0);
        gbc.writeMem(0xa903, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0xe5);
        EXPECT(gbc.c(),  0x8d);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0x8b);
        EXPECT(gbc.h(),  0x5c);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0x6b73);
        EXPECT(gbc.pc(), 0xa905);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa903), 0xcb);
        EXPECT(gbc.readMem(0xa904), 0xc0);
        // CB C0 0085
        gbc.setState(0x755d, 0x6e8c, 0x1d80, 0x181a, 0x813c, 0xa458, 0x1, 0x1);
        gbc.writeMem(0x755d, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0x19);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0x81);
        EXPECT(gbc.e(),  0x3c);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0x6e8c);
        EXPECT(gbc.pc(), 0x755f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C0 0086
        gbc.setState(0x35b6, 0x94f3, 0x2700, 0xa278, 0x549e, 0xdf2a, 0x1, 0x1);
        gbc.writeMem(0x35b6, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x27);
        EXPECT(gbc.b(),  0xa3);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0x54);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0xdf);
        EXPECT(gbc.l(),  0x2a);
        EXPECT(gbc.sp(), 0x94f3);
        EXPECT(gbc.pc(), 0x35b8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C0 0087
        gbc.setState(0xd248, 0x5a11, 0xc120, 0x56ca, 0x9132, 0xb88b, 0x0, 0x1);
        gbc.writeMem(0xd248, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xc1);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0x8b);
        EXPECT(gbc.sp(), 0x5a11);
        EXPECT(gbc.pc(), 0xd24a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd248), 0xcb);
        EXPECT(gbc.readMem(0xd249), 0xc0);
        // CB C0 0088
        gbc.setState(0x4274, 0xcb0c, 0x9c90, 0x5906, 0xb552, 0x33b4, 0x1, 0x1);
        gbc.writeMem(0x4274, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x9c);
        EXPECT(gbc.b(),  0x59);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0xb5);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0xcb0c);
        EXPECT(gbc.pc(), 0x4276);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C0 0089
        gbc.setState(0x9fb9, 0x9cb8, 0xbdc0, 0xb663, 0xd98d, 0x6b5a, 0x0, 0x0);
        gbc.writeMem(0x9fb9, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xbd);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0x63);
        EXPECT(gbc.d(),  0xd9);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0x6b);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0x9cb8);
        EXPECT(gbc.pc(), 0x9fbb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9fb9), 0xcb);
        EXPECT(gbc.readMem(0x9fba), 0xc0);
        // CB C0 008A
        gbc.setState(0xb17f, 0xa039, 0xcb0, 0x1365, 0xe5bb, 0x252e, 0x1, 0x1);
        gbc.writeMem(0xb17f, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0x65);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0xbb);
        EXPECT(gbc.h(),  0x25);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0xa039);
        EXPECT(gbc.pc(), 0xb181);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb17f), 0xcb);
        EXPECT(gbc.readMem(0xb180), 0xc0);
        // CB C0 008B
        gbc.setState(0x58a4, 0x1133, 0xdd20, 0x97b9, 0xfe43, 0x9bdf, 0x0, 0x1);
        gbc.writeMem(0x58a4, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xdd);
        EXPECT(gbc.b(),  0x97);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0xdf);
        EXPECT(gbc.sp(), 0x1133);
        EXPECT(gbc.pc(), 0x58a6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C0 008C
        gbc.setState(0x5253, 0x1c3a, 0x9ca0, 0xd29d, 0xde11, 0xbd82, 0x0, 0x1);
        gbc.writeMem(0x5253, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x9c);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0x9d);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0x1c3a);
        EXPECT(gbc.pc(), 0x5255);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C0 008D
        gbc.setState(0xca66, 0x4f25, 0xb710, 0x9aa0, 0xc4f, 0xd91d, 0x1, 0x0);
        gbc.writeMem(0xca66, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0x9b);
        EXPECT(gbc.c(),  0xa0);
        EXPECT(gbc.d(),  0xc);
        EXPECT(gbc.e(),  0x4f);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0x4f25);
        EXPECT(gbc.pc(), 0xca68);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xca66), 0xcb);
        EXPECT(gbc.readMem(0xca67), 0xc0);
        // CB C0 008E
        gbc.setState(0x6f01, 0x47e4, 0xb700, 0x35e, 0x918d, 0x35e1, 0x1, 0x0);
        gbc.writeMem(0x6f01, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0x47e4);
        EXPECT(gbc.pc(), 0x6f03);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C0 008F
        gbc.setState(0xe474, 0x9245, 0xae70, 0xf1b6, 0x1fb3, 0x22f8, 0x1, 0x0);
        gbc.writeMem(0xe474, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xae);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0xb6);
        EXPECT(gbc.d(),  0x1f);
        EXPECT(gbc.e(),  0xb3);
        EXPECT(gbc.h(),  0x22);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0x9245);
        EXPECT(gbc.pc(), 0xe476);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe474), 0xcb);
        EXPECT(gbc.readMem(0xe475), 0xc0);
        // CB C0 0090
        gbc.setState(0xcd08, 0xe3db, 0xe8e0, 0x943a, 0x6839, 0x29b0, 0x0, 0x0);
        gbc.writeMem(0xcd08, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0x95);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0x68);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0x29);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0xe3db);
        EXPECT(gbc.pc(), 0xcd0a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcd08), 0xcb);
        EXPECT(gbc.readMem(0xcd09), 0xc0);
        // CB C0 0091
        gbc.setState(0x7219, 0x3f5f, 0x14a0, 0x5807, 0x7b95, 0xce13, 0x1, 0x1);
        gbc.writeMem(0x7219, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x14);
        EXPECT(gbc.b(),  0x59);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0x7b);
        EXPECT(gbc.e(),  0x95);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0x3f5f);
        EXPECT(gbc.pc(), 0x721b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C0 0092
        gbc.setState(0x2979, 0x9175, 0x410, 0xc91f, 0x7509, 0xe288, 0x0, 0x0);
        gbc.writeMem(0x2979, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x4);
        EXPECT(gbc.b(),  0xc9);
        EXPECT(gbc.c(),  0x1f);
        EXPECT(gbc.d(),  0x75);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0xe2);
        EXPECT(gbc.l(),  0x88);
        EXPECT(gbc.sp(), 0x9175);
        EXPECT(gbc.pc(), 0x297b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C0 0093
        gbc.setState(0x2594, 0x8e39, 0x9b40, 0xcc43, 0xa8ab, 0x7bdc, 0x1, 0x0);
        gbc.writeMem(0x2594, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x9b);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0x43);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0x7b);
        EXPECT(gbc.l(),  0xdc);
        EXPECT(gbc.sp(), 0x8e39);
        EXPECT(gbc.pc(), 0x2596);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C0 0096
        gbc.setState(0xbcb6, 0xe85e, 0x59f0, 0xd05c, 0x40df, 0x4e5c, 0x0, 0x0);
        gbc.writeMem(0xbcb6, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0x40);
        EXPECT(gbc.e(),  0xdf);
        EXPECT(gbc.h(),  0x4e);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0xe85e);
        EXPECT(gbc.pc(), 0xbcb8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbcb6), 0xcb);
        EXPECT(gbc.readMem(0xbcb7), 0xc0);
        // CB C0 0097
        gbc.setState(0x227c, 0xfc2f, 0xb400, 0x2ca4, 0xcf4c, 0x8c58, 0x1, 0x0);
        gbc.writeMem(0x227c, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb4);
        EXPECT(gbc.b(),  0x2d);
        EXPECT(gbc.c(),  0xa4);
        EXPECT(gbc.d(),  0xcf);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0xfc2f);
        EXPECT(gbc.pc(), 0x227e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C0 0098
        gbc.setState(0x1c29, 0x7e57, 0x3710, 0xed0, 0xd1f3, 0x1670, 0x1, 0x0);
        gbc.writeMem(0x1c29, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0xf);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0x16);
        EXPECT(gbc.l(),  0x70);
        EXPECT(gbc.sp(), 0x7e57);
        EXPECT(gbc.pc(), 0x1c2b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C0 0099
        gbc.setState(0x6124, 0xa26a, 0xfb10, 0x4678, 0x49bd, 0x22e1, 0x1, 0x0);
        gbc.writeMem(0x6124, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xfb);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0xbd);
        EXPECT(gbc.h(),  0x22);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0xa26a);
        EXPECT(gbc.pc(), 0x6126);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C0 009A
        gbc.setState(0x6387, 0x2c05, 0xc670, 0x58d8, 0xc276, 0x9968, 0x1, 0x0);
        gbc.writeMem(0x6387, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xc6);
        EXPECT(gbc.b(),  0x59);
        EXPECT(gbc.c(),  0xd8);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0x76);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0x68);
        EXPECT(gbc.sp(), 0x2c05);
        EXPECT(gbc.pc(), 0x6389);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C0 009B
        gbc.setState(0x4a5c, 0x6fda, 0x8fe0, 0x6599, 0xe935, 0x807b, 0x1, 0x1);
        gbc.writeMem(0x4a5c, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x8f);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0x99);
        EXPECT(gbc.d(),  0xe9);
        EXPECT(gbc.e(),  0x35);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0x7b);
        EXPECT(gbc.sp(), 0x6fda);
        EXPECT(gbc.pc(), 0x4a5e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C0 009C
        gbc.setState(0x9f82, 0x6217, 0xe430, 0xa8c9, 0xdb66, 0x9f15, 0x1, 0x0);
        gbc.writeMem(0x9f82, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe4);
        EXPECT(gbc.b(),  0xa9);
        EXPECT(gbc.c(),  0xc9);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0x66);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0x6217);
        EXPECT(gbc.pc(), 0x9f84);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9f82), 0xcb);
        EXPECT(gbc.readMem(0x9f83), 0xc0);
        // CB C0 009E
        gbc.setState(0x9cdc, 0xea68, 0x5ed0, 0xb458, 0x563b, 0x7889, 0x1, 0x1);
        gbc.writeMem(0x9cdc, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x5e);
        EXPECT(gbc.b(),  0xb5);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0x56);
        EXPECT(gbc.e(),  0x3b);
        EXPECT(gbc.h(),  0x78);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0xea68);
        EXPECT(gbc.pc(), 0x9cde);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9cdc), 0xcb);
        EXPECT(gbc.readMem(0x9cdd), 0xc0);
        // CB C0 009F
        gbc.setState(0xdcc1, 0xfe3, 0x8320, 0xbe81, 0xab34, 0x67d0, 0x1, 0x0);
        gbc.writeMem(0xdcc1, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x83);
        EXPECT(gbc.b(),  0xbf);
        EXPECT(gbc.c(),  0x81);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0x34);
        EXPECT(gbc.h(),  0x67);
        EXPECT(gbc.l(),  0xd0);
        EXPECT(gbc.sp(), 0xfe3);
        EXPECT(gbc.pc(), 0xdcc3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdcc1), 0xcb);
        EXPECT(gbc.readMem(0xdcc2), 0xc0);
        // CB C0 00A0
        gbc.setState(0x7184, 0xa9e6, 0xa0d0, 0xdd93, 0x1c1, 0x4054, 0x0, 0x0);
        gbc.writeMem(0x7184, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0x93);
        EXPECT(gbc.d(),  0x1);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0x40);
        EXPECT(gbc.l(),  0x54);
        EXPECT(gbc.sp(), 0xa9e6);
        EXPECT(gbc.pc(), 0x7186);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C0 00A1
        gbc.setState(0xc359, 0x884a, 0xfec0, 0x68db, 0xc9d3, 0x7588, 0x1, 0x1);
        gbc.writeMem(0xc359, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0x69);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0xc9);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0x88);
        EXPECT(gbc.sp(), 0x884a);
        EXPECT(gbc.pc(), 0xc35b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc359), 0xcb);
        EXPECT(gbc.readMem(0xc35a), 0xc0);
        // CB C0 00A2
        gbc.setState(0x673a, 0x66e8, 0x33a0, 0x3f41, 0xce3e, 0x15c1, 0x0, 0x0);
        gbc.writeMem(0x673a, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0x3f);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0xce);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0x66e8);
        EXPECT(gbc.pc(), 0x673c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C0 00A3
        gbc.setState(0x1753, 0xfbdc, 0xeb40, 0x7d49, 0x70a8, 0x9df1, 0x1, 0x1);
        gbc.writeMem(0x1753, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0x7d);
        EXPECT(gbc.c(),  0x49);
        EXPECT(gbc.d(),  0x70);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0xf1);
        EXPECT(gbc.sp(), 0xfbdc);
        EXPECT(gbc.pc(), 0x1755);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C0 00A4
        gbc.setState(0x4973, 0x9615, 0x3e00, 0x380e, 0xc00c, 0x4dfe, 0x1, 0x1);
        gbc.writeMem(0x4973, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0x4d);
        EXPECT(gbc.l(),  0xfe);
        EXPECT(gbc.sp(), 0x9615);
        EXPECT(gbc.pc(), 0x4975);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C0 00A5
        gbc.setState(0xce90, 0xd582, 0xc2c0, 0x206f, 0xe0fd, 0x308d, 0x0, 0x0);
        gbc.writeMem(0xce90, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xc2);
        EXPECT(gbc.b(),  0x21);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0xfd);
        EXPECT(gbc.h(),  0x30);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0xd582);
        EXPECT(gbc.pc(), 0xce92);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xce90), 0xcb);
        EXPECT(gbc.readMem(0xce91), 0xc0);
        // CB C0 00A6
        gbc.setState(0xef26, 0x5ba8, 0x5f20, 0x4d86, 0x550f, 0xbcf4, 0x0, 0x1);
        gbc.writeMem(0xef26, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0xf4);
        EXPECT(gbc.sp(), 0x5ba8);
        EXPECT(gbc.pc(), 0xef28);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xef26), 0xcb);
        EXPECT(gbc.readMem(0xef27), 0xc0);
        // CB C0 00A7
        gbc.setState(0x95ca, 0xc0e7, 0x23a0, 0x501, 0x6b31, 0xa568, 0x0, 0x1);
        gbc.writeMem(0x95ca, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0x31);
        EXPECT(gbc.h(),  0xa5);
        EXPECT(gbc.l(),  0x68);
        EXPECT(gbc.sp(), 0xc0e7);
        EXPECT(gbc.pc(), 0x95cc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x95ca), 0xcb);
        EXPECT(gbc.readMem(0x95cb), 0xc0);
        // CB C0 00A8
        gbc.setState(0x86c9, 0x49f2, 0xdde0, 0x28ce, 0xc137, 0xa0a6, 0x1, 0x0);
        gbc.writeMem(0x86c9, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xdd);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0xa0);
        EXPECT(gbc.l(),  0xa6);
        EXPECT(gbc.sp(), 0x49f2);
        EXPECT(gbc.pc(), 0x86cb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x86c9), 0xcb);
        EXPECT(gbc.readMem(0x86ca), 0xc0);
        // CB C0 00A9
        gbc.setState(0x18df, 0x1956, 0xa5a0, 0x2155, 0xea7d, 0xaa44, 0x1, 0x1);
        gbc.writeMem(0x18df, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa5);
        EXPECT(gbc.b(),  0x21);
        EXPECT(gbc.c(),  0x55);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0x7d);
        EXPECT(gbc.h(),  0xaa);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0x1956);
        EXPECT(gbc.pc(), 0x18e1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C0 00AA
        gbc.setState(0x3476, 0x510b, 0x5c10, 0x219, 0xc3f5, 0x296f, 0x1, 0x1);
        gbc.writeMem(0x3476, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0x29);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0x510b);
        EXPECT(gbc.pc(), 0x3478);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C0 00AB
        gbc.setState(0x885f, 0x67a5, 0x86a0, 0x2274, 0x2e40, 0x4e71, 0x0, 0x0);
        gbc.writeMem(0x885f, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0x23);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0x2e);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0x4e);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0x67a5);
        EXPECT(gbc.pc(), 0x8861);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x885f), 0xcb);
        EXPECT(gbc.readMem(0x8860), 0xc0);
        // CB C0 00AC
        gbc.setState(0x2219, 0xf1a5, 0x6420, 0x3747, 0xb3b7, 0x122f, 0x1, 0x0);
        gbc.writeMem(0x2219, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0x47);
        EXPECT(gbc.d(),  0xb3);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0xf1a5);
        EXPECT(gbc.pc(), 0x221b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C0 00AD
        gbc.setState(0xcc3b, 0x9abc, 0xfe70, 0xb997, 0x362d, 0x774, 0x1, 0x0);
        gbc.writeMem(0xcc3b, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0xb9);
        EXPECT(gbc.c(),  0x97);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0x9abc);
        EXPECT(gbc.pc(), 0xcc3d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcc3b), 0xcb);
        EXPECT(gbc.readMem(0xcc3c), 0xc0);
        // CB C0 00AE
        gbc.setState(0xe3c7, 0x1465, 0xdd30, 0x5b5e, 0x9701, 0x990b, 0x0, 0x1);
        gbc.writeMem(0xe3c7, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xdd);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0x1465);
        EXPECT(gbc.pc(), 0xe3c9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe3c7), 0xcb);
        EXPECT(gbc.readMem(0xe3c8), 0xc0);
        // CB C0 00AF
        gbc.setState(0x5308, 0x75a1, 0x2460, 0xc936, 0x9632, 0x4a89, 0x1, 0x1);
        gbc.writeMem(0x5308, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x24);
        EXPECT(gbc.b(),  0xc9);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0x4a);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0x75a1);
        EXPECT(gbc.pc(), 0x530a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C0 00B0
        gbc.setState(0x88d3, 0xb6a6, 0xace0, 0xafc9, 0x262a, 0xe0cf, 0x1, 0x1);
        gbc.writeMem(0x88d3, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xac);
        EXPECT(gbc.b(),  0xaf);
        EXPECT(gbc.c(),  0xc9);
        EXPECT(gbc.d(),  0x26);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0xcf);
        EXPECT(gbc.sp(), 0xb6a6);
        EXPECT(gbc.pc(), 0x88d5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x88d3), 0xcb);
        EXPECT(gbc.readMem(0x88d4), 0xc0);
        // CB C0 00B1
        gbc.setState(0xb9a9, 0xbb0f, 0x6c60, 0x5af9, 0x381c, 0xe26a, 0x0, 0x0);
        gbc.writeMem(0xb9a9, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0xf9);
        EXPECT(gbc.d(),  0x38);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0xe2);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0xbb0f);
        EXPECT(gbc.pc(), 0xb9ab);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb9a9), 0xcb);
        EXPECT(gbc.readMem(0xb9aa), 0xc0);
        // CB C0 00B3
        gbc.setState(0x8c4, 0xbfcd, 0x2a60, 0xb09b, 0x2a39, 0x9c18, 0x1, 0x1);
        gbc.writeMem(0x8c4, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0x9b);
        EXPECT(gbc.d(),  0x2a);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0xbfcd);
        EXPECT(gbc.pc(), 0x8c6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C0 00B4
        gbc.setState(0xad9b, 0x9c07, 0xdc0, 0x8e70, 0x807b, 0x82b3, 0x1, 0x0);
        gbc.writeMem(0xad9b, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd);
        EXPECT(gbc.b(),  0x8f);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0xb3);
        EXPECT(gbc.sp(), 0x9c07);
        EXPECT(gbc.pc(), 0xad9d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xad9b), 0xcb);
        EXPECT(gbc.readMem(0xad9c), 0xc0);
        // CB C0 00B5
        gbc.setState(0x5284, 0x289d, 0x6d50, 0x7efb, 0x6a00, 0x7bd, 0x0, 0x1);
        gbc.writeMem(0x5284, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x6d);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0x6a);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0xbd);
        EXPECT(gbc.sp(), 0x289d);
        EXPECT(gbc.pc(), 0x5286);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C0 00B6
        gbc.setState(0xe72f, 0x29c5, 0xa540, 0xec6c, 0x9b31, 0x83a7, 0x0, 0x0);
        gbc.writeMem(0xe72f, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa5);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0x31);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0x29c5);
        EXPECT(gbc.pc(), 0xe731);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe72f), 0xcb);
        EXPECT(gbc.readMem(0xe730), 0xc0);
        // CB C0 00B7
        gbc.setState(0xc4aa, 0x6c7e, 0xd5f0, 0xe8e3, 0x582e, 0x5cb2, 0x0, 0x1);
        gbc.writeMem(0xc4aa, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd5);
        EXPECT(gbc.b(),  0xe9);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0x5c);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0x6c7e);
        EXPECT(gbc.pc(), 0xc4ac);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc4aa), 0xcb);
        EXPECT(gbc.readMem(0xc4ab), 0xc0);
        // CB C0 00B8
        gbc.setState(0x242c, 0xae9b, 0xe8f0, 0xe5a2, 0xf9f, 0xce06, 0x0, 0x0);
        gbc.writeMem(0x242c, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0xe5);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0x9f);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0xae9b);
        EXPECT(gbc.pc(), 0x242e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C0 00B9
        gbc.setState(0x169e, 0x4863, 0x2c90, 0x770c, 0x5f05, 0xbb13, 0x1, 0x0);
        gbc.writeMem(0x169e, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x2c);
        EXPECT(gbc.b(),  0x77);
        EXPECT(gbc.c(),  0xc);
        EXPECT(gbc.d(),  0x5f);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0x4863);
        EXPECT(gbc.pc(), 0x16a0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C0 00BA
        gbc.setState(0x8ca, 0x6cd3, 0x67c0, 0x2396, 0xc622, 0x323d, 0x1, 0x0);
        gbc.writeMem(0x8ca, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x67);
        EXPECT(gbc.b(),  0x23);
        EXPECT(gbc.c(),  0x96);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0x6cd3);
        EXPECT(gbc.pc(), 0x8cc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C0 00BB
        gbc.setState(0x1047, 0xcd5c, 0xb4e0, 0xf7b6, 0x7d8e, 0xbe7d, 0x1, 0x1);
        gbc.writeMem(0x1047, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb4);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0xb6);
        EXPECT(gbc.d(),  0x7d);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0xcd5c);
        EXPECT(gbc.pc(), 0x1049);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C0 00BC
        gbc.setState(0x9c54, 0x44ec, 0x2400, 0x33d2, 0xb856, 0x1839, 0x1, 0x0);
        gbc.writeMem(0x9c54, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x24);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0xb8);
        EXPECT(gbc.e(),  0x56);
        EXPECT(gbc.h(),  0x18);
        EXPECT(gbc.l(),  0x39);
        EXPECT(gbc.sp(), 0x44ec);
        EXPECT(gbc.pc(), 0x9c56);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9c54), 0xcb);
        EXPECT(gbc.readMem(0x9c55), 0xc0);
        // CB C0 00BD
        gbc.setState(0xae34, 0xcde0, 0x3030, 0x51a4, 0x4d66, 0x8f01, 0x0, 0x0);
        gbc.writeMem(0xae34, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0xa4);
        EXPECT(gbc.d(),  0x4d);
        EXPECT(gbc.e(),  0x66);
        EXPECT(gbc.h(),  0x8f);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0xcde0);
        EXPECT(gbc.pc(), 0xae36);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xae34), 0xcb);
        EXPECT(gbc.readMem(0xae35), 0xc0);
        // CB C0 00BE
        gbc.setState(0x3f99, 0x79e9, 0xe870, 0x7728, 0x6f44, 0xe9fd, 0x0, 0x1);
        gbc.writeMem(0x3f99, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0x77);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0x6f);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0x79e9);
        EXPECT(gbc.pc(), 0x3f9b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C0 00BF
        gbc.setState(0x43e3, 0xfea4, 0xe4f0, 0xfba, 0x55ae, 0x69cd, 0x0, 0x0);
        gbc.writeMem(0x43e3, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe4);
        EXPECT(gbc.b(),  0xf);
        EXPECT(gbc.c(),  0xba);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0xae);
        EXPECT(gbc.h(),  0x69);
        EXPECT(gbc.l(),  0xcd);
        EXPECT(gbc.sp(), 0xfea4);
        EXPECT(gbc.pc(), 0x43e5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C0 00C0
        gbc.setState(0x19da, 0x2599, 0xcf70, 0xd511, 0x3a18, 0xf0f2, 0x0, 0x0);
        gbc.writeMem(0x19da, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xcf);
        EXPECT(gbc.b(),  0xd5);
        EXPECT(gbc.c(),  0x11);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0x18);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0xf2);
        EXPECT(gbc.sp(), 0x2599);
        EXPECT(gbc.pc(), 0x19dc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C0 00C1
        gbc.setState(0x7dc2, 0xdaab, 0x2230, 0x489f, 0x5114, 0x1107, 0x1, 0x1);
        gbc.writeMem(0x7dc2, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0x49);
        EXPECT(gbc.c(),  0x9f);
        EXPECT(gbc.d(),  0x51);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0x11);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0xdaab);
        EXPECT(gbc.pc(), 0x7dc4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C0 00C3
        gbc.setState(0x58f4, 0xaba, 0xfe20, 0xf37c, 0xf10f, 0x6fa5, 0x1, 0x1);
        gbc.writeMem(0x58f4, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0xf3);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0x6f);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0xaba);
        EXPECT(gbc.pc(), 0x58f6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C0 00C4
        gbc.setState(0x21a5, 0xb1a7, 0xa60, 0x5e7d, 0x1f66, 0xed1c, 0x1, 0x0);
        gbc.writeMem(0x21a5, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0x1f);
        EXPECT(gbc.e(),  0x66);
        EXPECT(gbc.h(),  0xed);
        EXPECT(gbc.l(),  0x1c);
        EXPECT(gbc.sp(), 0xb1a7);
        EXPECT(gbc.pc(), 0x21a7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C0 00C5
        gbc.setState(0xc82e, 0x532b, 0x3aa0, 0x6a50, 0xfdd7, 0xa6f5, 0x0, 0x0);
        gbc.writeMem(0xc82e, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0x6b);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0xfd);
        EXPECT(gbc.e(),  0xd7);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0x532b);
        EXPECT(gbc.pc(), 0xc830);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc82e), 0xcb);
        EXPECT(gbc.readMem(0xc82f), 0xc0);
        // CB C0 00C6
        gbc.setState(0xe863, 0xa96d, 0x8620, 0xd5fa, 0x736c, 0xfdc2, 0x0, 0x0);
        gbc.writeMem(0xe863, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0xd5);
        EXPECT(gbc.c(),  0xfa);
        EXPECT(gbc.d(),  0x73);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0xfd);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0xa96d);
        EXPECT(gbc.pc(), 0xe865);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe863), 0xcb);
        EXPECT(gbc.readMem(0xe864), 0xc0);
        // CB C0 00C7
        gbc.setState(0xd8ec, 0xfb3b, 0xd30, 0xf0e, 0x8c05, 0x189, 0x1, 0x1);
        gbc.writeMem(0xd8ec, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd);
        EXPECT(gbc.b(),  0xf);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0xfb3b);
        EXPECT(gbc.pc(), 0xd8ee);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd8ec), 0xcb);
        EXPECT(gbc.readMem(0xd8ed), 0xc0);
        // CB C0 00C8
        gbc.setState(0xde67, 0x3bde, 0xb1e0, 0x4ef3, 0x3461, 0xcb94, 0x1, 0x0);
        gbc.writeMem(0xde67, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0x4f);
        EXPECT(gbc.c(),  0xf3);
        EXPECT(gbc.d(),  0x34);
        EXPECT(gbc.e(),  0x61);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0x3bde);
        EXPECT(gbc.pc(), 0xde69);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xde67), 0xcb);
        EXPECT(gbc.readMem(0xde68), 0xc0);
        // CB C0 00C9
        gbc.setState(0xd858, 0xb74a, 0x5530, 0xfccf, 0xd595, 0xd0da, 0x0, 0x1);
        gbc.writeMem(0xd858, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0xcf);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0x95);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0xda);
        EXPECT(gbc.sp(), 0xb74a);
        EXPECT(gbc.pc(), 0xd85a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd858), 0xcb);
        EXPECT(gbc.readMem(0xd859), 0xc0);
        // CB C0 00CA
        gbc.setState(0xe902, 0xa4ef, 0x5a00, 0x78e1, 0x2866, 0xe00a, 0x0, 0x1);
        gbc.writeMem(0xe902, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0xe1);
        EXPECT(gbc.d(),  0x28);
        EXPECT(gbc.e(),  0x66);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0xa);
        EXPECT(gbc.sp(), 0xa4ef);
        EXPECT(gbc.pc(), 0xe904);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe902), 0xcb);
        EXPECT(gbc.readMem(0xe903), 0xc0);
        // CB C0 00CB
        gbc.setState(0x6995, 0x369f, 0x3480, 0x5bc2, 0x82ce, 0x544, 0x1, 0x1);
        gbc.writeMem(0x6995, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x34);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0xce);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0x369f);
        EXPECT(gbc.pc(), 0x6997);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C0 00CC
        gbc.setState(0x3353, 0x1842, 0xe250, 0xa9ba, 0x8990, 0x6f, 0x1, 0x1);
        gbc.writeMem(0x3353, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0xa9);
        EXPECT(gbc.c(),  0xba);
        EXPECT(gbc.d(),  0x89);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0x1842);
        EXPECT(gbc.pc(), 0x3355);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C0 00CD
        gbc.setState(0x4680, 0x7cea, 0xb3a0, 0xb20e, 0x9f62, 0x2a5c, 0x0, 0x0);
        gbc.writeMem(0x4680, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb3);
        EXPECT(gbc.b(),  0xb3);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0x2a);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0x7cea);
        EXPECT(gbc.pc(), 0x4682);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C0 00CE
        gbc.setState(0xb253, 0x3ef5, 0xeb70, 0x4304, 0xfb82, 0x6a1d, 0x1, 0x0);
        gbc.writeMem(0xb253, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0x43);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0xfb);
        EXPECT(gbc.e(),  0x82);
        EXPECT(gbc.h(),  0x6a);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0x3ef5);
        EXPECT(gbc.pc(), 0xb255);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb253), 0xcb);
        EXPECT(gbc.readMem(0xb254), 0xc0);
        // CB C0 00CF
        gbc.setState(0xf27, 0xb89d, 0x3b00, 0xd596, 0x7059, 0x47d, 0x0, 0x0);
        gbc.writeMem(0xf27, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0xd5);
        EXPECT(gbc.c(),  0x96);
        EXPECT(gbc.d(),  0x70);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0xb89d);
        EXPECT(gbc.pc(), 0xf29);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C0 00D0
        gbc.setState(0x6bd9, 0xf446, 0xc1c0, 0xf64c, 0xbb9e, 0x49fb, 0x1, 0x1);
        gbc.writeMem(0x6bd9, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xc1);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0x49);
        EXPECT(gbc.l(),  0xfb);
        EXPECT(gbc.sp(), 0xf446);
        EXPECT(gbc.pc(), 0x6bdb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C0 00D1
        gbc.setState(0xdd00, 0x1ee3, 0x2270, 0x848c, 0xa5a0, 0x8e2d, 0x0, 0x1);
        gbc.writeMem(0xdd00, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0xa5);
        EXPECT(gbc.e(),  0xa0);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0x1ee3);
        EXPECT(gbc.pc(), 0xdd02);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdd00), 0xcb);
        EXPECT(gbc.readMem(0xdd01), 0xc0);
        // CB C0 00D2
        gbc.setState(0x483, 0xb2ba, 0xa2a0, 0x5b1b, 0xd82e, 0xa1b8, 0x0, 0x0);
        gbc.writeMem(0x483, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0xd8);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0xa1);
        EXPECT(gbc.l(),  0xb8);
        EXPECT(gbc.sp(), 0xb2ba);
        EXPECT(gbc.pc(), 0x485);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C0 00D3
        gbc.setState(0xb8ee, 0x4059, 0xc470, 0xba9b, 0x6e05, 0x439a, 0x0, 0x0);
        gbc.writeMem(0xb8ee, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xc4);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0x9b);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0x4059);
        EXPECT(gbc.pc(), 0xb8f0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb8ee), 0xcb);
        EXPECT(gbc.readMem(0xb8ef), 0xc0);
        // CB C0 00D4
        gbc.setState(0x7962, 0x6d0a, 0xd5c0, 0x711e, 0x77f2, 0x7c51, 0x0, 0x0);
        gbc.writeMem(0x7962, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd5);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0x7c);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0x6d0a);
        EXPECT(gbc.pc(), 0x7964);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C0 00D5
        gbc.setState(0x9729, 0x7e84, 0x15d0, 0x26eb, 0x1482, 0x9371, 0x0, 0x1);
        gbc.writeMem(0x9729, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x15);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0x14);
        EXPECT(gbc.e(),  0x82);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0x7e84);
        EXPECT(gbc.pc(), 0x972b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9729), 0xcb);
        EXPECT(gbc.readMem(0x972a), 0xc0);
        // CB C0 00D6
        gbc.setState(0x5618, 0x65a7, 0xb5d0, 0x972e, 0xd020, 0x6725, 0x0, 0x0);
        gbc.writeMem(0x5618, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb5);
        EXPECT(gbc.b(),  0x97);
        EXPECT(gbc.c(),  0x2e);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0x20);
        EXPECT(gbc.h(),  0x67);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0x65a7);
        EXPECT(gbc.pc(), 0x561a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C0 00D7
        gbc.setState(0x2286, 0x5015, 0x3b30, 0xaf2c, 0x1921, 0xddbe, 0x0, 0x0);
        gbc.writeMem(0x2286, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0xaf);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0x19);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0xbe);
        EXPECT(gbc.sp(), 0x5015);
        EXPECT(gbc.pc(), 0x2288);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C0 00D8
        gbc.setState(0x21ed, 0xd16e, 0x6e10, 0xcbe7, 0x1f50, 0x8e52, 0x1, 0x0);
        gbc.writeMem(0x21ed, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0xcb);
        EXPECT(gbc.c(),  0xe7);
        EXPECT(gbc.d(),  0x1f);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0xd16e);
        EXPECT(gbc.pc(), 0x21ef);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C0 00D9
        gbc.setState(0x1149, 0x5165, 0xe830, 0x3f5e, 0xc5a8, 0xc15a, 0x0, 0x1);
        gbc.writeMem(0x1149, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0x3f);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0xc5);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0xc1);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0x5165);
        EXPECT(gbc.pc(), 0x114b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C0 00DA
        gbc.setState(0x1966, 0xd18b, 0x220, 0xe556, 0x4da5, 0x3571, 0x1, 0x1);
        gbc.writeMem(0x1966, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0xe5);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0x4d);
        EXPECT(gbc.e(),  0xa5);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0xd18b);
        EXPECT(gbc.pc(), 0x1968);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C0 00DB
        gbc.setState(0x679a, 0x8f7c, 0x5730, 0xdece, 0xceaf, 0xbc6c, 0x0, 0x1);
        gbc.writeMem(0x679a, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x57);
        EXPECT(gbc.b(),  0xdf);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0xce);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0x8f7c);
        EXPECT(gbc.pc(), 0x679c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C0 00DC
        gbc.setState(0x16a4, 0xd56b, 0xec00, 0xf6f3, 0x5e89, 0xf23e, 0x1, 0x1);
        gbc.writeMem(0x16a4, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0xf3);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0xd56b);
        EXPECT(gbc.pc(), 0x16a6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C0 00DD
        gbc.setState(0x5392, 0xebfa, 0xe5f0, 0x9fc, 0xef44, 0xbcb9, 0x1, 0x1);
        gbc.writeMem(0x5392, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe5);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0xebfa);
        EXPECT(gbc.pc(), 0x5394);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C0 00DE
        gbc.setState(0xc04b, 0xb009, 0xfe80, 0x53a8, 0xb6be, 0x5f40, 0x0, 0x1);
        gbc.writeMem(0xc04b, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0xa8);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0xb009);
        EXPECT(gbc.pc(), 0xc04d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc04b), 0xcb);
        EXPECT(gbc.readMem(0xc04c), 0xc0);
        // CB C0 00DF
        gbc.setState(0x4a35, 0x7c53, 0xf7f0, 0xb8ac, 0x95ca, 0xac2f, 0x0, 0x1);
        gbc.writeMem(0x4a35, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0xb9);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0x95);
        EXPECT(gbc.e(),  0xca);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0x7c53);
        EXPECT(gbc.pc(), 0x4a37);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C0 00E0
        gbc.setState(0xbecc, 0xe16f, 0x5830, 0x79b, 0xfe63, 0x509b, 0x0, 0x1);
        gbc.writeMem(0xbecc, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x58);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0x9b);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0x63);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0x9b);
        EXPECT(gbc.sp(), 0xe16f);
        EXPECT(gbc.pc(), 0xbece);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbecc), 0xcb);
        EXPECT(gbc.readMem(0xbecd), 0xc0);
        // CB C0 00E1
        gbc.setState(0x7c70, 0xfbe7, 0x75e0, 0x7087, 0xd6ee, 0x7b1d, 0x0, 0x0);
        gbc.writeMem(0x7c70, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0x87);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0x7b);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0xfbe7);
        EXPECT(gbc.pc(), 0x7c72);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C0 00E2
        gbc.setState(0x72d2, 0x6aa3, 0x61f0, 0xceb3, 0x5cf8, 0xb032, 0x1, 0x1);
        gbc.writeMem(0x72d2, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0xcf);
        EXPECT(gbc.c(),  0xb3);
        EXPECT(gbc.d(),  0x5c);
        EXPECT(gbc.e(),  0xf8);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0x6aa3);
        EXPECT(gbc.pc(), 0x72d4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C0 00E3
        gbc.setState(0x9bd0, 0xd0ce, 0x2680, 0xdba3, 0x190e, 0x58e0, 0x0, 0x1);
        gbc.writeMem(0x9bd0, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0xdb);
        EXPECT(gbc.c(),  0xa3);
        EXPECT(gbc.d(),  0x19);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0x58);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0xd0ce);
        EXPECT(gbc.pc(), 0x9bd2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9bd0), 0xcb);
        EXPECT(gbc.readMem(0x9bd1), 0xc0);
        // CB C0 00E4
        gbc.setState(0x12df, 0xfbd2, 0x6dc0, 0xdd3c, 0x6cb5, 0xd94e, 0x1, 0x0);
        gbc.writeMem(0x12df, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x6d);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0x6c);
        EXPECT(gbc.e(),  0xb5);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0x4e);
        EXPECT(gbc.sp(), 0xfbd2);
        EXPECT(gbc.pc(), 0x12e1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C0 00E5
        gbc.setState(0x9919, 0xffc8, 0x88b0, 0x7f3b, 0x21fe, 0x2de6, 0x1, 0x0);
        gbc.writeMem(0x9919, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0x3b);
        EXPECT(gbc.d(),  0x21);
        EXPECT(gbc.e(),  0xfe);
        EXPECT(gbc.h(),  0x2d);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0xffc8);
        EXPECT(gbc.pc(), 0x991b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9919), 0xcb);
        EXPECT(gbc.readMem(0x991a), 0xc0);
        // CB C0 00E6
        gbc.setState(0x1aef, 0xd851, 0x62e0, 0xbd3d, 0xfdb3, 0x42a4, 0x1, 0x1);
        gbc.writeMem(0x1aef, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0xbd);
        EXPECT(gbc.c(),  0x3d);
        EXPECT(gbc.d(),  0xfd);
        EXPECT(gbc.e(),  0xb3);
        EXPECT(gbc.h(),  0x42);
        EXPECT(gbc.l(),  0xa4);
        EXPECT(gbc.sp(), 0xd851);
        EXPECT(gbc.pc(), 0x1af1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C0 00E7
        gbc.setState(0x1e86, 0x2624, 0x8320, 0xf277, 0x6f0a, 0x3481, 0x0, 0x1);
        gbc.writeMem(0x1e86, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x83);
        EXPECT(gbc.b(),  0xf3);
        EXPECT(gbc.c(),  0x77);
        EXPECT(gbc.d(),  0x6f);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0x34);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0x2624);
        EXPECT(gbc.pc(), 0x1e88);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C0 00E8
        gbc.setState(0x1337, 0xfed3, 0xae30, 0x4ef5, 0x67b5, 0x371e, 0x0, 0x0);
        gbc.writeMem(0x1337, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xae);
        EXPECT(gbc.b(),  0x4f);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0xb5);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0xfed3);
        EXPECT(gbc.pc(), 0x1339);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C0 00E9
        gbc.setState(0xa57f, 0xc775, 0x1a10, 0x90b2, 0x37c8, 0xcf8f, 0x0, 0x1);
        gbc.writeMem(0xa57f, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x1a);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0x37);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0xc775);
        EXPECT(gbc.pc(), 0xa581);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa57f), 0xcb);
        EXPECT(gbc.readMem(0xa580), 0xc0);
        // CB C0 00EA
        gbc.setState(0xc99a, 0xf88b, 0xa5a0, 0x4ed4, 0xb60c, 0x8118, 0x1, 0x1);
        gbc.writeMem(0xc99a, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa5);
        EXPECT(gbc.b(),  0x4f);
        EXPECT(gbc.c(),  0xd4);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0xf88b);
        EXPECT(gbc.pc(), 0xc99c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc99a), 0xcb);
        EXPECT(gbc.readMem(0xc99b), 0xc0);
        // CB C0 00EB
        gbc.setState(0xb8d2, 0x8330, 0xdf00, 0x6b1c, 0x44f4, 0x95f4, 0x1, 0x1);
        gbc.writeMem(0xb8d2, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xdf);
        EXPECT(gbc.b(),  0x6b);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0xf4);
        EXPECT(gbc.sp(), 0x8330);
        EXPECT(gbc.pc(), 0xb8d4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb8d2), 0xcb);
        EXPECT(gbc.readMem(0xb8d3), 0xc0);
        // CB C0 00EC
        gbc.setState(0x6e0d, 0x7f00, 0x1af0, 0xbc61, 0x1b56, 0x7210, 0x1, 0x0);
        gbc.writeMem(0x6e0d, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x1a);
        EXPECT(gbc.b(),  0xbd);
        EXPECT(gbc.c(),  0x61);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0x56);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0x7f00);
        EXPECT(gbc.pc(), 0x6e0f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C0 00ED
        gbc.setState(0x5a60, 0xe729, 0xf520, 0xca3d, 0xaf1d, 0x5cf6, 0x0, 0x0);
        gbc.writeMem(0x5a60, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf5);
        EXPECT(gbc.b(),  0xcb);
        EXPECT(gbc.c(),  0x3d);
        EXPECT(gbc.d(),  0xaf);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0x5c);
        EXPECT(gbc.l(),  0xf6);
        EXPECT(gbc.sp(), 0xe729);
        EXPECT(gbc.pc(), 0x5a62);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C0 00EE
        gbc.setState(0x2efa, 0x1689, 0x50e0, 0xbf00, 0xf058, 0x36a8, 0x1, 0x0);
        gbc.writeMem(0x2efa, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0xbf);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0x36);
        EXPECT(gbc.l(),  0xa8);
        EXPECT(gbc.sp(), 0x1689);
        EXPECT(gbc.pc(), 0x2efc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C0 00EF
        gbc.setState(0xe4ed, 0x6d32, 0xfa30, 0x5b02, 0xb023, 0x82ef, 0x1, 0x1);
        gbc.writeMem(0xe4ed, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xfa);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0xef);
        EXPECT(gbc.sp(), 0x6d32);
        EXPECT(gbc.pc(), 0xe4ef);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe4ed), 0xcb);
        EXPECT(gbc.readMem(0xe4ee), 0xc0);
        // CB C0 00F0
        gbc.setState(0x82df, 0x6b5c, 0x8f90, 0xafe5, 0x7a92, 0x8927, 0x0, 0x1);
        gbc.writeMem(0x82df, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x8f);
        EXPECT(gbc.b(),  0xaf);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0x27);
        EXPECT(gbc.sp(), 0x6b5c);
        EXPECT(gbc.pc(), 0x82e1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x82df), 0xcb);
        EXPECT(gbc.readMem(0x82e0), 0xc0);
        // CB C0 00F1
        gbc.setState(0xcb3e, 0x7a1a, 0xbfd0, 0x5759, 0xe5c4, 0xa113, 0x0, 0x1);
        gbc.writeMem(0xcb3e, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0xa1);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0x7a1a);
        EXPECT(gbc.pc(), 0xcb40);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcb3e), 0xcb);
        EXPECT(gbc.readMem(0xcb3f), 0xc0);
        // CB C0 00F2
        gbc.setState(0x39d1, 0x63ca, 0x17a0, 0x3706, 0x8693, 0xeff9, 0x0, 0x0);
        gbc.writeMem(0x39d1, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x17);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0x63ca);
        EXPECT(gbc.pc(), 0x39d3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C0 00F3
        gbc.setState(0x6c6e, 0xe5d8, 0x4110, 0x174c, 0x3227, 0xfa0, 0x1, 0x1);
        gbc.writeMem(0x6c6e, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0x17);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0xf);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0xe5d8);
        EXPECT(gbc.pc(), 0x6c70);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C0 00F4
        gbc.setState(0xc68b, 0x461d, 0xd410, 0x4f4d, 0xc41f, 0xfcd, 0x1, 0x0);
        gbc.writeMem(0xc68b, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0x4f);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0xc4);
        EXPECT(gbc.e(),  0x1f);
        EXPECT(gbc.h(),  0xf);
        EXPECT(gbc.l(),  0xcd);
        EXPECT(gbc.sp(), 0x461d);
        EXPECT(gbc.pc(), 0xc68d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc68b), 0xcb);
        EXPECT(gbc.readMem(0xc68c), 0xc0);
        // CB C0 00F6
        gbc.setState(0xb531, 0x84fc, 0x2430, 0x7c06, 0x68f1, 0x952b, 0x1, 0x0);
        gbc.writeMem(0xb531, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x24);
        EXPECT(gbc.b(),  0x7d);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0x68);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0x2b);
        EXPECT(gbc.sp(), 0x84fc);
        EXPECT(gbc.pc(), 0xb533);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb531), 0xcb);
        EXPECT(gbc.readMem(0xb532), 0xc0);
        // CB C0 00F7
        gbc.setState(0x5137, 0x5f67, 0x2520, 0xbf58, 0x2b3d, 0x6bf2, 0x1, 0x0);
        gbc.writeMem(0x5137, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x25);
        EXPECT(gbc.b(),  0xbf);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0x6b);
        EXPECT(gbc.l(),  0xf2);
        EXPECT(gbc.sp(), 0x5f67);
        EXPECT(gbc.pc(), 0x5139);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C0 00F9
        gbc.setState(0xe3e9, 0x77a1, 0xfce0, 0x6ab9, 0xd420, 0xbd70, 0x0, 0x1);
        gbc.writeMem(0xe3e9, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0x6b);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0x20);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0x70);
        EXPECT(gbc.sp(), 0x77a1);
        EXPECT(gbc.pc(), 0xe3eb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe3e9), 0xcb);
        EXPECT(gbc.readMem(0xe3ea), 0xc0);
        // CB C0 00FA
        gbc.setState(0x8bc2, 0x14f9, 0xc0c0, 0x5627, 0xacff, 0x7669, 0x0, 0x0);
        gbc.writeMem(0x8bc2, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0xff);
        EXPECT(gbc.h(),  0x76);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0x14f9);
        EXPECT(gbc.pc(), 0x8bc4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8bc2), 0xcb);
        EXPECT(gbc.readMem(0x8bc3), 0xc0);
        // CB C0 00FB
        gbc.setState(0x3ed, 0xccce, 0x3710, 0x97b9, 0x4a62, 0x2b34, 0x1, 0x0);
        gbc.writeMem(0x3ed, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0x97);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0x4a);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0x2b);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0xccce);
        EXPECT(gbc.pc(), 0x3ef);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C0 00FC
        gbc.setState(0x9b7, 0x96ea, 0x8880, 0x34b2, 0x7741, 0xe9c6, 0x1, 0x1);
        gbc.writeMem(0x9b7, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0x41);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0x96ea);
        EXPECT(gbc.pc(), 0x9b9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C0 00FD
        gbc.setState(0xe586, 0x15f7, 0xcac0, 0xfcbd, 0xe998, 0x60b1, 0x0, 0x1);
        gbc.writeMem(0xe586, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xca);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0xbd);
        EXPECT(gbc.d(),  0xe9);
        EXPECT(gbc.e(),  0x98);
        EXPECT(gbc.h(),  0x60);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0x15f7);
        EXPECT(gbc.pc(), 0xe588);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe586), 0xcb);
        EXPECT(gbc.readMem(0xe587), 0xc0);
        // CB C0 00FE
        gbc.setState(0xbbf, 0xaa8c, 0xb0c0, 0x4aac, 0x470, 0xe888, 0x1, 0x0);
        gbc.writeMem(0xbbf, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0x88);
        EXPECT(gbc.sp(), 0xaa8c);
        EXPECT(gbc.pc(), 0xbc1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C0 00FF
        gbc.setState(0x3b17, 0x505e, 0xfa00, 0xc051, 0x851b, 0x2a88, 0x0, 0x0);
        gbc.writeMem(0x3b17, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xfa);
        EXPECT(gbc.b(),  0xc1);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0x1b);
        EXPECT(gbc.h(),  0x2a);
        EXPECT(gbc.l(),  0x88);
        EXPECT(gbc.sp(), 0x505e);
        EXPECT(gbc.pc(), 0x3b19);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C0 0100
        gbc.setState(0x74cc, 0xc8a, 0x2280, 0xf41f, 0x91b, 0x5057, 0x0, 0x1);
        gbc.writeMem(0x74cc, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0x1f);
        EXPECT(gbc.d(),  0x9);
        EXPECT(gbc.e(),  0x1b);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0x57);
        EXPECT(gbc.sp(), 0xc8a);
        EXPECT(gbc.pc(), 0x74ce);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C0 0101
        gbc.setState(0xc578, 0xa2d1, 0x2fb0, 0x42be, 0x4b0b, 0x9ca8, 0x0, 0x1);
        gbc.writeMem(0xc578, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x2f);
        EXPECT(gbc.b(),  0x43);
        EXPECT(gbc.c(),  0xbe);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0xb);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0xa8);
        EXPECT(gbc.sp(), 0xa2d1);
        EXPECT(gbc.pc(), 0xc57a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc578), 0xcb);
        EXPECT(gbc.readMem(0xc579), 0xc0);
        // CB C0 0102
        gbc.setState(0x87f5, 0xee97, 0xa0e0, 0xe3d0, 0x33e7, 0x6c92, 0x1, 0x1);
        gbc.writeMem(0x87f5, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0x33);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0x6c);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0xee97);
        EXPECT(gbc.pc(), 0x87f7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x87f5), 0xcb);
        EXPECT(gbc.readMem(0x87f6), 0xc0);
        // CB C0 0103
        gbc.setState(0xecc, 0x316e, 0x9c50, 0xd2b1, 0xcbb, 0x27f0, 0x0, 0x0);
        gbc.writeMem(0xecc, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x9c);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0xb1);
        EXPECT(gbc.d(),  0xc);
        EXPECT(gbc.e(),  0xbb);
        EXPECT(gbc.h(),  0x27);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0x316e);
        EXPECT(gbc.pc(), 0xece);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C0 0104
        gbc.setState(0x5577, 0xc4ab, 0x7230, 0x9f57, 0x67fb, 0x5e62, 0x1, 0x1);
        gbc.writeMem(0x5577, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0x9f);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0xfb);
        EXPECT(gbc.h(),  0x5e);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0xc4ab);
        EXPECT(gbc.pc(), 0x5579);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C0 0105
        gbc.setState(0xbc10, 0xc193, 0x98e0, 0xd01b, 0xf06d, 0x9dcc, 0x0, 0x0);
        gbc.writeMem(0xbc10, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x98);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0x6d);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0xcc);
        EXPECT(gbc.sp(), 0xc193);
        EXPECT(gbc.pc(), 0xbc12);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbc10), 0xcb);
        EXPECT(gbc.readMem(0xbc11), 0xc0);
        // CB C0 0106
        gbc.setState(0x6aec, 0xf3c5, 0x7560, 0x48ee, 0xf271, 0xd7f4, 0x0, 0x1);
        gbc.writeMem(0x6aec, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0x49);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0xf2);
        EXPECT(gbc.e(),  0x71);
        EXPECT(gbc.h(),  0xd7);
        EXPECT(gbc.l(),  0xf4);
        EXPECT(gbc.sp(), 0xf3c5);
        EXPECT(gbc.pc(), 0x6aee);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C0 0107
        gbc.setState(0x7131, 0x8627, 0x37d0, 0x943e, 0xda0c, 0xb9bb, 0x0, 0x0);
        gbc.writeMem(0x7131, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0x95);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0xbb);
        EXPECT(gbc.sp(), 0x8627);
        EXPECT(gbc.pc(), 0x7133);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C0 0108
        gbc.setState(0xc7b4, 0x3211, 0x26c0, 0xc33, 0x10fa, 0xed31, 0x0, 0x1);
        gbc.writeMem(0xc7b4, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0xd);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0x10);
        EXPECT(gbc.e(),  0xfa);
        EXPECT(gbc.h(),  0xed);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0x3211);
        EXPECT(gbc.pc(), 0xc7b6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc7b4), 0xcb);
        EXPECT(gbc.readMem(0xc7b5), 0xc0);
        // CB C0 0109
        gbc.setState(0x546b, 0x8a9d, 0xd410, 0xfefe, 0x7e4b, 0x763, 0x0, 0x0);
        gbc.writeMem(0x546b, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0xff);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0x7e);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0x63);
        EXPECT(gbc.sp(), 0x8a9d);
        EXPECT(gbc.pc(), 0x546d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C0 010B
        gbc.setState(0x23a4, 0xf5ec, 0xb8e0, 0x58bd, 0x3962, 0xa57, 0x1, 0x0);
        gbc.writeMem(0x23a4, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb8);
        EXPECT(gbc.b(),  0x59);
        EXPECT(gbc.c(),  0xbd);
        EXPECT(gbc.d(),  0x39);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0xa);
        EXPECT(gbc.l(),  0x57);
        EXPECT(gbc.sp(), 0xf5ec);
        EXPECT(gbc.pc(), 0x23a6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C0 010C
        gbc.setState(0x77e, 0x78dc, 0x900, 0xaa02, 0x9490, 0x126d, 0x0, 0x0);
        gbc.writeMem(0x77e, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0xab);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0x6d);
        EXPECT(gbc.sp(), 0x78dc);
        EXPECT(gbc.pc(), 0x780);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C0 010D
        gbc.setState(0x597a, 0x97ec, 0xc860, 0x9f9a, 0x93f4, 0xd321, 0x1, 0x1);
        gbc.writeMem(0x597a, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0x9f);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0x93);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0xd3);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0x97ec);
        EXPECT(gbc.pc(), 0x597c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C0 010E
        gbc.setState(0x6a9e, 0x88d4, 0xb230, 0xaa94, 0xcac9, 0x9b67, 0x1, 0x1);
        gbc.writeMem(0x6a9e, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb2);
        EXPECT(gbc.b(),  0xab);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0xca);
        EXPECT(gbc.e(),  0xc9);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0x67);
        EXPECT(gbc.sp(), 0x88d4);
        EXPECT(gbc.pc(), 0x6aa0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C0 010F
        gbc.setState(0x4f5f, 0x4827, 0x4520, 0x42cd, 0x3ae1, 0xe612, 0x0, 0x1);
        gbc.writeMem(0x4f5f, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0x43);
        EXPECT(gbc.c(),  0xcd);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0xe1);
        EXPECT(gbc.h(),  0xe6);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0x4827);
        EXPECT(gbc.pc(), 0x4f61);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C0 0110
        gbc.setState(0x2acd, 0xde0c, 0x4080, 0x8030, 0x4f2, 0x8ae6, 0x0, 0x0);
        gbc.writeMem(0x2acd, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x40);
        EXPECT(gbc.b(),  0x81);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0xde0c);
        EXPECT(gbc.pc(), 0x2acf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C0 0111
        gbc.setState(0xedba, 0xba3e, 0x2680, 0xa5f0, 0x764, 0x86a5, 0x0, 0x0);
        gbc.writeMem(0xedba, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0xa5);
        EXPECT(gbc.c(),  0xf0);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0x64);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0xba3e);
        EXPECT(gbc.pc(), 0xedbc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xedba), 0xcb);
        EXPECT(gbc.readMem(0xedbb), 0xc0);
        // CB C0 0112
        gbc.setState(0x7456, 0x4420, 0x7230, 0x975e, 0xc0ff, 0x1642, 0x1, 0x0);
        gbc.writeMem(0x7456, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0x97);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0xff);
        EXPECT(gbc.h(),  0x16);
        EXPECT(gbc.l(),  0x42);
        EXPECT(gbc.sp(), 0x4420);
        EXPECT(gbc.pc(), 0x7458);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C0 0113
        gbc.setState(0x5d20, 0x92b7, 0x6800, 0x8351, 0xf25b, 0x136f, 0x1, 0x0);
        gbc.writeMem(0x5d20, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x68);
        EXPECT(gbc.b(),  0x83);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0xf2);
        EXPECT(gbc.e(),  0x5b);
        EXPECT(gbc.h(),  0x13);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0x92b7);
        EXPECT(gbc.pc(), 0x5d22);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C0 0114
        gbc.setState(0xa9dc, 0xe974, 0x6050, 0xa59b, 0x8fef, 0xd5f7, 0x1, 0x1);
        gbc.writeMem(0xa9dc, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0xa5);
        EXPECT(gbc.c(),  0x9b);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0xef);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0xf7);
        EXPECT(gbc.sp(), 0xe974);
        EXPECT(gbc.pc(), 0xa9de);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa9dc), 0xcb);
        EXPECT(gbc.readMem(0xa9dd), 0xc0);
        // CB C0 0116
        gbc.setState(0xac97, 0xbaad, 0xd4c0, 0x7bf9, 0xb2a, 0x3ad4, 0x0, 0x0);
        gbc.writeMem(0xac97, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0x7b);
        EXPECT(gbc.c(),  0xf9);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0x3a);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0xbaad);
        EXPECT(gbc.pc(), 0xac99);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xac97), 0xcb);
        EXPECT(gbc.readMem(0xac98), 0xc0);
        // CB C0 0117
        gbc.setState(0x2e62, 0x5f81, 0x9cd0, 0x162f, 0x860f, 0x6baf, 0x1, 0x1);
        gbc.writeMem(0x2e62, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x9c);
        EXPECT(gbc.b(),  0x17);
        EXPECT(gbc.c(),  0x2f);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0x6b);
        EXPECT(gbc.l(),  0xaf);
        EXPECT(gbc.sp(), 0x5f81);
        EXPECT(gbc.pc(), 0x2e64);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C0 0118
        gbc.setState(0xb78d, 0xb921, 0x8410, 0xabac, 0xb65f, 0xc033, 0x0, 0x1);
        gbc.writeMem(0xb78d, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x84);
        EXPECT(gbc.b(),  0xab);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0xb921);
        EXPECT(gbc.pc(), 0xb78f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb78d), 0xcb);
        EXPECT(gbc.readMem(0xb78e), 0xc0);
        // CB C0 011A
        gbc.setState(0x4192, 0x7038, 0x60a0, 0x5745, 0x4d37, 0xcd3e, 0x1, 0x1);
        gbc.writeMem(0x4192, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0x4d);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0xcd);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0x7038);
        EXPECT(gbc.pc(), 0x4194);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C0 011B
        gbc.setState(0x8e05, 0x9f2c, 0x1260, 0x1915, 0x81d4, 0xeaff, 0x0, 0x1);
        gbc.writeMem(0x8e05, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x12);
        EXPECT(gbc.b(),  0x19);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0x81);
        EXPECT(gbc.e(),  0xd4);
        EXPECT(gbc.h(),  0xea);
        EXPECT(gbc.l(),  0xff);
        EXPECT(gbc.sp(), 0x9f2c);
        EXPECT(gbc.pc(), 0x8e07);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8e05), 0xcb);
        EXPECT(gbc.readMem(0x8e06), 0xc0);
        // CB C0 011C
        gbc.setState(0xa3c9, 0xd9e9, 0xcb10, 0x3286, 0x61d4, 0x8787, 0x1, 0x0);
        gbc.writeMem(0xa3c9, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xcb);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0x61);
        EXPECT(gbc.e(),  0xd4);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0x87);
        EXPECT(gbc.sp(), 0xd9e9);
        EXPECT(gbc.pc(), 0xa3cb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa3c9), 0xcb);
        EXPECT(gbc.readMem(0xa3ca), 0xc0);
        // CB C0 011D
        gbc.setState(0xdf66, 0x986, 0x4570, 0xd40d, 0x93cd, 0x2171, 0x1, 0x1);
        gbc.writeMem(0xdf66, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0xd5);
        EXPECT(gbc.c(),  0xd);
        EXPECT(gbc.d(),  0x93);
        EXPECT(gbc.e(),  0xcd);
        EXPECT(gbc.h(),  0x21);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0x986);
        EXPECT(gbc.pc(), 0xdf68);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdf66), 0xcb);
        EXPECT(gbc.readMem(0xdf67), 0xc0);
        // CB C0 011E
        gbc.setState(0xd725, 0x9bc5, 0x7900, 0x9720, 0x481c, 0xa5e2, 0x1, 0x1);
        gbc.writeMem(0xd725, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0x97);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0x48);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0xa5);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0x9bc5);
        EXPECT(gbc.pc(), 0xd727);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd725), 0xcb);
        EXPECT(gbc.readMem(0xd726), 0xc0);
        // CB C0 011F
        gbc.setState(0x1b64, 0xbf61, 0x1830, 0xb050, 0xef56, 0xac05, 0x0, 0x1);
        gbc.writeMem(0x1b64, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0x56);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0x5);
        EXPECT(gbc.sp(), 0xbf61);
        EXPECT(gbc.pc(), 0x1b66);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C0 0120
        gbc.setState(0x604d, 0x5b6c, 0xa10, 0x603e, 0x4e66, 0x4ff2, 0x0, 0x0);
        gbc.writeMem(0x604d, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0x4e);
        EXPECT(gbc.e(),  0x66);
        EXPECT(gbc.h(),  0x4f);
        EXPECT(gbc.l(),  0xf2);
        EXPECT(gbc.sp(), 0x5b6c);
        EXPECT(gbc.pc(), 0x604f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C0 0121
        gbc.setState(0x2ba3, 0xb381, 0x10f0, 0xe91f, 0xab02, 0xf3e9, 0x0, 0x1);
        gbc.writeMem(0x2ba3, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x10);
        EXPECT(gbc.b(),  0xe9);
        EXPECT(gbc.c(),  0x1f);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0xe9);
        EXPECT(gbc.sp(), 0xb381);
        EXPECT(gbc.pc(), 0x2ba5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C0 0122
        gbc.setState(0xb26e, 0x7f43, 0xfb50, 0xbf3a, 0x7418, 0x81c8, 0x1, 0x0);
        gbc.writeMem(0xb26e, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xfb);
        EXPECT(gbc.b(),  0xbf);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0x74);
        EXPECT(gbc.e(),  0x18);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0x7f43);
        EXPECT(gbc.pc(), 0xb270);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb26e), 0xcb);
        EXPECT(gbc.readMem(0xb26f), 0xc0);
        // CB C0 0123
        gbc.setState(0x73e, 0x20bd, 0xa8e0, 0xa531, 0x4648, 0x188b, 0x1, 0x1);
        gbc.writeMem(0x73e, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa8);
        EXPECT(gbc.b(),  0xa5);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0x46);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0x18);
        EXPECT(gbc.l(),  0x8b);
        EXPECT(gbc.sp(), 0x20bd);
        EXPECT(gbc.pc(), 0x740);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C0 0124
        gbc.setState(0xa3cf, 0xc6a8, 0x1e40, 0x1abb, 0xbdb, 0x9553, 0x1, 0x1);
        gbc.writeMem(0xa3cf, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0xbb);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0xdb);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0xc6a8);
        EXPECT(gbc.pc(), 0xa3d1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa3cf), 0xcb);
        EXPECT(gbc.readMem(0xa3d0), 0xc0);
        // CB C0 0125
        gbc.setState(0x112d, 0x84b3, 0x3b40, 0x32a9, 0xcbfb, 0x5a0d, 0x1, 0x1);
        gbc.writeMem(0x112d, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0xa9);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0xfb);
        EXPECT(gbc.h(),  0x5a);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0x84b3);
        EXPECT(gbc.pc(), 0x112f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C0 0126
        gbc.setState(0x712a, 0x2c9e, 0xc980, 0x2619, 0x56c0, 0x2817, 0x0, 0x0);
        gbc.writeMem(0x712a, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xc9);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0x56);
        EXPECT(gbc.e(),  0xc0);
        EXPECT(gbc.h(),  0x28);
        EXPECT(gbc.l(),  0x17);
        EXPECT(gbc.sp(), 0x2c9e);
        EXPECT(gbc.pc(), 0x712c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C0 0128
        gbc.setState(0x498b, 0xd9e8, 0xde0, 0x9a3d, 0x5114, 0xe761, 0x0, 0x0);
        gbc.writeMem(0x498b, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd);
        EXPECT(gbc.b(),  0x9b);
        EXPECT(gbc.c(),  0x3d);
        EXPECT(gbc.d(),  0x51);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0x61);
        EXPECT(gbc.sp(), 0xd9e8);
        EXPECT(gbc.pc(), 0x498d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C0 0129
        gbc.setState(0x663c, 0x1338, 0x6780, 0xcdec, 0x544b, 0xd606, 0x0, 0x0);
        gbc.writeMem(0x663c, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x67);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0xec);
        EXPECT(gbc.d(),  0x54);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0x1338);
        EXPECT(gbc.pc(), 0x663e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C0 012A
        gbc.setState(0x8218, 0x1502, 0xd800, 0x43a6, 0x352, 0xe71e, 0x1, 0x1);
        gbc.writeMem(0x8218, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd8);
        EXPECT(gbc.b(),  0x43);
        EXPECT(gbc.c(),  0xa6);
        EXPECT(gbc.d(),  0x3);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0x1502);
        EXPECT(gbc.pc(), 0x821a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8218), 0xcb);
        EXPECT(gbc.readMem(0x8219), 0xc0);
        // CB C0 012B
        gbc.setState(0xe1e8, 0x19f5, 0x26c0, 0xa507, 0xe08a, 0xb4c4, 0x1, 0x0);
        gbc.writeMem(0xe1e8, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0xa5);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0x8a);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0xc4);
        EXPECT(gbc.sp(), 0x19f5);
        EXPECT(gbc.pc(), 0xe1ea);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe1e8), 0xcb);
        EXPECT(gbc.readMem(0xe1e9), 0xc0);
        // CB C0 012C
        gbc.setState(0x47f1, 0xa933, 0xf220, 0x2933, 0x8025, 0x27a9, 0x0, 0x1);
        gbc.writeMem(0x47f1, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0x27);
        EXPECT(gbc.l(),  0xa9);
        EXPECT(gbc.sp(), 0xa933);
        EXPECT(gbc.pc(), 0x47f3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C0 012D
        gbc.setState(0xd997, 0x7aae, 0x7870, 0x6046, 0x7284, 0x480d, 0x0, 0x0);
        gbc.writeMem(0xd997, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0x84);
        EXPECT(gbc.h(),  0x48);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0x7aae);
        EXPECT(gbc.pc(), 0xd999);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd997), 0xcb);
        EXPECT(gbc.readMem(0xd998), 0xc0);
        // CB C0 012E
        gbc.setState(0x21c1, 0xe5a4, 0x3ff0, 0x850c, 0xe678, 0xe53c, 0x1, 0x0);
        gbc.writeMem(0x21c1, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0xc);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0xe5a4);
        EXPECT(gbc.pc(), 0x21c3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C0 012F
        gbc.setState(0xe0aa, 0xce6d, 0x7360, 0xf5ce, 0x9f39, 0x38b7, 0x1, 0x1);
        gbc.writeMem(0xe0aa, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x73);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0x38);
        EXPECT(gbc.l(),  0xb7);
        EXPECT(gbc.sp(), 0xce6d);
        EXPECT(gbc.pc(), 0xe0ac);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe0aa), 0xcb);
        EXPECT(gbc.readMem(0xe0ab), 0xc0);
        // CB C0 0130
        gbc.setState(0x43c9, 0x5ba7, 0xbdc0, 0x4bd5, 0xaed9, 0xdda1, 0x0, 0x1);
        gbc.writeMem(0x43c9, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xbd);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0xae);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0x5ba7);
        EXPECT(gbc.pc(), 0x43cb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C0 0131
        gbc.setState(0x95fe, 0x62c, 0x88a0, 0x267f, 0x54e5, 0x5a92, 0x1, 0x0);
        gbc.writeMem(0x95fe, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0x54);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0x5a);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0x62c);
        EXPECT(gbc.pc(), 0x9600);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x95fe), 0xcb);
        EXPECT(gbc.readMem(0x95ff), 0xc0);
        // CB C0 0132
        gbc.setState(0xc58, 0x595f, 0xeff0, 0x8314, 0xd4d2, 0x1, 0x0, 0x1);
        gbc.writeMem(0xc58, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xef);
        EXPECT(gbc.b(),  0x83);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0x595f);
        EXPECT(gbc.pc(), 0xc5a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C0 0133
        gbc.setState(0x92c7, 0x2e61, 0x6520, 0x889d, 0xeaa6, 0xc1a7, 0x0, 0x0);
        gbc.writeMem(0x92c7, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x65);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0x9d);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0xa6);
        EXPECT(gbc.h(),  0xc1);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0x2e61);
        EXPECT(gbc.pc(), 0x92c9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x92c7), 0xcb);
        EXPECT(gbc.readMem(0x92c8), 0xc0);
        // CB C0 0134
        gbc.setState(0xdada, 0xae68, 0x2080, 0x5d0a, 0x1b55, 0x9162, 0x1, 0x1);
        gbc.writeMem(0xdada, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x20);
        EXPECT(gbc.b(),  0x5d);
        EXPECT(gbc.c(),  0xa);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0x55);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0xae68);
        EXPECT(gbc.pc(), 0xdadc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdada), 0xcb);
        EXPECT(gbc.readMem(0xdadb), 0xc0);
        // CB C0 0135
        gbc.setState(0x90f1, 0x41fd, 0x8ab0, 0x765b, 0x8b23, 0x771d, 0x1, 0x1);
        gbc.writeMem(0x90f1, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x8a);
        EXPECT(gbc.b(),  0x77);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0x77);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0x41fd);
        EXPECT(gbc.pc(), 0x90f3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x90f1), 0xcb);
        EXPECT(gbc.readMem(0x90f2), 0xc0);
        // CB C0 0136
        gbc.setState(0x8a8, 0xc355, 0xc620, 0x666c, 0x6263, 0x9fa3, 0x0, 0x0);
        gbc.writeMem(0x8a8, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xc6);
        EXPECT(gbc.b(),  0x67);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0x62);
        EXPECT(gbc.e(),  0x63);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0xa3);
        EXPECT(gbc.sp(), 0xc355);
        EXPECT(gbc.pc(), 0x8aa);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C0 0138
        gbc.setState(0xc84d, 0xba8f, 0x7d60, 0xe84f, 0xe4ad, 0xd8f0, 0x0, 0x0);
        gbc.writeMem(0xc84d, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x7d);
        EXPECT(gbc.b(),  0xe9);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0xba8f);
        EXPECT(gbc.pc(), 0xc84f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc84d), 0xcb);
        EXPECT(gbc.readMem(0xc84e), 0xc0);
        // CB C0 0139
        gbc.setState(0x69f5, 0xd200, 0xe750, 0xd07c, 0x19a8, 0x73e9, 0x0, 0x1);
        gbc.writeMem(0x69f5, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe7);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0x19);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0x73);
        EXPECT(gbc.l(),  0xe9);
        EXPECT(gbc.sp(), 0xd200);
        EXPECT(gbc.pc(), 0x69f7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C0 013A
        gbc.setState(0x888, 0xf1b9, 0x7bf0, 0xfd52, 0x75da, 0xb26f, 0x1, 0x1);
        gbc.writeMem(0x888, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0x52);
        EXPECT(gbc.d(),  0x75);
        EXPECT(gbc.e(),  0xda);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0xf1b9);
        EXPECT(gbc.pc(), 0x88a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C0 013B
        gbc.setState(0x3ac1, 0x6420, 0xdc00, 0x1e3f, 0x9e8f, 0x9ef1, 0x1, 0x1);
        gbc.writeMem(0x3ac1, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xdc);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0x3f);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0x8f);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0xf1);
        EXPECT(gbc.sp(), 0x6420);
        EXPECT(gbc.pc(), 0x3ac3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C0 013C
        gbc.setState(0x9fd7, 0xb08b, 0x39c0, 0xa2db, 0x28e3, 0xa1f7, 0x1, 0x1);
        gbc.writeMem(0x9fd7, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0xa3);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0x28);
        EXPECT(gbc.e(),  0xe3);
        EXPECT(gbc.h(),  0xa1);
        EXPECT(gbc.l(),  0xf7);
        EXPECT(gbc.sp(), 0xb08b);
        EXPECT(gbc.pc(), 0x9fd9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9fd7), 0xcb);
        EXPECT(gbc.readMem(0x9fd8), 0xc0);
        // CB C0 013D
        gbc.setState(0x5e86, 0xf1aa, 0x4b70, 0x67c8, 0xe1cf, 0x92f6, 0x1, 0x0);
        gbc.writeMem(0x5e86, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0x67);
        EXPECT(gbc.c(),  0xc8);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0xcf);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0xf6);
        EXPECT(gbc.sp(), 0xf1aa);
        EXPECT(gbc.pc(), 0x5e88);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C0 013E
        gbc.setState(0x2730, 0x1941, 0x4cb0, 0x85e4, 0xc038, 0xcccf, 0x0, 0x0);
        gbc.writeMem(0x2730, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x4c);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0x38);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0xcf);
        EXPECT(gbc.sp(), 0x1941);
        EXPECT(gbc.pc(), 0x2732);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C0 013F
        gbc.setState(0x5147, 0x46a0, 0x8090, 0x1e5b, 0x9a6b, 0xac6e, 0x0, 0x0);
        gbc.writeMem(0x5147, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0x6b);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0x6e);
        EXPECT(gbc.sp(), 0x46a0);
        EXPECT(gbc.pc(), 0x5149);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C0 0140
        gbc.setState(0xa006, 0x303f, 0x5c50, 0x7afe, 0x1e19, 0xf08d, 0x1, 0x0);
        gbc.writeMem(0xa006, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0x7b);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0x1e);
        EXPECT(gbc.e(),  0x19);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0x303f);
        EXPECT(gbc.pc(), 0xa008);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa006), 0xcb);
        EXPECT(gbc.readMem(0xa007), 0xc0);
        // CB C0 0141
        gbc.setState(0x508, 0x9fdd, 0x56b0, 0x4099, 0xa183, 0x9c3e, 0x0, 0x1);
        gbc.writeMem(0x508, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0x99);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0x83);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0x9fdd);
        EXPECT(gbc.pc(), 0x50a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C0 0142
        gbc.setState(0x8aac, 0xbb4a, 0x2080, 0x5b4a, 0x4d18, 0xe1b5, 0x1, 0x1);
        gbc.writeMem(0x8aac, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x20);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0x4a);
        EXPECT(gbc.d(),  0x4d);
        EXPECT(gbc.e(),  0x18);
        EXPECT(gbc.h(),  0xe1);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0xbb4a);
        EXPECT(gbc.pc(), 0x8aae);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8aac), 0xcb);
        EXPECT(gbc.readMem(0x8aad), 0xc0);
        // CB C0 0143
        gbc.setState(0x6e28, 0x17be, 0xd5e0, 0x2e79, 0x90f5, 0xc8cf, 0x1, 0x0);
        gbc.writeMem(0x6e28, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd5);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0x79);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0xc8);
        EXPECT(gbc.l(),  0xcf);
        EXPECT(gbc.sp(), 0x17be);
        EXPECT(gbc.pc(), 0x6e2a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C0 0144
        gbc.setState(0x8444, 0x2ec4, 0x9c70, 0xb839, 0x777a, 0x6994, 0x1, 0x1);
        gbc.writeMem(0x8444, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x9c);
        EXPECT(gbc.b(),  0xb9);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0x7a);
        EXPECT(gbc.h(),  0x69);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0x2ec4);
        EXPECT(gbc.pc(), 0x8446);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8444), 0xcb);
        EXPECT(gbc.readMem(0x8445), 0xc0);
        // CB C0 0145
        gbc.setState(0xacc0, 0x49f4, 0x9fe0, 0x5865, 0xd153, 0xb11c, 0x1, 0x0);
        gbc.writeMem(0xacc0, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x9f);
        EXPECT(gbc.b(),  0x59);
        EXPECT(gbc.c(),  0x65);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0x53);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0x1c);
        EXPECT(gbc.sp(), 0x49f4);
        EXPECT(gbc.pc(), 0xacc2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xacc0), 0xcb);
        EXPECT(gbc.readMem(0xacc1), 0xc0);
        // CB C0 0146
        gbc.setState(0x93f, 0xf94b, 0x3ce0, 0x827e, 0x66b3, 0x25f2, 0x1, 0x0);
        gbc.writeMem(0x93f, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0x83);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0x66);
        EXPECT(gbc.e(),  0xb3);
        EXPECT(gbc.h(),  0x25);
        EXPECT(gbc.l(),  0xf2);
        EXPECT(gbc.sp(), 0xf94b);
        EXPECT(gbc.pc(), 0x941);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C0 0147
        gbc.setState(0x29b8, 0xeeca, 0xa50, 0x2ebd, 0xbaa, 0xc47, 0x1, 0x1);
        gbc.writeMem(0x29b8, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0xbd);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0xaa);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0x47);
        EXPECT(gbc.sp(), 0xeeca);
        EXPECT(gbc.pc(), 0x29ba);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C0 0148
        gbc.setState(0x5d99, 0x871e, 0x3a00, 0x99fe, 0xf3d8, 0x981f, 0x0, 0x0);
        gbc.writeMem(0x5d99, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0x99);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0x871e);
        EXPECT(gbc.pc(), 0x5d9b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C0 0149
        gbc.setState(0xde98, 0xc0ff, 0x5a50, 0xe4c3, 0x4320, 0x8cec, 0x0, 0x1);
        gbc.writeMem(0xde98, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0xe5);
        EXPECT(gbc.c(),  0xc3);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0x20);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0xec);
        EXPECT(gbc.sp(), 0xc0ff);
        EXPECT(gbc.pc(), 0xde9a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xde98), 0xcb);
        EXPECT(gbc.readMem(0xde99), 0xc0);
        // CB C0 014A
        gbc.setState(0xb415, 0xea4f, 0xbac0, 0xe1a6, 0x111d, 0x943, 0x0, 0x1);
        gbc.writeMem(0xb415, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0xa6);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0x9);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0xea4f);
        EXPECT(gbc.pc(), 0xb417);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb415), 0xcb);
        EXPECT(gbc.readMem(0xb416), 0xc0);
        // CB C0 014B
        gbc.setState(0x716e, 0x850d, 0x9450, 0xbb08, 0xfc31, 0x5783, 0x1, 0x1);
        gbc.writeMem(0x716e, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x94);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0x31);
        EXPECT(gbc.h(),  0x57);
        EXPECT(gbc.l(),  0x83);
        EXPECT(gbc.sp(), 0x850d);
        EXPECT(gbc.pc(), 0x7170);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C0 014C
        gbc.setState(0x3641, 0xbc36, 0xb780, 0x6e1e, 0x8cf6, 0xe651, 0x1, 0x0);
        gbc.writeMem(0x3641, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0x6f);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0xf6);
        EXPECT(gbc.h(),  0xe6);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0xbc36);
        EXPECT(gbc.pc(), 0x3643);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C0 014D
        gbc.setState(0x67a2, 0x6a68, 0xf760, 0x5a7, 0xc5d4, 0x3f04, 0x1, 0x0);
        gbc.writeMem(0x67a2, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0xa7);
        EXPECT(gbc.d(),  0xc5);
        EXPECT(gbc.e(),  0xd4);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0x4);
        EXPECT(gbc.sp(), 0x6a68);
        EXPECT(gbc.pc(), 0x67a4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C0 014E
        gbc.setState(0x8c67, 0x9f37, 0xe310, 0x7f8, 0x6a59, 0x4663, 0x0, 0x0);
        gbc.writeMem(0x8c67, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0xf8);
        EXPECT(gbc.d(),  0x6a);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0x46);
        EXPECT(gbc.l(),  0x63);
        EXPECT(gbc.sp(), 0x9f37);
        EXPECT(gbc.pc(), 0x8c69);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8c67), 0xcb);
        EXPECT(gbc.readMem(0x8c68), 0xc0);
        // CB C0 0150
        gbc.setState(0x1741, 0x4df, 0xb3d0, 0x8463, 0x93be, 0x520f, 0x1, 0x1);
        gbc.writeMem(0x1741, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb3);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0x63);
        EXPECT(gbc.d(),  0x93);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0x52);
        EXPECT(gbc.l(),  0xf);
        EXPECT(gbc.sp(), 0x4df);
        EXPECT(gbc.pc(), 0x1743);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C0 0151
        gbc.setState(0xb8d1, 0x6672, 0x1940, 0x3fb9, 0x5183, 0xecb9, 0x1, 0x0);
        gbc.writeMem(0xb8d1, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x19);
        EXPECT(gbc.b(),  0x3f);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0x51);
        EXPECT(gbc.e(),  0x83);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0x6672);
        EXPECT(gbc.pc(), 0xb8d3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb8d1), 0xcb);
        EXPECT(gbc.readMem(0xb8d2), 0xc0);
        // CB C0 0152
        gbc.setState(0x2a35, 0xec8b, 0x370, 0xf0cd, 0x4554, 0x540a, 0x0, 0x0);
        gbc.writeMem(0x2a35, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0xcd);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0x54);
        EXPECT(gbc.l(),  0xa);
        EXPECT(gbc.sp(), 0xec8b);
        EXPECT(gbc.pc(), 0x2a37);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C0 0153
        gbc.setState(0x35fc, 0xb0d3, 0x3000, 0x9a24, 0xafeb, 0xbad2, 0x1, 0x1);
        gbc.writeMem(0x35fc, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0x9b);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0xaf);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0xb0d3);
        EXPECT(gbc.pc(), 0x35fe);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C0 0154
        gbc.setState(0x9f4b, 0x192, 0xa480, 0xb0e1, 0x1b1e, 0x4683, 0x1, 0x0);
        gbc.writeMem(0x9f4b, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa4);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0xe1);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0x46);
        EXPECT(gbc.l(),  0x83);
        EXPECT(gbc.sp(), 0x192);
        EXPECT(gbc.pc(), 0x9f4d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9f4b), 0xcb);
        EXPECT(gbc.readMem(0x9f4c), 0xc0);
        // CB C0 0155
        gbc.setState(0xadcf, 0xc681, 0xf250, 0x6aa6, 0x9dd3, 0x62c6, 0x1, 0x0);
        gbc.writeMem(0xadcf, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0x6b);
        EXPECT(gbc.c(),  0xa6);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0x62);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0xc681);
        EXPECT(gbc.pc(), 0xadd1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xadcf), 0xcb);
        EXPECT(gbc.readMem(0xadd0), 0xc0);
        // CB C0 0156
        gbc.setState(0xe079, 0xdde5, 0x6780, 0x91cd, 0xe7be, 0xa017, 0x0, 0x1);
        gbc.writeMem(0xe079, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x67);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0xcd);
        EXPECT(gbc.d(),  0xe7);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0xa0);
        EXPECT(gbc.l(),  0x17);
        EXPECT(gbc.sp(), 0xdde5);
        EXPECT(gbc.pc(), 0xe07b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe079), 0xcb);
        EXPECT(gbc.readMem(0xe07a), 0xc0);
        // CB C0 0157
        gbc.setState(0x711b, 0xf537, 0xba60, 0xb511, 0x4382, 0x6add, 0x1, 0x0);
        gbc.writeMem(0x711b, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0xb5);
        EXPECT(gbc.c(),  0x11);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0x82);
        EXPECT(gbc.h(),  0x6a);
        EXPECT(gbc.l(),  0xdd);
        EXPECT(gbc.sp(), 0xf537);
        EXPECT(gbc.pc(), 0x711d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C0 0158
        gbc.setState(0x728c, 0xeade, 0x3010, 0x2f30, 0x43b4, 0x7971, 0x1, 0x1);
        gbc.writeMem(0x728c, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0xb4);
        EXPECT(gbc.h(),  0x79);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0xeade);
        EXPECT(gbc.pc(), 0x728e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C0 0159
        gbc.setState(0x79a9, 0x44ae, 0x87d0, 0x9bb9, 0xda80, 0x4b93, 0x1, 0x1);
        gbc.writeMem(0x79a9, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x87);
        EXPECT(gbc.b(),  0x9b);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0x4b);
        EXPECT(gbc.l(),  0x93);
        EXPECT(gbc.sp(), 0x44ae);
        EXPECT(gbc.pc(), 0x79ab);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C0 015A
        gbc.setState(0x7d48, 0x6a38, 0x5fd0, 0xc0b7, 0x634b, 0x38da, 0x0, 0x1);
        gbc.writeMem(0x7d48, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0xc1);
        EXPECT(gbc.c(),  0xb7);
        EXPECT(gbc.d(),  0x63);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0x38);
        EXPECT(gbc.l(),  0xda);
        EXPECT(gbc.sp(), 0x6a38);
        EXPECT(gbc.pc(), 0x7d4a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C0 015B
        gbc.setState(0x1348, 0xcaa9, 0x5390, 0x9b23, 0xdf12, 0xef8b, 0x1, 0x0);
        gbc.writeMem(0x1348, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x53);
        EXPECT(gbc.b(),  0x9b);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0x8b);
        EXPECT(gbc.sp(), 0xcaa9);
        EXPECT(gbc.pc(), 0x134a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C0 015C
        gbc.setState(0x57f2, 0xcaf3, 0x780, 0x5c1b, 0xed33, 0x7d8, 0x1, 0x0);
        gbc.writeMem(0x57f2, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0x5d);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0xed);
        EXPECT(gbc.e(),  0x33);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0xd8);
        EXPECT(gbc.sp(), 0xcaf3);
        EXPECT(gbc.pc(), 0x57f4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C0 015D
        gbc.setState(0xef6c, 0xea31, 0x53a0, 0x363f, 0xae6e, 0x8390, 0x0, 0x1);
        gbc.writeMem(0xef6c, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x53);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0x3f);
        EXPECT(gbc.d(),  0xae);
        EXPECT(gbc.e(),  0x6e);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0x90);
        EXPECT(gbc.sp(), 0xea31);
        EXPECT(gbc.pc(), 0xef6e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xef6c), 0xcb);
        EXPECT(gbc.readMem(0xef6d), 0xc0);
        // CB C0 015E
        gbc.setState(0x5277, 0x7586, 0xa0c0, 0x3237, 0x745c, 0xc4eb, 0x1, 0x1);
        gbc.writeMem(0x5277, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0x74);
        EXPECT(gbc.e(),  0x5c);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0xeb);
        EXPECT(gbc.sp(), 0x7586);
        EXPECT(gbc.pc(), 0x5279);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C0 015F
        gbc.setState(0x4e82, 0xad8f, 0x47b0, 0x55af, 0xeb13, 0x3963, 0x1, 0x1);
        gbc.writeMem(0x4e82, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0xaf);
        EXPECT(gbc.d(),  0xeb);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0x63);
        EXPECT(gbc.sp(), 0xad8f);
        EXPECT(gbc.pc(), 0x4e84);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C0 0160
        gbc.setState(0xbdd, 0x7179, 0x9f90, 0x3d5b, 0x927e, 0xd09c, 0x1, 0x0);
        gbc.writeMem(0xbdd, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x9f);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0x92);
        EXPECT(gbc.e(),  0x7e);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0x9c);
        EXPECT(gbc.sp(), 0x7179);
        EXPECT(gbc.pc(), 0xbdf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C0 0161
        gbc.setState(0xbcf7, 0x3166, 0x58f0, 0xbdd9, 0xb7cf, 0xf96e, 0x1, 0x1);
        gbc.writeMem(0xbcf7, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x58);
        EXPECT(gbc.b(),  0xbd);
        EXPECT(gbc.c(),  0xd9);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0xcf);
        EXPECT(gbc.h(),  0xf9);
        EXPECT(gbc.l(),  0x6e);
        EXPECT(gbc.sp(), 0x3166);
        EXPECT(gbc.pc(), 0xbcf9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbcf7), 0xcb);
        EXPECT(gbc.readMem(0xbcf8), 0xc0);
        // CB C0 0162
        gbc.setState(0x8b6e, 0xb5f4, 0xde60, 0xbc90, 0x8fd1, 0xf840, 0x0, 0x1);
        gbc.writeMem(0x8b6e, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xde);
        EXPECT(gbc.b(),  0xbd);
        EXPECT(gbc.c(),  0x90);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0xd1);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0xb5f4);
        EXPECT(gbc.pc(), 0x8b70);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8b6e), 0xcb);
        EXPECT(gbc.readMem(0x8b6f), 0xc0);
        // CB C0 0163
        gbc.setState(0x88d3, 0x2c08, 0x8240, 0xa66a, 0x18de, 0x5530, 0x1, 0x1);
        gbc.writeMem(0x88d3, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x82);
        EXPECT(gbc.b(),  0xa7);
        EXPECT(gbc.c(),  0x6a);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0x30);
        EXPECT(gbc.sp(), 0x2c08);
        EXPECT(gbc.pc(), 0x88d5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x88d3), 0xcb);
        EXPECT(gbc.readMem(0x88d4), 0xc0);
        // CB C0 0164
        gbc.setState(0xb491, 0x1c8f, 0x9be0, 0x4fd6, 0x2dc6, 0xa885, 0x0, 0x0);
        gbc.writeMem(0xb491, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x9b);
        EXPECT(gbc.b(),  0x4f);
        EXPECT(gbc.c(),  0xd6);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0xc6);
        EXPECT(gbc.h(),  0xa8);
        EXPECT(gbc.l(),  0x85);
        EXPECT(gbc.sp(), 0x1c8f);
        EXPECT(gbc.pc(), 0xb493);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb491), 0xcb);
        EXPECT(gbc.readMem(0xb492), 0xc0);
        // CB C0 0165
        gbc.setState(0x79b4, 0xef05, 0x23f0, 0x9a44, 0xbc5a, 0x8960, 0x1, 0x1);
        gbc.writeMem(0x79b4, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0x9b);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0xbc);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0xef05);
        EXPECT(gbc.pc(), 0x79b6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C0 0166
        gbc.setState(0x315f, 0x899b, 0xefd0, 0xd418, 0x6771, 0x446f, 0x1, 0x0);
        gbc.writeMem(0x315f, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xef);
        EXPECT(gbc.b(),  0xd5);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0x71);
        EXPECT(gbc.h(),  0x44);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0x899b);
        EXPECT(gbc.pc(), 0x3161);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C0 0167
        gbc.setState(0x2185, 0xd832, 0x83d0, 0xc904, 0x4ad8, 0x30dd, 0x1, 0x1);
        gbc.writeMem(0x2185, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x83);
        EXPECT(gbc.b(),  0xc9);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0x4a);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0x30);
        EXPECT(gbc.l(),  0xdd);
        EXPECT(gbc.sp(), 0xd832);
        EXPECT(gbc.pc(), 0x2187);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C0 0168
        gbc.setState(0xadc1, 0x7d85, 0x7a40, 0xefdc, 0xecc5, 0x6dab, 0x0, 0x1);
        gbc.writeMem(0xadc1, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x7a);
        EXPECT(gbc.b(),  0xef);
        EXPECT(gbc.c(),  0xdc);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0xc5);
        EXPECT(gbc.h(),  0x6d);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0x7d85);
        EXPECT(gbc.pc(), 0xadc3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xadc1), 0xcb);
        EXPECT(gbc.readMem(0xadc2), 0xc0);
        // CB C0 0169
        gbc.setState(0x481d, 0xa3ee, 0xd280, 0x7b92, 0x91c1, 0x66b9, 0x0, 0x0);
        gbc.writeMem(0x481d, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0x7b);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0x66);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0xa3ee);
        EXPECT(gbc.pc(), 0x481f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C0 016A
        gbc.setState(0x496d, 0x1ebb, 0x67b0, 0x3596, 0x49b6, 0x7d9b, 0x0, 0x0);
        gbc.writeMem(0x496d, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x67);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0x96);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0xb6);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0x9b);
        EXPECT(gbc.sp(), 0x1ebb);
        EXPECT(gbc.pc(), 0x496f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C0 016B
        gbc.setState(0x518c, 0x7678, 0xfb70, 0xd4, 0xfb61, 0x446, 0x1, 0x1);
        gbc.writeMem(0x518c, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xfb);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0xd4);
        EXPECT(gbc.d(),  0xfb);
        EXPECT(gbc.e(),  0x61);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0x46);
        EXPECT(gbc.sp(), 0x7678);
        EXPECT(gbc.pc(), 0x518e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C0 016C
        gbc.setState(0x32d4, 0x1ad5, 0x8aa0, 0xefda, 0x7131, 0x386a, 0x0, 0x0);
        gbc.writeMem(0x32d4, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x8a);
        EXPECT(gbc.b(),  0xef);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0x71);
        EXPECT(gbc.e(),  0x31);
        EXPECT(gbc.h(),  0x38);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0x1ad5);
        EXPECT(gbc.pc(), 0x32d6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C0 016D
        gbc.setState(0xd6d3, 0x8ee5, 0x6de0, 0x7148, 0x672c, 0xadbe, 0x0, 0x0);
        gbc.writeMem(0xd6d3, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x6d);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0xbe);
        EXPECT(gbc.sp(), 0x8ee5);
        EXPECT(gbc.pc(), 0xd6d5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd6d3), 0xcb);
        EXPECT(gbc.readMem(0xd6d4), 0xc0);
        // CB C0 016E
        gbc.setState(0xcd33, 0xfaa3, 0x4020, 0x6365, 0x7e32, 0xb07d, 0x1, 0x1);
        gbc.writeMem(0xcd33, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x40);
        EXPECT(gbc.b(),  0x63);
        EXPECT(gbc.c(),  0x65);
        EXPECT(gbc.d(),  0x7e);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0xfaa3);
        EXPECT(gbc.pc(), 0xcd35);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcd33), 0xcb);
        EXPECT(gbc.readMem(0xcd34), 0xc0);
        // CB C0 016F
        gbc.setState(0x7ac9, 0xa8f4, 0xa060, 0xc888, 0xf755, 0xe70, 0x1, 0x0);
        gbc.writeMem(0x7ac9, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0xc9);
        EXPECT(gbc.c(),  0x88);
        EXPECT(gbc.d(),  0xf7);
        EXPECT(gbc.e(),  0x55);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0x70);
        EXPECT(gbc.sp(), 0xa8f4);
        EXPECT(gbc.pc(), 0x7acb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C0 0170
        gbc.setState(0x9938, 0xa7b0, 0xff90, 0x6023, 0x339, 0x77eb, 0x1, 0x0);
        gbc.writeMem(0x9938, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0x3);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0x77);
        EXPECT(gbc.l(),  0xeb);
        EXPECT(gbc.sp(), 0xa7b0);
        EXPECT(gbc.pc(), 0x993a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9938), 0xcb);
        EXPECT(gbc.readMem(0x9939), 0xc0);
        // CB C0 0171
        gbc.setState(0x16a9, 0xb554, 0xba90, 0xa600, 0x883d, 0x429b, 0x1, 0x1);
        gbc.writeMem(0x16a9, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0xa7);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0x88);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0x42);
        EXPECT(gbc.l(),  0x9b);
        EXPECT(gbc.sp(), 0xb554);
        EXPECT(gbc.pc(), 0x16ab);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C0 0172
        gbc.setState(0x24bd, 0x9346, 0xc710, 0x132d, 0xbee1, 0x32ec, 0x0, 0x1);
        gbc.writeMem(0x24bd, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xc7);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0xe1);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0xec);
        EXPECT(gbc.sp(), 0x9346);
        EXPECT(gbc.pc(), 0x24bf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C0 0173
        gbc.setState(0xd7aa, 0xbcc6, 0x8120, 0x398a, 0x9851, 0x87a6, 0x1, 0x0);
        gbc.writeMem(0xd7aa, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x81);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0x98);
        EXPECT(gbc.e(),  0x51);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0xa6);
        EXPECT(gbc.sp(), 0xbcc6);
        EXPECT(gbc.pc(), 0xd7ac);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd7aa), 0xcb);
        EXPECT(gbc.readMem(0xd7ab), 0xc0);
        // CB C0 0174
        gbc.setState(0x1055, 0x71dd, 0x8810, 0xac14, 0xdaf5, 0xf362, 0x0, 0x0);
        gbc.writeMem(0x1055, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0xad);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0x71dd);
        EXPECT(gbc.pc(), 0x1057);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C0 0175
        gbc.setState(0xc92b, 0x699b, 0x4be0, 0x7c98, 0x98c9, 0x1381, 0x1, 0x0);
        gbc.writeMem(0xc92b, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0x7d);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0x98);
        EXPECT(gbc.e(),  0xc9);
        EXPECT(gbc.h(),  0x13);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0x699b);
        EXPECT(gbc.pc(), 0xc92d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc92b), 0xcb);
        EXPECT(gbc.readMem(0xc92c), 0xc0);
        // CB C0 0176
        gbc.setState(0xab46, 0xd0e3, 0x8fd0, 0x6006, 0x6b64, 0xcf97, 0x1, 0x0);
        gbc.writeMem(0xab46, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x8f);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0x64);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0x97);
        EXPECT(gbc.sp(), 0xd0e3);
        EXPECT(gbc.pc(), 0xab48);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xab46), 0xcb);
        EXPECT(gbc.readMem(0xab47), 0xc0);
        // CB C0 0177
        gbc.setState(0xc456, 0x8744, 0xa1a0, 0x1883, 0x811, 0x58e4, 0x1, 0x1);
        gbc.writeMem(0xc456, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa1);
        EXPECT(gbc.b(),  0x19);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0x58);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0x8744);
        EXPECT(gbc.pc(), 0xc458);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc456), 0xcb);
        EXPECT(gbc.readMem(0xc457), 0xc0);
        // CB C0 0178
        gbc.setState(0xb3b2, 0x706a, 0x91b0, 0xcb47, 0xc95b, 0x1d1a, 0x0, 0x0);
        gbc.writeMem(0xb3b2, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x91);
        EXPECT(gbc.b(),  0xcb);
        EXPECT(gbc.c(),  0x47);
        EXPECT(gbc.d(),  0xc9);
        EXPECT(gbc.e(),  0x5b);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0x706a);
        EXPECT(gbc.pc(), 0xb3b4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb3b2), 0xcb);
        EXPECT(gbc.readMem(0xb3b3), 0xc0);
        // CB C0 0179
        gbc.setState(0x32b5, 0xc309, 0xc050, 0x4a91, 0xfece, 0xbf5a, 0x0, 0x1);
        gbc.writeMem(0x32b5, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0x91);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0xce);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0xc309);
        EXPECT(gbc.pc(), 0x32b7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C0 017A
        gbc.setState(0x9bcb, 0xad0e, 0x5d10, 0x33a6, 0xe123, 0xb948, 0x0, 0x0);
        gbc.writeMem(0x9bcb, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x5d);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0xa6);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0x48);
        EXPECT(gbc.sp(), 0xad0e);
        EXPECT(gbc.pc(), 0x9bcd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9bcb), 0xcb);
        EXPECT(gbc.readMem(0x9bcc), 0xc0);
        // CB C0 017B
        gbc.setState(0x92d2, 0xbab7, 0x34a0, 0x95, 0xbdd1, 0xf976, 0x0, 0x0);
        gbc.writeMem(0x92d2, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x34);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0x95);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0xd1);
        EXPECT(gbc.h(),  0xf9);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0xbab7);
        EXPECT(gbc.pc(), 0x92d4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x92d2), 0xcb);
        EXPECT(gbc.readMem(0x92d3), 0xc0);
        // CB C0 017C
        gbc.setState(0xaa0e, 0x1ca5, 0x45b0, 0x6488, 0xb615, 0x4242, 0x1, 0x0);
        gbc.writeMem(0xaa0e, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0x88);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0x42);
        EXPECT(gbc.l(),  0x42);
        EXPECT(gbc.sp(), 0x1ca5);
        EXPECT(gbc.pc(), 0xaa10);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaa0e), 0xcb);
        EXPECT(gbc.readMem(0xaa0f), 0xc0);
        // CB C0 017D
        gbc.setState(0x1fab, 0x8f26, 0xfc10, 0x7e6c, 0xab24, 0x9edd, 0x0, 0x0);
        gbc.writeMem(0x1fab, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0x24);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0xdd);
        EXPECT(gbc.sp(), 0x8f26);
        EXPECT(gbc.pc(), 0x1fad);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C0 017E
        gbc.setState(0x562d, 0xd766, 0x95f0, 0xaeae, 0x2be8, 0x850e, 0x1, 0x1);
        gbc.writeMem(0x562d, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x95);
        EXPECT(gbc.b(),  0xaf);
        EXPECT(gbc.c(),  0xae);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0x85);
        EXPECT(gbc.l(),  0xe);
        EXPECT(gbc.sp(), 0xd766);
        EXPECT(gbc.pc(), 0x562f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C0 017F
        gbc.setState(0x70e5, 0xad03, 0x8fb0, 0x6f7, 0x7a2b, 0xfe6c, 0x0, 0x1);
        gbc.writeMem(0x70e5, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x8f);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0xad03);
        EXPECT(gbc.pc(), 0x70e7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C0 0180
        gbc.setState(0x6afa, 0x15e9, 0xb070, 0x9e30, 0xd4d1, 0x30d, 0x0, 0x1);
        gbc.writeMem(0x6afa, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0x9f);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0xd1);
        EXPECT(gbc.h(),  0x3);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0x15e9);
        EXPECT(gbc.pc(), 0x6afc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C0 0181
        gbc.setState(0x70db, 0x47ac, 0x9e50, 0x3b33, 0x9b6e, 0x8602, 0x1, 0x1);
        gbc.writeMem(0x70db, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0x3b);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0x6e);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0x47ac);
        EXPECT(gbc.pc(), 0x70dd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C0 0182
        gbc.setState(0xb282, 0xd25e, 0x3f80, 0xbb8f, 0x1c2f, 0xbce4, 0x0, 0x1);
        gbc.writeMem(0xb282, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0x8f);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0x2f);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0xd25e);
        EXPECT(gbc.pc(), 0xb284);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb282), 0xcb);
        EXPECT(gbc.readMem(0xb283), 0xc0);
        // CB C0 0183
        gbc.setState(0x9ac6, 0xeb9a, 0x5b40, 0xab98, 0x9fe0, 0x9e44, 0x0, 0x1);
        gbc.writeMem(0x9ac6, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0xab);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0xeb9a);
        EXPECT(gbc.pc(), 0x9ac8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9ac6), 0xcb);
        EXPECT(gbc.readMem(0x9ac7), 0xc0);
        // CB C0 0184
        gbc.setState(0x5439, 0xd042, 0x7160, 0xd5ad, 0x50f6, 0xa9ab, 0x1, 0x0);
        gbc.writeMem(0x5439, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x71);
        EXPECT(gbc.b(),  0xd5);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0x50);
        EXPECT(gbc.e(),  0xf6);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0xd042);
        EXPECT(gbc.pc(), 0x543b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C0 0185
        gbc.setState(0xbf5c, 0x4186, 0x1ed0, 0xe7a, 0xa8f, 0x13ee, 0x0, 0x0);
        gbc.writeMem(0xbf5c, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0xf);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0x8f);
        EXPECT(gbc.h(),  0x13);
        EXPECT(gbc.l(),  0xee);
        EXPECT(gbc.sp(), 0x4186);
        EXPECT(gbc.pc(), 0xbf5e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbf5c), 0xcb);
        EXPECT(gbc.readMem(0xbf5d), 0xc0);
        // CB C0 0186
        gbc.setState(0x61a7, 0x4d2, 0x4550, 0x1ff, 0xe00f, 0x38a7, 0x1, 0x0);
        gbc.writeMem(0x61a7, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0xff);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0x38);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0x4d2);
        EXPECT(gbc.pc(), 0x61a9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C0 0187
        gbc.setState(0x64fb, 0xd3a, 0xaa30, 0xe58d, 0x807e, 0xf13b, 0x0, 0x0);
        gbc.writeMem(0x64fb, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xaa);
        EXPECT(gbc.b(),  0xe5);
        EXPECT(gbc.c(),  0x8d);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0x7e);
        EXPECT(gbc.h(),  0xf1);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0xd3a);
        EXPECT(gbc.pc(), 0x64fd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C0 0188
        gbc.setState(0x3e0, 0xe7de, 0xef20, 0xcafe, 0xf032, 0x1d2d, 0x0, 0x1);
        gbc.writeMem(0x3e0, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xef);
        EXPECT(gbc.b(),  0xcb);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0xe7de);
        EXPECT(gbc.pc(), 0x3e2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C0 0189
        gbc.setState(0xc165, 0x43a8, 0xb380, 0x62c4, 0xd5f8, 0xa494, 0x1, 0x1);
        gbc.writeMem(0xc165, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb3);
        EXPECT(gbc.b(),  0x63);
        EXPECT(gbc.c(),  0xc4);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0xf8);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0x43a8);
        EXPECT(gbc.pc(), 0xc167);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc165), 0xcb);
        EXPECT(gbc.readMem(0xc166), 0xc0);
        // CB C0 018B
        gbc.setState(0xae61, 0x8481, 0x4100, 0x50f9, 0x652b, 0xb799, 0x0, 0x1);
        gbc.writeMem(0xae61, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0xf9);
        EXPECT(gbc.d(),  0x65);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0x99);
        EXPECT(gbc.sp(), 0x8481);
        EXPECT(gbc.pc(), 0xae63);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xae61), 0xcb);
        EXPECT(gbc.readMem(0xae62), 0xc0);
        // CB C0 018C
        gbc.setState(0x1d74, 0xd653, 0x1c10, 0xca7b, 0x56be, 0x18d7, 0x0, 0x0);
        gbc.writeMem(0x1d74, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x1c);
        EXPECT(gbc.b(),  0xcb);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0x56);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0x18);
        EXPECT(gbc.l(),  0xd7);
        EXPECT(gbc.sp(), 0xd653);
        EXPECT(gbc.pc(), 0x1d76);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C0 018E
        gbc.setState(0x67f9, 0x4984, 0x8ec0, 0x965d, 0x21b5, 0x2c95, 0x0, 0x1);
        gbc.writeMem(0x67f9, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0x97);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0x21);
        EXPECT(gbc.e(),  0xb5);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0x95);
        EXPECT(gbc.sp(), 0x4984);
        EXPECT(gbc.pc(), 0x67fb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C0 018F
        gbc.setState(0xc574, 0xa3c2, 0x2130, 0xb7f1, 0xc6d6, 0x3965, 0x1, 0x0);
        gbc.writeMem(0xc574, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0xd6);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0x65);
        EXPECT(gbc.sp(), 0xa3c2);
        EXPECT(gbc.pc(), 0xc576);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc574), 0xcb);
        EXPECT(gbc.readMem(0xc575), 0xc0);
        // CB C0 0190
        gbc.setState(0x8583, 0x5968, 0xbf0, 0xa258, 0x633c, 0x2dad, 0x1, 0x0);
        gbc.writeMem(0x8583, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0xa3);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0x63);
        EXPECT(gbc.e(),  0x3c);
        EXPECT(gbc.h(),  0x2d);
        EXPECT(gbc.l(),  0xad);
        EXPECT(gbc.sp(), 0x5968);
        EXPECT(gbc.pc(), 0x8585);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8583), 0xcb);
        EXPECT(gbc.readMem(0x8584), 0xc0);
        // CB C0 0191
        gbc.setState(0x7869, 0x5c10, 0x3ab0, 0xb325, 0xfb93, 0xe6a0, 0x1, 0x1);
        gbc.writeMem(0x7869, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0xb3);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0xfb);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0xe6);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0x5c10);
        EXPECT(gbc.pc(), 0x786b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C0 0192
        gbc.setState(0x8410, 0x132, 0xbda0, 0xf9b7, 0x943, 0x972d, 0x0, 0x0);
        gbc.writeMem(0x8410, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xbd);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0xb7);
        EXPECT(gbc.d(),  0x9);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0x132);
        EXPECT(gbc.pc(), 0x8412);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8410), 0xcb);
        EXPECT(gbc.readMem(0x8411), 0xc0);
        // CB C0 0193
        gbc.setState(0xb102, 0x695, 0x18d0, 0xabc3, 0x1200, 0xa4a6, 0x1, 0x0);
        gbc.writeMem(0xb102, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0xab);
        EXPECT(gbc.c(),  0xc3);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0xa6);
        EXPECT(gbc.sp(), 0x695);
        EXPECT(gbc.pc(), 0xb104);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb102), 0xcb);
        EXPECT(gbc.readMem(0xb103), 0xc0);
        // CB C0 0195
        gbc.setState(0x79ad, 0xbd67, 0x88a0, 0x31e8, 0x668c, 0x376b, 0x1, 0x1);
        gbc.writeMem(0x79ad, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0x66);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0x6b);
        EXPECT(gbc.sp(), 0xbd67);
        EXPECT(gbc.pc(), 0x79af);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C0 0196
        gbc.setState(0x4bf7, 0xc88c, 0x6c10, 0x843d, 0xcb04, 0x5d19, 0x1, 0x1);
        gbc.writeMem(0x4bf7, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0x3d);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0x4);
        EXPECT(gbc.h(),  0x5d);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0xc88c);
        EXPECT(gbc.pc(), 0x4bf9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C0 0197
        gbc.setState(0xe27, 0xab4b, 0x2aa0, 0xf8dc, 0x938a, 0x4086, 0x0, 0x0);
        gbc.writeMem(0xe27, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0xdc);
        EXPECT(gbc.d(),  0x93);
        EXPECT(gbc.e(),  0x8a);
        EXPECT(gbc.h(),  0x40);
        EXPECT(gbc.l(),  0x86);
        EXPECT(gbc.sp(), 0xab4b);
        EXPECT(gbc.pc(), 0xe29);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C0 0198
        gbc.setState(0xbf1c, 0x1f11, 0xac40, 0xa724, 0x914e, 0x9362, 0x1, 0x1);
        gbc.writeMem(0xbf1c, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xac);
        EXPECT(gbc.b(),  0xa7);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0x1f11);
        EXPECT(gbc.pc(), 0xbf1e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbf1c), 0xcb);
        EXPECT(gbc.readMem(0xbf1d), 0xc0);
        // CB C0 0199
        gbc.setState(0x2815, 0xc311, 0x8e30, 0x8e02, 0x9b4b, 0x7272, 0x1, 0x0);
        gbc.writeMem(0x2815, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0x8f);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0x72);
        EXPECT(gbc.sp(), 0xc311);
        EXPECT(gbc.pc(), 0x2817);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C0 019A
        gbc.setState(0x2f10, 0xe11a, 0xf9d0, 0x54c6, 0x7355, 0x3cea, 0x0, 0x1);
        gbc.writeMem(0x2f10, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf9);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0xc6);
        EXPECT(gbc.d(),  0x73);
        EXPECT(gbc.e(),  0x55);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0xe11a);
        EXPECT(gbc.pc(), 0x2f12);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C0 019C
        gbc.setState(0xe833, 0x79ca, 0xfdf0, 0x56de, 0xcf9f, 0xb6d4, 0x1, 0x1);
        gbc.writeMem(0xe833, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xfd);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0xcf);
        EXPECT(gbc.e(),  0x9f);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0x79ca);
        EXPECT(gbc.pc(), 0xe835);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe833), 0xcb);
        EXPECT(gbc.readMem(0xe834), 0xc0);
        // CB C0 019D
        gbc.setState(0x5326, 0x4136, 0x8fd0, 0x1134, 0x779d, 0xf7c6, 0x0, 0x1);
        gbc.writeMem(0x5326, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x8f);
        EXPECT(gbc.b(),  0x11);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0x9d);
        EXPECT(gbc.h(),  0xf7);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0x4136);
        EXPECT(gbc.pc(), 0x5328);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C0 019E
        gbc.setState(0x8e80, 0x8fc7, 0x4380, 0xbd8f, 0x9a61, 0xf63f, 0x1, 0x0);
        gbc.writeMem(0x8e80, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x43);
        EXPECT(gbc.b(),  0xbd);
        EXPECT(gbc.c(),  0x8f);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0x61);
        EXPECT(gbc.h(),  0xf6);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0x8fc7);
        EXPECT(gbc.pc(), 0x8e82);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8e80), 0xcb);
        EXPECT(gbc.readMem(0x8e81), 0xc0);
        // CB C0 019F
        gbc.setState(0x39fc, 0x7997, 0x69a0, 0x1deb, 0x36c7, 0x4031, 0x0, 0x1);
        gbc.writeMem(0x39fc, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0x40);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0x7997);
        EXPECT(gbc.pc(), 0x39fe);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C0 01A0
        gbc.setState(0xdf06, 0x7677, 0x750, 0x10bd, 0x30de, 0xeb55, 0x0, 0x1);
        gbc.writeMem(0xdf06, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0x11);
        EXPECT(gbc.c(),  0xbd);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0x55);
        EXPECT(gbc.sp(), 0x7677);
        EXPECT(gbc.pc(), 0xdf08);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdf06), 0xcb);
        EXPECT(gbc.readMem(0xdf07), 0xc0);
        // CB C0 01A1
        gbc.setState(0x41ab, 0x228b, 0xdc30, 0xf284, 0x331d, 0x9b8, 0x1, 0x1);
        gbc.writeMem(0x41ab, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xdc);
        EXPECT(gbc.b(),  0xf3);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0x33);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0x9);
        EXPECT(gbc.l(),  0xb8);
        EXPECT(gbc.sp(), 0x228b);
        EXPECT(gbc.pc(), 0x41ad);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C0 01A2
        gbc.setState(0x5afe, 0xef76, 0x50d0, 0x19f1, 0xec47, 0x56b7, 0x0, 0x1);
        gbc.writeMem(0x5afe, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0x19);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0x47);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0xb7);
        EXPECT(gbc.sp(), 0xef76);
        EXPECT(gbc.pc(), 0x5b00);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C0 01A3
        gbc.setState(0xa94c, 0xc690, 0xd370, 0xd0d9, 0x57ff, 0xd493, 0x0, 0x0);
        gbc.writeMem(0xa94c, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd3);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0xd9);
        EXPECT(gbc.d(),  0x57);
        EXPECT(gbc.e(),  0xff);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0x93);
        EXPECT(gbc.sp(), 0xc690);
        EXPECT(gbc.pc(), 0xa94e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa94c), 0xcb);
        EXPECT(gbc.readMem(0xa94d), 0xc0);
        // CB C0 01A4
        gbc.setState(0x5ff5, 0x6fd2, 0x98a0, 0xf380, 0x213f, 0x5b4a, 0x1, 0x0);
        gbc.writeMem(0x5ff5, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x98);
        EXPECT(gbc.b(),  0xf3);
        EXPECT(gbc.c(),  0x80);
        EXPECT(gbc.d(),  0x21);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0x5b);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0x6fd2);
        EXPECT(gbc.pc(), 0x5ff7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C0 01A5
        gbc.setState(0x9c6f, 0x749c, 0xfe50, 0x6bc5, 0xff2c, 0x4292, 0x0, 0x0);
        gbc.writeMem(0x9c6f, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0x6b);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0xff);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0x42);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0x749c);
        EXPECT(gbc.pc(), 0x9c71);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9c6f), 0xcb);
        EXPECT(gbc.readMem(0x9c70), 0xc0);
        // CB C0 01A6
        gbc.setState(0xed2f, 0x7d5b, 0xbc90, 0xef75, 0x413b, 0x3604, 0x0, 0x0);
        gbc.writeMem(0xed2f, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0xef);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0x41);
        EXPECT(gbc.e(),  0x3b);
        EXPECT(gbc.h(),  0x36);
        EXPECT(gbc.l(),  0x4);
        EXPECT(gbc.sp(), 0x7d5b);
        EXPECT(gbc.pc(), 0xed31);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xed2f), 0xcb);
        EXPECT(gbc.readMem(0xed30), 0xc0);
        // CB C0 01A7
        gbc.setState(0x66ef, 0xe6, 0x61c0, 0xb718, 0x9729, 0x9997, 0x0, 0x0);
        gbc.writeMem(0x66ef, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0x29);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0x97);
        EXPECT(gbc.sp(), 0xe6);
        EXPECT(gbc.pc(), 0x66f1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C0 01A8
        gbc.setState(0x5391, 0xc78e, 0xce40, 0x7cce, 0x6793, 0x66a4, 0x0, 0x1);
        gbc.writeMem(0x5391, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xce);
        EXPECT(gbc.b(),  0x7d);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0x66);
        EXPECT(gbc.l(),  0xa4);
        EXPECT(gbc.sp(), 0xc78e);
        EXPECT(gbc.pc(), 0x5393);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C0 01A9
        gbc.setState(0xc9d6, 0x4d41, 0x7ee0, 0x4957, 0xd00f, 0xa7bc, 0x0, 0x0);
        gbc.writeMem(0xc9d6, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0x49);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0x4d41);
        EXPECT(gbc.pc(), 0xc9d8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc9d6), 0xcb);
        EXPECT(gbc.readMem(0xc9d7), 0xc0);
        // CB C0 01AA
        gbc.setState(0xa6d, 0x277f, 0xd660, 0x6a5f, 0x9060, 0xd6dd, 0x1, 0x1);
        gbc.writeMem(0xa6d, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0x6b);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0x60);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0xdd);
        EXPECT(gbc.sp(), 0x277f);
        EXPECT(gbc.pc(), 0xa6f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C0 01AB
        gbc.setState(0x3d15, 0x839e, 0x5690, 0xc3fb, 0x31e6, 0x343f, 0x1, 0x1);
        gbc.writeMem(0x3d15, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0xc3);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0xe6);
        EXPECT(gbc.h(),  0x34);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0x839e);
        EXPECT(gbc.pc(), 0x3d17);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C0 01AC
        gbc.setState(0x9313, 0x5c86, 0xdff0, 0xead9, 0x4d5e, 0x3bba, 0x1, 0x0);
        gbc.writeMem(0x9313, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xdf);
        EXPECT(gbc.b(),  0xeb);
        EXPECT(gbc.c(),  0xd9);
        EXPECT(gbc.d(),  0x4d);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0x3b);
        EXPECT(gbc.l(),  0xba);
        EXPECT(gbc.sp(), 0x5c86);
        EXPECT(gbc.pc(), 0x9315);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9313), 0xcb);
        EXPECT(gbc.readMem(0x9314), 0xc0);
        // CB C0 01AD
        gbc.setState(0x2efe, 0x373, 0xfbf0, 0x9e3, 0x54d3, 0x5f2c, 0x1, 0x0);
        gbc.writeMem(0x2efe, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xfb);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0x54);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0x2c);
        EXPECT(gbc.sp(), 0x373);
        EXPECT(gbc.pc(), 0x2f00);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C0 01AE
        gbc.setState(0x2274, 0x6656, 0xd110, 0xf99b, 0x7eff, 0xf0a8, 0x1, 0x1);
        gbc.writeMem(0x2274, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd1);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0x9b);
        EXPECT(gbc.d(),  0x7e);
        EXPECT(gbc.e(),  0xff);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0xa8);
        EXPECT(gbc.sp(), 0x6656);
        EXPECT(gbc.pc(), 0x2276);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C0 01AF
        gbc.setState(0x772a, 0xb4d7, 0xf690, 0x8b6, 0xa76b, 0xeb3, 0x0, 0x0);
        gbc.writeMem(0x772a, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf6);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0xb6);
        EXPECT(gbc.d(),  0xa7);
        EXPECT(gbc.e(),  0x6b);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0xb3);
        EXPECT(gbc.sp(), 0xb4d7);
        EXPECT(gbc.pc(), 0x772c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C0 01B0
        gbc.setState(0xb777, 0x9d7a, 0x1850, 0xdf99, 0xd807, 0x22ba, 0x0, 0x0);
        gbc.writeMem(0xb777, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0xdf);
        EXPECT(gbc.c(),  0x99);
        EXPECT(gbc.d(),  0xd8);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0x22);
        EXPECT(gbc.l(),  0xba);
        EXPECT(gbc.sp(), 0x9d7a);
        EXPECT(gbc.pc(), 0xb779);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb777), 0xcb);
        EXPECT(gbc.readMem(0xb778), 0xc0);
        // CB C0 01B1
        gbc.setState(0x32be, 0x7710, 0xcb60, 0x6d2, 0xd906, 0x9f46, 0x1, 0x1);
        gbc.writeMem(0x32be, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xcb);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0xd9);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0x46);
        EXPECT(gbc.sp(), 0x7710);
        EXPECT(gbc.pc(), 0x32c0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C0 01B2
        gbc.setState(0x85a3, 0x669b, 0x4f0, 0xaa5c, 0xbc38, 0x87e8, 0x1, 0x0);
        gbc.writeMem(0x85a3, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x4);
        EXPECT(gbc.b(),  0xab);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0xbc);
        EXPECT(gbc.e(),  0x38);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0xe8);
        EXPECT(gbc.sp(), 0x669b);
        EXPECT(gbc.pc(), 0x85a5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x85a3), 0xcb);
        EXPECT(gbc.readMem(0x85a4), 0xc0);
        // CB C0 01B3
        gbc.setState(0x40db, 0x8326, 0xbd40, 0xdcce, 0x18cc, 0xf1cc, 0x1, 0x1);
        gbc.writeMem(0x40db, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xbd);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0xcc);
        EXPECT(gbc.h(),  0xf1);
        EXPECT(gbc.l(),  0xcc);
        EXPECT(gbc.sp(), 0x8326);
        EXPECT(gbc.pc(), 0x40dd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C0 01B4
        gbc.setState(0xa1ee, 0x483c, 0x1100, 0x2c5, 0x4bb, 0x7e1, 0x1, 0x1);
        gbc.writeMem(0xa1ee, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x11);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0xbb);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0x483c);
        EXPECT(gbc.pc(), 0xa1f0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa1ee), 0xcb);
        EXPECT(gbc.readMem(0xa1ef), 0xc0);
        // CB C0 01B5
        gbc.setState(0xc9f2, 0x931b, 0x6580, 0xc6dd, 0x5e43, 0xda48, 0x1, 0x1);
        gbc.writeMem(0xc9f2, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x65);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0xdd);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0x48);
        EXPECT(gbc.sp(), 0x931b);
        EXPECT(gbc.pc(), 0xc9f4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc9f2), 0xcb);
        EXPECT(gbc.readMem(0xc9f3), 0xc0);
        // CB C0 01B6
        gbc.setState(0x2361, 0x59d, 0x5ae0, 0x8a99, 0x16f5, 0xf635, 0x0, 0x1);
        gbc.writeMem(0x2361, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0x99);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0xf6);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0x59d);
        EXPECT(gbc.pc(), 0x2363);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C0 01B7
        gbc.setState(0x7908, 0xb63d, 0x3020, 0x1bfc, 0xc4fe, 0xc311, 0x0, 0x1);
        gbc.writeMem(0x7908, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0xc4);
        EXPECT(gbc.e(),  0xfe);
        EXPECT(gbc.h(),  0xc3);
        EXPECT(gbc.l(),  0x11);
        EXPECT(gbc.sp(), 0xb63d);
        EXPECT(gbc.pc(), 0x790a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C0 01B8
        gbc.setState(0x4c86, 0x228c, 0x5510, 0xe013, 0xb05a, 0x581f, 0x1, 0x1);
        gbc.writeMem(0x4c86, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0x58);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0x228c);
        EXPECT(gbc.pc(), 0x4c88);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C0 01B9
        gbc.setState(0xef31, 0xcf98, 0x4470, 0x5ec1, 0x3051, 0xe80f, 0x0, 0x0);
        gbc.writeMem(0xef31, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0xc1);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0x51);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0xf);
        EXPECT(gbc.sp(), 0xcf98);
        EXPECT(gbc.pc(), 0xef33);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xef31), 0xcb);
        EXPECT(gbc.readMem(0xef32), 0xc0);
        // CB C0 01BA
        gbc.setState(0xbd6c, 0xb5be, 0xfaa0, 0xb2a8, 0x402b, 0x51e2, 0x1, 0x1);
        gbc.writeMem(0xbd6c, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xfa);
        EXPECT(gbc.b(),  0xb3);
        EXPECT(gbc.c(),  0xa8);
        EXPECT(gbc.d(),  0x40);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0xb5be);
        EXPECT(gbc.pc(), 0xbd6e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbd6c), 0xcb);
        EXPECT(gbc.readMem(0xbd6d), 0xc0);
        // CB C0 01BB
        gbc.setState(0x4087, 0x61fd, 0x31b0, 0xd236, 0x2523, 0x879f, 0x0, 0x1);
        gbc.writeMem(0x4087, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x31);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0x25);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0x9f);
        EXPECT(gbc.sp(), 0x61fd);
        EXPECT(gbc.pc(), 0x4089);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C0 01BC
        gbc.setState(0x7aa5, 0xa3c, 0x40e0, 0x825e, 0x326c, 0xd191, 0x1, 0x1);
        gbc.writeMem(0x7aa5, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x40);
        EXPECT(gbc.b(),  0x83);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0xa3c);
        EXPECT(gbc.pc(), 0x7aa7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C0 01BD
        gbc.setState(0x75d3, 0x8639, 0xdf00, 0xbf61, 0xad56, 0x8948, 0x1, 0x1);
        gbc.writeMem(0x75d3, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xdf);
        EXPECT(gbc.b(),  0xbf);
        EXPECT(gbc.c(),  0x61);
        EXPECT(gbc.d(),  0xad);
        EXPECT(gbc.e(),  0x56);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0x48);
        EXPECT(gbc.sp(), 0x8639);
        EXPECT(gbc.pc(), 0x75d5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C0 01BE
        gbc.setState(0x9719, 0xc729, 0xe420, 0x65b5, 0xb76a, 0x1566, 0x1, 0x0);
        gbc.writeMem(0x9719, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe4);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0x6a);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0xc729);
        EXPECT(gbc.pc(), 0x971b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9719), 0xcb);
        EXPECT(gbc.readMem(0x971a), 0xc0);
        // CB C0 01BF
        gbc.setState(0xb5cb, 0xf525, 0x4d50, 0xfebd, 0xbef1, 0xbd0a, 0x1, 0x1);
        gbc.writeMem(0xb5cb, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x4d);
        EXPECT(gbc.b(),  0xff);
        EXPECT(gbc.c(),  0xbd);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0xa);
        EXPECT(gbc.sp(), 0xf525);
        EXPECT(gbc.pc(), 0xb5cd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb5cb), 0xcb);
        EXPECT(gbc.readMem(0xb5cc), 0xc0);
        // CB C0 01C0
        gbc.setState(0xd990, 0x6b2f, 0x5030, 0x8aca, 0x1d5f, 0xa7f, 0x0, 0x0);
        gbc.writeMem(0xd990, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0xa);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0x6b2f);
        EXPECT(gbc.pc(), 0xd992);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd990), 0xcb);
        EXPECT(gbc.readMem(0xd991), 0xc0);
        // CB C0 01C1
        gbc.setState(0xcc3e, 0xb34e, 0x1e50, 0x7add, 0xfb91, 0x172, 0x1, 0x0);
        gbc.writeMem(0xcc3e, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0x7b);
        EXPECT(gbc.c(),  0xdd);
        EXPECT(gbc.d(),  0xfb);
        EXPECT(gbc.e(),  0x91);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0x72);
        EXPECT(gbc.sp(), 0xb34e);
        EXPECT(gbc.pc(), 0xcc40);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcc3e), 0xcb);
        EXPECT(gbc.readMem(0xcc3f), 0xc0);
        // CB C0 01C3
        gbc.setState(0xbc5b, 0x9f4a, 0x82b0, 0x901, 0x2fa1, 0xdb32, 0x1, 0x0);
        gbc.writeMem(0xbc5b, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x82);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0xa1);
        EXPECT(gbc.h(),  0xdb);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0x9f4a);
        EXPECT(gbc.pc(), 0xbc5d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbc5b), 0xcb);
        EXPECT(gbc.readMem(0xbc5c), 0xc0);
        // CB C0 01C4
        gbc.setState(0x6552, 0xc2ee, 0x7d0, 0x6071, 0x748c, 0xdbdd, 0x0, 0x1);
        gbc.writeMem(0x6552, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0x74);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0xdb);
        EXPECT(gbc.l(),  0xdd);
        EXPECT(gbc.sp(), 0xc2ee);
        EXPECT(gbc.pc(), 0x6554);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C0 01C5
        gbc.setState(0xab8f, 0x7e4c, 0xcb20, 0x7a53, 0x767c, 0x4ca0, 0x0, 0x1);
        gbc.writeMem(0xab8f, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xcb);
        EXPECT(gbc.b(),  0x7b);
        EXPECT(gbc.c(),  0x53);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0x7e4c);
        EXPECT(gbc.pc(), 0xab91);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xab8f), 0xcb);
        EXPECT(gbc.readMem(0xab90), 0xc0);
        // CB C0 01C6
        gbc.setState(0x92c, 0x5926, 0xf6c0, 0xb10f, 0x45f0, 0xf526, 0x1, 0x1);
        gbc.writeMem(0x92c, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf6);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0x5926);
        EXPECT(gbc.pc(), 0x92e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C0 01C7
        gbc.setState(0xee89, 0x76d, 0x7f0, 0x8ed4, 0x8aa4, 0xb2cf, 0x1, 0x0);
        gbc.writeMem(0xee89, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0x8f);
        EXPECT(gbc.c(),  0xd4);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0xa4);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0xcf);
        EXPECT(gbc.sp(), 0x76d);
        EXPECT(gbc.pc(), 0xee8b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xee89), 0xcb);
        EXPECT(gbc.readMem(0xee8a), 0xc0);
        // CB C0 01C8
        gbc.setState(0x3127, 0x77d7, 0x4f70, 0xeb66, 0xf1e6, 0x29b2, 0x0, 0x0);
        gbc.writeMem(0x3127, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0xeb);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0xe6);
        EXPECT(gbc.h(),  0x29);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0x77d7);
        EXPECT(gbc.pc(), 0x3129);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C0 01C9
        gbc.setState(0x256, 0xf0b2, 0xebd0, 0x376, 0xbb15, 0xd27a, 0x0, 0x0);
        gbc.writeMem(0x256, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0xd2);
        EXPECT(gbc.l(),  0x7a);
        EXPECT(gbc.sp(), 0xf0b2);
        EXPECT(gbc.pc(), 0x258);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C0 01CA
        gbc.setState(0x56d2, 0xfc2b, 0xc600, 0x5d7d, 0xfbcf, 0xe063, 0x0, 0x1);
        gbc.writeMem(0x56d2, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xc6);
        EXPECT(gbc.b(),  0x5d);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0xfb);
        EXPECT(gbc.e(),  0xcf);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0x63);
        EXPECT(gbc.sp(), 0xfc2b);
        EXPECT(gbc.pc(), 0x56d4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C0 01CB
        gbc.setState(0xe5e0, 0xff2c, 0xcd10, 0x5fe5, 0x9a41, 0x4579, 0x0, 0x1);
        gbc.writeMem(0xe5e0, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0x41);
        EXPECT(gbc.h(),  0x45);
        EXPECT(gbc.l(),  0x79);
        EXPECT(gbc.sp(), 0xff2c);
        EXPECT(gbc.pc(), 0xe5e2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe5e0), 0xcb);
        EXPECT(gbc.readMem(0xe5e1), 0xc0);
        // CB C0 01CC
        gbc.setState(0x776d, 0xb92f, 0xa7b0, 0x4df7, 0x1566, 0x4f64, 0x1, 0x1);
        gbc.writeMem(0x776d, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa7);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0x15);
        EXPECT(gbc.e(),  0x66);
        EXPECT(gbc.h(),  0x4f);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0xb92f);
        EXPECT(gbc.pc(), 0x776f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C0 01CD
        gbc.setState(0x39cb, 0xc961, 0xb9a0, 0x8001, 0x97cf, 0xe16, 0x1, 0x1);
        gbc.writeMem(0x39cb, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0x81);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0xcf);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0x16);
        EXPECT(gbc.sp(), 0xc961);
        EXPECT(gbc.pc(), 0x39cd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C0 01CE
        gbc.setState(0x3830, 0x8fb4, 0x18e0, 0xdcce, 0x2d01, 0x24c7, 0x0, 0x0);
        gbc.writeMem(0x3830, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0xc7);
        EXPECT(gbc.sp(), 0x8fb4);
        EXPECT(gbc.pc(), 0x3832);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C0 01CF
        gbc.setState(0xdb64, 0x88d7, 0xc530, 0x5b07, 0x457c, 0xf750, 0x1, 0x0);
        gbc.writeMem(0xdb64, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xc5);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0xf7);
        EXPECT(gbc.l(),  0x50);
        EXPECT(gbc.sp(), 0x88d7);
        EXPECT(gbc.pc(), 0xdb66);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdb64), 0xcb);
        EXPECT(gbc.readMem(0xdb65), 0xc0);
        // CB C0 01D0
        gbc.setState(0x5fa4, 0x26fb, 0xc3f0, 0xbc6d, 0xab51, 0x9ae1, 0x1, 0x1);
        gbc.writeMem(0x5fa4, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xc3);
        EXPECT(gbc.b(),  0xbd);
        EXPECT(gbc.c(),  0x6d);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0x51);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0x26fb);
        EXPECT(gbc.pc(), 0x5fa6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C0 01D1
        gbc.setState(0xec0a, 0x3a87, 0x2a0, 0xfaf5, 0x3aa1, 0xaf1, 0x0, 0x0);
        gbc.writeMem(0xec0a, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0xfb);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0xa1);
        EXPECT(gbc.h(),  0xa);
        EXPECT(gbc.l(),  0xf1);
        EXPECT(gbc.sp(), 0x3a87);
        EXPECT(gbc.pc(), 0xec0c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xec0a), 0xcb);
        EXPECT(gbc.readMem(0xec0b), 0xc0);
        // CB C0 01D2
        gbc.setState(0x4206, 0xeabd, 0xbbf0, 0x96ab, 0x5ca7, 0xccf1, 0x0, 0x1);
        gbc.writeMem(0x4206, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0x97);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0x5c);
        EXPECT(gbc.e(),  0xa7);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0xf1);
        EXPECT(gbc.sp(), 0xeabd);
        EXPECT(gbc.pc(), 0x4208);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C0 01D3
        gbc.setState(0x3d5d, 0xf032, 0x2d50, 0x2b73, 0xe479, 0xb1b2, 0x1, 0x0);
        gbc.writeMem(0x3d5d, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0x2b);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0xf032);
        EXPECT(gbc.pc(), 0x3d5f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C0 01D4
        gbc.setState(0x3416, 0x61e7, 0xb1d0, 0x6e79, 0xe387, 0xa8f6, 0x1, 0x1);
        gbc.writeMem(0x3416, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0x6f);
        EXPECT(gbc.c(),  0x79);
        EXPECT(gbc.d(),  0xe3);
        EXPECT(gbc.e(),  0x87);
        EXPECT(gbc.h(),  0xa8);
        EXPECT(gbc.l(),  0xf6);
        EXPECT(gbc.sp(), 0x61e7);
        EXPECT(gbc.pc(), 0x3418);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C0 01D5
        gbc.setState(0x8623, 0x5dc1, 0xe300, 0x91d3, 0x6f98, 0x626e, 0x1, 0x0);
        gbc.writeMem(0x8623, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0xd3);
        EXPECT(gbc.d(),  0x6f);
        EXPECT(gbc.e(),  0x98);
        EXPECT(gbc.h(),  0x62);
        EXPECT(gbc.l(),  0x6e);
        EXPECT(gbc.sp(), 0x5dc1);
        EXPECT(gbc.pc(), 0x8625);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8623), 0xcb);
        EXPECT(gbc.readMem(0x8624), 0xc0);
        // CB C0 01D6
        gbc.setState(0xc4bb, 0x88fd, 0x3400, 0x67f1, 0xb8bd, 0x547c, 0x0, 0x0);
        gbc.writeMem(0xc4bb, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x34);
        EXPECT(gbc.b(),  0x67);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0xb8);
        EXPECT(gbc.e(),  0xbd);
        EXPECT(gbc.h(),  0x54);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0x88fd);
        EXPECT(gbc.pc(), 0xc4bd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc4bb), 0xcb);
        EXPECT(gbc.readMem(0xc4bc), 0xc0);
        // CB C0 01D7
        gbc.setState(0x3258, 0xfd17, 0x1050, 0x7c9a, 0x86fd, 0x90d7, 0x0, 0x1);
        gbc.writeMem(0x3258, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x10);
        EXPECT(gbc.b(),  0x7d);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0xfd);
        EXPECT(gbc.h(),  0x90);
        EXPECT(gbc.l(),  0xd7);
        EXPECT(gbc.sp(), 0xfd17);
        EXPECT(gbc.pc(), 0x325a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C0 01D8
        gbc.setState(0x8bce, 0x7765, 0x2bf0, 0xafe5, 0x9826, 0x8216, 0x0, 0x0);
        gbc.writeMem(0x8bce, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x2b);
        EXPECT(gbc.b(),  0xaf);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0x98);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0x16);
        EXPECT(gbc.sp(), 0x7765);
        EXPECT(gbc.pc(), 0x8bd0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8bce), 0xcb);
        EXPECT(gbc.readMem(0x8bcf), 0xc0);
        // CB C0 01D9
        gbc.setState(0x8ce, 0xa6c7, 0x620, 0xc70e, 0x644, 0x14fb, 0x1, 0x1);
        gbc.writeMem(0x8ce, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0x6);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0x14);
        EXPECT(gbc.l(),  0xfb);
        EXPECT(gbc.sp(), 0xa6c7);
        EXPECT(gbc.pc(), 0x8d0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C0 01DA
        gbc.setState(0x2b9a, 0xf489, 0x9a30, 0x1fda, 0xd082, 0x6774, 0x0, 0x1);
        gbc.writeMem(0x2b9a, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x9a);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0x82);
        EXPECT(gbc.h(),  0x67);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0xf489);
        EXPECT(gbc.pc(), 0x2b9c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C0 01DB
        gbc.setState(0x9570, 0x2c1d, 0xc5a0, 0xe18d, 0x1f40, 0x28db, 0x1, 0x0);
        gbc.writeMem(0x9570, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xc5);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0x8d);
        EXPECT(gbc.d(),  0x1f);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0x28);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0x2c1d);
        EXPECT(gbc.pc(), 0x9572);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9570), 0xcb);
        EXPECT(gbc.readMem(0x9571), 0xc0);
        // CB C0 01DC
        gbc.setState(0x63c8, 0xf7ad, 0xdbd0, 0xe39, 0x980c, 0x7c70, 0x1, 0x1);
        gbc.writeMem(0x63c8, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xdb);
        EXPECT(gbc.b(),  0xf);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0x98);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0x7c);
        EXPECT(gbc.l(),  0x70);
        EXPECT(gbc.sp(), 0xf7ad);
        EXPECT(gbc.pc(), 0x63ca);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C0 01DD
        gbc.setState(0x7be2, 0x7f0a, 0xd020, 0x2f59, 0xcd8e, 0x25e, 0x0, 0x1);
        gbc.writeMem(0x7be2, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd0);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0x2);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0x7f0a);
        EXPECT(gbc.pc(), 0x7be4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C0 01DE
        gbc.setState(0x6269, 0x6f97, 0x300, 0xb95e, 0xb379, 0xdc85, 0x1, 0x0);
        gbc.writeMem(0x6269, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0xb9);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0xb3);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0x85);
        EXPECT(gbc.sp(), 0x6f97);
        EXPECT(gbc.pc(), 0x626b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C0 01DF
        gbc.setState(0xaa23, 0x6772, 0x6580, 0xb5db, 0xfce5, 0x745a, 0x1, 0x0);
        gbc.writeMem(0xaa23, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x65);
        EXPECT(gbc.b(),  0xb5);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0x74);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0x6772);
        EXPECT(gbc.pc(), 0xaa25);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaa23), 0xcb);
        EXPECT(gbc.readMem(0xaa24), 0xc0);
        // CB C0 01E0
        gbc.setState(0x98ea, 0xef54, 0x660, 0xf741, 0xdbed, 0xa369, 0x0, 0x1);
        gbc.writeMem(0x98ea, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0xed);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0xef54);
        EXPECT(gbc.pc(), 0x98ec);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x98ea), 0xcb);
        EXPECT(gbc.readMem(0x98eb), 0xc0);
        // CB C0 01E1
        gbc.setState(0x68e3, 0x422b, 0x7030, 0x212d, 0x6c21, 0x1291, 0x1, 0x0);
        gbc.writeMem(0x68e3, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x70);
        EXPECT(gbc.b(),  0x21);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0x6c);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0x422b);
        EXPECT(gbc.pc(), 0x68e5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C0 01E2
        gbc.setState(0x41, 0x966, 0xa850, 0xcd86, 0x7165, 0x55c3, 0x1, 0x1);
        gbc.writeMem(0x41, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa8);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0x71);
        EXPECT(gbc.e(),  0x65);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0x966);
        EXPECT(gbc.pc(), 0x43);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C0 01E3
        gbc.setState(0x6611, 0xba6c, 0x7e60, 0x2a67, 0x91e5, 0xb9b5, 0x1, 0x1);
        gbc.writeMem(0x6611, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0x2b);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0xba6c);
        EXPECT(gbc.pc(), 0x6613);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C0 01E4
        gbc.setState(0x74d8, 0xb31a, 0x5a70, 0x69e6, 0x49a0, 0x2653, 0x0, 0x1);
        gbc.writeMem(0x74d8, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0x69);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0xa0);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0xb31a);
        EXPECT(gbc.pc(), 0x74da);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C0 01E5
        gbc.setState(0x6f88, 0xdfbe, 0x1e30, 0x1f7d, 0x8448, 0xffb3, 0x0, 0x1);
        gbc.writeMem(0x6f88, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0xff);
        EXPECT(gbc.l(),  0xb3);
        EXPECT(gbc.sp(), 0xdfbe);
        EXPECT(gbc.pc(), 0x6f8a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C0 01E6
        gbc.setState(0xc88, 0x31bd, 0x7a70, 0x9bd0, 0x48dc, 0xf9f3, 0x1, 0x0);
        gbc.writeMem(0xc88, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x7a);
        EXPECT(gbc.b(),  0x9b);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0x48);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0xf9);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0x31bd);
        EXPECT(gbc.pc(), 0xc8a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C0 01E7
        gbc.setState(0x4fa5, 0x64f, 0x1b40, 0x706e, 0xc810, 0x6f81, 0x1, 0x0);
        gbc.writeMem(0x4fa5, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0x6f);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0x64f);
        EXPECT(gbc.pc(), 0x4fa7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C0 01E8
        gbc.setState(0x1157, 0xce4b, 0xb7f0, 0x8509, 0x8415, 0x51c8, 0x0, 0x1);
        gbc.writeMem(0x1157, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0xce4b);
        EXPECT(gbc.pc(), 0x1159);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C0 01E9
        gbc.setState(0x5fb1, 0x255a, 0x4210, 0xef5f, 0x1873, 0x6845, 0x1, 0x0);
        gbc.writeMem(0x5fb1, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x42);
        EXPECT(gbc.b(),  0xef);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0x68);
        EXPECT(gbc.l(),  0x45);
        EXPECT(gbc.sp(), 0x255a);
        EXPECT(gbc.pc(), 0x5fb3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C0 01EB
        gbc.setState(0x71fe, 0x9a49, 0x17d0, 0x8b3f, 0xf7b0, 0x4fdb, 0x0, 0x0);
        gbc.writeMem(0x71fe, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x17);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0x3f);
        EXPECT(gbc.d(),  0xf7);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0x4f);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0x9a49);
        EXPECT(gbc.pc(), 0x7200);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C0 01EC
        gbc.setState(0xba90, 0x368b, 0x8310, 0x4832, 0xe626, 0xa9fd, 0x0, 0x1);
        gbc.writeMem(0xba90, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x83);
        EXPECT(gbc.b(),  0x49);
        EXPECT(gbc.c(),  0x32);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0x368b);
        EXPECT(gbc.pc(), 0xba92);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xba90), 0xcb);
        EXPECT(gbc.readMem(0xba91), 0xc0);
        // CB C0 01ED
        gbc.setState(0x345, 0xb6fa, 0x870, 0x118a, 0xa, 0x5d1a, 0x1, 0x1);
        gbc.writeMem(0x345, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0x11);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0x5d);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0xb6fa);
        EXPECT(gbc.pc(), 0x347);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C0 01EE
        gbc.setState(0x9174, 0x7572, 0x6e60, 0x8369, 0x4d4a, 0x5b96, 0x1, 0x0);
        gbc.writeMem(0x9174, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0x83);
        EXPECT(gbc.c(),  0x69);
        EXPECT(gbc.d(),  0x4d);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0x5b);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0x7572);
        EXPECT(gbc.pc(), 0x9176);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9174), 0xcb);
        EXPECT(gbc.readMem(0x9175), 0xc0);
        // CB C0 01EF
        gbc.setState(0x1afb, 0x37de, 0x3730, 0x891e, 0x5d5c, 0x6583, 0x1, 0x1);
        gbc.writeMem(0x1afb, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0x5d);
        EXPECT(gbc.e(),  0x5c);
        EXPECT(gbc.h(),  0x65);
        EXPECT(gbc.l(),  0x83);
        EXPECT(gbc.sp(), 0x37de);
        EXPECT(gbc.pc(), 0x1afd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C0 01F1
        gbc.setState(0xc7d3, 0x895e, 0x9240, 0xcff7, 0x6b41, 0x411a, 0x0, 0x0);
        gbc.writeMem(0xc7d3, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0xcf);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0x41);
        EXPECT(gbc.h(),  0x41);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0x895e);
        EXPECT(gbc.pc(), 0xc7d5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc7d3), 0xcb);
        EXPECT(gbc.readMem(0xc7d4), 0xc0);
        // CB C0 01F3
        gbc.setState(0xbfd0, 0x35cb, 0xa8f0, 0x4a44, 0x967a, 0xe9f9, 0x0, 0x0);
        gbc.writeMem(0xbfd0, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa8);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0x7a);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0x35cb);
        EXPECT(gbc.pc(), 0xbfd2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbfd0), 0xcb);
        EXPECT(gbc.readMem(0xbfd1), 0xc0);
        // CB C0 01F4
        gbc.setState(0x573d, 0xef25, 0x6ce0, 0xd912, 0x2dcb, 0xeb99, 0x1, 0x0);
        gbc.writeMem(0x573d, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0xcb);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0x99);
        EXPECT(gbc.sp(), 0xef25);
        EXPECT(gbc.pc(), 0x573f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C0 01F5
        gbc.setState(0x101, 0x2e87, 0xc780, 0xc9e, 0x6b71, 0xe83, 0x0, 0x0);
        gbc.writeMem(0x101, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xc7);
        EXPECT(gbc.b(),  0xd);
        EXPECT(gbc.c(),  0x9e);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0x71);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0x83);
        EXPECT(gbc.sp(), 0x2e87);
        EXPECT(gbc.pc(), 0x103);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C0 01F6
        gbc.setState(0x1893, 0xd688, 0x39f0, 0x1d62, 0xcc79, 0xf89e, 0x0, 0x0);
        gbc.writeMem(0x1893, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0xd688);
        EXPECT(gbc.pc(), 0x1895);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C0 01F7
        gbc.setState(0x7053, 0xf634, 0xe130, 0x2ecb, 0xdb84, 0xb789, 0x0, 0x0);
        gbc.writeMem(0x7053, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe1);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0x84);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0xf634);
        EXPECT(gbc.pc(), 0x7055);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C0 01F8
        gbc.setState(0x9c68, 0x6976, 0x54d0, 0x61dc, 0xb7df, 0x8557, 0x1, 0x0);
        gbc.writeMem(0x9c68, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x54);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0xdc);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0xdf);
        EXPECT(gbc.h(),  0x85);
        EXPECT(gbc.l(),  0x57);
        EXPECT(gbc.sp(), 0x6976);
        EXPECT(gbc.pc(), 0x9c6a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9c68), 0xcb);
        EXPECT(gbc.readMem(0x9c69), 0xc0);
        // CB C0 01F9
        gbc.setState(0xa4e6, 0xc304, 0x1860, 0xb48, 0x74c1, 0x3a13, 0x0, 0x1);
        gbc.writeMem(0xa4e6, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0x74);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0x3a);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0xc304);
        EXPECT(gbc.pc(), 0xa4e8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa4e6), 0xcb);
        EXPECT(gbc.readMem(0xa4e7), 0xc0);
        // CB C0 01FA
        gbc.setState(0xe49d, 0x8da1, 0xda0, 0x2d8c, 0x8e18, 0x9921, 0x0, 0x0);
        gbc.writeMem(0xe49d, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd);
        EXPECT(gbc.b(),  0x2d);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0x18);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0x8da1);
        EXPECT(gbc.pc(), 0xe49f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe49d), 0xcb);
        EXPECT(gbc.readMem(0xe49e), 0xc0);
        // CB C0 01FB
        gbc.setState(0x97fe, 0x383e, 0x430, 0x4e6e, 0xdecb, 0xf254, 0x0, 0x1);
        gbc.writeMem(0x97fe, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x4);
        EXPECT(gbc.b(),  0x4f);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0xcb);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0x54);
        EXPECT(gbc.sp(), 0x383e);
        EXPECT(gbc.pc(), 0x9800);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x97fe), 0xcb);
        EXPECT(gbc.readMem(0x97ff), 0xc0);
        // CB C0 01FC
        gbc.setState(0x950a, 0x7e6e, 0x8450, 0x2226, 0xe98e, 0x8351, 0x0, 0x1);
        gbc.writeMem(0x950a, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x84);
        EXPECT(gbc.b(),  0x23);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0xe9);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0x7e6e);
        EXPECT(gbc.pc(), 0x950c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x950a), 0xcb);
        EXPECT(gbc.readMem(0x950b), 0xc0);
        // CB C0 01FD
        gbc.setState(0x896d, 0xc45c, 0xb2a0, 0x571, 0x1734, 0x3a16, 0x1, 0x1);
        gbc.writeMem(0x896d, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb2);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0x17);
        EXPECT(gbc.e(),  0x34);
        EXPECT(gbc.h(),  0x3a);
        EXPECT(gbc.l(),  0x16);
        EXPECT(gbc.sp(), 0xc45c);
        EXPECT(gbc.pc(), 0x896f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x896d), 0xcb);
        EXPECT(gbc.readMem(0x896e), 0xc0);
        // CB C0 01FE
        gbc.setState(0xdf56, 0xf7e0, 0x9470, 0x4ece, 0xe791, 0xc026, 0x1, 0x0);
        gbc.writeMem(0xdf56, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x94);
        EXPECT(gbc.b(),  0x4f);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0xe7);
        EXPECT(gbc.e(),  0x91);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0xf7e0);
        EXPECT(gbc.pc(), 0xdf58);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdf56), 0xcb);
        EXPECT(gbc.readMem(0xdf57), 0xc0);
        // CB C0 01FF
        gbc.setState(0xea58, 0x36ef, 0x2aa0, 0xe0b7, 0x160, 0x7a8a, 0x0, 0x0);
        gbc.writeMem(0xea58, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0xb7);
        EXPECT(gbc.d(),  0x1);
        EXPECT(gbc.e(),  0x60);
        EXPECT(gbc.h(),  0x7a);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0x36ef);
        EXPECT(gbc.pc(), 0xea5a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xea58), 0xcb);
        EXPECT(gbc.readMem(0xea59), 0xc0);
        // CB C0 0200
        gbc.setState(0xd0c6, 0x9dfa, 0x11c0, 0xa154, 0xdcc9, 0xcc2e, 0x0, 0x0);
        gbc.writeMem(0xd0c6, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x11);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0xc9);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0x9dfa);
        EXPECT(gbc.pc(), 0xd0c8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd0c6), 0xcb);
        EXPECT(gbc.readMem(0xd0c7), 0xc0);
        // CB C0 0201
        gbc.setState(0x1b90, 0xff, 0x5590, 0xfc44, 0x678a, 0x96dd, 0x1, 0x0);
        gbc.writeMem(0x1b90, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0x8a);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0xdd);
        EXPECT(gbc.sp(), 0xff);
        EXPECT(gbc.pc(), 0x1b92);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C0 0202
        gbc.setState(0xaf75, 0x4f29, 0xeea0, 0x46b, 0x240b, 0xc810, 0x1, 0x0);
        gbc.writeMem(0xaf75, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xee);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0x6b);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0xb);
        EXPECT(gbc.h(),  0xc8);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0x4f29);
        EXPECT(gbc.pc(), 0xaf77);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaf75), 0xcb);
        EXPECT(gbc.readMem(0xaf76), 0xc0);
        // CB C0 0203
        gbc.setState(0xd685, 0xc49a, 0x5b00, 0x5f5a, 0x62c3, 0xc7fc, 0x0, 0x0);
        gbc.writeMem(0xd685, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0x5a);
        EXPECT(gbc.d(),  0x62);
        EXPECT(gbc.e(),  0xc3);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0xfc);
        EXPECT(gbc.sp(), 0xc49a);
        EXPECT(gbc.pc(), 0xd687);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd685), 0xcb);
        EXPECT(gbc.readMem(0xd686), 0xc0);
        // CB C0 0204
        gbc.setState(0x5cbd, 0xe520, 0xb6e0, 0x7d49, 0x8492, 0xf8b6, 0x0, 0x1);
        gbc.writeMem(0x5cbd, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0x7d);
        EXPECT(gbc.c(),  0x49);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0xe520);
        EXPECT(gbc.pc(), 0x5cbf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C0 0205
        gbc.setState(0xd5de, 0x588, 0x8040, 0xc84d, 0x258e, 0x8409, 0x0, 0x1);
        gbc.writeMem(0xd5de, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0xc9);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0x25);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0x9);
        EXPECT(gbc.sp(), 0x588);
        EXPECT(gbc.pc(), 0xd5e0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd5de), 0xcb);
        EXPECT(gbc.readMem(0xd5df), 0xc0);
        // CB C0 0206
        gbc.setState(0xd5b9, 0xe3f, 0xad20, 0xf58b, 0x812f, 0x1a24, 0x1, 0x0);
        gbc.writeMem(0xd5b9, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xad);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0x8b);
        EXPECT(gbc.d(),  0x81);
        EXPECT(gbc.e(),  0x2f);
        EXPECT(gbc.h(),  0x1a);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0xe3f);
        EXPECT(gbc.pc(), 0xd5bb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd5b9), 0xcb);
        EXPECT(gbc.readMem(0xd5ba), 0xc0);
        // CB C0 0207
        gbc.setState(0xd238, 0xb810, 0x6010, 0xd6ef, 0x91d8, 0x2b02, 0x1, 0x1);
        gbc.writeMem(0xd238, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0x2b);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0xb810);
        EXPECT(gbc.pc(), 0xd23a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd238), 0xcb);
        EXPECT(gbc.readMem(0xd239), 0xc0);
        // CB C0 0208
        gbc.setState(0x4dc8, 0x8719, 0xc870, 0x271c, 0x6440, 0xc957, 0x0, 0x0);
        gbc.writeMem(0x4dc8, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0x57);
        EXPECT(gbc.sp(), 0x8719);
        EXPECT(gbc.pc(), 0x4dca);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C0 0209
        gbc.setState(0xa01e, 0x1ff8, 0x6570, 0xce4b, 0x8132, 0x2c11, 0x1, 0x1);
        gbc.writeMem(0xa01e, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x65);
        EXPECT(gbc.b(),  0xcf);
        EXPECT(gbc.c(),  0x4b);
        EXPECT(gbc.d(),  0x81);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0x11);
        EXPECT(gbc.sp(), 0x1ff8);
        EXPECT(gbc.pc(), 0xa020);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa01e), 0xcb);
        EXPECT(gbc.readMem(0xa01f), 0xc0);
        // CB C0 020A
        gbc.setState(0x5ac4, 0x612f, 0x8be0, 0x100, 0xd7f7, 0x965e, 0x0, 0x1);
        gbc.writeMem(0x5ac4, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0xf7);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0x612f);
        EXPECT(gbc.pc(), 0x5ac6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C0 020C
        gbc.setState(0x796b, 0x32e3, 0x3db0, 0xc4e7, 0x4b98, 0x7af5, 0x1, 0x0);
        gbc.writeMem(0x796b, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x3d);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0xe7);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0x98);
        EXPECT(gbc.h(),  0x7a);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0x32e3);
        EXPECT(gbc.pc(), 0x796d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C0 020D
        gbc.setState(0xc75c, 0xf626, 0x89b0, 0x7d4f, 0x5ce3, 0x19ff, 0x1, 0x0);
        gbc.writeMem(0xc75c, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0x7d);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0x5c);
        EXPECT(gbc.e(),  0xe3);
        EXPECT(gbc.h(),  0x19);
        EXPECT(gbc.l(),  0xff);
        EXPECT(gbc.sp(), 0xf626);
        EXPECT(gbc.pc(), 0xc75e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc75c), 0xcb);
        EXPECT(gbc.readMem(0xc75d), 0xc0);
        // CB C0 020E
        gbc.setState(0xa4f5, 0xde43, 0x5760, 0x6251, 0x3a76, 0x30b4, 0x1, 0x0);
        gbc.writeMem(0xa4f5, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x57);
        EXPECT(gbc.b(),  0x63);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0x76);
        EXPECT(gbc.h(),  0x30);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0xde43);
        EXPECT(gbc.pc(), 0xa4f7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa4f5), 0xcb);
        EXPECT(gbc.readMem(0xa4f6), 0xc0);
        // CB C0 020F
        gbc.setState(0x6cf4, 0x3436, 0xa500, 0xe348, 0x851, 0xee2b, 0x0, 0x1);
        gbc.writeMem(0x6cf4, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa5);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0x51);
        EXPECT(gbc.h(),  0xee);
        EXPECT(gbc.l(),  0x2b);
        EXPECT(gbc.sp(), 0x3436);
        EXPECT(gbc.pc(), 0x6cf6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C0 0210
        gbc.setState(0xe6d0, 0x842, 0x58e0, 0x240b, 0x3346, 0x66ee, 0x0, 0x0);
        gbc.writeMem(0xe6d0, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x58);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0xb);
        EXPECT(gbc.d(),  0x33);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0x66);
        EXPECT(gbc.l(),  0xee);
        EXPECT(gbc.sp(), 0x842);
        EXPECT(gbc.pc(), 0xe6d2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe6d0), 0xcb);
        EXPECT(gbc.readMem(0xe6d1), 0xc0);
        // CB C0 0211
        gbc.setState(0x4e19, 0xee28, 0xf7f0, 0x6774, 0xe5b4, 0x3eec, 0x0, 0x0);
        gbc.writeMem(0x4e19, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0x67);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0xb4);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0xec);
        EXPECT(gbc.sp(), 0xee28);
        EXPECT(gbc.pc(), 0x4e1b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C0 0213
        gbc.setState(0x3dec, 0xaf57, 0x1bf0, 0x66e9, 0x2cc7, 0xce5f, 0x0, 0x1);
        gbc.writeMem(0x3dec, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0x67);
        EXPECT(gbc.c(),  0xe9);
        EXPECT(gbc.d(),  0x2c);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0x5f);
        EXPECT(gbc.sp(), 0xaf57);
        EXPECT(gbc.pc(), 0x3dee);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C0 0215
        gbc.setState(0x9a46, 0xda7b, 0xc860, 0x39ea, 0xda1f, 0xdf8b, 0x1, 0x0);
        gbc.writeMem(0x9a46, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0xea);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0x1f);
        EXPECT(gbc.h(),  0xdf);
        EXPECT(gbc.l(),  0x8b);
        EXPECT(gbc.sp(), 0xda7b);
        EXPECT(gbc.pc(), 0x9a48);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9a46), 0xcb);
        EXPECT(gbc.readMem(0x9a47), 0xc0);
        // CB C0 0216
        gbc.setState(0xa926, 0x3385, 0x3e40, 0xef42, 0xab5f, 0xfbb8, 0x0, 0x1);
        gbc.writeMem(0xa926, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0xef);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0xb8);
        EXPECT(gbc.sp(), 0x3385);
        EXPECT(gbc.pc(), 0xa928);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa926), 0xcb);
        EXPECT(gbc.readMem(0xa927), 0xc0);
        // CB C0 0217
        gbc.setState(0x671c, 0xd981, 0xb150, 0xfb43, 0x85c1, 0x34e7, 0x0, 0x1);
        gbc.writeMem(0x671c, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0xfb);
        EXPECT(gbc.c(),  0x43);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0x34);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0xd981);
        EXPECT(gbc.pc(), 0x671e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C0 0218
        gbc.setState(0x3cc6, 0x691c, 0xd430, 0xda85, 0x70bf, 0x8eca, 0x1, 0x0);
        gbc.writeMem(0x3cc6, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0xdb);
        EXPECT(gbc.c(),  0x85);
        EXPECT(gbc.d(),  0x70);
        EXPECT(gbc.e(),  0xbf);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0xca);
        EXPECT(gbc.sp(), 0x691c);
        EXPECT(gbc.pc(), 0x3cc8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C0 021A
        gbc.setState(0x8894, 0xc6f9, 0x7ae0, 0x13c1, 0xdc04, 0xf25, 0x1, 0x1);
        gbc.writeMem(0x8894, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x7a);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0xc1);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0x4);
        EXPECT(gbc.h(),  0xf);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0xc6f9);
        EXPECT(gbc.pc(), 0x8896);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8894), 0xcb);
        EXPECT(gbc.readMem(0x8895), 0xc0);
        // CB C0 021B
        gbc.setState(0xef47, 0x307f, 0x5e70, 0xde5f, 0xf7f7, 0x604d, 0x1, 0x0);
        gbc.writeMem(0xef47, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x5e);
        EXPECT(gbc.b(),  0xdf);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0xf7);
        EXPECT(gbc.e(),  0xf7);
        EXPECT(gbc.h(),  0x60);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0x307f);
        EXPECT(gbc.pc(), 0xef49);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xef47), 0xcb);
        EXPECT(gbc.readMem(0xef48), 0xc0);
        // CB C0 021C
        gbc.setState(0xa97e, 0x8b6e, 0x32a0, 0x925d, 0x48af, 0x4d51, 0x0, 0x0);
        gbc.writeMem(0xa97e, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0x93);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0x48);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0x4d);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0x8b6e);
        EXPECT(gbc.pc(), 0xa980);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa97e), 0xcb);
        EXPECT(gbc.readMem(0xa97f), 0xc0);
        // CB C0 021D
        gbc.setState(0xa77c, 0x3579, 0xc7a0, 0x1d55, 0xf1b, 0x1118, 0x0, 0x0);
        gbc.writeMem(0xa77c, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xc7);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0x55);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0x1b);
        EXPECT(gbc.h(),  0x11);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0x3579);
        EXPECT(gbc.pc(), 0xa77e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa77c), 0xcb);
        EXPECT(gbc.readMem(0xa77d), 0xc0);
        // CB C0 021E
        gbc.setState(0xbbda, 0x7131, 0x4e70, 0x637a, 0xce7a, 0x2141, 0x0, 0x1);
        gbc.writeMem(0xbbda, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0x63);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0xce);
        EXPECT(gbc.e(),  0x7a);
        EXPECT(gbc.h(),  0x21);
        EXPECT(gbc.l(),  0x41);
        EXPECT(gbc.sp(), 0x7131);
        EXPECT(gbc.pc(), 0xbbdc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbbda), 0xcb);
        EXPECT(gbc.readMem(0xbbdb), 0xc0);
        // CB C0 021F
        gbc.setState(0x2ba3, 0x90c0, 0x1d50, 0xa89f, 0x8eb1, 0xec2c, 0x1, 0x1);
        gbc.writeMem(0x2ba3, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0xa9);
        EXPECT(gbc.c(),  0x9f);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0xb1);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0x2c);
        EXPECT(gbc.sp(), 0x90c0);
        EXPECT(gbc.pc(), 0x2ba5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C0 0220
        gbc.setState(0x75e7, 0x3ca2, 0x4240, 0x13ff, 0xae0c, 0x6336, 0x0, 0x1);
        gbc.writeMem(0x75e7, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x42);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0xff);
        EXPECT(gbc.d(),  0xae);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0x63);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0x3ca2);
        EXPECT(gbc.pc(), 0x75e9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C0 0221
        gbc.setState(0x956, 0x2760, 0x8670, 0xa054, 0x19, 0xcfd6, 0x1, 0x1);
        gbc.writeMem(0x956, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0x19);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0xd6);
        EXPECT(gbc.sp(), 0x2760);
        EXPECT(gbc.pc(), 0x958);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C0 0222
        gbc.setState(0xcc52, 0xf094, 0xed90, 0xd69c, 0x190d, 0x833d, 0x1, 0x1);
        gbc.writeMem(0xcc52, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0x9c);
        EXPECT(gbc.d(),  0x19);
        EXPECT(gbc.e(),  0xd);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0xf094);
        EXPECT(gbc.pc(), 0xcc54);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcc52), 0xcb);
        EXPECT(gbc.readMem(0xcc53), 0xc0);
        // CB C0 0223
        gbc.setState(0xbd65, 0x502e, 0x3070, 0xe28c, 0xc472, 0x978a, 0x1, 0x0);
        gbc.writeMem(0xbd65, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0xc4);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0x502e);
        EXPECT(gbc.pc(), 0xbd67);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbd65), 0xcb);
        EXPECT(gbc.readMem(0xbd66), 0xc0);
        // CB C0 0224
        gbc.setState(0xdf00, 0x63a1, 0x7b00, 0x18ff, 0x1bbf, 0xd13f, 0x0, 0x0);
        gbc.writeMem(0xdf00, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0x19);
        EXPECT(gbc.c(),  0xff);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0xbf);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0x63a1);
        EXPECT(gbc.pc(), 0xdf02);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdf00), 0xcb);
        EXPECT(gbc.readMem(0xdf01), 0xc0);
        // CB C0 0225
        gbc.setState(0x5b65, 0xa6d, 0xab40, 0x5345, 0xa38f, 0xc36e, 0x0, 0x0);
        gbc.writeMem(0x5b65, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xab);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0xa3);
        EXPECT(gbc.e(),  0x8f);
        EXPECT(gbc.h(),  0xc3);
        EXPECT(gbc.l(),  0x6e);
        EXPECT(gbc.sp(), 0xa6d);
        EXPECT(gbc.pc(), 0x5b67);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C0 0226
        gbc.setState(0x4cc3, 0x9424, 0x7e30, 0x854e, 0xa6b, 0xa202, 0x1, 0x1);
        gbc.writeMem(0x4cc3, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0x4e);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0x6b);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0x9424);
        EXPECT(gbc.pc(), 0x4cc5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C0 0227
        gbc.setState(0xdd1c, 0x81fe, 0xa700, 0x7e4d, 0x222e, 0xb82a, 0x1, 0x0);
        gbc.writeMem(0xdd1c, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa7);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0x2a);
        EXPECT(gbc.sp(), 0x81fe);
        EXPECT(gbc.pc(), 0xdd1e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdd1c), 0xcb);
        EXPECT(gbc.readMem(0xdd1d), 0xc0);
        // CB C0 0228
        gbc.setState(0x3ba3, 0x6972, 0x1a90, 0x3c26, 0xc05e, 0x6c0e, 0x0, 0x0);
        gbc.writeMem(0x3ba3, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x1a);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0x6c);
        EXPECT(gbc.l(),  0xe);
        EXPECT(gbc.sp(), 0x6972);
        EXPECT(gbc.pc(), 0x3ba5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C0 0229
        gbc.setState(0x86b1, 0x5854, 0xf180, 0x894a, 0xe926, 0x157a, 0x0, 0x0);
        gbc.writeMem(0x86b1, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf1);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0x4a);
        EXPECT(gbc.d(),  0xe9);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0x7a);
        EXPECT(gbc.sp(), 0x5854);
        EXPECT(gbc.pc(), 0x86b3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x86b1), 0xcb);
        EXPECT(gbc.readMem(0x86b2), 0xc0);
        // CB C0 022A
        gbc.setState(0x9981, 0xd9e3, 0x8570, 0x7361, 0x2fdf, 0x9d34, 0x1, 0x0);
        gbc.writeMem(0x9981, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x85);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0x61);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0xdf);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0xd9e3);
        EXPECT(gbc.pc(), 0x9983);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9981), 0xcb);
        EXPECT(gbc.readMem(0x9982), 0xc0);
        // CB C0 022B
        gbc.setState(0xe788, 0xdb6, 0xca50, 0x9fc, 0x5737, 0x9c4d, 0x0, 0x1);
        gbc.writeMem(0xe788, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xca);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0x57);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0xdb6);
        EXPECT(gbc.pc(), 0xe78a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe788), 0xcb);
        EXPECT(gbc.readMem(0xe789), 0xc0);
        // CB C0 022C
        gbc.setState(0x9808, 0x7d33, 0xff00, 0x7497, 0xb734, 0xf0aa, 0x0, 0x1);
        gbc.writeMem(0x9808, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0x75);
        EXPECT(gbc.c(),  0x97);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0x34);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0xaa);
        EXPECT(gbc.sp(), 0x7d33);
        EXPECT(gbc.pc(), 0x980a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9808), 0xcb);
        EXPECT(gbc.readMem(0x9809), 0xc0);
        // CB C0 022D
        gbc.setState(0x7e64, 0xa62e, 0x1190, 0x7d8e, 0x1a58, 0x1dfc, 0x1, 0x0);
        gbc.writeMem(0x7e64, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x11);
        EXPECT(gbc.b(),  0x7d);
        EXPECT(gbc.c(),  0x8e);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0xfc);
        EXPECT(gbc.sp(), 0xa62e);
        EXPECT(gbc.pc(), 0x7e66);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C0 022E
        gbc.setState(0xbebf, 0x14a4, 0xfa0, 0x3a61, 0x243f, 0xcfc, 0x1, 0x0);
        gbc.writeMem(0xbebf, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf);
        EXPECT(gbc.b(),  0x3b);
        EXPECT(gbc.c(),  0x61);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0xfc);
        EXPECT(gbc.sp(), 0x14a4);
        EXPECT(gbc.pc(), 0xbec1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbebf), 0xcb);
        EXPECT(gbc.readMem(0xbec0), 0xc0);
        // CB C0 022F
        gbc.setState(0xea49, 0x4108, 0x2f30, 0x66b4, 0x1c5b, 0x7fec, 0x1, 0x1);
        gbc.writeMem(0xea49, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x2f);
        EXPECT(gbc.b(),  0x67);
        EXPECT(gbc.c(),  0xb4);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0x5b);
        EXPECT(gbc.h(),  0x7f);
        EXPECT(gbc.l(),  0xec);
        EXPECT(gbc.sp(), 0x4108);
        EXPECT(gbc.pc(), 0xea4b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xea49), 0xcb);
        EXPECT(gbc.readMem(0xea4a), 0xc0);
        // CB C0 0230
        gbc.setState(0x74da, 0xb77d, 0x6cb0, 0x9e9a, 0x58de, 0x7997, 0x1, 0x0);
        gbc.writeMem(0x74da, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0x9f);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0x79);
        EXPECT(gbc.l(),  0x97);
        EXPECT(gbc.sp(), 0xb77d);
        EXPECT(gbc.pc(), 0x74dc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C0 0231
        gbc.setState(0x6052, 0x98fa, 0x2ac0, 0xd66a, 0xb568, 0xa438, 0x1, 0x0);
        gbc.writeMem(0x6052, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0x6a);
        EXPECT(gbc.d(),  0xb5);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0x98fa);
        EXPECT(gbc.pc(), 0x6054);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C0 0232
        gbc.setState(0x602c, 0x7e8, 0x1160, 0x3150, 0xcbcc, 0x3081, 0x0, 0x0);
        gbc.writeMem(0x602c, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x11);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0xcc);
        EXPECT(gbc.h(),  0x30);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0x7e8);
        EXPECT(gbc.pc(), 0x602e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C0 0233
        gbc.setState(0x32b9, 0xeeb7, 0x50c0, 0x4773, 0x6a46, 0xb810, 0x1, 0x0);
        gbc.writeMem(0x32b9, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0x6a);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0xeeb7);
        EXPECT(gbc.pc(), 0x32bb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C0 0234
        gbc.setState(0x5051, 0xdd5d, 0x1780, 0xc008, 0xebd2, 0xde9e, 0x0, 0x1);
        gbc.writeMem(0x5051, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x17);
        EXPECT(gbc.b(),  0xc1);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0xeb);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0xdd5d);
        EXPECT(gbc.pc(), 0x5053);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C0 0235
        gbc.setState(0x61a6, 0xae83, 0x9200, 0x8b81, 0xaa54, 0xd480, 0x0, 0x1);
        gbc.writeMem(0x61a6, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0x81);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0x80);
        EXPECT(gbc.sp(), 0xae83);
        EXPECT(gbc.pc(), 0x61a8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C0 0236
        gbc.setState(0x7bc2, 0x3af4, 0x4600, 0xde0, 0xf5c3, 0x8290, 0x1, 0x1);
        gbc.writeMem(0x7bc2, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x46);
        EXPECT(gbc.b(),  0xd);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0xc3);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0x90);
        EXPECT(gbc.sp(), 0x3af4);
        EXPECT(gbc.pc(), 0x7bc4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C0 0237
        gbc.setState(0x4466, 0xc543, 0x5980, 0x8146, 0x973a, 0xec1c, 0x1, 0x0);
        gbc.writeMem(0x4466, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0x81);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0x1c);
        EXPECT(gbc.sp(), 0xc543);
        EXPECT(gbc.pc(), 0x4468);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C0 0239
        gbc.setState(0xb8de, 0x9871, 0xbbc0, 0xbfb7, 0xb1b2, 0x4fe8, 0x0, 0x1);
        gbc.writeMem(0xb8de, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0xbf);
        EXPECT(gbc.c(),  0xb7);
        EXPECT(gbc.d(),  0xb1);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0x4f);
        EXPECT(gbc.l(),  0xe8);
        EXPECT(gbc.sp(), 0x9871);
        EXPECT(gbc.pc(), 0xb8e0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb8de), 0xcb);
        EXPECT(gbc.readMem(0xb8df), 0xc0);
        // CB C0 023A
        gbc.setState(0x3a24, 0x6ca8, 0x2230, 0x489d, 0x6766, 0x4230, 0x1, 0x1);
        gbc.writeMem(0x3a24, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0x49);
        EXPECT(gbc.c(),  0x9d);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0x66);
        EXPECT(gbc.h(),  0x42);
        EXPECT(gbc.l(),  0x30);
        EXPECT(gbc.sp(), 0x6ca8);
        EXPECT(gbc.pc(), 0x3a26);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C0 023B
        gbc.setState(0x22ef, 0x701b, 0xba0, 0xadad, 0xcac5, 0xf1e6, 0x1, 0x0);
        gbc.writeMem(0x22ef, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0xad);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0xca);
        EXPECT(gbc.e(),  0xc5);
        EXPECT(gbc.h(),  0xf1);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0x701b);
        EXPECT(gbc.pc(), 0x22f1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C0 023C
        gbc.setState(0xaa14, 0xa0e2, 0xb9d0, 0x8779, 0xfbdf, 0x9b1a, 0x1, 0x1);
        gbc.writeMem(0xaa14, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0x79);
        EXPECT(gbc.d(),  0xfb);
        EXPECT(gbc.e(),  0xdf);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0xa0e2);
        EXPECT(gbc.pc(), 0xaa16);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaa14), 0xcb);
        EXPECT(gbc.readMem(0xaa15), 0xc0);
        // CB C0 023D
        gbc.setState(0xdcde, 0xa34d, 0xdb10, 0x425e, 0xc990, 0xd925, 0x1, 0x0);
        gbc.writeMem(0xdcde, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xdb);
        EXPECT(gbc.b(),  0x43);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0xc9);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0xa34d);
        EXPECT(gbc.pc(), 0xdce0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdcde), 0xcb);
        EXPECT(gbc.readMem(0xdcdf), 0xc0);
        // CB C0 023E
        gbc.setState(0xafd5, 0x7612, 0x19b0, 0x33b0, 0x2abf, 0xca62, 0x0, 0x0);
        gbc.writeMem(0xafd5, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x19);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0x2a);
        EXPECT(gbc.e(),  0xbf);
        EXPECT(gbc.h(),  0xca);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0x7612);
        EXPECT(gbc.pc(), 0xafd7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xafd5), 0xcb);
        EXPECT(gbc.readMem(0xafd6), 0xc0);
        // CB C0 023F
        gbc.setState(0x3f59, 0x4c80, 0x99b0, 0x920c, 0x920e, 0xaee9, 0x0, 0x1);
        gbc.writeMem(0x3f59, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x99);
        EXPECT(gbc.b(),  0x93);
        EXPECT(gbc.c(),  0xc);
        EXPECT(gbc.d(),  0x92);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0xe9);
        EXPECT(gbc.sp(), 0x4c80);
        EXPECT(gbc.pc(), 0x3f5b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C0 0240
        gbc.setState(0xc9b5, 0x7f38, 0x5a60, 0x762, 0x3f60, 0xbab, 0x1, 0x1);
        gbc.writeMem(0xc9b5, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0x3f);
        EXPECT(gbc.e(),  0x60);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0x7f38);
        EXPECT(gbc.pc(), 0xc9b7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc9b5), 0xcb);
        EXPECT(gbc.readMem(0xc9b6), 0xc0);
        // CB C0 0241
        gbc.setState(0x9f82, 0x3e17, 0x6800, 0xe5e8, 0x88e5, 0x3a1f, 0x0, 0x0);
        gbc.writeMem(0x9f82, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x68);
        EXPECT(gbc.b(),  0xe5);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0x88);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0x3a);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0x3e17);
        EXPECT(gbc.pc(), 0x9f84);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9f82), 0xcb);
        EXPECT(gbc.readMem(0x9f83), 0xc0);
        // CB C0 0242
        gbc.setState(0xa4da, 0xc32b, 0x1dc0, 0xaccf, 0xcb4c, 0xd947, 0x0, 0x0);
        gbc.writeMem(0xa4da, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0xad);
        EXPECT(gbc.c(),  0xcf);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0x47);
        EXPECT(gbc.sp(), 0xc32b);
        EXPECT(gbc.pc(), 0xa4dc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa4da), 0xcb);
        EXPECT(gbc.readMem(0xa4db), 0xc0);
        // CB C0 0243
        gbc.setState(0x74b, 0xebcc, 0xcd50, 0x2cbf, 0xe864, 0xfdd2, 0x1, 0x1);
        gbc.writeMem(0x74b, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0x2d);
        EXPECT(gbc.c(),  0xbf);
        EXPECT(gbc.d(),  0xe8);
        EXPECT(gbc.e(),  0x64);
        EXPECT(gbc.h(),  0xfd);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0xebcc);
        EXPECT(gbc.pc(), 0x74d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C0 0244
        gbc.setState(0x495f, 0x16ea, 0x6300, 0x9678, 0xf02f, 0x8bb8, 0x1, 0x1);
        gbc.writeMem(0x495f, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0x97);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0x2f);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0xb8);
        EXPECT(gbc.sp(), 0x16ea);
        EXPECT(gbc.pc(), 0x4961);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C0 0245
        gbc.setState(0x5296, 0x2206, 0x9930, 0x8ed9, 0xb8f9, 0x8cc2, 0x1, 0x0);
        gbc.writeMem(0x5296, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x99);
        EXPECT(gbc.b(),  0x8f);
        EXPECT(gbc.c(),  0xd9);
        EXPECT(gbc.d(),  0xb8);
        EXPECT(gbc.e(),  0xf9);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0x2206);
        EXPECT(gbc.pc(), 0x5298);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C0 0246
        gbc.setState(0xe070, 0xef31, 0xebc0, 0x34c7, 0xa578, 0x9cad, 0x0, 0x0);
        gbc.writeMem(0xe070, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0xc7);
        EXPECT(gbc.d(),  0xa5);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0xad);
        EXPECT(gbc.sp(), 0xef31);
        EXPECT(gbc.pc(), 0xe072);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe070), 0xcb);
        EXPECT(gbc.readMem(0xe071), 0xc0);
        // CB C0 0247
        gbc.setState(0xc66b, 0xecd9, 0xb160, 0xc348, 0xdfd4, 0xcfff, 0x1, 0x0);
        gbc.writeMem(0xc66b, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0xc3);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0xd4);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0xff);
        EXPECT(gbc.sp(), 0xecd9);
        EXPECT(gbc.pc(), 0xc66d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc66b), 0xcb);
        EXPECT(gbc.readMem(0xc66c), 0xc0);
        // CB C0 0248
        gbc.setState(0x1ee5, 0x86f7, 0x2970, 0xd1d9, 0xd891, 0x1d58, 0x1, 0x0);
        gbc.writeMem(0x1ee5, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0xd9);
        EXPECT(gbc.d(),  0xd8);
        EXPECT(gbc.e(),  0x91);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0x86f7);
        EXPECT(gbc.pc(), 0x1ee7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C0 0249
        gbc.setState(0xbe9d, 0xcd2f, 0x7360, 0x7a5f, 0x62a4, 0xcb56, 0x1, 0x0);
        gbc.writeMem(0xbe9d, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x73);
        EXPECT(gbc.b(),  0x7b);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0x62);
        EXPECT(gbc.e(),  0xa4);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0x56);
        EXPECT(gbc.sp(), 0xcd2f);
        EXPECT(gbc.pc(), 0xbe9f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbe9d), 0xcb);
        EXPECT(gbc.readMem(0xbe9e), 0xc0);
        // CB C0 024A
        gbc.setState(0x2186, 0x1171, 0xbc80, 0x76c4, 0x5dea, 0xef5b, 0x1, 0x1);
        gbc.writeMem(0x2186, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0x77);
        EXPECT(gbc.c(),  0xc4);
        EXPECT(gbc.d(),  0x5d);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0x5b);
        EXPECT(gbc.sp(), 0x1171);
        EXPECT(gbc.pc(), 0x2188);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C0 024B
        gbc.setState(0x2630, 0x33d, 0x1840, 0xd76f, 0x1a7b, 0xdc9a, 0x1, 0x1);
        gbc.writeMem(0x2630, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0x33d);
        EXPECT(gbc.pc(), 0x2632);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C0 024C
        gbc.setState(0x460b, 0x2a21, 0xebf0, 0x4e17, 0x75ac, 0x8caa, 0x0, 0x1);
        gbc.writeMem(0x460b, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0x4f);
        EXPECT(gbc.c(),  0x17);
        EXPECT(gbc.d(),  0x75);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0xaa);
        EXPECT(gbc.sp(), 0x2a21);
        EXPECT(gbc.pc(), 0x460d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C0 024D
        gbc.setState(0x90a8, 0x175e, 0x2940, 0xfb3b, 0x5c75, 0xc77d, 0x0, 0x1);
        gbc.writeMem(0x90a8, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0xfb);
        EXPECT(gbc.c(),  0x3b);
        EXPECT(gbc.d(),  0x5c);
        EXPECT(gbc.e(),  0x75);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0x175e);
        EXPECT(gbc.pc(), 0x90aa);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x90a8), 0xcb);
        EXPECT(gbc.readMem(0x90a9), 0xc0);
        // CB C0 024E
        gbc.setState(0x7cb9, 0x6519, 0x9fc0, 0x94e4, 0x7318, 0xb5f2, 0x0, 0x1);
        gbc.writeMem(0x7cb9, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x9f);
        EXPECT(gbc.b(),  0x95);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0x73);
        EXPECT(gbc.e(),  0x18);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0xf2);
        EXPECT(gbc.sp(), 0x6519);
        EXPECT(gbc.pc(), 0x7cbb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C0 024F
        gbc.setState(0xa6ee, 0xd761, 0x1680, 0xc636, 0x5cea, 0xbd08, 0x0, 0x1);
        gbc.writeMem(0xa6ee, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x16);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0x5c);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0x8);
        EXPECT(gbc.sp(), 0xd761);
        EXPECT(gbc.pc(), 0xa6f0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa6ee), 0xcb);
        EXPECT(gbc.readMem(0xa6ef), 0xc0);
        // CB C0 0250
        gbc.setState(0x40ab, 0xa8f6, 0xe2e0, 0xff36, 0xf407, 0xfdc2, 0x1, 0x1);
        gbc.writeMem(0x40ab, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0xff);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0xf4);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0xfd);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0xa8f6);
        EXPECT(gbc.pc(), 0x40ad);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C0 0251
        gbc.setState(0xe3de, 0x169d, 0x1820, 0x77d5, 0x4b26, 0x95d6, 0x1, 0x0);
        gbc.writeMem(0xe3de, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0x77);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0xd6);
        EXPECT(gbc.sp(), 0x169d);
        EXPECT(gbc.pc(), 0xe3e0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe3de), 0xcb);
        EXPECT(gbc.readMem(0xe3df), 0xc0);
        // CB C0 0254
        gbc.setState(0xb031, 0x5ace, 0x9c50, 0x57e5, 0xc5b0, 0x74d9, 0x0, 0x1);
        gbc.writeMem(0xb031, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x9c);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0xc5);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0x74);
        EXPECT(gbc.l(),  0xd9);
        EXPECT(gbc.sp(), 0x5ace);
        EXPECT(gbc.pc(), 0xb033);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb031), 0xcb);
        EXPECT(gbc.readMem(0xb032), 0xc0);
        // CB C0 0255
        gbc.setState(0x7b96, 0xe7a6, 0x1220, 0x4f11, 0x5851, 0xc189, 0x0, 0x1);
        gbc.writeMem(0x7b96, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x12);
        EXPECT(gbc.b(),  0x4f);
        EXPECT(gbc.c(),  0x11);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0x51);
        EXPECT(gbc.h(),  0xc1);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0xe7a6);
        EXPECT(gbc.pc(), 0x7b98);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C0 0256
        gbc.setState(0x4a33, 0xeece, 0xbdf0, 0x5d3e, 0x2f70, 0x3d63, 0x0, 0x0);
        gbc.writeMem(0x4a33, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xbd);
        EXPECT(gbc.b(),  0x5d);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0x3d);
        EXPECT(gbc.l(),  0x63);
        EXPECT(gbc.sp(), 0xeece);
        EXPECT(gbc.pc(), 0x4a35);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C0 0257
        gbc.setState(0xe902, 0xf9f6, 0x45c0, 0xbb79, 0xbb04, 0xb3ee, 0x0, 0x1);
        gbc.writeMem(0xe902, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0x79);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0x4);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0xee);
        EXPECT(gbc.sp(), 0xf9f6);
        EXPECT(gbc.pc(), 0xe904);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe902), 0xcb);
        EXPECT(gbc.readMem(0xe903), 0xc0);
        // CB C0 0258
        gbc.setState(0x4d3f, 0xe981, 0x16c0, 0x584a, 0xebe3, 0x89e, 0x0, 0x1);
        gbc.writeMem(0x4d3f, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x16);
        EXPECT(gbc.b(),  0x59);
        EXPECT(gbc.c(),  0x4a);
        EXPECT(gbc.d(),  0xeb);
        EXPECT(gbc.e(),  0xe3);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0xe981);
        EXPECT(gbc.pc(), 0x4d41);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C0 0259
        gbc.setState(0xd095, 0xec1, 0xe6f0, 0xfa1a, 0x2e1d, 0x739a, 0x0, 0x0);
        gbc.writeMem(0xd095, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0xfb);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0x2e);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0x73);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0xec1);
        EXPECT(gbc.pc(), 0xd097);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd095), 0xcb);
        EXPECT(gbc.readMem(0xd096), 0xc0);
        // CB C0 025A
        gbc.setState(0xbd59, 0xcdbd, 0xfa10, 0x1093, 0xa6df, 0x9f35, 0x0, 0x0);
        gbc.writeMem(0xbd59, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xfa);
        EXPECT(gbc.b(),  0x11);
        EXPECT(gbc.c(),  0x93);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0xdf);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0xcdbd);
        EXPECT(gbc.pc(), 0xbd5b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbd59), 0xcb);
        EXPECT(gbc.readMem(0xbd5a), 0xc0);
        // CB C0 025B
        gbc.setState(0xe7f6, 0x77d8, 0x89e0, 0xbc8f, 0x469b, 0x132b, 0x0, 0x0);
        gbc.writeMem(0xe7f6, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0xbd);
        EXPECT(gbc.c(),  0x8f);
        EXPECT(gbc.d(),  0x46);
        EXPECT(gbc.e(),  0x9b);
        EXPECT(gbc.h(),  0x13);
        EXPECT(gbc.l(),  0x2b);
        EXPECT(gbc.sp(), 0x77d8);
        EXPECT(gbc.pc(), 0xe7f8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe7f6), 0xcb);
        EXPECT(gbc.readMem(0xe7f7), 0xc0);
        // CB C0 025C
        gbc.setState(0xcad8, 0x751f, 0xf5a0, 0x14f3, 0x4d61, 0xdf76, 0x1, 0x0);
        gbc.writeMem(0xcad8, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf5);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0xf3);
        EXPECT(gbc.d(),  0x4d);
        EXPECT(gbc.e(),  0x61);
        EXPECT(gbc.h(),  0xdf);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0x751f);
        EXPECT(gbc.pc(), 0xcada);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcad8), 0xcb);
        EXPECT(gbc.readMem(0xcad9), 0xc0);
        // CB C0 025D
        gbc.setState(0x50b9, 0xe66c, 0x5c70, 0xbe6f, 0x494a, 0xdbed, 0x0, 0x0);
        gbc.writeMem(0x50b9, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0xbf);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0xdb);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0xe66c);
        EXPECT(gbc.pc(), 0x50bb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C0 025E
        gbc.setState(0xb5c8, 0x66e7, 0x4fc0, 0x8ff0, 0xa7bc, 0x934a, 0x1, 0x1);
        gbc.writeMem(0xb5c8, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0x8f);
        EXPECT(gbc.c(),  0xf0);
        EXPECT(gbc.d(),  0xa7);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0x66e7);
        EXPECT(gbc.pc(), 0xb5ca);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb5c8), 0xcb);
        EXPECT(gbc.readMem(0xb5c9), 0xc0);
        // CB C0 025F
        gbc.setState(0xc82b, 0xb2c3, 0x83a0, 0xd1ec, 0x6c59, 0xff86, 0x1, 0x1);
        gbc.writeMem(0xc82b, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x83);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0xec);
        EXPECT(gbc.d(),  0x6c);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0xff);
        EXPECT(gbc.l(),  0x86);
        EXPECT(gbc.sp(), 0xb2c3);
        EXPECT(gbc.pc(), 0xc82d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc82b), 0xcb);
        EXPECT(gbc.readMem(0xc82c), 0xc0);
        // CB C0 0261
        gbc.setState(0xe8d1, 0x2723, 0xd530, 0x49e9, 0x354c, 0xa360, 0x0, 0x0);
        gbc.writeMem(0xe8d1, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd5);
        EXPECT(gbc.b(),  0x49);
        EXPECT(gbc.c(),  0xe9);
        EXPECT(gbc.d(),  0x35);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0x2723);
        EXPECT(gbc.pc(), 0xe8d3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe8d1), 0xcb);
        EXPECT(gbc.readMem(0xe8d2), 0xc0);
        // CB C0 0262
        gbc.setState(0x4c21, 0x9a92, 0x2ba0, 0xfed4, 0x3342, 0x188, 0x0, 0x0);
        gbc.writeMem(0x4c21, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x2b);
        EXPECT(gbc.b(),  0xff);
        EXPECT(gbc.c(),  0xd4);
        EXPECT(gbc.d(),  0x33);
        EXPECT(gbc.e(),  0x42);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0x88);
        EXPECT(gbc.sp(), 0x9a92);
        EXPECT(gbc.pc(), 0x4c23);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C0 0263
        gbc.setState(0xdf30, 0x7d7d, 0xacd0, 0x1e8, 0x5241, 0x79e2, 0x0, 0x0);
        gbc.writeMem(0xdf30, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xac);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0x41);
        EXPECT(gbc.h(),  0x79);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0x7d7d);
        EXPECT(gbc.pc(), 0xdf32);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdf30), 0xcb);
        EXPECT(gbc.readMem(0xdf31), 0xc0);
        // CB C0 0264
        gbc.setState(0xd55e, 0x8f46, 0x5db0, 0x3c97, 0x8348, 0x5438, 0x1, 0x1);
        gbc.writeMem(0xd55e, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x5d);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0x97);
        EXPECT(gbc.d(),  0x83);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0x54);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0x8f46);
        EXPECT(gbc.pc(), 0xd560);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd55e), 0xcb);
        EXPECT(gbc.readMem(0xd55f), 0xc0);
        // CB C0 0265
        gbc.setState(0xeead, 0x271e, 0xb4e0, 0x1956, 0x92c4, 0x85f3, 0x1, 0x1);
        gbc.writeMem(0xeead, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb4);
        EXPECT(gbc.b(),  0x19);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0x92);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0x85);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0x271e);
        EXPECT(gbc.pc(), 0xeeaf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xeead), 0xcb);
        EXPECT(gbc.readMem(0xeeae), 0xc0);
        // CB C0 0266
        gbc.setState(0x43ca, 0x1486, 0xff40, 0x1ae9, 0x6db9, 0xa6ba, 0x0, 0x1);
        gbc.writeMem(0x43ca, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0xe9);
        EXPECT(gbc.d(),  0x6d);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0xba);
        EXPECT(gbc.sp(), 0x1486);
        EXPECT(gbc.pc(), 0x43cc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C0 0267
        gbc.setState(0xed86, 0x819, 0x81b0, 0xd4c0, 0x79a7, 0xcfab, 0x1, 0x1);
        gbc.writeMem(0xed86, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x81);
        EXPECT(gbc.b(),  0xd5);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0x79);
        EXPECT(gbc.e(),  0xa7);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0x819);
        EXPECT(gbc.pc(), 0xed88);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xed86), 0xcb);
        EXPECT(gbc.readMem(0xed87), 0xc0);
        // CB C0 0268
        gbc.setState(0x9702, 0x6c68, 0x7d50, 0x935, 0x3989, 0xee8b, 0x0, 0x1);
        gbc.writeMem(0x9702, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x7d);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0x39);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0xee);
        EXPECT(gbc.l(),  0x8b);
        EXPECT(gbc.sp(), 0x6c68);
        EXPECT(gbc.pc(), 0x9704);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9702), 0xcb);
        EXPECT(gbc.readMem(0x9703), 0xc0);
        // CB C0 0269
        gbc.setState(0xe77a, 0x343f, 0x7c00, 0xb9cd, 0x114, 0xdd16, 0x0, 0x1);
        gbc.writeMem(0xe77a, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x7c);
        EXPECT(gbc.b(),  0xb9);
        EXPECT(gbc.c(),  0xcd);
        EXPECT(gbc.d(),  0x1);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0x16);
        EXPECT(gbc.sp(), 0x343f);
        EXPECT(gbc.pc(), 0xe77c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe77a), 0xcb);
        EXPECT(gbc.readMem(0xe77b), 0xc0);
        // CB C0 026A
        gbc.setState(0x64cf, 0xdd40, 0x25c0, 0x484b, 0x48af, 0xbbb2, 0x1, 0x1);
        gbc.writeMem(0x64cf, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x25);
        EXPECT(gbc.b(),  0x49);
        EXPECT(gbc.c(),  0x4b);
        EXPECT(gbc.d(),  0x48);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0xdd40);
        EXPECT(gbc.pc(), 0x64d1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C0 026B
        gbc.setState(0x147a, 0x751b, 0xb550, 0xdaf7, 0x1f8d, 0x61e9, 0x1, 0x0);
        gbc.writeMem(0x147a, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb5);
        EXPECT(gbc.b(),  0xdb);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0x1f);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0x61);
        EXPECT(gbc.l(),  0xe9);
        EXPECT(gbc.sp(), 0x751b);
        EXPECT(gbc.pc(), 0x147c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C0 026C
        gbc.setState(0x4131, 0xcb28, 0xeb30, 0x792c, 0x1b91, 0x41e0, 0x0, 0x0);
        gbc.writeMem(0x4131, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0x91);
        EXPECT(gbc.h(),  0x41);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0xcb28);
        EXPECT(gbc.pc(), 0x4133);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C0 026D
        gbc.setState(0xc142, 0x85bb, 0x3a00, 0x5379, 0xe91e, 0x686e, 0x0, 0x1);
        gbc.writeMem(0xc142, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0x79);
        EXPECT(gbc.d(),  0xe9);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0x68);
        EXPECT(gbc.l(),  0x6e);
        EXPECT(gbc.sp(), 0x85bb);
        EXPECT(gbc.pc(), 0xc144);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc142), 0xcb);
        EXPECT(gbc.readMem(0xc143), 0xc0);
        // CB C0 026E
        gbc.setState(0x4e52, 0xec4e, 0x7550, 0x2984, 0x89a0, 0xe01d, 0x0, 0x0);
        gbc.writeMem(0x4e52, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0x89);
        EXPECT(gbc.e(),  0xa0);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0xec4e);
        EXPECT(gbc.pc(), 0x4e54);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C0 026F
        gbc.setState(0x8c53, 0xe99b, 0xb3a0, 0x723f, 0x62dc, 0x35f0, 0x0, 0x0);
        gbc.writeMem(0x8c53, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb3);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0x3f);
        EXPECT(gbc.d(),  0x62);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0xe99b);
        EXPECT(gbc.pc(), 0x8c55);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8c53), 0xcb);
        EXPECT(gbc.readMem(0x8c54), 0xc0);
        // CB C0 0270
        gbc.setState(0x4883, 0x467b, 0xfcc0, 0x54f8, 0xa2a2, 0x862d, 0x0, 0x0);
        gbc.writeMem(0x4883, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0xf8);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0xa2);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0x467b);
        EXPECT(gbc.pc(), 0x4885);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C0 0271
        gbc.setState(0xa812, 0x8f82, 0x2ce0, 0x792f, 0xca1d, 0xef34, 0x1, 0x0);
        gbc.writeMem(0xa812, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x2c);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0x2f);
        EXPECT(gbc.d(),  0xca);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0x8f82);
        EXPECT(gbc.pc(), 0xa814);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa812), 0xcb);
        EXPECT(gbc.readMem(0xa813), 0xc0);
        // CB C0 0272
        gbc.setState(0x5dc6, 0x187f, 0xbdb0, 0x7357, 0x77b1, 0xb2d8, 0x1, 0x0);
        gbc.writeMem(0x5dc6, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xbd);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0xb1);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0xd8);
        EXPECT(gbc.sp(), 0x187f);
        EXPECT(gbc.pc(), 0x5dc8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C0 0273
        gbc.setState(0x2055, 0x5ec, 0x3150, 0x65a, 0xd80c, 0x8219, 0x1, 0x0);
        gbc.writeMem(0x2055, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x31);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0x5a);
        EXPECT(gbc.d(),  0xd8);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0x5ec);
        EXPECT(gbc.pc(), 0x2057);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C0 0274
        gbc.setState(0x93ac, 0x7311, 0xf220, 0x415, 0x81ca, 0xcc16, 0x1, 0x1);
        gbc.writeMem(0x93ac, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0x81);
        EXPECT(gbc.e(),  0xca);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0x16);
        EXPECT(gbc.sp(), 0x7311);
        EXPECT(gbc.pc(), 0x93ae);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x93ac), 0xcb);
        EXPECT(gbc.readMem(0x93ad), 0xc0);
        // CB C0 0275
        gbc.setState(0x2bf5, 0xd189, 0x22e0, 0x669, 0x4331, 0xf31c, 0x1, 0x1);
        gbc.writeMem(0x2bf5, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0x69);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0x31);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0x1c);
        EXPECT(gbc.sp(), 0xd189);
        EXPECT(gbc.pc(), 0x2bf7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C0 0276
        gbc.setState(0xd298, 0xa946, 0x4100, 0xd026, 0xb3dd, 0xdac, 0x1, 0x1);
        gbc.writeMem(0xd298, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0xb3);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0xd);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0xa946);
        EXPECT(gbc.pc(), 0xd29a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd298), 0xcb);
        EXPECT(gbc.readMem(0xd299), 0xc0);
        // CB C0 0277
        gbc.setState(0xca31, 0xd34d, 0x89f0, 0xd296, 0x4074, 0xef1, 0x0, 0x0);
        gbc.writeMem(0xca31, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0x96);
        EXPECT(gbc.d(),  0x40);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0xf1);
        EXPECT(gbc.sp(), 0xd34d);
        EXPECT(gbc.pc(), 0xca33);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xca31), 0xcb);
        EXPECT(gbc.readMem(0xca32), 0xc0);
        // CB C0 0278
        gbc.setState(0x3eca, 0x89fd, 0xe8d0, 0x78aa, 0x999d, 0x295, 0x0, 0x0);
        gbc.writeMem(0x3eca, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0x99);
        EXPECT(gbc.e(),  0x9d);
        EXPECT(gbc.h(),  0x2);
        EXPECT(gbc.l(),  0x95);
        EXPECT(gbc.sp(), 0x89fd);
        EXPECT(gbc.pc(), 0x3ecc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C0 0279
        gbc.setState(0x12db, 0xcf9c, 0x11d0, 0x3fde, 0x4b67, 0x5fbf, 0x0, 0x1);
        gbc.writeMem(0x12db, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x11);
        EXPECT(gbc.b(),  0x3f);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0x67);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0xbf);
        EXPECT(gbc.sp(), 0xcf9c);
        EXPECT(gbc.pc(), 0x12dd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C0 027A
        gbc.setState(0xdce, 0x2f1e, 0xcd50, 0x4a5b, 0x85fc, 0xc8d4, 0x0, 0x1);
        gbc.writeMem(0xdce, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0xc8);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0x2f1e);
        EXPECT(gbc.pc(), 0xdd0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C0 027B
        gbc.setState(0x760f, 0x7355, 0xd340, 0x6eb4, 0xec81, 0x57dc, 0x1, 0x0);
        gbc.writeMem(0x760f, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd3);
        EXPECT(gbc.b(),  0x6f);
        EXPECT(gbc.c(),  0xb4);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0x81);
        EXPECT(gbc.h(),  0x57);
        EXPECT(gbc.l(),  0xdc);
        EXPECT(gbc.sp(), 0x7355);
        EXPECT(gbc.pc(), 0x7611);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C0 027C
        gbc.setState(0x43bd, 0xbdd8, 0x3dc0, 0xfa34, 0x67b, 0x52e0, 0x1, 0x1);
        gbc.writeMem(0x43bd, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x3d);
        EXPECT(gbc.b(),  0xfb);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0x6);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0x52);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0xbdd8);
        EXPECT(gbc.pc(), 0x43bf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C0 027D
        gbc.setState(0xd60e, 0xa831, 0x97d0, 0xbd87, 0xe7dc, 0x16c, 0x1, 0x1);
        gbc.writeMem(0xd60e, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x97);
        EXPECT(gbc.b(),  0xbd);
        EXPECT(gbc.c(),  0x87);
        EXPECT(gbc.d(),  0xe7);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0xa831);
        EXPECT(gbc.pc(), 0xd610);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd60e), 0xcb);
        EXPECT(gbc.readMem(0xd60f), 0xc0);
        // CB C0 027F
        gbc.setState(0xc211, 0x811c, 0x7eb0, 0xfda, 0x5964, 0x25ad, 0x0, 0x0);
        gbc.writeMem(0xc211, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0xf);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0x59);
        EXPECT(gbc.e(),  0x64);
        EXPECT(gbc.h(),  0x25);
        EXPECT(gbc.l(),  0xad);
        EXPECT(gbc.sp(), 0x811c);
        EXPECT(gbc.pc(), 0xc213);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc211), 0xcb);
        EXPECT(gbc.readMem(0xc212), 0xc0);
        // CB C0 0280
        gbc.setState(0x8e37, 0xae34, 0xf610, 0xd0e4, 0xcf01, 0xe37c, 0x0, 0x1);
        gbc.writeMem(0x8e37, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf6);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0xcf);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0xe3);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0xae34);
        EXPECT(gbc.pc(), 0x8e39);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8e37), 0xcb);
        EXPECT(gbc.readMem(0x8e38), 0xc0);
        // CB C0 0281
        gbc.setState(0xa238, 0xfd74, 0x2760, 0x3bca, 0x60d1, 0x4b60, 0x0, 0x0);
        gbc.writeMem(0xa238, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x27);
        EXPECT(gbc.b(),  0x3b);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0x60);
        EXPECT(gbc.e(),  0xd1);
        EXPECT(gbc.h(),  0x4b);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0xfd74);
        EXPECT(gbc.pc(), 0xa23a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa238), 0xcb);
        EXPECT(gbc.readMem(0xa239), 0xc0);
        // CB C0 0282
        gbc.setState(0x6d9c, 0x691c, 0x57b0, 0xdde4, 0xf29c, 0x20c3, 0x1, 0x0);
        gbc.writeMem(0x6d9c, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x57);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0xf2);
        EXPECT(gbc.e(),  0x9c);
        EXPECT(gbc.h(),  0x20);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0x691c);
        EXPECT(gbc.pc(), 0x6d9e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C0 0283
        gbc.setState(0xc482, 0x181b, 0xfa0, 0x5b12, 0x9df7, 0x93a1, 0x1, 0x1);
        gbc.writeMem(0xc482, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0xf7);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0x181b);
        EXPECT(gbc.pc(), 0xc484);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc482), 0xcb);
        EXPECT(gbc.readMem(0xc483), 0xc0);
        // CB C0 0284
        gbc.setState(0x5430, 0xcaa9, 0x9160, 0x451a, 0x5660, 0xbd29, 0x0, 0x0);
        gbc.writeMem(0x5430, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x91);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0x56);
        EXPECT(gbc.e(),  0x60);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0xcaa9);
        EXPECT(gbc.pc(), 0x5432);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C0 0285
        gbc.setState(0x45be, 0xfd57, 0x3250, 0x1744, 0x969a, 0xf74, 0x0, 0x0);
        gbc.writeMem(0x45be, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0x17);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0xf);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0xfd57);
        EXPECT(gbc.pc(), 0x45c0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C0 0286
        gbc.setState(0x9340, 0x5aa3, 0xb890, 0x743c, 0x55d0, 0x68f5, 0x1, 0x1);
        gbc.writeMem(0x9340, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb8);
        EXPECT(gbc.b(),  0x75);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0x68);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0x5aa3);
        EXPECT(gbc.pc(), 0x9342);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9340), 0xcb);
        EXPECT(gbc.readMem(0x9341), 0xc0);
        // CB C0 0287
        gbc.setState(0x4784, 0x6fc7, 0x6820, 0xdf66, 0x335c, 0x640b, 0x0, 0x0);
        gbc.writeMem(0x4784, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x68);
        EXPECT(gbc.b(),  0xdf);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0x33);
        EXPECT(gbc.e(),  0x5c);
        EXPECT(gbc.h(),  0x64);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0x6fc7);
        EXPECT(gbc.pc(), 0x4786);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C0 0288
        gbc.setState(0xea50, 0x4ed0, 0x1760, 0x966c, 0xfd0, 0xef9b, 0x1, 0x0);
        gbc.writeMem(0xea50, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x17);
        EXPECT(gbc.b(),  0x97);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0x9b);
        EXPECT(gbc.sp(), 0x4ed0);
        EXPECT(gbc.pc(), 0xea52);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xea50), 0xcb);
        EXPECT(gbc.readMem(0xea51), 0xc0);
        // CB C0 0289
        gbc.setState(0x260e, 0xa426, 0xaa0, 0x970e, 0x9b8d, 0x55bf, 0x0, 0x0);
        gbc.writeMem(0x260e, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0x97);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0xbf);
        EXPECT(gbc.sp(), 0xa426);
        EXPECT(gbc.pc(), 0x2610);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C0 028A
        gbc.setState(0x580, 0xdcce, 0x4920, 0x81bd, 0x36c1, 0x5780, 0x1, 0x1);
        gbc.writeMem(0x580, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0x81);
        EXPECT(gbc.c(),  0xbd);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0x57);
        EXPECT(gbc.l(),  0x80);
        EXPECT(gbc.sp(), 0xdcce);
        EXPECT(gbc.pc(), 0x582);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C0 028B
        gbc.setState(0x1247, 0xdda4, 0x8650, 0x7b43, 0xf013, 0x3ed5, 0x0, 0x1);
        gbc.writeMem(0x1247, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0x7b);
        EXPECT(gbc.c(),  0x43);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0xd5);
        EXPECT(gbc.sp(), 0xdda4);
        EXPECT(gbc.pc(), 0x1249);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C0 028D
        gbc.setState(0x361, 0xbab, 0x26d0, 0x4238, 0xed90, 0x6d66, 0x1, 0x1);
        gbc.writeMem(0x361, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0x43);
        EXPECT(gbc.c(),  0x38);
        EXPECT(gbc.d(),  0xed);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0x6d);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0xbab);
        EXPECT(gbc.pc(), 0x363);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C0 028E
        gbc.setState(0xb18b, 0xda56, 0x8100, 0xe36b, 0x1e54, 0x5434, 0x1, 0x0);
        gbc.writeMem(0xb18b, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x81);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0x6b);
        EXPECT(gbc.d(),  0x1e);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0x54);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0xda56);
        EXPECT(gbc.pc(), 0xb18d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb18b), 0xcb);
        EXPECT(gbc.readMem(0xb18c), 0xc0);
        // CB C0 028F
        gbc.setState(0xc6e8, 0xdb92, 0x9310, 0xcccf, 0x492d, 0x2ed4, 0x1, 0x0);
        gbc.writeMem(0xc6e8, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x93);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0xcf);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0x2e);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0xdb92);
        EXPECT(gbc.pc(), 0xc6ea);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc6e8), 0xcb);
        EXPECT(gbc.readMem(0xc6e9), 0xc0);
        // CB C0 0290
        gbc.setState(0xa2ec, 0x848f, 0xaf90, 0x6e3f, 0x289f, 0x2f8b, 0x1, 0x1);
        gbc.writeMem(0xa2ec, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xaf);
        EXPECT(gbc.b(),  0x6f);
        EXPECT(gbc.c(),  0x3f);
        EXPECT(gbc.d(),  0x28);
        EXPECT(gbc.e(),  0x9f);
        EXPECT(gbc.h(),  0x2f);
        EXPECT(gbc.l(),  0x8b);
        EXPECT(gbc.sp(), 0x848f);
        EXPECT(gbc.pc(), 0xa2ee);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa2ec), 0xcb);
        EXPECT(gbc.readMem(0xa2ed), 0xc0);
        // CB C0 0291
        gbc.setState(0x11df, 0x5fa6, 0xc600, 0x112a, 0x4b49, 0x78de, 0x0, 0x0);
        gbc.writeMem(0x11df, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xc6);
        EXPECT(gbc.b(),  0x11);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0x78);
        EXPECT(gbc.l(),  0xde);
        EXPECT(gbc.sp(), 0x5fa6);
        EXPECT(gbc.pc(), 0x11e1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C0 0292
        gbc.setState(0xc7ef, 0xd2d8, 0xe010, 0x5d13, 0xad55, 0x84e, 0x0, 0x1);
        gbc.writeMem(0xc7ef, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe0);
        EXPECT(gbc.b(),  0x5d);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0xad);
        EXPECT(gbc.e(),  0x55);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0x4e);
        EXPECT(gbc.sp(), 0xd2d8);
        EXPECT(gbc.pc(), 0xc7f1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc7ef), 0xcb);
        EXPECT(gbc.readMem(0xc7f0), 0xc0);
        // CB C0 0293
        gbc.setState(0xb861, 0xce23, 0xa0f0, 0x9fee, 0xa3ac, 0xbca8, 0x1, 0x0);
        gbc.writeMem(0xb861, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0x9f);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0xa3);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0xa8);
        EXPECT(gbc.sp(), 0xce23);
        EXPECT(gbc.pc(), 0xb863);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb861), 0xcb);
        EXPECT(gbc.readMem(0xb862), 0xc0);
        // CB C0 0294
        gbc.setState(0x460, 0xdfb7, 0x6120, 0xe906, 0x59c5, 0x3d2d, 0x1, 0x0);
        gbc.writeMem(0x460, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0xe9);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0x59);
        EXPECT(gbc.e(),  0xc5);
        EXPECT(gbc.h(),  0x3d);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0xdfb7);
        EXPECT(gbc.pc(), 0x462);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C0 0295
        gbc.setState(0x3f07, 0x1e16, 0x1010, 0x82bd, 0x8142, 0xc16, 0x1, 0x1);
        gbc.writeMem(0x3f07, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x10);
        EXPECT(gbc.b(),  0x83);
        EXPECT(gbc.c(),  0xbd);
        EXPECT(gbc.d(),  0x81);
        EXPECT(gbc.e(),  0x42);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0x16);
        EXPECT(gbc.sp(), 0x1e16);
        EXPECT(gbc.pc(), 0x3f09);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C0 0296
        gbc.setState(0x8a44, 0xca30, 0xddb0, 0x4af, 0x2d4d, 0xf914, 0x1, 0x0);
        gbc.writeMem(0x8a44, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xdd);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0xaf);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0x4d);
        EXPECT(gbc.h(),  0xf9);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0xca30);
        EXPECT(gbc.pc(), 0x8a46);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8a44), 0xcb);
        EXPECT(gbc.readMem(0x8a45), 0xc0);
        // CB C0 0297
        gbc.setState(0xdfde, 0x4e4a, 0x8e90, 0x2359, 0xca2c, 0x395a, 0x0, 0x0);
        gbc.writeMem(0xdfde, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0x23);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0xca);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0x4e4a);
        EXPECT(gbc.pc(), 0xdfe0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdfde), 0xcb);
        EXPECT(gbc.readMem(0xdfdf), 0xc0);
        // CB C0 0298
        gbc.setState(0xed07, 0xa01f, 0x45f0, 0x2ff5, 0x7d4b, 0xcbf0, 0x1, 0x1);
        gbc.writeMem(0xed07, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0x7d);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0xa01f);
        EXPECT(gbc.pc(), 0xed09);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xed07), 0xcb);
        EXPECT(gbc.readMem(0xed08), 0xc0);
        // CB C0 0299
        gbc.setState(0x53af, 0x4d11, 0x1f00, 0x81d8, 0xaa37, 0x628c, 0x1, 0x1);
        gbc.writeMem(0x53af, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0x81);
        EXPECT(gbc.c(),  0xd8);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0x62);
        EXPECT(gbc.l(),  0x8c);
        EXPECT(gbc.sp(), 0x4d11);
        EXPECT(gbc.pc(), 0x53b1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C0 029A
        gbc.setState(0x3463, 0x1b40, 0xefd0, 0x765b, 0xc5bc, 0xeabd, 0x1, 0x1);
        gbc.writeMem(0x3463, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xef);
        EXPECT(gbc.b(),  0x77);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0xc5);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0xea);
        EXPECT(gbc.l(),  0xbd);
        EXPECT(gbc.sp(), 0x1b40);
        EXPECT(gbc.pc(), 0x3465);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C0 029B
        gbc.setState(0x62cc, 0x43e2, 0x79c0, 0xf833, 0xba5c, 0x8084, 0x0, 0x1);
        gbc.writeMem(0x62cc, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0xba);
        EXPECT(gbc.e(),  0x5c);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0x84);
        EXPECT(gbc.sp(), 0x43e2);
        EXPECT(gbc.pc(), 0x62ce);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C0 029C
        gbc.setState(0xa31f, 0x23e3, 0x66e0, 0xeb93, 0xc315, 0xdedb, 0x0, 0x1);
        gbc.writeMem(0xa31f, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x66);
        EXPECT(gbc.b(),  0xeb);
        EXPECT(gbc.c(),  0x93);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0x23e3);
        EXPECT(gbc.pc(), 0xa321);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa31f), 0xcb);
        EXPECT(gbc.readMem(0xa320), 0xc0);
        // CB C0 029D
        gbc.setState(0x8004, 0x5327, 0xa4a0, 0x7928, 0x87c3, 0xa447, 0x0, 0x1);
        gbc.writeMem(0x8004, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa4);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0x87);
        EXPECT(gbc.e(),  0xc3);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0x47);
        EXPECT(gbc.sp(), 0x5327);
        EXPECT(gbc.pc(), 0x8006);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8004), 0xcb);
        EXPECT(gbc.readMem(0x8005), 0xc0);
        // CB C0 029E
        gbc.setState(0x33b6, 0x8deb, 0x7d00, 0xbf5c, 0x6b1b, 0x979e, 0x1, 0x1);
        gbc.writeMem(0x33b6, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x7d);
        EXPECT(gbc.b(),  0xbf);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0x1b);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0x8deb);
        EXPECT(gbc.pc(), 0x33b8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C0 029F
        gbc.setState(0x96ef, 0xa50a, 0x5ed0, 0xe999, 0xcc22, 0xebb5, 0x1, 0x1);
        gbc.writeMem(0x96ef, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x5e);
        EXPECT(gbc.b(),  0xe9);
        EXPECT(gbc.c(),  0x99);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0xa50a);
        EXPECT(gbc.pc(), 0x96f1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x96ef), 0xcb);
        EXPECT(gbc.readMem(0x96f0), 0xc0);
        // CB C0 02A0
        gbc.setState(0xdf2f, 0x7600, 0x3a10, 0x8aed, 0x2d5a, 0x312b, 0x0, 0x0);
        gbc.writeMem(0xdf2f, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0xed);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0x2b);
        EXPECT(gbc.sp(), 0x7600);
        EXPECT(gbc.pc(), 0xdf31);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdf2f), 0xcb);
        EXPECT(gbc.readMem(0xdf30), 0xc0);
        // CB C0 02A1
        gbc.setState(0xe645, 0xb10c, 0x5000, 0x4273, 0xede5, 0xad58, 0x1, 0x1);
        gbc.writeMem(0xe645, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0x43);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0xed);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0xb10c);
        EXPECT(gbc.pc(), 0xe647);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe645), 0xcb);
        EXPECT(gbc.readMem(0xe646), 0xc0);
        // CB C0 02A2
        gbc.setState(0x8b9f, 0xcedf, 0x12f0, 0x4840, 0x6543, 0x818a, 0x0, 0x1);
        gbc.writeMem(0x8b9f, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x12);
        EXPECT(gbc.b(),  0x49);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0x65);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0xcedf);
        EXPECT(gbc.pc(), 0x8ba1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8b9f), 0xcb);
        EXPECT(gbc.readMem(0x8ba0), 0xc0);
        // CB C0 02A3
        gbc.setState(0x6a89, 0xaa06, 0x1ee0, 0x7c99, 0x489f, 0x55fa, 0x1, 0x0);
        gbc.writeMem(0x6a89, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0x7d);
        EXPECT(gbc.c(),  0x99);
        EXPECT(gbc.d(),  0x48);
        EXPECT(gbc.e(),  0x9f);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0xaa06);
        EXPECT(gbc.pc(), 0x6a8b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C0 02A4
        gbc.setState(0x69d9, 0xae7f, 0xdd00, 0x568a, 0x5bd9, 0x20b4, 0x1, 0x0);
        gbc.writeMem(0x69d9, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xdd);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0x20);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0xae7f);
        EXPECT(gbc.pc(), 0x69db);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C0 02A5
        gbc.setState(0x8759, 0x8a0a, 0x6710, 0x4be7, 0x9607, 0x9997, 0x0, 0x0);
        gbc.writeMem(0x8759, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x67);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0xe7);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0x97);
        EXPECT(gbc.sp(), 0x8a0a);
        EXPECT(gbc.pc(), 0x875b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8759), 0xcb);
        EXPECT(gbc.readMem(0x875a), 0xc0);
        // CB C0 02A6
        gbc.setState(0x6290, 0xda50, 0xdd70, 0x8336, 0x19a5, 0x40fd, 0x1, 0x0);
        gbc.writeMem(0x6290, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xdd);
        EXPECT(gbc.b(),  0x83);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0x19);
        EXPECT(gbc.e(),  0xa5);
        EXPECT(gbc.h(),  0x40);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0xda50);
        EXPECT(gbc.pc(), 0x6292);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C0 02A7
        gbc.setState(0x30cd, 0xe255, 0x4850, 0xde80, 0x7678, 0xa267, 0x0, 0x1);
        gbc.writeMem(0x30cd, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x48);
        EXPECT(gbc.b(),  0xdf);
        EXPECT(gbc.c(),  0x80);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0x67);
        EXPECT(gbc.sp(), 0xe255);
        EXPECT(gbc.pc(), 0x30cf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C0 02A8
        gbc.setState(0xaff5, 0xe61b, 0x3f80, 0x2246, 0x7ebb, 0xe00d, 0x1, 0x1);
        gbc.writeMem(0xaff5, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0x23);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0x7e);
        EXPECT(gbc.e(),  0xbb);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0xe61b);
        EXPECT(gbc.pc(), 0xaff7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaff5), 0xcb);
        EXPECT(gbc.readMem(0xaff6), 0xc0);
        // CB C0 02A9
        gbc.setState(0x341b, 0xdb5a, 0x320, 0xb80f, 0x52bd, 0xe509, 0x1, 0x0);
        gbc.writeMem(0x341b, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0xb9);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0xbd);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0x9);
        EXPECT(gbc.sp(), 0xdb5a);
        EXPECT(gbc.pc(), 0x341d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C0 02AA
        gbc.setState(0xc59d, 0x3e1b, 0x34a0, 0x2dfb, 0xc629, 0xb658, 0x0, 0x0);
        gbc.writeMem(0xc59d, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x34);
        EXPECT(gbc.b(),  0x2d);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0x29);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0x3e1b);
        EXPECT(gbc.pc(), 0xc59f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc59d), 0xcb);
        EXPECT(gbc.readMem(0xc59e), 0xc0);
        // CB C0 02AC
        gbc.setState(0xcb76, 0x352d, 0xf5e0, 0x3366, 0x17bf, 0xc0b, 0x1, 0x1);
        gbc.writeMem(0xcb76, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf5);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0x17);
        EXPECT(gbc.e(),  0xbf);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0x352d);
        EXPECT(gbc.pc(), 0xcb78);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcb76), 0xcb);
        EXPECT(gbc.readMem(0xcb77), 0xc0);
        // CB C0 02AD
        gbc.setState(0x12e3, 0xacd4, 0x4160, 0x1478, 0x602a, 0x1225, 0x0, 0x1);
        gbc.writeMem(0x12e3, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0x60);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0xacd4);
        EXPECT(gbc.pc(), 0x12e5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C0 02AF
        gbc.setState(0xe2d5, 0xbfe, 0x4260, 0xd69f, 0xce7b, 0xbbaa, 0x1, 0x0);
        gbc.writeMem(0xe2d5, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x42);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0x9f);
        EXPECT(gbc.d(),  0xce);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0xaa);
        EXPECT(gbc.sp(), 0xbfe);
        EXPECT(gbc.pc(), 0xe2d7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe2d5), 0xcb);
        EXPECT(gbc.readMem(0xe2d6), 0xc0);
        // CB C0 02B0
        gbc.setState(0x2f36, 0xa712, 0x8ba0, 0x92e8, 0xfc94, 0x51bd, 0x1, 0x1);
        gbc.writeMem(0x2f36, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0x93);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0xbd);
        EXPECT(gbc.sp(), 0xa712);
        EXPECT(gbc.pc(), 0x2f38);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C0 02B1
        gbc.setState(0xe1d6, 0xfe1f, 0x31a0, 0xad98, 0x918a, 0xec98, 0x0, 0x1);
        gbc.writeMem(0xe1d6, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x31);
        EXPECT(gbc.b(),  0xad);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0x8a);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0xfe1f);
        EXPECT(gbc.pc(), 0xe1d8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe1d6), 0xcb);
        EXPECT(gbc.readMem(0xe1d7), 0xc0);
        // CB C0 02B2
        gbc.setState(0x2cf6, 0xad36, 0x9670, 0xefd0, 0x5542, 0x108d, 0x1, 0x1);
        gbc.writeMem(0x2cf6, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x96);
        EXPECT(gbc.b(),  0xef);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0x42);
        EXPECT(gbc.h(),  0x10);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0xad36);
        EXPECT(gbc.pc(), 0x2cf8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C0 02B3
        gbc.setState(0x383a, 0x75fb, 0x8f60, 0x622e, 0x27f1, 0xd1ec, 0x1, 0x1);
        gbc.writeMem(0x383a, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x8f);
        EXPECT(gbc.b(),  0x63);
        EXPECT(gbc.c(),  0x2e);
        EXPECT(gbc.d(),  0x27);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0xec);
        EXPECT(gbc.sp(), 0x75fb);
        EXPECT(gbc.pc(), 0x383c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C0 02B4
        gbc.setState(0x77e1, 0x15c6, 0xccc0, 0x42eb, 0xe5fe, 0x39b4, 0x1, 0x0);
        gbc.writeMem(0x77e1, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0x43);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0xfe);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0x15c6);
        EXPECT(gbc.pc(), 0x77e3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C0 02B5
        gbc.setState(0x2c1c, 0x9da4, 0x7410, 0x9ed8, 0x7aa6, 0x9a32, 0x1, 0x0);
        gbc.writeMem(0x2c1c, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x74);
        EXPECT(gbc.b(),  0x9f);
        EXPECT(gbc.c(),  0xd8);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0xa6);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0x9da4);
        EXPECT(gbc.pc(), 0x2c1e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C0 02B6
        gbc.setState(0x2d5e, 0x825, 0x7640, 0x2279, 0xe682, 0x9eb8, 0x0, 0x0);
        gbc.writeMem(0x2d5e, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0x23);
        EXPECT(gbc.c(),  0x79);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0x82);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0xb8);
        EXPECT(gbc.sp(), 0x825);
        EXPECT(gbc.pc(), 0x2d60);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C0 02B7
        gbc.setState(0x982a, 0x9ea7, 0x6630, 0x8f0c, 0xf7fa, 0x7371, 0x0, 0x1);
        gbc.writeMem(0x982a, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x66);
        EXPECT(gbc.b(),  0x8f);
        EXPECT(gbc.c(),  0xc);
        EXPECT(gbc.d(),  0xf7);
        EXPECT(gbc.e(),  0xfa);
        EXPECT(gbc.h(),  0x73);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0x9ea7);
        EXPECT(gbc.pc(), 0x982c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x982a), 0xcb);
        EXPECT(gbc.readMem(0x982b), 0xc0);
        // CB C0 02B8
        gbc.setState(0xd40a, 0xb5e7, 0xd480, 0x6098, 0x5995, 0x6f0f, 0x0, 0x0);
        gbc.writeMem(0xd40a, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0x59);
        EXPECT(gbc.e(),  0x95);
        EXPECT(gbc.h(),  0x6f);
        EXPECT(gbc.l(),  0xf);
        EXPECT(gbc.sp(), 0xb5e7);
        EXPECT(gbc.pc(), 0xd40c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd40a), 0xcb);
        EXPECT(gbc.readMem(0xd40b), 0xc0);
        // CB C0 02B9
        gbc.setState(0x10e2, 0x65e5, 0xfc40, 0x44b1, 0x5b4, 0xeed3, 0x1, 0x0);
        gbc.writeMem(0x10e2, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0xb1);
        EXPECT(gbc.d(),  0x5);
        EXPECT(gbc.e(),  0xb4);
        EXPECT(gbc.h(),  0xee);
        EXPECT(gbc.l(),  0xd3);
        EXPECT(gbc.sp(), 0x65e5);
        EXPECT(gbc.pc(), 0x10e4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C0 02BA
        gbc.setState(0xec46, 0xbcc9, 0x7ba0, 0xc766, 0xf826, 0x49fb, 0x1, 0x1);
        gbc.writeMem(0xec46, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0x49);
        EXPECT(gbc.l(),  0xfb);
        EXPECT(gbc.sp(), 0xbcc9);
        EXPECT(gbc.pc(), 0xec48);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xec46), 0xcb);
        EXPECT(gbc.readMem(0xec47), 0xc0);
        // CB C0 02BB
        gbc.setState(0xb680, 0x8cf0, 0x3250, 0xcce8, 0x96e0, 0xfc11, 0x1, 0x0);
        gbc.writeMem(0xb680, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0x11);
        EXPECT(gbc.sp(), 0x8cf0);
        EXPECT(gbc.pc(), 0xb682);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb680), 0xcb);
        EXPECT(gbc.readMem(0xb681), 0xc0);
        // CB C0 02BC
        gbc.setState(0x8ffb, 0xfbb0, 0x5330, 0xb2b9, 0x4c14, 0x817e, 0x0, 0x0);
        gbc.writeMem(0x8ffb, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x53);
        EXPECT(gbc.b(),  0xb3);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0x4c);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0x7e);
        EXPECT(gbc.sp(), 0xfbb0);
        EXPECT(gbc.pc(), 0x8ffd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8ffb), 0xcb);
        EXPECT(gbc.readMem(0x8ffc), 0xc0);
        // CB C0 02BD
        gbc.setState(0x7bdf, 0x9257, 0x97e0, 0xc650, 0x9a54, 0x374, 0x0, 0x0);
        gbc.writeMem(0x7bdf, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x97);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0x3);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0x9257);
        EXPECT(gbc.pc(), 0x7be1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C0 02BE
        gbc.setState(0x3818, 0xd227, 0xf370, 0x889d, 0x585, 0x2961, 0x0, 0x1);
        gbc.writeMem(0x3818, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0x9d);
        EXPECT(gbc.d(),  0x5);
        EXPECT(gbc.e(),  0x85);
        EXPECT(gbc.h(),  0x29);
        EXPECT(gbc.l(),  0x61);
        EXPECT(gbc.sp(), 0xd227);
        EXPECT(gbc.pc(), 0x381a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C0 02BF
        gbc.setState(0xd6d1, 0xfb03, 0xed40, 0xd4e5, 0xb3a2, 0xdccd, 0x1, 0x1);
        gbc.writeMem(0xd6d1, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0xd5);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0xb3);
        EXPECT(gbc.e(),  0xa2);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0xcd);
        EXPECT(gbc.sp(), 0xfb03);
        EXPECT(gbc.pc(), 0xd6d3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd6d1), 0xcb);
        EXPECT(gbc.readMem(0xd6d2), 0xc0);
        // CB C0 02C0
        gbc.setState(0xb799, 0xb2be, 0x3d30, 0x714, 0xd525, 0xa0db, 0x0, 0x0);
        gbc.writeMem(0xb799, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x3d);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0xa0);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0xb2be);
        EXPECT(gbc.pc(), 0xb79b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb799), 0xcb);
        EXPECT(gbc.readMem(0xb79a), 0xc0);
        // CB C0 02C1
        gbc.setState(0x9e8c, 0x959e, 0x2350, 0x3544, 0xee49, 0xb25e, 0x1, 0x1);
        gbc.writeMem(0x9e8c, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0xee);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0x959e);
        EXPECT(gbc.pc(), 0x9e8e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9e8c), 0xcb);
        EXPECT(gbc.readMem(0x9e8d), 0xc0);
        // CB C0 02C2
        gbc.setState(0x70e2, 0x3c70, 0x17f0, 0x3ff1, 0x15f9, 0x51ca, 0x1, 0x1);
        gbc.writeMem(0x70e2, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x17);
        EXPECT(gbc.b(),  0x3f);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0x15);
        EXPECT(gbc.e(),  0xf9);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0xca);
        EXPECT(gbc.sp(), 0x3c70);
        EXPECT(gbc.pc(), 0x70e4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C0 02C3
        gbc.setState(0x1288, 0xca4a, 0x41d0, 0x3ae9, 0xf806, 0x7913, 0x1, 0x1);
        gbc.writeMem(0x1288, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0x3b);
        EXPECT(gbc.c(),  0xe9);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0x79);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0xca4a);
        EXPECT(gbc.pc(), 0x128a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C0 02C4
        gbc.setState(0x8470, 0xe0c3, 0xc9a0, 0x7576, 0xc04b, 0xca02, 0x1, 0x1);
        gbc.writeMem(0x8470, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xc9);
        EXPECT(gbc.b(),  0x75);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0xca);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0xe0c3);
        EXPECT(gbc.pc(), 0x8472);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8470), 0xcb);
        EXPECT(gbc.readMem(0x8471), 0xc0);
        // CB C0 02C5
        gbc.setState(0x1e49, 0x7564, 0x47d0, 0x4d59, 0x4207, 0xe887, 0x0, 0x0);
        gbc.writeMem(0x1e49, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0x87);
        EXPECT(gbc.sp(), 0x7564);
        EXPECT(gbc.pc(), 0x1e4b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C0 02C6
        gbc.setState(0x8549, 0x78a2, 0x7c20, 0x7b25, 0x465a, 0x6f2a, 0x1, 0x0);
        gbc.writeMem(0x8549, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x7c);
        EXPECT(gbc.b(),  0x7b);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0x46);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0x6f);
        EXPECT(gbc.l(),  0x2a);
        EXPECT(gbc.sp(), 0x78a2);
        EXPECT(gbc.pc(), 0x854b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8549), 0xcb);
        EXPECT(gbc.readMem(0x854a), 0xc0);
        // CB C0 02C7
        gbc.setState(0x3744, 0x223f, 0x6ca0, 0x7426, 0x257c, 0xa55, 0x0, 0x0);
        gbc.writeMem(0x3744, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0x75);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0x25);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0xa);
        EXPECT(gbc.l(),  0x55);
        EXPECT(gbc.sp(), 0x223f);
        EXPECT(gbc.pc(), 0x3746);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C0 02C8
        gbc.setState(0xe5e4, 0x8de7, 0xeee0, 0x8d0c, 0x4af, 0x2a61, 0x0, 0x0);
        gbc.writeMem(0xe5e4, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xee);
        EXPECT(gbc.b(),  0x8d);
        EXPECT(gbc.c(),  0xc);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0x2a);
        EXPECT(gbc.l(),  0x61);
        EXPECT(gbc.sp(), 0x8de7);
        EXPECT(gbc.pc(), 0xe5e6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe5e4), 0xcb);
        EXPECT(gbc.readMem(0xe5e5), 0xc0);
        // CB C0 02C9
        gbc.setState(0xfb7, 0xf163, 0x8f00, 0x19fd, 0x44fa, 0x6d96, 0x1, 0x0);
        gbc.writeMem(0xfb7, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x8f);
        EXPECT(gbc.b(),  0x19);
        EXPECT(gbc.c(),  0xfd);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0xfa);
        EXPECT(gbc.h(),  0x6d);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0xf163);
        EXPECT(gbc.pc(), 0xfb9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C0 02CA
        gbc.setState(0x63a8, 0x1bf6, 0xc0a0, 0xbf4e, 0xb614, 0xd64c, 0x0, 0x1);
        gbc.writeMem(0x63a8, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0xbf);
        EXPECT(gbc.c(),  0x4e);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0x1bf6);
        EXPECT(gbc.pc(), 0x63aa);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C0 02CB
        gbc.setState(0x133b, 0x2ae6, 0x8570, 0x7dc, 0x8e06, 0x8909, 0x1, 0x0);
        gbc.writeMem(0x133b, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x85);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0xdc);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0x9);
        EXPECT(gbc.sp(), 0x2ae6);
        EXPECT(gbc.pc(), 0x133d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C0 02CC
        gbc.setState(0x4622, 0x7852, 0x1f60, 0xcdea, 0xef93, 0x2e8b, 0x1, 0x0);
        gbc.writeMem(0x4622, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0xea);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0x2e);
        EXPECT(gbc.l(),  0x8b);
        EXPECT(gbc.sp(), 0x7852);
        EXPECT(gbc.pc(), 0x4624);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C0 02CD
        gbc.setState(0xcf2b, 0x4af1, 0x3de0, 0x76bb, 0x6017, 0xf933, 0x0, 0x0);
        gbc.writeMem(0xcf2b, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x3d);
        EXPECT(gbc.b(),  0x77);
        EXPECT(gbc.c(),  0xbb);
        EXPECT(gbc.d(),  0x60);
        EXPECT(gbc.e(),  0x17);
        EXPECT(gbc.h(),  0xf9);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0x4af1);
        EXPECT(gbc.pc(), 0xcf2d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcf2b), 0xcb);
        EXPECT(gbc.readMem(0xcf2c), 0xc0);
        // CB C0 02CE
        gbc.setState(0x57d4, 0xc883, 0xac70, 0xdc15, 0x5fa0, 0x728c, 0x1, 0x0);
        gbc.writeMem(0x57d4, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xac);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0x5f);
        EXPECT(gbc.e(),  0xa0);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0x8c);
        EXPECT(gbc.sp(), 0xc883);
        EXPECT(gbc.pc(), 0x57d6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C0 02CF
        gbc.setState(0x48fa, 0x74a6, 0x2ca0, 0xe2c8, 0x6101, 0x1ffa, 0x0, 0x0);
        gbc.writeMem(0x48fa, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x2c);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0xc8);
        EXPECT(gbc.d(),  0x61);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0x1f);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0x74a6);
        EXPECT(gbc.pc(), 0x48fc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C0 02D0
        gbc.setState(0xbb68, 0x9d51, 0xa390, 0xa320, 0x6b5a, 0xab69, 0x0, 0x0);
        gbc.writeMem(0xbb68, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa3);
        EXPECT(gbc.b(),  0xa3);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0x9d51);
        EXPECT(gbc.pc(), 0xbb6a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbb68), 0xcb);
        EXPECT(gbc.readMem(0xbb69), 0xc0);
        // CB C0 02D1
        gbc.setState(0x8921, 0x8c2f, 0xff50, 0x56bf, 0xf7c6, 0xae00, 0x0, 0x0);
        gbc.writeMem(0x8921, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0xbf);
        EXPECT(gbc.d(),  0xf7);
        EXPECT(gbc.e(),  0xc6);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0x0);
        EXPECT(gbc.sp(), 0x8c2f);
        EXPECT(gbc.pc(), 0x8923);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8921), 0xcb);
        EXPECT(gbc.readMem(0x8922), 0xc0);
        // CB C0 02D2
        gbc.setState(0x7cca, 0xa34, 0x4500, 0xcfff, 0xb13e, 0x7817, 0x0, 0x0);
        gbc.writeMem(0x7cca, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0xcf);
        EXPECT(gbc.c(),  0xff);
        EXPECT(gbc.d(),  0xb1);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0x78);
        EXPECT(gbc.l(),  0x17);
        EXPECT(gbc.sp(), 0xa34);
        EXPECT(gbc.pc(), 0x7ccc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C0 02D3
        gbc.setState(0xa9e, 0x85b3, 0x6e0, 0xf1db, 0xa0dd, 0x3e6a, 0x1, 0x1);
        gbc.writeMem(0xa9e, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0xa0);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0x85b3);
        EXPECT(gbc.pc(), 0xaa0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C0 02D4
        gbc.setState(0xb0e7, 0x9b78, 0xd350, 0x4894, 0x7d2e, 0x846c, 0x1, 0x1);
        gbc.writeMem(0xb0e7, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd3);
        EXPECT(gbc.b(),  0x49);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0x7d);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0x9b78);
        EXPECT(gbc.pc(), 0xb0e9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb0e7), 0xcb);
        EXPECT(gbc.readMem(0xb0e8), 0xc0);
        // CB C0 02D5
        gbc.setState(0x8019, 0x8cb2, 0xd4f0, 0x27c9, 0xd900, 0x9677, 0x1, 0x0);
        gbc.writeMem(0x8019, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0xc9);
        EXPECT(gbc.d(),  0xd9);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0x8cb2);
        EXPECT(gbc.pc(), 0x801b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8019), 0xcb);
        EXPECT(gbc.readMem(0x801a), 0xc0);
        // CB C0 02D6
        gbc.setState(0x5579, 0x9f89, 0x830, 0x1c53, 0xc107, 0x2465, 0x0, 0x1);
        gbc.writeMem(0x5579, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0x53);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0x65);
        EXPECT(gbc.sp(), 0x9f89);
        EXPECT(gbc.pc(), 0x557b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C0 02D7
        gbc.setState(0xbe66, 0xd941, 0x3370, 0x159d, 0xa807, 0xc025, 0x1, 0x0);
        gbc.writeMem(0xbe66, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0x9d);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0xd941);
        EXPECT(gbc.pc(), 0xbe68);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbe66), 0xcb);
        EXPECT(gbc.readMem(0xbe67), 0xc0);
        // CB C0 02D8
        gbc.setState(0xa836, 0x12e3, 0xe130, 0x97af, 0x8038, 0x2fb, 0x0, 0x1);
        gbc.writeMem(0xa836, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe1);
        EXPECT(gbc.b(),  0x97);
        EXPECT(gbc.c(),  0xaf);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0x38);
        EXPECT(gbc.h(),  0x2);
        EXPECT(gbc.l(),  0xfb);
        EXPECT(gbc.sp(), 0x12e3);
        EXPECT(gbc.pc(), 0xa838);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa836), 0xcb);
        EXPECT(gbc.readMem(0xa837), 0xc0);
        // CB C0 02D9
        gbc.setState(0x58d0, 0x1dcd, 0x9e30, 0xcd39, 0xd63, 0x883f, 0x0, 0x1);
        gbc.writeMem(0x58d0, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0xd);
        EXPECT(gbc.e(),  0x63);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0x1dcd);
        EXPECT(gbc.pc(), 0x58d2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C0 02DA
        gbc.setState(0xa001, 0x70c0, 0x18f0, 0x344c, 0x1dd, 0xc2d0, 0x0, 0x1);
        gbc.writeMem(0xa001, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0x1);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0xd0);
        EXPECT(gbc.sp(), 0x70c0);
        EXPECT(gbc.pc(), 0xa003);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa001), 0xcb);
        EXPECT(gbc.readMem(0xa002), 0xc0);
        // CB C0 02DB
        gbc.setState(0xd310, 0xd3ef, 0xfea0, 0xd998, 0x8dd5, 0xd344, 0x1, 0x1);
        gbc.writeMem(0xd310, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0x8d);
        EXPECT(gbc.e(),  0xd5);
        EXPECT(gbc.h(),  0xd3);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0xd3ef);
        EXPECT(gbc.pc(), 0xd312);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd310), 0xcb);
        EXPECT(gbc.readMem(0xd311), 0xc0);
        // CB C0 02DC
        gbc.setState(0x81d8, 0x3e89, 0xe870, 0x9045, 0xe05a, 0x4a8f, 0x0, 0x0);
        gbc.writeMem(0x81d8, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0x4a);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0x3e89);
        EXPECT(gbc.pc(), 0x81da);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x81d8), 0xcb);
        EXPECT(gbc.readMem(0x81d9), 0xc0);
        // CB C0 02DD
        gbc.setState(0x455e, 0xb28d, 0x2ed0, 0x41d0, 0x2783, 0x9d39, 0x0, 0x0);
        gbc.writeMem(0x455e, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0x27);
        EXPECT(gbc.e(),  0x83);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0x39);
        EXPECT(gbc.sp(), 0xb28d);
        EXPECT(gbc.pc(), 0x4560);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C0 02DE
        gbc.setState(0x89de, 0xfce6, 0x6bf0, 0xd4a6, 0x6d41, 0x756b, 0x1, 0x1);
        gbc.writeMem(0x89de, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0xd5);
        EXPECT(gbc.c(),  0xa6);
        EXPECT(gbc.d(),  0x6d);
        EXPECT(gbc.e(),  0x41);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0x6b);
        EXPECT(gbc.sp(), 0xfce6);
        EXPECT(gbc.pc(), 0x89e0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x89de), 0xcb);
        EXPECT(gbc.readMem(0x89df), 0xc0);
        // CB C0 02DF
        gbc.setState(0x945b, 0x5be5, 0x1140, 0x5992, 0xf39, 0x100f, 0x0, 0x1);
        gbc.writeMem(0x945b, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x11);
        EXPECT(gbc.b(),  0x59);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0x10);
        EXPECT(gbc.l(),  0xf);
        EXPECT(gbc.sp(), 0x5be5);
        EXPECT(gbc.pc(), 0x945d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x945b), 0xcb);
        EXPECT(gbc.readMem(0x945c), 0xc0);
        // CB C0 02E0
        gbc.setState(0xe030, 0xa03b, 0xf6e0, 0xdd89, 0x4a07, 0x4e56, 0x0, 0x1);
        gbc.writeMem(0xe030, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf6);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0x89);
        EXPECT(gbc.d(),  0x4a);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0x4e);
        EXPECT(gbc.l(),  0x56);
        EXPECT(gbc.sp(), 0xa03b);
        EXPECT(gbc.pc(), 0xe032);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe030), 0xcb);
        EXPECT(gbc.readMem(0xe031), 0xc0);
        // CB C0 02E1
        gbc.setState(0xedca, 0x1a5f, 0xe500, 0x24ca, 0x49a6, 0xed, 0x0, 0x1);
        gbc.writeMem(0xedca, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe5);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0xa6);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0x1a5f);
        EXPECT(gbc.pc(), 0xedcc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xedca), 0xcb);
        EXPECT(gbc.readMem(0xedcb), 0xc0);
        // CB C0 02E2
        gbc.setState(0x4eef, 0xc2bc, 0xe810, 0xc546, 0x249, 0x458e, 0x0, 0x1);
        gbc.writeMem(0x4eef, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0x45);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0xc2bc);
        EXPECT(gbc.pc(), 0x4ef1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C0 02E3
        gbc.setState(0x1c3b, 0x7ef, 0x5470, 0xaef8, 0xbed1, 0x5ecd, 0x1, 0x1);
        gbc.writeMem(0x1c3b, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x54);
        EXPECT(gbc.b(),  0xaf);
        EXPECT(gbc.c(),  0xf8);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0xd1);
        EXPECT(gbc.h(),  0x5e);
        EXPECT(gbc.l(),  0xcd);
        EXPECT(gbc.sp(), 0x7ef);
        EXPECT(gbc.pc(), 0x1c3d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C0 02E4
        gbc.setState(0x1076, 0xe08a, 0x70b0, 0xcb34, 0x93ab, 0x6cf2, 0x1, 0x0);
        gbc.writeMem(0x1076, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x70);
        EXPECT(gbc.b(),  0xcb);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0x93);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0x6c);
        EXPECT(gbc.l(),  0xf2);
        EXPECT(gbc.sp(), 0xe08a);
        EXPECT(gbc.pc(), 0x1078);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C0 02E5
        gbc.setState(0xa168, 0x9883, 0x21c0, 0x6156, 0x5704, 0xdca0, 0x1, 0x1);
        gbc.writeMem(0xa168, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0x57);
        EXPECT(gbc.e(),  0x4);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0x9883);
        EXPECT(gbc.pc(), 0xa16a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa168), 0xcb);
        EXPECT(gbc.readMem(0xa169), 0xc0);
        // CB C0 02E6
        gbc.setState(0x2475, 0xd46b, 0xabc0, 0xa561, 0x72e0, 0xe8bc, 0x1, 0x0);
        gbc.writeMem(0x2475, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xab);
        EXPECT(gbc.b(),  0xa5);
        EXPECT(gbc.c(),  0x61);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0xd46b);
        EXPECT(gbc.pc(), 0x2477);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C0 02E7
        gbc.setState(0x65f, 0x8eb3, 0xe0c0, 0xf6f8, 0xf717, 0x3506, 0x1, 0x0);
        gbc.writeMem(0x65f, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe0);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0xf8);
        EXPECT(gbc.d(),  0xf7);
        EXPECT(gbc.e(),  0x17);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0x8eb3);
        EXPECT(gbc.pc(), 0x661);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C0 02E9
        gbc.setState(0x9c9a, 0x9ceb, 0xf150, 0xe15b, 0xf240, 0x9cc0, 0x1, 0x0);
        gbc.writeMem(0x9c9a, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf1);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0xf2);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0x9ceb);
        EXPECT(gbc.pc(), 0x9c9c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9c9a), 0xcb);
        EXPECT(gbc.readMem(0x9c9b), 0xc0);
        // CB C0 02EA
        gbc.setState(0x153, 0x9fcf, 0x2af0, 0x5a05, 0xf4dc, 0x4b1d, 0x1, 0x0);
        gbc.writeMem(0x153, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0xf4);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0x4b);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0x9fcf);
        EXPECT(gbc.pc(), 0x155);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C0 02EB
        gbc.setState(0xf54, 0xa8c3, 0x21c0, 0xfe08, 0x133a, 0x70c8, 0x0, 0x1);
        gbc.writeMem(0xf54, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0xff);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0x70);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0xa8c3);
        EXPECT(gbc.pc(), 0xf56);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C0 02EC
        gbc.setState(0x7dcf, 0xc37c, 0x8d60, 0x93b3, 0x1758, 0x79db, 0x1, 0x0);
        gbc.writeMem(0x7dcf, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0x93);
        EXPECT(gbc.c(),  0xb3);
        EXPECT(gbc.d(),  0x17);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0x79);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0xc37c);
        EXPECT(gbc.pc(), 0x7dd1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C0 02ED
        gbc.setState(0x78fa, 0xd6f, 0x7e0, 0xb1a3, 0x108d, 0x7722, 0x0, 0x1);
        gbc.writeMem(0x78fa, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0xa3);
        EXPECT(gbc.d(),  0x10);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0x77);
        EXPECT(gbc.l(),  0x22);
        EXPECT(gbc.sp(), 0xd6f);
        EXPECT(gbc.pc(), 0x78fc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C0 02EE
        gbc.setState(0x5520, 0x425b, 0x9d60, 0x2ad0, 0xe67b, 0xb8d7, 0x0, 0x1);
        gbc.writeMem(0x5520, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x9d);
        EXPECT(gbc.b(),  0x2b);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0xd7);
        EXPECT(gbc.sp(), 0x425b);
        EXPECT(gbc.pc(), 0x5522);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C0 02EF
        gbc.setState(0x1a7f, 0x53e5, 0xcc30, 0x11d8, 0x3430, 0x472c, 0x1, 0x1);
        gbc.writeMem(0x1a7f, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0x11);
        EXPECT(gbc.c(),  0xd8);
        EXPECT(gbc.d(),  0x34);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0x2c);
        EXPECT(gbc.sp(), 0x53e5);
        EXPECT(gbc.pc(), 0x1a81);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C0 02F0
        gbc.setState(0x3a7b, 0x81f1, 0x6d80, 0xc402, 0x7c88, 0xcb87, 0x1, 0x0);
        gbc.writeMem(0x3a7b, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x6d);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0x7c);
        EXPECT(gbc.e(),  0x88);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0x87);
        EXPECT(gbc.sp(), 0x81f1);
        EXPECT(gbc.pc(), 0x3a7d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C0 02F1
        gbc.setState(0xe55, 0x69e4, 0x6f20, 0x845, 0x91db, 0x51c1, 0x1, 0x0);
        gbc.writeMem(0xe55, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0xdb);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0x69e4);
        EXPECT(gbc.pc(), 0xe57);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C0 02F2
        gbc.setState(0x4c81, 0x3537, 0xcc60, 0xa3ef, 0xfbaa, 0xa0f0, 0x0, 0x0);
        gbc.writeMem(0x4c81, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0xa3);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0xfb);
        EXPECT(gbc.e(),  0xaa);
        EXPECT(gbc.h(),  0xa0);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0x3537);
        EXPECT(gbc.pc(), 0x4c83);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C0 02F3
        gbc.setState(0xb0a5, 0x8987, 0x27b0, 0x3cb6, 0x83cb, 0x4ded, 0x0, 0x1);
        gbc.writeMem(0xb0a5, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x27);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0xb6);
        EXPECT(gbc.d(),  0x83);
        EXPECT(gbc.e(),  0xcb);
        EXPECT(gbc.h(),  0x4d);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0x8987);
        EXPECT(gbc.pc(), 0xb0a7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb0a5), 0xcb);
        EXPECT(gbc.readMem(0xb0a6), 0xc0);
        // CB C0 02F4
        gbc.setState(0x7f0f, 0xbf22, 0xe040, 0x79c4, 0x83a1, 0xbe18, 0x1, 0x1);
        gbc.writeMem(0x7f0f, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe0);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0xc4);
        EXPECT(gbc.d(),  0x83);
        EXPECT(gbc.e(),  0xa1);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0xbf22);
        EXPECT(gbc.pc(), 0x7f11);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C0 02F5
        gbc.setState(0x8184, 0xa82b, 0x2d90, 0x31ff, 0x8b29, 0x2a3d, 0x1, 0x0);
        gbc.writeMem(0x8184, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0xff);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0x29);
        EXPECT(gbc.h(),  0x2a);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0xa82b);
        EXPECT(gbc.pc(), 0x8186);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8184), 0xcb);
        EXPECT(gbc.readMem(0x8185), 0xc0);
        // CB C0 02F6
        gbc.setState(0xc372, 0xf9a8, 0xd230, 0xd46d, 0xf356, 0xfac8, 0x1, 0x0);
        gbc.writeMem(0xc372, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0xd5);
        EXPECT(gbc.c(),  0x6d);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0x56);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0xf9a8);
        EXPECT(gbc.pc(), 0xc374);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc372), 0xcb);
        EXPECT(gbc.readMem(0xc373), 0xc0);
        // CB C0 02F7
        gbc.setState(0xa428, 0xd5a3, 0xde00, 0xf519, 0x8c96, 0x5541, 0x1, 0x1);
        gbc.writeMem(0xa428, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xde);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0x41);
        EXPECT(gbc.sp(), 0xd5a3);
        EXPECT(gbc.pc(), 0xa42a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa428), 0xcb);
        EXPECT(gbc.readMem(0xa429), 0xc0);
        // CB C0 02F8
        gbc.setState(0xd8e1, 0xcbcb, 0xc220, 0xcdaf, 0x616, 0x841c, 0x0, 0x1);
        gbc.writeMem(0xd8e1, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xc2);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0xaf);
        EXPECT(gbc.d(),  0x6);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0x1c);
        EXPECT(gbc.sp(), 0xcbcb);
        EXPECT(gbc.pc(), 0xd8e3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd8e1), 0xcb);
        EXPECT(gbc.readMem(0xd8e2), 0xc0);
        // CB C0 02F9
        gbc.setState(0xa23a, 0xeae7, 0xacf0, 0x216, 0x64e, 0xeede, 0x1, 0x1);
        gbc.writeMem(0xa23a, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xac);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0x6);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0xee);
        EXPECT(gbc.l(),  0xde);
        EXPECT(gbc.sp(), 0xeae7);
        EXPECT(gbc.pc(), 0xa23c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa23a), 0xcb);
        EXPECT(gbc.readMem(0xa23b), 0xc0);
        // CB C0 02FA
        gbc.setState(0x8da, 0xf9c2, 0x9ff0, 0x6986, 0xb09a, 0x55fb, 0x0, 0x1);
        gbc.writeMem(0x8da, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x9f);
        EXPECT(gbc.b(),  0x69);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0xfb);
        EXPECT(gbc.sp(), 0xf9c2);
        EXPECT(gbc.pc(), 0x8dc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C0 02FB
        gbc.setState(0x5ac9, 0xd38b, 0xf020, 0x72af, 0x6887, 0x462e, 0x1, 0x0);
        gbc.writeMem(0x5ac9, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf0);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0xaf);
        EXPECT(gbc.d(),  0x68);
        EXPECT(gbc.e(),  0x87);
        EXPECT(gbc.h(),  0x46);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0xd38b);
        EXPECT(gbc.pc(), 0x5acb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C0 02FC
        gbc.setState(0x9ae1, 0x20db, 0xcea0, 0x1328, 0xf4ff, 0xe141, 0x0, 0x0);
        gbc.writeMem(0x9ae1, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xce);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0xf4);
        EXPECT(gbc.e(),  0xff);
        EXPECT(gbc.h(),  0xe1);
        EXPECT(gbc.l(),  0x41);
        EXPECT(gbc.sp(), 0x20db);
        EXPECT(gbc.pc(), 0x9ae3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9ae1), 0xcb);
        EXPECT(gbc.readMem(0x9ae2), 0xc0);
        // CB C0 02FD
        gbc.setState(0xe8de, 0xe8bb, 0x5f0, 0xeb82, 0xe9a6, 0x1f7c, 0x1, 0x1);
        gbc.writeMem(0xe8de, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x5);
        EXPECT(gbc.b(),  0xeb);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0xe9);
        EXPECT(gbc.e(),  0xa6);
        EXPECT(gbc.h(),  0x1f);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0xe8bb);
        EXPECT(gbc.pc(), 0xe8e0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe8de), 0xcb);
        EXPECT(gbc.readMem(0xe8df), 0xc0);
        // CB C0 02FE
        gbc.setState(0x3225, 0x41c4, 0x4990, 0x2120, 0x5ab3, 0xa3d5, 0x1, 0x0);
        gbc.writeMem(0x3225, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0x21);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0xb3);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0xd5);
        EXPECT(gbc.sp(), 0x41c4);
        EXPECT(gbc.pc(), 0x3227);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C0 02FF
        gbc.setState(0x5dda, 0x303d, 0xe30, 0x70be, 0x3cfe, 0x77ac, 0x1, 0x0);
        gbc.writeMem(0x5dda, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0xbe);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0xfe);
        EXPECT(gbc.h(),  0x77);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0x303d);
        EXPECT(gbc.pc(), 0x5ddc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C0 0300
        gbc.setState(0xd8e4, 0x939d, 0x5ae0, 0x4fd2, 0x9aa0, 0x767, 0x1, 0x1);
        gbc.writeMem(0xd8e4, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0x4f);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0xa0);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0x67);
        EXPECT(gbc.sp(), 0x939d);
        EXPECT(gbc.pc(), 0xd8e6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd8e4), 0xcb);
        EXPECT(gbc.readMem(0xd8e5), 0xc0);
        // CB C0 0301
        gbc.setState(0x8b08, 0xa9eb, 0x43b0, 0xc2e8, 0xbdc9, 0x9ffa, 0x1, 0x1);
        gbc.writeMem(0x8b08, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x43);
        EXPECT(gbc.b(),  0xc3);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0xc9);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0xa9eb);
        EXPECT(gbc.pc(), 0x8b0a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8b08), 0xcb);
        EXPECT(gbc.readMem(0x8b09), 0xc0);
        // CB C0 0302
        gbc.setState(0xd16b, 0x4d43, 0x3940, 0xc6f1, 0x3455, 0x7c13, 0x1, 0x0);
        gbc.writeMem(0xd16b, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0x34);
        EXPECT(gbc.e(),  0x55);
        EXPECT(gbc.h(),  0x7c);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0x4d43);
        EXPECT(gbc.pc(), 0xd16d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd16b), 0xcb);
        EXPECT(gbc.readMem(0xd16c), 0xc0);
        // CB C0 0303
        gbc.setState(0x54b6, 0x6fd, 0x2980, 0xa5c8, 0xbaae, 0x80f8, 0x0, 0x1);
        gbc.writeMem(0x54b6, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0xa5);
        EXPECT(gbc.c(),  0xc8);
        EXPECT(gbc.d(),  0xba);
        EXPECT(gbc.e(),  0xae);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0x6fd);
        EXPECT(gbc.pc(), 0x54b8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C0 0304
        gbc.setState(0x571c, 0xd924, 0xf1a0, 0x4929, 0x48e1, 0x1aa0, 0x1, 0x1);
        gbc.writeMem(0x571c, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf1);
        EXPECT(gbc.b(),  0x49);
        EXPECT(gbc.c(),  0x29);
        EXPECT(gbc.d(),  0x48);
        EXPECT(gbc.e(),  0xe1);
        EXPECT(gbc.h(),  0x1a);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0xd924);
        EXPECT(gbc.pc(), 0x571e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C0 0305
        gbc.setState(0x8f5f, 0xb72, 0x5c70, 0x7408, 0x40dc, 0xc389, 0x0, 0x0);
        gbc.writeMem(0x8f5f, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0x75);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0x40);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0xc3);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0xb72);
        EXPECT(gbc.pc(), 0x8f61);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8f5f), 0xcb);
        EXPECT(gbc.readMem(0x8f60), 0xc0);
        // CB C0 0306
        gbc.setState(0x15c0, 0xd6b8, 0xbab0, 0x299e, 0x8288, 0xa8f9, 0x1, 0x0);
        gbc.writeMem(0x15c0, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0x9e);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0x88);
        EXPECT(gbc.h(),  0xa8);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0xd6b8);
        EXPECT(gbc.pc(), 0x15c2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C0 0307
        gbc.setState(0x55be, 0x9f33, 0xe550, 0xc1f8, 0x2198, 0xbcf3, 0x1, 0x0);
        gbc.writeMem(0x55be, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe5);
        EXPECT(gbc.b(),  0xc1);
        EXPECT(gbc.c(),  0xf8);
        EXPECT(gbc.d(),  0x21);
        EXPECT(gbc.e(),  0x98);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0x9f33);
        EXPECT(gbc.pc(), 0x55c0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C0 0308
        gbc.setState(0x3141, 0x5e3e, 0x2ba0, 0xacf8, 0x4e7f, 0x9669, 0x1, 0x1);
        gbc.writeMem(0x3141, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x2b);
        EXPECT(gbc.b(),  0xad);
        EXPECT(gbc.c(),  0xf8);
        EXPECT(gbc.d(),  0x4e);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0x5e3e);
        EXPECT(gbc.pc(), 0x3143);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C0 0309
        gbc.setState(0x2d82, 0x7dc3, 0x3c10, 0xe82b, 0xca19, 0xeee, 0x1, 0x0);
        gbc.writeMem(0x2d82, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0xe9);
        EXPECT(gbc.c(),  0x2b);
        EXPECT(gbc.d(),  0xca);
        EXPECT(gbc.e(),  0x19);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0xee);
        EXPECT(gbc.sp(), 0x7dc3);
        EXPECT(gbc.pc(), 0x2d84);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C0 030A
        gbc.setState(0x2a27, 0x60f8, 0x61e0, 0x808c, 0x5914, 0xf165, 0x1, 0x0);
        gbc.writeMem(0x2a27, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0x81);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0x59);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0xf1);
        EXPECT(gbc.l(),  0x65);
        EXPECT(gbc.sp(), 0x60f8);
        EXPECT(gbc.pc(), 0x2a29);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C0 030B
        gbc.setState(0x68d2, 0xd112, 0x1790, 0x6908, 0xc96b, 0x4fcd, 0x1, 0x1);
        gbc.writeMem(0x68d2, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x17);
        EXPECT(gbc.b(),  0x69);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0xc9);
        EXPECT(gbc.e(),  0x6b);
        EXPECT(gbc.h(),  0x4f);
        EXPECT(gbc.l(),  0xcd);
        EXPECT(gbc.sp(), 0xd112);
        EXPECT(gbc.pc(), 0x68d4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C0 030C
        gbc.setState(0x904f, 0xa8, 0x4110, 0xf848, 0x8042, 0x404e, 0x0, 0x0);
        gbc.writeMem(0x904f, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0x42);
        EXPECT(gbc.h(),  0x40);
        EXPECT(gbc.l(),  0x4e);
        EXPECT(gbc.sp(), 0xa8);
        EXPECT(gbc.pc(), 0x9051);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x904f), 0xcb);
        EXPECT(gbc.readMem(0x9050), 0xc0);
        // CB C0 030D
        gbc.setState(0x77b, 0x9d43, 0x9e50, 0x1fe0, 0x5ad9, 0x52ec, 0x0, 0x1);
        gbc.writeMem(0x77b, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0x52);
        EXPECT(gbc.l(),  0xec);
        EXPECT(gbc.sp(), 0x9d43);
        EXPECT(gbc.pc(), 0x77d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C0 030E
        gbc.setState(0x762c, 0x2ae6, 0xdb00, 0xdf61, 0xae51, 0xa4e9, 0x0, 0x1);
        gbc.writeMem(0x762c, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xdb);
        EXPECT(gbc.b(),  0xdf);
        EXPECT(gbc.c(),  0x61);
        EXPECT(gbc.d(),  0xae);
        EXPECT(gbc.e(),  0x51);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0xe9);
        EXPECT(gbc.sp(), 0x2ae6);
        EXPECT(gbc.pc(), 0x762e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C0 030F
        gbc.setState(0x5609, 0xdd0d, 0xf310, 0x722, 0x9558, 0xe983, 0x0, 0x0);
        gbc.writeMem(0x5609, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0x22);
        EXPECT(gbc.d(),  0x95);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0x83);
        EXPECT(gbc.sp(), 0xdd0d);
        EXPECT(gbc.pc(), 0x560b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C0 0310
        gbc.setState(0xe218, 0x22b8, 0x2a60, 0x36e7, 0x62fe, 0xaa1f, 0x0, 0x1);
        gbc.writeMem(0xe218, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0xe7);
        EXPECT(gbc.d(),  0x62);
        EXPECT(gbc.e(),  0xfe);
        EXPECT(gbc.h(),  0xaa);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0x22b8);
        EXPECT(gbc.pc(), 0xe21a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe218), 0xcb);
        EXPECT(gbc.readMem(0xe219), 0xc0);
        // CB C0 0311
        gbc.setState(0xca24, 0x2868, 0x9460, 0xb150, 0xd606, 0x9398, 0x1, 0x1);
        gbc.writeMem(0xca24, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x94);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0x2868);
        EXPECT(gbc.pc(), 0xca26);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xca24), 0xcb);
        EXPECT(gbc.readMem(0xca25), 0xc0);
        // CB C0 0312
        gbc.setState(0xa578, 0x408, 0x6920, 0xcee, 0xc378, 0x88ce, 0x0, 0x1);
        gbc.writeMem(0xa578, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0xd);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0x408);
        EXPECT(gbc.pc(), 0xa57a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa578), 0xcb);
        EXPECT(gbc.readMem(0xa579), 0xc0);
        // CB C0 0313
        gbc.setState(0xa91e, 0xba70, 0x2890, 0xe8a6, 0x2dc1, 0x8e39, 0x0, 0x1);
        gbc.writeMem(0xa91e, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0xe9);
        EXPECT(gbc.c(),  0xa6);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0x39);
        EXPECT(gbc.sp(), 0xba70);
        EXPECT(gbc.pc(), 0xa920);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa91e), 0xcb);
        EXPECT(gbc.readMem(0xa91f), 0xc0);
        // CB C0 0314
        gbc.setState(0xe8c0, 0xe11f, 0x5bd0, 0xb0f1, 0x96ee, 0x221d, 0x1, 0x1);
        gbc.writeMem(0xe8c0, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0x22);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0xe11f);
        EXPECT(gbc.pc(), 0xe8c2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe8c0), 0xcb);
        EXPECT(gbc.readMem(0xe8c1), 0xc0);
        // CB C0 0315
        gbc.setState(0x95f, 0xcb45, 0x6c00, 0xdd64, 0x1beb, 0xea86, 0x1, 0x1);
        gbc.writeMem(0x95f, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0xea);
        EXPECT(gbc.l(),  0x86);
        EXPECT(gbc.sp(), 0xcb45);
        EXPECT(gbc.pc(), 0x961);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C0 0316
        gbc.setState(0x665b, 0xa6e7, 0xdf00, 0x7977, 0x80d0, 0x678f, 0x0, 0x1);
        gbc.writeMem(0x665b, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xdf);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0x77);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0x67);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0xa6e7);
        EXPECT(gbc.pc(), 0x665d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C0 0317
        gbc.setState(0x7b19, 0xbdaf, 0xb850, 0xaeb2, 0xf1f0, 0xd9e4, 0x1, 0x0);
        gbc.writeMem(0x7b19, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb8);
        EXPECT(gbc.b(),  0xaf);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0xbdaf);
        EXPECT(gbc.pc(), 0x7b1b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C0 0318
        gbc.setState(0x1934, 0x724a, 0x2310, 0x2bad, 0x7582, 0x228f, 0x0, 0x0);
        gbc.writeMem(0x1934, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0x2b);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0x75);
        EXPECT(gbc.e(),  0x82);
        EXPECT(gbc.h(),  0x22);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0x724a);
        EXPECT(gbc.pc(), 0x1936);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C0 0319
        gbc.setState(0xe089, 0xcf1, 0x4500, 0x85b6, 0xf43f, 0xb85d, 0x0, 0x1);
        gbc.writeMem(0xe089, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0xb6);
        EXPECT(gbc.d(),  0xf4);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0xcf1);
        EXPECT(gbc.pc(), 0xe08b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe089), 0xcb);
        EXPECT(gbc.readMem(0xe08a), 0xc0);
        // CB C0 031A
        gbc.setState(0xdc4a, 0x98ce, 0x2130, 0x303f, 0xffda, 0x6ab6, 0x0, 0x0);
        gbc.writeMem(0xdc4a, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0x3f);
        EXPECT(gbc.d(),  0xff);
        EXPECT(gbc.e(),  0xda);
        EXPECT(gbc.h(),  0x6a);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0x98ce);
        EXPECT(gbc.pc(), 0xdc4c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdc4a), 0xcb);
        EXPECT(gbc.readMem(0xdc4b), 0xc0);
        // CB C0 031B
        gbc.setState(0x5596, 0x7c55, 0xace0, 0x57c7, 0x2550, 0x7261, 0x1, 0x0);
        gbc.writeMem(0x5596, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xac);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0xc7);
        EXPECT(gbc.d(),  0x25);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0x61);
        EXPECT(gbc.sp(), 0x7c55);
        EXPECT(gbc.pc(), 0x5598);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C0 031C
        gbc.setState(0x4582, 0x6df, 0xb0d0, 0x2f78, 0x92d9, 0xbc03, 0x1, 0x0);
        gbc.writeMem(0x4582, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0x92);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0x6df);
        EXPECT(gbc.pc(), 0x4584);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C0 031D
        gbc.setState(0xe24c, 0x9216, 0xb830, 0x2c96, 0x47b7, 0x480f, 0x0, 0x0);
        gbc.writeMem(0xe24c, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb8);
        EXPECT(gbc.b(),  0x2d);
        EXPECT(gbc.c(),  0x96);
        EXPECT(gbc.d(),  0x47);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0x48);
        EXPECT(gbc.l(),  0xf);
        EXPECT(gbc.sp(), 0x9216);
        EXPECT(gbc.pc(), 0xe24e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe24c), 0xcb);
        EXPECT(gbc.readMem(0xe24d), 0xc0);
        // CB C0 031E
        gbc.setState(0x8ddf, 0xbe46, 0x9760, 0xe471, 0x85c8, 0xe9ec, 0x0, 0x1);
        gbc.writeMem(0x8ddf, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x97);
        EXPECT(gbc.b(),  0xe5);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0xec);
        EXPECT(gbc.sp(), 0xbe46);
        EXPECT(gbc.pc(), 0x8de1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8ddf), 0xcb);
        EXPECT(gbc.readMem(0x8de0), 0xc0);
        // CB C0 031F
        gbc.setState(0xc27, 0xb7ce, 0x8d0, 0x53e0, 0x43a2, 0xc284, 0x0, 0x1);
        gbc.writeMem(0xc27, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0xa2);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0x84);
        EXPECT(gbc.sp(), 0xb7ce);
        EXPECT(gbc.pc(), 0xc29);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C0 0321
        gbc.setState(0x8301, 0x9105, 0x7e10, 0xf20a, 0xd642, 0xb1ca, 0x0, 0x0);
        gbc.writeMem(0x8301, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0xf3);
        EXPECT(gbc.c(),  0xa);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0x42);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0xca);
        EXPECT(gbc.sp(), 0x9105);
        EXPECT(gbc.pc(), 0x8303);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8301), 0xcb);
        EXPECT(gbc.readMem(0x8302), 0xc0);
        // CB C0 0322
        gbc.setState(0x6895, 0x79b0, 0xff70, 0x4410, 0x90b6, 0x54f5, 0x0, 0x1);
        gbc.writeMem(0x6895, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0xb6);
        EXPECT(gbc.h(),  0x54);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0x79b0);
        EXPECT(gbc.pc(), 0x6897);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C0 0323
        gbc.setState(0x38eb, 0xd252, 0x2f40, 0x2d8a, 0x70df, 0xf16, 0x1, 0x0);
        gbc.writeMem(0x38eb, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x2f);
        EXPECT(gbc.b(),  0x2d);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0x70);
        EXPECT(gbc.e(),  0xdf);
        EXPECT(gbc.h(),  0xf);
        EXPECT(gbc.l(),  0x16);
        EXPECT(gbc.sp(), 0xd252);
        EXPECT(gbc.pc(), 0x38ed);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C0 0325
        gbc.setState(0xca20, 0x710a, 0xca00, 0x1bc2, 0x3ade, 0x20d0, 0x1, 0x1);
        gbc.writeMem(0xca20, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xca);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0x20);
        EXPECT(gbc.l(),  0xd0);
        EXPECT(gbc.sp(), 0x710a);
        EXPECT(gbc.pc(), 0xca22);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xca20), 0xcb);
        EXPECT(gbc.readMem(0xca21), 0xc0);
        // CB C0 0326
        gbc.setState(0x6482, 0xa939, 0x9d90, 0x9453, 0x72ae, 0x32ba, 0x0, 0x1);
        gbc.writeMem(0x6482, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x9d);
        EXPECT(gbc.b(),  0x95);
        EXPECT(gbc.c(),  0x53);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0xae);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0xba);
        EXPECT(gbc.sp(), 0xa939);
        EXPECT(gbc.pc(), 0x6484);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C0 0327
        gbc.setState(0xdd68, 0x333, 0x3930, 0xaac3, 0x4daf, 0x3746, 0x0, 0x0);
        gbc.writeMem(0xdd68, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0xab);
        EXPECT(gbc.c(),  0xc3);
        EXPECT(gbc.d(),  0x4d);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0x46);
        EXPECT(gbc.sp(), 0x333);
        EXPECT(gbc.pc(), 0xdd6a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdd68), 0xcb);
        EXPECT(gbc.readMem(0xdd69), 0xc0);
        // CB C0 0328
        gbc.setState(0x4b2b, 0xab9c, 0x4f30, 0x10ea, 0xd45a, 0x61f, 0x0, 0x0);
        gbc.writeMem(0x4b2b, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0x11);
        EXPECT(gbc.c(),  0xea);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0x6);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0xab9c);
        EXPECT(gbc.pc(), 0x4b2d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C0 0329
        gbc.setState(0x4d71, 0x7616, 0x6150, 0x2065, 0xf092, 0xe941, 0x1, 0x1);
        gbc.writeMem(0x4d71, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0x21);
        EXPECT(gbc.c(),  0x65);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0x41);
        EXPECT(gbc.sp(), 0x7616);
        EXPECT(gbc.pc(), 0x4d73);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C0 032A
        gbc.setState(0x3c69, 0xc939, 0x1b50, 0xed15, 0xa6d6, 0xbf0e, 0x1, 0x0);
        gbc.writeMem(0x3c69, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0xd6);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0xe);
        EXPECT(gbc.sp(), 0xc939);
        EXPECT(gbc.pc(), 0x3c6b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C0 032B
        gbc.setState(0x88e2, 0x2622, 0xe270, 0x4647, 0x238b, 0x654, 0x0, 0x1);
        gbc.writeMem(0x88e2, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0x47);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0x8b);
        EXPECT(gbc.h(),  0x6);
        EXPECT(gbc.l(),  0x54);
        EXPECT(gbc.sp(), 0x2622);
        EXPECT(gbc.pc(), 0x88e4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x88e2), 0xcb);
        EXPECT(gbc.readMem(0x88e3), 0xc0);
        // CB C0 032C
        gbc.setState(0x85b7, 0xa8d9, 0x3650, 0xb1d9, 0xf43, 0xabe6, 0x1, 0x1);
        gbc.writeMem(0x85b7, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x36);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0xd9);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0xa8d9);
        EXPECT(gbc.pc(), 0x85b9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x85b7), 0xcb);
        EXPECT(gbc.readMem(0x85b8), 0xc0);
        // CB C0 032D
        gbc.setState(0x82f7, 0x6957, 0xf030, 0xd502, 0xe3b0, 0xa548, 0x1, 0x1);
        gbc.writeMem(0x82f7, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf0);
        EXPECT(gbc.b(),  0xd5);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0xe3);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0xa5);
        EXPECT(gbc.l(),  0x48);
        EXPECT(gbc.sp(), 0x6957);
        EXPECT(gbc.pc(), 0x82f9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x82f7), 0xcb);
        EXPECT(gbc.readMem(0x82f8), 0xc0);
        // CB C0 032E
        gbc.setState(0x9f56, 0xa3ca, 0x9d20, 0x255b, 0x1be1, 0x8186, 0x0, 0x0);
        gbc.writeMem(0x9f56, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x9d);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0xe1);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0x86);
        EXPECT(gbc.sp(), 0xa3ca);
        EXPECT(gbc.pc(), 0x9f58);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9f56), 0xcb);
        EXPECT(gbc.readMem(0x9f57), 0xc0);
        // CB C0 032F
        gbc.setState(0xb1dd, 0x9e53, 0xcdf0, 0x504d, 0x658, 0x9e5c, 0x0, 0x1);
        gbc.writeMem(0xb1dd, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0x6);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0x9e53);
        EXPECT(gbc.pc(), 0xb1df);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb1dd), 0xcb);
        EXPECT(gbc.readMem(0xb1de), 0xc0);
        // CB C0 0330
        gbc.setState(0xc334, 0xedbc, 0xb4a0, 0x5cba, 0x9931, 0x757c, 0x0, 0x0);
        gbc.writeMem(0xc334, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb4);
        EXPECT(gbc.b(),  0x5d);
        EXPECT(gbc.c(),  0xba);
        EXPECT(gbc.d(),  0x99);
        EXPECT(gbc.e(),  0x31);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0xedbc);
        EXPECT(gbc.pc(), 0xc336);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc334), 0xcb);
        EXPECT(gbc.readMem(0xc335), 0xc0);
        // CB C0 0331
        gbc.setState(0x19dd, 0x779e, 0xbaf0, 0xd512, 0x8849, 0xce44, 0x0, 0x1);
        gbc.writeMem(0x19dd, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0xd5);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0x88);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0x779e);
        EXPECT(gbc.pc(), 0x19df);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C0 0332
        gbc.setState(0x2283, 0xe969, 0xc6f0, 0xe8f0, 0xb6a9, 0x917a, 0x1, 0x1);
        gbc.writeMem(0x2283, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xc6);
        EXPECT(gbc.b(),  0xe9);
        EXPECT(gbc.c(),  0xf0);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0x7a);
        EXPECT(gbc.sp(), 0xe969);
        EXPECT(gbc.pc(), 0x2285);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C0 0333
        gbc.setState(0x3330, 0x9ff0, 0x6030, 0x97, 0x2bd1, 0xf3d, 0x1, 0x1);
        gbc.writeMem(0x3330, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0x97);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0xd1);
        EXPECT(gbc.h(),  0xf);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0x9ff0);
        EXPECT(gbc.pc(), 0x3332);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C0 0334
        gbc.setState(0x2c1b, 0xf7e9, 0xc260, 0x37d3, 0x7073, 0x5f0a, 0x1, 0x0);
        gbc.writeMem(0x2c1b, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xc2);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0xd3);
        EXPECT(gbc.d(),  0x70);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0xa);
        EXPECT(gbc.sp(), 0xf7e9);
        EXPECT(gbc.pc(), 0x2c1d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C0 0335
        gbc.setState(0xca1e, 0x7f35, 0x6710, 0xe77c, 0xb0d6, 0xf81c, 0x0, 0x1);
        gbc.writeMem(0xca1e, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x67);
        EXPECT(gbc.b(),  0xe7);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0xd6);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0x1c);
        EXPECT(gbc.sp(), 0x7f35);
        EXPECT(gbc.pc(), 0xca20);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xca1e), 0xcb);
        EXPECT(gbc.readMem(0xca1f), 0xc0);
        // CB C0 0336
        gbc.setState(0x2ccf, 0xc92d, 0x8110, 0x9000, 0x9778, 0x32f2, 0x0, 0x1);
        gbc.writeMem(0x2ccf, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x81);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0xf2);
        EXPECT(gbc.sp(), 0xc92d);
        EXPECT(gbc.pc(), 0x2cd1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C0 0337
        gbc.setState(0x3064, 0x9623, 0xa900, 0x6cca, 0x43a, 0x244f, 0x1, 0x0);
        gbc.writeMem(0x3064, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa9);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0x4f);
        EXPECT(gbc.sp(), 0x9623);
        EXPECT(gbc.pc(), 0x3066);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C0 0338
        gbc.setState(0x1adc, 0x9fe7, 0xa8b0, 0xfb90, 0x840f, 0x9618, 0x1, 0x0);
        gbc.writeMem(0x1adc, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa8);
        EXPECT(gbc.b(),  0xfb);
        EXPECT(gbc.c(),  0x90);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0x9fe7);
        EXPECT(gbc.pc(), 0x1ade);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C0 033A
        gbc.setState(0x7687, 0x1d85, 0x20b0, 0x671e, 0x72e8, 0xa2b1, 0x0, 0x0);
        gbc.writeMem(0x7687, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x20);
        EXPECT(gbc.b(),  0x67);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0x1d85);
        EXPECT(gbc.pc(), 0x7689);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C0 033B
        gbc.setState(0xd431, 0x119a, 0x60c0, 0x58b7, 0x22c2, 0xa9d3, 0x1, 0x0);
        gbc.writeMem(0xd431, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0x59);
        EXPECT(gbc.c(),  0xb7);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0xc2);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0xd3);
        EXPECT(gbc.sp(), 0x119a);
        EXPECT(gbc.pc(), 0xd433);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd431), 0xcb);
        EXPECT(gbc.readMem(0xd432), 0xc0);
        // CB C0 033C
        gbc.setState(0xb750, 0x5977, 0xee00, 0xb263, 0x3a5b, 0xf565, 0x1, 0x0);
        gbc.writeMem(0xb750, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xee);
        EXPECT(gbc.b(),  0xb3);
        EXPECT(gbc.c(),  0x63);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0x5b);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0x65);
        EXPECT(gbc.sp(), 0x5977);
        EXPECT(gbc.pc(), 0xb752);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb750), 0xcb);
        EXPECT(gbc.readMem(0xb751), 0xc0);
        // CB C0 033D
        gbc.setState(0x4f8d, 0xf389, 0x6140, 0xa920, 0x86c2, 0xd64f, 0x0, 0x1);
        gbc.writeMem(0x4f8d, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0xa9);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0xc2);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0x4f);
        EXPECT(gbc.sp(), 0xf389);
        EXPECT(gbc.pc(), 0x4f8f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C0 033E
        gbc.setState(0x772c, 0x45ec, 0xfdd0, 0x89f8, 0xb7ce, 0x6019, 0x1, 0x1);
        gbc.writeMem(0x772c, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xfd);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0xf8);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0xce);
        EXPECT(gbc.h(),  0x60);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0x45ec);
        EXPECT(gbc.pc(), 0x772e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C0 033F
        gbc.setState(0x5f21, 0x87d3, 0xeab0, 0xe02d, 0x2d67, 0xe88d, 0x1, 0x0);
        gbc.writeMem(0x5f21, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0x67);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0x87d3);
        EXPECT(gbc.pc(), 0x5f23);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C0 0340
        gbc.setState(0x157e, 0xc424, 0xdd60, 0x14a, 0x400a, 0x1aa3, 0x1, 0x1);
        gbc.writeMem(0x157e, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xdd);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0x4a);
        EXPECT(gbc.d(),  0x40);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0x1a);
        EXPECT(gbc.l(),  0xa3);
        EXPECT(gbc.sp(), 0xc424);
        EXPECT(gbc.pc(), 0x1580);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C0 0341
        gbc.setState(0x78ae, 0x193e, 0x2c20, 0x7a83, 0x95ae, 0x84cd, 0x0, 0x0);
        gbc.writeMem(0x78ae, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x2c);
        EXPECT(gbc.b(),  0x7b);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0x95);
        EXPECT(gbc.e(),  0xae);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0xcd);
        EXPECT(gbc.sp(), 0x193e);
        EXPECT(gbc.pc(), 0x78b0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C0 0342
        gbc.setState(0xb528, 0x7611, 0xfef0, 0x4043, 0x2822, 0xd582, 0x0, 0x1);
        gbc.writeMem(0xb528, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0x43);
        EXPECT(gbc.d(),  0x28);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0x7611);
        EXPECT(gbc.pc(), 0xb52a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb528), 0xcb);
        EXPECT(gbc.readMem(0xb529), 0xc0);
        // CB C0 0343
        gbc.setState(0x2536, 0x97ce, 0x4c90, 0x331f, 0xceef, 0x87a3, 0x1, 0x1);
        gbc.writeMem(0x2536, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x4c);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0x1f);
        EXPECT(gbc.d(),  0xce);
        EXPECT(gbc.e(),  0xef);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0xa3);
        EXPECT(gbc.sp(), 0x97ce);
        EXPECT(gbc.pc(), 0x2538);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C0 0344
        gbc.setState(0x95ad, 0x6e37, 0x6510, 0x388a, 0xf044, 0x92e0, 0x1, 0x0);
        gbc.writeMem(0x95ad, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x65);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0x6e37);
        EXPECT(gbc.pc(), 0x95af);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x95ad), 0xcb);
        EXPECT(gbc.readMem(0x95ae), 0xc0);
        // CB C0 0345
        gbc.setState(0xa3f2, 0xfe80, 0xe220, 0xc365, 0x7910, 0x7683, 0x0, 0x1);
        gbc.writeMem(0xa3f2, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0xc3);
        EXPECT(gbc.c(),  0x65);
        EXPECT(gbc.d(),  0x79);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0x76);
        EXPECT(gbc.l(),  0x83);
        EXPECT(gbc.sp(), 0xfe80);
        EXPECT(gbc.pc(), 0xa3f4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa3f2), 0xcb);
        EXPECT(gbc.readMem(0xa3f3), 0xc0);
        // CB C0 0346
        gbc.setState(0x4e1d, 0xdcc7, 0x6700, 0x952f, 0xb892, 0x5682, 0x0, 0x1);
        gbc.writeMem(0x4e1d, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x67);
        EXPECT(gbc.b(),  0x95);
        EXPECT(gbc.c(),  0x2f);
        EXPECT(gbc.d(),  0xb8);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0xdcc7);
        EXPECT(gbc.pc(), 0x4e1f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C0 0347
        gbc.setState(0x7d38, 0x9f35, 0x1c30, 0xdb50, 0x45be, 0x266b, 0x0, 0x0);
        gbc.writeMem(0x7d38, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x1c);
        EXPECT(gbc.b(),  0xdb);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0x6b);
        EXPECT(gbc.sp(), 0x9f35);
        EXPECT(gbc.pc(), 0x7d3a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C0 0348
        gbc.setState(0xb724, 0x2778, 0x3fa0, 0xad72, 0x93de, 0x6a17, 0x1, 0x0);
        gbc.writeMem(0xb724, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0xad);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0x93);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0x6a);
        EXPECT(gbc.l(),  0x17);
        EXPECT(gbc.sp(), 0x2778);
        EXPECT(gbc.pc(), 0xb726);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb724), 0xcb);
        EXPECT(gbc.readMem(0xb725), 0xc0);
        // CB C0 0349
        gbc.setState(0x2d6, 0xc6be, 0x96b0, 0xd1f3, 0x7663, 0x88dd, 0x0, 0x1);
        gbc.writeMem(0x2d6, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x96);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0xf3);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0x63);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0xdd);
        EXPECT(gbc.sp(), 0xc6be);
        EXPECT(gbc.pc(), 0x2d8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C0 034A
        gbc.setState(0xcf62, 0x5f21, 0x45b0, 0xa15a, 0x6826, 0xe922, 0x1, 0x0);
        gbc.writeMem(0xcf62, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0x5a);
        EXPECT(gbc.d(),  0x68);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0x22);
        EXPECT(gbc.sp(), 0x5f21);
        EXPECT(gbc.pc(), 0xcf64);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcf62), 0xcb);
        EXPECT(gbc.readMem(0xcf63), 0xc0);
        // CB C0 034B
        gbc.setState(0x2026, 0xe352, 0xf780, 0xced1, 0x989, 0xf2fc, 0x1, 0x0);
        gbc.writeMem(0x2026, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0xcf);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0x9);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0xfc);
        EXPECT(gbc.sp(), 0xe352);
        EXPECT(gbc.pc(), 0x2028);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C0 034C
        gbc.setState(0x4393, 0x1537, 0x9630, 0x63b0, 0x9028, 0x4243, 0x1, 0x1);
        gbc.writeMem(0x4393, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x96);
        EXPECT(gbc.b(),  0x63);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0x28);
        EXPECT(gbc.h(),  0x42);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0x1537);
        EXPECT(gbc.pc(), 0x4395);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C0 034D
        gbc.setState(0x1ed5, 0x309c, 0xbf50, 0x50b7, 0xf1bb, 0x991e, 0x0, 0x1);
        gbc.writeMem(0x1ed5, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0xb7);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0xbb);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0x309c);
        EXPECT(gbc.pc(), 0x1ed7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C0 034E
        gbc.setState(0xbac2, 0x3271, 0x4f50, 0xbd71, 0xd932, 0xd198, 0x0, 0x1);
        gbc.writeMem(0xbac2, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0xbd);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0xd9);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0x3271);
        EXPECT(gbc.pc(), 0xbac4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbac2), 0xcb);
        EXPECT(gbc.readMem(0xbac3), 0xc0);
        // CB C0 0350
        gbc.setState(0x8ceb, 0x9720, 0x9c30, 0xac60, 0x3461, 0x121f, 0x1, 0x0);
        gbc.writeMem(0x8ceb, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x9c);
        EXPECT(gbc.b(),  0xad);
        EXPECT(gbc.c(),  0x60);
        EXPECT(gbc.d(),  0x34);
        EXPECT(gbc.e(),  0x61);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0x9720);
        EXPECT(gbc.pc(), 0x8ced);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8ceb), 0xcb);
        EXPECT(gbc.readMem(0x8cec), 0xc0);
        // CB C0 0351
        gbc.setState(0x671a, 0x975b, 0x85a0, 0x61f, 0x241d, 0xa3e2, 0x1, 0x0);
        gbc.writeMem(0x671a, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x85);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0x1f);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0x975b);
        EXPECT(gbc.pc(), 0x671c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C0 0352
        gbc.setState(0x61af, 0xba98, 0xab80, 0x1811, 0xfc51, 0x1bbf, 0x1, 0x1);
        gbc.writeMem(0x61af, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xab);
        EXPECT(gbc.b(),  0x19);
        EXPECT(gbc.c(),  0x11);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0x51);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0xbf);
        EXPECT(gbc.sp(), 0xba98);
        EXPECT(gbc.pc(), 0x61b1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C0 0353
        gbc.setState(0x83ec, 0x2c8a, 0xf800, 0xc75b, 0x5008, 0x79b5, 0x1, 0x1);
        gbc.writeMem(0x83ec, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0x50);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0x79);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0x2c8a);
        EXPECT(gbc.pc(), 0x83ee);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x83ec), 0xcb);
        EXPECT(gbc.readMem(0x83ed), 0xc0);
        // CB C0 0354
        gbc.setState(0xeb5a, 0x958e, 0x4a40, 0xf60b, 0xbc44, 0xc7c7, 0x1, 0x0);
        gbc.writeMem(0xeb5a, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x4a);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0xb);
        EXPECT(gbc.d(),  0xbc);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0xc7);
        EXPECT(gbc.sp(), 0x958e);
        EXPECT(gbc.pc(), 0xeb5c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xeb5a), 0xcb);
        EXPECT(gbc.readMem(0xeb5b), 0xc0);
        // CB C0 0355
        gbc.setState(0x4f4d, 0x339a, 0x8220, 0xb7f2, 0xc27a, 0x1bca, 0x1, 0x1);
        gbc.writeMem(0x4f4d, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x82);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0xf2);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0x7a);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0xca);
        EXPECT(gbc.sp(), 0x339a);
        EXPECT(gbc.pc(), 0x4f4f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C0 0356
        gbc.setState(0x5a7, 0x4c83, 0xb900, 0x4840, 0x84b, 0x5cbf, 0x0, 0x0);
        gbc.writeMem(0x5a7, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0x49);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0x5c);
        EXPECT(gbc.l(),  0xbf);
        EXPECT(gbc.sp(), 0x4c83);
        EXPECT(gbc.pc(), 0x5a9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C0 0357
        gbc.setState(0x78fa, 0x174, 0xd80, 0x33bf, 0x20b1, 0xe169, 0x0, 0x1);
        gbc.writeMem(0x78fa, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0xbf);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0xb1);
        EXPECT(gbc.h(),  0xe1);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0x174);
        EXPECT(gbc.pc(), 0x78fc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C0 0358
        gbc.setState(0xbbfc, 0x68cd, 0xcfd0, 0xc427, 0xd5f3, 0x3d9c, 0x1, 0x0);
        gbc.writeMem(0xbbfc, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xcf);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0x3d);
        EXPECT(gbc.l(),  0x9c);
        EXPECT(gbc.sp(), 0x68cd);
        EXPECT(gbc.pc(), 0xbbfe);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbbfc), 0xcb);
        EXPECT(gbc.readMem(0xbbfd), 0xc0);
        // CB C0 0359
        gbc.setState(0x3ae9, 0x3435, 0x6660, 0xdc31, 0x6516, 0xffa8, 0x0, 0x1);
        gbc.writeMem(0x3ae9, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x66);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0x65);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0xff);
        EXPECT(gbc.l(),  0xa8);
        EXPECT(gbc.sp(), 0x3435);
        EXPECT(gbc.pc(), 0x3aeb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C0 035A
        gbc.setState(0x62e1, 0x5710, 0xe740, 0x2552, 0xe891, 0xb5c2, 0x1, 0x1);
        gbc.writeMem(0x62e1, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe7);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0x52);
        EXPECT(gbc.d(),  0xe8);
        EXPECT(gbc.e(),  0x91);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0x5710);
        EXPECT(gbc.pc(), 0x62e3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C0 035B
        gbc.setState(0x7b60, 0xbd29, 0xed00, 0xce35, 0xd4dd, 0x2a84, 0x1, 0x1);
        gbc.writeMem(0x7b60, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0xcf);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0x2a);
        EXPECT(gbc.l(),  0x84);
        EXPECT(gbc.sp(), 0xbd29);
        EXPECT(gbc.pc(), 0x7b62);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C0 035C
        gbc.setState(0x8b66, 0xa2c8, 0xfc40, 0x6139, 0x7f2f, 0x585f, 0x1, 0x1);
        gbc.writeMem(0x8b66, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0x2f);
        EXPECT(gbc.h(),  0x58);
        EXPECT(gbc.l(),  0x5f);
        EXPECT(gbc.sp(), 0xa2c8);
        EXPECT(gbc.pc(), 0x8b68);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8b66), 0xcb);
        EXPECT(gbc.readMem(0x8b67), 0xc0);
        // CB C0 035D
        gbc.setState(0x15e2, 0xbad4, 0x2b90, 0x6118, 0x42b4, 0xdeff, 0x0, 0x1);
        gbc.writeMem(0x15e2, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x2b);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0xb4);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0xff);
        EXPECT(gbc.sp(), 0xbad4);
        EXPECT(gbc.pc(), 0x15e4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C0 035E
        gbc.setState(0xa234, 0xfb76, 0xd3a0, 0xb233, 0xcd8, 0x4cf3, 0x0, 0x0);
        gbc.writeMem(0xa234, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd3);
        EXPECT(gbc.b(),  0xb3);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0xc);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0xfb76);
        EXPECT(gbc.pc(), 0xa236);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa234), 0xcb);
        EXPECT(gbc.readMem(0xa235), 0xc0);
        // CB C0 035F
        gbc.setState(0x9df2, 0x2592, 0x73f0, 0xcd08, 0x45fb, 0xa1e9, 0x1, 0x1);
        gbc.writeMem(0x9df2, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x73);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0xfb);
        EXPECT(gbc.h(),  0xa1);
        EXPECT(gbc.l(),  0xe9);
        EXPECT(gbc.sp(), 0x2592);
        EXPECT(gbc.pc(), 0x9df4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9df2), 0xcb);
        EXPECT(gbc.readMem(0x9df3), 0xc0);
        // CB C0 0360
        gbc.setState(0xb1ad, 0x4004, 0xdc80, 0x91c0, 0x43f, 0xf0e2, 0x1, 0x0);
        gbc.writeMem(0xb1ad, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xdc);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0x4004);
        EXPECT(gbc.pc(), 0xb1af);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb1ad), 0xcb);
        EXPECT(gbc.readMem(0xb1ae), 0xc0);
        // CB C0 0361
        gbc.setState(0xb5cd, 0xfae9, 0xbc70, 0x8895, 0x4fed, 0xb092, 0x0, 0x1);
        gbc.writeMem(0xb5cd, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0x95);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0xed);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0xfae9);
        EXPECT(gbc.pc(), 0xb5cf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb5cd), 0xcb);
        EXPECT(gbc.readMem(0xb5ce), 0xc0);
        // CB C0 0362
        gbc.setState(0x4c78, 0x29a8, 0xb240, 0xe5da, 0x7741, 0x7084, 0x0, 0x1);
        gbc.writeMem(0x4c78, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb2);
        EXPECT(gbc.b(),  0xe5);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0x41);
        EXPECT(gbc.h(),  0x70);
        EXPECT(gbc.l(),  0x84);
        EXPECT(gbc.sp(), 0x29a8);
        EXPECT(gbc.pc(), 0x4c7a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C0 0364
        gbc.setState(0xbfa9, 0x4fc1, 0xf3b0, 0x3e18, 0xdc0d, 0xc029, 0x1, 0x1);
        gbc.writeMem(0xbfa9, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0x3f);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0xd);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0x4fc1);
        EXPECT(gbc.pc(), 0xbfab);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbfa9), 0xcb);
        EXPECT(gbc.readMem(0xbfaa), 0xc0);
        // CB C0 0365
        gbc.setState(0x4236, 0x52a9, 0xb460, 0x1a26, 0x1238, 0x9253, 0x0, 0x1);
        gbc.writeMem(0x4236, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb4);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0x38);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0x52a9);
        EXPECT(gbc.pc(), 0x4238);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C0 0366
        gbc.setState(0xc1da, 0xcf1, 0x990, 0x9ee, 0x2194, 0x1200, 0x1, 0x1);
        gbc.writeMem(0xc1da, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0x21);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0x0);
        EXPECT(gbc.sp(), 0xcf1);
        EXPECT(gbc.pc(), 0xc1dc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc1da), 0xcb);
        EXPECT(gbc.readMem(0xc1db), 0xc0);
        // CB C0 0368
        gbc.setState(0xc20c, 0x2e53, 0x1f60, 0x7944, 0xa447, 0x3cb9, 0x0, 0x1);
        gbc.writeMem(0xc20c, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0xa4);
        EXPECT(gbc.e(),  0x47);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0x2e53);
        EXPECT(gbc.pc(), 0xc20e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc20c), 0xcb);
        EXPECT(gbc.readMem(0xc20d), 0xc0);
        // CB C0 0369
        gbc.setState(0x8746, 0x41cb, 0x4dd0, 0x6926, 0xc483, 0x7b0a, 0x1, 0x1);
        gbc.writeMem(0x8746, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x4d);
        EXPECT(gbc.b(),  0x69);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0xc4);
        EXPECT(gbc.e(),  0x83);
        EXPECT(gbc.h(),  0x7b);
        EXPECT(gbc.l(),  0xa);
        EXPECT(gbc.sp(), 0x41cb);
        EXPECT(gbc.pc(), 0x8748);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8746), 0xcb);
        EXPECT(gbc.readMem(0x8747), 0xc0);
        // CB C0 036A
        gbc.setState(0x57b4, 0xa8fd, 0x78c0, 0xa8bb, 0xc109, 0xe750, 0x0, 0x1);
        gbc.writeMem(0x57b4, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0xa9);
        EXPECT(gbc.c(),  0xbb);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0x50);
        EXPECT(gbc.sp(), 0xa8fd);
        EXPECT(gbc.pc(), 0x57b6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C0 036B
        gbc.setState(0xabde, 0x7448, 0x2470, 0x4d47, 0x5366, 0x9009, 0x1, 0x1);
        gbc.writeMem(0xabde, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x24);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0x47);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0x66);
        EXPECT(gbc.h(),  0x90);
        EXPECT(gbc.l(),  0x9);
        EXPECT(gbc.sp(), 0x7448);
        EXPECT(gbc.pc(), 0xabe0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xabde), 0xcb);
        EXPECT(gbc.readMem(0xabdf), 0xc0);
        // CB C0 036C
        gbc.setState(0xcdb, 0x5117, 0xdc60, 0x9276, 0xa2cd, 0x3dc1, 0x1, 0x1);
        gbc.writeMem(0xcdb, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xdc);
        EXPECT(gbc.b(),  0x93);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0xcd);
        EXPECT(gbc.h(),  0x3d);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0x5117);
        EXPECT(gbc.pc(), 0xcdd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C0 036D
        gbc.setState(0xac95, 0x8972, 0x1770, 0xa99, 0x31fb, 0xcb81, 0x0, 0x0);
        gbc.writeMem(0xac95, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x17);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0x99);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0xfb);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0x8972);
        EXPECT(gbc.pc(), 0xac97);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xac95), 0xcb);
        EXPECT(gbc.readMem(0xac96), 0xc0);
        // CB C0 036E
        gbc.setState(0x5cf5, 0x2eb7, 0xe70, 0x3671, 0x51c7, 0x2eaf, 0x0, 0x0);
        gbc.writeMem(0x5cf5, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0x51);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0x2e);
        EXPECT(gbc.l(),  0xaf);
        EXPECT(gbc.sp(), 0x2eb7);
        EXPECT(gbc.pc(), 0x5cf7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C0 036F
        gbc.setState(0x5511, 0x88e5, 0xbf60, 0xcc68, 0x5c1b, 0x60ed, 0x0, 0x1);
        gbc.writeMem(0x5511, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0x68);
        EXPECT(gbc.d(),  0x5c);
        EXPECT(gbc.e(),  0x1b);
        EXPECT(gbc.h(),  0x60);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0x88e5);
        EXPECT(gbc.pc(), 0x5513);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C0 0370
        gbc.setState(0xe998, 0x8b58, 0x1c00, 0xf31a, 0xf2b2, 0x2ca9, 0x0, 0x0);
        gbc.writeMem(0xe998, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x1c);
        EXPECT(gbc.b(),  0xf3);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0xf2);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0xa9);
        EXPECT(gbc.sp(), 0x8b58);
        EXPECT(gbc.pc(), 0xe99a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe998), 0xcb);
        EXPECT(gbc.readMem(0xe999), 0xc0);
        // CB C0 0371
        gbc.setState(0x7c16, 0xe74c, 0x7b60, 0xe88a, 0xa7ea, 0x6f82, 0x0, 0x0);
        gbc.writeMem(0x7c16, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0xe9);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0xa7);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0x6f);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0xe74c);
        EXPECT(gbc.pc(), 0x7c18);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C0 0372
        gbc.setState(0x8722, 0x6867, 0xa40, 0xc2c8, 0xe087, 0xe2c3, 0x1, 0x1);
        gbc.writeMem(0x8722, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0xc3);
        EXPECT(gbc.c(),  0xc8);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0x87);
        EXPECT(gbc.h(),  0xe2);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0x6867);
        EXPECT(gbc.pc(), 0x8724);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8722), 0xcb);
        EXPECT(gbc.readMem(0x8723), 0xc0);
        // CB C0 0373
        gbc.setState(0xe523, 0x71d3, 0x300, 0x6db8, 0x4e4b, 0x15e1, 0x1, 0x1);
        gbc.writeMem(0xe523, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0xb8);
        EXPECT(gbc.d(),  0x4e);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0x71d3);
        EXPECT(gbc.pc(), 0xe525);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe523), 0xcb);
        EXPECT(gbc.readMem(0xe524), 0xc0);
        // CB C0 0374
        gbc.setState(0x64ee, 0x4710, 0xe880, 0x3c6d, 0xe262, 0xf778, 0x1, 0x0);
        gbc.writeMem(0x64ee, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0x6d);
        EXPECT(gbc.d(),  0xe2);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0xf7);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0x4710);
        EXPECT(gbc.pc(), 0x64f0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C0 0375
        gbc.setState(0x69c2, 0x34da, 0x2350, 0x3736, 0xa65f, 0x2bf2, 0x0, 0x1);
        gbc.writeMem(0x69c2, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0x2b);
        EXPECT(gbc.l(),  0xf2);
        EXPECT(gbc.sp(), 0x34da);
        EXPECT(gbc.pc(), 0x69c4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C0 0376
        gbc.setState(0xc6fd, 0xb210, 0x7aa0, 0x5d23, 0x95a6, 0x4d24, 0x1, 0x1);
        gbc.writeMem(0xc6fd, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x7a);
        EXPECT(gbc.b(),  0x5d);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0x95);
        EXPECT(gbc.e(),  0xa6);
        EXPECT(gbc.h(),  0x4d);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0xb210);
        EXPECT(gbc.pc(), 0xc6ff);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc6fd), 0xcb);
        EXPECT(gbc.readMem(0xc6fe), 0xc0);
        // CB C0 0377
        gbc.setState(0x6d, 0x277d, 0x4100, 0x91ad, 0xefa5, 0xb75e, 0x0, 0x1);
        gbc.writeMem(0x6d, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0xa5);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0x277d);
        EXPECT(gbc.pc(), 0x6f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C0 0378
        gbc.setState(0x87aa, 0xf386, 0xa840, 0xee1d, 0x166, 0x6bfa, 0x1, 0x1);
        gbc.writeMem(0x87aa, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa8);
        EXPECT(gbc.b(),  0xef);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0x1);
        EXPECT(gbc.e(),  0x66);
        EXPECT(gbc.h(),  0x6b);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0xf386);
        EXPECT(gbc.pc(), 0x87ac);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x87aa), 0xcb);
        EXPECT(gbc.readMem(0x87ab), 0xc0);
        // CB C0 0379
        gbc.setState(0xb638, 0x7cf0, 0x7570, 0xe156, 0x4fd3, 0x2dfa, 0x1, 0x0);
        gbc.writeMem(0xb638, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0x2d);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0x7cf0);
        EXPECT(gbc.pc(), 0xb63a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb638), 0xcb);
        EXPECT(gbc.readMem(0xb639), 0xc0);
        // CB C0 037A
        gbc.setState(0x3fa2, 0xdfdb, 0x2ab0, 0xfd3a, 0xa501, 0xc46b, 0x1, 0x0);
        gbc.writeMem(0x3fa2, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0xa5);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0x6b);
        EXPECT(gbc.sp(), 0xdfdb);
        EXPECT(gbc.pc(), 0x3fa4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C0 037B
        gbc.setState(0x41ab, 0x206a, 0x7a0, 0x76f0, 0xcd72, 0xc2e3, 0x0, 0x1);
        gbc.writeMem(0x41ab, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0x77);
        EXPECT(gbc.c(),  0xf0);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0xe3);
        EXPECT(gbc.sp(), 0x206a);
        EXPECT(gbc.pc(), 0x41ad);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C0 037C
        gbc.setState(0x3da4, 0x537f, 0x42e0, 0x9e02, 0x4319, 0xef31, 0x1, 0x0);
        gbc.writeMem(0x3da4, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x42);
        EXPECT(gbc.b(),  0x9f);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0x19);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0x537f);
        EXPECT(gbc.pc(), 0x3da6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C0 037D
        gbc.setState(0xe78f, 0x671b, 0x78d0, 0x68e8, 0x9551, 0xbe23, 0x1, 0x1);
        gbc.writeMem(0xe78f, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0x69);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0x95);
        EXPECT(gbc.e(),  0x51);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0x23);
        EXPECT(gbc.sp(), 0x671b);
        EXPECT(gbc.pc(), 0xe791);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe78f), 0xcb);
        EXPECT(gbc.readMem(0xe790), 0xc0);
        // CB C0 037E
        gbc.setState(0x6478, 0xd4ec, 0x5b40, 0x2909, 0x2d1, 0xd941, 0x0, 0x0);
        gbc.writeMem(0x6478, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0xd1);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0x41);
        EXPECT(gbc.sp(), 0xd4ec);
        EXPECT(gbc.pc(), 0x647a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C0 037F
        gbc.setState(0xab36, 0x56d3, 0x9260, 0xff02, 0x7aef, 0xd596, 0x0, 0x0);
        gbc.writeMem(0xab36, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0xff);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0xef);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0x56d3);
        EXPECT(gbc.pc(), 0xab38);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xab36), 0xcb);
        EXPECT(gbc.readMem(0xab37), 0xc0);
        // CB C0 0380
        gbc.setState(0x4646, 0x86b6, 0x96e0, 0x61be, 0x4def, 0x8d94, 0x0, 0x0);
        gbc.writeMem(0x4646, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x96);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0xbe);
        EXPECT(gbc.d(),  0x4d);
        EXPECT(gbc.e(),  0xef);
        EXPECT(gbc.h(),  0x8d);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0x86b6);
        EXPECT(gbc.pc(), 0x4648);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C0 0381
        gbc.setState(0xc79e, 0xb2a3, 0x5300, 0x234, 0x8f20, 0x6ebc, 0x1, 0x1);
        gbc.writeMem(0xc79e, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x53);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0x20);
        EXPECT(gbc.h(),  0x6e);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0xb2a3);
        EXPECT(gbc.pc(), 0xc7a0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc79e), 0xcb);
        EXPECT(gbc.readMem(0xc79f), 0xc0);
        // CB C0 0382
        gbc.setState(0x7569, 0x7541, 0x6220, 0x9a6f, 0xb4e, 0x34f3, 0x0, 0x0);
        gbc.writeMem(0x7569, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0x9b);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0x34);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0x7541);
        EXPECT(gbc.pc(), 0x756b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C0 0383
        gbc.setState(0xc9db, 0xc3ae, 0xfc10, 0x8d3a, 0xd277, 0xc234, 0x0, 0x0);
        gbc.writeMem(0xc9db, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0x8d);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0xc3ae);
        EXPECT(gbc.pc(), 0xc9dd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc9db), 0xcb);
        EXPECT(gbc.readMem(0xc9dc), 0xc0);
        // CB C0 0384
        gbc.setState(0xc94, 0xd3e6, 0xd8c0, 0xc552, 0x5e61, 0xc140, 0x1, 0x0);
        gbc.writeMem(0xc94, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd8);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0x52);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0x61);
        EXPECT(gbc.h(),  0xc1);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0xd3e6);
        EXPECT(gbc.pc(), 0xc96);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C0 0385
        gbc.setState(0x6ab9, 0x4e27, 0xa040, 0xe360, 0xcae5, 0x49c5, 0x0, 0x0);
        gbc.writeMem(0x6ab9, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0x60);
        EXPECT(gbc.d(),  0xca);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0x49);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0x4e27);
        EXPECT(gbc.pc(), 0x6abb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C0 0386
        gbc.setState(0xd926, 0xaf0e, 0xabc0, 0xfe6d, 0x8b61, 0xc110, 0x1, 0x0);
        gbc.writeMem(0xd926, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xab);
        EXPECT(gbc.b(),  0xff);
        EXPECT(gbc.c(),  0x6d);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0x61);
        EXPECT(gbc.h(),  0xc1);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0xaf0e);
        EXPECT(gbc.pc(), 0xd928);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd926), 0xcb);
        EXPECT(gbc.readMem(0xd927), 0xc0);
        // CB C0 0387
        gbc.setState(0x91e2, 0x98b6, 0x6560, 0x69b0, 0x4842, 0xdb21, 0x1, 0x1);
        gbc.writeMem(0x91e2, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x65);
        EXPECT(gbc.b(),  0x69);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0x48);
        EXPECT(gbc.e(),  0x42);
        EXPECT(gbc.h(),  0xdb);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0x98b6);
        EXPECT(gbc.pc(), 0x91e4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x91e2), 0xcb);
        EXPECT(gbc.readMem(0x91e3), 0xc0);
        // CB C0 0388
        gbc.setState(0x2d21, 0x5fa7, 0x4050, 0x71d5, 0x73dc, 0x45e7, 0x1, 0x0);
        gbc.writeMem(0x2d21, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x40);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0x73);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0x45);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0x5fa7);
        EXPECT(gbc.pc(), 0x2d23);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C0 0389
        gbc.setState(0xbed1, 0xc5ae, 0xee70, 0x80f9, 0xa1a2, 0xbaa3, 0x0, 0x1);
        gbc.writeMem(0xbed1, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xee);
        EXPECT(gbc.b(),  0x81);
        EXPECT(gbc.c(),  0xf9);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0xa2);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0xa3);
        EXPECT(gbc.sp(), 0xc5ae);
        EXPECT(gbc.pc(), 0xbed3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbed1), 0xcb);
        EXPECT(gbc.readMem(0xbed2), 0xc0);
        // CB C0 038A
        gbc.setState(0xebb9, 0xc2f4, 0x5fe0, 0xbf2d, 0x7837, 0xd76b, 0x0, 0x1);
        gbc.writeMem(0xebb9, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0xbf);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0x78);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0xd7);
        EXPECT(gbc.l(),  0x6b);
        EXPECT(gbc.sp(), 0xc2f4);
        EXPECT(gbc.pc(), 0xebbb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xebb9), 0xcb);
        EXPECT(gbc.readMem(0xebba), 0xc0);
        // CB C0 038B
        gbc.setState(0x3366, 0xffeb, 0xb150, 0xfd64, 0x7bd9, 0xb05c, 0x1, 0x1);
        gbc.writeMem(0x3366, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0x7b);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0xffeb);
        EXPECT(gbc.pc(), 0x3368);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C0 038C
        gbc.setState(0x1ceb, 0xb51d, 0xce90, 0x867, 0x8316, 0x49c6, 0x0, 0x1);
        gbc.writeMem(0x1ceb, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xce);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0x83);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0x49);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0xb51d);
        EXPECT(gbc.pc(), 0x1ced);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C0 038D
        gbc.setState(0x18, 0xd181, 0xb0a0, 0x97b, 0xb161, 0xfbac, 0x1, 0x1);
        gbc.writeMem(0x18, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0xb1);
        EXPECT(gbc.e(),  0x61);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0xd181);
        EXPECT(gbc.pc(), 0x1a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C0 038E
        gbc.setState(0x7611, 0x17d3, 0x63c0, 0x86e1, 0xde82, 0xe7f0, 0x1, 0x0);
        gbc.writeMem(0x7611, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0xe1);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0x82);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0x17d3);
        EXPECT(gbc.pc(), 0x7613);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C0 038F
        gbc.setState(0x984a, 0xcb59, 0x96f0, 0x96b8, 0xf9ad, 0x6265, 0x1, 0x1);
        gbc.writeMem(0x984a, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x96);
        EXPECT(gbc.b(),  0x97);
        EXPECT(gbc.c(),  0xb8);
        EXPECT(gbc.d(),  0xf9);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0x62);
        EXPECT(gbc.l(),  0x65);
        EXPECT(gbc.sp(), 0xcb59);
        EXPECT(gbc.pc(), 0x984c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x984a), 0xcb);
        EXPECT(gbc.readMem(0x984b), 0xc0);
        // CB C0 0390
        gbc.setState(0x973e, 0xeeba, 0xc550, 0xa364, 0x3c37, 0x9794, 0x1, 0x1);
        gbc.writeMem(0x973e, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xc5);
        EXPECT(gbc.b(),  0xa3);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0xeeba);
        EXPECT(gbc.pc(), 0x9740);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x973e), 0xcb);
        EXPECT(gbc.readMem(0x973f), 0xc0);
        // CB C0 0391
        gbc.setState(0x2d40, 0x9683, 0x9800, 0x5ffe, 0x5006, 0xb48, 0x0, 0x0);
        gbc.writeMem(0x2d40, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x98);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0x50);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0x48);
        EXPECT(gbc.sp(), 0x9683);
        EXPECT(gbc.pc(), 0x2d42);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C0 0392
        gbc.setState(0xcb02, 0xc583, 0xdda0, 0x50bf, 0x6dea, 0xa76f, 0x1, 0x1);
        gbc.writeMem(0xcb02, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xdd);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0xbf);
        EXPECT(gbc.d(),  0x6d);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0xc583);
        EXPECT(gbc.pc(), 0xcb04);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcb02), 0xcb);
        EXPECT(gbc.readMem(0xcb03), 0xc0);
        // CB C0 0393
        gbc.setState(0x4e16, 0xb284, 0xebb0, 0xe684, 0x8b9d, 0xed3e, 0x0, 0x1);
        gbc.writeMem(0x4e16, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0xe7);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0x9d);
        EXPECT(gbc.h(),  0xed);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0xb284);
        EXPECT(gbc.pc(), 0x4e18);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C0 0394
        gbc.setState(0x9c45, 0x64c1, 0xdd30, 0x51bd, 0x2b39, 0xd15, 0x1, 0x1);
        gbc.writeMem(0x9c45, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xdd);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0xbd);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0xd);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0x64c1);
        EXPECT(gbc.pc(), 0x9c47);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9c45), 0xcb);
        EXPECT(gbc.readMem(0x9c46), 0xc0);
        // CB C0 0395
        gbc.setState(0xb009, 0x4da2, 0xf860, 0xe53b, 0xe3b, 0x5074, 0x0, 0x0);
        gbc.writeMem(0xb009, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0xe5);
        EXPECT(gbc.c(),  0x3b);
        EXPECT(gbc.d(),  0xe);
        EXPECT(gbc.e(),  0x3b);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0x4da2);
        EXPECT(gbc.pc(), 0xb00b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb009), 0xcb);
        EXPECT(gbc.readMem(0xb00a), 0xc0);
        // CB C0 0396
        gbc.setState(0xae8f, 0xf6b8, 0x28a0, 0x340, 0x7ec2, 0xa008, 0x0, 0x0);
        gbc.writeMem(0xae8f, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0x7e);
        EXPECT(gbc.e(),  0xc2);
        EXPECT(gbc.h(),  0xa0);
        EXPECT(gbc.l(),  0x8);
        EXPECT(gbc.sp(), 0xf6b8);
        EXPECT(gbc.pc(), 0xae91);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xae8f), 0xcb);
        EXPECT(gbc.readMem(0xae90), 0xc0);
        // CB C0 0397
        gbc.setState(0x6538, 0xe9f9, 0xe30, 0x2963, 0x2c58, 0x73c9, 0x1, 0x0);
        gbc.writeMem(0x6538, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0x63);
        EXPECT(gbc.d(),  0x2c);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0x73);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0xe9f9);
        EXPECT(gbc.pc(), 0x653a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C0 0398
        gbc.setState(0x6256, 0xd5cf, 0x5af0, 0x4625, 0x6c7a, 0xd838, 0x0, 0x0);
        gbc.writeMem(0x6256, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0x6c);
        EXPECT(gbc.e(),  0x7a);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0xd5cf);
        EXPECT(gbc.pc(), 0x6258);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C0 0399
        gbc.setState(0x8f0e, 0xb7ce, 0xf050, 0x87f1, 0x7c1, 0x26be, 0x1, 0x0);
        gbc.writeMem(0x8f0e, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf0);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0xbe);
        EXPECT(gbc.sp(), 0xb7ce);
        EXPECT(gbc.pc(), 0x8f10);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8f0e), 0xcb);
        EXPECT(gbc.readMem(0x8f0f), 0xc0);
        // CB C0 039A
        gbc.setState(0x3870, 0x928e, 0x8a50, 0x57ec, 0xeda1, 0x1eb2, 0x0, 0x1);
        gbc.writeMem(0x3870, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x8a);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0xec);
        EXPECT(gbc.d(),  0xed);
        EXPECT(gbc.e(),  0xa1);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0x928e);
        EXPECT(gbc.pc(), 0x3872);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C0 039B
        gbc.setState(0xa0c5, 0xd010, 0xa990, 0x7e5b, 0xa8fd, 0x7d9c, 0x0, 0x1);
        gbc.writeMem(0xa0c5, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa9);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0xfd);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0x9c);
        EXPECT(gbc.sp(), 0xd010);
        EXPECT(gbc.pc(), 0xa0c7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa0c5), 0xcb);
        EXPECT(gbc.readMem(0xa0c6), 0xc0);
        // CB C0 039C
        gbc.setState(0xa105, 0x512c, 0x5430, 0xadf4, 0x9994, 0x9def, 0x0, 0x0);
        gbc.writeMem(0xa105, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x54);
        EXPECT(gbc.b(),  0xad);
        EXPECT(gbc.c(),  0xf4);
        EXPECT(gbc.d(),  0x99);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0xef);
        EXPECT(gbc.sp(), 0x512c);
        EXPECT(gbc.pc(), 0xa107);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa105), 0xcb);
        EXPECT(gbc.readMem(0xa106), 0xc0);
        // CB C0 039D
        gbc.setState(0xc702, 0x6484, 0xdfd0, 0xd6c7, 0xccd9, 0x852, 0x0, 0x0);
        gbc.writeMem(0xc702, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xdf);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0xc7);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0x6484);
        EXPECT(gbc.pc(), 0xc704);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc702), 0xcb);
        EXPECT(gbc.readMem(0xc703), 0xc0);
        // CB C0 039E
        gbc.setState(0xea66, 0x4d44, 0x10, 0x9d2d, 0xb131, 0x1957, 0x0, 0x0);
        gbc.writeMem(0xea66, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x9d);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0xb1);
        EXPECT(gbc.e(),  0x31);
        EXPECT(gbc.h(),  0x19);
        EXPECT(gbc.l(),  0x57);
        EXPECT(gbc.sp(), 0x4d44);
        EXPECT(gbc.pc(), 0xea68);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xea66), 0xcb);
        EXPECT(gbc.readMem(0xea67), 0xc0);
        // CB C0 039F
        gbc.setState(0x4875, 0x39fe, 0xe740, 0x701d, 0xaa76, 0xfb51, 0x1, 0x1);
        gbc.writeMem(0x4875, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe7);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0x76);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0x39fe);
        EXPECT(gbc.pc(), 0x4877);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C0 03A0
        gbc.setState(0x6cd, 0x4986, 0x8ad0, 0x78c6, 0xb02b, 0x788d, 0x0, 0x1);
        gbc.writeMem(0x6cd, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x8a);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0xc6);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0x78);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0x4986);
        EXPECT(gbc.pc(), 0x6cf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C0 03A1
        gbc.setState(0xa7b6, 0x4858, 0x5450, 0x9785, 0x68d7, 0xd40b, 0x0, 0x0);
        gbc.writeMem(0xa7b6, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x54);
        EXPECT(gbc.b(),  0x97);
        EXPECT(gbc.c(),  0x85);
        EXPECT(gbc.d(),  0x68);
        EXPECT(gbc.e(),  0xd7);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0x4858);
        EXPECT(gbc.pc(), 0xa7b8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa7b6), 0xcb);
        EXPECT(gbc.readMem(0xa7b7), 0xc0);
        // CB C0 03A2
        gbc.setState(0x2819, 0xe9d9, 0x5b10, 0x49b1, 0x98d1, 0x3ad9, 0x0, 0x0);
        gbc.writeMem(0x2819, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0x49);
        EXPECT(gbc.c(),  0xb1);
        EXPECT(gbc.d(),  0x98);
        EXPECT(gbc.e(),  0xd1);
        EXPECT(gbc.h(),  0x3a);
        EXPECT(gbc.l(),  0xd9);
        EXPECT(gbc.sp(), 0xe9d9);
        EXPECT(gbc.pc(), 0x281b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C0 03A3
        gbc.setState(0xf60, 0xf3b5, 0x1590, 0x9e9f, 0x3b35, 0xc07d, 0x1, 0x0);
        gbc.writeMem(0xf60, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x15);
        EXPECT(gbc.b(),  0x9f);
        EXPECT(gbc.c(),  0x9f);
        EXPECT(gbc.d(),  0x3b);
        EXPECT(gbc.e(),  0x35);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0xf3b5);
        EXPECT(gbc.pc(), 0xf62);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C0 03A4
        gbc.setState(0x5cab, 0xf41e, 0xc7c0, 0x71fb, 0xa24, 0xd1a5, 0x0, 0x0);
        gbc.writeMem(0x5cab, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xc7);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0x24);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0xf41e);
        EXPECT(gbc.pc(), 0x5cad);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C0 03A5
        gbc.setState(0x315, 0x14fb, 0x7840, 0xd04d, 0x6704, 0x2c8e, 0x0, 0x1);
        gbc.writeMem(0x315, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0x4);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0x14fb);
        EXPECT(gbc.pc(), 0x317);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C0 03A6
        gbc.setState(0x1a14, 0x95d, 0x85a0, 0xdbf, 0x4f60, 0x9387, 0x0, 0x0);
        gbc.writeMem(0x1a14, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x85);
        EXPECT(gbc.b(),  0xd);
        EXPECT(gbc.c(),  0xbf);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0x60);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0x87);
        EXPECT(gbc.sp(), 0x95d);
        EXPECT(gbc.pc(), 0x1a16);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C0 03A7
        gbc.setState(0xd7d2, 0xdb37, 0xbbd0, 0xa515, 0x60b7, 0x5a6f, 0x0, 0x1);
        gbc.writeMem(0xd7d2, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0xa5);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0x60);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0x5a);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0xdb37);
        EXPECT(gbc.pc(), 0xd7d4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd7d2), 0xcb);
        EXPECT(gbc.readMem(0xd7d3), 0xc0);
        // CB C0 03A8
        gbc.setState(0x829, 0xae0f, 0x9df0, 0xa663, 0x9862, 0xc22d, 0x0, 0x0);
        gbc.writeMem(0x829, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x9d);
        EXPECT(gbc.b(),  0xa7);
        EXPECT(gbc.c(),  0x63);
        EXPECT(gbc.d(),  0x98);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0xae0f);
        EXPECT(gbc.pc(), 0x82b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C0 03A9
        gbc.setState(0x1f09, 0xcd0, 0xf1d0, 0xc934, 0xfed5, 0x59a2, 0x1, 0x1);
        gbc.writeMem(0x1f09, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf1);
        EXPECT(gbc.b(),  0xc9);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0xd5);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0xa2);
        EXPECT(gbc.sp(), 0xcd0);
        EXPECT(gbc.pc(), 0x1f0b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C0 03AA
        gbc.setState(0xb008, 0x65ff, 0xb440, 0x7f28, 0xc37b, 0xc3f9, 0x1, 0x1);
        gbc.writeMem(0xb008, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb4);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0xc3);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0x65ff);
        EXPECT(gbc.pc(), 0xb00a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb008), 0xcb);
        EXPECT(gbc.readMem(0xb009), 0xc0);
        // CB C0 03AB
        gbc.setState(0x2e3e, 0xc54, 0x7c20, 0x7667, 0x8825, 0x7f0a, 0x1, 0x0);
        gbc.writeMem(0x2e3e, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x7c);
        EXPECT(gbc.b(),  0x77);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0x88);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0x7f);
        EXPECT(gbc.l(),  0xa);
        EXPECT(gbc.sp(), 0xc54);
        EXPECT(gbc.pc(), 0x2e40);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C0 03AD
        gbc.setState(0x34bf, 0x2f65, 0xf750, 0x1e20, 0x3a2c, 0x5b8a, 0x0, 0x1);
        gbc.writeMem(0x34bf, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0x5b);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0x2f65);
        EXPECT(gbc.pc(), 0x34c1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C0 03AE
        gbc.setState(0x747f, 0x72ed, 0x3510, 0x4e14, 0x4da9, 0x609c, 0x1, 0x0);
        gbc.writeMem(0x747f, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x35);
        EXPECT(gbc.b(),  0x4f);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0x4d);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0x60);
        EXPECT(gbc.l(),  0x9c);
        EXPECT(gbc.sp(), 0x72ed);
        EXPECT(gbc.pc(), 0x7481);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C0 03AF
        gbc.setState(0xe9bd, 0xe1e6, 0x7de0, 0xf7cc, 0x94d5, 0x8bf9, 0x0, 0x1);
        gbc.writeMem(0xe9bd, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x7d);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0xcc);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0xd5);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0xe1e6);
        EXPECT(gbc.pc(), 0xe9bf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe9bd), 0xcb);
        EXPECT(gbc.readMem(0xe9be), 0xc0);
        // CB C0 03B1
        gbc.setState(0x32e1, 0xbf94, 0x5430, 0x5ff2, 0xeab0, 0xb081, 0x1, 0x0);
        gbc.writeMem(0x32e1, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x54);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0xf2);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0xbf94);
        EXPECT(gbc.pc(), 0x32e3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C0 03B3
        gbc.setState(0x6ae1, 0x3957, 0x5630, 0xa90d, 0x5211, 0x6414, 0x0, 0x0);
        gbc.writeMem(0x6ae1, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0xa9);
        EXPECT(gbc.c(),  0xd);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0x64);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0x3957);
        EXPECT(gbc.pc(), 0x6ae3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C0 03B4
        gbc.setState(0x3bb, 0x1273, 0x43b0, 0x3f8, 0x5b9f, 0xd294, 0x1, 0x1);
        gbc.writeMem(0x3bb, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x43);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0xf8);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0x9f);
        EXPECT(gbc.h(),  0xd2);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0x1273);
        EXPECT(gbc.pc(), 0x3bd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C0 03B5
        gbc.setState(0x3f1, 0xd38, 0x49b0, 0x25ad, 0x931b, 0x4a5f, 0x1, 0x0);
        gbc.writeMem(0x3f1, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0x93);
        EXPECT(gbc.e(),  0x1b);
        EXPECT(gbc.h(),  0x4a);
        EXPECT(gbc.l(),  0x5f);
        EXPECT(gbc.sp(), 0xd38);
        EXPECT(gbc.pc(), 0x3f3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C0 03B6
        gbc.setState(0xe9bc, 0x95d3, 0xa150, 0xa520, 0xbf18, 0xf3f5, 0x0, 0x0);
        gbc.writeMem(0xe9bc, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa1);
        EXPECT(gbc.b(),  0xa5);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0xbf);
        EXPECT(gbc.e(),  0x18);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0x95d3);
        EXPECT(gbc.pc(), 0xe9be);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe9bc), 0xcb);
        EXPECT(gbc.readMem(0xe9bd), 0xc0);
        // CB C0 03B7
        gbc.setState(0xb081, 0xb9cb, 0xb640, 0x26ad, 0xd78, 0xc50c, 0x0, 0x1);
        gbc.writeMem(0xb081, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0xd);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0xb9cb);
        EXPECT(gbc.pc(), 0xb083);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb081), 0xcb);
        EXPECT(gbc.readMem(0xb082), 0xc0);
        // CB C0 03B8
        gbc.setState(0x3c94, 0x676f, 0xb1b0, 0x287b, 0x97c0, 0x4eac, 0x1, 0x1);
        gbc.writeMem(0x3c94, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0xc0);
        EXPECT(gbc.h(),  0x4e);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0x676f);
        EXPECT(gbc.pc(), 0x3c96);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C0 03B9
        gbc.setState(0x794c, 0x24a, 0x10c0, 0xf9b5, 0x4917, 0x221, 0x0, 0x0);
        gbc.writeMem(0x794c, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x10);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0x17);
        EXPECT(gbc.h(),  0x2);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0x24a);
        EXPECT(gbc.pc(), 0x794e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C0 03BA
        gbc.setState(0xef03, 0x93ce, 0x3ed0, 0x9c2, 0x3a94, 0x9944, 0x1, 0x0);
        gbc.writeMem(0xef03, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0x93ce);
        EXPECT(gbc.pc(), 0xef05);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xef03), 0xcb);
        EXPECT(gbc.readMem(0xef04), 0xc0);
        // CB C0 03BB
        gbc.setState(0xf25, 0x2d30, 0xd180, 0xd82a, 0x504d, 0x7663, 0x0, 0x0);
        gbc.writeMem(0xf25, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd1);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0x50);
        EXPECT(gbc.e(),  0x4d);
        EXPECT(gbc.h(),  0x76);
        EXPECT(gbc.l(),  0x63);
        EXPECT(gbc.sp(), 0x2d30);
        EXPECT(gbc.pc(), 0xf27);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C0 03BC
        gbc.setState(0x93bd, 0x2875, 0xb6e0, 0xc2d, 0xfd86, 0x5cd3, 0x1, 0x0);
        gbc.writeMem(0x93bd, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0xd);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0xfd);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0x5c);
        EXPECT(gbc.l(),  0xd3);
        EXPECT(gbc.sp(), 0x2875);
        EXPECT(gbc.pc(), 0x93bf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x93bd), 0xcb);
        EXPECT(gbc.readMem(0x93be), 0xc0);
        // CB C0 03BD
        gbc.setState(0x242, 0xdfb5, 0x8420, 0x1400, 0x6a37, 0xf7a7, 0x0, 0x0);
        gbc.writeMem(0x242, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x84);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0x6a);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0xf7);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0xdfb5);
        EXPECT(gbc.pc(), 0x244);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C0 03BE
        gbc.setState(0x30a2, 0xc6ba, 0xea80, 0x8340, 0x71ea, 0xc54b, 0x0, 0x0);
        gbc.writeMem(0x30a2, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0x83);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0x71);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0x4b);
        EXPECT(gbc.sp(), 0xc6ba);
        EXPECT(gbc.pc(), 0x30a4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C0 03BF
        gbc.setState(0x42e0, 0xf9a, 0xe940, 0x6035, 0x66fd, 0xc19d, 0x0, 0x0);
        gbc.writeMem(0x42e0, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe9);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0x66);
        EXPECT(gbc.e(),  0xfd);
        EXPECT(gbc.h(),  0xc1);
        EXPECT(gbc.l(),  0x9d);
        EXPECT(gbc.sp(), 0xf9a);
        EXPECT(gbc.pc(), 0x42e2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C0 03C0
        gbc.setState(0x6f9b, 0xf346, 0xbe60, 0xfe41, 0x8e62, 0x529, 0x1, 0x0);
        gbc.writeMem(0x6f9b, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0xff);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0xf346);
        EXPECT(gbc.pc(), 0x6f9d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C0 03C1
        gbc.setState(0x1d75, 0xbd62, 0x8d40, 0x6e51, 0xd74e, 0xb80, 0x1, 0x1);
        gbc.writeMem(0x1d75, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0x6f);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0x80);
        EXPECT(gbc.sp(), 0xbd62);
        EXPECT(gbc.pc(), 0x1d77);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C0 03C2
        gbc.setState(0x397f, 0xad64, 0xbb60, 0xf317, 0xc460, 0x760f, 0x0, 0x1);
        gbc.writeMem(0x397f, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0xf3);
        EXPECT(gbc.c(),  0x17);
        EXPECT(gbc.d(),  0xc4);
        EXPECT(gbc.e(),  0x60);
        EXPECT(gbc.h(),  0x76);
        EXPECT(gbc.l(),  0xf);
        EXPECT(gbc.sp(), 0xad64);
        EXPECT(gbc.pc(), 0x3981);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C0 03C3
        gbc.setState(0x6c7b, 0xdc48, 0x9e30, 0x2ec0, 0x4ba4, 0xd48, 0x0, 0x1);
        gbc.writeMem(0x6c7b, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0xa4);
        EXPECT(gbc.h(),  0xd);
        EXPECT(gbc.l(),  0x48);
        EXPECT(gbc.sp(), 0xdc48);
        EXPECT(gbc.pc(), 0x6c7d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C0 03C4
        gbc.setState(0x26b4, 0xec2d, 0x1920, 0xa701, 0x384a, 0x4519, 0x1, 0x0);
        gbc.writeMem(0x26b4, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x19);
        EXPECT(gbc.b(),  0xa7);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0x38);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0x45);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0xec2d);
        EXPECT(gbc.pc(), 0x26b6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C0 03C5
        gbc.setState(0x4f93, 0x3692, 0x1a00, 0x402a, 0xe7b0, 0xdbfa, 0x1, 0x0);
        gbc.writeMem(0x4f93, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x1a);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0xe7);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0xdb);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0x3692);
        EXPECT(gbc.pc(), 0x4f95);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C0 03C6
        gbc.setState(0xe9e0, 0xdc80, 0x3d80, 0xacea, 0xd4be, 0xd115, 0x0, 0x0);
        gbc.writeMem(0xe9e0, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x3d);
        EXPECT(gbc.b(),  0xad);
        EXPECT(gbc.c(),  0xea);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0xdc80);
        EXPECT(gbc.pc(), 0xe9e2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe9e0), 0xcb);
        EXPECT(gbc.readMem(0xe9e1), 0xc0);
        // CB C0 03C7
        gbc.setState(0x845d, 0x413, 0x85e0, 0x9784, 0x5b9a, 0x2c13, 0x0, 0x0);
        gbc.writeMem(0x845d, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x85);
        EXPECT(gbc.b(),  0x97);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0x413);
        EXPECT(gbc.pc(), 0x845f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x845d), 0xcb);
        EXPECT(gbc.readMem(0x845e), 0xc0);
        // CB C0 03C8
        gbc.setState(0xbdb4, 0x2031, 0xfa90, 0x337, 0x8be0, 0x1772, 0x0, 0x1);
        gbc.writeMem(0xbdb4, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xfa);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0x72);
        EXPECT(gbc.sp(), 0x2031);
        EXPECT(gbc.pc(), 0xbdb6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbdb4), 0xcb);
        EXPECT(gbc.readMem(0xbdb5), 0xc0);
        // CB C0 03C9
        gbc.setState(0x8c32, 0xce9d, 0xd400, 0xcc03, 0x757e, 0x7288, 0x1, 0x1);
        gbc.writeMem(0x8c32, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0x3);
        EXPECT(gbc.d(),  0x75);
        EXPECT(gbc.e(),  0x7e);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0x88);
        EXPECT(gbc.sp(), 0xce9d);
        EXPECT(gbc.pc(), 0x8c34);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8c32), 0xcb);
        EXPECT(gbc.readMem(0x8c33), 0xc0);
        // CB C0 03CA
        gbc.setState(0xdc14, 0xe2b4, 0x8660, 0xf47b, 0xd64c, 0x59a5, 0x0, 0x0);
        gbc.writeMem(0xdc14, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0xe2b4);
        EXPECT(gbc.pc(), 0xdc16);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdc14), 0xcb);
        EXPECT(gbc.readMem(0xdc15), 0xc0);
        // CB C0 03CB
        gbc.setState(0x9895, 0xe0d7, 0x96f0, 0x576, 0x2e78, 0x8ee1, 0x1, 0x1);
        gbc.writeMem(0x9895, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x96);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0x2e);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0xe0d7);
        EXPECT(gbc.pc(), 0x9897);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9895), 0xcb);
        EXPECT(gbc.readMem(0x9896), 0xc0);
        // CB C0 03CC
        gbc.setState(0x5266, 0xffc2, 0x63e0, 0xa9b3, 0xe8ef, 0x1481, 0x1, 0x1);
        gbc.writeMem(0x5266, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0xa9);
        EXPECT(gbc.c(),  0xb3);
        EXPECT(gbc.d(),  0xe8);
        EXPECT(gbc.e(),  0xef);
        EXPECT(gbc.h(),  0x14);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0xffc2);
        EXPECT(gbc.pc(), 0x5268);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C0 03CD
        gbc.setState(0x4bdf, 0xb174, 0x43b0, 0x8d0, 0x4304, 0x85ac, 0x1, 0x1);
        gbc.writeMem(0x4bdf, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x43);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0x4);
        EXPECT(gbc.h(),  0x85);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0xb174);
        EXPECT(gbc.pc(), 0x4be1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C0 03CE
        gbc.setState(0x4dce, 0x9acd, 0xcd0, 0xd06c, 0x7a0c, 0xffcc, 0x1, 0x0);
        gbc.writeMem(0x4dce, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0xff);
        EXPECT(gbc.l(),  0xcc);
        EXPECT(gbc.sp(), 0x9acd);
        EXPECT(gbc.pc(), 0x4dd0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C0 03CF
        gbc.setState(0x1a12, 0xfd2, 0x67b0, 0xb36c, 0x5e24, 0xea82, 0x0, 0x0);
        gbc.writeMem(0x1a12, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x67);
        EXPECT(gbc.b(),  0xb3);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0x24);
        EXPECT(gbc.h(),  0xea);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0xfd2);
        EXPECT(gbc.pc(), 0x1a14);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C0 03D0
        gbc.setState(0x4585, 0x508b, 0x3aa0, 0x4077, 0x1779, 0xedca, 0x1, 0x0);
        gbc.writeMem(0x4585, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0x77);
        EXPECT(gbc.d(),  0x17);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0xed);
        EXPECT(gbc.l(),  0xca);
        EXPECT(gbc.sp(), 0x508b);
        EXPECT(gbc.pc(), 0x4587);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C0 03D1
        gbc.setState(0x4e31, 0x3000, 0xe0f0, 0xe698, 0x984b, 0xf061, 0x0, 0x0);
        gbc.writeMem(0x4e31, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe0);
        EXPECT(gbc.b(),  0xe7);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0x98);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0x61);
        EXPECT(gbc.sp(), 0x3000);
        EXPECT(gbc.pc(), 0x4e33);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C0 03D2
        gbc.setState(0x311c, 0xa11f, 0x7b10, 0x1241, 0xcb6a, 0x1ce, 0x1, 0x1);
        gbc.writeMem(0x311c, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0x6a);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0xa11f);
        EXPECT(gbc.pc(), 0x311e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C0 03D3
        gbc.setState(0x3c64, 0x80ff, 0xe8e0, 0xf87d, 0x617, 0x4e73, 0x1, 0x0);
        gbc.writeMem(0x3c64, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0x6);
        EXPECT(gbc.e(),  0x17);
        EXPECT(gbc.h(),  0x4e);
        EXPECT(gbc.l(),  0x73);
        EXPECT(gbc.sp(), 0x80ff);
        EXPECT(gbc.pc(), 0x3c66);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C0 03D4
        gbc.setState(0xba6c, 0x4aae, 0x16a0, 0x711, 0x102a, 0xdda6, 0x0, 0x1);
        gbc.writeMem(0xba6c, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x16);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0x11);
        EXPECT(gbc.d(),  0x10);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0xa6);
        EXPECT(gbc.sp(), 0x4aae);
        EXPECT(gbc.pc(), 0xba6e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xba6c), 0xcb);
        EXPECT(gbc.readMem(0xba6d), 0xc0);
        // CB C0 03D6
        gbc.setState(0xef26, 0x70d3, 0x2660, 0x6008, 0x5dab, 0x59c7, 0x0, 0x0);
        gbc.writeMem(0xef26, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0x5d);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0xc7);
        EXPECT(gbc.sp(), 0x70d3);
        EXPECT(gbc.pc(), 0xef28);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xef26), 0xcb);
        EXPECT(gbc.readMem(0xef27), 0xc0);
        // CB C0 03D7
        gbc.setState(0x1326, 0x21ca, 0xf0a0, 0xdc39, 0x9619, 0x2750, 0x0, 0x1);
        gbc.writeMem(0x1326, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf0);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0x19);
        EXPECT(gbc.h(),  0x27);
        EXPECT(gbc.l(),  0x50);
        EXPECT(gbc.sp(), 0x21ca);
        EXPECT(gbc.pc(), 0x1328);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C0 03D8
        gbc.setState(0x4446, 0x49d1, 0xd3b0, 0x6537, 0x6372, 0x9ca0, 0x1, 0x0);
        gbc.writeMem(0x4446, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd3);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0x63);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0x49d1);
        EXPECT(gbc.pc(), 0x4448);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C0 03DA
        gbc.setState(0x66ba, 0x9bc8, 0x6550, 0x7eb1, 0x1f41, 0x6bd, 0x0, 0x0);
        gbc.writeMem(0x66ba, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x65);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0xb1);
        EXPECT(gbc.d(),  0x1f);
        EXPECT(gbc.e(),  0x41);
        EXPECT(gbc.h(),  0x6);
        EXPECT(gbc.l(),  0xbd);
        EXPECT(gbc.sp(), 0x9bc8);
        EXPECT(gbc.pc(), 0x66bc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C0 03DB
        gbc.setState(0x6f5d, 0x4bbc, 0xc550, 0x13fe, 0x5a25, 0xfd7e, 0x0, 0x1);
        gbc.writeMem(0x6f5d, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xc5);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0xfd);
        EXPECT(gbc.l(),  0x7e);
        EXPECT(gbc.sp(), 0x4bbc);
        EXPECT(gbc.pc(), 0x6f5f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C0 03DC
        gbc.setState(0x4ad6, 0x59e4, 0x7ea0, 0x963d, 0xe553, 0xaa02, 0x1, 0x1);
        gbc.writeMem(0x4ad6, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0x97);
        EXPECT(gbc.c(),  0x3d);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0x53);
        EXPECT(gbc.h(),  0xaa);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0x59e4);
        EXPECT(gbc.pc(), 0x4ad8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C0 03DD
        gbc.setState(0x658a, 0x87bb, 0x45f0, 0xbebb, 0x8ba9, 0xc95b, 0x0, 0x0);
        gbc.writeMem(0x658a, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0xbf);
        EXPECT(gbc.c(),  0xbb);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0x5b);
        EXPECT(gbc.sp(), 0x87bb);
        EXPECT(gbc.pc(), 0x658c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C0 03DE
        gbc.setState(0x8c1, 0xefd8, 0x2630, 0x470e, 0xb7d5, 0xbf53, 0x1, 0x0);
        gbc.writeMem(0x8c1, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0xd5);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0xefd8);
        EXPECT(gbc.pc(), 0x8c3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C0 03DF
        gbc.setState(0xde8e, 0x5fcc, 0xbc70, 0xcfa5, 0x3cf4, 0x308d, 0x0, 0x0);
        gbc.writeMem(0xde8e, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0xcf);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0x30);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0x5fcc);
        EXPECT(gbc.pc(), 0xde90);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xde8e), 0xcb);
        EXPECT(gbc.readMem(0xde8f), 0xc0);
        // CB C0 03E0
        gbc.setState(0x4ffc, 0x2690, 0x7dd0, 0x86ce, 0x22d2, 0x20e8, 0x0, 0x1);
        gbc.writeMem(0x4ffc, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x7d);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0x20);
        EXPECT(gbc.l(),  0xe8);
        EXPECT(gbc.sp(), 0x2690);
        EXPECT(gbc.pc(), 0x4ffe);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C0 03E1
        gbc.setState(0x121c, 0x6fda, 0x29f0, 0x458e, 0xb0dd, 0xfdc7, 0x1, 0x1);
        gbc.writeMem(0x121c, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0x8e);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0xfd);
        EXPECT(gbc.l(),  0xc7);
        EXPECT(gbc.sp(), 0x6fda);
        EXPECT(gbc.pc(), 0x121e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C0 03E2
        gbc.setState(0x91e0, 0x9184, 0xe590, 0xbb93, 0xd61c, 0x34bf, 0x1, 0x1);
        gbc.writeMem(0x91e0, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe5);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0x93);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0x34);
        EXPECT(gbc.l(),  0xbf);
        EXPECT(gbc.sp(), 0x9184);
        EXPECT(gbc.pc(), 0x91e2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x91e0), 0xcb);
        EXPECT(gbc.readMem(0x91e1), 0xc0);
        // CB C0 03E3
        gbc.setState(0xad01, 0x7b09, 0x2760, 0xac48, 0x369d, 0x6bbd, 0x0, 0x1);
        gbc.writeMem(0xad01, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x27);
        EXPECT(gbc.b(),  0xad);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0x9d);
        EXPECT(gbc.h(),  0x6b);
        EXPECT(gbc.l(),  0xbd);
        EXPECT(gbc.sp(), 0x7b09);
        EXPECT(gbc.pc(), 0xad03);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xad01), 0xcb);
        EXPECT(gbc.readMem(0xad02), 0xc0);
        // CB C0 03E4
        gbc.setState(0x286e, 0xf7bb, 0xc330, 0x472e, 0xc67b, 0x69ee, 0x0, 0x0);
        gbc.writeMem(0x286e, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xc3);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0x2e);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0x69);
        EXPECT(gbc.l(),  0xee);
        EXPECT(gbc.sp(), 0xf7bb);
        EXPECT(gbc.pc(), 0x2870);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C0 03E5
        gbc.setState(0x3f26, 0x845d, 0xa320, 0xd7b4, 0x80f1, 0x4852, 0x0, 0x0);
        gbc.writeMem(0x3f26, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa3);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0xb4);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0x48);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0x845d);
        EXPECT(gbc.pc(), 0x3f28);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C0 03E6
        gbc.setState(0xc537, 0xf642, 0x1700, 0x710d, 0xa384, 0xe499, 0x0, 0x0);
        gbc.writeMem(0xc537, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x17);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0xd);
        EXPECT(gbc.d(),  0xa3);
        EXPECT(gbc.e(),  0x84);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0x99);
        EXPECT(gbc.sp(), 0xf642);
        EXPECT(gbc.pc(), 0xc539);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc537), 0xcb);
        EXPECT(gbc.readMem(0xc538), 0xc0);
        // CB C0 03E7
        gbc.setState(0x3236, 0xfae8, 0xaa0, 0x3f, 0x212, 0xdeb0, 0x1, 0x1);
        gbc.writeMem(0x3236, { 0xcb, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0x3f);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0xfae8);
        EXPECT(gbc.pc(), 0x3238);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
    }
